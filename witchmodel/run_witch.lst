GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 1
WITCH 5.2.0
C o m p i l a t i o n


  13   
  14  *-------------------------------------------------------------------------------
  15  * WITCH CONFIGURATION
  16  *-------------------------------------------------------------------------------
  17   
  18  * DATA SETUP
  19   
  20  * Regional mapping (r5, witch13, witch17, ...)
  22   
  23  * Data path suffix
  25   
  26  * Location of the data gdx files
  29   
  30  * BASELINE SETUP
  31   
  32  * Baseline scenario (ssp1, ssp2*, ssp3, ssp4, ssp5)
  34   
  35  * POLICY SETUP
  36   
  37  * Default policy is BAU, for other policy see core_policy.gms
  39   
  40  * COOPERATION SETUP
  41   
  42  * Cooperation type (noncoop, coop)
  43  *  noncoop: non-cooperative, each region is a coalition
  44  *  coop: fully cooperative, one world coalition
  46   
  47  * GDX SETUP
  48   
  49  * Starting gdx
  51   
  52  * Set BAU GDX for losses calculation
  54   
  55  * Toggle and set GDX to fix variables
  56  *$setglobal fixgdx %baugdx%
  57   
  58  * SOLVING SETUP
  59   
  60  * Don't solve the models
  61  *$setglobal nosolve
  62  * Solve only one region
  63  *$setglobal only_solve c_usa
  64   
  65  * OUTPUT SETUP
  66   
  67  * Set output name
  69  * Make an output gdx with the given name
  71   
  72  * CALIBRATION
  73   
  79   
  80  * MODEL SETUP
  81   
  82  * Enable climate equations
  83  *$setglobal solve_climate
  84   
  85  * Enable feedback
  86  *$setglobal damage_feedback
  87   
  88  * Toggle adaptation
  89  *$setglobal adaptation 'YES'
  90   
  91   
  92   
  93  *-------------------------------------------------------------------------------
  94  * DIRECTORY FOR OUTPUT [default = current directory]
  95  *-------------------------------------------------------------------------------
  96   
  97  * directory for outputs
 101   
 102  *-------------------------------------------------------------------------------
 103  * GENERATE - SOLVE - REPORT WITCH
 104  *-------------------------------------------------------------------------------
 105   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
 107  *-------------------------------------------------------------------------------
 108  * Call modules by order
 109  *-------------------------------------------------------------------------------
 113   
 114  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
 116  *-------------------------------------------------------------------------------
 117  * Algorithm
 118  *-------------------------------------------------------------------------------
 119   
 121   
 122  * Required conf variables
 126   
 127  * Convergence algorithm
 129  *$setglobal algo 'taton' # Tatonnement algorithm
 130   
 131  * Stopping convergence criteria if all coalitions are {optimal|feasible}
 133   
 134  * Toggle GDX generation at each Nash iteration [for debugging purpose]
 135  *$setglobal outgdx_iter
 136   
 137  * Maximum number of nash-loop iterations
 139   
 140  * Minimum number of nash-loop iterations
 142  * Seconds to wait between solution checks in the nash
 144  * Max seconds to wait for solutions in the nash loop
 146  * Max solver iterations
 148   
 149  * Solve statement parameters
 153   
 154  * ADMM algorithm parameters
 155  * Initial value for rho in the oil market
 157  * Initial value for rho in the carbon markets
 159   
 160  * Nosolve = one Nash-loop iteration, zero solver iterations, zero reruns, in-memory
 162   
 163  *-------------------------------------------------------------------------------
 165   
 166  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
 168  *-------------------------------------------------------------------------------
 169  * Time
 170  * - Temporal structure
 171  * - Fixed time periods
 172  * - States of the world
 173  *-------------------------------------------------------------------------------
 174   
 176   
 177  * Default fixgdx
 186   
 187  * Value in a specific year (use tt instead of t, not working in equations)
 188  $macro valuein(takeyear, expr) (smax(tt$(year(tt) eq &takeyear), &expr))
 189   
 190  *-------------------------------------------------------------------------------
 192   
 193  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
 195  *-------------------------------------------------------------------------------
 196  * Geographic dimension and mapping with countries
 197  *-------------------------------------------------------------------------------
 198   
 200   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\regions.conf
 204   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
 207  *-------------------------------------------------------------------------------
 208  * Non-Cooperative Setup
 209  *
 210  * Each region is defined as an individual coalition.
 211  *
 212  *-------------------------------------------------------------------------------
 213   
 215   
 216  * Each region is a coalition
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\noncoop.conf
 220   
 221  * Each coalition cooperates on climate within itself
 223   
 225   
 226  *-------------------------------------------------------------------------------
 228   
 229  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
 231  *-------------------------------------------------------------------------------
 232  * Welfare
 233  *-------------------------------------------------------------------------------
 234   
 236   
 237  * Default option: utilitarian, gamma=0
 238  * [if utilitarian not set, negishi weigths are used]
 243   
 244  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
 247  *-------------------------------------------------------------------------------
 248  * Economy
 249  * - Production and Consumption definition
 250  * - Top-level of the production function
 251  * Options:
 252  * --original_ssp=1 : original SSP population and GDP data
 253  *-------------------------------------------------------------------------------
 254   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
 257  *-------------------------------------------------------------------------------
 258  * Energy sector
 259  *-------------------------------------------------------------------------------
 260   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
 263  *-------------------------------------------------------------------------------
 264  * Carbon Emissions
 265  * - Total CO2 emissions and CO2 Fossil fuel and Industry
 266  * - CO2 emission costs
 267  * - GHG permit market
 268  *-------------------------------------------------------------------------------
 269   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
 272  *-------------------------------------------------------------------------------
 273  * Research & Development
 274  * Options:
 275  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
 276  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
 277  *-------------------------------------------------------------------------------
 278   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
 281  *-------------------------------------------------------------------------------
 282  * Default Climate Policy Implementation
 283  *
 284  * Options:
 285  *    --policy={bau (default),ctax}
 286  *        Implement a climate policy setting
 287  *  [ --scen= ]
 288  *        Policy variant.
 289  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
 290  *          * XXX for a fixed percentage/yr (e.g. 5) growth
 291  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
 292  *  [ --ctax_year=2020 ]
 293  *        Starting year of the carbon tax
 294  *  [ --ctax_initial=30 ]
 295  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
 296  *
 297  *-------------------------------------------------------------------------------
 299   
 300  * Carbon tax default options
 302   
 303  *-------------------------------------------------------------------------------
 305   
 306  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
 308  *-------------------------------------------------------------------------------
 309  * Energy efficiency
 310  *-------------------------------------------------------------------------------
 311   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
 314  *-------------------------------------------------------------------------------
 315  * Hydro Power
 316  *-------------------------------------------------------------------------------
 317   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
 320  *-------------------------------------------------------------------------------
 321  * System Integration:
 322  * - Capacity constraint
 323  * - Flexibility constraint
 324  * - Grid Investment
 325  * - Capacity growth constraint
 326  *-------------------------------------------------------------------------------
 327   
 329   
 333   
 334  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
 337  *-------------------------------------------------------------------------------
 338  * Nuclear power plants
 339  *-------------------------------------------------------------------------------
 340   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
 343  *-------------------------------------------------------------------------------
 344  * GHG module
 345  * - CH4 FFI + CH4 waste + CH4 open fires
 346  * - N2O FFI + N2O waste + N2O open fires
 347  *-------------------------------------------------------------------------------
 348   
 350   
 351  * Define the oghg baseline data source
 357   
 358  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
 361  *-------------------------------------------------------------------------------
 362  * F-gases
 363  * - LLF
 364  * - SLF
 365  *-------------------------------------------------------------------------------
 366   
 368   
 369  * Define the fgases baseline data source
 375   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
 378  *-------------------------------------------------------------------------------
 379  * Landuse [simplified version of the land-use model]
 380  *-------------------------------------------------------------------------------
 381   
 383   
 384  * Define the land-use baseline data source
 390   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
 393  *-------------------------------------------------------------------------------
 394  * Bioenergy power plant
 395  *-------------------------------------------------------------------------------
 396   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
 399  *-------------------------------------------------------------------------------
 400  * Traditional Biofuels
 401  * - Requires the precedence of mod_landuse
 402  *-------------------------------------------------------------------------------
 403   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
 406  *-------------------------------------------------------------------------------
 407  * Advanced biofuel
 408  * - Require the precedence of mod_landuse
 409  *-------------------------------------------------------------------------------
 410   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
 413  *-------------------------------------------------------------------------------
 414  * Carbon Capture and Sequestration
 415  *-------------------------------------------------------------------------------
 416   
 418   
 419  * Assumption for leakage in % per year --leak_input=0.0001
 421   
 422  * Value estimates to consider (low,best,high)
 425   
 426  *-------------------------------------------------------------------------------
 427   
 429   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
 431  *-------------------------------------------------------------------------------
 432  * Coal for non-electric sectors
 433  * - Coke Plants
 434  * - Industrial and Commercial combined-heat-and-power (CHP)
 435  * - Others
 436  *-------------------------------------------------------------------------------
 437   
 439   
 440  * Baseline nelcoal yearly growth rate [%]
 444  *$if %baseline%==ssp1 $setglobal nelcoal_basegr (-1.2)
 445   
 446  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
 449  *-------------------------------------------------------------------------------
 450  * Wind energy module
 451  * - onshore and offshore
 452  *-------------------------------------------------------------------------------
 453   
 455   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
 457  *-------------------------------------------------------------------------------
 458  * Solar Powerplants (PV and CSP) to the electrical system
 459  *-------------------------------------------------------------------------------
 460   
 461  *-------------------------------------------------------------------------------
 463   
 464  * Number of solar classes: full (26) or reduced (5)
 466   
 467  *-------------------------------------------------------------------------------
 469   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
 471  *-------------------------------------------------------------------------------
 472  * Technology development scenarios
 473  *-------------------------------------------------------------------------------
 474   
 476   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
 478  *-------------------------------------------------------------------------------
 479  * Oil Extraction
 480  * Options:
 481  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
 482  *-------------------------------------------------------------------------------
 483   
 485   
 486  * Define default resource availability levels for baseline
 492   
 493  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
 496  *-------------------------------------------------------------------------------
 497  * Uranium Resources
 498  *-------------------------------------------------------------------------------
 499   
 501   
 502  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
 505  *-------------------------------------------------------------------------------
 506  * Gas Resources
 507  *-------------------------------------------------------------------------------
 508   
 510   
 511  * Define default resource availability levels for baseline
 519   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
 522  *-------------------------------------------------------------------------------
 523  * Coal Resources
 524  *-------------------------------------------------------------------------------
 525   
 527   
 528  * Define default resource availability levels for baseline
 536   
 537  *-------------------------------------------------------------------------------
 539   
 540   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
 542  *-------------------------------------------------------------------------------
 543  * Climate
 544  *
 545  * Represents the climate
 546  * - based on the DICE model equations
 547  * - Radiative forcing for non CO2 ghgs
 548  * - parameters calibrated to reproduce MAGICC6.4 default response
 549  *
 550  *  Options:
 551  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
 552  * - $setglobal cooperate_on_climate {'YES','NO'}
 553  * - 'YES'(default): Countries within a coalition act in cooperation
 554  *   'NO': Countries within a coalition act individually
 555  *
 556  *-------------------------------------------------------------------------------
 557   
 559   
 560  * Check requirements
 562   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
 565  *-------------------------------------------------------------------------------
 566  * Long-run Damages from Climate Change
 567  * - Economic impacts
 568  * - Adaptation
 569  *-------------------------------------------------------------------------------
 570   
 572   
 573  * Define adaptation efficacy
 578   
 579  * Check requirements
 582   
 584   
 585  * Define damage cost function
 587   
 589   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
 591  *-------------------------------------------------------------------------------
 592  * Light-duty Vehicles for Personal Transport
 593  *-------------------------------------------------------------------------------
 594   
 596   
 597  * Define the transport baseline
 599   
 600  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
 603  *-------------------------------------------------------------------------------
 604  * Road Freight Transport
 605  *-------------------------------------------------------------------------------
 607   
 608   
 609   
 610   
 611   
 612   
 613  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
 615  *-------------------------------------------------------------------------------
 616  * Traditional Biomass
 617  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
 618  *  - require post_process to be launch before
 619  *-------------------------------------------------------------------------------
 620   
 622   
 623  * Optional modules
 624   
 625  * Policy modules
 626   
 627  * Calibration
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\macros.gms
 631  *-------------------------------------------------------------------------------
 632  * macros.gms
 633  *
 634  * Define macros to simplify complex and repetitive expressions
 635  *-------------------------------------------------------------------------------
 636   
 637  * Build a polynomial expression
 638  set polydeg 'Set of polynomial degrees' / deg0*deg11 /;
 639  $macro poly(x,coeff) sum(polydeg$(coeff), (coeff)*(x)**(ord(polydeg)-1))
 640   
 641  * Sum expression, defined with the set 'ss', over the subset 'sd'
 642  $macro cast(expression,ss,sd) sum(&ss$(sameas(&ss,&sd)), &expression)
 643   
 644  * Return true (>0), if the set 'small' belongs to the set 'big'
 645  $macro xiny(small,big) sum(&big$sameas(&big,&small),1)
 646   
 647  *-------------------------------------------------------------------------------
 648  * Specific macros
 649   
 650  * Sum child in the CES tree, in post_tables.gms
 651  $macro sumjchild(x,jset,anode) sum(j$map_j(&anode,j), cast(&x,&jset,j))
 652   
 653  * store model results, in solve_macros.gms
 654  $macro savereport(reg) solrep('&reg','objval')=witch_&reg.objval;\
 655                         solrep('&reg','solvestat')=witch_&reg.solvestat;\
 656                         solrep('&reg','modelstat')=witch_&reg.modelstat;\
 657                         solrep('&reg','iterusd')=witch_&reg.iterusd;\
 658                         solrep('&reg','resusd')=witch_&reg.resusd;\
 659                         solrep('&reg','numvar')=witch_&reg.numvar;\
 660                         solrep('&reg','numequ')=witch_&reg.numequ;\
 661                         solrep('&reg','numnz')=witch_&reg.numnz;\
 662                         solrep('&reg','numvarproj')=witch_&reg.numvarproj;\
 663                         solrep('&reg','numinfes')=witch_&reg.numinfes;\
 664                         solrep('&reg','numnopt')=witch_&reg.numnopt;\
 665                         solrep('&reg','domusd')=witch_&reg.domusd;
 666   
 667  * Select numiter iterations
 668  $macro last_iter(numiter) ((ord(ssiter) le ord(siter)) and (ord(ssiter) ge (ord(siter) - (&numiter - 1))))
 669   
 670  *-------------------------------------------------------------------------------
 671  * Load variables from startgdx
 672   
 673  * Read and set the variable level from the start GDX,
 674  * if the level is not found in the gdx, default is used
 675  $macro loadvar(var,setdep,default) \
 676  prevexecerrors = execerror; last_load_went_wrong=0; \
 677  execute_load 'data_witch17/results_ssp2_calib', &var; \
 678  if(execerror gt prevexecerrors, \
 679    &var.l&&setdep = &default; \
 680    execerror = prevexecerrors; \
 681    last_load_went_wrong=1)
 682   
 683  * Load variable level and specify bounds
 684  *   if the level is not found in the gdx, default is set as level
 685  $macro loadvarbnd(var,setdep,default,bndlo,bndup) \
 686  loadvar(var,setdep,default); \
 687  &var.lo&&setdep = &bndlo; \
 688  &var.up&&setdep = &bndup; \
 689  &var.l&&setdep$(&var.l&&setdep<&bndlo) = &bndlo; \
 690  &var.l&&setdep$(&var.l&&setdep>&bndup) = &bndup;
 691   
 692  $macro loadvarbndcond(var,setdep,cond,default,bndlo,bndup) \
 693  loadvar(var,'&&setdep$(&&cond)',default); \
 694  &var.lo&&setdep$(&&cond) = &bndlo; \
 695  &var.up&&setdep$(&&cond) = &bndup; \
 696  &var.l&&setdep$((&&cond) and (&var.l&&setdep<&bndlo)) = &bndlo; \
 697  &var.l&&setdep$((&&cond) and (&var.l&&setdep>&bndup)) = &bndup;
 698   
 699  * Load from the same parameter but with first ssp index. Name starts with ssp_
 700  $macro load_from_ssp(par,idx,ssp,suxfile) \
 701  parameter ssp_&par(*,&&idx); \
 702  execute_loaddc 'data_witch17/data_&suxfile' ssp_&par; \
 703  &par(&&idx) = ssp_&par('&ssp',&&idx);
 704   
 705  * Tracking error parameters
 706  parameter prevexecerrors, last_load_went_wrong;
 707   
 708  *-------------------------------------------------------------------------------
 709  * log some message
 710  file output;
 711  $macro putlog(msg) \
 712    put output; \
 713    put_utility 'log' / &msg; \
 714    putclose output;
 715   
 716  *-------------------------------------------------------------------------------
 717  * Load parameters from startgdx
 718   
 720  $macro loadpar(par,setdep,default) \
 721  prevexecerrors = execerror; last_load_went_wrong=0; \
 722  execute_load 'data_witch17/results_ssp2_calib', &par; \
 723  if(execerror gt prevexecerrors, &par&&setdep = &default; execerror = prevexecerrors; last_load_went_wrong=1)
 725   
 726  *-------------------------------------------------------------------------------
 727  * coalition
 728  $macro mapn(clt) map_clt_n(&clt,n)
 729  $macro mapnn(clt) map_clt_n(&clt,nn)
 730  * time horizon
 731  $macro mapn_th(clt) (map_clt_n(&clt,n) and (not tfix(t)) and (year(t) le yeoh))
 732  $macro mapn_th1(clt) (map_clt_n(&clt,n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))
 733  $macro mapn_th2(clt) (map_clt_n(&clt,n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh))
 734  $macro mapn_th1_last(clt) (map_clt_n(&clt,n) and \
 735        (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))
 736  $macro time_th1_last (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))
 737  * cooperation
 738  $macro cooprd (sum(clt$(map_clt_n(clt,n) and rd_cooperation(rd,clt)),1) eq 1)
 739  $macro nocooprd (sum(clt$(map_clt_n(clt,n) and rd_cooperation(rd,clt)),1) ne 1)
 740   
 741  *-------------------------------------------------------------------------------
 742  * Depreciation Rate [TW/TW/yr]
 743   
 744  * Let
 745  * A := integral over time of linear 1% depreciation until end of life (than full depreciation)
 746  *      = lifetime - 0.01/2 lifetime**2
 747  * B := integral over time of exponential depreciation
 748  *      = int((1-delta_en)^x, dx) = - 1/log(1-delta_en)
 749  * We find delta_en such that A = B
 750   
 751  $macro depreciation_rate(tech) 1 - exp( 1 / ( - lifetime(&tech,n) + (0.01/2) * lifetime(&tech,n)**2) )
 752   
 753  *-------------------------------------------------------------------------------
 754  * Production functions
 755   
 756  $macro cobb(out,fac1id,fac1exp,fac2id,fac2exp) \
 757      q0(&out,n)*( \
 758          (&fac1exp/q0(&fac1id,n))**(alpha(&fac1id,n))* \
 759          (&fac2exp/q0(&fac2id,n))**(alpha(&fac2id,n)) \
 760      )
 761   
 762  $macro ces(out,fac1id,fac1exp,fac2id,fac2exp) \
 763      q0(&out,n)*( \
 764          alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))**rho(&out,t)+ \
 765          alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n))**rho(&out,t) \
 766      )**(1/rho(&out,t))
 767   
 768  $macro ces3(out,fac1id,fac1exp,fac2id,fac2exp,fac3id,fac3exp) \
 769      q0(&out,n)*( \
 770          alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))**rho(&out,t)+ \
 771          alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n))**rho(&out,t)+ \
 772          alpha(&fac3id,n)*(&fac3exp/q0(&fac3id,n))**rho(&out,t) \
 773      )**(1/rho(&out,t))
 774   
 775  $macro lin(out,fac1id,fac1exp,fac2id,fac2exp) \
 776      q0(&out,n)*( \
 777          alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))+ \
 778          alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n)) \
 779      )
 780   
 781  $macro lin3(out,fac1id,fac1exp,fac2id,fac2exp,fac3id,fac3exp) \
 782      q0(&out,n)*( \
 783          alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))+ \
 784          alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n))+ \
 785          alpha(&fac3id,n)*(&fac3exp/q0(&fac3id,n)) \
 786      )
 787   
 788  *-------------------------------------------------------------------------------
 789  * Solve model
 790   
 791  $macro savereport_with_loadhandle(clt) \
 792    witch_&clt.handle = remh('&clt'); \
 793    execute_loadhandle witch_&clt; \
 794    savereport(&clt)
 795   
 796  $macro checkforproblems(clt) \
 797    if((solrep(&clt,'solvestat') ne 1) or (solrep(&clt,'modelstat') ne 2), \
 798      cproblem(&clt) = yes; \
 799    else cproblem(&clt) = no;)
 800   
 801  *-------------------------------------------------------------------------------
 802  * Frozen variables
 803   
 804  $macro freezevar(name,idx) \
 805  &name.fx&&idx = &name.l&&idx;
 806   
 807  $macro nullvar(name,idx) \
 808  &name.fx&&idx = 0;
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
 810  *-------------------------------------------------------------------------------
 811  * Call modules by order
 812  *-------------------------------------------------------------------------------
 816   
 817  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
 819  *-------------------------------------------------------------------------------
 820  * Algorithm
 821  *-------------------------------------------------------------------------------
 822   
 824   
 825  set ierr 'Entries used for checking convergence' / inv, pes, oil, nip, co2, wgt /;
 826   
 827  set siter 'Iteration index' / i1*i999 /;
 828  alias(siter, ssiter, sssiter);
 829   
 830  scalar timer      'Timer used to keep track of elapsed solve time';
 831  scalar stop_run   'Flag to signal final convergence or error in the run loop';
 832  scalar stop_nash  'Flag to signal final convergence or error in the Nash loop';
 833  scalar count_run  'Counter for runs';
 834   
 835  set conf 'model configuration'/
 836  'baseline'.'ssp2'
 837  'policy'.'bau'
 838  'datapath'.'data_witch17/'
 839  'regions'.'witch17'
 840  'n'.'witch17'
 841  'startgdx'.'data_witch17/results_ssp2_calib'
 842  'baugdx'.'data_witch17/results_ssp2_calib'
 843  'tfpgdx'.'data_witch17/data_tfp_ssp2'
 844  'calibgdx'.'data_witch17/data_calib'
 845  'nameout'.'eqq_emi_lim_usa_1e-3'
 846  'outgdx'.'results_eqq_emi_lim_usa_1e-3'
 848  /;
 849   
 850  *-------------------------------------------------------------------------------
 852   
 853  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
 855  *-------------------------------------------------------------------------------
 856  * Time
 857  * - Temporal structure
 858  * - Fixed time periods
 859  * - States of the world
 860  *-------------------------------------------------------------------------------
 861   
 863   
 864  * Time period node
 865  sets
 866      t           'Time period nodes'
 867      tnofirst(t) 'All nodes except the first time period node'
 868      tlast(t)    'Last time period nodes'
 869      tnolast(t)  'All nodes except the last time period nodes'
 870  ;
 871  singleton set tfirst(t)   'First time period node';
 872  alias(t,tt,ttt,tp1,ttp1,tp2,tm1,tm2);
 873  set pre(t,tp1)   'Precedence set, t is the predecessor of tp1';
 874  set preds(t,tt)   'Predecessors set, tt are all predecessors of t';
 875   
 876  parameter tperiod(t) 'time period';
 877  parameter year(t) 'reference year for period t';
 878  parameter begyear(t) 'beginning year for period t';
 879  parameter tlen(t) 'Length of time period [years]';
 880   
 881  * Time horizon for optimization
 882  scalar yeoh 'year end of time horizon';
 883   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\time.inc
 885  set t /
 886  1
 887  2
 888  3
 889  4
 890  5
 891  6
 892  7
 893  8
 894  9
 895  10
 896  11
 897  12
 898  13
 899  14
 900  15
 901  16
 902  17
 903  18
 904  19
 905  20
 906  21
 907  22
 908  23
 909  24
 910  25
 911  26
 912  27
 913  28
 914  29
 915  30
 916  /;
 917  set pre(t,tp1) /
 918  1.2
 919  2.3
 920  3.4
 921  4.5
 922  5.6
 923  6.7
 924  7.8
 925  8.9
 926  9.10
 927  10.11
 928  11.12
 929  12.13
 930  13.14
 931  14.15
 932  15.16
 933  16.17
 934  17.18
 935  18.19
 936  19.20
 937  20.21
 938  21.22
 939  22.23
 940  23.24
 941  24.25
 942  25.26
 943  26.27
 944  27.28
 945  28.29
 946  29.30
 947  /;
 948  tperiod('1')=1;
 949  tperiod('2')=2;
 950  tperiod('3')=3;
 951  tperiod('4')=4;
 952  tperiod('5')=5;
 953  tperiod('6')=6;
 954  tperiod('7')=7;
 955  tperiod('8')=8;
 956  tperiod('9')=9;
 957  tperiod('10')=10;
 958  tperiod('11')=11;
 959  tperiod('12')=12;
 960  tperiod('13')=13;
 961  tperiod('14')=14;
 962  tperiod('15')=15;
 963  tperiod('16')=16;
 964  tperiod('17')=17;
 965  tperiod('18')=18;
 966  tperiod('19')=19;
 967  tperiod('20')=20;
 968  tperiod('21')=21;
 969  tperiod('22')=22;
 970  tperiod('23')=23;
 971  tperiod('24')=24;
 972  tperiod('25')=25;
 973  tperiod('26')=26;
 974  tperiod('27')=27;
 975  tperiod('28')=28;
 976  tperiod('29')=29;
 977  tperiod('30')=30;
 978  year('1')=2005;
 979  year('2')=2010;
 980  year('3')=2015;
 981  year('4')=2020;
 982  year('5')=2025;
 983  year('6')=2030;
 984  year('7')=2035;
 985  year('8')=2040;
 986  year('9')=2045;
 987  year('10')=2050;
 988  year('11')=2055;
 989  year('12')=2060;
 990  year('13')=2065;
 991  year('14')=2070;
 992  year('15')=2075;
 993  year('16')=2080;
 994  year('17')=2085;
 995  year('18')=2090;
 996  year('19')=2095;
 997  year('20')=2100;
 998  year('21')=2105;
 999  year('22')=2110;
1000  year('23')=2115;
1001  year('24')=2120;
1002  year('25')=2125;
1003  year('26')=2130;
1004  year('27')=2135;
1005  year('28')=2140;
1006  year('29')=2145;
1007  year('30')=2150;
1008  tlen('1')=5;
1009  tlen('2')=5;
1010  tlen('3')=5;
1011  tlen('4')=5;
1012  tlen('5')=5;
1013  tlen('6')=5;
1014  tlen('7')=5;
1015  tlen('8')=5;
1016  tlen('9')=5;
1017  tlen('10')=5;
1018  tlen('11')=5;
1019  tlen('12')=5;
1020  tlen('13')=5;
1021  tlen('14')=5;
1022  tlen('15')=5;
1023  tlen('16')=5;
1024  tlen('17')=5;
1025  tlen('18')=5;
1026  tlen('19')=5;
1027  tlen('20')=5;
1028  tlen('21')=5;
1029  tlen('22')=5;
1030  tlen('23')=5;
1031  tlen('24')=5;
1032  tlen('25')=5;
1033  tlen('26')=5;
1034  tlen('27')=5;
1035  tlen('28')=5;
1036  tlen('29')=5;
1037  tlen('30')=5;
1038  begyear('1')=2003;
1039  begyear('2')=2008;
1040  begyear('3')=2013;
1041  begyear('4')=2018;
1042  begyear('5')=2023;
1043  begyear('6')=2028;
1044  begyear('7')=2033;
1045  begyear('8')=2038;
1046  begyear('9')=2043;
1047  begyear('10')=2048;
1048  begyear('11')=2053;
1049  begyear('12')=2058;
1050  begyear('13')=2063;
1051  begyear('14')=2068;
1052  begyear('15')=2073;
1053  begyear('16')=2078;
1054  begyear('17')=2083;
1055  begyear('18')=2088;
1056  begyear('19')=2093;
1057  begyear('20')=2098;
1058  begyear('21')=2103;
1059  begyear('22')=2108;
1060  begyear('23')=2113;
1061  begyear('24')=2118;
1062  begyear('25')=2123;
1063  begyear('26')=2128;
1064  begyear('27')=2133;
1065  begyear('28')=2138;
1066  begyear('29')=2143;
1067  begyear('30')=2148;
1068  preds('2','1')=yes;
1069  preds('3','1')=yes;
1070  preds('3','2')=yes;
1071  preds('4','1')=yes;
1072  preds('4','2')=yes;
1073  preds('4','3')=yes;
1074  preds('5','1')=yes;
1075  preds('5','2')=yes;
1076  preds('5','3')=yes;
1077  preds('5','4')=yes;
1078  preds('6','1')=yes;
1079  preds('6','2')=yes;
1080  preds('6','3')=yes;
1081  preds('6','4')=yes;
1082  preds('6','5')=yes;
1083  preds('7','1')=yes;
1084  preds('7','2')=yes;
1085  preds('7','3')=yes;
1086  preds('7','4')=yes;
1087  preds('7','5')=yes;
1088  preds('7','6')=yes;
1089  preds('8','1')=yes;
1090  preds('8','2')=yes;
1091  preds('8','3')=yes;
1092  preds('8','4')=yes;
1093  preds('8','5')=yes;
1094  preds('8','6')=yes;
1095  preds('8','7')=yes;
1096  preds('9','1')=yes;
1097  preds('9','2')=yes;
1098  preds('9','3')=yes;
1099  preds('9','4')=yes;
1100  preds('9','5')=yes;
1101  preds('9','6')=yes;
1102  preds('9','7')=yes;
1103  preds('9','8')=yes;
1104  preds('10','1')=yes;
1105  preds('10','2')=yes;
1106  preds('10','3')=yes;
1107  preds('10','4')=yes;
1108  preds('10','5')=yes;
1109  preds('10','6')=yes;
1110  preds('10','7')=yes;
1111  preds('10','8')=yes;
1112  preds('10','9')=yes;
1113  preds('11','1')=yes;
1114  preds('11','2')=yes;
1115  preds('11','3')=yes;
1116  preds('11','4')=yes;
1117  preds('11','5')=yes;
1118  preds('11','6')=yes;
1119  preds('11','7')=yes;
1120  preds('11','8')=yes;
1121  preds('11','9')=yes;
1122  preds('11','10')=yes;
1123  preds('12','1')=yes;
1124  preds('12','2')=yes;
1125  preds('12','3')=yes;
1126  preds('12','4')=yes;
1127  preds('12','5')=yes;
1128  preds('12','6')=yes;
1129  preds('12','7')=yes;
1130  preds('12','8')=yes;
1131  preds('12','9')=yes;
1132  preds('12','10')=yes;
1133  preds('12','11')=yes;
1134  preds('13','1')=yes;
1135  preds('13','2')=yes;
1136  preds('13','3')=yes;
1137  preds('13','4')=yes;
1138  preds('13','5')=yes;
1139  preds('13','6')=yes;
1140  preds('13','7')=yes;
1141  preds('13','8')=yes;
1142  preds('13','9')=yes;
1143  preds('13','10')=yes;
1144  preds('13','11')=yes;
1145  preds('13','12')=yes;
1146  preds('14','1')=yes;
1147  preds('14','2')=yes;
1148  preds('14','3')=yes;
1149  preds('14','4')=yes;
1150  preds('14','5')=yes;
1151  preds('14','6')=yes;
1152  preds('14','7')=yes;
1153  preds('14','8')=yes;
1154  preds('14','9')=yes;
1155  preds('14','10')=yes;
1156  preds('14','11')=yes;
1157  preds('14','12')=yes;
1158  preds('14','13')=yes;
1159  preds('15','1')=yes;
1160  preds('15','2')=yes;
1161  preds('15','3')=yes;
1162  preds('15','4')=yes;
1163  preds('15','5')=yes;
1164  preds('15','6')=yes;
1165  preds('15','7')=yes;
1166  preds('15','8')=yes;
1167  preds('15','9')=yes;
1168  preds('15','10')=yes;
1169  preds('15','11')=yes;
1170  preds('15','12')=yes;
1171  preds('15','13')=yes;
1172  preds('15','14')=yes;
1173  preds('16','1')=yes;
1174  preds('16','2')=yes;
1175  preds('16','3')=yes;
1176  preds('16','4')=yes;
1177  preds('16','5')=yes;
1178  preds('16','6')=yes;
1179  preds('16','7')=yes;
1180  preds('16','8')=yes;
1181  preds('16','9')=yes;
1182  preds('16','10')=yes;
1183  preds('16','11')=yes;
1184  preds('16','12')=yes;
1185  preds('16','13')=yes;
1186  preds('16','14')=yes;
1187  preds('16','15')=yes;
1188  preds('17','1')=yes;
1189  preds('17','2')=yes;
1190  preds('17','3')=yes;
1191  preds('17','4')=yes;
1192  preds('17','5')=yes;
1193  preds('17','6')=yes;
1194  preds('17','7')=yes;
1195  preds('17','8')=yes;
1196  preds('17','9')=yes;
1197  preds('17','10')=yes;
1198  preds('17','11')=yes;
1199  preds('17','12')=yes;
1200  preds('17','13')=yes;
1201  preds('17','14')=yes;
1202  preds('17','15')=yes;
1203  preds('17','16')=yes;
1204  preds('18','1')=yes;
1205  preds('18','2')=yes;
1206  preds('18','3')=yes;
1207  preds('18','4')=yes;
1208  preds('18','5')=yes;
1209  preds('18','6')=yes;
1210  preds('18','7')=yes;
1211  preds('18','8')=yes;
1212  preds('18','9')=yes;
1213  preds('18','10')=yes;
1214  preds('18','11')=yes;
1215  preds('18','12')=yes;
1216  preds('18','13')=yes;
1217  preds('18','14')=yes;
1218  preds('18','15')=yes;
1219  preds('18','16')=yes;
1220  preds('18','17')=yes;
1221  preds('19','1')=yes;
1222  preds('19','2')=yes;
1223  preds('19','3')=yes;
1224  preds('19','4')=yes;
1225  preds('19','5')=yes;
1226  preds('19','6')=yes;
1227  preds('19','7')=yes;
1228  preds('19','8')=yes;
1229  preds('19','9')=yes;
1230  preds('19','10')=yes;
1231  preds('19','11')=yes;
1232  preds('19','12')=yes;
1233  preds('19','13')=yes;
1234  preds('19','14')=yes;
1235  preds('19','15')=yes;
1236  preds('19','16')=yes;
1237  preds('19','17')=yes;
1238  preds('19','18')=yes;
1239  preds('20','1')=yes;
1240  preds('20','2')=yes;
1241  preds('20','3')=yes;
1242  preds('20','4')=yes;
1243  preds('20','5')=yes;
1244  preds('20','6')=yes;
1245  preds('20','7')=yes;
1246  preds('20','8')=yes;
1247  preds('20','9')=yes;
1248  preds('20','10')=yes;
1249  preds('20','11')=yes;
1250  preds('20','12')=yes;
1251  preds('20','13')=yes;
1252  preds('20','14')=yes;
1253  preds('20','15')=yes;
1254  preds('20','16')=yes;
1255  preds('20','17')=yes;
1256  preds('20','18')=yes;
1257  preds('20','19')=yes;
1258  preds('21','1')=yes;
1259  preds('21','2')=yes;
1260  preds('21','3')=yes;
1261  preds('21','4')=yes;
1262  preds('21','5')=yes;
1263  preds('21','6')=yes;
1264  preds('21','7')=yes;
1265  preds('21','8')=yes;
1266  preds('21','9')=yes;
1267  preds('21','10')=yes;
1268  preds('21','11')=yes;
1269  preds('21','12')=yes;
1270  preds('21','13')=yes;
1271  preds('21','14')=yes;
1272  preds('21','15')=yes;
1273  preds('21','16')=yes;
1274  preds('21','17')=yes;
1275  preds('21','18')=yes;
1276  preds('21','19')=yes;
1277  preds('21','20')=yes;
1278  preds('22','1')=yes;
1279  preds('22','2')=yes;
1280  preds('22','3')=yes;
1281  preds('22','4')=yes;
1282  preds('22','5')=yes;
1283  preds('22','6')=yes;
1284  preds('22','7')=yes;
1285  preds('22','8')=yes;
1286  preds('22','9')=yes;
1287  preds('22','10')=yes;
1288  preds('22','11')=yes;
1289  preds('22','12')=yes;
1290  preds('22','13')=yes;
1291  preds('22','14')=yes;
1292  preds('22','15')=yes;
1293  preds('22','16')=yes;
1294  preds('22','17')=yes;
1295  preds('22','18')=yes;
1296  preds('22','19')=yes;
1297  preds('22','20')=yes;
1298  preds('22','21')=yes;
1299  preds('23','1')=yes;
1300  preds('23','2')=yes;
1301  preds('23','3')=yes;
1302  preds('23','4')=yes;
1303  preds('23','5')=yes;
1304  preds('23','6')=yes;
1305  preds('23','7')=yes;
1306  preds('23','8')=yes;
1307  preds('23','9')=yes;
1308  preds('23','10')=yes;
1309  preds('23','11')=yes;
1310  preds('23','12')=yes;
1311  preds('23','13')=yes;
1312  preds('23','14')=yes;
1313  preds('23','15')=yes;
1314  preds('23','16')=yes;
1315  preds('23','17')=yes;
1316  preds('23','18')=yes;
1317  preds('23','19')=yes;
1318  preds('23','20')=yes;
1319  preds('23','21')=yes;
1320  preds('23','22')=yes;
1321  preds('24','1')=yes;
1322  preds('24','2')=yes;
1323  preds('24','3')=yes;
1324  preds('24','4')=yes;
1325  preds('24','5')=yes;
1326  preds('24','6')=yes;
1327  preds('24','7')=yes;
1328  preds('24','8')=yes;
1329  preds('24','9')=yes;
1330  preds('24','10')=yes;
1331  preds('24','11')=yes;
1332  preds('24','12')=yes;
1333  preds('24','13')=yes;
1334  preds('24','14')=yes;
1335  preds('24','15')=yes;
1336  preds('24','16')=yes;
1337  preds('24','17')=yes;
1338  preds('24','18')=yes;
1339  preds('24','19')=yes;
1340  preds('24','20')=yes;
1341  preds('24','21')=yes;
1342  preds('24','22')=yes;
1343  preds('24','23')=yes;
1344  preds('25','1')=yes;
1345  preds('25','2')=yes;
1346  preds('25','3')=yes;
1347  preds('25','4')=yes;
1348  preds('25','5')=yes;
1349  preds('25','6')=yes;
1350  preds('25','7')=yes;
1351  preds('25','8')=yes;
1352  preds('25','9')=yes;
1353  preds('25','10')=yes;
1354  preds('25','11')=yes;
1355  preds('25','12')=yes;
1356  preds('25','13')=yes;
1357  preds('25','14')=yes;
1358  preds('25','15')=yes;
1359  preds('25','16')=yes;
1360  preds('25','17')=yes;
1361  preds('25','18')=yes;
1362  preds('25','19')=yes;
1363  preds('25','20')=yes;
1364  preds('25','21')=yes;
1365  preds('25','22')=yes;
1366  preds('25','23')=yes;
1367  preds('25','24')=yes;
1368  preds('26','1')=yes;
1369  preds('26','2')=yes;
1370  preds('26','3')=yes;
1371  preds('26','4')=yes;
1372  preds('26','5')=yes;
1373  preds('26','6')=yes;
1374  preds('26','7')=yes;
1375  preds('26','8')=yes;
1376  preds('26','9')=yes;
1377  preds('26','10')=yes;
1378  preds('26','11')=yes;
1379  preds('26','12')=yes;
1380  preds('26','13')=yes;
1381  preds('26','14')=yes;
1382  preds('26','15')=yes;
1383  preds('26','16')=yes;
1384  preds('26','17')=yes;
1385  preds('26','18')=yes;
1386  preds('26','19')=yes;
1387  preds('26','20')=yes;
1388  preds('26','21')=yes;
1389  preds('26','22')=yes;
1390  preds('26','23')=yes;
1391  preds('26','24')=yes;
1392  preds('26','25')=yes;
1393  preds('27','1')=yes;
1394  preds('27','2')=yes;
1395  preds('27','3')=yes;
1396  preds('27','4')=yes;
1397  preds('27','5')=yes;
1398  preds('27','6')=yes;
1399  preds('27','7')=yes;
1400  preds('27','8')=yes;
1401  preds('27','9')=yes;
1402  preds('27','10')=yes;
1403  preds('27','11')=yes;
1404  preds('27','12')=yes;
1405  preds('27','13')=yes;
1406  preds('27','14')=yes;
1407  preds('27','15')=yes;
1408  preds('27','16')=yes;
1409  preds('27','17')=yes;
1410  preds('27','18')=yes;
1411  preds('27','19')=yes;
1412  preds('27','20')=yes;
1413  preds('27','21')=yes;
1414  preds('27','22')=yes;
1415  preds('27','23')=yes;
1416  preds('27','24')=yes;
1417  preds('27','25')=yes;
1418  preds('27','26')=yes;
1419  preds('28','1')=yes;
1420  preds('28','2')=yes;
1421  preds('28','3')=yes;
1422  preds('28','4')=yes;
1423  preds('28','5')=yes;
1424  preds('28','6')=yes;
1425  preds('28','7')=yes;
1426  preds('28','8')=yes;
1427  preds('28','9')=yes;
1428  preds('28','10')=yes;
1429  preds('28','11')=yes;
1430  preds('28','12')=yes;
1431  preds('28','13')=yes;
1432  preds('28','14')=yes;
1433  preds('28','15')=yes;
1434  preds('28','16')=yes;
1435  preds('28','17')=yes;
1436  preds('28','18')=yes;
1437  preds('28','19')=yes;
1438  preds('28','20')=yes;
1439  preds('28','21')=yes;
1440  preds('28','22')=yes;
1441  preds('28','23')=yes;
1442  preds('28','24')=yes;
1443  preds('28','25')=yes;
1444  preds('28','26')=yes;
1445  preds('28','27')=yes;
1446  preds('29','1')=yes;
1447  preds('29','2')=yes;
1448  preds('29','3')=yes;
1449  preds('29','4')=yes;
1450  preds('29','5')=yes;
1451  preds('29','6')=yes;
1452  preds('29','7')=yes;
1453  preds('29','8')=yes;
1454  preds('29','9')=yes;
1455  preds('29','10')=yes;
1456  preds('29','11')=yes;
1457  preds('29','12')=yes;
1458  preds('29','13')=yes;
1459  preds('29','14')=yes;
1460  preds('29','15')=yes;
1461  preds('29','16')=yes;
1462  preds('29','17')=yes;
1463  preds('29','18')=yes;
1464  preds('29','19')=yes;
1465  preds('29','20')=yes;
1466  preds('29','21')=yes;
1467  preds('29','22')=yes;
1468  preds('29','23')=yes;
1469  preds('29','24')=yes;
1470  preds('29','25')=yes;
1471  preds('29','26')=yes;
1472  preds('29','27')=yes;
1473  preds('29','28')=yes;
1474  preds('30','1')=yes;
1475  preds('30','2')=yes;
1476  preds('30','3')=yes;
1477  preds('30','4')=yes;
1478  preds('30','5')=yes;
1479  preds('30','6')=yes;
1480  preds('30','7')=yes;
1481  preds('30','8')=yes;
1482  preds('30','9')=yes;
1483  preds('30','10')=yes;
1484  preds('30','11')=yes;
1485  preds('30','12')=yes;
1486  preds('30','13')=yes;
1487  preds('30','14')=yes;
1488  preds('30','15')=yes;
1489  preds('30','16')=yes;
1490  preds('30','17')=yes;
1491  preds('30','18')=yes;
1492  preds('30','19')=yes;
1493  preds('30','20')=yes;
1494  preds('30','21')=yes;
1495  preds('30','22')=yes;
1496  preds('30','23')=yes;
1497  preds('30','24')=yes;
1498  preds('30','25')=yes;
1499  preds('30','26')=yes;
1500  preds('30','27')=yes;
1501  preds('30','28')=yes;
1502  preds('30','29')=yes;
1503   
1504  * tfirst and tlast over time
1505  tfirst(t) = yes$(tperiod(t) eq smin(tt,tperiod(tt)));
1506  tlast(t) = yes$(tperiod(t) eq smax(tt,tperiod(tt)));
1507   
1508  tnofirst(t) = yes$(not tfirst(t));
1509  tnolast(t)  = yes$(not tlast(t));
1510   
1511  * End of time horizon for optimization
1513  yeoh = smax(t, year(t));
1515   
1516  * Fixed period nodes
1517  set tfix(t)    'fixed period nodes';
1518  tfix(t) = no;
1519   
1520  * Create and load fix variable
1521  $macro loadfix(name,idx,type) \
1522  &type FIX&name&&idx; \
1523  execute_load '%fixgdx%.gdx',FIX&name=&name;
1524   
1525  * Fix variable in tfix
1526  $macro tfixvar(name,idx) \
1527  loadfix(name,idx,variable) \
1528  &name.fx&&idx$tfix(t) = FIX&name.l&&idx; \
1529  &name.l&&idx$tfix(t) = FIX&name.l&&idx;
1530   
1531  * Fix Variable in tfix+1
1532  $macro tfix1var(name,idx) \
1533  loadfix(name,idx,variable) \
1534  loop((t,tfix(tp1))$pre(t,tp1), \
1535  &name.fx&&idx = FIX&name.l&&idx; \
1536  &name.l&&idx = FIX&name.l&&idx; \
1537  );
1538   
1539  * load parameter in tfix
1540  $macro tfixpar(name,idx) \
1541  loadfix(name,idx,parameter) \
1542  &name&&idx$tfix(t) = FIX&name&&idx;
1543   
1544  set conf /
1546  /;
1547   
1548  *-------------------------------------------------------------------------------
1550   
1551  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
1553  *-------------------------------------------------------------------------------
1554  * Geographic dimension and mapping with countries
1555  *-------------------------------------------------------------------------------
1556   
1558   
1559  set n 'Regions' /
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\n.inc
1561  brazil
1562  canada
1563  china
1564  europe
1565  india
1566  indonesia
1567  jpnkor
1568  laca
1569  mena
1570  mexico
1571  oceania
1572  sasia
1573  seasia
1574  southafrica
1575  ssa
1576  te
1577  usa
1578  /;
1579   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\regions.inc
1581  set iso3 'Country definition in ISO_3166-1_alpha-3' /
1582  ABW
1583  AFG
1584  AGO
1585  AIA
1586  ALA
1587  ALB
1588  AND
1589  ARE
1590  ARG
1591  ARM
1592  ASM
1593  ATA
1594  ATF
1595  ATG
1596  AUS
1597  AUT
1598  AZE
1599  BDI
1600  BEL
1601  BEN
1602  BES
1603  BFA
1604  BGD
1605  BGR
1606  BHR
1607  BHS
1608  BIH
1609  BLM
1610  BLR
1611  BLZ
1612  BMU
1613  BOL
1614  BRA
1615  BRB
1616  BRN
1617  BTN
1618  BVT
1619  BWA
1620  CAF
1621  CAN
1622  CCK
1623  CHE
1624  CHL
1625  CHN
1626  CIV
1627  CMR
1628  COD
1629  COG
1630  COK
1631  COL
1632  COM
1633  CPV
1634  CRI
1635  CUB
1636  CUW
1637  CXR
1638  CYM
1639  CYP
1640  CZE
1641  DEU
1642  DJI
1643  DMA
1644  DNK
1645  DOM
1646  DZA
1647  ECU
1648  EGY
1649  ERI
1650  ESH
1651  ESP
1652  EST
1653  ETH
1654  FIN
1655  FJI
1656  FLK
1657  FRA
1658  FRO
1659  FSM
1660  GAB
1661  GBR
1662  GEO
1663  GGY
1664  GHA
1665  GIB
1666  GIN
1667  GLP
1668  GMB
1669  GNB
1670  GNQ
1671  GRC
1672  GRD
1673  GRL
1674  GTM
1675  GUF
1676  GUM
1677  GUY
1678  HKG
1679  HMD
1680  HND
1681  HRV
1682  HTI
1683  HUN
1684  IDN
1685  IMN
1686  IND
1687  IOT
1688  IRL
1689  IRN
1690  IRQ
1691  ISL
1692  ISR
1693  ITA
1694  JAM
1695  JEY
1696  JOR
1697  JPN
1698  KAZ
1699  KEN
1700  KGZ
1701  KHM
1702  KIR
1703  KNA
1704  KOR
1705  KSV
1706  KWT
1707  LAO
1708  LBN
1709  LBR
1710  LBY
1711  LCA
1712  LIE
1713  LKA
1714  LSO
1715  LTU
1716  LUX
1717  LVA
1718  MAC
1719  MAF
1720  MAR
1721  MCO
1722  MDA
1723  MDG
1724  MDV
1725  MEX
1726  MHL
1727  MKD
1728  MLI
1729  MLT
1730  MMR
1731  MNE
1732  MNG
1733  MNP
1734  MOZ
1735  MRT
1736  MSR
1737  MTQ
1738  MUS
1739  MWI
1740  MYS
1741  MYT
1742  NAM
1743  NCL
1744  NER
1745  NFK
1746  NGA
1747  NIC
1748  NIU
1749  NLD
1750  NOR
1751  NPL
1752  NRU
1753  NZL
1754  OMN
1755  PAK
1756  PAN
1757  PCN
1758  PER
1759  PHL
1760  PLW
1761  PNG
1762  POL
1763  PRI
1764  PRK
1765  PRT
1766  PRY
1767  PSE
1768  PYF
1769  QAT
1770  REU
1771  ROU
1772  RUS
1773  RWA
1774  SAU
1775  SDN
1776  SEN
1777  SGP
1778  SGS
1779  SHN
1780  SJM
1781  SLB
1782  SLE
1783  SLV
1784  SMR
1785  SOM
1786  SPM
1787  SRB
1788  SSD
1789  STP
1790  SUR
1791  SVK
1792  SVN
1793  SWE
1794  SWZ
1795  SXM
1796  SYC
1797  SYR
1798  TCA
1799  TCD
1800  TGO
1801  THA
1802  TJK
1803  TKL
1804  TKM
1805  TLS
1806  TON
1807  TTO
1808  TUN
1809  TUR
1810  TUV
1811  TWN
1812  TZA
1813  UGA
1814  UKR
1815  UMI
1816  URY
1817  USA
1818  UZB
1819  VAT
1820  VCT
1821  VEN
1822  VGB
1823  VIR
1824  VNM
1825  VUT
1826  WLF
1827  WSM
1828  YEM
1829  ZAF
1830  ZMB
1831  ZWE
1832  /;
1833  set map_n_iso3(n,iso3) 'Mapping between WITCH regions and iso3'/
1834  canada.CAN
1835  canada.SPM
1836  jpnkor.JPN
1837  jpnkor.KOR
1838  oceania.NZL
1839  oceania.AUS
1840  indonesia.IDN
1841  southafrica.ZAF
1842  brazil.BRA
1843  mexico.MEX
1844  china.CHN
1845  china.HKG
1846  china.MAC
1847  china.TWN
1848  india.IND
1849  te.MNG
1850  ssa.DJI
1851  ssa.IOT
1852  ssa.BVT
1853  ssa.ATF
1854  laca.ATA
1855  laca.BMU
1856  laca.SGS
1857  laca.TCA
1858  laca.VGB
1859  laca.VIR
1860  jpnkor.PRK
1861  oceania.CXR
1862  oceania.COK
1863  oceania.HMD
1864  oceania.NFK
1865  oceania.NIU
1866  oceania.NRU
1867  oceania.PCN
1868  oceania.TKL
1869  oceania.TUV
1870  oceania.UMI
1871  oceania.WLF
1872  oceania.FJI
1873  oceania.PNG
1874  oceania.FSM
1875  oceania.GUM
1876  oceania.ASM
1877  oceania.TLS
1878  oceania.PYF
1879  oceania.KIR
1880  oceania.MNP
1881  oceania.MHL
1882  oceania.NCL
1883  oceania.PLW
1884  oceania.WSM
1885  oceania.SLB
1886  oceania.TON
1887  oceania.VUT
1888  sasia.AFG
1889  sasia.BGD
1890  sasia.BTN
1891  sasia.LKA
1892  sasia.MDV
1893  sasia.NPL
1894  sasia.PAK
1895  seasia.BRN
1896  seasia.CCK
1897  seasia.KHM
1898  seasia.LAO
1899  seasia.MMR
1900  seasia.MYS
1901  seasia.PHL
1902  seasia.SGP
1903  seasia.THA
1904  seasia.VNM
1905  laca.ABW
1906  laca.AIA
1907  laca.ARG
1908  laca.ATG
1909  laca.BES
1910  laca.BHS
1911  laca.BLM
1912  laca.BLZ
1913  laca.BOL
1914  laca.BRB
1915  laca.CHL
1916  laca.COL
1917  laca.CRI
1918  laca.CUB
1919  laca.CUW
1920  laca.CYM
1921  laca.DMA
1922  laca.DOM
1923  laca.ECU
1924  laca.FLK
1925  laca.GLP
1926  laca.GRD
1927  laca.GTM
1928  laca.GUF
1929  laca.GUY
1930  laca.HND
1931  laca.HTI
1932  laca.JAM
1933  laca.KNA
1934  laca.LCA
1935  laca.MAF
1936  laca.MSR
1937  laca.MTQ
1938  laca.NIC
1939  laca.PAN
1940  laca.PER
1941  laca.PRI
1942  laca.PRY
1943  laca.SLV
1944  laca.SUR
1945  laca.SXM
1946  laca.TTO
1947  laca.URY
1948  laca.VCT
1949  laca.VEN
1950  mena.ARE
1951  mena.BHR
1952  mena.DZA
1953  mena.EGY
1954  mena.ESH
1955  mena.IRN
1956  mena.IRQ
1957  mena.ISR
1958  mena.JOR
1959  mena.KWT
1960  mena.LBN
1961  mena.LBY
1962  mena.MAR
1963  mena.OMN
1964  mena.PSE
1965  mena.QAT
1966  mena.SAU
1967  mena.SYR
1968  mena.TUN
1969  mena.YEM
1970  europe.BGR
1971  europe.CYP
1972  europe.CZE
1973  europe.EST
1974  europe.HUN
1975  europe.LTU
1976  europe.LVA
1977  europe.POL
1978  europe.ROU
1979  europe.SVK
1980  europe.SVN
1981  europe.MLT
1982  europe.HRV
1983  europe.AUT
1984  europe.BEL
1985  europe.DEU
1986  europe.DNK
1987  europe.ESP
1988  europe.FIN
1989  europe.FRA
1990  europe.GBR
1991  europe.GRC
1992  europe.IRL
1993  europe.ITA
1994  europe.LUX
1995  europe.NLD
1996  europe.PRT
1997  europe.SWE
1998  europe.LIE
1999  europe.NOR
2000  europe.CHE
2001  europe.GRL
2002  europe.ISL
2003  europe.FRO
2004  europe.ALA
2005  europe.AND
2006  europe.GGY
2007  europe.GIB
2008  europe.IMN
2009  europe.JEY
2010  europe.MCO
2011  europe.SJM
2012  europe.SMR
2013  europe.VAT
2014  europe.BIH
2015  europe.ALB
2016  europe.MKD
2017  europe.MNE
2018  europe.SRB
2019  europe.KSV
2020  ssa.AGO
2021  ssa.BEN
2022  ssa.BWA
2023  ssa.BFA
2024  ssa.BDI
2025  ssa.CMR
2026  ssa.CPV
2027  ssa.CAF
2028  ssa.TCD
2029  ssa.COM
2030  ssa.COG
2031  ssa.COD
2032  ssa.CIV
2033  ssa.GNQ
2034  ssa.ERI
2035  ssa.ETH
2036  ssa.GAB
2037  ssa.GMB
2038  ssa.GHA
2039  ssa.GIN
2040  ssa.GNB
2041  ssa.KEN
2042  ssa.LSO
2043  ssa.LBR
2044  ssa.MDG
2045  ssa.MWI
2046  ssa.MLI
2047  ssa.MRT
2048  ssa.MUS
2049  ssa.MYT
2050  ssa.MOZ
2051  ssa.NAM
2052  ssa.NER
2053  ssa.NGA
2054  ssa.REU
2055  ssa.RWA
2056  ssa.STP
2057  ssa.SEN
2058  ssa.SYC
2059  ssa.SHN
2060  ssa.SLE
2061  ssa.SOM
2062  ssa.SSD
2063  ssa.SDN
2064  ssa.SWZ
2065  ssa.TZA
2066  ssa.TGO
2067  ssa.UGA
2068  ssa.ZMB
2069  ssa.ZWE
2070  te.ARM
2071  te.AZE
2072  te.BLR
2073  te.GEO
2074  te.KAZ
2075  te.KGZ
2076  te.MDA
2077  te.RUS
2078  te.TJK
2079  te.TUR
2080  te.TKM
2081  te.UKR
2082  te.UZB
2083  usa.USA
2084  /;
2085  set oecd(n) 'OECD regions' /
2086  europe
2087  oceania
2088  canada
2089  jpnkor
2090  mexico
2091  usa
2092  /;
2093   
2094  alias (n,nn);
2095   
2096  set non_oecd(n) 'non OECD regions';
2097  non_oecd(n) = YES$(not oecd(n));
2098   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
2101  *-------------------------------------------------------------------------------
2102  * Non-Cooperative Setup
2103  *
2104  * Each region is defined as an individual coalition.
2105  *
2106  *-------------------------------------------------------------------------------
2107   
2109   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\noncoop.inc
2111  set clt 'Coalitions' /
2112  c_brazil
2113  c_canada
2114  c_china
2115  c_europe
2116  c_india
2117  c_indonesia
2118  c_jpnkor
2119  c_laca
2120  c_mena
2121  c_mexico
2122  c_oceania
2123  c_sasia
2124  c_seasia
2125  c_southafrica
2126  c_ssa
2127  c_te
2128  c_usa
2129  /;
2130  set map_clt_n(clt,n) /
2131  c_brazil.brazil
2132  c_canada.canada
2133  c_china.china
2134  c_europe.europe
2135  c_india.india
2136  c_indonesia.indonesia
2137  c_jpnkor.jpnkor
2138  c_laca.laca
2139  c_mena.mena
2140  c_mexico.mexico
2141  c_oceania.oceania
2142  c_sasia.sasia
2143  c_seasia.seasia
2144  c_southafrica.southafrica
2145  c_ssa.ssa
2146  c_te.te
2147  c_usa.usa
2148  /;
2149   
2150  set conf /
2151  'cooperation'.'noncoop'
2152  'cooperate_on_climate'.'YES'
2153  /;
2154   
2156   
2157  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
2159  *-------------------------------------------------------------------------------
2160  * Welfare
2161  *-------------------------------------------------------------------------------
2162   
2164   
2165  set negishi_coop(clt,n);
2166  negishi_coop(clt,n)=no;
2167   
2169   
2170  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
2173  *-------------------------------------------------------------------------------
2174  * Economy
2175  * - Production and Consumption definition
2176  * - Top-level of the production function
2177  * Options:
2178  * --original_ssp=1 : original SSP population and GDP data
2179  *-------------------------------------------------------------------------------
2180   
2182   
2183  set g 'Goods sector' /
2184      fg 'Final Good'
2185  /;
2186   
2187  set iq 'Economy nodes' /
2188      y       'Production'
2189      cc      'Consumption'
2190      kl      'Aggregate Capital-Labor'
2191      fen     'Energy services'
2192      eifen
2193      en      'Energy'
2194      el      'Electricity'
2195      el2
2196      elffren
2197      elff
2198      nel     'Non-electric energy'
2199      nelog
2200      ces_elhydro
2201      ces_elnuclearback
2202      ces_elintren
2203      ces_elcoalwbio
2204      ces_eloil
2205      ces_elgas
2206      ces_nelgas
2207  /;
2208   
2209  set ccy(*) 'additionnal cost categories' / /;
2210   
2211  set ssp 'SSP baseline names' / ssp1,ssp2,ssp3,ssp4,ssp5 /;
2212   
2213  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
2216  *-------------------------------------------------------------------------------
2217  * Energy sector
2218  *-------------------------------------------------------------------------------
2219   
2221   
2222  set fuel       'All energy carriers' / oil, coal, gas, uranium /
2223      f(fuel)    'Primary energy sources' / oil, coal, gas, uranium /
2224      s(fuel)    'Secondary energy sources' / /
2225      extract(f) 'Primary energy fuels with an extraction sector'
2226      f_mkt(f)   'Fuel markets' / oil /;
2227   
2228  set j 'Energy Sectors and Technologies' /
2229      en         'Energy'
2230      el         'Power supply sector'
2231      elcoalwbio
2232      elp       'Power plant | Coal/Biomass | w/o CCS | All'
2233      eligcc    'Power plant | Coal/Biomass | CCS | All'
2234      elpc      'Power plant | Coal | w/o CCS | All'
2235      elpc_new  'Power plant | Coal | w/o CCS | New'
2236      elpc_old  'Power plant | Coal | w/o CCS | Old'
2237      elpc_late 'Power plant | Coal | w/o CCS | Recent'
2238      elpc_ccs  'Power plant | Coal | CCS | Standard'
2239      elpc_oxy  'Power plant | Coal | CCS | Oxy-fuel'
2240      elcigcc   'Power plant | Coal | CCS | Integrated gasification combined cycle'
2241      elnuclearback,
2242      elnuclear_old 'Power plant | Nuclear | Old'
2243      elnuclear_new 'Power plant | Nuclear | New'
2244      eloil         'Power plant | Oil | All'
2245      eloil_new     'Power plant | Oil | New'
2246      eloil_old     'Power plant | Oil | Oil'
2247      elgas         'Power plant | Gas | All'
2248      elgastr       'Power plant | Gas | w/o CCS | All'
2249      elgastr_new   'Power plant | Gas | w/o CCS | New'
2250      elgastr_old   'Power plant | Gas | w/o CCS | Old'
2251      elgasccs      'Power plant | Gas | CCS'
2252      nel     'Non-electric sectors'
2253      neloilback
2254      neloil  'End-use | Oil'
2255      nelgas  'End-use | Gas'
2256      nelcoal 'End-use | Coal'
2257      nelbio  'End-use | Biomass'
2258  /;
2259  alias(j,jj);
2260  set jreal(j) 'Real Energy Technologies' /
2261      elpc_new, elpc_old, elpc_late, elpc_ccs, elpc_oxy, elcigcc,
2262      elnuclear_old, elnuclear_new,
2263      eloil_new, eloil_old,
2264      elgastr_new, elgastr_old, elgasccs,
2265      neloil,
2266      nelgas,
2267      nelcoal
2268  /;
2269  set jel(jreal) 'Power plants' /
2270      elpc_new, elpc_old, elpc_late, elcigcc, elpc_ccs, elpc_oxy,
2271      eloil_new, eloil_old,
2272      elgastr_new, elgastr_old, elgasccs
2273  /;
2274  alias(jel,jel2);
2275  set jnel(jreal) 'Non-electric Technologies' /
2276      neloil, nelgas, nelcoal
2277  /;
2278  set jfed(jreal) 'Technologies fed by primary energy sources' /
2279      elpc_new, elpc_old, elpc_late, elcigcc, elpc_ccs, elpc_oxy,
2280      eloil_new, eloil_old, elgastr_new,
2281      elgastr_old, elgasccs,
2282      neloil, nelgas, nelcoal
2283  /;
2284  set jold(jel) 'Old technologies' /
2285      elpc_old, eloil_old, elgastr_old
2286  /;
2287  set jinv(jreal) 'Investable technologies' /
2288      elpc_new, elpc_late, elcigcc, eloil_new, elgastr_new, elgasccs, elpc_ccs, elpc_oxy
2289  /;
2290   
2291  set jpenalty(j) 'Technologies with cost on consumption' / /;
2292   
2293  set jel_ren(jel) 'Renewable power plants' / /;
2294  set jnel_ren(jreal) 'Renewable technologies for non-electrical' / /;
2295   
2296  set jmcost_inv(jreal) 'Energy sectors with non fixed m.cost of investments';
2297   
2298  sets
2299      jreal_to_scale(jreal) 'Technology sectors subject to a 1e3 scale in K_EN during optimization' / /
2300      j_to_scale(j) 'Technology sectors subject to a 1e3 scale in Q_EN during optimization' / /
2301      jinv_to_scale(jinv) 'Technology sectors subject to a 1e3 scale in I_EN during optimization' / /;
2302  ;
2303   
2304  set map_j(j,jj) 'Tree of Energy Sectors and Technologies' /
2305      en.(el, nel)
2306      el.(elcoalwbio, eloil, elgas, elnuclearback)
2307      elcoalwbio.(elp, eligcc)
2308      elp.elpc
2309      elpc.(elpc_new, elpc_old, elpc_late)
2310      eligcc.(elcigcc, elpc_ccs, elpc_oxy)
2311      eloil.(eloil_new, eloil_old)
2312      elgas.(elgastr, elgasccs)
2313      elgastr.(elgastr_new, elgastr_old)
2314      nel.(neloilback, nelgas, nelcoal, nelbio)
2315      neloilback.neloil
2316  /;
2317   
2318  set jel_own_mu(jel) / /;
2319  set jinv_own_k(jinv) / /;
2320   
2321  set ices_el(iq) /ces_elnuclearback, ces_elcoalwbio, ces_eloil,ces_elgas /;
2322   
2323  set map_ices_el(ices_el,j)/
2324  ces_elnuclearback.elnuclearback
2325  ces_elcoalwbio.elcoalwbio
2326  ces_eloil.eloil
2327  ces_elgas.elgas
2328  /;
2329   
2330  set jcalib /
2331      elpc
2332      elnuclear
2333      elgastr
2334      eloil
2335  /;
2336   
2337  set map_calib(jcalib,jreal) /
2338  elpc.(elpc_old, elpc_late)
2339  elgastr.(elgastr_new,elgastr_old)
2340  elnuclear.(elnuclear_new,elnuclear_old)
2341  eloil.(eloil_new,eloil_old)
2342  /;
2343   
2344  set el_out(*) 'Electricity demand to withdraw from the production tree [TWh]'/
2345  /;
2346   
2347  set nel_out(*) 'Non electricity demand to withdraw from the production tree [TWh]'/
2348  /;
2349   
2350  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
2353  *-------------------------------------------------------------------------------
2354  * Carbon Emissions
2355  * - Total CO2 emissions and CO2 Fossil fuel and Industry
2356  * - CO2 emission costs
2357  * - GHG permit market
2358  *-------------------------------------------------------------------------------
2359   
2361   
2362  set e 'Emissions-related entities' /
2363      co2
2364      co2ffi # Fossil-fuel and Industry CO2
2365      nip    # net import of permits
2366      kghg   # Kyoto greenhouse gases
2367  /;
2368  alias(e,ee);
2369  set map_e(e,ee) 'Relationships between Sectoral Emissions' /
2370      co2.co2ffi
2371  /;
2372   
2373  set ghg(e) 'Green-House Gases' /
2374      co2
2375  /;
2376   
2377  set e_cap(e);
2378   
2379  set cce(e) 'Emissions-related entities that cost' /
2380      co2
2381  /;
2382   
2383  set emac(e) 'Emissions with marginal abatment curves' / /;
2384   
2385  set sink(e) 'Emission sink for sequestration';
2386   
2387  set sys 'emission adjustement inventory' /
2388      co2ffi
2389      co2_elheat
2390  /;
2391   
2392  set c_mkt(e) 'Market of permits' / nip /;    # if multiple permit markets, be sure to assign them to countries via trading_t
2393   
2394  set map_ierr_e(ierr, c_mkt);
2395  map_ierr_e('nip', 'nip') = YES;
2396   
2397  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
2400  *-------------------------------------------------------------------------------
2401  * Research & Development
2402  * Options:
2403  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
2404  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
2405  *-------------------------------------------------------------------------------
2406   
2408   
2409  set rd(j) 'Energy sectors or technologies with R&D' / /;
2410   
2411  set jrd(jreal) 'Technologies with R&D' / /;
2412   
2413  set jrd_lbd(jrd) 'Technologies with learning-by-doing';
2414   
2415  set leadrd(rd,n) 'Regions which are leader in R&D innovation';
2416   
2417  set rd_cooperation(rd,clt) 'cooperation in R&D inside coalition';
2418  rd_cooperation(rd,clt) = no; # By default, no R&D cooperation
2419   
2420  set rd_tgap(jrd,t,tt) 'reference period for learning cost equations';
2421   
2422  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
2425  *-------------------------------------------------------------------------------
2426  * Default Climate Policy Implementation
2427  *
2428  * Options:
2429  *    --policy={bau (default),ctax}
2430  *        Implement a climate policy setting
2431  *  [ --scen= ]
2432  *        Policy variant.
2433  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
2434  *          * XXX for a fixed percentage/yr (e.g. 5) growth
2435  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
2436  *  [ --ctax_year=2020 ]
2437  *        Starting year of the carbon tax
2438  *  [ --ctax_initial=30 ]
2439  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
2440  *
2441  *-------------------------------------------------------------------------------
2443   
2444  * Runs
2445  set run /r1/;
2446  set to_run(run);
2447   
2448  * Trading
2449  set trading_t(*,t,n) 'Periods for the international markets per regions';
2450  trading_t(c_mkt,t,n) = no;
2451  trading_t(f_mkt,t,n) = no;
2452   
2453  set internal(*) 'Internal markets [within coalition]';
2454  internal(c_mkt) = no;
2455  internal(f_mkt) = no;
2456   
2457  set internal_clt(*,clt) 'Mapping between coalition and internal market';
2458  internal_clt(c_mkt,clt) = no;
2459  internal_clt(f_mkt,clt) = no;
2460   
2461  set t_cap(t,n) 'Cap on emissions time periods and regions';
2462  t_cap(t,n) = no;
2463   
2464  *-------------------------------------------------------------------------------
2466   
2467  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
2469  *-------------------------------------------------------------------------------
2470  * Energy efficiency
2471  *-------------------------------------------------------------------------------
2472   
2474   
2475  set rd(j) /en/;
2476   
2477  * OECD are R&D Leaders in energy efficiency
2478  leadrd('en',n)$(oecd(n)) = yes;
2479   
2480  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
2483  *-------------------------------------------------------------------------------
2484  * Hydro Power
2485  *-------------------------------------------------------------------------------
2486   
2488   
2489  set j /
2490      elhydro       'Power plant | Hydro | All'
2491      elhydro_new   'Power plant | Hydro | New'
2492      elhydro_old   'Power plant | Hydro | Old'
2493  /;
2494  set jreal(j) / elhydro_new, elhydro_old /;
2495  set jel(jreal) / elhydro_new, elhydro_old /;
2496  set jold(jel) / elhydro_old /;
2497  set jinv(jreal) / elhydro_new /;
2498  set jel_ren(jel) /elhydro_old, elhydro_new/;
2499  set map_j(j,jj) /
2500      el.elhydro
2501      elhydro.(elhydro_new, elhydro_old)
2502  /;
2503  set ices_el(iq) /ces_elhydro/;
2504  set map_ices_el(ices_el,j)/
2505  ces_elhydro.elhydro
2506  /;
2507  set jcalib /elhydro/;
2508   
2509  set map_calib(jcalib,jreal) /
2510  elhydro.(elhydro_new,elhydro_old)
2511  /;
2512   
2513  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
2516  *-------------------------------------------------------------------------------
2517  * System Integration:
2518  * - Capacity constraint
2519  * - Flexibility constraint
2520  * - Grid Investment
2521  * - Capacity growth constraint
2522  *-------------------------------------------------------------------------------
2523   
2525   
2526  * Renewable CES
2527  set jintren(j) / /;   # also used in the grid part
2528   
2529  * Capacity constraint
2530  set jel_firm(jel) 'Firm, non intermittent technologies' /
2531      elpc_new, elpc_old, elpc_late elcigcc, elpc_ccs, elpc_oxy, eloil_new, eloil_old, elgastr_new,
2532      elgastr_old, elgasccs, elhydro_new, elhydro_old /;
2533   
2534  * Grid
2535  set jel_stdgrid(jel) 'Technologies requiring standard grid infrastructure (i.e. no W&S)' /
2536      elpc_new, elpc_old, elpc_late elcigcc, elpc_ccs, elpc_oxy, eloil_new, eloil_old, elgastr_new,
2537      elgastr_old, elgasccs, elhydro_new, elhydro_old /;
2538   
2539  set share_coeff / mult, exp /;
2540   
2541  set jtn_incompatible_with_mkt_growth_cap(jinv,t,n);
2542   
2543  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
2546  *-------------------------------------------------------------------------------
2547  * Nuclear power plants
2548  *-------------------------------------------------------------------------------
2549   
2551   
2552  set j 'Energy Technology Sectors' /
2553      elnuclear
2554      elnuclear_new
2555      elnuclear_old
2556  /;
2557   
2558  set jreal(j) 'Actual Energy Technology Sectors' /
2559      elnuclear_new
2560      elnuclear_old
2561  /;
2562   
2563  set jel(jreal) 'Electrical Actual Energy Technology Sectors' /
2564      elnuclear_new
2565      elnuclear_old
2566  /;
2567   
2568  set jel_nuclear(jel) 'Nuclear power plants' /
2569      elnuclear_new
2570      elnuclear_old
2571  /;
2572   
2573  set jfed(jreal) 'Actual Energy Technology Sectors fed by PES' /
2574      elnuclear_new
2575      elnuclear_old
2576  /;
2577   
2578  set jinv(jreal) 'Electrical Actual Energy Technology Sectors with investments' /
2579      elnuclear_new
2580  /;
2581   
2582  set jold(jel) 'Old Electrical Actual Energy Technology Sectors' /
2583      elnuclear_old
2584  /;
2585   
2586  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
2587      elnuclearback.elnuclear
2588      elnuclear.(elnuclear_new, elnuclear_old)
2589  /;
2590   
2591  set jel_firm 'Firm, non intermittent technologies' /
2592      elnuclear_new
2593      elnuclear_old
2594  /;
2595   
2596  set jel_stdgrid(jel) 'Technologies requiring standard grid infrastructure (i.e. no W&S)' /
2597      elnuclear_new
2598      elnuclear_old
2599  /;
2600   
2601  set iwaste / alpha, rho /;
2602   
2603   
2604   
2605  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
2608  *-------------------------------------------------------------------------------
2609  * GHG module
2610  * - CH4 FFI + CH4 waste + CH4 open fires
2611  * - N2O FFI + N2O waste + N2O open fires
2612  *-------------------------------------------------------------------------------
2613   
2615   
2616  set e /ch4, n2o,          # Total
2617         ch4_ffi, n2o_ffi,  # Fossil fuel and Industry processes and Extraction
2618         ch4_wst, n2o_wst,  # Waste
2619         ch4_ofr, n2o_ofr   # Open Fires
2620        /;
2621   
2622  set map_e(e,ee) 'Relationships between Sectoral Emissions' /
2623      ch4.(ch4_ffi,ch4_wst)
2624      n2o.(n2o_ffi,n2o_wst)
2625      kghg.(co2,ch4,n2o)
2626  /;
2627   
2628  set ghg(e) 'Green-House Gases' /
2629       ch4, n2o
2630  /;
2631   
2632  set enrg(e) 'emissions from the energy sector' /
2633     ch4_ffi
2634     n2o_ffi
2635  /;
2636   
2637  set waste(e) 'waste emissions' /
2638      ch4_wst, n2o_wst
2639  /;
2640   
2641  set efire(e) 'Open fires emissions' /
2642      ch4_ofr, n2o_ofr
2643  /;
2644   
2645  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
2648  *-------------------------------------------------------------------------------
2649  * F-gases
2650  * - LLF
2651  * - SLF
2652  *-------------------------------------------------------------------------------
2653   
2655   
2656  set e /
2657  pfc
2658  c2f6
2659  c6f14
2660  cf4
2661  hfc
2662  hfc125
2663  hfc134a
2664  hfc143a
2665  hfc227ea
2666  hfc23
2667  hfc245fa
2668  hfc32
2669  hfc43-10
2670  sf6
2671  f-gases
2672  /;
2673   
2674  set ghg(e) 'Green-House Gases' /
2675  c2f6
2676  c6f14
2677  cf4
2678  hfc125
2679  hfc134a
2680  hfc143a
2681  hfc227ea
2682  hfc23
2683  hfc245fa
2684  hfc32
2685  hfc43-10
2686  sf6
2687  /;
2688   
2689  set fgases(e) 'Green-House Gases' /
2690  c2f6
2691  c6f14
2692  cf4
2693  hfc125
2694  hfc134a
2695  hfc143a
2696  hfc227ea
2697  hfc23
2698  hfc245fa
2699  hfc32
2700  hfc43-10
2701  sf6
2702  /;
2703   
2704  set map_e(e,ee) 'Relationships between Sectoral Emissions' /
2705      kghg.(c2f6,c6f14,cf4,hfc125,hfc134a,hfc143a,hfc227ea,hfc23,hfc245fa,hfc32,hfc43-10,sf6)
2706      hfc.(hfc143a, hfc227ea, hfc134a, hfc125, hfc43-10, hfc32, hfc23, hfc245fa)
2707      pfc.(c2f6,c6f14,cf4)
2708      f-gases.(c2f6,c6f14,cf4,hfc125,hfc134a,hfc143a,hfc227ea,hfc23,hfc245fa,hfc32,hfc43-10,sf6)
2709  /;
2710   
2711  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
2714  *-------------------------------------------------------------------------------
2715  * Landuse [simplified version of the land-use model]
2716  *-------------------------------------------------------------------------------
2717   
2719   
2720  set fuel / wbio /;
2721  set f(fuel) / wbio /;
2722   
2723  set e 'Emissions-related entities' /
2724      co2lu        # Land use CO2
2725      ch4_agr      # CH4 from Agriculture
2726      n2o_agr      # N2O from Agriculture
2727      redd         # Avoided deforestation emissions
2728  /;
2729   
2730  set map_e(e,ee) 'Relationships between Sectoral Emissions' /
2731      co2.co2lu
2732      ch4.ch4_agr
2733      n2o.n2o_agr
2734  /;
2735   
2736  set cce(e) 'Emissions-related entities that cost' /
2737  redd
2738  /;
2739   
2740  set sys /ch4_agr, n2o_agr, co2lu/;
2741   
2742  * Time periods where land-use emissions are priced at same level than energy sector
2743  set t_lu(t);
2744  t_lu(t) = yes;
2745   
2746  * Set ot override the default pricing of landuse by no pricing.
2747  set nocluprice(t,n);
2748  nocluprice(t,n) = no;
2749   
2750  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
2753  *-------------------------------------------------------------------------------
2754  * Bioenergy power plant
2755  *-------------------------------------------------------------------------------
2756   
2758   
2759  set fuel / wbio 'solid biomass for biomass plant' /;
2760   
2761  set j 'Energy Technology Sectors' /
2762      elpb
2763      elpb_new
2764      elpb_old
2765      elbigcc
2766  /;
2767   
2768  set jreal(j) 'Actual Energy Technology Sectors' /
2769      elpb_new
2770      elpb_old
2771      elbigcc
2772  /;
2773   
2774  set jel(jreal) 'Electrical Actual Energy Technology Sectors' /
2775      elpb_new
2776      elpb_old
2777      elbigcc
2778  /;
2779   
2780  set jel_bio(jel) 'Biomass power plants' /
2781      elpb_new
2782      elpb_old
2783      elbigcc
2784  /;
2785   
2786  set jfed(jreal) 'Actual Energy Technology Sectors fed by PES' /
2787      elpb_new
2788      elpb_old
2789      elbigcc
2790  /;
2791   
2792  set jinv(jreal) 'Electrical Actual Energy Technology Sectors with investments' /
2793      elpb_new
2794      elbigcc
2795  /;
2796   
2797  set jold(jel) 'Old Electrical Actual Energy Technology Sectors' /
2798      elpb_old
2799  /;
2800   
2801  set jel_ren(jel) 'Renewable power generation technologies' /
2802      elpb_new
2803      elpb_old
2804      elbigcc
2805  /;
2806   
2807  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
2808      elp.elpb
2809      elpb.(elpb_new, elpb_old)
2810      eligcc.elbigcc
2811  /;
2812   
2813  set jel_firm(jel) 'Firm, non intermittent technologies' /
2814      elpb_new, elpb_old, elbigcc
2815  /;
2816   
2817  set jel_stdgrid(jel) 'Technologies requiring standard grid infrastructure (i.e. no W&S)' /
2818      elpb_new, elpb_old, elbigcc
2819  /;
2820   
2821  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
2824  *-------------------------------------------------------------------------------
2825  * Traditional Biofuels
2826  * - Requires the precedence of mod_landuse
2827  *-------------------------------------------------------------------------------
2828   
2830   
2831  set fuel / trbiofuel 'Traditional biofuel' /;
2832  set s(fuel) / trbiofuel /;
2833   
2834  set j 'Energy Technology Sectors' /neltrbiofuel/;
2835   
2836  set jreal(j) 'Actual Energy Technology Sectors' /neltrbiofuel/;
2837  set jnel(jreal) 'Non-electrical Actual Energy Technology Sectors' /neltrbiofuel/;
2838  set jfed(jreal) 'Actual Energy Technology Sectors fed by PES' /neltrbiofuel/;
2839  set jnel_ren(jreal) 'Renewable power generation technologies' /neltrbiofuel/;
2840   
2841  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
2842      nelbio.neltrbiofuel
2843  /;
2844   
2845  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
2848  *-------------------------------------------------------------------------------
2849  * Advanced biofuel
2850  * - Require the precedence of mod_landuse
2851  *-------------------------------------------------------------------------------
2852   
2854   
2855  set fuel / advbiofuel 'Advanced biofuel' /;
2856  set s(fuel) / advbiofuel /;
2857   
2858  set j 'Energy Technology Sectors' /nelback/;
2859   
2860  set jreal(j) 'Actual Energy Technology Sectors' /nelback/;
2861  set jnel(jreal) 'Non-electrical Actual Energy Technology Sectors' /nelback/;
2862  set jfed(jreal) 'Actual Energy Technology Sectors fed by PES' /nelback/;
2863  set jnel_ren(jreal) 'Renewable power generation technologies' /nelback/;
2864   
2865  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
2866      neloilback.nelback
2867  /;
2868   
2869  * Knowledge
2870  set rd(j) 'R & D' / nelback/;
2871  set jrd(jreal) / nelback/;
2872  set jrd_lbd(jrd) /nelback/;
2873   
2874  leadrd('nelback',n)$(oecd(n)) = yes;
2875  jmcost_inv('nelback')         = yes;
2876   
2877  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
2880  *-------------------------------------------------------------------------------
2881  * Carbon Capture and Sequestration
2882  *-------------------------------------------------------------------------------
2883   
2885   
2886  set e /
2887      ccs        # Sequestered CO2
2888      co2leak    # CO2 leakages
2889      ccs_plant  # Sequestered CO2 from power plants and industry
2890  /;
2891   
2892  set map_e(e,ee) 'Relationships between Sectoral Emissions' /
2893      co2.co2leak
2894      ccs.ccs_plant
2895  /;
2896  set sink /
2897      ccs_plant
2898  /;
2899   
2900  set jccs(jfed) 'Electrical Actual Energy Technology Sectors with CCS' /
2901      elcigcc
2902      elbigcc
2903      elgasccs
2904      elpc_ccs
2905      elpc_oxy
2906  /;
2907   
2908  set cce(e) 'Emissions-related entities that cost' /
2909      ccs_plant
2910  /;
2911   
2912  * --learning curves -- *
2913  set jlccs(jinv) 'Set of Electrical CCS technology with learning by doing' /
2914      elcigcc
2915      elbigcc
2916      elgasccs
2917      elpc_ccs
2918      elpc_oxy
2919  /;
2920   
2921  alias(jlccs,jllccs);
2922   
2923  * -- Storage -- *
2924  set ccs_stor   'different storage technologies' /
2925      aqui_on
2926      aqui_off
2927      oil_gas_no_eor_on
2928      oil_gas_no_eor_off
2929      eor_on
2930      eor_off
2931      ecbm
2932  /;
2933   
2934  set ccs_stor_aqui(ccs_stor) 'aquifer storage ON and OFF'/
2935      aqui_on
2936      aqui_off
2937  /;
2938   
2939  set ccs_stor_og_eor 'oil and gas storage ON and OFF, including eor'/
2940      oil_gas_on
2941      oil_gas_off
2942  /;
2943   
2944  set ccs_stor_og(ccs_stor) 'oil and gas storage ON and OFF, excluding eor'/
2945      oil_gas_no_eor_on
2946      oil_gas_no_eor_off
2947  /;
2948   
2949  set ccs_stor_eor(ccs_stor) ' eor'/
2950      eor_on
2951      eor_off
2952  /;
2953   
2954  set ccs_stor_estim 'low, best, high case of storage capacity'/
2955      low
2956      best
2957      high
2958  /;
2959   
2960  set ccs_stor_dist_cat 'how distances are referred to in the make data file' /
2961      aquif
2962      oil_gas_onshore
2963      oil_gas_offshore
2964      coal_beds
2965  /;
2966   
2967  set map_ccs_stor_og(ccs_stor_og,ccs_stor_og_eor,ccs_stor_eor) /
2968   oil_gas_no_eor_on.oil_gas_on.eor_on
2969   oil_gas_no_eor_off.oil_gas_off.eor_off
2970  /
2971  ;
2972   
2973  set map_ccs_stor_eor(ccs_stor_eor,ccs_stor_og_eor) /
2974  eor_on.oil_gas_on
2975  eor_off.oil_gas_off
2976  /
2977  ;
2978   
2979  set map_ccs_stor_dist_cat(ccs_stor_dist_cat,ccs_stor) /
2980      aquif.(aqui_on,aqui_off)
2981      oil_gas_onshore.(oil_gas_no_eor_on,eor_on)
2982      oil_gas_offshore.(oil_gas_no_eor_off,eor_off)
2983      coal_beds.ecbm
2984  /;
2985   
2986  *-------------------------------------------------------------------------------
2988   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
2990  *-------------------------------------------------------------------------------
2991  * Coal for non-electric sectors
2992  * - Coke Plants
2993  * - Industrial and Commercial combined-heat-and-power (CHP)
2994  * - Others
2995  *-------------------------------------------------------------------------------
2996   
2998   
2999  set j / nelcoalccs, nelcoaltr, nelcoalabat /;
3000  set jreal(j) / nelcoalccs, nelcoaltr, nelcoalabat /;
3001  set jnel(jreal) / nelcoalccs, nelcoaltr, nelcoalabat /;
3002  set jfed(jreal) / nelcoalccs, nelcoaltr /;
3003   
3004  set jinv(jreal) / nelcoalccs /;
3005  set jccs(jfed) / nelcoalccs /;
3006   
3007  set jpenalty(j) /nelcoalabat/;
3008   
3009  set map_j(j,jj) /
3010          nelcoal.(nelcoalccs, nelcoaltr, nelcoalabat)
3011          /;
3012   
3013  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
3016  *-------------------------------------------------------------------------------
3017  * Wind energy module
3018  * - onshore and offshore
3019  *-------------------------------------------------------------------------------
3020   
3022   
3023  set j                      / elwind, elwindon, elwindoff /;
3024  set jreal(j)               / elwindon, elwindoff /;
3025  set jel(jreal)             / elwindon, elwindoff /;
3026  set jinv(jreal)            / elwindon, elwindoff /;
3027   
3028  set jel_own_mu(jel)        / elwindon, elwindoff /;
3029  set jinv_own_k(jinv)       / elwindon, elwindoff /;
3030   
3031  set jel_ren(jel)           / elwindon, elwindoff /;
3032  set jreal_to_scale(jreal)  / elwindon, elwindoff /;
3033  set j_to_scale(j)          / elwind, elwindon, elwindoff /;
3034  set jinv_to_scale(jinv)    / elwindon, elwindoff /;
3035   
3036  set jel_wind(jel)          / elwindon, elwindoff /;
3037  set jreal_wind(jreal)      / elwindon, elwindoff /;
3038  set jinv_wind(jinv)        / elwindon, elwindoff /;
3039   
3040  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
3041          el.elwind
3042          elwind.(elwindon,elwindoff)
3043  /;
3044   
3045  set jmcost_inv(jreal)      / elwindon, elwindoff /;
3046   
3047  set iq                     / ces_elwind/;
3048  set ices_el(iq)            / ces_elwind/;
3049   
3050  set map_ices_el(ices_el,j) / ces_elwind.elwind /;
3051   
3052  set wind_dist              / near, inter, far /;
3053  set wind_depth             / shallow, trans, deep /;
3054  set wind_class             / c1*c9 /;
3055  alias(wind_class,wind_class2);
3056  set wind_type              / onshore, offshore /;
3057   
3058  set jintren(j) / elwind /;
3059   
3060  *-------------------------------------------------------------------------------
3062   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
3064  *-------------------------------------------------------------------------------
3065  * Solar Powerplants (PV and CSP) to the electrical system
3066  *-------------------------------------------------------------------------------
3067   
3068  *-------------------------------------------------------------------------------
3070   
3071  * introduce solar energy, pv and csp in the sets
3072   
3073  set j                      / elsolar, elpv, elcsp /;
3074  set jreal(j)               / elpv, elcsp /;
3075  set jel(jreal)             / elpv, elcsp /;
3076  set jinv(jreal)            / elpv, elcsp /;
3077   
3078  set jel_own_mu(jel)        / elpv, elcsp /;
3079  set jinv_own_k(jinv)       / elpv, elcsp /;
3080   
3081  set jel_ren(jel)           / elpv, elcsp /;
3082  set jreal_to_scale(jreal)  / elpv, elcsp /;
3083  set j_to_scale(j)          / elpv, elcsp /;
3084  set jinv_to_scale(jinv)    / elpv, elcsp /;
3085   
3086  set map_j(j,jj) 'Relationships between Energy Technology Sectors'       /
3087  el.elsolar
3088  elsolar.(elpv,elcsp)
3089  /;
3090   
3091  set jmcost_inv(jreal)      / elpv, elcsp /;
3092   
3093  set iq                     / ces_elpv,ces_elcsp/;
3094  set ices_el(iq)            / ces_elpv,ces_elcsp/;
3095  set map_ices_el(ices_el,j) /ces_elpv.elpv,ces_elcsp.elcsp /;
3096   
3097   
3098  set jel_solar(jel)          / elpv, elcsp /;
3099  set jreal_solar(jreal)      / elpv, elcsp /;
3100  set jinv_solar(jinv)        / elpv, elcsp /;
3101   
3102  set solar_dist          / near, far /;
3103  set solar_class_all             / c1*c26 /;
3104  set solar_class / solcf1*solcf26 /;
3106   
3107  set jintren(j) / elpv, elcsp /;
3108   
3109  set jel_firm(jel) 'Firm, non intermittent technologies' / elcsp /;
3110   
3111  set map_solar_class_all(solar_class, solar_class_all) /
3114      #solar_class:#solar_class_all
3117  /;
3118   
3119  *-------------------------------------------------------------------------------
3121   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
3123  *-------------------------------------------------------------------------------
3124  * Technology development scenarios
3125  *-------------------------------------------------------------------------------
3126   
3128   
3129  acronym low, medium, high, high_oecd, high_non_oecd;
3130   
3131  parameter tech_scen(*);
3132   
3133  scalar tech_cost_var / 0.01 /;
3134   
3135  table ccs_inv_var(jlccs,*) 'multiplier of investment cost for ccs'
3136            low      high
3137  elcigcc   0.43     1.51
3138  elbigcc   0.44     1.52
3139  elgasccs  0.51     1.50
3140  elpc_ccs  0.46     1.51
3141  elpc_oxy  0.35     1.55
3142  ;
3143   
3144  *-------------------------------------------------------------------------------
3146   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
3148  *-------------------------------------------------------------------------------
3149  * Oil Extraction
3150  * Options:
3151  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
3152  *-------------------------------------------------------------------------------
3153   
3155   
3156  set f_mkt /'oil'/;
3157   
3158  set extract(f) / oil/;
3159   
3160  set oilg /g1*g8/;
3161  alias(oilg,oilgg);
3162   
3163  set map_oilgrade(oilg,oilgg);
3164  map_oilgrade(oilg,oilgg) = no;
3165  map_oilgrade(oilg,oilgg) = yes$(ord(oilg) eq ord(oilgg));
3166   
3167  set valid_oilg(oilg);
3168  valid_oilg(oilg)=yes;
3169   
3171   
3172  set conf /
3173  'fossil_oil'.'M'
3175  /;
3176   
3177  set sys 'emission adjustement inventory' /
3178          extract
3179  /;
3180   
3181  $macro sum_oilg(expr) (sum(oilgg$map_oilgrade(oilg,oilgg), &expr))
3182   
3183  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
3186  *-------------------------------------------------------------------------------
3187  * Uranium Resources
3188  *-------------------------------------------------------------------------------
3189   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
3192  *-------------------------------------------------------------------------------
3193  * Gas Resources
3194  *-------------------------------------------------------------------------------
3195   
3197   
3198  set extract(f) / gas/;
3199   
3200  set conf /
3201  'fossil_gas'.'M'
3202  /;
3203   
3204  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
3207  *-------------------------------------------------------------------------------
3208  * Coal Resources
3209  *-------------------------------------------------------------------------------
3210   
3212   
3213  set extract(f) / coal/;
3214   
3215  set conf /
3216  'fossil_coal'.'M'
3217  /;
3218   
3219  *-------------------------------------------------------------------------------
3221   
3222   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
3224  *-------------------------------------------------------------------------------
3225  * Climate
3226  *
3227  * Represents the climate
3228  * - based on the DICE model equations
3229  * - Radiative forcing for non CO2 ghgs
3230  * - parameters calibrated to reproduce MAGICC6.4 default response
3231  *
3232  *  Options:
3233  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
3234  * - $setglobal cooperate_on_climate {'YES','NO'}
3235  * - 'YES'(default): Countries within a coalition act in cooperation
3236  *   'NO': Countries within a coalition act individually
3237  *
3238  *-------------------------------------------------------------------------------
3239   
3241   
3242  set oghg(e) 'Other GHGs' /
3243  c2f6
3244  c6f14
3245  cf4
3246  ch4
3247  hfc125
3248  hfc134a
3249  hfc143a
3250  hfc227ea
3251  hfc23
3252  hfc245fa
3253  hfc32
3254  hfc43-10
3255  n2o
3256  sf6
3257  /;
3258   
3259  set m /
3260          atm 'Atmosphere'
3261          upp 'Upper box'
3262          low 'Deep oceans'
3263        /;
3264   
3265  alias (m,mm);
3266   
3267  set map_e_bunk(e,ee) 'map regional and international emissions' / /;
3268   
3269  set conf /
3271  /;
3272   
3273  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
3276  *-------------------------------------------------------------------------------
3277  * Long-run Damages from Climate Change
3278  * - Economic impacts
3279  * - Adaptation
3280  *-------------------------------------------------------------------------------
3281   
3283   
3284  set
3285      iq  'Nodes representing economic values (which have a Q)' /ada, cap, act, gcap/
3286      g   'Goods sector' /prada,rada,scap/
3287  ;
3288   
3289  set conf /
3290  'mod_damage'.'enabled'
3293  /;
3294   
3295  *-------------------------------------------------------------------------------
3297   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
3299  *-------------------------------------------------------------------------------
3300  * Light-duty Vehicles for Personal Transport
3301  *-------------------------------------------------------------------------------
3302   
3304   
3305  set j            / trad_cars, hybrid, plg_hybrid, edv, battery, pt /;
3306  set jreal(j)     / trad_cars, hybrid, plg_hybrid, edv, battery /;
3307  set jfed(jreal)  / trad_cars, hybrid, plg_hybrid /;
3308  set jinv(jreal)  / trad_cars, hybrid, plg_hybrid, edv /;
3309  set rd(j)        / battery /;
3310  set jrd(jreal)   / battery /;
3311   
3312  set jveh(jreal)    'Light Duty Vehicle technologies'
3313                   / trad_cars, hybrid, plg_hybrid, edv /;
3314  set jfedveh(jfed)  'Light Duty Vehicle technologies with fuel feeding'
3315                   / trad_cars, hybrid, plg_hybrid /;
3316  set jveh_invfix(jveh) / trad_cars /;
3317  set jveh_inv(jinv)    / trad_cars, hybrid, plg_hybrid, edv /;
3318   
3319  set oge_ai_set   / c1*c5 /;
3320  set krd_lo_set   / a, b, c /;
3321   
3322  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
3323      en.pt
3324      pt.(trad_cars, hybrid, plg_hybrid)
3325  /;
3326   
3327  set jmcost_inv(jreal) / trad_cars, hybrid, plg_hybrid, edv, battery /;
3328   
3329  set transp_qact(fuel,jfed) 'mapping of activities for transport sectors' /
3330      oil.trad_cars
3331      oil.hybrid
3332      oil.plg_hybrid
3333   
3334      trbiofuel.trad_cars
3335      trbiofuel.hybrid
3336      trbiofuel.plg_hybrid
3337   
3338      advbiofuel.trad_cars
3339      advbiofuel.hybrid
3340      advbiofuel.plg_hybrid
3341  /;
3342   
3343  jrd_lbd('battery') = yes;
3344   
3345  set jveh_rd(j);
3346  jveh_rd(j)=yes$(sum(jreal$(sameas(jreal,j)), jveh(jreal)) and rd(j));
3347   
3348  set jveh_fed(jreal);
3349  jveh_fed(jveh)=yes$(jfed(jveh));
3350   
3351  set el_out /
3352  edv
3353  /;
3354   
3355  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
3358  *-------------------------------------------------------------------------------
3359  * Road Freight Transport
3360  *-------------------------------------------------------------------------------
3362   
3363   
3364  set j                       / trad_stfr, hbd_stfr, plg_hbd_stfr, edv_stfr, frt /;
3365  set jreal(j)                / trad_stfr, hbd_stfr, plg_hbd_stfr, edv_stfr /;
3366  set jfed(jreal)             / trad_stfr, hbd_stfr, plg_hbd_stfr /;
3367  set jinv(jreal)             / trad_stfr, hbd_stfr, plg_hbd_stfr, edv_stfr /;
3368  set jfixed_mcost_inv(jreal) / trad_stfr /;
3369   
3370  set jfrt(jreal) 'Road Freight Vehicle technologies'
3371                              / trad_stfr, hbd_stfr, plg_hbd_stfr, edv_stfr /;
3372  set jfedfrt(jfed) 'Road Freight Vehicle technologies with fuel feeding'
3373                              / trad_stfr, hbd_stfr, plg_hbd_stfr /;
3374  set jfrt_invfix(jfrt)       / trad_stfr /;
3375  set jfrt_inv(jinv)          / trad_stfr, hbd_stfr, plg_hbd_stfr, edv_stfr /;
3376   
3377  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
3378      en.frt
3379      frt.(trad_stfr, hbd_stfr, plg_hbd_stfr)
3380  /;
3381   
3382  set jmcost_inv(jreal)       / trad_stfr, hbd_stfr, plg_hbd_stfr, edv_stfr /;
3383   
3384  set transp_freight_qact(fuel,jfed) 'mapping of activities for transport sectors' /
3385   
3386      oil.trad_stfr
3387      oil.hbd_stfr
3388      oil.plg_hbd_stfr
3389   
3390      trbiofuel.trad_stfr
3391      trbiofuel.hbd_stfr
3392      trbiofuel.plg_hbd_stfr
3393   
3394      advbiofuel.trad_stfr
3395      advbiofuel.hbd_stfr
3396      advbiofuel.plg_hbd_stfr
3397   
3398  /;
3399   
3400  set el_out /
3401  edvfr
3402  /;
3403   
3404  *-------------------------------------------------------------------------------
3406   
3407   
3408   
3409   
3410   
3411   
3412  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
3414  *-------------------------------------------------------------------------------
3415  * Traditional Biomass
3416  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
3417  *  - require post_process to be launch before
3418  *-------------------------------------------------------------------------------
3419   
3421   
3422  set fuel / trbiomass /;
3423  set f(fuel) / trbiomass /;
3424   
3425  set j /neltrbiomass/;
3426  set jreal /neltrbiomass/;
3427  set jnel(jreal) /neltrbiomass/;
3428  set jfed(jreal) /neltrbiomass/;
3429   
3430  set map_j(j,jj) / nelbio.neltrbiomass /;
3431   
3432  $macro trbio_ratio(t) \
3433  min(1,trbio_ctr('beta',n)*log(mer2ppp(&t,n)*1e6*Q.l('y',&t,n)/l(&t,n))+trbio_ctr('alpha',n))
3434   
3435  set conf /
3437  /;
3438   
3439  *-------------------------------------------------------------------------------
3441   
3442  * Optional modules
3443   
3444  * Policy modules
3445   
3446  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
3450  *-------------------------------------------------------------------------------
3451  * Call modules by order
3452  *-------------------------------------------------------------------------------
3456   
3457  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
3459  *-------------------------------------------------------------------------------
3460  * Algorithm
3461  *-------------------------------------------------------------------------------
3462   
3464   
3465  * Convergence tolerance
3466  parameter errtol(ierr) 'Error tolerances for convergence';
3467  errtol('oil')   = 0.005;
3468  errtol('wgt')   = 1.00;
3469  errtol('inv')   = 0.5;
3470  errtol('pes')   = 0.1;
3471  loop(c_mkt, errtol(ierr)$map_ierr_e(ierr, c_mkt) = 0.01);
3472  errtol('co2')   = 0.05;
3473   
3474  * ADMM parameters in the objective function
3475  parameter
3476      rho_admm(*,t) 'ADMM penalty coefficient'
3477      u_admm(*,t) 'ADMM dual variable scaled'
3478      x_admm(*,t,n) 'Regional trade imbalance'
3479      xavg_admm(*,t) 'Average global trade imbalance'
3480  ;
3481   
3482  * Relax tolerance for SSP5
3484   
3485  *-------------------------------------------------------------------------------
3487   
3488  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
3490  *-------------------------------------------------------------------------------
3491  * Time
3492  * - Temporal structure
3493  * - Fixed time periods
3494  * - States of the world
3495  *-------------------------------------------------------------------------------
3496   
3498   
3501   
3502  *-------------------------------------------------------------------------------
3504   
3505  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
3507  *-------------------------------------------------------------------------------
3508  * Geographic dimension and mapping with countries
3509  *-------------------------------------------------------------------------------
3510   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
3513  *-------------------------------------------------------------------------------
3514  * Non-Cooperative Setup
3515  *
3516  * Each region is defined as an individual coalition.
3517  *
3518  *-------------------------------------------------------------------------------
3519   
3521   
3522  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
3524  *-------------------------------------------------------------------------------
3525  * Welfare
3526  *-------------------------------------------------------------------------------
3527   
3529   
3530  scalar eta 'inverse of the intertemporal elasticity of substitution';
3531  eta = 0.66; #exponent of power utility function (set 1.01 if logarithm)
3532   
3533  parameter gamma 'Degree of relative inequality aversion (between regions)' /0/;
3534   
3535  parameter utility_cebge_global;
3536  parameter utility_cebge_regional(n);
3537  parameter utility_cebge_pc_global;
3538  parameter utility_cebge_pc_regional(n);
3539   
3540  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
3543  *-------------------------------------------------------------------------------
3544  * Economy
3545  * - Production and Consumption definition
3546  * - Top-level of the production function
3547  * Options:
3548  * --original_ssp=1 : original SSP population and GDP data
3549  *-------------------------------------------------------------------------------
3550   
3552   
3553  * Parameters from static calibration
3554  parameter alpha(*,n) 'Production function shares of calibration nodes';
3555  parameter q0(*,n)    'Base year values of calibration nodes';
3556  parameter rho(*,t)     'Rho CES coefficients';
3557  parameter delta0(g)  'Final good depreciation';
3558   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_calib.gdx
--- LOAD  alpha = 1:alpha
--- LOAD  q0 = 2:q0
--- LOAD  delta0 = 5:delta0
--- LOAD  rho = 3:rho
3565   
3566  parameter ykali(t,n) 'GDP for the dynamic calibration [T$]';
3567   parameter ssp_ykali(*,t,n); execute_loaddc 'data_witch17/data_baseline' ssp_ykali; ykali(t,n) = ssp_ykali('ssp2',t,n);
3568   
3569  parameter l(t,n) 'Population [million people]';
3570   parameter ssp_l(*,t,n); execute_loaddc 'data_witch17/data_baseline' ssp_l; l(t,n) = ssp_l('ssp2',t,n);
3571   
3572  parameter gdppc_kali(t,n) 'GDP per capita used for calibration [MER]';
3573  gdppc_kali(t,n) = ykali(t,n) / l(t,n) * 1e6;
3574   
3575  * Adjust population and GDP data until present to historical values maintaining GDP per capita growth
3577   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
3579  parameter ykali_valid(t,n), l_valid(t,n);
--- LOAD  ykali_valid = 10:ykali_valid_wdi
--- LOAD  l_valid = 11:l_valid_wdi
3581  parameter i_valid(*,t,n);
--- LOAD  i_valid = 12:i_valid_wdi
3584   
3585  parameter lrate(t,n);
3586  parameter gdppcrate(t,n);
3587   
3588  loop((t,tp1)$(pre(t,tp1)),
3589    lrate(tp1,n) = l(tp1,n) / l(t,n);
3590    gdppcrate(tp1,n) =  gdppc_kali(tp1,n) / gdppc_kali(t,n);
3591  );
3592   
3593  l(t,n)$(year(t) le 2015) = l_valid(t,n);
3594  gdppc_kali(t,n)$(year(t) le 2015) = ykali_valid(t,n) / l_valid(t,n) * 1e6;
3595   
3596  loop((t,tp1)$(pre(t,tp1) and (year(tp1) gt 2015)),
3597    l(tp1,n) = l(t,n) * lrate(tp1,n);
3598    gdppc_kali(tp1,n) = gdppc_kali(t,n) * gdppcrate(tp1,n);
3599  );
3600   
3602   
3603  ykali(t,n) = gdppc_kali(t,n) * l(t,n) / 1e6;
3604   
3605  * Conversion factors between PPP and MER
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_baseline.gdx
3607  parameter ppp2mer(t,n) 'ratio to convert PPP to MER';
--- LOAD  ppp2mer = 3:ppp2mer
3610  parameter mer2ppp(t,n) 'ratio to convert MER to PPP';
3611  mer2ppp(t,n) = 1 / ppp2mer(t,n);
3612   
3613  * TFP
3614  parameter tfpy(t,n) 'Total Factor Productivity';
3615  parameter tfpn(t,n) 'Total Factor Productivity on energy';
3616   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_tfp_ssp2.gdx
--- LOAD  tfpy = 6:tfpy
--- LOAD  tfpn = 7:tfpn
3622   
3623  parameter m_eqq_y(t,n) 'Marginal value of the production equation';
3624   
3625  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
3628  *-------------------------------------------------------------------------------
3629  * Energy sector
3630  *-------------------------------------------------------------------------------
3631   
3633   
3634  * Calibration parameters
3635  parameters
3636      mcost_inv0(j,n)
3637      p_mkup0(fuel,n)       'Constant regional price markup [T$/TWh]'
3638      oem0(jreal,n)
3639      mu0(jel,n)            'Capacity factor of maximum production [TWh/TW]'
3640      csi0(fuel,jfed,n)     'Sectoral efficiency ratio [TWh/TWh]'
3641      k_en0(jel,n)
3642      delta_en0(jreal,n)    'Yearly depreciation of capital of power technologies'
3643      k_en_valid_old(*,t,n)
3644      k_en_valid_tot(*,t,n)
3645  ;
3646   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_calib.gdx
--- LOAD  mcost_inv0 = 6:mcost_inv0
--- LOAD  p_mkup0 = 7:p_mkup0
--- LOAD  oem0 = 8:oem0
--- LOAD  mu0 = 9:mu0
--- LOAD  csi0 = 10:csi0
--- LOAD  k_en0 = 11:k_en0
--- LOAD  delta_en0 = 12:delta_en0
--- LOAD  k_en_valid_tot = 16:k_en_valid_tot
--- LOAD  k_en_valid_old = 15:k_en_valid_old
3652   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
3654  parameter k_en_valid_gcpt(*,t,n);
--- LOAD  k_en_valid_gcpt = 14:k_en_valid_gcpt
3656  parameter k_en_valid_iaea(*,t,n);
--- LOAD  k_en_valid_iaea = 5:k_en_valid_iaea
3659   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_core_energy.gdx
3661   
3662  parameter lifetime(*,n) 'Lifetime of capital [Years]'
--- LOAD  lifetime = 6:lifetime
3664   
3665  parameter csi_max_2100(fuel,jfed,n) 'Maximum Sectoral efficiency achievable in 2100 [TWh/TWh]';
--- LOAD  csi_max_2100 = 1:csi_max_2100
3667   
3668  * -> cexs Coefficients for fuels supply curves
3669  * a      'Marginal cost of extraction'
3670  * b      'Coefficient on quadratic term'
3671  * c      'Coefficient on cumulative extraction'
3672  * exp    'Power of cumulative extraction'
3673  * cum0   'Cumulative extraction at time zero [millions TWh]'
3674  * res0   'Start ult.ly rec. resources [Millions TWh]'
3675  * resgr0 'Fixed annual growth rate of tot.ult.rec.res.'
3676  * fast   'Fraction of tot res at which price grows fast'
3677  * scl    'Scale up parameter from 2002 to 2005 prices'
3678  * pfirst 'International price at 2002'
3679  * extra  'Extra costs (e.g. conversion and enrichment for uranium)'
3680  parameter cexs(f,*) 'Coefficients for oil, coal, gas and uranium supply curves';
--- LOAD  cexs = 2:cexs
3682   
3683  parameter el_old_start_depreciation_year(jreal,n) 'Starting period for vintaging old capital';
--- LOAD  el_old_start_depreciation_year = 3:el_old_start_depreciation_year
3685   
3686  parameter p_mkup_adjust(fuel,t,n) 'Fuel/time/regions adjustment for p_mkup';
--- LOAD  p_mkup_adjust = 5:p_mkup_adjust
3688   
3689  parameter noeloil(n) 'Regional flag for noeloil';
--- LOAD  noeloil = 4:noeloil
3691   
3693   
3694  parameters mu(jel,t,n)  'Capacity factor of maximum production [TWh/TW]';
3695   
3696  parameter wcum(*,t) 'World cumulated quantities';
3697   
3698  parameter tpes(t,n) 'Primary Energy Supply - Total (Direct use concept for non fossil fuels: primary energy=final energy) [TWh]';
3699   
3700  scalar twh2ej;
3701  twh2ej = 3.6 * 1e-3;
3702   
3703  parameter prodpp(f,t,n);
3704  parameter cum_prodpp(f,t,n);
3705   
3706  parameter delta_en(jreal,t,n);
3707  parameter delta_lcost(jreal,t,n);
3708   
3709  parameter csi(fuel,jfed,t,n);
3710   
3711  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
3714  *-------------------------------------------------------------------------------
3715  * Carbon Emissions
3716  * - Total CO2 emissions and CO2 Fossil fuel and Industry
3717  * - CO2 emission costs
3718  * - GHG permit market
3719  *-------------------------------------------------------------------------------
3720   
3722   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_core_emissions.gdx
3724  parameter emi_st(fuel) 'Stoichiometric coefficient for fuels [GTonC/TWh]';
--- LOAD  emi_st = 1:emi_st
3727   
3728  parameter emi_sys(sys,t,n) 'emi_st adjustments to historical emissions, by sectors';
3729  emi_sys(sys,t,n) = 1; # Default value before calibration
3730   
3731   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
3733  parameter q_emi_valid(*,t,n);
--- LOAD  q_emi_valid = 13:q_emi_valid_ceds
3736   
3737  scalar c2co2;
3738  c2co2 = 44 / 12;
3739   
3740  parameter emi_cap(t,n) 'Emissions permits cap [GtCe]';
3741   
3742  parameter m_eqq_emi_lim(t,n) 'Marginal value of emission permits cap equation';
3743  parameter m_eqq_emi_tree(t,n,e) 'Marginal value of the emission accounting tree equation';
3744   
3745  parameter carbonprice(t,n) 'Carbon price (either the price of permits, the carbon tax, or na) [T$/GtCeq]';
3746  carbonprice(t,n) = 0;
3747   
3748  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
3751  *-------------------------------------------------------------------------------
3752  * Research & Development
3753  * Options:
3754  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
3755  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
3756  *-------------------------------------------------------------------------------
3757   
3759   
3760  parameter rd_delta(rd) 'R&D depreciation rate';
3761  rd_delta(rd) = 0.05;
3762   
3763  scalar rd_crowd_out 'R&D crowding out';
3764  rd_crowd_out = 4;
3765   
3766  * R&D learning equation coefficients (rd,param)
3767  * a: scale parameter [T$]
3768  * b = 0.18 (for 'en', slightly higher elasticity to the own investments)
3769  * c = 0.38 since Popp (2004, JEEM) has 0.53 for the total effect from knowledge stock minus the own knowledge stock 0.53-0.15=0.38
3770  * d = 0.15: 1% increase in spillovers increases output of domestic ideas by 0.15%
3771  * wcum0: Initial cumulative capacity
3772  * lbr: learning by researching rate
3773  * lbd: learning by doing rate
3774  parameter rd_coef(*,*) 'R&D learning equation coefficients';
3775  rd_coef(jrd,'krd0_year') = 2005;
3776   
3777  * R&D learning timing (rd,param)
3778  * gap: number of year after learning
3779  * start: starting year for endogenous learning
3780  parameter rd_time(jrd,*) 'R&D learning timing';
3781   
3782  parameter krd0(rd,n) 'Initial R&D capital';
3783  parameter wkrd0(rd) 'Initial average R&D capital in leader regions';
3784   
3785  parameter krd_lead(rd,t) 'Total R&D capital in leader regions';
3786  parameter krd_oth_lead_krd(rd,t,n);
3787   
3788  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
3791  *-------------------------------------------------------------------------------
3792  * Default Climate Policy Implementation
3793  *
3794  * Options:
3795  *    --policy={bau (default),ctax}
3796  *        Implement a climate policy setting
3797  *  [ --scen= ]
3798  *        Policy variant.
3799  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
3800  *          * XXX for a fixed percentage/yr (e.g. 5) growth
3801  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
3802  *  [ --ctax_year=2020 ]
3803  *        Starting year of the carbon tax
3804  *  [ --ctax_initial=30 ]
3805  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
3806  *
3807  *-------------------------------------------------------------------------------
3809   
3810  parameter ctax(ghg,t,n) 'Carbon tax [T$/GTonC]';
3811   
3812  *-------------------------------------------------------------------------------
3814   
3815  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
3817  *-------------------------------------------------------------------------------
3818  * Energy efficiency
3819  *-------------------------------------------------------------------------------
3820   
3822   
3823  rd_delta('en') = 0.05;
3824  rd_coef('en','a') = 0.0419258;
3825  rd_coef('en','b') = 0.18;
3826  rd_coef('en','c') = 0.3840625;
3827  rd_coef('en','d') = 0.15;
3828   
3829  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
3832  *-------------------------------------------------------------------------------
3833  * Hydro Power
3834  *-------------------------------------------------------------------------------
3835   
3837   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_hydropower.gdx
3839  parameter k_en_hydro(n) 'Factor for exogenous investment profiles';
--- LOAD  k_en_hydro = 1:k_en_hydro
3842   
3843  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
3846  *-------------------------------------------------------------------------------
3847  * System Integration:
3848  * - Capacity constraint
3849  * - Flexibility constraint
3850  * - Grid Investment
3851  * - Capacity growth constraint
3852  *-------------------------------------------------------------------------------
3853   
3855   
3856  * Capacity constraint
3857   
3858  scalar cv_coeff / 0.9 /;
3859  scalar cv_exp / -2.05 /;
3860  scalar peak_load_fraction / 2 /;
3861   
3862  parameter firm_coeff(n);
3863   
3864  * Flexibility constraint
3865   
3866  parameter flex_coeff(*) 'Flexibility constraint coefficient' /
3867  elgastr_old        0.5
3868  elgastr_new        0.5
3869  elgasccs           0.5
3870  elhydro_old        0.5
3871  elhydro_new        0.5
3872  elpb_new           0.3
3873  elpb_old           0.3
3874  elbigcc            0.3
3875  elpc_old           0.15
3876  elpc_new           0.15
3877  elpc_late          0.15
3878  elcigcc            0.15
3879  elpc_ccs           0.15
3880  elpc_oxy           0.15
3881  eloil_old          0.15
3882  eloil_new          0.15
3883  elcsp              0
3884  elnuclear_new      0
3885  elnuclear_old      0
3886  elpv              -0.05
3887  elwindon          -0.08
3888  elwindoff         -0.08
3889  load              -0.1
3890  /;
3891   
3892  scalar storage_eff;
3893  storage_eff = 0.85;
3895   
3896  * Grid
3897   
3898  scalar grid_cost 'Cost of transmission and distribution lines [$/W]';
3899  grid_cost = 0.4;
3900   
3901  parameter grid_coeff(jintren,*) /
3902  elpv.mult   1
3903  elpv.exp    1.5
3904  elwind.mult 1
3905  elwind.exp  1.5
3906  /;
3907   
3908  parameter grid_delta(t,n) 'Depreciation rate of the grid';
3909  lifetime('grid',n) = 60; # Lifetime of 60 years
3910  grid_delta(t,n) = 1 - exp( 1 / ( - lifetime('grid',n) + (0.01/2) * lifetime('grid',n)**2) );
3911   
3912  * Transmission cost
3913   
3914  parameter grid_trans_cost(*,*) 'Additional transmission cost[$/W]' /
3915  elwindon.near   0
3916  elwindon.inter  0.12
3917  elwindon.far    0.4
3918  elwindoff.near  0
3919  elwindoff.inter 0.2
3920  elwindoff.far   0.4
3921  elpv.far        0.2
3922  elcsp.far       0.2
3923  /;
3924   
3925  * Capacity growth constraint
3926   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_systint.gdx
3928   
3929  parameter el_free_cap(n) 'Annual freely allowed capacity addition for the capacity growth constraint';
--- LOAD  el_free_cap = 1:el_free_cap
3932   
3933  parameter mkt_growth_rate(jinv,t,n) 'Annual growth rate of power technologies capacity for the capacity growth constraint';
3934   
3935  * elwindon
3936  mkt_growth_rate('elwindon',t,n)$(year(t) ge 2020) = 0.12;
3937  mkt_growth_rate('elwindoff',t,n)$(year(t) ge 2020) = 0.15;
3938   
3939  * elnuclear
3940  mkt_growth_rate('elnuclear_new',t,n) = 0.1;
3941   
3942  * elsolar
3943  mkt_growth_rate('elpv',t,n)$(year(t) ge 2020) = 0.2;
3944  mkt_growth_rate('elcsp',t,n)                  = 0.2;
3945   
3946  * elcss
3947  mkt_growth_rate(jinv,t,n)$(sum(jccs$sameas(jccs,jinv),1) and sum(jel$sameas(jel,jinv),1)) = 0.075;
3948   
3949  * No constraint before 2010, for CCS before 2005
3950  mkt_growth_rate(jinv,t,n)$(year(t) le 2010 ) = 0;
3951  mkt_growth_rate(jinv,t,n)$(sum(jccs$sameas(jccs,jinv),1) and sum(jel$sameas(jel,jinv),1) and year(t) ge 2010 and year(t) le 2030) = 0.02;
3952   
3953  * Relax the constraint after 2100
3954  mkt_growth_rate(jinv,t,n)$(year(t) gt 2100)  = 0;
3955   
3956  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
3959  *-------------------------------------------------------------------------------
3960  * Nuclear power plants
3961  *-------------------------------------------------------------------------------
3962   
3964   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_nuclear.gdx
3966   
3967  parameter cwaste(iwaste);
--- LOAD  cwaste = 1:cwaste
3969   
3971   
3972  parameter cwaste_reg(iwaste,n);
3973  cwaste_reg(iwaste,n) = cwaste(iwaste);
3974  cwaste_reg('rho',n) = 1.8;
3975   
3976  parameter wastemgm(t,n) 'Waste management costs';
3977   
3978  scalar twh2tonU / 24.4119 /;
3979   
3980  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
3983  *-------------------------------------------------------------------------------
3984  * GHG module
3985  * - CH4 FFI + CH4 waste + CH4 open fires
3986  * - N2O FFI + N2O waste + N2O open fires
3987  *-------------------------------------------------------------------------------
3988   
3990   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
3992  parameter q_emi_valid_ghg;
3993  parameter q_emi_valid_ghg_primap;
--- LOAD  q_emi_valid_ghg = 13:q_emi_valid_ceds
--- LOAD  q_emi_valid_ghg_primap = 15:q_emi_valid_primap
3996  q_emi_valid_ghg('n2o_wst',t,n) = q_emi_valid_ghg_primap('n2o_wst',t,n);
3997  q_emi_valid_ghg('n2o_ffi',t,n) = q_emi_valid_ghg_primap('n2o_ffi',t,n);
3998   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_ghg.gdx
4000   
4001  parameter emi_ghg_hist(e,t,n) 'Historical emissions EDGAR v4.2 (2005,2010) [GtCe]';
--- LOAD  emi_ghg_hist = 3:emi_ghg_hist
4003   
4004  parameter ghg_baseline(e,t,n);
4005   
4006  * Waste emissions baseline
4007  parameter waste_emi_alpha(waste,n) 'region-dependen alpha coefficient to project waste emissions';
4008  parameter waste_emi_beta(waste) 'beta coefficient to project waste emissions';
4009  waste_emi_beta('ch4_wst') = 0.1022529;
4010  waste_emi_beta('n2o_wst') = 0.08610055;
4011  * compute alpha to match 2010 regional emissions
4012  waste_emi_alpha(waste,n) = log(smax(tt$(tperiod(tt) eq 3), q_emi_valid_ghg(waste,tt,n)) /
4013                                 smax(tt$(tperiod(tt) eq 3), l(tt,n))) -
4014                             waste_emi_beta(waste) * log(smax(tt$(tperiod(tt) eq 3), ykali(tt,n)) /
4015                                                         smax(tt$(tperiod(tt) eq 3), l(tt,n)));
4016  ghg_baseline(waste,t,n)$(year(t) le 2015) = q_emi_valid_ghg(waste,t,n);
4017  ghg_baseline(waste,t,n)$(year(t)>2015) = l(t,n) * exp( waste_emi_alpha(waste,n) +
4018                                                      waste_emi_beta(waste) * log(ykali(t,n)/l(t,n))
4019                                                    );
4020   
4021  * FFI emission factors
4022  parameter emi_fac(e,j) 'Technology specific emission factors [Tg/PJ]';
--- LOAD  emi_fac = 1:emi_fac
4024   
4025  parameters emi_ffac0(e,f,n), emi_ffac(e,f,t,n) 'Fuel-region specific emission factors [Tg/PJ]';
--- LOAD  emi_ffac0 = 2:emi_ffac0
4027   
4028  scalar emi_ch4_tp 'annual rate of decreasing emission leakage [%]' /1/;
4029   
4030  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
4033  *-------------------------------------------------------------------------------
4034  * F-gases
4035  * - LLF
4036  * - SLF
4037  *-------------------------------------------------------------------------------
4038   
4040   
4041  * Baseline emissions
4042  parameter fgases_baseline(e,t,n) 'Baseline f-gases emissions for MAC [GTonCeq]';
4043   parameter ssp_fgases_baseline(*,e,t,n); execute_loaddc 'data_witch17/data_mod_fgases' ssp_fgases_baseline; fgases_baseline(e,t,n) = ssp_fgases_baseline('ssp2',e,t,n);
4044   
4045  * Extrapolation post-2100
4046  fgases_baseline(e,t,n)$(year(t) gt 2100) = max(0,(smax(tt$(year(tt) eq 2100), fgases_baseline(e,tt,n))) +
4047                                             (4.516 * exp(-0.2 * (year(t) - 2100)) *
4048                                             (1.2214 * exp(0.2 * (year(t) - 2100))-1)-1) *
4049                                             smax((tt,tm1)$(year(tt) eq 2100 and pre(tm1,tt)), fgases_baseline(e,tt,n) - fgases_baseline(e,tm1,n)) / tlen(t));
4050   
4051  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
4054  *-------------------------------------------------------------------------------
4055  * Landuse [simplified version of the land-use model]
4056  *-------------------------------------------------------------------------------
4057   
4059   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_landuse.gdx
4061  scalar wbio2_price 'Coefficient of the quadratic function of woody biomass';
4062  parameter wbio2_max(n) 'Maximum woody biomass [TWh]';
--- LOAD  wbio2_price = 1:wbio2_price
--- LOAD  wbio2_max = 2:wbio2_max
4064  parameter ch4_agr_baseline(t,n) 'CH4 Agriculture emission baseline [GtCe]';
4065  parameter n2o_agr_baseline(t,n) 'N2O Agriculture emission baseline [GtCe]';
4066  parameter co2lu_baseline(t,n) 'CO2 Land-use emission baseline [GtCe]';
--- LOAD  ch4_agr_baseline = 3:ch4_agr_baseline
--- LOAD  n2o_agr_baseline = 4:n2o_agr_baseline
--- LOAD  co2lu_baseline = 5:co2lu_baseline
4069   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
4071  parameter q_emi_valid_lu(*,t,n)  'Historical land-use emissions [GtCe]';
4072  parameter q_emi_valid_lu_primap(*,t,n) 'Historical land-use emissions --- PRIMAP [GtCe]';
4073  parameter q_fuel_valid_weo(*,t,n) 'Historical fuel consumption --- WEO [GtCe]';
--- LOAD  q_emi_valid_lu = 16:q_emi_valid_fao
--- LOAD  q_emi_valid_lu_primap = 15:q_emi_valid_primap
--- LOAD  q_fuel_valid_weo = 9:q_fuel_valid_weo
4076   
4077  q_emi_valid_lu('n2o_agr',t,n) = q_emi_valid_lu_primap('n2o_agr',t,n);
4078  q_emi_valid_lu('ch4_agr',t,n) = q_emi_valid_lu_primap('ch4_agr',t,n);
4079   
4080  parameter cluprice(t,n) 'Price of CO2 landuse [T$/GtCeq]';
4081  cluprice(t,n) = 0;
4082   
4083  parameter cluprice_iter(siter,t,n);
4084  cluprice_iter(siter,t,n) = 0;
4085   
4086  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
4089  *-------------------------------------------------------------------------------
4090  * Bioenergy power plant
4091  *-------------------------------------------------------------------------------
4092   
4094   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_elbio.gdx
4096  parameter elpb_capacity(n,t) 'Pulverized biomass 2010/2015 capacity [TW]';
--- LOAD  elpb_capacity = 1:elpb_capacity
4099   
4100  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
4103  *-------------------------------------------------------------------------------
4104  * Traditional Biofuels
4105  * - Requires the precedence of mod_landuse
4106  *-------------------------------------------------------------------------------
4107   
4109   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_trbiofuel.gdx
4111   
4112  * Maximum traditionnal biofuel production
4113  parameter trbiofuel_max(n) 'Max traditionnal Biofuel production';
--- LOAD  trbiofuel_max = 1:trbiofuel_max
4115   
4117   
4118   
4119  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
4122  *-------------------------------------------------------------------------------
4123  * Advanced biofuel
4124  * - Require the precedence of mod_landuse
4125  *-------------------------------------------------------------------------------
4126   
4128   
4129  mcost_inv0('nelback',n) = 0.00035;
4130   
4131  * Initial advanced biofuel production
4132  scalar q_en0_back / 1e-6 /;
4133   
4134  scalar alp_nelback / 0.75 /;
4135   
4136  * nelback R&D
4137  rd_delta('nelback') = 0.05;
4138  krd0('nelback',n)   = 0.000478096153846154;
4139  rd_coef('nelback','a')    = 1;
4140  rd_coef('nelback','b')    = 0.85;
4141  rd_coef('nelback','c')    = 0;
4142  rd_coef('nelback','lbr')  = -0.2;
4143  rd_coef('nelback','lbd')  = -0.15;
4144  rd_coef('nelback','wcum0') = 277.777;
4145  rd_time('nelback','gap') = 10; # years
4146  rd_time('nelback','start') = 2020;
4147   
4148  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
4151  *-------------------------------------------------------------------------------
4152  * Carbon Capture and Sequestration
4153  *-------------------------------------------------------------------------------
4154   
4156   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_ccs.gdx
4158   
4159  parameter ccs_capture_eff(jfed);
--- LOAD  ccs_capture_eff = 1:ccs_capture_eff
4161   
4162  parameter ccs_emi_capt(fuel);
--- LOAD  ccs_emi_capt = 3:ccs_emi_capt
4164   
4165  * Definition of floor costs for each country and technology
4166  parameter ccs_floor_cost(*, n) 'Floor Investment Cost [T$/TW]';
--- LOAD  ccs_floor_cost = 4:ccs_floor_cost
4168   
4169  parameter ccs_stor_cap_aqui(n,*) 'Storage capacity for aquifers storage';
--- LOAD  ccs_stor_cap_aqui = 8:ccs_stor_cap_aqui
4171   
4172  parameter ccs_stor_cap_ecbm(n,*) 'Storage capacity for coal bed storage';
--- LOAD  ccs_stor_cap_ecbm = 9:ccs_stor_cap_ecbm
4174   
4175  parameter ccs_stor_cap_og(n,*) 'Storage capacity for oil and gas fields storage';
--- LOAD  ccs_stor_cap_og = 11:ccs_stor_cap_og
4177   
4178  parameter ccs_stor_cap_eor(n) 'Storage capacity for eor storage';
--- LOAD  ccs_stor_cap_eor = 10:ccs_stor_cap_eor
4180   
4181  parameter ccs_stor_share_onoff(n,*) 'Share of storage capacity ONshore and OFFshore';
--- LOAD  ccs_stor_share_onoff = 14:ccs_stor_share_onoff
4183   
4184  parameter ccs_stor_dist(n,*) 'average distance in the country for different storage types in [km]';
--- LOAD  ccs_stor_dist = 13:ccs_stor_dist
4186   
4187  * LEARNING
4188   
4189  parameter ccs_spill_factor(jlccs,jllccs) 'Matrix of share in learning contribution between ccs technologies';
--- LOAD  ccs_spill_factor = 7:ccs_spill_factor
4191   
4192  * Table of learning coefficient for each tech
4193  parameter ccs_learn0(jlccs);
--- LOAD  ccs_learn0 = 5:ccs_learn0
4195   
4196  parameter ccs_learn(jlccs,t);
4197  ccs_learn(jlccs,t) = ccs_learn0(jlccs);
4198   
4199  parameter ccs_wcum0(jlccs) 'minimum installed cumulated capacity after which learning starts [TW]';
--- LOAD  ccs_wcum0 = 15:ccs_wcum0
4201   
4202  parameter ccs_wcum_spill(jlccs,t) 'installed capacity at each time step considering spillover effect among technologies [TW]'
4203  ;
4204   
4205  * STORAGE
4206   
4207  parameter ccs_stor_dist_avg(n,ccs_stor) 'Avg distance from CCS power plants to storage sites [km] from Hendriks 2004';
4208   
4209  loop((ccs_stor_dist_cat,ccs_stor)$(map_ccs_stor_dist_cat(ccs_stor_dist_cat,ccs_stor)),
4210      ccs_stor_dist_avg(n,ccs_stor) = ccs_stor_dist(n,ccs_stor_dist_cat)
4211  );
4212   
4213  parameter ccs_stor_cost_estim(ccs_stor,ccs_stor_estim) 'storage cost, [T$/GtonCO2]';
--- LOAD  ccs_stor_cost_estim = 12:ccs_stor_cost_estim
4216   
4217  parameter ccs_stor_cost(ccs_stor,n) 'storage cost, [T$/GtonCO2]';
4218  ccs_stor_cost(ccs_stor,n) = ccs_stor_cost_estim(ccs_stor,'best');
4219   
4220  scalar ccs_transp_coeff 'coefficients of transport costs, considering that it is almost constant for large mass flow rates [$/(tonCO2*km)]' / 0.006667034 /
4221  ;
4222   
4223  parameter ccs_stor_cap_og_onoff(n,ccs_stor_estim,ccs_stor_og_eor) 'storage capacity of oil and gas fields divided into ONshore and OFFshore GtCO2';
4224  parameter ccs_stor_cap_max(n,ccs_stor_estim,ccs_stor)             'storage capacity of each storage type GtCO2';
4225  parameter ccs_leak_rate(ccs_stor,t,n)                             '%/yr of cumulated stored CO2 leakages';
4226   
4227  *-------------------------------------------------------------------------------
4229   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
4231  *-------------------------------------------------------------------------------
4232  * Coal for non-electric sectors
4233  * - Coke Plants
4234  * - Industrial and Commercial combined-heat-and-power (CHP)
4235  * - Others
4236  *-------------------------------------------------------------------------------
4237   
4239   
4240  parameter nelcoal_baseline(t,n) 'Exogenous non-electric coal';
4241  nelcoal_baseline(t,n) = 1; # dummy value before calibration
4242   
4243  scalar nelcoal_growthrate 'Yearly Growth Rate in baseline (%)';
4244   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_nelcoal.gdx
4246  parameter nelcoal_cmac (n,*);
--- LOAD  nelcoal_cmac = 1:nelcoal_cmac
4249   
4250  parameter nelcoal_max_abat(t,n);
4251  nelcoal_max_abat(t,n)$(year(t) le 2010) = nelcoal_cmac(n,'abat_max_2010');
4252  nelcoal_max_abat(t,n) = min(0.9, nelcoal_cmac(n,'abat_max_2010') * (1 + 0.01)**(year(t) - 2010));
4253   
4254  parameter nelcoal_share_ccs(t);
4255   
4256  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
4259  *-------------------------------------------------------------------------------
4260  * Wind energy module
4261  * - onshore and offshore
4262  *-------------------------------------------------------------------------------
4263   
4265   
4266  scalar yearly_hours / 8760 /;
4267   
4268  * overall renewables parameters
4269  parameter floor_cost(jreal) 'Floor cost for non-constant cost technologies [$/W]';
4270   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_wind.gdx
4272   
4273  parameter windon_pot(n,wind_dist,wind_class) 'Onshore wind potential [TW]';
--- LOAD  windon_pot = 1:windon_pot
4275   
4276  parameter windoff_pot(n,wind_dist,wind_depth,wind_class) 'Offshore wind potential [TW]';
--- LOAD  windoff_pot = 2:windoff_pot
4278   
4279  parameter cap_factor(wind_class) 'Wind capacity factors';
--- LOAD  cap_factor = 3:cap_factor
4281   
4282  parameter k_en0_windon(wind_class,t,n) 'Onshore wind installed/baseline capacity (associated to the proper wind class) [TW]';
4283  parameter k_en0_windoff(wind_class,t,n) 'Offshore wind installed/baseline capacity (associated to the proper wind class) [TW]';
--- LOAD  k_en0_windon = 4:k_en0_windon
--- LOAD  k_en0_windoff = 5:k_en0_windoff
4286   
4287  parameter windcap_update(t,n) 'Onshore wind 2010/2015 capacity [TW]';
4288   
4289  parameter n_oem_wind_high(n) 'regions with high oem costs for wind';
--- LOAD  n_oem_wind_high = 7:n_oem_wind_high
4291   
4292  parameter windcap_offshore(t, n) 'Offshore wind 2010/2015 capacity [TW]';
4293   
4295   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
4297  parameter q_en_valid_wind(*,t,n);
4298  parameter k_en_valid_wind(*,t,n);
4299  parameter mcost_inv_valid_wind(jreal,t,n);
--- LOAD  q_en_valid_wind = 8:q_en_valid_irena
--- LOAD  k_en_valid_wind = 7:k_en_valid_irena
--- LOAD  mcost_inv_valid_wind = 18:mcost_inv_valid_irena
4304   
4305  * for 2005 compute linear extrapolation backwards from 2010
4306  mcost_inv_valid_wind(jreal,t,n)$(year(t) eq 2005) = 2 * (smax(tt$(year(tt) eq 2010), mcost_inv_valid_wind(jreal,tt,n))) - (smax(tt$(year(tt) eq 2015), mcost_inv_valid_wind(jreal,tt,n)));
4307   
4308  parameter windoff_costinv(wind_depth) 'Multiplier coefficient for investment cost between depth';
4309  windoff_costinv('trans') = 1;
4310  windoff_costinv('deep') = 1 + (1 / 13);
4311  windoff_costinv('shallow') = 1 - (1 / 13);
4312   
4313  * Floor costs
4314  floor_cost('elwindon') = 0.5;
4315  floor_cost('elwindoff') = 0.9;
4316  * The offshore wind floor cost is meant to be the near one: the intermediate and far ones always feature the fix transmission cost
4317   
4318  * learning rates (updated from IRENA Power Generation Costs in 2019 report, LCOE based)
4319  * 10% for offshore wind, 23% for onshore wind, 23% for CSP and 36% for solar PV.
4320  * Learning by doing coefficients, converted from learning rates
4321  rd_coef('elwindon','lbd') = log2(1 - 0.23);
4322  rd_coef('elwindoff','lbd') = log2(1 - 0.10);
4323   
4324  scalar wind_spill_wcum 'Share of the on/offshore wcum contributing to off/onshore learning';
4325  wind_spill_wcum = 0.8 ;
4326   
4327  parameter oem_wind(n);
4328  oem_wind(n)$(n_oem_wind_high(n)) = 0.03046;
4329  oem_wind(n)$(not n_oem_wind_high(n)) = 0.02538;
4330   
4331  *-------------------------------------------------------------------------------
4333   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
4335  *-------------------------------------------------------------------------------
4336  * Solar Powerplants (PV and CSP) to the electrical system
4337  *-------------------------------------------------------------------------------
4338   
4339  *-------------------------------------------------------------------------------
4341   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_solar.gdx
4343   
4344  parameter pv_pot_all(n,solar_dist,solar_class_all) 'Solar PV total potential [TW]';
--- LOAD  pv_pot_all = 10:pv_pot
4346   
4347  parameter csp_pot_all(n,solar_dist,solar_class_all) 'Solar CSP total potential [TW]';
--- LOAD  csp_pot_all = 1:csp_pot
4349   
4350  parameter solar_mu_all(solar_class_all,jel_solar) 'Full load hours binned by solar_class [h/yr]';
--- LOAD  solar_mu_all = 11:solar_mu
4352   
4353  parameter pv_pot(n,solar_dist,solar_class) 'Solar PV total potential [TW]';
4354  pv_pot(n,solar_dist,solar_class) = sum(solar_class_all$map_solar_class_all(solar_class, solar_class_all), pv_pot_all(n,solar_dist,solar_class_all));
4355   
4356  parameter csp_pot(n,solar_dist,solar_class) 'Solar CSP total potential [TW]';
4357  csp_pot(n,solar_dist,solar_class) = sum(solar_class_all$map_solar_class_all(solar_class, solar_class_all), csp_pot_all(n,solar_dist,solar_class_all));
4358   
4359  parameter solar_mu(solar_class,jel_solar) 'Full load hours binned by solar_class [h/yr]';
4360  solar_mu(solar_class,jel_solar) = sum(solar_class_all$map_solar_class_all(solar_class, solar_class_all), solar_mu_all(solar_class_all, jel_solar))/
4361      sum(solar_class_all$map_solar_class_all(solar_class, solar_class_all), 1);
4362   
4363  parameter inst_area(n,solar_dist) 'Available area for both PV and CSP installation (competition area) (n,solar_dist) [km^2]';
--- LOAD  inst_area = 2:inst_area
4365   
4366  parameter inst_density(n,jel_solar) 'Installation density [MW/km^2]';
--- LOAD  inst_density = 3:inst_density
4368   
4369  parameter k_en0_pv_all(solar_class_all,t,n) 'PV installed/baseline capacity (in all solar classes) [TW]';
--- LOAD  k_en0_pv_all = 5:k_en0_pv
4371  parameter k_en0_pv(solar_class,t,n) 'PV installed/baseline capacity (in the aggregated solar classes) [TW]';
4372  k_en0_pv(solar_class,t,n) = sum(solar_class_all$map_solar_class_all(solar_class, solar_class_all), k_en0_pv_all(solar_class_all, t,n));
4373   
4374  parameter k_en0_csp_all(solar_class_all,t,n) 'CSP installed/baseline capacity (in all solar classes) [TW]';
--- LOAD  k_en0_csp_all = 4:k_en0_csp
4376  parameter k_en0_csp(solar_class,t,n) 'CSP installed/baseline capacity (in the aggregated solar classes) [TW]';
4377  k_en0_csp(solar_class,t,n) = sum(solar_class_all$map_solar_class_all(solar_class, solar_class_all), k_en0_csp_all(solar_class_all, t,n));
4378   
4379  parameter oem_pv(*,n) 'PV oem cost';
--- LOAD  oem_pv = 9:oem_pv
4381   
4382  parameter oem_csp(n) 'CSP oem cost';
--- LOAD  oem_csp = 8:oem_csp
4384   
4386   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
4388  parameter mcost_inv_valid_solar(jreal,t,n);
--- LOAD  mcost_inv_valid_solar = 18:mcost_inv_valid_irena
4391  * for 2005 compute linear extrapolation backwards from 2010
4392  mcost_inv_valid_solar(jreal,t,n)$(year(t) eq 2005) = 2 * (smax(tt$(year(tt) eq 2010), mcost_inv_valid_solar(jreal,tt,n))) - (smax(tt$(year(tt) eq 2015), mcost_inv_valid_solar(jreal,tt,n)));
4393   
4394  * Learning data
4395   
4396  * Floor costs
4397  floor_cost('elpv') = 0.25;
4398  floor_cost('elcsp') = 1.25;
4399   
4400  * learning rates (updated from IRENA Power Generation Costs in 2019 report, LCOE based)
4401  * 10% for offshore wind, 23% for onshore wind, 23% for CSP and 36% for solar PV.
4402  * Learning by doing coefficients, converted from learning rates
4403  rd_coef('elpv','lbd') = log2(1 - 0.36);
4404  rd_coef('elcsp','lbd') = log2(1 - 0.23);
4405   
4406  *-------------------------------------------------------------------------------
4408   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
4410  *-------------------------------------------------------------------------------
4411  * Technology development scenarios
4412  *-------------------------------------------------------------------------------
4413   
4415   
4416  * Default SSP is SSP2 (Middle of the road)
4417  tech_scen('CCS') = medium;
4418  tech_scen('nuclear') = medium;
4419  tech_scen('renewables') = medium;
4420   
4421  * SSPs variants
4422   
4423  * SSP1 (Sustainability)
4425   
4426  *-------------------------------------------------------------------------------
4428   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
4430  *-------------------------------------------------------------------------------
4431  * Oil Extraction
4432  * Options:
4433  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
4434  *-------------------------------------------------------------------------------
4435   
4437   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_oil.gdx
4439   
4440  parameter oil_capacity(oilg,n);
--- LOAD  oil_capacity = 2:oil_capacity
4442   
4443  parameter oil_emi_st_grade(oilg);
--- LOAD  oil_emi_st_grade = 4:oil_emi_st
4445   
4446  parameter oil_cost_grade(oilg,n);
--- LOAD  oil_cost_grade = 3:oil_cost
4448   
4449  parameter oil_cum_grade(oilg);
--- LOAD  oil_cum_grade = 1:oil_cum
4451   
4452  parameter oem_ex(f);
--- LOAD  oem_ex = 6:oem_ex
4454   
4455  parameter oil_esp_capacity(oilg,*,n);
--- LOAD  oil_esp_capacity = 5:oil_esp_capacity
4457   
4458  parameter oil_reserve(oilg,*,n);
--- LOAD  oil_reserve = 7:oil_reserve
4460   
4462   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
4464   
4465  parameter q_out_valid_weo(*,t,n);
--- LOAD  q_out_valid_weo = 17:q_out_valid_weo
4467   
4469   
4470  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
4473  *-------------------------------------------------------------------------------
4474  * Uranium Resources
4475  *-------------------------------------------------------------------------------
4476   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
4479  *-------------------------------------------------------------------------------
4480  * Gas Resources
4481  *-------------------------------------------------------------------------------
4482   
4484   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_gas.gdx
4486   
4487  parameter trade_poly_gas(polydeg,*,n);
--- LOAD  trade_poly_gas = 1:trade_poly_gas
4489   
4490  parameter trade_scale_gas(*);
--- LOAD  trade_scale_gas = 2:trade_scale_gas
4492   
4493  parameter cgas(*,*) 'Gas price function coefficients';
--- LOAD  cgas = 3:cgas
4495   
4497   
4498  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
4501  *-------------------------------------------------------------------------------
4502  * Coal Resources
4503  *-------------------------------------------------------------------------------
4504   
4506   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_coal.gdx
4508   
4509  parameter trade_poly_coal(polydeg,*,n);
--- LOAD  trade_poly_coal = 1:trade_poly_coal
4511   
4512  parameter trade_scale_coal(*);
--- LOAD  trade_scale_coal = 2:trade_scale_coal
4514   
4515  parameter localpll(t,n) 'Coal/Wbio pollution O&M extra costs [T$/TWh]';
--- LOAD  localpll = 3:localpll
4517   
4518  parameter ccoal(*,*) 'Coal price function coefficients';
--- LOAD  ccoal = 4:ccoal
4520   
4522   
4523  *-------------------------------------------------------------------------------
4525   
4526   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
4528  *-------------------------------------------------------------------------------
4529  * Climate
4530  *
4531  * Represents the climate
4532  * - based on the DICE model equations
4533  * - Radiative forcing for non CO2 ghgs
4534  * - parameters calibrated to reproduce MAGICC6.4 default response
4535  *
4536  *  Options:
4537  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
4538  * - $setglobal cooperate_on_climate {'YES','NO'}
4539  * - 'YES'(default): Countries within a coalition act in cooperation
4540  *   'NO': Countries within a coalition act individually
4541  *
4542  *-------------------------------------------------------------------------------
4543   
4545   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_climate.gdx
4547   
4548  parameter emi_gwp(ghg)  'Global warming potential over a time horizon of 100 years (2007 IPCC AR4) [GTonCO2eq/GTon]';
--- LOAD  emi_gwp = 6:emi_gwp
4550   
4551  parameter tempc(*) 'Temperature update coefficients';
--- LOAD  tempc = 11:tempc
4553   
4554  parameter rfc(e,*) 'Radiative forcing update coefficients';
--- LOAD  rfc = 9:rfc
4556   
4557  parameter temp0(m) 'Initial temperature [deg C above preindustrial levels]';
--- LOAD  temp0 = 10:temp0
4559   
4560  parameter wcum_emi0(e,m) 'Initial world GHG emissions [GTon]';
--- LOAD  wcum_emi0 = 12:wcum_emi0
4562   
4563  parameter wcum_emi_eq(e) 'GHG stocks not subject to decay [GTon]';
--- LOAD  wcum_emi_eq = 13:wcum_emi_eq
4565   
4566  parameter emi_preind(e) 'Stocks of non-CO2 gases in pre-industrial [GTon]';
--- LOAD  emi_preind = 7:emi_preind
4568   
4569  parameter cmphi(m,mm) 'Carbon Cycle transfert matrix';
--- LOAD  cmphi = 5:cmphi
4571   
4572  parameter cmdec1(e) 'Yearly retention factor for non-co2 gases';
--- LOAD  cmdec1 = 2:cmdec1
4574   
4575  parameter cmdec2(e) 'One period retention factor for non-co2 ghg';
--- LOAD  cmdec2 = 3:cmdec2
4577   
4578  * Calibrate on average runs with WITCH given MAGICC outputs
4579  parameter rfaerosols(t) 'Radiative forcing from others (aerosols indirect and direct effects, ozone)';
--- LOAD  rfaerosols = 8:rfaerosols
4581   
4583   
4584  parameter wemi(e,t)     'World GHG emissions';
4585  parameter wemi2qemi(e)  'Conversion factor W_EMI [GtC for CO2, Gt for others] into Q_EMI [GtonCeq]';
4586   
4587  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
4590  *-------------------------------------------------------------------------------
4591  * Long-run Damages from Climate Change
4592  * - Economic impacts
4593  * - Adaptation
4594  *-------------------------------------------------------------------------------
4595   
4597   
4598   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_damage.gdx
4600   
4601  parameter k_h0(n);
--- LOAD  k_h0 = 1:k_h0
4603   
4604  parameter k_edu0(n);
--- LOAD  k_edu0 = 2:k_edu0
4606   
4607  parameter owa(*,n);
--- LOAD  owa = 3:owa
4609   
4610  parameter ces_ada(*,n);
--- LOAD  ces_ada = 4:ces_ada
4612   
4613  parameter comega_neg(*,n,polydeg);
--- LOAD  comega_neg = 6:comega_neg
4615   
4616  parameter comega_pos(*,n,polydeg);
--- LOAD  comega_pos = 5:comega_pos
4618   
4620   
4621   
4622  * Adaptation efficiency
4623   
4625   
4627  ces_ada('eff',n)      = 1;
4628   
4630   
4631   
4632  *-------------------------------------------------------------------------------
4634   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
4636  *-------------------------------------------------------------------------------
4637  * Light-duty Vehicles for Personal Transport
4638  *-------------------------------------------------------------------------------
4639   
4641   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_transport.gdx
4643   
4644  * 1) Vehicles, demand, consumption
4645   
4646  parameter gdppc(t,n) 'GDP per capita [US$2005/person]';
4647  parameter ldv_pthc(t,n) 'Specific number of light duty vehicles [vehicles/thousand capita]';
4648  parameter ldv_total(t,n) 'Total number of light duty vehicles [million]';
4649  parameter km_demand_ldv(t,n) 'LDV kilometre demand [million km]';
4650  parameter service_demand_ldv(t,n) 'Total demand for LDV passenger travel [million pkm]';
4651  parameter km_demand_pv_ldv(t,n) 'LDV kilometre demand per vehicle [km/vehicle]';
4652  parameter km_demand_pv_deviation_ldv(t,n) 'Relative LDV kilometre demand wrt 2005';
4653  parameter fuel_cons(jveh,t,n) 'Yearly fuel consumption per vehicle [TWh/million vehicles], i.e. [MWh/vehicle]';
4654  parameter elec_plg(t,n) 'Yearly electricity consumption per plg_hybrid vehicle [TWh/million vehicles], i.e. [MWh/vehicle]';#source: https://theicct.org/publications/charging-cost-US
4655   
4656  * Source: https://theicct.org/publications/charging-cost-US
4657  parameter charging_station 'cost of charging stations estimation per vehicle' /580/ ;
4658   
4659  parameter disutility_costs_ldv(jveh,t,n) 'Additional costs to investment cost of cars [US$2005/vehicle]';
--- LOAD  disutility_costs_ldv = 7:disutility_costs_ldv
4661   
4662  parameter max_biofuel_feed_share(t) 'Maximum allowable share of biofuels in engines [-]';
--- LOAD  max_biofuel_feed_share = 17:max_biofuel_feed_share
4664   
4665  parameter ai(oge_ai_set) 'Autonomous Increase';
--- LOAD  ai = 1:ai
4667   
4668  parameter oge(oge_ai_set) 'Ownership Growth Elasticity';
4669   parameter ssp_oge(*,oge_ai_set); execute_loaddc 'data_witch17/data_mod_transport' ssp_oge; oge(oge_ai_set) = ssp_oge('ssp2',oge_ai_set);
4670   
4671  parameter coeff_ldv(t,n) 'Multiplicative parameter to adjust the number of vehicles';
--- LOAD  coeff_ldv = 6:coeff_ldv
4673   
4674  parameter fueleff_rate(t,n) 'Fuel efficiency improvement rate';
4675  fueleff_rate(t,n) = -0.25;
4676   
4678   
4679  parameter reg_discount_veh(n) 'Regional discount for vehicle investment cost';
--- LOAD  reg_discount_veh = 20:reg_discount_veh
4681   
4682  parameter ldv_pthc_2005(n) 'Specific number of light duty vehicles in 2005 [vehicles/thousand capita]';
--- LOAD  ldv_pthc_2005 = 13:ldv_pthc_2005
4684  parameter k_veh_passengercars(n,t) 'Number of passenger cars [thousand]';
--- LOAD  k_veh_passengercars = 14:k_veh_passengercars
4686  parameter k_veh_commercial(n,t) 'Number of commercial vehicles [thousand]';
--- LOAD  k_veh_commercial = 15:k_veh_commercial
4688   
4689  parameter k_veh_2005_2015(jveh,t,n) 'Number of LDVs per category (other than trad_cars) in 2005, 2010 and 2015 [million]';
--- LOAD  k_veh_2005_2015 = 11:k_veh_2005_2015
4691   
4692  parameter inv_cost_veh(jveh) 'Cost of purchase for traditional cars [US$2005/vehicle]';
--- LOAD  inv_cost_veh = 10:inv_cost_veh
4694   
4695  parameter oem_veh(jveh,n) 'Vehicle O&M costs [$/million vehicles]';
--- LOAD  oem_veh = 18:oem_veh
4697   
4698  parameter fuel_cons_2005(jveh,n) 'Initial yearly fuel consumption per vehicle [TWh/million vehicles], i.e. [MWh/vehicle]';
--- LOAD  fuel_cons_2005 = 9:fuel_cons_2005
4700   
4701  parameter elec_plg_2005(n) 'Yearly electricity consumption per plg_hybrid vehicle in 2005 [TWh/million vehicles], i.e. [MWh/vehicle]';
--- LOAD  elec_plg_2005 = 8:elec_plg_2005
4703   
4704  parameter trad_biofuel_lim(t,n) 'Limitation on traditional biofuels [TWh]';
--- LOAD  trad_biofuel_lim = 22:trad_biofuel_lim
4706   
4707  parameter biofuel_2005_2010(t,n) 'Biofuel consumption in traditional cars in 2005 and 2010 [TWh]';
--- LOAD  biofuel_2005_2010 = 4:biofuel_2005_2010
4709   
4710  parameter biofuel_2013(n) 'Biofuel consumption in traditional cars in 2013 [TWh]';
--- LOAD  biofuel_2013 = 5:biofuel_2013
4712   
4713  parameter travel_intensity_2005(n)  'Travel intensity in 2005 [km/US$2005]';
--- LOAD  travel_intensity_2005 = 23:travel_intensity_2005
4715   
4716  parameter travel_intensity(t,n) 'Travel intensity [km/US$2005]';
4717  travel_intensity(t,n) = travel_intensity_2005(n);
4718  * An evolution of the travel intensity might be envisioned, but for the moment it is kept constant over the century.
4719   
4721   
4722  parameter load_factor_ldv(t,n)  'LDV load factor - N. of persons per vehicle [persons/vehicle]';
--- LOAD  load_factor_ldv = 16:load_factor_ldv
4724   
4725  * 2) Batteries, R&D
4726   
4727  parameter battery_leadrd(n) 'Countries leading in battery R&D';
--- LOAD  battery_leadrd = 3:battery_leadrd
4729   
4730  leadrd('battery',n) = yes$(battery_leadrd(n));
4731  rd_coef('battery','a')    = 1;
4732  rd_coef('battery','b')    = 0.85;
4733  rd_coef('battery','c')    = 0;
4734  rd_coef('battery','d')    = 0.15;
4735  rd_coef('battery','lbr')  = -0.193;
4736  rd_coef('battery','lbd')  = -0.160;
4737  rd_coef('battery','wcum0') = sum(n, k_veh_2005_2015('hybrid',tfirst,n));
4738  rd_cooperation('battery',clt) = no;
4739  rd_delta('battery') = 0.05;
4740  rd_time('battery','gap') = 10; # years
4741  rd_time('battery','start') = 2020;
4742   
4744   
4745  parameter krd_lo_coeff(krd_lo_set);
--- LOAD  krd_lo_coeff = 12:krd_lo_coeff
4747   
4748  parameter size_battery(jveh,n) 'Battery size [kWh/vehicle]';
--- LOAD  size_battery = 21:size_battery
4750   
4751  parameter battery_cost(t) 'Historical (2005-2015) and then upper bound battery cost [US$2005/kWh]';
--- LOAD  battery_cost = 2:battery_cost
4753   
4754  parameter bat_multip(jveh,n) ;
4755  bat_multip('hybrid',n) = 2.23 ;
4756  bat_multip('plg_hybrid',n) = 1.2 ;
4757   
4758  parameter tank_cost(jveh) ;
4759  tank_cost('trad_cars') = 471 ;
4760  tank_cost('hybrid') = 471 ;
4761  tank_cost('plg_hybrid') = 471 ;
4762   
4763  parameter size_elmotor(jveh) ;
4764  size_elmotor('edv') = 75 ;
4765  size_elmotor('hybrid') = 20 ;
4766  size_elmotor('plg_hybrid') = 47 ;
4767   
4768   
4769  parameter size_ice(jveh);
4770  size_ice('trad_cars') = 75 ;
4771  size_ice('hybrid') = 58 ;
4772  size_ice('plg_hybrid') = 58 ;
4773  parameter charger_cost /576/ ;
4774  parameter glider_manufacture_cost /17410/ ; # $
4775  parameter ice_cost /38/ ; # $/kw
4776  * 3) Flags
4777   
4778  parameter  growth_func_ldv(jveh) /
4779  trad_cars       0
4780  hybrid          1
4781  plg_hybrid      1
4782  edv             1
4783  /;
4784   
4785  parameter  inv_constraint_ldv(jveh_inv) /
4786  trad_cars       0
4787  hybrid          1
4788  plg_hybrid      1
4789  edv             1
4790  /;
4791   
4793   
4794  scalar smooth_ldv / 1.25 /;
4795   
4796  *** new code
4797  parameter carshare(t,n);
4798   
4799  parameter
4800      battery_cost_new(t,n);
4801   
4802  parameter perc_raremat_battery
4803      p_rmb /0.10/;
4804   
4805  parameter perc_incr_price_lith  #setglobal
4806      pi_lprice /0.50/;
4807   
4808  *parameter increase_price_rare_material(t);
4809   
4810  parameter
4811      dec_inv(t,n);
4812   
4813   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_battery.gdx
4815  parameter increase_price_rare_material(t);
--- LOAD  increase_price_rare_material = 1:increase_price_rare_material
4818   
4819  ***
4820  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
4823  *-------------------------------------------------------------------------------
4824  * Road Freight Transport
4825  *-------------------------------------------------------------------------------
4827   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_transport_freight.gdx
4829   
4830  parameter stfr_total(t,n) 'Total number of freight vehicles [million]';
4831  parameter km_demand_stfr(t,n) 'Freight vehicle kilometre demand [million km]';
4832  parameter service_demand_stfr(t,n) 'Total demand for freight travel [million tkm]';
4833  parameter km_demand_pv_stfr(t,n) 'Freight kilometre demand per vehicle [km/vehicle]';
4834  parameter load_factor_stfr(t,n)  'Freight vehicle load factor - N. of tons per vehicle [tons/vehicle]';
4835  parameter fuel_cons_stfr(jfrt,t,n) 'Yearly fuel consumption per freight vehicle [TWh/million vehicles], i.e. [MWh/vehicle]';
4836  parameter elec_plg_stfr(t,n) 'Yearly electricity consumption per plg_hybrid freight vehicle [TWh/million vehicles], i.e. [MWh/vehicle]';
4837   
4838  parameter disutility_costs_stfr(*,t,n) 'Additional costs to investment cost of freight [US$2005/vehicle]';
--- LOAD  disutility_costs_stfr = 1:disutility_costs_stfr
4840   
4841  parameter stfr_total_2005(n) 'Total number of freight vehicles in 2005 [million]';
--- LOAD  stfr_total_2005 = 2:stfr_total_2005
4843   
4844  parameter stfr_factor(*) 'Multiplicative factor of road freight ownership growth [-]' /
4845  ssp1  0.8
4846  ssp2  1
4847  ssp3  1.2
4848  ssp4  1.2
4849  ssp5  1
4850  /;
4851   
4852  parameter km_demand_pv_stfr_2005(n) 'Freight kilometre demand per vehicle in 2005 [km/vehicle]';
--- LOAD  km_demand_pv_stfr_2005 = 3:km_demand_pv_stfr_2005
4854   
4855  parameter load_factor_stfr_2005(n)  'Freight vehicle load factor - N. of tons per vehicle in 2005 [tons/vehicle]';
--- LOAD  load_factor_stfr_2005 = 4:load_factor_stfr_2005
4857   
4858  parameter inv_cost_frt(jfrt) 'Cost of purchase for traditional freight vehicles [US$2005/vehicle]';
--- LOAD  inv_cost_frt = 5:inv_cost_frt
4860   
4861  parameter oem_frt(n) 'Freight vehicle O&M costs [$/million vehicles]';
--- LOAD  oem_frt = 6:oem_frt
4863   
4864  parameter fuel_cons_stfr_2005(jfrt,n) '2005 fuel consumption per freight vehicle [TWh/million vehicles)], i.e. [MWh/vehicle]';
--- LOAD  fuel_cons_stfr_2005 = 7:fuel_cons_stfr_2005
4866   
4867  parameter fueleff_rate_stfr(t,n) 'Fuel efficiency improvement rate for freight vehicles';
4868  fueleff_rate_stfr(t,n) = -0.22;
4869  * Strong Fuel Efficiency Improvement (FEI) requires value of -0.22. See Bosetti and Longden (2012) for details.
4870   
4871  parameter elec_plghbd_stfr_2005(n)  '2005 electricity consumption per plg_hybrid freight vehicle [TWh/million vehicles], i.e. [MWh/vehicle]';
--- LOAD  elec_plghbd_stfr_2005 = 8:elec_plghbd_stfr_2005
4873   
4874  parameter size_battery_freight(jfrt,n) 'Battery size of freight vehicles [kWh/vehicle]';
--- LOAD  size_battery_freight = 9:size_battery_freight
4876  size_battery_freight('edv_stfr',n) = 310 ;
4877  size_battery_freight('plg_hbd_stfr',n) = 110 ;
4878   
4879  parameter  growth_func_stfr(jfrt) /
4880  trad_stfr        0
4881  hbd_stfr         1
4882  plg_hbd_stfr     1
4883  edv_stfr         1
4884  /;
4885   
4887   
4888  scalar smooth_strfr / 1.124 /; # numerical factor (1.124) has been derived by fitting the hybrid vehicle projections reported in IEA (2010).
4889   
4890  *-------------------------------------------------------------------------------
4892   
4893   
4894   
4895   
4896   
4897   
4898  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
4900  *-------------------------------------------------------------------------------
4901  * Traditional Biomass
4902  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
4903  *  - require post_process to be launch before
4904  *-------------------------------------------------------------------------------
4905   
4907   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_trbiomass.gdx
4909   
4910  parameter neltrbiomass0(t,n) 'Exogenous traditional biomass';
--- LOAD  neltrbiomass0 = 1:neltrbiomass0
4912   
4913  parameter trbio_countries(n) 'countries where traditional biomass is still used';
--- LOAD  trbio_countries = 2:trbio_countries
4915   
4917   
4918  parameter scale_trbiomass(n)  'scaling factor for traditional biomass';
4919   
4920  parameter trbio_ctr(*,n);
4921  trbio_ctr('alpha',n) =  -0.7221;
4922  trbio_ctr('beta',n)  =   0.1677;
4923   
4924  parameter trbio_gdp_fun(t,n);
4925   
4926  *-------------------------------------------------------------------------------
4928   
4929  * Optional modules
4930   
4931  * Policy modules
4932   
4933  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
4937  *-------------------------------------------------------------------------------
4938  * Call modules by order
4939  *-------------------------------------------------------------------------------
4943   
4944  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
4946  *-------------------------------------------------------------------------------
4947  * Algorithm
4948  *-------------------------------------------------------------------------------
4949   
4951   
4952  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
4954  *-------------------------------------------------------------------------------
4955  * Time
4956  * - Temporal structure
4957  * - Fixed time periods
4958  * - States of the world
4959  *-------------------------------------------------------------------------------
4960   
4962   
4963  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
4965  *-------------------------------------------------------------------------------
4966  * Geographic dimension and mapping with countries
4967  *-------------------------------------------------------------------------------
4968   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
4971  *-------------------------------------------------------------------------------
4972  * Non-Cooperative Setup
4973  *
4974  * Each region is defined as an individual coalition.
4975  *
4976  *-------------------------------------------------------------------------------
4977   
4979   
4980  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
4982  *-------------------------------------------------------------------------------
4983  * Welfare
4984  *-------------------------------------------------------------------------------
4985   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
4988  *-------------------------------------------------------------------------------
4989  * Economy
4990  * - Production and Consumption definition
4991  * - Top-level of the production function
4992  * Options:
4993  * --original_ssp=1 : original SSP population and GDP data
4994  *-------------------------------------------------------------------------------
4995   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
4998  *-------------------------------------------------------------------------------
4999  * Energy sector
5000  *-------------------------------------------------------------------------------
5001   
5003   
5004  mu(jel,t,n)$(not jel_own_mu(jel)) = mu0(jel,n);
5005   
5006  parameter mucalib(jel,t,n);
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_tfp_ssp2.gdx
--- LOAD  mucalib = 1:mu
5010  loop((jel,jcalib)$(sum(jold$sameas(jold,jel),1) and sum(jreal$sameas(jreal,jel),1) and map_calib(jcalib,jel)),
5011    mu(jel,t,n)$(year(t) eq 2005) = mu0(jel,n);
5012    mu(jel,t,n)$(year(t) ge 2010) = mucalib(jel,t,n);
5013  );
5014  mu('elpc_late',t,n)$(year(t) ge 2010) = mucalib('elpc_late',t,n);
5015  mu('elgastr_new',t,n)$(year(t) ge 2010) = mucalib('elgastr_new',t,n);
5016  mu('elgastr_old',t,n)$(year(t) ge 2010) = mucalib('elgastr_old',t,n);
5017  mu('elnuclear_new',t,n)$(year(t) ge 2010) = mucalib('elnuclear_new',t,n);
5018  mu('elnuclear_old',t,n)$(year(t) ge 2010) = mucalib('elnuclear_old',t,n);
5019  mu('eloil_new',t,n)$(year(t) ge 2010) = mucalib('eloil_new',t,n);
5020  mu('eloil_old',t,n)$(year(t) ge 2010) = mucalib('eloil_old',t,n);
5021   
5022  parameter csicalib(fuel,jfed,t,n);
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_tfp_ssp2.gdx
--- LOAD  csicalib = 2:csi
5026  csi(fuel,jfed,t,n) = csi0(fuel,jfed,n);
5027  csi(fuel,jfed,t,n)$csi_max_2100(fuel,jfed,n) = min((csi0(fuel,jfed,n)*(2100-year(t)) + csi_max_2100(fuel,jfed,n)*(year(t)-year(tfirst))) / (2100-year(tfirst)),  csi_max_2100(fuel,jfed,n));
5028  csi('coal','elpc_late',t,n)$(year(t) ge 2010) = csicalib('coal','elpc_late',t,n);
5029  csi('coal','elpc_old',t,n)$(year(t) ge 2010) = csicalib('coal','elpc_old',t,n);
5030  csi('gas','elgastr_old',t,n)$(year(t) ge 2010) = csicalib('gas','elgastr_old',t,n);
5031  csi('gas','elgastr_new',t,n)$(year(t) ge 2010) = csicalib('gas','elgastr_new',t,n);
5032  csi('oil','eloil_old',t,n)$(year(t) ge 2010) = csicalib('oil','eloil_old',t,n);
5033  csi('oil','eloil_new',t,n)$(year(t) ge 2010) = csicalib('oil','eloil_new',t,n);
5034   
5035  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
5038  *-------------------------------------------------------------------------------
5039  * Carbon Emissions
5040  * - Total CO2 emissions and CO2 Fossil fuel and Industry
5041  * - CO2 emission costs
5042  * - GHG permit market
5043  *-------------------------------------------------------------------------------
5044   
5046   
5047  execute_load 'data_witch17/data_tfp_ssp2', emi_sys;
5048   
5049  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
5052  *-------------------------------------------------------------------------------
5053  * Research & Development
5054  * Options:
5055  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
5056  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
5057  *-------------------------------------------------------------------------------
5058   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
5061  *-------------------------------------------------------------------------------
5062  * Default Climate Policy Implementation
5063  *
5064  * Options:
5065  *    --policy={bau (default),ctax}
5066  *        Implement a climate policy setting
5067  *  [ --scen= ]
5068  *        Policy variant.
5069  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
5070  *          * XXX for a fixed percentage/yr (e.g. 5) growth
5071  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
5072  *  [ --ctax_year=2020 ]
5073  *        Starting year of the carbon tax
5074  *  [ --ctax_initial=30 ]
5075  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
5076  *
5077  *-------------------------------------------------------------------------------
5079   
5080  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
5082  *-------------------------------------------------------------------------------
5083  * Energy efficiency
5084  *-------------------------------------------------------------------------------
5085   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
5088  *-------------------------------------------------------------------------------
5089  * Hydro Power
5090  *-------------------------------------------------------------------------------
5091   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
5094  *-------------------------------------------------------------------------------
5095  * System Integration:
5096  * - Capacity constraint
5097  * - Flexibility constraint
5098  * - Grid Investment
5099  * - Capacity growth constraint
5100  *-------------------------------------------------------------------------------
5101   
5103   
5104  execute_load 'data_witch17/data_tfp_ssp2', firm_coeff;
5105   
5106  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
5109  *-------------------------------------------------------------------------------
5110  * Nuclear power plants
5111  *-------------------------------------------------------------------------------
5112   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
5115  *-------------------------------------------------------------------------------
5116  * GHG module
5117  * - CH4 FFI + CH4 waste + CH4 open fires
5118  * - N2O FFI + N2O waste + N2O open fires
5119  *-------------------------------------------------------------------------------
5120   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
5123  *-------------------------------------------------------------------------------
5124  * F-gases
5125  * - LLF
5126  * - SLF
5127  *-------------------------------------------------------------------------------
5128   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
5131  *-------------------------------------------------------------------------------
5132  * Landuse [simplified version of the land-use model]
5133  *-------------------------------------------------------------------------------
5134   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
5137  *-------------------------------------------------------------------------------
5138  * Bioenergy power plant
5139  *-------------------------------------------------------------------------------
5140   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
5143  *-------------------------------------------------------------------------------
5144  * Traditional Biofuels
5145  * - Requires the precedence of mod_landuse
5146  *-------------------------------------------------------------------------------
5147   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
5150  *-------------------------------------------------------------------------------
5151  * Advanced biofuel
5152  * - Require the precedence of mod_landuse
5153  *-------------------------------------------------------------------------------
5154   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
5157  *-------------------------------------------------------------------------------
5158  * Carbon Capture and Sequestration
5159  *-------------------------------------------------------------------------------
5160   
5162   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
5164  *-------------------------------------------------------------------------------
5165  * Coal for non-electric sectors
5166  * - Coke Plants
5167  * - Industrial and Commercial combined-heat-and-power (CHP)
5168  * - Others
5169  *-------------------------------------------------------------------------------
5170   
5172   
5173  execute_load 'data_witch17/data_tfp_ssp2', nelcoal_baseline;
5174   
5175  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
5178  *-------------------------------------------------------------------------------
5179  * Wind energy module
5180  * - onshore and offshore
5181  *-------------------------------------------------------------------------------
5182   
5184   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
5186  *-------------------------------------------------------------------------------
5187  * Solar Powerplants (PV and CSP) to the electrical system
5188  *-------------------------------------------------------------------------------
5189   
5190  *-------------------------------------------------------------------------------
5192   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
5194  *-------------------------------------------------------------------------------
5195  * Technology development scenarios
5196  *-------------------------------------------------------------------------------
5197   
5199   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
5201  *-------------------------------------------------------------------------------
5202  * Oil Extraction
5203  * Options:
5204  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
5205  *-------------------------------------------------------------------------------
5206   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
5209  *-------------------------------------------------------------------------------
5210  * Uranium Resources
5211  *-------------------------------------------------------------------------------
5212   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
5215  *-------------------------------------------------------------------------------
5216  * Gas Resources
5217  *-------------------------------------------------------------------------------
5218   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
5221  *-------------------------------------------------------------------------------
5222  * Coal Resources
5223  *-------------------------------------------------------------------------------
5224   
5226   
5227   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
5229  *-------------------------------------------------------------------------------
5230  * Climate
5231  *
5232  * Represents the climate
5233  * - based on the DICE model equations
5234  * - Radiative forcing for non CO2 ghgs
5235  * - parameters calibrated to reproduce MAGICC6.4 default response
5236  *
5237  *  Options:
5238  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
5239  * - $setglobal cooperate_on_climate {'YES','NO'}
5240  * - 'YES'(default): Countries within a coalition act in cooperation
5241  *   'NO': Countries within a coalition act individually
5242  *
5243  *-------------------------------------------------------------------------------
5244   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
5247  *-------------------------------------------------------------------------------
5248  * Long-run Damages from Climate Change
5249  * - Economic impacts
5250  * - Adaptation
5251  *-------------------------------------------------------------------------------
5252   
5254   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
5256  *-------------------------------------------------------------------------------
5257  * Light-duty Vehicles for Personal Transport
5258  *-------------------------------------------------------------------------------
5259   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
5262  *-------------------------------------------------------------------------------
5263  * Road Freight Transport
5264  *-------------------------------------------------------------------------------
5266   
5267   
5268   
5269   
5270   
5271   
5272  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
5274  *-------------------------------------------------------------------------------
5275  * Traditional Biomass
5276  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
5277  *  - require post_process to be launch before
5278  *-------------------------------------------------------------------------------
5279   
5281   
5282  * Optional modules
5283   
5284  * Policy modules
5285   
5286  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
5290  *-------------------------------------------------------------------------------
5291  * Call modules by order
5292  *-------------------------------------------------------------------------------
5296   
5297  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
5299  *-------------------------------------------------------------------------------
5300  * Algorithm
5301  *-------------------------------------------------------------------------------
5302   
5304   
5305  rho_admm('oil',t) = 3e-9;
5306  rho_admm('nip',t) = 2e0;
5307   
5308  *-------------------------------------------------------------------------------
5310   
5311  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
5313  *-------------------------------------------------------------------------------
5314  * Time
5315  * - Temporal structure
5316  * - Fixed time periods
5317  * - States of the world
5318  *-------------------------------------------------------------------------------
5319   
5321   
5322  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
5324  *-------------------------------------------------------------------------------
5325  * Geographic dimension and mapping with countries
5326  *-------------------------------------------------------------------------------
5327   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
5330  *-------------------------------------------------------------------------------
5331  * Non-Cooperative Setup
5332  *
5333  * Each region is defined as an individual coalition.
5334  *
5335  *-------------------------------------------------------------------------------
5336   
5338   
5339  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
5341  *-------------------------------------------------------------------------------
5342  * Welfare
5343  *-------------------------------------------------------------------------------
5344   
5346   
5347  parameter srtp(t) 'Social rate of time preference [% per year]';
5348  srtp(t) = 1;
5349   
5350  parameter stpf(t) 'Social time preference factor';
5351  stpf(tfirst) = 1;
5352  loop(tnolast(t),
5353    stpf(tt)$pre(t,tt) = stpf(t) / (1 + srtp(t) / 100)**tlen(t);
5354  );
5355   
5356  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
5359  *-------------------------------------------------------------------------------
5360  * Economy
5361  * - Production and Consumption definition
5362  * - Top-level of the production function
5363  * Options:
5364  * --original_ssp=1 : original SSP population and GDP data
5365  *-------------------------------------------------------------------------------
5366   
5368   
5369  parameter delta(g);
5370  delta(g) = delta0(g);
5371   
5372  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
5375  *-------------------------------------------------------------------------------
5376  * Energy sector
5377  *-------------------------------------------------------------------------------
5378   
5380   
5382   
5383  delta_en(jreal,t,n) = delta_en0(jreal,n);
5384  delta_lcost(jreal,t,n) = delta_en0(jreal,n);
5385   
5386  loop((jreal,jcalib)$(map_calib(jcalib,jreal) and sum(jold$sameas(jold,jreal),1)),
5387      delta_en(jreal,t,n)$(year(t) eq 2005) = 0;
5388      delta_en(jreal,t,n)$(year(t) eq 2010) = 1 - (k_en_valid_old(jcalib,t,n) / k_en_valid_old(jcalib,tfirst,n))**(1/5);
5389      loop((t,tm1)$((year(t) eq 2015) and pre(tm1,t)), delta_en(jreal,t,n) = 0.5*(delta_en(jreal,tm1,n)+delta_en0(jreal,n)));
5390  );
5391   
5392  parameter p_mkup(fuel,t,n) 'Temporal-regional price markup [T$/TWh]';
5393  p_mkup(fuel,t,n)$p_mkup0(fuel,n) = p_mkup0(fuel,n)*p_mkup_adjust(fuel,t,n);
5394   
5395  parameter oem(jreal,t,n);
5396  oem(jreal,t,n) = oem0(jreal,n);
5397  oem(jfed,t,n)$(csi('coal',jfed,t,n) or csi('wbio',jfed,t,n)) = oem(jfed,t,n) + localpll(t,n);
5398   
5399  wcum(f,tfirst) = cexs(f,'cum0');
5400   
5401  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
5404  *-------------------------------------------------------------------------------
5405  * Carbon Emissions
5406  * - Total CO2 emissions and CO2 Fossil fuel and Industry
5407  * - CO2 emission costs
5408  * - GHG permit market
5409  *-------------------------------------------------------------------------------
5410   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
5413  *-------------------------------------------------------------------------------
5414  * Research & Development
5415  * Options:
5416  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
5417  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
5418  *-------------------------------------------------------------------------------
5419   
5421   
5422  wcum(rd,tfirst) = rd_coef(rd,'wcum0');
5423   
5424  * Map a period to its learning reference period.
5425  * Example: if all periods last 5 years and rd_gap_year is 10 years, then
5426  * the period to consider is the second predecessor (t-2).
5427  loop(jrd,
5428  rd_tgap(jrd,t,tt) = no;
5429  loop((t,tt)$(not tfix(t) and
5430    preds(t,tt) and
5431    (year(t) ge rd_time(jrd,'start')) and
5432    (begyear(t)-rd_time(jrd,'gap') ge begyear(tt)) and
5433    (begyear(t)-rd_time(jrd,'gap') lt begyear(tt)+tlen(tt))),
5434  rd_tgap(jrd,t,tt) = yes;
5435  );
5436  );
5437   
5438  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
5441  *-------------------------------------------------------------------------------
5442  * Default Climate Policy Implementation
5443  *
5444  * Options:
5445  *    --policy={bau (default),ctax}
5446  *        Implement a climate policy setting
5447  *  [ --scen= ]
5448  *        Policy variant.
5449  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
5450  *          * XXX for a fixed percentage/yr (e.g. 5) growth
5451  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
5452  *  [ --ctax_year=2020 ]
5453  *        Starting year of the carbon tax
5454  *  [ --ctax_initial=30 ]
5455  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
5456  *
5457  *-------------------------------------------------------------------------------
5459   
5460  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
5462  *-------------------------------------------------------------------------------
5463  * Energy efficiency
5464  *-------------------------------------------------------------------------------
5465   
5467   
5468  krd0('en',n) = q0('krd_en',n);
5469   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
5472  *-------------------------------------------------------------------------------
5473  * Hydro Power
5474  *-------------------------------------------------------------------------------
5475   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
5478  *-------------------------------------------------------------------------------
5479  * System Integration:
5480  * - Capacity constraint
5481  * - Flexibility constraint
5482  * - Grid Investment
5483  * - Capacity growth constraint
5484  *-------------------------------------------------------------------------------
5485   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
5488  *-------------------------------------------------------------------------------
5489  * Nuclear power plants
5490  *-------------------------------------------------------------------------------
5491   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
5494  *-------------------------------------------------------------------------------
5495  * GHG module
5496  * - CH4 FFI + CH4 waste + CH4 open fires
5497  * - N2O FFI + N2O waste + N2O open fires
5498  *-------------------------------------------------------------------------------
5499   
5501   
5502  emi_ffac('ch4_ffi',f,t,n) = emi_ffac0('ch4_ffi',f,n);
5503  emi_ffac('ch4_ffi',f,t,n)$(year(t)>2005) = emi_ffac0('ch4_ffi',f,n) * power(1 - (emi_ch4_tp/100),year(t)-2005);
5504   
5505  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
5508  *-------------------------------------------------------------------------------
5509  * F-gases
5510  * - LLF
5511  * - SLF
5512  *-------------------------------------------------------------------------------
5513   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
5516  *-------------------------------------------------------------------------------
5517  * Landuse [simplified version of the land-use model]
5518  *-------------------------------------------------------------------------------
5519   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
5522  *-------------------------------------------------------------------------------
5523  * Bioenergy power plant
5524  *-------------------------------------------------------------------------------
5525   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
5528  *-------------------------------------------------------------------------------
5529  * Traditional Biofuels
5530  * - Requires the precedence of mod_landuse
5531  *-------------------------------------------------------------------------------
5532   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
5535  *-------------------------------------------------------------------------------
5536  * Advanced biofuel
5537  * - Require the precedence of mod_landuse
5538  *-------------------------------------------------------------------------------
5539   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
5542  *-------------------------------------------------------------------------------
5543  * Carbon Capture and Sequestration
5544  *-------------------------------------------------------------------------------
5545   
5547   
5548  * Storage capacity: total of aquifer dividing into ON and OFF
5549  ccs_stor_cap_max(n,ccs_stor_estim,ccs_stor_aqui) = ccs_stor_cap_aqui(n,ccs_stor_estim) * ccs_stor_share_onoff(n,ccs_stor_aqui);
5550   
5551  * Storage capacity: total of og, eor included
5552  ccs_stor_cap_og_onoff(n,ccs_stor_estim,ccs_stor_og_eor) = ccs_stor_cap_og(n,ccs_stor_estim) * ccs_stor_share_onoff(n,ccs_stor_og_eor);
5553   
5554  * Storage capacity: total of ecbm which is ON only
5555  ccs_stor_cap_max(n,ccs_stor_estim,'ecbm') = ccs_stor_cap_ecbm(n,ccs_stor_estim);
5556   
5557  * Storage capacity: total of eor dividing into ON and OFF
5558  loop((ccs_stor_eor,ccs_stor_og_eor)$(map_ccs_stor_eor(ccs_stor_eor,ccs_stor_og_eor)),
5559       ccs_stor_cap_max(n,ccs_stor_estim,ccs_stor_eor) = ccs_stor_cap_eor(n)*ccs_stor_share_onoff(n,ccs_stor_og_eor)
5560  );
5561   
5562  * Storage capacity: total of og, eor excluded
5563  loop((ccs_stor_og,ccs_stor_og_eor,ccs_stor_eor)$(map_ccs_stor_og(ccs_stor_og,ccs_stor_og_eor,ccs_stor_eor)),
5564     ccs_stor_cap_max(n,ccs_stor_estim,ccs_stor_og) = max(ccs_stor_cap_og_onoff(n,ccs_stor_estim,ccs_stor_og_eor)-ccs_stor_cap_max(n,ccs_stor_estim,ccs_stor_eor),1e-7)
5565  );
5566   
5567  * Emission factors fix
5568  ccs_emi_capt('coal') = emi_st('coal');
5569  ccs_emi_capt('gas') = emi_st('gas');
5570   
5571  ccs_leak_rate(ccs_stor,t,n) = 0;
5572   
5573  *-------------------------------------------------------------------------------
5575   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
5577  *-------------------------------------------------------------------------------
5578  * Coal for non-electric sectors
5579  * - Coke Plants
5580  * - Industrial and Commercial combined-heat-and-power (CHP)
5581  * - Others
5582  *-------------------------------------------------------------------------------
5583   
5585   
5586  csi('coal','nelcoal',t,n) = 0;
5587   
5588  csi('coal','nelcoaltr',t,n) = 1;
5589  csi('coal','nelcoalccs',t,n) = 1;
5590   
5591  mcost_inv0('nelcoalccs',n) = 25 * c2co2 * 1e-6;
5592   
5593  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
5596  *-------------------------------------------------------------------------------
5597  * Wind energy module
5598  * - onshore and offshore
5599  *-------------------------------------------------------------------------------
5600   
5602   
5603  parameter wind_mu(wind_class);
5604  wind_mu(wind_class) = cap_factor(wind_class) * yearly_hours;
5605   
5606  delta_en(jreal_wind,t,n)=delta_en0(jreal_wind,n);
5607  delta_lcost(jreal_wind,t,n)=delta_en0(jreal_wind,n);
5608   
5609  oem('elwindon',t,n) = oem_wind(n);
5610  oem('elwindoff',t,n) = 2*oem_wind(n);
5611   
5612  k_en0('elwindon',n) = max(1e-8,sum(wind_class,(smax(tt$(year(tt) eq 2005), k_en0_windon(wind_class,tt,n)))));
5613  k_en0('elwindoff',n) = max(1e-8,sum(wind_class,(smax(tt$(year(tt) eq 2005), k_en0_windoff(wind_class,tt,n)))));
5614   
5615  mu('elwindon',tfirst,n) = sum(wind_class, wind_mu(wind_class)*max(1e-8,(smax(tt$(year(tt) eq 2005), k_en0_windon(wind_class,tt,n)))))/k_en0('elwindon',n);
5616  mu('elwindoff',tfirst,n) = sum(wind_class, wind_mu(wind_class)*max(1e-8,(smax(tt$(year(tt) eq 2005), k_en0_windoff(wind_class,tt,n)))))/k_en0('elwindoff',n);
5617   
5618  *-------------------------------------------------------------------------------
5620   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
5622  *-------------------------------------------------------------------------------
5623  * Solar Powerplants (PV and CSP) to the electrical system
5624  *-------------------------------------------------------------------------------
5625   
5626  *-------------------------------------------------------------------------------
5628   
5629  delta_en(jreal_solar,t,n) = delta_en0(jreal_solar,n);
5630  delta_lcost(jreal_solar,t,n) = delta_en0(jreal_solar,n);
5631   
5632  mcost_inv0('elpv',n) = (smax(tt$(year(tt) eq 2005), mcost_inv_valid_solar('elpv',tt,n)));
5633  k_en0('elpv',n) = sum(solar_class, k_en0_pv(solar_class,tfirst,n));
5634  oem('elpv',t,n) = oem_pv('mid',n);
5635   
5636  mcost_inv0('elcsp',n) = (smax(tt$(year(tt) eq 2005), mcost_inv_valid_solar('elcsp',tt,n)));
5637  k_en0('elcsp',n) = sum(solar_class, k_en0_csp(solar_class,tfirst,n));
5638  oem('elcsp',t,n) = oem_csp(n);
5639   
5640  mu('elpv',tfirst,n)$(k_en0('elpv',n) gt eps) = sum(solar_class, solar_mu(solar_class,'elpv')*max(1e-8,k_en0_pv(solar_class,tfirst,n)))/k_en0('elpv',n);
5641  mu('elcsp',tfirst,n)$(k_en0('elcsp',n) gt eps) = sum(solar_class, solar_mu(solar_class,'elcsp')*max(1e-8,k_en0_csp(solar_class,tfirst,n)))/k_en0('elcsp',n);
5642   
5643  *-------------------------------------------------------------------------------
5645   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
5647  *-------------------------------------------------------------------------------
5648  * Technology development scenarios
5649  *-------------------------------------------------------------------------------
5650   
5652   
5653  if(tech_scen('renewables') = low,
5654   
5655  rd_coef(jreal_wind,'lbd') = 2/3 * rd_coef(jreal_wind,'lbd');
5656  rd_coef(jreal_solar,'lbd') = 2/3 * rd_coef(jreal_solar,'lbd');
5657   
5658  floor_cost(jel_wind) = 3/2 * floor_cost(jel_wind);
5659  floor_cost(jel_solar) = 3/2 * floor_cost(jel_solar);
5660  flex_coeff(jel_wind) = 3/2 * flex_coeff(jel_wind);
5661  flex_coeff(jel_solar) = 3/2 * flex_coeff(jel_solar);
5662   
5663  );
5664   
5665  if(tech_scen('renewables') = high,
5666   
5667  rd_coef(jreal_wind,'lbd') = 3/2 * rd_coef(jreal_wind,'lbd');
5668  rd_coef(jreal_solar,'lbd') = 3/2 * rd_coef(jreal_solar,'lbd');
5669   
5670  floor_cost(jel_wind) = 1 * floor_cost(jel_wind);
5671  floor_cost(jel_solar) = 1 * floor_cost(jel_solar);
5672  flex_coeff(jel_wind) = 1/2 * flex_coeff(jel_wind);
5673  flex_coeff(jel_solar) = 1/2 * flex_coeff(jel_solar);
5674   
5675  );
5676   
5677  if(tech_scen('nuclear') = low,
5678  cwaste_reg('rho',n) = 2.2;
5679  );
5680   
5681  if(tech_scen('nuclear') = high_oecd,
5682  cwaste_reg('rho',oecd) = 1.6;
5683  );
5684   
5685  if(tech_scen('nuclear') = high_non_oecd,
5686  cwaste_reg('rho',non_oecd) = 1.6;
5687  );
5688   
5689  if(tech_scen('CCS') = low,
5690  mcost_inv0(jlccs,n) = mcost_inv0(jlccs,n) * ccs_inv_var(jlccs,'high');
5691  ccs_stor_cost(ccs_stor,n) = ccs_stor_cost_estim(ccs_stor,'high');
5692  );
5693   
5694  if(tech_scen('CCS') = high,
5695  mcost_inv0(jlccs,n) = mcost_inv0(jlccs,n)*ccs_inv_var(jlccs,'low');
5696  ccs_stor_cost(ccs_stor,n)=ccs_stor_cost_estim(ccs_stor,'low');
5697  );
5698   
5699  if(tech_scen('CCS') = high_non_oecd,
5700  mcost_inv0(jlccs,non_oecd) = mcost_inv0(jlccs,non_oecd)*ccs_inv_var(jlccs,'low');
5701  ccs_stor_cost(ccs_stor,non_oecd)=ccs_stor_cost_estim(ccs_stor,'low');
5702  );
5703   
5705   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
5707  *-------------------------------------------------------------------------------
5708  * Oil Extraction
5709  * Options:
5710  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
5711  *-------------------------------------------------------------------------------
5712   
5714   
5715  * Set correct grade level
5716  parameter oil_cost(oilg,n);
5717  oil_cost(oilg,n)$(valid_oilg(oilg)) = (sum(oilgg$map_oilgrade(oilg,oilgg), oil_cost_grade(oilgg,n) * oil_esp_capacity(oilgg,'M',n))) /
5718                                        (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n)));
5719   
5720  parameter oil_cum(oilg,n);
5721  oil_cum(oilg,n)$(valid_oilg(oilg)) = (sum(oilgg$map_oilgrade(oilg,oilgg), oil_cum_grade(oilgg) * oil_esp_capacity(oilgg,'M',n))) /
5722                                       (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n)));
5723   
5724  parameter oil_emi_st(oilg,n);
5725  oil_emi_st(oilg,n) = emi_st('oil') * (sum(oilgg$map_oilgrade(oilg,oilgg), oil_emi_st_grade(oilgg) * oil_reserve(oilgg,'M',n))) /
5726                                       (sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)));
5727   
5728  * Calibrate oil_capacity to q_out_valid_weo in 2005
5729  oil_capacity(oilg,n) = oil_capacity(oilg,n) * (smax(tt$(year(tt) eq 2005), q_out_valid_weo('oil',tt,n))) /
5730                          sum(oilgg, oil_capacity(oilgg,n));
5731   
5732  parameter delta_oilg / 0.1 /;
5733   
5734  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
5737  *-------------------------------------------------------------------------------
5738  * Uranium Resources
5739  *-------------------------------------------------------------------------------
5740   
5742   
5743  parameter
5744      resgr(f,t) 'Growth rate of ultimately recoverable resources amount'
5745      res(f,t)   'Ultimately Recoverable Resources [TWh]'
5746  ;
5747  resgr('uranium',t) = 0.006 + 0.024 / (1 + exp(-(year(t) - 2075) / 20));
5748  res('uranium',tfirst) = cexs('uranium','res0');
5749  loop((tnofirst(t),tm1)$pre(tm1,t),
5750      res('uranium',t) = res('uranium',tm1)*(1+resgr('uranium',tm1))**tlen(tm1);
5751  );
5752   
5753  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
5756  *-------------------------------------------------------------------------------
5757  * Gas Resources
5758  *-------------------------------------------------------------------------------
5759   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
5762  *-------------------------------------------------------------------------------
5763  * Coal Resources
5764  *-------------------------------------------------------------------------------
5765   
5767   
5768  * Raise coal demand for SSP3&5, otherwise too low
5771   
5772  *-------------------------------------------------------------------------------
5774   
5775   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
5777  *-------------------------------------------------------------------------------
5778  * Climate
5779  *
5780  * Represents the climate
5781  * - based on the DICE model equations
5782  * - Radiative forcing for non CO2 ghgs
5783  * - parameters calibrated to reproduce MAGICC6.4 default response
5784  *
5785  *  Options:
5786  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
5787  * - $setglobal cooperate_on_climate {'YES','NO'}
5788  * - 'YES'(default): Countries within a coalition act in cooperation
5789  *   'NO': Countries within a coalition act individually
5790  *
5791  *-------------------------------------------------------------------------------
5792   
5794   
5795  wemi2qemi(ghg)   = emi_gwp(ghg) / c2co2;
5796  wemi2qemi('co2') = 1;
5797   
5798  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
5801  *-------------------------------------------------------------------------------
5802  * Long-run Damages from Climate Change
5803  * - Economic impacts
5804  * - Adaptation
5805  *-------------------------------------------------------------------------------
5806   
5808   
5809  delta('prada') = 0.1;
5810  delta('rada') = 1;
5811  delta('scap') = 0.03;
5812   
5813  *-------------------------------------------------------------------------------
5815   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
5817  *-------------------------------------------------------------------------------
5818  * Light-duty Vehicles for Personal Transport
5819  *-------------------------------------------------------------------------------
5820   
5822   
5823  *** new code
5824  dec_inv(t,n) = 1;
5825   
5826  battery_cost_new(t,n) = battery_cost(t);
5827  battery_cost_new(t,n)$(sameas (n,'mexico')) = increase_price_rare_material(t)*battery_cost(t);
5828  ***
5829   
5830  krd0('battery',n) = sum(nn,krd0('en',nn))*0.0141*0.076923077;
5831   
5832  * 1) Calculation of the number of vehicles
5833   
5834  gdppc(t,n) = (ykali(t,n)*1e6)/l(t,n);
5835   
5836  ldv_pthc(t,n) = ldv_pthc_2005(n);
5837  * Now replaced by passenger car data per country and population (in vehicles per 1000 capita)
5838  ldv_pthc(t,n)$(year(t) le 2015) = k_veh_passengercars(n,t) / l(t,n);
5839   
5840  loop((tm1,t,n)$(pre(tm1,t) and year(t) gt 2015),
5841      if(gdppc(t,n) le 5000,
5842          ldv_pthc(t,n) = ldv_pthc(tm1,n)*(1+(gdppc(t,n)/gdppc(tm1,n)-1)*oge('c1'))+ai('c1');
5843      else
5844          ldv_pthc(t,n)$(ldv_pthc(tm1,n) le 300) = ldv_pthc(tm1,n)*(1+(gdppc(t,n)/gdppc(tm1,n)-1)*oge('c2'))+ai('c2');
5845          ldv_pthc(t,n)$(ldv_pthc(tm1,n) gt 300 and ldv_pthc(tm1,n) le 500) = ldv_pthc(tm1,n)*(1+(gdppc(t,n)/gdppc(tm1,n)-1)*oge('c3'))+ai('c3');
5846          ldv_pthc(t,n)$(ldv_pthc(tm1,n) gt 500 and ldv_pthc(tm1,n) le 600) = ldv_pthc(tm1,n)*(1+(gdppc(t,n)/gdppc(tm1,n)-1)*oge('c4'))+ai('c4');
5847          ldv_pthc(t,n)$(ldv_pthc(tm1,n) gt 600) = ldv_pthc(tm1,n)*(1+(gdppc(t,n)/gdppc(tm1,n)-1)*oge('c5'))+ai('c5');
5848      );
5849  );
5850   
5851  *** newcode CARSHARING
5852  * da trasformare in variabile per poter inserire unvestimenti
5853  carshare(t,n) = 1;
5854  ldv_pthc(t,n) = ldv_pthc(t,n) * coeff_ldv(t,n) * carshare(t,n);
5855   
5856  ldv_total(t,n) = ldv_pthc(t,n)*l(t,n)/1e3;
5857  ***
5858   
5859  * 2) Calculation of demand and consumption
5860   
5861  km_demand_ldv(t,n) = (travel_intensity(t,n)*(ykali(t,n)*1e12))/1e6;
5862  service_demand_ldv(t,n) = load_factor_ldv(t,n) * km_demand_ldv(t,n);
5863  km_demand_pv_ldv(t,n) = km_demand_ldv(t,n)/ldv_total(t,n);
5864  km_demand_pv_deviation_ldv(t,n) = km_demand_pv_ldv(t,n)/km_demand_pv_ldv(tfirst,n);
5865   
5866  fuel_cons(jveh,tfirst,n) = fuel_cons_2005(jveh,n);
5867  fuel_cons(jveh,t,n)$(year(t) ge 2010) = fuel_cons_2005(jveh,n) * km_demand_pv_deviation_ldv(t,n) * (max((tperiod(t)-1),1.4)**fueleff_rate(t,n));
5868  elec_plg(t,n) = elec_plg_2005(n) * km_demand_pv_deviation_ldv(t,n) * (tperiod(t)**fueleff_rate(t,n));
5869  * The expression max((tperiod(t)-1),1.4) is needed to recalibrate the 2010 data.
5870   
5871   
5872  * 3) Other parameters
5873   
5874  oem(jveh,t,n) = oem_veh(jveh,n)/1e12;
5875   
5876  lifetime(jveh,n) = 22; # lifetime of 22 years
5877  delta_en(jveh,t,n) = 1 - exp( 1 / ( - lifetime(jveh,n) + (0.01/2) * lifetime(jveh,n)**2) );
5878   
5879  csi('oil',jfedveh,t,n) = 1;
5880  csi('trbiofuel',jfedveh,t,n) = 1;
5881  csi('advbiofuel',jfedveh,t,n) = 1;
5882   
5883  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
5886  *-------------------------------------------------------------------------------
5887  * Road Freight Transport
5888  *-------------------------------------------------------------------------------
5890   
5891  stfr_total(tfirst,n) = stfr_total_2005(n);
5892   
5893  loop((t,tm1)$(tnofirst(t) and pre(tm1,t)),
5894    stfr_total(t,n) = stfr_total(tm1,n)*(1+stfr_factor('ssp2')*((gdppc(t,n)/gdppc(tm1,n))-1));
5895  );
5896   
5897  km_demand_pv_stfr(t,n) = km_demand_pv_stfr_2005(n);
5898  load_factor_stfr(t,n) = load_factor_stfr_2005(n);
5899  km_demand_stfr(t,n) = stfr_total(t,n) * km_demand_pv_stfr(t,n);
5900  service_demand_stfr(t,n) = km_demand_stfr(t,n) * load_factor_stfr(t,n);
5901   
5902  fuel_cons_stfr(jfrt,tfirst,n) = fuel_cons_stfr_2005(jfrt,n);
5903  fuel_cons_stfr(jfrt,t,n)$(year(t) ge 2010) = fuel_cons_stfr_2005(jfrt,n)*(max((((year(t)-2000)/5)-1),1.4)**fueleff_rate_stfr(t,n));
5904  elec_plg_stfr(t,n) = elec_plghbd_stfr_2005(n)*(((year(t)-2000)/5)**fueleff_rate_stfr(t,n));
5905   
5906  oem(jfrt,t,n) = oem_frt(n)/1e12;
5907   
5908  lifetime(jfrt,n) = 22; # lifetime of 22 years
5909  delta_en(jfrt,t,n) = 1 - exp( 1 / ( - lifetime(jfrt,n) + (0.01/2) * lifetime(jfrt,n)**2) );
5910   
5911  csi('oil',jfedfrt,t,n) = 1;
5912  csi('trbiofuel',jfedfrt,t,n) = 1;
5913  csi('advbiofuel',jfedfrt,t,n) = 1;
5914   
5915  *-------------------------------------------------------------------------------
5917   
5918   
5919   
5920   
5921   
5922   
5923  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
5925  *-------------------------------------------------------------------------------
5926  * Traditional Biomass
5927  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
5928  *  - require post_process to be launch before
5929  *-------------------------------------------------------------------------------
5930   
5932   
5933  * Guarantee consistency with static calibration
5934  neltrbiomass0(tfirst,n)$(q0('neltrbiomass',n) gt 1e-2) = q0('neltrbiomass',n);
5935   
5936  *-------------------------------------------------------------------------------
5938   
5939  * Optional modules
5940   
5941  * Policy modules
5942   
5943  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
5947  *-------------------------------------------------------------------------------
5948  * Call modules by order
5949  *-------------------------------------------------------------------------------
5953   
5954  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
5956  *-------------------------------------------------------------------------------
5957  * Algorithm
5958  *-------------------------------------------------------------------------------
5959   
5961   
5962  variable OBJADMM 'Objective function with ADMM';
5963   
5964  *-------------------------------------------------------------------------------
5966   
5967  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
5969  *-------------------------------------------------------------------------------
5970  * Time
5971  * - Temporal structure
5972  * - Fixed time periods
5973  * - States of the world
5974  *-------------------------------------------------------------------------------
5975   
5977   
5978  variable PROB(t) 'Probability of all states of the world';
5979   
5980  PROB.fx(t) = 1;
5981   
5982  *-------------------------------------------------------------------------------
5984   
5985  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
5987  *-------------------------------------------------------------------------------
5988  * Geographic dimension and mapping with countries
5989  *-------------------------------------------------------------------------------
5990   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
5993  *-------------------------------------------------------------------------------
5994  * Non-Cooperative Setup
5995  *
5996  * Each region is defined as an individual coalition.
5997  *
5998  *-------------------------------------------------------------------------------
5999   
6001   
6002  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
6004  *-------------------------------------------------------------------------------
6005  * Welfare
6006  *-------------------------------------------------------------------------------
6007   
6009   
6010  variable UTILITY 'Social welfare';
6011   
6012  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
6015  *-------------------------------------------------------------------------------
6016  * Economy
6017  * - Production and Consumption definition
6018  * - Top-level of the production function
6019  * Options:
6020  * --original_ssp=1 : original SSP population and GDP data
6021  *-------------------------------------------------------------------------------
6022   
6024   
6025  positive variable K(g,t,n) 'Capital for production [T$]';
6026    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K; if(execerror gt prevexecerrors, K.l(g,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); K.lo(g,t,n) = 1e-6; K.up(g,t,n) = 400; K.l(g,t,n)$(K.l(g,t,n)<1e-6) = 1e-6; K.l(g,t,n)$(K.l(g,t,n)>400) = 400;;
6027  K.fx('fg',tfirst,n) = q0('k',n);
6028   
6029  positive variable Q(iq,t,n) 'Upper CES tree nodes [T$]';
6030    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q; if(execerror gt prevexecerrors, Q.l(iq,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); Q.lo(iq,t,n) = 1e-8; Q.up(iq,t,n) = 1e5; Q.l(iq,t,n)$(Q.l(iq,t,n)<1e-8) = 1e-8; Q.l(iq,t,n)$(Q.l(iq,t,n)>1e5) = 1e5;;
6031  Q.l('eifen',t,n) = Q.l('fen',t,n);
6032  * final good consumption lower bounded to 5% of the 2005 GDP to
6033  * povide the solver for a realistic trust interval
6034  * (Relax it if lower consumption levels are needed).
6035  Q.lo('cc',t,n) = 0.01 * ykali(tfirst,n);
6036  Q.l('kl',t,n) = NA; # not determined by the model
6037   
6038  positive variable I(g,t,n) 'Investments in goods [T$]';
6039    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I; if(execerror gt prevexecerrors, I.l(g,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); I.lo(g,t,n) = 1e-8; I.up(g,t,n) = 100; I.l(g,t,n)$(I.l(g,t,n)<1e-8) = 1e-8; I.l(g,t,n)$(I.l(g,t,n)>100) = 100;;
6040   
6041  variable COST_Y(ccy,t,n) 'Additionnal costs from modules [T$]';
6042    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', COST_Y; if(execerror gt prevexecerrors, COST_Y.l(ccy,t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); COST_Y.lo(ccy,t,n) = 0; COST_Y.up(ccy,t,n) = +1e6; COST_Y.l(ccy,t,n)$(COST_Y.l(ccy,t,n)<0) = 0; COST_Y.l(ccy,t,n)$(COST_Y.l(ccy,t,n)>+1e6) = +1e6;;
6043   
6044  * BAU data
6045  variable BAU_Q(iq,t,n);
6046  execute_load 'data_witch17/results_ssp2_calib', BAU_Q=Q;
6047   
6048  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
6051  *-------------------------------------------------------------------------------
6052  * Energy sector
6053  *-------------------------------------------------------------------------------
6054   
6056   
6057  variable COST_FUEL(fuel,t,n) 'Energy sources costs [T$]';
6058    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', COST_FUEL; if(execerror gt prevexecerrors, COST_FUEL.l(fuel,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); COST_FUEL.lo(fuel,t,n) = -inf; COST_FUEL.up(fuel,t,n) = +inf; COST_FUEL.l(fuel,t,n)$(COST_FUEL.l(fuel,t,n)<-inf) = -inf; COST_FUEL.l(fuel,t,n)$(COST_FUEL.l(fuel,t,n)>+inf) = +inf;;
6059   
6060  variable COST_EN(j,t,n) 'Energy costs [T$]';
6061    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', COST_EN; if(execerror gt prevexecerrors, COST_EN.l(j,t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); COST_EN.lo(j,t,n) = -inf; COST_EN.up(j,t,n) = +inf; COST_EN.l(j,t,n)$(COST_EN.l(j,t,n)<-inf) = -inf; COST_EN.l(j,t,n)$(COST_EN.l(j,t,n)>+inf) = +inf;;
6062   
6063  * Mean costs
6064  positive variable MCOST_INV(jreal,t,n) 'Average cost of investment [T$/TW] ([T$/million vehicles] for LDVs, [$/kWh] for batteries)';
6065    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', MCOST_INV; if(execerror gt prevexecerrors, MCOST_INV.l(jreal,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); MCOST_INV.lo(jreal,t,n) = 1e-8; MCOST_INV.up(jreal,t,n) = +inf; MCOST_INV.l(jreal,t,n)$(MCOST_INV.l(jreal,t,n)<1e-8) = 1e-8; MCOST_INV.l(jreal,t,n)$(MCOST_INV.l(jreal,t,n)>+inf) = +inf;;
6066  MCOST_INV.fx(jreal,t,n)$(not jmcost_inv(jreal)) = mcost_inv0(jreal,n);
6067   
6068  positive variable MCOST_FUEL(fuel,t,n) 'Average cost of energy sources [T$/TWh]';
6069    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', MCOST_FUEL; if(execerror gt prevexecerrors, MCOST_FUEL.l(fuel,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); MCOST_FUEL.lo(fuel,t,n) = 1e-12; MCOST_FUEL.up(fuel,t,n) = +inf; MCOST_FUEL.l(fuel,t,n)$(MCOST_FUEL.l(fuel,t,n)<1e-12) = 1e-12; MCOST_FUEL.l(fuel,t,n)$(MCOST_FUEL.l(fuel,t,n)>+inf) = +inf;;
6070   
6071  * Investments
6072  positive variable I_EN(jinv,t,n) 'Investments in Energy sectors [T$]';
6073    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_EN; if(execerror gt prevexecerrors, I_EN.l(jinv,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); I_EN.lo(jinv,t,n) = 1e-7; I_EN.up(jinv,t,n) = +inf; I_EN.l(jinv,t,n)$(I_EN.l(jinv,t,n)<1e-7) = 1e-7; I_EN.l(jinv,t,n)$(I_EN.l(jinv,t,n)>+inf) = +inf;;
6074  I_EN.scale(jinv_to_scale,t,n) = 1e-3;
6075   
6076  I_EN.up('elpc_new',t,n)$(year(t) lt 2015)  = I_EN.lo('elpc_new',t,n);
6077  I_EN.up('elpc_late',t,n)$(year(t) ge 2015) = I_EN.lo('elpc_late',t,n);
6078   
6079  positive variable Q_IN(fuel,jfed,t,n) 'Imported/consumed PES [TWh]';
6080    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_IN; if(execerror gt prevexecerrors, Q_IN.l(fuel,jfed,t,n)$(csi(fuel,jfed,t,n)) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); Q_IN.lo(fuel,jfed,t,n)$(csi(fuel,jfed,t,n)) = 1e-12; Q_IN.up(fuel,jfed,t,n)$(csi(fuel,jfed,t,n)) = +inf; Q_IN.l(fuel,jfed,t,n)$((csi(fuel,jfed,t,n)) and (Q_IN.l(fuel,jfed,t,n)<1e-12)) = 1e-12; Q_IN.l(fuel,jfed,t,n)$((csi(fuel,jfed,t,n)) and (Q_IN.l(fuel,jfed,t,n)>+inf)) = +inf;;
6081  Q_IN.l(fuel,jfed,t,n)$(csi(fuel,jfed,t,n) eq 0) = 0;
6082  Q_IN.lo(fuel,jfed,t,n)$(csi(fuel,jfed,t,n) eq 0) = 0;
6083  Q_IN.up(fuel,jfed,t,n)$(csi(fuel,jfed,t,n) eq 0) = 0;
6084   
6085  positive variable Q_FUEL(fuel,t,n) 'Total amount of Energy Sources consumed [TWh]';
6086    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_FUEL; if(execerror gt prevexecerrors, Q_FUEL.l(fuel,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); Q_FUEL.lo(fuel,t,n) = 0; Q_FUEL.up(fuel,t,n) = +inf; Q_FUEL.l(fuel,t,n)$(Q_FUEL.l(fuel,t,n)<0) = 0; Q_FUEL.l(fuel,t,n)$(Q_FUEL.l(fuel,t,n)>+inf) = +inf;;
6087   
6088  positive variable Q_EN(j,t,n) 'Energy supply/generation/demand for different sectors [TWh]';
6089    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EN; if(execerror gt prevexecerrors, Q_EN.l(j,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); Q_EN.lo(j,t,n) = 1e-8; Q_EN.up(j,t,n) = +inf; Q_EN.l(j,t,n)$(Q_EN.l(j,t,n)<1e-8) = 1e-8; Q_EN.l(j,t,n)$(Q_EN.l(j,t,n)>+inf) = +inf;;
6090  Q_EN.l(j,t,n)$(Q_EN.l(j,t,n) eq 0) = 1e-8;
6091  Q_EN.lo('en',t,n) = 2e-4;
6092  Q_EN.lo('el',t,n) = 1e-4;
6093  Q_EN.lo('nel',t,n) = 1e-4;
6094  Q_EN.scale(j_to_scale,t,n) = 1e-3;
6095   
6096  positive variable K_EN(jreal,t,n) 'Capital in energy technologies [TW] ([million vehicles] for light duty vehicles)';
6097   prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_EN; if(execerror gt prevexecerrors, K_EN.l(jreal,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1);
6098  K_EN.lo(jel,t,n) = 1e-8;
6099  K_EN.up(jel,t,n) = 100;
6100  K_EN.fx(jel,tfirst,n) = k_en0(jel,n);
6101  K_EN.scale(jreal_to_scale,t,n) = 1e-3;
6102   
6103  * Fix old capital with depreciation and ensure that levels are not higher than statistics
6104  loop((tnofirst(t),tm1)$pre(tm1,t),
6105      K_EN.fx(jold,t,n) = K_EN.l(jold,tm1,n) * (1-delta_en(jold,t,n))**tlen(tm1);
6106      K_EN.fx(jold,t,n)$(year(t) le 2015 and sum(jcalib$map_calib(jcalib,jold),k_en_valid_old(jcalib,t,n)) gt 0) = min(K_EN.up(jold,t,n), sum(jcalib$map_calib(jcalib,jold), k_en_valid_old(jcalib,t,n)));
6107      Q_EN.up(jold,t,n) = mu(jold,t,n) * K_EN.up(jold,t,n);
6108      Q_EN.fx(jold,t,n)$( Q_EN.up(jold,t,n) - Q_EN.lo(jold,t,n) le 1e-7 ) = Q_EN.up(jold,t,n);
6109  );
6110   
6111  * Fix K_EN in 2010 given existing old
6112  loop((jreal,jcalib)$(map_calib(jcalib,jreal) and (not sameas(jreal,jcalib)) and (not sum(jold$sameas(jold,jreal),1))),
6113      K_EN.fx(jreal,t,n)$(year(t) eq 2010) = max(k_en_valid_tot(jcalib,t,n) - k_en_valid_old(jcalib,t,n), 1e-6);
6114  );
6115   
6116  * Fix manually K_EN in 2015 given existing old
6117  K_EN.fx('elpc_late',t,n)$(year(t) eq 2015) = max(k_en_valid_tot('elpc',t,n) - K_EN.lo('elpc_old',t,n), 1e-6);
6118  K_EN.fx('elgastr_new',t,n)$(year(t) eq 2015) = max(k_en_valid_tot('elgastr',t,n) - K_EN.lo('elgastr_old',t,n), 1e-6);
6119  K_EN.fx('elnuclear_new',t,n)$(year(t) eq 2015) = max(k_en_valid_tot('elnuclear',t,n) - K_EN.lo('elnuclear_old',t,n), 1e-6);
6120  K_EN.fx('eloil_new',t,n)$(year(t) eq 2015) = max(k_en_valid_tot('eloil',t,n) - K_EN.l('eloil_old',t,n), 1e-6);
6121  K_EN.fx('elhydro_new',t,n)$(year(t) eq 2015) = max(k_en_valid_tot('elhydro',t,n) - K_EN.l('elhydro_old',t,n), 1e-6);
6122   
6123  * Fix manually K_EN in 2020 for coal power plant and nuclear
6124  K_EN.lo('elpc_late',t,n)$(year(t) eq 2020) = (smax(tt$(year(tt) eq 2015), K_EN.lo('elpc_late',tt,n) * (1-delta_en('elpc_late',tt,n))**tlen(tt)));
6125  K_EN.lo('elpc_new',t,n)$(year(t) eq 2020) = max(k_en_valid_gcpt('elpc',t,n) - K_EN.lo('elpc_old',t,n) - K_EN.lo('elpc_late',t,n), 1e-6);
6126  K_EN.fx('elnuclear_new',t,n)$(year(t) eq 2020) = max(k_en_valid_tot('elnuclear',t,n) - K_EN.lo('elnuclear_old',t,n), 1e-6);
6127   
6128  * No investment in new oil power plant in noeloil region
6129  loop((t,tp1)$(pre(t,tp1) and (year(t) ge 2015) and (not tfix(tp1))),
6130  I_EN.fx('eloil_new',t,n)$noeloil(n) = I_EN.lo('eloil_new',t,n);
6131  );
6132   
6133  positive variable QEL_OUT(el_out,ices_el,t,n) 'Consumption of electricity outside production function [TWh]';
6134    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', QEL_OUT; if(execerror gt prevexecerrors, QEL_OUT.l(el_out,ices_el,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); QEL_OUT.lo(el_out,ices_el,t,n) = 0; QEL_OUT.up(el_out,ices_el,t,n) = 1e5; QEL_OUT.l(el_out,ices_el,t,n)$(QEL_OUT.l(el_out,ices_el,t,n)<0) = 0; QEL_OUT.l(el_out,ices_el,t,n)$(QEL_OUT.l(el_out,ices_el,t,n)>1e5) = 1e5;;
6135   
6136  positive variable QNEL_OUT(j,nel_out,t,n) 'Consumption of non electric energy outside production function [TWh]';
6137    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', QNEL_OUT; if(execerror gt prevexecerrors, QNEL_OUT.l(j,nel_out,t,n) = 1e-10; execerror = prevexecerrors; last_load_went_wrong=1); QNEL_OUT.lo(j,nel_out,t,n) = 0; QNEL_OUT.up(j,nel_out,t,n) = 1e5; QNEL_OUT.l(j,nel_out,t,n)$(QNEL_OUT.l(j,nel_out,t,n)<0) = 0; QNEL_OUT.l(j,nel_out,t,n)$(QNEL_OUT.l(j,nel_out,t,n)>1e5) = 1e5;;
6138   
6139  * Nodes with a Q to be scaled by 1e3 during optimization
6140  Q.scale('ces_elintren',t,n) = 1e-3;
6141   
6142  * Fuel price
6143  Positive variable FPRICE(fuel,t) 'World fuel prices [T$/TWh]';
6144    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', FPRICE; if(execerror gt prevexecerrors, FPRICE.l(fuel,t) = 0; execerror = prevexecerrors; last_load_went_wrong=1); FPRICE.lo(fuel,t) = 0; FPRICE.up(fuel,t) = +Inf; FPRICE.l(fuel,t)$(FPRICE.l(fuel,t)<0) = 0; FPRICE.l(fuel,t)$(FPRICE.l(fuel,t)>+Inf) = +Inf;;
6145   
6146  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
6149  *-------------------------------------------------------------------------------
6150  * Carbon Emissions
6151  * - Total CO2 emissions and CO2 Fossil fuel and Industry
6152  * - CO2 emission costs
6153  * - GHG permit market
6154  *-------------------------------------------------------------------------------
6155   
6157   
6158  variable Q_EMI(e,t,n) 'Emissions-related quantities [GtCe]';
6159    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EMI; if(execerror gt prevexecerrors, Q_EMI.l(e,t,n) = 1; execerror = prevexecerrors; last_load_went_wrong=1); Q_EMI.lo(e,t,n) = -inf; Q_EMI.up(e,t,n) = +inf; Q_EMI.l(e,t,n)$(Q_EMI.l(e,t,n)<-inf) = -inf; Q_EMI.l(e,t,n)$(Q_EMI.l(e,t,n)>+inf) = +inf;;
6160  Q_EMI.lo('co2',t,n) = -20;
6161  Q_EMI.lo('co2ffi',t,n) = -20;
6162  Q_EMI.up('co2ffi',t,n) = 100;
6163  Q_EMI.lo(c_mkt,t,n) = -15;
6164  Q_EMI.up(c_mkt,t,n) = 15;
6165   
6166  variable COST_EMI(e,t,n) 'Emissions-related costs [T$]';
6167    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', COST_EMI; if(execerror gt prevexecerrors, COST_EMI.l(cce,t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); COST_EMI.lo(cce,t,n) = -inf; COST_EMI.up(cce,t,n) = +inf; COST_EMI.l(cce,t,n)$(COST_EMI.l(cce,t,n)<-inf) = -inf; COST_EMI.l(cce,t,n)$(COST_EMI.l(cce,t,n)>+inf) = +inf;;
6168   
6169  * BAU data
6170  variable BAU_Q_EMI(e,t,n) 'Baseline emission [GtCe]';
6171  execute_load 'data_witch17/results_ssp2_calib', BAU_Q_EMI=Q_EMI;
6172   
6173  * Carbon prices
6174  Positive variable CPRICE(c_mkt,t) 'Carbon price of permits [T$/GtCeq]';
6175    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', CPRICE; if(execerror gt prevexecerrors, CPRICE.l(c_mkt,t) = 0; execerror = prevexecerrors; last_load_went_wrong=1); CPRICE.lo(c_mkt,t) = 0; CPRICE.up(c_mkt,t) = +Inf; CPRICE.l(c_mkt,t)$(CPRICE.l(c_mkt,t)<0) = 0; CPRICE.l(c_mkt,t)$(CPRICE.l(c_mkt,t)>+Inf) = +Inf;;
6176   
6177  * Emission Abatment
6178  variable Q_EMI_ABAT(e,t,n) 'GHG emission abatement [GtCe]';
6179    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EMI_ABAT; if(execerror gt prevexecerrors, Q_EMI_ABAT.l(emac,t,n) = 1e-3; execerror = prevexecerrors; last_load_went_wrong=1); Q_EMI_ABAT.lo(emac,t,n) = 0; Q_EMI_ABAT.up(emac,t,n) = 15; Q_EMI_ABAT.l(emac,t,n)$(Q_EMI_ABAT.l(emac,t,n)<0) = 0; Q_EMI_ABAT.l(emac,t,n)$(Q_EMI_ABAT.l(emac,t,n)>15) = 15;;
6180  Q_EMI_ABAT.fx(emac,t,n)$(year(t) le 2015) = 0;
6181  Q_EMI_ABAT.fx(e,t,n)$(not emac(e)) = 0;
6182   
6183  parameter emi_bio_harv(t) 'Emissions from harvest and collection of biomass';
6184   
6185  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
6188  *-------------------------------------------------------------------------------
6189  * Research & Development
6190  * Options:
6191  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
6192  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
6193  *-------------------------------------------------------------------------------
6194   
6196   
6197  positive variable I_RD(rd,t,n) 'Investments in R&D [T$]';
6198    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_RD; if(execerror gt prevexecerrors, I_RD.l(rd,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); I_RD.lo(rd,t,n) = 1e-10; I_RD.up(rd,t,n) = +inf; I_RD.l(rd,t,n)$(I_RD.l(rd,t,n)<1e-10) = 1e-10; I_RD.l(rd,t,n)$(I_RD.l(rd,t,n)>+inf) = +inf;;
6199  I_RD.scale(rd,t,n) = 1e-3;
6200   
6201  positive variable K_RD(rd,t,n) 'Capital in R&D [T$]';
6202    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_RD; if(execerror gt prevexecerrors, K_RD.l(rd,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); K_RD.lo(rd,t,n) = 1e-7; K_RD.up(rd,t,n) = +inf; K_RD.l(rd,t,n)$(K_RD.l(rd,t,n)<1e-7) = 1e-7; K_RD.l(rd,t,n)$(K_RD.l(rd,t,n)>+inf) = +inf;;
6203  K_RD.l(rd,t,n)$(K_RD.l(rd,t,n) eq 0) = K_RD.lo(rd,t,n);
6204  K_RD.fx(rd,tfirst,n) = max(krd0(rd,n),K_RD.lo(rd,tfirst,n));
6205  K_RD.scale(rd,t,n) = 1e-3;
6206   
6207  positive variable SPILL(rd,t,n) 'Spill ratio * K_RD(leaders)';
6208    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', SPILL; if(execerror gt prevexecerrors, SPILL.l(rd,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); SPILL.lo(rd,t,n) = 1e-8; SPILL.up(rd,t,n) = +inf; SPILL.l(rd,t,n)$(SPILL.l(rd,t,n)<1e-8) = 1e-8; SPILL.l(rd,t,n)$(SPILL.l(rd,t,n)>+inf) = +inf;;
6209   
6210  krd_lead(rd,t) = sum(n$leadrd(rd,n), K_RD.l(rd,t,n));
6211  krd_oth_lead_krd(rd,t,n)$leadrd(rd,n) = krd_lead(rd,t) - K_RD.l(rd,t,n);
6212   
6213  parameter wlspill_k_rd(rd,t,n);
6214  wlspill_k_rd(rd,tfirst,n) = 0;
6215   
6216  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
6219  *-------------------------------------------------------------------------------
6220  * Default Climate Policy Implementation
6221  *
6222  * Options:
6223  *    --policy={bau (default),ctax}
6224  *        Implement a climate policy setting
6225  *  [ --scen= ]
6226  *        Policy variant.
6227  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
6228  *          * XXX for a fixed percentage/yr (e.g. 5) growth
6229  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
6230  *  [ --ctax_year=2020 ]
6231  *        Starting year of the carbon tax
6232  *  [ --ctax_initial=30 ]
6233  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
6234  *
6235  *-------------------------------------------------------------------------------
6237   
6238  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
6240  *-------------------------------------------------------------------------------
6241  * Energy efficiency
6242  *-------------------------------------------------------------------------------
6243   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
6246  *-------------------------------------------------------------------------------
6247  * Hydro Power
6248  *-------------------------------------------------------------------------------
6249   
6251   
6252  I_EN.fx('elhydro_new',t,n)$(year(t) ge 2015) = k_en0('elhydro_old',n) *
6253                               k_en_hydro(n) *
6254                               mcost_inv0('elhydro_new',n) *
6255                               0.12 * (1-(1-delta_en0('elhydro_new',n))**5) /
6256                               (1-(1-0.12)**5) *
6257                               (1-(1-0.12)**(5 * 10)) /
6258                               (1-(1-delta_en0('elhydro_new',n))**(5 * 10))
6259  ;
6260   
6261  * Scaling for the solver
6262  K_EN.scale('elhydro_old',t,n) = 1e-3;
6263  K_EN.scale('elhydro_new',t,n) = 1e-3;
6264   
6265  Q.scale('ces_elhydro',t,n) = 1e-3;
6266   
6267  Q_EN.scale('elhydro',t,n) = 1e-3;
6268  Q_EN.scale('elhydro_new',t,n) = 1e-3;
6269  Q_EN.scale('elhydro_old',t,n) = 1e-3;
6270   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
6273  *-------------------------------------------------------------------------------
6274  * System Integration:
6275  * - Capacity constraint
6276  * - Flexibility constraint
6277  * - Grid Investment
6278  * - Capacity growth constraint
6279  *-------------------------------------------------------------------------------
6280   
6282   
6283  * Flexibility constraint
6284  variable Q_EL_FLEX(t,n) 'Flexible energy generation [TWh]';
6285    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EL_FLEX; if(execerror gt prevexecerrors, Q_EL_FLEX.l(t,n) = sum(jel,Q_EN.l(jel,t,n) * flex_coeff(jel)) + Q_EN.l('el',t,n) * flex_coeff('load'); execerror = prevexecerrors; last_load_went_wrong=1); Q_EL_FLEX.lo(t,n) = 0; Q_EL_FLEX.up(t,n) = Q_EN.up('el',t,n); Q_EL_FLEX.l(t,n)$(Q_EL_FLEX.l(t,n)<0) = 0; Q_EL_FLEX.l(t,n)$(Q_EL_FLEX.l(t,n)>Q_EN.up('el',t,n)) = Q_EN.up('el',t,n);;
6286   
6287  * Grid
6288  variable K_EN_GRID(t,n) 'Capital in electric grid [TW]';
6289    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_EN_GRID; if(execerror gt prevexecerrors, K_EN_GRID.l(t,n) = sum(jel, K_EN.l(jel,t,n)); execerror = prevexecerrors; last_load_went_wrong=1); K_EN_GRID.lo(t,n) = 1e-6; K_EN_GRID.up(t,n) = 1e7; K_EN_GRID.l(t,n)$(K_EN_GRID.l(t,n)<1e-6) = 1e-6; K_EN_GRID.l(t,n)$(K_EN_GRID.l(t,n)>1e7) = 1e7;;
6290   
6291  variable I_EN_GRID(t,n) 'Investment in electric grid [T$]';
6292    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_EN_GRID; if(execerror gt prevexecerrors, I_EN_GRID.l(t,n) = 0.01; execerror = prevexecerrors; last_load_went_wrong=1); I_EN_GRID.lo(t,n) = 1e-7; I_EN_GRID.up(t,n) = 1; I_EN_GRID.l(t,n)$(I_EN_GRID.l(t,n)<1e-7) = 1e-7; I_EN_GRID.l(t,n)$(I_EN_GRID.l(t,n)>1) = 1;;
6293   
6294  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
6297  *-------------------------------------------------------------------------------
6298  * Nuclear power plants
6299  *-------------------------------------------------------------------------------
6300   
6302   
6303  K_EN.scale('elnuclear_new',t,n) = 1e-3;
6304  K_EN.scale('elnuclear_old',t,n) = 1e-3;
6305   
6306  Q_EN.scale('elnuclear',t,n) = 1e-3;
6307  Q_EN.scale('elnuclear_new',t,n) = 1e-3;
6308  Q_EN.scale('elnuclear_old',t,n) = 1e-3;
6309   
6310  I_EN.scale('elnuclear_new',t,n) = 1e-3;
6311   
6312  Q_IN.scale('uranium',jfed,t,n)$csi('uranium',jfed,t,n) = 1e-3;
6313  Q_FUEL.scale('uranium',t,n) = 1/twh2tonU;
6314   
6315  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
6318  *-------------------------------------------------------------------------------
6319  * GHG module
6320  * - CH4 FFI + CH4 waste + CH4 open fires
6321  * - N2O FFI + N2O waste + N2O open fires
6322  *-------------------------------------------------------------------------------
6323   
6325   
6326  Q_EMI.lo(waste,t,n) = 0;
6327  Q_EMI.lo(enrg,t,n) = 0;
6328   
6329  * Historical data emission PRIMAP [GtCe/year]
6330  Q_EMI.fx(waste,t,n)$(year(t) le 2015) = q_emi_valid_ghg(waste,t,n);
6331  Q_EMI.fx(enrg,t,n)$(year(t) le 2015)  = q_emi_valid_ghg(enrg,t,n);
6332  * Historical data emission EDGAR v4.2 [GtCe/year]
6333  Q_EMI.fx(efire,t,n)$(year(t) le 2010) = emi_ghg_hist(efire,t,n);
6334  Q_EMI.fx(efire,t,n)$(year(t) > 2010) = smax(tt$(tperiod(tt) eq 2),emi_ghg_hist(efire,tt,n));
6335   
6336  * Ensure baseline emissions are equal to exogenous assumptions
6337  BAU_Q_EMI.fx(waste,t,n) = ghg_baseline(waste,t,n);
6338   
6339  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
6342  *-------------------------------------------------------------------------------
6343  * F-gases
6344  * - LLF
6345  * - SLF
6346  *-------------------------------------------------------------------------------
6347   
6349   
6350  Q_EMI.fx(fgases,t,n)$(year(t) le 2015) = fgases_baseline(fgases,t,n);
6351  Q_EMI.lo(fgases,t,n)$(year(t) > 2015)  = 0.05 * fgases_baseline(fgases,t,n);
6352   
6353  * Ensure baseline emissions are equal to exogenous assumptions
6354  BAU_Q_EMI.fx(fgases,t,n) = fgases_baseline(fgases,t,n);
6355   
6356  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
6359  *-------------------------------------------------------------------------------
6360  * Landuse [simplified version of the land-use model]
6361  *-------------------------------------------------------------------------------
6362   
6364   
6365  * BIOMASS are fixed for the calibration years
6366  Q_FUEL.fx('wbio',t,n)$(year(t) le 2015) = q_fuel_valid_weo('wbio',t,n);
6367   
6368  * lower bound to avoid infinite mcost
6369  Q_FUEL.lo('wbio',t,n) = 1e-8;
6370   
6371  * Land-use Emissions
6372  Q_EMI.lo('co2lu',t,n) = -20;
6373  Q_EMI.up('co2lu',t,n) = 50;
6374   
6375  COST_EMI.lo('redd',t,n) = 0;
6376   
6377  * Simple land-use model in case of no soft-link with a land-use model
6379  Q_FUEL.up('wbio',t,n) = wbio2_max(n);
6380  Q_EMI.fx('co2lu',t,n) = co2lu_baseline(t,n) * emi_sys('co2lu',t,n);
6381  Q_EMI.fx('n2o_agr',t,n) = n2o_agr_baseline(t,n) * emi_sys('n2o_agr',t,n);
6382  Q_EMI.fx('ch4_agr',t,n) = ch4_agr_baseline(t,n) * emi_sys('ch4_agr',t,n);
6384   
6385  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
6388  *-------------------------------------------------------------------------------
6389  * Bioenergy power plant
6390  *-------------------------------------------------------------------------------
6391   
6393   
6394  * Lower bound for consumption of woody biomass for 'elpb_new', 'elpb_old', 'elbigcc'
6395  Q_IN.lo('wbio',jfed,t,n)$csi('wbio',jfed,t,n) = 1e-8;
6396   
6397  * Fix 'elpb_old' to its maximum production
6398  Q_EN.fx('elpb_old',t,n)$(K_EN.l('elpb_old',t,n) gt 1e-5) = mu('elpb_old',t,n) * K_EN.l('elpb_old',t,n);
6399   
6400  * Fix historical capacity in 2010-2015
6401  K_EN.fx('elpb_new',t,n)$((not tfix(t)) and elpb_capacity(n,t)) = max(elpb_capacity(n,t) - K_EN.l('elpb_old',t,n), 1e-6);
6402   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
6405  *-------------------------------------------------------------------------------
6406  * Traditional Biofuels
6407  * - Requires the precedence of mod_landuse
6408  *-------------------------------------------------------------------------------
6409   
6411   
6412  MCOST_FUEL.fx('trbiofuel',t,n)$(not tfix(t)) = FPRICE.l('trbiofuel',t) + p_mkup('trbiofuel',t,n);
6413   
6414  * Maximum tradional biofuel consumption
6415  * Initial bound
6416  Q_FUEL.up('trbiofuel',t,n) = sum(nn,trbiofuel_max(nn));
6417   
6418  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
6421  *-------------------------------------------------------------------------------
6422  * Advanced biofuel
6423  * - Require the precedence of mod_landuse
6424  *-------------------------------------------------------------------------------
6425   
6427   
6428  Q_FUEL.lo('advbiofuel',t,n)$(not tfix(t)) = q_en0_back;
6429  Q_FUEL.fx('advbiofuel',t,n)$((not tfix(t)) and (year(t) le 2010)) = q_en0_back;
6430   
6431  Q_IN.lo('advbiofuel','nelback',t,n)$(not tfix(t)) = q_en0_back;
6432  Q_IN.fx('advbiofuel','nelback',t,n)$((not tfix(t)) and (year(t) le 2010)) = q_en0_back;
6433   
6434  MCOST_INV.fx('nelback',t,n)$((not tfix(t)) and (year(t) lt rd_time('nelback','start'))) = mcost_inv0('nelback',n);
6435  MCOST_FUEL.fx('advbiofuel',t,n)$((not tfix(t)) and (year(t) lt rd_time('nelback','start'))) = mcost_inv0('nelback',n);
6436  MCOST_FUEL.scale('advbiofuel',t,n) = 1e-3;
6437   
6438  * No investments in backstop RD for the first 2 periods
6439  loop((t,tp1)$pre(t,tp1),
6440  I_RD.fx('nelback',t,n)$((not tfix(tp1)) and (year(t) le 2010)) = 1e-10;
6441  );
6442   
6443  * RnD leader also in China, same regions as for battery!
6444  leadrd('nelback',n)$battery_leadrd(n) = yes;
6445   
6446  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
6449  *-------------------------------------------------------------------------------
6450  * Carbon Capture and Sequestration
6451  *-------------------------------------------------------------------------------
6452   
6454   
6455  positive variable MCOST_EMI(e,t,n) 'Average cost of emission-related entities [T$/GTonC]';
6456    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', MCOST_EMI; if(execerror gt prevexecerrors, MCOST_EMI.l(e,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); MCOST_EMI.lo(e,t,n) = 1e-8; MCOST_EMI.up(e,t,n) = +inf; MCOST_EMI.l(e,t,n)$(MCOST_EMI.l(e,t,n)<1e-8) = 1e-8; MCOST_EMI.l(e,t,n)$(MCOST_EMI.l(e,t,n)>+inf) = +inf;;
6457   
6458  positive variable Q_CCS(sink,ccs_stor,t,n) 'quantity of co2 that is stored for each storage type [GtonC]';
6459    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_CCS; if(execerror gt prevexecerrors, Q_CCS.l(sink, ccs_stor,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); Q_CCS.lo(sink, ccs_stor,t,n) = 1e-8; Q_CCS.up(sink, ccs_stor,t,n) = +inf; Q_CCS.l(sink, ccs_stor,t,n)$(Q_CCS.l(sink, ccs_stor,t,n)<1e-8) = 1e-8; Q_CCS.l(sink, ccs_stor,t,n)$(Q_CCS.l(sink, ccs_stor,t,n)>+inf) = +inf;;
6460   
6461  positive variable CUM_Q_CCS(ccs_stor,t,n) 'cumulative quantity of co2 that is stored for each storage type [GtonC]';
6462    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', CUM_Q_CCS; if(execerror gt prevexecerrors, CUM_Q_CCS.l(ccs_stor,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); CUM_Q_CCS.lo(ccs_stor,t,n) = 1e-8; CUM_Q_CCS.up(ccs_stor,t,n) = +inf; CUM_Q_CCS.l(ccs_stor,t,n)$(CUM_Q_CCS.l(ccs_stor,t,n)<1e-8) = 1e-8; CUM_Q_CCS.l(ccs_stor,t,n)$(CUM_Q_CCS.l(ccs_stor,t,n)>+inf) = +inf;;
6463   
6464  Q_EMI.lo('ccs_plant',t,n) = 0;
6465  COST_EMI.fx('ccs_plant',tfirst,n) = 0;
6466  I_EN.up(jlccs,t,n)$(year(t) le 2010) = I_EN.lo(jlccs,t,n);
6467  Q_CCS.fx(sink,ccs_stor,tfirst,n) = 1e-8;
6468  CUM_Q_CCS.fx(ccs_stor,tfirst,n) =  sum(sink, tlen(tfirst) * Q_CCS.lo(sink,ccs_stor,tfirst,n));
6469  CUM_Q_CCS.up(ccs_stor,tnofirst(t),n) = max(ccs_stor_cap_max(n,'best',ccs_stor) / c2co2,1e-5);
6470   
6471  * Maximum CCS until 2030 1GtCO2
6472  Q_EMI.up('ccs_plant',t,n)$(year(t) le 2025) = 0.5 / c2co2 * sum(ccs_stor,ccs_stor_cap_max(n,'best',ccs_stor)) / sum((ccs_stor,nn),ccs_stor_cap_max(nn,'best',ccs_stor));
6473  Q_EMI.up('ccs_plant',t,n)$(year(t) eq 2030) = 1 / c2co2 * sum(ccs_stor,ccs_stor_cap_max(n,'best',ccs_stor)) / sum((ccs_stor,nn),ccs_stor_cap_max(n,'best',ccs_stor));
6474   
6475  *-------------------------------------------------------------------------------
6477   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
6479  *-------------------------------------------------------------------------------
6480  * Coal for non-electric sectors
6481  * - Coke Plants
6482  * - Industrial and Commercial combined-heat-and-power (CHP)
6483  * - Others
6484  *-------------------------------------------------------------------------------
6485   
6487   
6488  delta_en('nelcoalccs',t,n) = 1;
6489   
6490  nelcoal_share_ccs(tfirst) = 0;
6491  nelcoal_share_ccs(t)$(year(t) ge 2010) = min(1,(year(t) - 2010) / (2100 - 2010));
6492   
6493  Q_EN.lo('nelcoaltr',t,n) = 1e-12;
6494  Q_EN.up('nelcoaltr',t,n) = nelcoal_baseline(t,n);
6495   
6496  Q_EN.lo('nelcoalccs',t,n) = 1e-12;
6497  Q_EN.up('nelcoalccs',t,n) = max(1e-12, nelcoal_baseline(t,n) * nelcoal_share_ccs(t));
6498  K_EN.fx('nelcoalccs',t,n)$(year(t) eq 2005) = 1e-12;
6499   
6500  Q_EN.lo('nelcoalabat',t,n) = 0.0;
6501  Q_EN.up('nelcoalabat',t,n) = nelcoal_baseline(t,n) * nelcoal_max_abat(t,n);
6502   
6503  Q_IN.lo('coal','nelcoalccs',t,n) = 1e-12;
6504  Q_IN.up('coal','nelcoalccs',t,n) = max(1e-12,nelcoal_baseline(t,n) * nelcoal_share_ccs(t) / csi('coal','nelcoalccs',t,n));
6505   
6506  Q_IN.lo('coal','nelcoaltr',t,n) = 1e-12;
6507  Q_IN.up('coal','nelcoaltr',t,n) = nelcoal_baseline(t,n) / csi('coal','nelcoaltr',t,n);
6508   
6509  Q_IN.fx('coal','nelcoal',t,n) = 0.0;
6510  Q_EN.fx('nelcoal',t,n) = nelcoal_baseline(t,n);
6511  K_EN.fx('nelcoal',t,n) = 0;
6512   
6513  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
6516  *-------------------------------------------------------------------------------
6517  * Wind energy module
6518  * - onshore and offshore
6519  *-------------------------------------------------------------------------------
6520   
6522   
6523  variable I_EN_WINDON(wind_dist,wind_class,t,n);
6524    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_EN_WINDON; if(execerror gt prevexecerrors, I_EN_WINDON.l(wind_dist,wind_class,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); I_EN_WINDON.lo(wind_dist,wind_class,t,n) = 1e-12; I_EN_WINDON.up(wind_dist,wind_class,t,n) = 1e8; I_EN_WINDON.l(wind_dist,wind_class,t,n)$(I_EN_WINDON.l(wind_dist,wind_class,t,n)<1e-12) = 1e-12; I_EN_WINDON.l(wind_dist,wind_class,t,n)$(I_EN_WINDON.l(wind_dist,wind_class,t,n)>1e8) = 1e8;;
6525  I_EN_WINDON.up(wind_dist,wind_class,t,n) = max(1e-6,windon_pot(n,wind_dist,wind_class) * (smax(tt$(year(tt) eq 2005), mcost_inv_valid_wind('elwindon',tt,n))));
6526   
6527  variable I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
6528    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_EN_WINDOFF; if(execerror gt prevexecerrors, I_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); I_EN_WINDOFF.lo(wind_dist,wind_depth,wind_class,t,n) = 1e-12; I_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n) = 1e8; I_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)$(I_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)<1e-12) = 1e-12; I_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)$(I_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)>1e8) = 1e8;;
6529  I_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n) = max(1e-6,windoff_pot(n,wind_dist,wind_depth,wind_class) * (smax(tt$(year(tt) eq 2005), mcost_inv_valid_wind('elwindoff',tt,n))) * windoff_costinv(wind_depth));
6530   
6531  variable K_EN_WINDON(wind_dist,wind_class,t,n);
6532    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_EN_WINDON; if(execerror gt prevexecerrors, K_EN_WINDON.l(wind_dist,wind_class,t,n) = 1e-6; execerror = prevexecerrors; last_load_went_wrong=1); K_EN_WINDON.lo(wind_dist,wind_class,t,n) = 1e-6; K_EN_WINDON.up(wind_dist,wind_class,t,n) = 1e6; K_EN_WINDON.l(wind_dist,wind_class,t,n)$(K_EN_WINDON.l(wind_dist,wind_class,t,n)<1e-6) = 1e-6; K_EN_WINDON.l(wind_dist,wind_class,t,n)$(K_EN_WINDON.l(wind_dist,wind_class,t,n)>1e6) = 1e6;;
6533  K_EN_WINDON.fx(wind_dist,wind_class,t,n)$((year(t) le 2015) and (sameas(wind_dist, 'near'))) = max(1e-6, k_en0_windon(wind_class,t,n));
6534  K_EN_WINDON.fx(wind_dist,wind_class,t,n)$((year(t) le 2015) and (not sameas(wind_dist, 'near'))) = 1e-6;
6535  K_EN_WINDON.lo(wind_dist,wind_class,t,n)$(year(t) gt 2015) = (smax(tt$(year(tt) eq 2015), K_EN_WINDON.l(wind_dist,wind_class,tt,n)));
6536  K_EN_WINDON.up(wind_dist,wind_class,t,n)$(year(t) gt 2015) = max(K_EN_WINDON.lo(wind_dist,wind_class,t,n),windon_pot(n,wind_dist,wind_class));
6537   
6538  variable K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
6539    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_EN_WINDOFF; if(execerror gt prevexecerrors, K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n) = 1e-6; execerror = prevexecerrors; last_load_went_wrong=1); K_EN_WINDOFF.lo(wind_dist,wind_depth,wind_class,t,n) = 1e-6; K_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n) = 1e6; K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)$(K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)<1e-6) = 1e-6; K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)$(K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)>1e6) = 1e6;;
6540  K_EN_WINDOFF.fx(wind_dist,wind_depth,wind_class,t,n)$((year(t) le 2015) and (sameas(wind_dist, 'near')) and (sameas(wind_depth, 'shallow'))) = max(1e-6,k_en0_windoff(wind_class,t,n));
6541  K_EN_WINDOFF.fx(wind_dist,wind_depth,wind_class,t,n)$((year(t) le 2015) and (not ((sameas(wind_dist, 'near')) and (sameas(wind_depth, 'shallow'))))) = 1e-6;
6542  K_EN_WINDOFF.lo(wind_dist,wind_depth,wind_class,t,n)$(year(t) gt 2015) = (smax(tt$(year(tt) eq 2015), K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,tt,n)));
6543  K_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n)$(year(t) gt 2015) = max(K_EN_WINDOFF.lo(wind_dist,wind_depth,wind_class,t,n), windoff_pot(n,wind_dist,wind_depth,wind_class));
6544   
6545  K_EN.lo(jel_wind,t,n)$((K_EN.lo(jel_wind,t,n) lt K_EN.up(jel_wind,t,n)) and (year(t) ge 2020)) = (smax(tt$(year(tt) eq 2020), k_en_valid_tot(jel_wind,t,n)));
6546  K_EN.up(jel_wind,t,n)$((K_EN.lo(jel_wind,t,n) lt K_EN.up(jel_wind,t,n)) and (year(t) eq 2020) and sameas(jel_wind,'elwindon')) = (smax(tt$(year(tt) eq 2020), k_en_valid_tot(jel_wind,t,n))) * 1.1;
6547   
6548  variable Q_EN_WINDON(wind_dist,wind_class,t,n);
6549    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EN_WINDON; if(execerror gt prevexecerrors, Q_EN_WINDON.l(wind_dist,wind_class,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); Q_EN_WINDON.lo(wind_dist,wind_class,t,n) = 1e-8; Q_EN_WINDON.up(wind_dist,wind_class,t,n) = 1e8; Q_EN_WINDON.l(wind_dist,wind_class,t,n)$(Q_EN_WINDON.l(wind_dist,wind_class,t,n)<1e-8) = 1e-8; Q_EN_WINDON.l(wind_dist,wind_class,t,n)$(Q_EN_WINDON.l(wind_dist,wind_class,t,n)>1e8) = 1e8;;
6550  Q_EN_WINDON.up(wind_dist,wind_class,t,n) = max(1e-8,windon_pot(n,wind_dist,wind_class) * wind_mu(wind_class));
6551   
6552  variable Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
6553    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EN_WINDOFF; if(execerror gt prevexecerrors, Q_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); Q_EN_WINDOFF.lo(wind_dist,wind_depth,wind_class,t,n) = 1e-8; Q_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n) = 1e8; Q_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)$(Q_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)<1e-8) = 1e-8; Q_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)$(Q_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)>1e8) = 1e8;;
6554  Q_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n) = max(1e-8,windoff_pot(n,wind_dist,wind_depth,wind_class) * wind_mu(wind_class));
6555   
6556  positive variable MCOST_INV_WINDOFF(wind_depth,t,n);
6557   prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', MCOST_INV_WINDOFF; if(execerror gt prevexecerrors, MCOST_INV_WINDOFF.l(wind_depth,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1);
6558   
6559  * Link core variables upper bounds to module specific upper bounds
6560  Q_EN.up('elwindon',t,n) = sum((wind_dist,wind_class),(Q_EN_WINDON.up(wind_dist,wind_class,t,n)));
6561  Q_EN.up('elwindoff',t,n) = sum((wind_dist,wind_depth,wind_class),(Q_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n)));
6562  K_EN.up('elwindon',t,n) = min(K_EN.up('elwindon',t,n),sum((wind_dist,wind_class),K_EN_WINDON.up(wind_dist,wind_class,t,n)));
6563  K_EN.up('elwindoff',t,n) = min(K_EN.up('elwindoff',t,n),sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n)));
6564  I_EN.up('elwindon',t,n) = sum((wind_dist,wind_class),I_EN_WINDON.up(wind_dist,wind_class,t,n));
6565  I_EN.up('elwindoff',t,n) = sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n));
6566   
6567  *-------------------------------------------------------------------------------
6569   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
6571  *-------------------------------------------------------------------------------
6572  * Solar Powerplants (PV and CSP) to the electrical system
6573  *-------------------------------------------------------------------------------
6574   
6575  *-------------------------------------------------------------------------------
6577   
6578  variable I_EN_PV(solar_dist,solar_class,t,n);
6579    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_EN_PV; if(execerror gt prevexecerrors, I_EN_PV.l(solar_dist,solar_class,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); I_EN_PV.lo(solar_dist,solar_class,t,n) = 1e-8; I_EN_PV.up(solar_dist,solar_class,t,n) = 1e8; I_EN_PV.l(solar_dist,solar_class,t,n)$(I_EN_PV.l(solar_dist,solar_class,t,n)<1e-8) = 1e-8; I_EN_PV.l(solar_dist,solar_class,t,n)$(I_EN_PV.l(solar_dist,solar_class,t,n)>1e8) = 1e8;;
6580  I_EN_PV.lo(solar_dist,solar_class,t,n) = 1e-8;
6581  I_EN_PV.up(solar_dist,solar_class,t,n) = max(1e-8,pv_pot(n,solar_dist,solar_class) * mcost_inv0('elpv',n));
6582  I_EN_PV.l(solar_dist,solar_class,t,n) = 1e-8;
6583   
6584  variable I_EN_CSP(solar_dist,solar_class,t,n);
6585    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_EN_CSP; if(execerror gt prevexecerrors, I_EN_CSP.l(solar_dist,solar_class,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); I_EN_CSP.lo(solar_dist,solar_class,t,n) = 1e-8; I_EN_CSP.up(solar_dist,solar_class,t,n) = 1e8; I_EN_CSP.l(solar_dist,solar_class,t,n)$(I_EN_CSP.l(solar_dist,solar_class,t,n)<1e-8) = 1e-8; I_EN_CSP.l(solar_dist,solar_class,t,n)$(I_EN_CSP.l(solar_dist,solar_class,t,n)>1e8) = 1e8;;
6586  I_EN_CSP.lo(solar_dist,solar_class,t,n) = 1e-8;
6587  I_EN_CSP.up(solar_dist,solar_class,t,n) = max(1e-8,csp_pot(n,solar_dist,solar_class) * mcost_inv0('elcsp',n));
6588   
6589  variable K_EN_PV(solar_dist,solar_class,t,n);
6590    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_EN_PV; if(execerror gt prevexecerrors, K_EN_PV.l(solar_dist,solar_class,t,n) = 1e-6; execerror = prevexecerrors; last_load_went_wrong=1); K_EN_PV.lo(solar_dist,solar_class,t,n) = 1e-6; K_EN_PV.up(solar_dist,solar_class,t,n) = 1e6; K_EN_PV.l(solar_dist,solar_class,t,n)$(K_EN_PV.l(solar_dist,solar_class,t,n)<1e-6) = 1e-6; K_EN_PV.l(solar_dist,solar_class,t,n)$(K_EN_PV.l(solar_dist,solar_class,t,n)>1e6) = 1e6;;
6591  K_EN_PV.fx('near',solar_class,t,n)$(year(t) le 2015) = max(1e-6,k_en0_pv(solar_class,t,n));
6592  K_EN_PV.fx('far',solar_class,t,n)$(year(t) le 2015) = 1e-6;
6593  K_EN_PV.lo(solar_dist,solar_class,t,n)$(year(t) gt 2015) = (smax(tt$(year(tt) eq 2015), K_EN_PV.l(solar_dist,solar_class,tt,n)));
6594  K_EN_PV.up(solar_dist,solar_class,t,n)$(year(t) gt 2015) = max(K_EN_PV.lo(solar_dist,solar_class,t,n),pv_pot(n,solar_dist,solar_class));
6595   
6596  variable K_EN_CSP(solar_dist,solar_class,t,n);
6597    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_EN_CSP; if(execerror gt prevexecerrors, K_EN_CSP.l(solar_dist,solar_class,t,n) = 1e-6; execerror = prevexecerrors; last_load_went_wrong=1); K_EN_CSP.lo(solar_dist,solar_class,t,n) = 1e-6; K_EN_CSP.up(solar_dist,solar_class,t,n) = 1e6; K_EN_CSP.l(solar_dist,solar_class,t,n)$(K_EN_CSP.l(solar_dist,solar_class,t,n)<1e-6) = 1e-6; K_EN_CSP.l(solar_dist,solar_class,t,n)$(K_EN_CSP.l(solar_dist,solar_class,t,n)>1e6) = 1e6;;
6598  K_EN_CSP.fx('near',solar_class,t,n)$(year(t) le 2015) = max(1e-6,k_en0_csp(solar_class,t,n));
6599  K_EN_CSP.fx('far',solar_class,t,n)$(year(t) le 2015) = 1e-6;
6600  K_EN_CSP.lo(solar_dist,solar_class,t,n)$(year(t) gt 2015) = (smax(tt$(year(tt) eq 2015), K_EN_CSP.l(solar_dist,solar_class,tt,n)));
6601  K_EN_CSP.up(solar_dist,solar_class,t,n)$(year(t) gt 2015) = max(K_EN_CSP.lo(solar_dist,solar_class,t,n),csp_pot(n,solar_dist,solar_class));
6602   
6603  K_EN.fx('elpv',tfirst(t),n) = sum((solar_dist,solar_class),K_EN_PV.l(solar_dist,solar_class,t,n));
6604  K_EN.fx('elcsp',tfirst(t),n) = sum((solar_dist,solar_class),K_EN_CSP.l(solar_dist,solar_class,t,n));
6605   
6606  K_EN.lo(jel_solar,t,n)$((K_EN.lo(jel_solar,t,n) lt K_EN.up(jel_solar,t,n)) and (year(t) ge 2020)) = (smax(tt$(year(tt) eq 2020), k_en_valid_tot(jel_solar,t,n)));
6607   
6608  variable Q_EN_PV(solar_dist,solar_class,t,n);
6609    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EN_PV; if(execerror gt prevexecerrors, Q_EN_PV.l(solar_dist,solar_class,t,n) = 1; execerror = prevexecerrors; last_load_went_wrong=1); Q_EN_PV.lo(solar_dist,solar_class,t,n) = 1e-8; Q_EN_PV.up(solar_dist,solar_class,t,n) = 1e8; Q_EN_PV.l(solar_dist,solar_class,t,n)$(Q_EN_PV.l(solar_dist,solar_class,t,n)<1e-8) = 1e-8; Q_EN_PV.l(solar_dist,solar_class,t,n)$(Q_EN_PV.l(solar_dist,solar_class,t,n)>1e8) = 1e8;;
6610  Q_EN_PV.up(solar_dist,solar_class,t,n) = max(1e-8,pv_pot(n,solar_dist,solar_class)*solar_mu(solar_class,'elpv'));
6611   
6612  variable Q_EN_CSP(solar_dist,solar_class,t,n);
6613    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EN_CSP; if(execerror gt prevexecerrors, Q_EN_CSP.l(solar_dist,solar_class,t,n) = 1; execerror = prevexecerrors; last_load_went_wrong=1); Q_EN_CSP.lo(solar_dist,solar_class,t,n) = 1e-8; Q_EN_CSP.up(solar_dist,solar_class,t,n) = 1e8; Q_EN_CSP.l(solar_dist,solar_class,t,n)$(Q_EN_CSP.l(solar_dist,solar_class,t,n)<1e-8) = 1e-8; Q_EN_CSP.l(solar_dist,solar_class,t,n)$(Q_EN_CSP.l(solar_dist,solar_class,t,n)>1e8) = 1e8;;
6614  Q_EN_CSP.up(solar_dist,solar_class,t,n) = max(1e-8,csp_pot(n,solar_dist,solar_class)* solar_mu(solar_class,'elcsp'));
6615   
6616  * Link core variables upper bounds to module specific upper bounds
6617  Q_EN.up('elpv',t,n) = sum((solar_dist,solar_class),(Q_EN_PV.up(solar_dist,solar_class,t,n)));
6618  Q_EN.up('elcsp',t,n) = sum((solar_dist,solar_class),(Q_EN_CSP.up(solar_dist,solar_class,t,n)));
6619  K_EN.up('elpv',t,n) = sum((solar_dist,solar_class),K_EN_PV.up(solar_dist,solar_class,t,n));
6620  K_EN.up('elcsp',t,n) = sum((solar_dist,solar_class),K_EN_CSP.up(solar_dist,solar_class,t,n));
6621  I_EN.up('elpv',t,n) = sum((solar_dist,solar_class),I_EN_PV.up(solar_dist,solar_class,t,n));
6622  I_EN.up('elcsp',t,n) = sum((solar_dist,solar_class),I_EN_CSP.up(solar_dist,solar_class,t,n));
6623   
6624  *-------------------------------------------------------------------------------
6626   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
6628  *-------------------------------------------------------------------------------
6629  * Technology development scenarios
6630  *-------------------------------------------------------------------------------
6631   
6633   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
6635  *-------------------------------------------------------------------------------
6636  * Oil Extraction
6637  * Options:
6638  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
6639  *-------------------------------------------------------------------------------
6640   
6642   
6643  variable Q_EMI_OUT(f,t,n) 'Emissions from PES extraction [GTonC]';
6644    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EMI_OUT; if(execerror gt prevexecerrors, Q_EMI_OUT.l(f,t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); Q_EMI_OUT.lo(f,t,n) = -inf; Q_EMI_OUT.up(f,t,n) = +inf; Q_EMI_OUT.l(f,t,n)$(Q_EMI_OUT.l(f,t,n)<-inf) = -inf; Q_EMI_OUT.l(f,t,n)$(Q_EMI_OUT.l(f,t,n)>+inf) = +inf;;
6645   
6646  positive variable OILCAP(t,n,oilg)  'Extraction capacity for each grade [TWh]';
6647    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', OILCAP; if(execerror gt prevexecerrors, OILCAP.l(t,n,oilg) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); OILCAP.lo(t,n,oilg) = 1e-6; OILCAP.up(t,n,oilg) = +inf; OILCAP.l(t,n,oilg)$(OILCAP.l(t,n,oilg)<1e-6) = 1e-6; OILCAP.l(t,n,oilg)$(OILCAP.l(t,n,oilg)>+inf) = +inf;;
6648  OILCAP.fx(t,n,oilg)$(year(t) eq 2005) = (sum(oilgg$map_oilgrade(oilg,oilgg), oil_capacity(oilgg,n)));
6649  OILCAP.fx(t,n,oilg)$(not valid_oilg(oilg)) = 0;
6650   
6651  positive variable OILPROD(t,n,oilg) 'Oil extraction for each grade [TWh]';
6652    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', OILPROD; if(execerror gt prevexecerrors, OILPROD.l(t,n,oilg) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); OILPROD.lo(t,n,oilg) = 1e-7; OILPROD.up(t,n,oilg) = +inf; OILPROD.l(t,n,oilg)$(OILPROD.l(t,n,oilg)<1e-7) = 1e-7; OILPROD.l(t,n,oilg)$(OILPROD.l(t,n,oilg)>+inf) = +inf;;
6653  OILPROD.fx(t,n,oilg)$(not valid_oilg(oilg))=0;
6654   
6655  positive variable I_OIL(t,n,oilg) 'Investment for oil sector capital for each grade [T$]';
6656    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_OIL; if(execerror gt prevexecerrors, I_OIL.l(t,n,oilg) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); I_OIL.lo(t,n,oilg) = 1e-6; I_OIL.up(t,n,oilg) = +inf; I_OIL.l(t,n,oilg)$(I_OIL.l(t,n,oilg)<1e-6) = 1e-6; I_OIL.l(t,n,oilg)$(I_OIL.l(t,n,oilg)>+inf) = +inf;;
6657  I_OIL.fx(t,n,oilg)$(not valid_oilg(oilg))=0;
6658   
6659  positive variable COST_OIL(t,n,oilg) 'Cost of additional oil extraction capacity for each grade [T$/TWh]';
6660    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', COST_OIL; if(execerror gt prevexecerrors, COST_OIL.l(t,n,oilg) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); COST_OIL.lo(t,n,oilg) = 1e-6; COST_OIL.up(t,n,oilg) = 1e-2; COST_OIL.l(t,n,oilg)$(COST_OIL.l(t,n,oilg)<1e-6) = 1e-6; COST_OIL.l(t,n,oilg)$(COST_OIL.l(t,n,oilg)>1e-2) = 1e-2;;
6661  COST_OIL.fx(t,n,oilg)$(not valid_oilg(oilg))=0;
6662   
6663  positive variable CUM_OIL(t,n,oilg) 'Total production of oil for each grade [TWh]';
6664    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', CUM_OIL; if(execerror gt prevexecerrors, CUM_OIL.l(t,n,oilg) = 1e-2; execerror = prevexecerrors; last_load_went_wrong=1); CUM_OIL.lo(t,n,oilg) = 1e-3; CUM_OIL.up(t,n,oilg) = +inf; CUM_OIL.l(t,n,oilg)$(CUM_OIL.l(t,n,oilg)<1e-3) = 1e-3; CUM_OIL.l(t,n,oilg)$(CUM_OIL.l(t,n,oilg)>+inf) = +inf;;
6665  CUM_OIL.up(t,n,oilg)$(year(t) gt 2005) = (sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)));
6666  CUM_OIL.fx(t,n,oilg)$(year(t) eq 2005) = 1e-3;
6667  CUM_OIL.fx(t,n,oilg)$(not valid_oilg(oilg)) = 0;
6668   
6669  positive variable ADDOILCAP(t,n,oilg) 'Additional oil capacity for each grade [TWh]';
6670    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', ADDOILCAP; if(execerror gt prevexecerrors, ADDOILCAP.l(t,n,oilg) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); ADDOILCAP.lo(t,n,oilg) = 1e-6; ADDOILCAP.up(t,n,oilg) = +inf; ADDOILCAP.l(t,n,oilg)$(ADDOILCAP.l(t,n,oilg)<1e-6) = 1e-6; ADDOILCAP.l(t,n,oilg)$(ADDOILCAP.l(t,n,oilg)>+inf) = +inf;;
6671  ADDOILCAP.fx(t,n,oilg)$(not valid_oilg(oilg))=0;
6672   
6673  positive variable I_OUT(f,t,n) 'Investments in extraction sector [T$]';
6674   prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_OUT; if(execerror gt prevexecerrors, I_OUT.l(f,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1);
6675  I_OUT.lo(f,t,n)$extract(f) = 1e-12;
6676  I_OUT.up(f,t,n)$extract(f) = +inf;
6677   
6678  positive variable Q_OUT(f,t,n) 'Extracted primary energy supplies [TWh]';
6679    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_OUT; if(execerror gt prevexecerrors, Q_OUT.l(f,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); Q_OUT.lo(f,t,n) = 0; Q_OUT.up(f,t,n) = +inf; Q_OUT.l(f,t,n)$(Q_OUT.l(f,t,n)<0) = 0; Q_OUT.l(f,t,n)$(Q_OUT.l(f,t,n)>+inf) = +inf;;
6680   
6681  * Base year 2005
6682  OILPROD.fx(t,n,oilg)$(year(t) eq 2005) = (sum(oilgg$map_oilgrade(oilg,oilgg), oil_capacity(oilg,n)));
6683   
6684  * Manual calibration until 2015
6685  Q_OUT.fx('oil',t,n)$(year(t) ge 2010 and year(t) le 2015) = q_out_valid_weo('oil',t,n);
6686   
6687  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
6690  *-------------------------------------------------------------------------------
6691  * Uranium Resources
6692  *-------------------------------------------------------------------------------
6693   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
6696  *-------------------------------------------------------------------------------
6697  * Gas Resources
6698  *-------------------------------------------------------------------------------
6699   
6701   
6702  * No emissions associated with extraction
6703  Q_EMI_OUT.fx('gas',t,n) = 0;
6704   
6705  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
6708  *-------------------------------------------------------------------------------
6709  * Coal Resources
6710  *-------------------------------------------------------------------------------
6711   
6713   
6714  * No emissions associated with extraction
6715  Q_EMI_OUT.fx('coal',t,n) = 0;
6716   
6717  *-------------------------------------------------------------------------------
6719   
6720   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
6722  *-------------------------------------------------------------------------------
6723  * Climate
6724  *
6725  * Represents the climate
6726  * - based on the DICE model equations
6727  * - Radiative forcing for non CO2 ghgs
6728  * - parameters calibrated to reproduce MAGICC6.4 default response
6729  *
6730  *  Options:
6731  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
6732  * - $setglobal cooperate_on_climate {'YES','NO'}
6733  * - 'YES'(default): Countries within a coalition act in cooperation
6734  *   'NO': Countries within a coalition act individually
6735  *
6736  *-------------------------------------------------------------------------------
6737   
6739   
6740  positive variable TEMP(m,t,n) 'Temperature [deg C above preindustrial levels]';
6741    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', TEMP; if(execerror gt prevexecerrors, TEMP.l(m,t,n) = 1; execerror = prevexecerrors; last_load_went_wrong=1); TEMP.lo(m,t,n) = 0; TEMP.up(m,t,n) = +inf; TEMP.l(m,t,n)$(TEMP.l(m,t,n)<0) = 0; TEMP.l(m,t,n)$(TEMP.l(m,t,n)>+inf) = +inf;;
6742  TEMP.fx(m,tfirst,n) = temp0(m);
6743   
6744  variable TRF(t,n) 'Total radiative forcing [W/m2]';
6745    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', TRF; if(execerror gt prevexecerrors, TRF.l(t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); TRF.lo(t,n) = -inf; TRF.up(t,n) = +inf; TRF.l(t,n)$(TRF.l(t,n)<-inf) = -inf; TRF.l(t,n)$(TRF.l(t,n)>+inf) = +inf;;
6746   
6747  variable RF(e,t,n) 'Radiative forcing [W/m2]';
6748    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', RF; if(execerror gt prevexecerrors, RF.l(e,t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); RF.lo(e,t,n) = -inf; RF.up(e,t,n) = +inf; RF.l(e,t,n)$(RF.l(e,t,n)<-inf) = -inf; RF.l(e,t,n)$(RF.l(e,t,n)>+inf) = +inf;;
6749   
6750  variable W_EMI(e,t,n) 'World emissions during 5-year period [GTon/yr]';
6751    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', W_EMI; if(execerror gt prevexecerrors, W_EMI.l(e,t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); W_EMI.lo(e,t,n) = -inf; W_EMI.up(e,t,n) = +inf; W_EMI.l(e,t,n)$(W_EMI.l(e,t,n)<-inf) = -inf; W_EMI.l(e,t,n)$(W_EMI.l(e,t,n)>+inf) = +inf;;
6752  W_EMI.lo('co2',t,n) = -20;
6753   
6754  positive variable WCUM_EMI(e,m,t,n) 'Global stock of GHG [GTon]';
6755    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', WCUM_EMI; if(execerror gt prevexecerrors, WCUM_EMI.l(e,m,t,n) = wcum_emi0(e,m); execerror = prevexecerrors; last_load_went_wrong=1); WCUM_EMI.lo(e,m,t,n) = 0; WCUM_EMI.up(e,m,t,n) = +inf; WCUM_EMI.l(e,m,t,n)$(WCUM_EMI.l(e,m,t,n)<0) = 0; WCUM_EMI.l(e,m,t,n)$(WCUM_EMI.l(e,m,t,n)>+inf) = +inf;;
6756  WCUM_EMI.fx(ghg(e),m,tfirst,n)$wcum_emi0(e,m) = wcum_emi0(e,m);
6757   
6758  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
6761  *-------------------------------------------------------------------------------
6762  * Long-run Damages from Climate Change
6763  * - Economic impacts
6764  * - Adaptation
6765  *-------------------------------------------------------------------------------
6766   
6768   
6769  variable OMEGA(t,n) 'economic impact from climate change [% of GDP]';
6770    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', OMEGA; if(execerror gt prevexecerrors, OMEGA.l(t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); OMEGA.lo(t,n) = -inf; OMEGA.up(t,n) = +inf; OMEGA.l(t,n)$(OMEGA.l(t,n)<-inf) = -inf; OMEGA.l(t,n)$(OMEGA.l(t,n)>+inf) = +inf;;
6771   
6772  K.fx('prada',tfirst,n) = 1e-5;
6773  K.fx('rada',tfirst,n)  = 1e-5;
6774  K.fx('scap',tfirst,n)  = 1e-5;
6775   
6776  * OMEGA fixed in first period
6777  OMEGA.fx(t,n)$tfirst(t) = 1
6780  ;
6781  *-------------------------------------------------------------------------------
6783   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
6785  *-------------------------------------------------------------------------------
6786  * Light-duty Vehicles for Personal Transport
6787  *-------------------------------------------------------------------------------
6788   
6790   
6791  variable ELMOTOR_COST(t) '$/kw' ;
6792  ELMOTOR_COST.fx(t) $(year(t) le 2010) = 243 ;
6793  ELMOTOR_COST.fx(t) $(year(t) ge 2010 and year(t) le 2030) = 40 ;
6794  ELMOTOR_COST.fx(t) $(year(t) ge 2030 and year(t) le 2050) = 31 ;
6795  ELMOTOR_COST.fx(t) $(year(t) ge 2050) = 23 ;
6796   
6797  * 1) Vehicles
6798   
6799  *** newcode
6800  *Global zero-emission vehicle mandates and internal combustion engine bans
6801   
6802  **Policy:
6803  *100% ZEV sales after 2035 (ZEV=Zero Emission Vehicles = Electric + Hybrid).Sales=limito gli investimenti I
6804  *I_EN.fx('trad_cars',t,'europe')$(year(t) ge 2035) = 1e-9;
6805   
6806  *K_EN.l('trad_cars',t,'europe')$(year(t) eq 2040) = 0.95*K_EN.l('trad_cars',t,'europe')$(year(t) eq 2035);
6807  *EU è già a posto così
6808   
6809  *ICE ban (ban on internal combustion engine cars, aka traditional cars). Ban=limito la quantità K
6810  *K_EN.fx('trad_cars',t,'denmark')$(year(t) gt 2030) = 1e-9;
6811  *K_EN.fx('trad_cars',t,'chile')$(year(t) gt 2035) = 1e-9;
6812  *K_EN.fx('trad_cars',t,'argentina')$(year(t) gt 2040) = 1e-9;
6813   
6814  *100% electrified sales (only electric vehicles, no hybrid). Sales=limito gli investimenti I
6815  *I_EN.fx(jveh_inv,t,'iceland')$((year(t) gt 2040) and (not sameas (jveh_inv,'edv'))) = 1e-9;
6816   
6817  *100% electrified stock. Stock=limito la quantità K
6818  *K_EN.fx(jveh_inv,t,'sri_lanka')$((year(t) gt 2030) and (not sameas (jveh_inv,'edv'))) = 1e-9;
6819   
6820  *** newcode
6821  I_EN.up('trad_cars',t,'europe')$(year(t) ge 2035) = 0.1;
6822  ****
6823   
6824   
6825   
6826  K_EN.lo(jveh,t,n) = 1e-6;
6827  K_EN.up(jveh,t,n) = ldv_total(t,n);
6828  K_EN.fx(jveh,t,n)$((year(t) le 2015) and (not sameas (jveh,'trad_cars'))) = k_veh_2005_2015(jveh,t,n);
6829  K_EN.lo(jveh,t,n)$((year(t) gt 2015) and (not sameas (jveh,'trad_cars'))) = k_veh_2005_2015(jveh,'3',n);
6830  I_EN.lo(jveh_inv,t,n)$((year(t) le 2015) and (not sameas (jveh_inv,'trad_cars'))) = 1e-9;
6831   
6832  MCOST_INV.fx(jveh_invfix,t,n) = inv_cost_veh(jveh_invfix)/(reg_discount_veh(n)*1e6);
6833  MCOST_INV.lo(jveh,t,n)$(not sameas(jveh,'trad_cars')) = 1e-5;
6834  MCOST_INV.up(jveh,t,n)$(not sameas(jveh,'trad_cars')) = (inv_cost_veh('trad_cars') +
6835                                                           5 * size_battery(jveh,n) * battery_cost_new(tfirst,n) +
6836                                                           disutility_costs_ldv(jveh,t,n)) * 1e-6;
6837   
6838  Q_IN.fx('trbiofuel','trad_cars',t,n)$(year(t) le 2010) = biofuel_2005_2010(t,n);
6839  Q_IN.lo('trbiofuel','trad_cars',t,n)$(year(t) gt 2010) = biofuel_2013(n);
6840   
6841  * Disable neltrbiofuel when transport is activated
6842  Q_IN.fx('trbiofuel','neltrbiofuel',t,n) = 1e-12;
6843   
6844  * 2) Batteries, R&D
6845   
6846  K_RD.fx('battery',t,n)$(tfirst(t) and (not tfix(t))) = krd0('battery',n);
6847  K_RD.lo('battery',t,n)$((not tfix(t)) and (year(t) ge 2010)) = krd0('battery',n)*(krd_lo_coeff('a')*exp(krd_lo_coeff('b')*exp(krd_lo_coeff('c')*((year(t)-2000)/5))));
6848  K_EN.fx('battery',t,n) = 0;
6849  Q_EN.fx('battery',t,n) = 0;
6850   
6851  MCOST_INV.up('battery',t,n)$(not tfix(t)) = battery_cost_new(tfirst,n);
6852  MCOST_INV.fx('battery',t,n)$((not tfix(t)) and (year(t) lt rd_time('battery','start'))) = battery_cost_new(t,n);
6853  MCOST_INV.fx('hybrid',t,n)$((not tfix(t)) and (year(t) lt rd_time('battery','start'))) = (glider_manufacture_cost+(size_battery('hybrid',n)*battery_cost_new(t,n)*bat_multip('hybrid',n)
6854   + ELMOTOR_COST.l(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6);
6855  MCOST_INV.fx('plg_hybrid',t,n)$((not tfix(t)) and (year(t) lt rd_time('battery','start'))) = (glider_manufacture_cost + (size_battery('plg_hybrid',n)*battery_cost_new(t,n)*bat_multip('plg_hybrid',n)
6856   + ELMOTOR_COST.l(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost ))/1e6;
6857  MCOST_INV.fx('edv',t,n)$((not tfix(t)) and (year(t) lt rd_time('battery','start'))) = (glider_manufacture_cost + size_battery('edv',n)*battery_cost_new(t,n)
6858   + ELMOTOR_COST.l(t)*size_elmotor('edv') + charger_cost+ charging_station)/1e6;
6859   
6860  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
6863  *-------------------------------------------------------------------------------
6864  * Road Freight Transport
6865  *-------------------------------------------------------------------------------
6867   
6868  K_EN.lo(jfrt,t,n) = 1e-5;
6869  K_EN.up(jfrt,t,n) = stfr_total(t,n);
6870  K_EN.fx('trad_stfr',tfirst,n) = stfr_total(tfirst,n);
6871  K_EN.fx(jfrt,t,n)$((not sameas (jfrt,'trad_stfr')) and (year(t) le 2010)) = 1e-4;
6872   
6873  * Disable neltrbiofuel when transport is activated
6874  Q_IN.fx('trbiofuel','neltrbiofuel',t,n) = 1e-12;
6875   
6876  MCOST_INV.fx(jfrt_invfix,t,n) = inv_cost_frt(jfrt_invfix)/(reg_discount_veh(n)*1e6);
6877  MCOST_INV.lo(jfrt,t,n)$(not sameas (jfrt,'trad_stfr')) = 1e-5;
6878  MCOST_INV.up(jfrt,t,n)$(not sameas (jfrt,'trad_stfr')) = (inv_cost_frt('trad_stfr')+5*size_battery_freight(jfrt,n)*battery_cost(tfirst)+disutility_costs_stfr(jfrt,t,n))/1e6;
6879  MCOST_INV.l(jfrt,t,n)$(not sameas (jfrt,'trad_stfr')) = (inv_cost_frt('trad_stfr')+size_battery_freight(jfrt,n)*battery_cost(tfirst))/1e6;
6880   
6881  MCOST_INV.fx('hbd_stfr',t,n)$(year(t) lt rd_time('battery','start')) = (inv_cost_frt('trad_stfr')+(size_battery_freight('hbd_stfr',n)*battery_cost(t)*1.7)+disutility_costs_stfr('hbd_stfr',t,n))/(reg_discount_veh(n)*1e6);
6882  MCOST_INV.fx('plg_hbd_stfr',t,n)$(year(t) lt rd_time('battery','start')) = (inv_cost_frt('trad_stfr')+(size_battery_freight('plg_hbd_stfr',n)*battery_cost(t)*1.7)+disutility_costs_stfr('plg_hbd_stfr',t,n))/1e6;
6883  MCOST_INV.fx('edv_stfr',t,n)$(year(t) lt rd_time('battery','start')) = (inv_cost_frt('trad_stfr')*0.8+size_battery_freight('edv_stfr',n)*battery_cost(t)*1.7+disutility_costs_stfr('edv_stfr',t,n))/1e6;
6884   
6885  *-------------------------------------------------------------------------------
6887   
6888   
6889   
6890   
6891   
6892   
6893  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
6895  *-------------------------------------------------------------------------------
6896  * Traditional Biomass
6897  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
6898  *  - require post_process to be launch before
6899  *-------------------------------------------------------------------------------
6900   
6902   
6904   
6905  *-------------------------------------------------------------------------------
6907   
6908  * Optional modules
6909   
6910  * Policy modules
6911   
6912  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
6916  *-------------------------------------------------------------------------------
6917  * Call modules by order
6918  *-------------------------------------------------------------------------------
6922   
6923  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
6925  *-------------------------------------------------------------------------------
6926  * Algorithm
6927  *-------------------------------------------------------------------------------
6928   
6930   
6932   
6933  *-------------------------------------------------------------------------------
6935   
6936  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
6938  *-------------------------------------------------------------------------------
6939  * Time
6940  * - Temporal structure
6941  * - Fixed time periods
6942  * - States of the world
6943  *-------------------------------------------------------------------------------
6944   
6946   
6947  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
6949  *-------------------------------------------------------------------------------
6950  * Geographic dimension and mapping with countries
6951  *-------------------------------------------------------------------------------
6952   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
6955  *-------------------------------------------------------------------------------
6956  * Non-Cooperative Setup
6957  *
6958  * Each region is defined as an individual coalition.
6959  *
6960  *-------------------------------------------------------------------------------
6961   
6963   
6964  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
6966  *-------------------------------------------------------------------------------
6967  * Welfare
6968  *-------------------------------------------------------------------------------
6969   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
6972  *-------------------------------------------------------------------------------
6973  * Economy
6974  * - Production and Consumption definition
6975  * - Top-level of the production function
6976  * Options:
6977  * --original_ssp=1 : original SSP population and GDP data
6978  *-------------------------------------------------------------------------------
6979   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
6982  *-------------------------------------------------------------------------------
6983  * Energy sector
6984  *-------------------------------------------------------------------------------
6985   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
6988  *-------------------------------------------------------------------------------
6989  * Carbon Emissions
6990  * - Total CO2 emissions and CO2 Fossil fuel and Industry
6991  * - CO2 emission costs
6992  * - GHG permit market
6993  *-------------------------------------------------------------------------------
6994   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
6997  *-------------------------------------------------------------------------------
6998  * Research & Development
6999  * Options:
7000  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
7001  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
7002  *-------------------------------------------------------------------------------
7003   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
7006  *-------------------------------------------------------------------------------
7007  * Default Climate Policy Implementation
7008  *
7009  * Options:
7010  *    --policy={bau (default),ctax}
7011  *        Implement a climate policy setting
7012  *  [ --scen= ]
7013  *        Policy variant.
7014  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
7015  *          * XXX for a fixed percentage/yr (e.g. 5) growth
7016  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
7017  *  [ --ctax_year=2020 ]
7018  *        Starting year of the carbon tax
7019  *  [ --ctax_initial=30 ]
7020  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
7021  *
7022  *-------------------------------------------------------------------------------
7024   
7025  * Initialization
7026   
7027  * Trading all time periods
7028  trading_t(c_mkt,t,n) = yes;
7029  trading_t(f_mkt,t,n) = yes;
7030   
7031  * No carbon tax
7032  ctax(ghg,t,n) = 0;
7033   
7034  * Default emission cap
7035  e_cap(ghg) = yes;
7036  emi_cap(t,n)= 500;
7037   
7038  ***newcode
7039  *emi_cap(t,n)$(not sameas(n,'usa')) = 500;
7040  ***
7041   
7043   
7044  to_run('r1') = yes;
7045  trading_t(c_mkt,t,n) = no;
7046   
7048   
7049  *-------------------------------------------------------------------------------
7051   
7052  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
7054  *-------------------------------------------------------------------------------
7055  * Energy efficiency
7056  *-------------------------------------------------------------------------------
7057   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
7060  *-------------------------------------------------------------------------------
7061  * Hydro Power
7062  *-------------------------------------------------------------------------------
7063   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
7066  *-------------------------------------------------------------------------------
7067  * System Integration:
7068  * - Capacity constraint
7069  * - Flexibility constraint
7070  * - Grid Investment
7071  * - Capacity growth constraint
7072  *-------------------------------------------------------------------------------
7073   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
7076  *-------------------------------------------------------------------------------
7077  * Nuclear power plants
7078  *-------------------------------------------------------------------------------
7079   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
7082  *-------------------------------------------------------------------------------
7083  * GHG module
7084  * - CH4 FFI + CH4 waste + CH4 open fires
7085  * - N2O FFI + N2O waste + N2O open fires
7086  *-------------------------------------------------------------------------------
7087   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
7090  *-------------------------------------------------------------------------------
7091  * F-gases
7092  * - LLF
7093  * - SLF
7094  *-------------------------------------------------------------------------------
7095   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
7098  *-------------------------------------------------------------------------------
7099  * Landuse [simplified version of the land-use model]
7100  *-------------------------------------------------------------------------------
7101   
7103   
7105   
7106  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
7109  *-------------------------------------------------------------------------------
7110  * Bioenergy power plant
7111  *-------------------------------------------------------------------------------
7112   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
7115  *-------------------------------------------------------------------------------
7116  * Traditional Biofuels
7117  * - Requires the precedence of mod_landuse
7118  *-------------------------------------------------------------------------------
7119   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
7122  *-------------------------------------------------------------------------------
7123  * Advanced biofuel
7124  * - Require the precedence of mod_landuse
7125  *-------------------------------------------------------------------------------
7126   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
7129  *-------------------------------------------------------------------------------
7130  * Carbon Capture and Sequestration
7131  *-------------------------------------------------------------------------------
7132   
7134   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
7136  *-------------------------------------------------------------------------------
7137  * Coal for non-electric sectors
7138  * - Coke Plants
7139  * - Industrial and Commercial combined-heat-and-power (CHP)
7140  * - Others
7141  *-------------------------------------------------------------------------------
7142   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
7145  *-------------------------------------------------------------------------------
7146  * Wind energy module
7147  * - onshore and offshore
7148  *-------------------------------------------------------------------------------
7149   
7151   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
7153  *-------------------------------------------------------------------------------
7154  * Solar Powerplants (PV and CSP) to the electrical system
7155  *-------------------------------------------------------------------------------
7156   
7157  *-------------------------------------------------------------------------------
7159   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
7161  *-------------------------------------------------------------------------------
7162  * Technology development scenarios
7163  *-------------------------------------------------------------------------------
7164   
7166   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
7168  *-------------------------------------------------------------------------------
7169  * Oil Extraction
7170  * Options:
7171  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
7172  *-------------------------------------------------------------------------------
7173   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
7176  *-------------------------------------------------------------------------------
7177  * Uranium Resources
7178  *-------------------------------------------------------------------------------
7179   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
7182  *-------------------------------------------------------------------------------
7183  * Gas Resources
7184  *-------------------------------------------------------------------------------
7185   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
7188  *-------------------------------------------------------------------------------
7189  * Coal Resources
7190  *-------------------------------------------------------------------------------
7191   
7193   
7194   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
7196  *-------------------------------------------------------------------------------
7197  * Climate
7198  *
7199  * Represents the climate
7200  * - based on the DICE model equations
7201  * - Radiative forcing for non CO2 ghgs
7202  * - parameters calibrated to reproduce MAGICC6.4 default response
7203  *
7204  *  Options:
7205  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
7206  * - $setglobal cooperate_on_climate {'YES','NO'}
7207  * - 'YES'(default): Countries within a coalition act in cooperation
7208  *   'NO': Countries within a coalition act individually
7209  *
7210  *-------------------------------------------------------------------------------
7211   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
7214  *-------------------------------------------------------------------------------
7215  * Long-run Damages from Climate Change
7216  * - Economic impacts
7217  * - Adaptation
7218  *-------------------------------------------------------------------------------
7219   
7221   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
7223  *-------------------------------------------------------------------------------
7224  * Light-duty Vehicles for Personal Transport
7225  *-------------------------------------------------------------------------------
7226   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
7229  *-------------------------------------------------------------------------------
7230  * Road Freight Transport
7231  *-------------------------------------------------------------------------------
7233   
7234  Q_IN.fx('trbiofuel','trad_stfr',tfirst,n) = 1e-4;
7235  Q_IN.fx('advbiofuel','trad_stfr',tfirst,n) = 1e-4;
7236   
7237  *-------------------------------------------------------------------------------
7239   
7240   
7241   
7242   
7243   
7244   
7245  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
7247  *-------------------------------------------------------------------------------
7248  * Traditional Biomass
7249  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
7250  *  - require post_process to be launch before
7251  *-------------------------------------------------------------------------------
7252   
7254   
7255  * Optional modules
7256   
7257  * Policy modules
7258   
7259  * Calibration
7265   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algorithm.gms
7267  *-------------------------------------------------------------------------------
7268  * algorithm.gms
7269  *-------------------------------------------------------------------------------
7270   
7271  *-------------------------------------------------------------------------------
7272  * Initialization [sets, parameters and default values]
7273  *-------------------------------------------------------------------------------
7274   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\solve.gms
7276  *-------------------------------------------------------------------------------
7277  * Interface with the CONOPT Solver
7278  *-------------------------------------------------------------------------------
7280   
7281  * Number of iterations to check for slow convergence
7283  * Max improvement to check for slow convergence
7285  * Max number of attempts to retry solving an infeasible region*
7287   
7288  * Treat fixed variables as constant
7290   
7291  * Determine if gams links the solver using temporary files (Grid computing environment) or the memory (Threads)
7292  * More details at https://www.gams.com/latest/docs/UG_GamsCall.html#GAMSAOsolvelink
7299   
7300  * Solver tuning
7302   
7304   
7306  file opt / 'C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\conopt.opt' /;
7307  put opt;
7308  put 'rtredg=1e-12'/;
7309  put 'rtbndt=1e-12'/;
7310  putclose opt;
7312   
7314   
7315  *-------------------------------------------------------------------------------
7316  * Initialization
7317  *-------------------------------------------------------------------------------
7318  set retry  'Solve retries after infeasibilities' / 1*10 /;
7319  set irep   'Solution report entries'
7320             / status, objval, solvestat, modelstat, iterusd,
7321               resusd, numvar, numequ, numnz, numvarproj,
7322               numinfes, numnopt, domusd /;
7323  parameter solrep(clt,irep) 'Solution report data';
7324  parameter remh(clt) 'Remaining solve handles';
7325  set all_optimal(run,siter);
7326  all_optimal(run,siter)  = no;
7327  set all_feasible(run,siter);
7328  all_feasible(run,siter)  = no;
7329  parameters nb_clt_infes(run,siter), nb_clt_noopt(run,siter), nb_tot_infes(run,siter);
7330  set cproblem(clt);
7331  set cproblem2(clt);
7332   
7333  scalar rcjob;
7334   
7335  variables LAST_I, LAST_I_EN, LAST_I_RD, LAST_I_OUT, LAST_COST_FUEL;
7336   
7338   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
7340  *-------------------------------------------------------------------------------
7341  * Convergence algorithm
7342  *-------------------------------------------------------------------------------
7344   
7345  *-------------------------------------------------------------------------------
7347   
7348  parameters allerr(run,siter,*) 'error over iteration'
7349             errtrade(*,t) 'Sum over n of traded quantities';
7350   
7351  parameter price_iter(run,siter,*,t)  "Price accross iteration";
7352  parameter delta_price(run,siter,*,t) "Step price";
7353   
7354  parameters allrho_admm(run,siter,*,t) 'rho value of the ADMM algorithm over iteration';
7355  parameters allerr_admm(run,siter,*,t) 'error values algorithm over iteration by t';
7356   
7357  set mkt(*) 'market collector';
7358  mkt(c_mkt) = yes;
7359  mkt(f_mkt) = yes;
7360   
7361  set t_admm(*,t);
7362   
7363  set external(*);
7364  external(mkt)=yes;
7365  external(mkt)$(internal(mkt))=no;
7366   
7367  trading_t(mkt,t,n)$(tfix(t))=no;
7368   
7369  * Period to evaluate the convergence of markets (oil, c_mkt, co2) and negishi weights
7370  set tcheck(t);
7371  tcheck(t) = yes$(year(t) le yeoh and year(t) le 2100);
7372   
7373  parameter mbalance(run,siter,*,t)     "Balance of the market"
7374            trust_region(run,siter,*,t) "Maximal value on the absolute value of step price" ;
7375   
7376  * Parameters for the "equilibrium" method
7377  parameter price_eq(run,siter,*,t)     "Price according to the equilibrium algorithm"
7378            do_price_eq(run,siter,*,t)  "if 1, perform an equilibrium step"
7379            mprofit(run,siter,*,t,n);
7380   
7381  do_price_eq(run,siter,mkt,t)=no;
7382   
7383  * Parameters for the bissection method
7384  parameter mbalance_rhs(run,siter,*,t),
7385            mbalance_lhs(run,siter,*,t),
7386            price_rhs(run,siter,*,t),
7387            price_lhs(run,siter,*,t),
7388            do_bissection(run,siter,*,t);
7389   
7390  do_bissection(run,siter,mkt,t) = no;
7391   
7392  * COALITION CODE
7393  parameter w_negishi(t,n),
7394            w_negishi_iter(run,siter,t,n);
7395  w_negishi(t,n)$(sum(clt$(map_clt_n(clt,n) and negishi_coop(clt,n)),1) eq 0) = 1;
7396  w_negishi(t,n)$(sum(clt$(map_clt_n(clt,n) and negishi_coop(clt,n)),1) eq 1) = ((Q.l('CC',t,n)/l(t,n))**(eta))/(sum((nn,clt)$(map_clt_n(clt,n) and map_clt_n(clt,nn)),(Q.l('cc',t,nn)/l(t,nn))**(eta)));
7397  w_negishi_iter(run,siter,t,n)$(ord(siter) eq 1)= w_negishi(t,n);
7398   
7399  parameter m_consumption(t,clt);
7400  parameter m_eqq_cc(t,tp1,n),
7401            m_eq_mkt_clearing(*,t,clt),
7402            m_eq_mkt_clearing_oil(t,clt),
7403            m_eq_mkt_clearing_nip(*,t,clt);
7404   
7405  * initialization
7406  m_eq_mkt_clearing_oil(t,clt) = 0;
7407  m_eq_mkt_clearing_nip(c_mkt,t,clt) = 0;
7408   
7409  * Set default values if starting values are zeros
7410  loop((c_mkt,t)$((not tfix(t)) and (sum(n$trading_t(c_mkt,t,n),1)>0) and (CPRICE.l(c_mkt,t)) eq 0),
7411    CPRICE.l(c_mkt,t) = 30 * (1 + 0.03)**(year(t) - 2020) * c2co2 * 1e-3;
7412  );
7413  loop((f_mkt,t)$((not tfix(t)) and (sum(n$trading_t(f_mkt,t,n),1)>0) and (FPRICE.l(f_mkt,t)) eq 0),
7414    FPRICE.l(f_mkt,t) = 1e-5;
7415  );
7416   
7417  * Define default trust_region
7418  trust_region(run,siter, c_mkt, t) = 0.15 * CPRICE.l(c_mkt, t);
7419  trust_region(run,siter, f_mkt, t) = 0.15 * FPRICE.l(f_mkt, t);
7420   
7421  *-------------------------------------------------------------------------------
7423   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
7425  *-------------------------------------------------------------------------------
7426  * ADMM algorithm
7427  *-------------------------------------------------------------------------------
7429   
7430  *-------------------------------------------------------------------------------
7432   
7433  * ADMM residual balancing parameters
7434  ** Threshold for ratio between scaled residuals to trigger change in rho
7436  ** Multiplicative factor used to increase or decrease rho
7437  ** (use either number or "dynamic")
7439  ** If admm_tau is dynamic, max tau to use
7441  ** Order of magnitude between relative primal and dual residuals, oil market
7443  ** Order of magnitude between relative primal and dual residuals, nip market
7445   
7446  parameters
7447      u_admmiter(siter,*,t) 'ADMM dual variable scaled'
7448      x_admmiter(siter,*,t,n) 'Regional trade imbalance over iterations'
7449      xavg_admmiter(siter,*,t) 'Average trade imbalance over iterations'
7450      z_admm(*,t,n) 'ADMM copy variable of x used for trade clearing'
7451      z_admmiter(siter,*,t,n) 'ADMM copy variable of x used for trade clearing over iterations'
7452      r_admm(siter,*) 'ADMM primal residual'
7453      rrel_admm(siter,*) 'ADMM relative primal residual'
7454      s_admm(siter,*) 'ADMM dual residual'
7455      srel_admm(siter,*) 'ADMM relative dual residual'
7456      delta_price_off(t) 'Offset for proposed ADMM price to fit into WITCH price update framework'
7457      csi_admm(*) 'ADMM scaling coefficient to balance primal and dual residuals'
7458      admm_tau(siter,*) 'ADMM multiplicative factor used to increase or decrease rho'
7459  ;
7460   
7461  scalar admm_mu 'ADMM threshold for ratio between scaled residuals to trigger change in rho' / 5 /;
7462   
7463  csi_admm('oil') = 1e0;
7464  csi_admm('nip') = 1e0; # TOCHECK
7465   
7466  *-------------------------------------------------------------------------------
7468   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
7470  *-------------------------------------------------------------------------------
7471  * Report model progress
7472  *-------------------------------------------------------------------------------
7473   
7475   
7477   
7478  set iterrep / infes, nonopt, itertime, tottime /;
7479  set timeiterrep(iterrep) / itertime, tottime /;
7480   
7481  parameter infoiter(iterrep);
7482  parameter allinfoiter(run,siter,iterrep);
7483   
7484  file gdxput; # Device used to save variables to a different gdxs
7485   
7486  * File used for realtime errors plotting
7487  file errdat / 'C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\errors_eqq_emi_lim_usa_1e-3.txt' /;
7488  errdat.ap=0;
7489  errdat.lj=1;
7490  errdat.tj=1;
7491   
7492  put errdat;
7493  * Time
7494  put 'Start: ',system.date,' 'system.time /;
7495  * To be run
7496  put 'To run: ';
7497  loop(to_run,
7498    put to_run.tl:0,' ';
7499  );
7500  put /;
7502  * Explanation sol
7503  put 'sol: [Y/N][clt nonopt][clt infes][tot infes]';
7504  put /;
7505  * Horizontal separator
7506  put '====';
7507  put '=====';
7508  loop(ierr,
7509  put '=========';
7510  );
7511  loop(timeiterrep,
7512  put '==========';
7513  );
7514  put /;
7515  * Column headers
7516  put 'iter';
7517  put '  sol';
7518  loop(ierr,
7519  put  ' ' ierr.tl:8;
7520  );
7521  loop(timeiterrep,
7522  put  ' ' timeiterrep.tl:9;
7523  );
7524  put /;
7525  * Convergence tolerances
7526  put '    ';
7527  put '     ';
7528  loop(ierr,
7529  put  '   <' errtol(ierr):5:3;
7530  );
7531  put  '         ';
7532  put /;
7533  putclose errdat;
7534  errdat.ap=1;
7535   
7537   
7538  *-------------------------------------------------------------------------------
7539  * Generation of the model's equations
7540  *-------------------------------------------------------------------------------
7541   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\model.gms
7543  *-------------------------------------------------------------------------------
7544  * Generate the model equations
7545  *-------------------------------------------------------------------------------
7546   
7549   
7550  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
7552  *-------------------------------------------------------------------------------
7553  * Call modules by order
7554  *-------------------------------------------------------------------------------
7558   
7559  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
7561  *-------------------------------------------------------------------------------
7562  * Algorithm
7563  *-------------------------------------------------------------------------------
7564   
7566   
7567  eqobj_c_brazil
7568   
7569  *-------------------------------------------------------------------------------
7571   
7572  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
7574  *-------------------------------------------------------------------------------
7575  * Time
7576  * - Temporal structure
7577  * - Fixed time periods
7578  * - States of the world
7579  *-------------------------------------------------------------------------------
7580   
7582   
7583  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
7585  *-------------------------------------------------------------------------------
7586  * Geographic dimension and mapping with countries
7587  *-------------------------------------------------------------------------------
7588   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
7591  *-------------------------------------------------------------------------------
7592  * Non-Cooperative Setup
7593  *
7594  * Each region is defined as an individual coalition.
7595  *
7596  *-------------------------------------------------------------------------------
7597   
7599   
7600  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
7602  *-------------------------------------------------------------------------------
7603  * Welfare
7604  *-------------------------------------------------------------------------------
7605   
7607   
7608  equtility_c_brazil
7609   
7610  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
7613  *-------------------------------------------------------------------------------
7614  * Economy
7615  * - Production and Consumption definition
7616  * - Top-level of the production function
7617  * Options:
7618  * --original_ssp=1 : original SSP population and GDP data
7619  *-------------------------------------------------------------------------------
7620   
7622   
7623  eqk_c_brazil
7624  eqq_cc_c_brazil
7625  eqq_fen_c_brazil
7626  eqq_y_c_brazil
7627   
7628  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
7631  *-------------------------------------------------------------------------------
7632  * Energy sector
7633  *-------------------------------------------------------------------------------
7634   
7636   
7637  eq_mkt_clearing_oil_c_brazil
7638  eqcost_pes_c_brazil
7639  eqcost_ses_c_brazil
7640  eqk_en_c_brazil
7641  eqq_ces_el_c_brazil
7642  eqq_ces_nelgas_c_brazil
7643  eqq_el2_c_brazil
7644  eqq_el_c_brazil
7645  eqq_elff_c_brazil
7646  eqq_en_c_brazil
7647  eqq_en_in_c_brazil
7648  eqq_en_mu_c_brazil
7649  eqq_en_tree_c_brazil
7650  eqq_nel_c_brazil
7651  eqq_nelog_c_brazil
7652  eqq_fuel_c_brazil
7653  eqq_elffren_c_brazil
7654   
7655  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
7658  *-------------------------------------------------------------------------------
7659  * Carbon Emissions
7660  * - Total CO2 emissions and CO2 Fossil fuel and Industry
7661  * - CO2 emission costs
7662  * - GHG permit market
7663  *-------------------------------------------------------------------------------
7664   
7666   
7667  eqq_emi_lim_c_brazil
7668  ***newcode
7669  eqq_emi_lim_USAc_brazil
7670  ***
7671  eqq_emi_tree_c_brazil
7672  eqq_emi_co2ffi_c_brazil
7673   
7674  eqcost_emi_co2_c_brazil
7675   
7676  eq_mkt_clearing_nip_c_brazil
7677   
7678  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
7681  *-------------------------------------------------------------------------------
7682  * Research & Development
7683  * Options:
7684  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
7685  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
7686  *-------------------------------------------------------------------------------
7687   
7689   
7690  eqk_rd_c_brazil
7691  eqspill_coop_c_brazil
7692  eqspill_lead_c_brazil
7693  eqspill_foll_c_brazil
7694  eqmcost_inv_back_c_brazil
7695  eqmcost_inv_back_lbd_c_brazil
7696   
7697  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
7700  *-------------------------------------------------------------------------------
7701  * Default Climate Policy Implementation
7702  *
7703  * Options:
7704  *    --policy={bau (default),ctax}
7705  *        Implement a climate policy setting
7706  *  [ --scen= ]
7707  *        Policy variant.
7708  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
7709  *          * XXX for a fixed percentage/yr (e.g. 5) growth
7710  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
7711  *  [ --ctax_year=2020 ]
7712  *        Starting year of the carbon tax
7713  *  [ --ctax_initial=30 ]
7714  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
7715  *
7716  *-------------------------------------------------------------------------------
7718   
7719  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
7721  *-------------------------------------------------------------------------------
7722  * Energy efficiency
7723  *-------------------------------------------------------------------------------
7724   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
7727  *-------------------------------------------------------------------------------
7728  * Hydro Power
7729  *-------------------------------------------------------------------------------
7730   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
7733  *-------------------------------------------------------------------------------
7734  * System Integration:
7735  * - Capacity constraint
7736  * - Flexibility constraint
7737  * - Grid Investment
7738  * - Capacity growth constraint
7739  *-------------------------------------------------------------------------------
7740   
7742   
7743  eqq_elintren_c_brazil
7744  eqflex_c_brazil
7745  eqk_en_grid_c_brazil
7746  eqk_en_grid_to_k_en_c_brazil
7747  eqfirm_capacity_c_brazil
7748  eqcap_growth_c_brazil
7749   
7750  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
7753  *-------------------------------------------------------------------------------
7754  * Nuclear power plants
7755  *-------------------------------------------------------------------------------
7756   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
7759  *-------------------------------------------------------------------------------
7760  * GHG module
7761  * - CH4 FFI + CH4 waste + CH4 open fires
7762  * - N2O FFI + N2O waste + N2O open fires
7763  *-------------------------------------------------------------------------------
7764   
7766   
7767  eqq_emi_waste_c_brazil
7768  eqq_emi_n2o_ffi_c_brazil
7769  eqq_emi_ch4_ffi_c_brazil
7770   
7771  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
7774  *-------------------------------------------------------------------------------
7775  * F-gases
7776  * - LLF
7777  * - SLF
7778  *-------------------------------------------------------------------------------
7779   
7781   
7782  eqq_emi_fgases_c_brazil
7783   
7784  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
7787  *-------------------------------------------------------------------------------
7788  * Landuse [simplified version of the land-use model]
7789  *-------------------------------------------------------------------------------
7790   
7792   
7793  eq_wbio_c_brazil
7794  eqcost_pes_wbio_c_brazil
7795   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
7798  *-------------------------------------------------------------------------------
7799  * Bioenergy power plant
7800  *-------------------------------------------------------------------------------
7801   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
7804  *-------------------------------------------------------------------------------
7805  * Traditional Biofuels
7806  * - Requires the precedence of mod_landuse
7807  *-------------------------------------------------------------------------------
7808   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
7811  *-------------------------------------------------------------------------------
7812  * Advanced biofuel
7813  * - Require the precedence of mod_landuse
7814  *-------------------------------------------------------------------------------
7815   
7817   
7818  eqq_en_lim_advbiofuel_c_brazil
7819  eqmcost_fuel_advbiofuel_c_brazil
7820   
7821  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
7824  *-------------------------------------------------------------------------------
7825  * Carbon Capture and Sequestration
7826  *-------------------------------------------------------------------------------
7827   
7829   
7830  eqq_emi_ccs_c_brazil
7831  eqcost_emi_sinks_c_brazil
7832  eq_stor_ccs_cum_c_brazil
7833  eq_emi_stor_ccs_c_brazil
7834  eq_emi_leak_ccs_c_brazil
7835   
7836  *-------------------------------------------------------------------------------
7838   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
7840  *-------------------------------------------------------------------------------
7841  * Coal for non-electric sectors
7842  * - Coke Plants
7843  * - Industrial and Commercial combined-heat-and-power (CHP)
7844  * - Others
7845  *-------------------------------------------------------------------------------
7846   
7848   
7849  eqcost_en_nelcoal_c_brazil
7850  eqq_ncoalabat_monotone_c_brazil
7851  eqq_en_nelcoalccs_max_c_brazil
7852   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
7855  *-------------------------------------------------------------------------------
7856  * Wind energy module
7857  * - onshore and offshore
7858  *-------------------------------------------------------------------------------
7859   
7861   
7862  eqq_en_mu_windon_c_brazil
7863  eqq_en_mu_windoff_c_brazil
7864  eqk_en_windon_c_brazil
7865  eqk_en_windoff_c_brazil
7866  eqq_en_windon_sum_c_brazil
7867  eqq_en_windoff_sum_c_brazil
7868  eqk_en_windon_sum_c_brazil
7869  eqk_en_windoff_sum_c_brazil
7870  eqi_en_windon_sum_c_brazil
7871  eqi_en_windoff_sum_c_brazil
7872   
7874   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
7876  *-------------------------------------------------------------------------------
7877  * Solar Powerplants (PV and CSP) to the electrical system
7878  *-------------------------------------------------------------------------------
7879   
7880  *-------------------------------------------------------------------------------
7882   
7883  eqq_en_mu_pv_c_brazil
7884  eqq_en_mu_csp_c_brazil
7885  eqk_en_pv_c_brazil
7886  eqk_en_csp_c_brazil
7887  eqq_en_pv_sum_c_brazil
7888  eqq_en_csp_sum_c_brazil
7889  eqk_en_pv_sum_c_brazil
7890  eqk_en_csp_sum_c_brazil
7891  eqi_en_pv_sum_c_brazil
7892  eqi_en_csp_sum_c_brazil
7893  eqk_en_solar_comp_c_brazil
7894   
7895  *-------------------------------------------------------------------------------
7897   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
7899  *-------------------------------------------------------------------------------
7900  * Technology development scenarios
7901  *-------------------------------------------------------------------------------
7902   
7904   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
7906  *-------------------------------------------------------------------------------
7907  * Oil Extraction
7908  * Options:
7909  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
7910  *-------------------------------------------------------------------------------
7911   
7913   
7914  eqoilcap_c_brazil
7915  eqoilprod_c_brazil
7916  eqq_out_oil_c_brazil
7917  eqcum_oil_c_brazil
7918  eqcost_oil_c_brazil
7919  eqi_oil_c_brazil
7920  eqi_out_oil_c_brazil
7921  eqq_emi_out_oil_c_brazil
7922   
7923  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
7926  *-------------------------------------------------------------------------------
7927  * Uranium Resources
7928  *-------------------------------------------------------------------------------
7929   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
7932  *-------------------------------------------------------------------------------
7933  * Gas Resources
7934  *-------------------------------------------------------------------------------
7935   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
7938  *-------------------------------------------------------------------------------
7939  * Coal Resources
7940  *-------------------------------------------------------------------------------
7941   
7943   
7944   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
7946  *-------------------------------------------------------------------------------
7947  * Climate
7948  *
7949  * Represents the climate
7950  * - based on the DICE model equations
7951  * - Radiative forcing for non CO2 ghgs
7952  * - parameters calibrated to reproduce MAGICC6.4 default response
7953  *
7954  *  Options:
7955  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
7956  * - $setglobal cooperate_on_climate {'YES','NO'}
7957  * - 'YES'(default): Countries within a coalition act in cooperation
7958  *   'NO': Countries within a coalition act individually
7959  *
7960  *-------------------------------------------------------------------------------
7961   
7963   
7965   
7966  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
7969  *-------------------------------------------------------------------------------
7970  * Long-run Damages from Climate Change
7971  * - Economic impacts
7972  * - Adaptation
7973  *-------------------------------------------------------------------------------
7974   
7976   
7978   
7979  *-------------------------------------------------------------------------------
7981   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
7983  *-------------------------------------------------------------------------------
7984  * Light-duty Vehicles for Personal Transport
7985  *-------------------------------------------------------------------------------
7986   
7988   
7989  eqnb_veh_c_brazil
7990  eqq_en_veh_c_brazil
7991  eqq_el_edv_c_brazil
7992  eqmcost_inv_hybrid_c_brazil
7993  eqmcost_inv_plghybrid_c_brazil
7994  eqmcost_inv_edv_c_brazil
7995  *** newcode
7996  eqq_inv_red_ban_c_brazil
7997  ***
7998  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
8001  *-------------------------------------------------------------------------------
8002  * Road Freight Transport
8003  *-------------------------------------------------------------------------------
8005   
8006  eqnb_frtveh_c_brazil
8007  eqq_en_frtveh_c_brazil
8008  eqq_el_frtedv_c_brazil
8009  eqmcost_inv_hbd_stfr_c_brazil
8010  eqmcost_inv_plghbd_stfr_c_brazil
8011  eqmcost_inv_edv_stfr_c_brazil
8012   
8013  *-------------------------------------------------------------------------------
8015   
8016   
8017   
8018   
8019   
8020   
8021  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
8023  *-------------------------------------------------------------------------------
8024  * Traditional Biomass
8025  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
8026  *  - require post_process to be launch before
8027  *-------------------------------------------------------------------------------
8028   
8030   
8031  * Optional modules
8032   
8033  * Policy modules
8034   
8035  * Calibration
8038  ;
8039   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
8041  *-------------------------------------------------------------------------------
8042  * Call modules by order
8043  *-------------------------------------------------------------------------------
8047   
8048  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
8050  *-------------------------------------------------------------------------------
8051  * Algorithm
8052  *-------------------------------------------------------------------------------
8053   
8055   
8057  * Add the component of the (maximized) objective function as required by the ADMM algorithm
8058  eqobj_c_brazil..
8059      OBJADMM =e= UTILITY -
8060          sum(t, rho_admm('oil',t) / 2 *
8061              sum(n$(map_clt_n('c_brazil',n) and trading_t('oil',t,n)),
8062                  power(
8063                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
8064                      x_admm('oil',t,n) +
8065                      xavg_admm('oil',t) +
8066                      u_admm('oil', t)
8067                  ,2)
8068              )) -
8069          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
8070              sum(n$(map_clt_n('c_brazil',n) and trading_t(c_mkt,t,n)),
8071                  power(
8072                      Q_EMI(c_mkt,t,n) -
8073                      x_admm(c_mkt,t,n) +
8074                      xavg_admm(c_mkt,t) +
8075                      u_admm(c_mkt,t)
8076                  ,2)
8077              ))
8078      ;
8080   
8081  *-------------------------------------------------------------------------------
8083   
8084  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
8086  *-------------------------------------------------------------------------------
8087  * Time
8088  * - Temporal structure
8089  * - Fixed time periods
8090  * - States of the world
8091  *-------------------------------------------------------------------------------
8092   
8094   
8095  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
8097  *-------------------------------------------------------------------------------
8098  * Geographic dimension and mapping with countries
8099  *-------------------------------------------------------------------------------
8100   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
8103  *-------------------------------------------------------------------------------
8104  * Non-Cooperative Setup
8105  *
8106  * Each region is defined as an individual coalition.
8107  *
8108  *-------------------------------------------------------------------------------
8109   
8111   
8112  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
8114  *-------------------------------------------------------------------------------
8115  * Welfare
8116  *-------------------------------------------------------------------------------
8117   
8119   
8120  * Objective function - Welfare to be maximized
8121  equtility_c_brazil..
8122      UTILITY =e=
8123   
8124  * Negishi SWF
8126   
8127  * Welfare functions based on CEBGE
8130                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
8131                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
8132                      ((sum(n$map_clt_n('c_brazil',n),
8133                        (l(t,n) / sum(nn$map_clt_n('c_brazil',nn), l(t,nn))) *
8134                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
8135                       )**(1 / (1 - gamma))
8136                      )**(1 - eta) ) +
8137                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
8138                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
8139                      ((sum(n$map_clt_n('c_brazil',n),
8140                        (l(t,n) / sum(nn$map_clt_n('c_brazil',nn), l(t,nn))) *
8141                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
8142                       )**(1 / (1 - gamma))
8143                      )**(1 - eta) )
8144                  )**(1/(1 - eta)) * 1e6
8147   
8148   
8149  ;
8150   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
8153  *-------------------------------------------------------------------------------
8154  * Economy
8155  * - Production and Consumption definition
8156  * - Top-level of the production function
8157  * Options:
8158  * --original_ssp=1 : original SSP population and GDP data
8159  *-------------------------------------------------------------------------------
8160   
8162   
8163  * Production
8164  eqq_y_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8165   
8166      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
8167                     ## Climate feedback on economy
8169                     ## Net cost of Primary and Secondary Energy Sources
8170                     - sum(fuel, COST_FUEL(fuel,t,n))
8171                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
8172                     - sum(cce, COST_EMI(cce,t,n))
8173                     ## Carbon tax
8174                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
8175                     ## Additionnal costs on gross product
8176                     - sum(ccy, COST_Y(ccy,t,n))
8177  ;
8178   
8179  * Consumption
8180  eqq_cc_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
8181      Q('cc',t,n) =e= Q('y',t,n)
8182                      ## Investments in goods g (final good, adaptation)
8183                      -sum(g, I(g,t,n))
8184                      ## Investments in r&d
8185                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
8186                      ## Investments in energy technlogies
8187                      -sum(jinv, I_EN(jinv,t,n))
8188                       ## Investments in grid infrastructures
8189                      - I_EN_GRID(t,n)
8190                      ## Investments in extraction sector
8191                      -sum(extract(f), I_OUT(f,t,n))
8192                      ## O&M for energy technlogies
8193                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
8194                      ## O&M for extraction
8195                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
8196                      ## Energy technology penalty costs
8197                      -sum(jpenalty(j), COST_EN(j,t,n))
8198  ;
8199   
8200  * Capital accumulation
8201  eqk_c_brazil(g,t,tp1,n)$(map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
8202      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
8203   
8204  * Energy services
8205  eqq_fen_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8206      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
8207   
8208  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
8211  *-------------------------------------------------------------------------------
8212  * Energy sector
8213  *-------------------------------------------------------------------------------
8214   
8216   
8217  *-------------------------------------------------------------------------------
8218  * Production - Energy sector
8219  *-------------------------------------------------------------------------------
8220   
8221  eqq_en_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8222      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
8223   
8224  *-------------------------------------------------------------------------------
8225  * Production - Electrical sector
8226  *-------------------------------------------------------------------------------
8227   
8228  eqq_el_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8229      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
8230   
8231  eqq_el2_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8232      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
8233   
8234  eqq_elffren_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8235      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
8236  eqq_elff_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8237      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
8238   
8239  eqq_ces_el_c_brazil(ices_el,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
8240      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
8241  ;
8242   
8243  *-------------------------------------------------------------------------------
8244  * Production - Non-electrical sector
8245  *-------------------------------------------------------------------------------
8246   
8247  eqq_nel_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8248      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
8249   
8250  eqq_nelog_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8251      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
8252  ;
8253  eqq_ces_nelgas_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8254      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
8255   
8256  *-------------------------------------------------------------------------------
8257  * PES and fuels
8258  *-------------------------------------------------------------------------------
8259   
8260  eqq_fuel_c_brazil(fuel,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
8261      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
8262   
8263  *-------------------------------------------------------------------------------
8264  * Cost
8265  *-------------------------------------------------------------------------------
8266   
8267  * Net cost of Primary Energy Supplies
8268  eqcost_pes_c_brazil(f,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
8269      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
8270                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
8271   
8272  * Net cost of Secondary Energy Supplies
8273  eqcost_ses_c_brazil(s,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8274      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
8275   
8276   
8277  *-------------------------------------------------------------------------------
8278  * Market balances
8279  *-------------------------------------------------------------------------------
8280   
8281  eq_mkt_clearing_oil_c_brazil(t,'c_brazil')$(internal('oil'))..
8282      sum( n$(map_clt_n('c_brazil',n) and trading_t('oil',t,n)),
8283          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
8284      ) =e= 0;
8285   
8286  *-------------------------------------------------------------------------------
8287  * New capital in the energy sector
8288  *-------------------------------------------------------------------------------
8289   
8290  * Electrical generation plants (new)
8291  eqk_en_c_brazil(jinv,t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
8292      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
8293                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
8294   
8295  *-------------------------------------------------------------------------------
8296  * ENERGY
8297  *-------------------------------------------------------------------------------
8298   
8299  * Capacity limits in the electrical sector
8300  eqq_en_mu_c_brazil(jel,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
8301      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
8302   
8303  * Efficiency of energy technology sector
8304  eqq_en_in_c_brazil(jfed,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
8305      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
8306                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
8307   
8308  * Energy generation "tree"
8309  eqq_en_tree_c_brazil(j,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
8310      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
8311   
8312  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
8315  *-------------------------------------------------------------------------------
8316  * Carbon Emissions
8317  * - Total CO2 emissions and CO2 Fossil fuel and Industry
8318  * - CO2 emission costs
8319  * - GHG permit market
8320  *-------------------------------------------------------------------------------
8321   
8323   
8324  * GHG emission cap
8325  eqq_emi_lim_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
8326      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
8327                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
8328   
8329  ***newcode
8330  eqq_emi_lim_USAc_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
8331  ***
8332   
8333  * Compute total and sectoral emissions
8334  eqq_emi_tree_c_brazil(t,n,e)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
8335      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
8336   
8337  * Industrial CO2 emissions
8338  eqq_emi_co2ffi_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8339      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
8340                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
8341                              # Emissions from biomass
8342                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
8343                              # Emissions from fuel extraction
8344                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
8345                              # Captured emissions
8346                              sum(sink, Q_EMI(sink,t,n));
8347   
8348  * CO2 emission costs
8349  eqcost_emi_co2_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8350      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
8351   
8352  * Emission permit market clearing for internal market
8353  eq_mkt_clearing_nip_c_brazil(c_mkt,t,'c_brazil')$(internal(c_mkt))..
8354      sum(n$(map_clt_n('c_brazil',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
8355   
8356  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
8359  *-------------------------------------------------------------------------------
8360  * Research & Development
8361  * Options:
8362  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
8363  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
8364  *-------------------------------------------------------------------------------
8365   
8367   
8368  * Knowledge stock accumulation
8369  eqk_rd_c_brazil(rd,t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
8370                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
8371                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
8372                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
8373                                        SPILL(rd,t,n)**rd_coef(rd,'d');
8374   
8375  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
8376  eqspill_coop_c_brazil(rd,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_brazil'))..
8377          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
8378                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_brazil',nn)), K_RD(rd,t,nn)) +
8379                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_brazil',nn))), K_RD.l(rd,t,nn))
8380                            ) *
8381                            (
8382                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_brazil',nn)), K_RD(rd,t,nn)) +
8383                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_brazil',nn))), K_RD.l(rd,t,nn))
8384                              ) - K_RD(rd,t,n)
8385                            );
8386   
8387  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
8388  eqspill_lead_c_brazil(rd,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_brazil')) and leadrd(rd,n))..
8389                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
8390   
8391  * No-cooperation : a follower sees is negative effect on the quantity he can grab
8392  eqspill_foll_c_brazil(rd,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_brazil')) and (not leadrd(rd,n)))..
8393                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
8394   
8395  *- Only LbR (without learning by doing)
8396  eqmcost_inv_back_c_brazil(jrd,t,tt,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
8397                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
8398                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
8399   
8400  *- LbR together with learning by doing ==> Two-factor learning curve
8401  eqmcost_inv_back_lbd_c_brazil(jrd,t,tt,tfirst,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
8402                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
8403                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
8404                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
8405   
8406  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
8409  *-------------------------------------------------------------------------------
8410  * Default Climate Policy Implementation
8411  *
8412  * Options:
8413  *    --policy={bau (default),ctax}
8414  *        Implement a climate policy setting
8415  *  [ --scen= ]
8416  *        Policy variant.
8417  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
8418  *          * XXX for a fixed percentage/yr (e.g. 5) growth
8419  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
8420  *  [ --ctax_year=2020 ]
8421  *        Starting year of the carbon tax
8422  *  [ --ctax_initial=30 ]
8423  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
8424  *
8425  *-------------------------------------------------------------------------------
8427   
8428  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
8430  *-------------------------------------------------------------------------------
8431  * Energy efficiency
8432  *-------------------------------------------------------------------------------
8433   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
8436  *-------------------------------------------------------------------------------
8437  * Hydro Power
8438  *-------------------------------------------------------------------------------
8439   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
8442  *-------------------------------------------------------------------------------
8443  * System Integration:
8444  * - Capacity constraint
8445  * - Flexibility constraint
8446  * - Grid Investment
8447  * - Capacity growth constraint
8448  *-------------------------------------------------------------------------------
8449   
8451   
8452   
8453  * Renewable CES
8454   
8455  * Definition of the renewable CES
8456  eqq_elintren_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8457      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
8458   
8459  * Capacity constraint
8460   
8462  eqfirm_capacity_c_brazil(t,n)$(map_clt_n('c_brazil',n) and (not tfix(t)) and year(t) gt 2005)..
8463                   sum(jel_firm, K_EN(jel_firm,t,n))
8464                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
8465                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
8466                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
8467                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
8468                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
8469                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
8470                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
8471                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
8472                                       ) / yearly_hours
8473  ;
8475   
8476  * Flexibility constraint
8477  eqflex_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8478          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
8479                             ( Q_EN('el',t,n) -
8480                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
8481                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
8482                             ) * flex_coeff('load')
8483  ;
8484   
8485  * Grid
8486   
8487  ** Grid depreciation and investments
8488  eqk_en_grid_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
8489                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
8490                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
8491   
8492  ** Grid adjustment to power capacity
8493  eqk_en_grid_to_k_en_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8494                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
8495                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
8496                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
8497                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
8498                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
8499                                     ) / grid_cost +
8500                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
8501                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
8502                                      K_EN('elcsp',t,n);
8503  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
8504   
8505  * Capacity growth constraint
8506  eqcap_growth_c_brazil(jinv,t,tp1,tp2,n)$((map_clt_n('c_brazil',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
8507                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
8508                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
8509   
8510  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
8513  *-------------------------------------------------------------------------------
8514  * Nuclear power plants
8515  *-------------------------------------------------------------------------------
8516   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
8519  *-------------------------------------------------------------------------------
8520  * GHG module
8521  * - CH4 FFI + CH4 waste + CH4 open fires
8522  * - N2O FFI + N2O waste + N2O open fires
8523  *-------------------------------------------------------------------------------
8524   
8526   
8527  * CH4, N2O waste emissions
8528  eqq_emi_waste_c_brazil(waste,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
8529                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
8530   
8531  * n2o FFI
8532  eqq_emi_n2o_ffi_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
8533    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
8534                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
8535                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
8536                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
8537                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
8538                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
8539                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
8540                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
8541                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
8542                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
8543                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
8544                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
8545                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
8546                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
8547                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
8548                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
8549                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
8550                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
8551                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
8552                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
8553                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
8554                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
8555                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
8556                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
8557                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
8558                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
8559                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
8560                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
8561                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
8562                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
8563                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
8564   
8565  * ch4 FFI
8566  eqq_emi_ch4_ffi_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
8567    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
8570  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
8571  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
8572                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
8573                             smax(tt$(year(tt) eq 2015),
8574                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
8577  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
8578  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
8579                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
8580   
8581  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
8584  *-------------------------------------------------------------------------------
8585  * F-gases
8586  * - LLF
8587  * - SLF
8588  *-------------------------------------------------------------------------------
8589   
8591   
8592  * F-gases emissions
8593  eqq_emi_fgases_c_brazil(fgases,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
8594                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
8595   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
8598  *-------------------------------------------------------------------------------
8599  * Landuse [simplified version of the land-use model]
8600  *-------------------------------------------------------------------------------
8601   
8603   
8604  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
8605  eq_wbio_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8606      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
8607   
8609  * Cost of all woody biomass produced for advanced biofuels and woody biomass
8610  eqcost_pes_wbio_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8611      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
8613   
8614  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
8617  *-------------------------------------------------------------------------------
8618  * Bioenergy power plant
8619  *-------------------------------------------------------------------------------
8620   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
8623  *-------------------------------------------------------------------------------
8624  * Traditional Biofuels
8625  * - Requires the precedence of mod_landuse
8626  *-------------------------------------------------------------------------------
8627   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
8630  *-------------------------------------------------------------------------------
8631  * Advanced biofuel
8632  * - Require the precedence of mod_landuse
8633  *-------------------------------------------------------------------------------
8634   
8636   
8637  * Limitations for nel backstops
8638  eqq_en_lim_advbiofuel_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
8639               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
8640               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
8641   
8642  * Peculiarity of advbiofuel
8643  eqmcost_fuel_advbiofuel_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8644                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
8645   
8646  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
8649  *-------------------------------------------------------------------------------
8650  * Carbon Capture and Sequestration
8651  *-------------------------------------------------------------------------------
8652   
8654   
8655  eqq_emi_ccs_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8656                  Q_EMI('ccs_plant',t,n) =e=
8657                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
8658                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
8659  ;
8660   
8661  eqcost_emi_sinks_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8662                  COST_EMI('ccs_plant',t,n) =e=
8663                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
8664                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
8665  ;
8666   
8667  eq_stor_ccs_cum_c_brazil(ccs_stor,tp1,t,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
8668                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
8669  ;
8670   
8671  eq_emi_stor_ccs_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8672                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
8673  ;
8674   
8675  eq_emi_leak_ccs_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8676                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
8677   
8678  *-------------------------------------------------------------------------------
8680   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
8682  *-------------------------------------------------------------------------------
8683  * Coal for non-electric sectors
8684  * - Coke Plants
8685  * - Industrial and Commercial combined-heat-and-power (CHP)
8686  * - Others
8687  *-------------------------------------------------------------------------------
8688   
8690   
8691  eqcost_en_nelcoal_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8692           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
8693                                          nelcoal_max_abat(t,n) *
8694                                          (nelcoal_cmac(n,'a') *
8695                                            Q_EN('nelcoalabat',t,n) /
8696                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
8697                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
8698                                              (exp(nelcoal_cmac(n,'c') *
8699                                                (Q_EN('nelcoalabat',t,n)/
8700                                                  (nelcoal_max_abat(t,n) *
8701                                                      nelcoal_baseline(t,n))
8702                                                  ) - 1 )
8703                                              )
8704                                          );
8705   
8706  eqq_ncoalabat_monotone_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
8707          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
8708   
8709  * ensure Q_EN is lower than K_EN for CCS as not in jel
8710  eqq_en_nelcoalccs_max_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8711          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
8712   
8713  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
8716  *-------------------------------------------------------------------------------
8717  * Wind energy module
8718  * - onshore and offshore
8719  *-------------------------------------------------------------------------------
8720   
8722   
8723  * Capacity limits in the wind onshore electrical sector
8724  eqq_en_mu_windon_c_brazil(wind_dist,wind_class,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
8725      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
8726   
8727  * Capacity limits in the wind offshore electrical sector
8728  eqq_en_mu_windoff_c_brazil(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
8729      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
8730   
8731  * Wind onshore electrical generation plants (new)
8732  eqk_en_windon_c_brazil(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
8733      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
8734                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
8735   
8736  * Wind offshore electrical generation plants (new)
8737  eqk_en_windoff_c_brazil(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
8738      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
8739                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
8740   
8741  * Total onshore wind energy production
8742  eqq_en_windon_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8743                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
8744   
8745  * Total offshore wind energy production
8746  eqq_en_windoff_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8747                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
8748   
8749  * Total onshore wind capacity
8750  eqk_en_windon_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8751                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
8752   
8753  * Total offshore wind capacity
8754  eqk_en_windoff_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8755                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
8756   
8757  * Total onshore wind investment
8758  eqi_en_windon_sum_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
8759                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
8760   
8761  * Total offshore wind investment
8762  eqi_en_windoff_sum_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
8763                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
8764   
8765  *-------------------------------------------------------------------------------
8767   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
8769  *-------------------------------------------------------------------------------
8770  * Solar Powerplants (PV and CSP) to the electrical system
8771  *-------------------------------------------------------------------------------
8772   
8773  *-------------------------------------------------------------------------------
8775   
8776   
8777  * Capacity limits in the pv electrical sector
8778  eqq_en_mu_pv_c_brazil(solar_dist,solar_class,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
8779                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
8780   
8781  * Capacity limits in the csp electrical sector
8782  eqq_en_mu_csp_c_brazil(solar_dist,solar_class,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
8783                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
8784   
8785  * PV electrical generation plants (new)
8786  eqk_en_pv_c_brazil(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
8787                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
8788                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
8789   
8790  * CSP electrical generation plants (new)
8791  eqk_en_csp_c_brazil(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
8792                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
8793                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
8794   
8795  * Total PV energy production
8796  eqq_en_pv_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8797                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
8798   
8799  * Total CSP energy production
8800  eqq_en_csp_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8801                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
8802   
8803  * Total PV capacity
8804  eqk_en_pv_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8805                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
8806   
8807  * Total CSP capacity
8808  eqk_en_csp_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8809                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
8810   
8811  * Total PV investment
8812  eqi_en_pv_sum_c_brazil(t,tp1,n)$(map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
8813                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
8814   
8815  * Total CSP investment
8816  eqi_en_csp_sum_c_brazil(t,tp1,n)$(map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
8817                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
8818   
8819  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
8820  eqk_en_solar_comp_c_brazil(t,n,solar_dist)$(map_clt_n('c_brazil',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
8821                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
8822                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
8823   
8824   
8825   
8826  *-------------------------------------------------------------------------------
8828   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
8830  *-------------------------------------------------------------------------------
8831  * Technology development scenarios
8832  *-------------------------------------------------------------------------------
8833   
8835   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
8837  *-------------------------------------------------------------------------------
8838  * Oil Extraction
8839  * Options:
8840  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
8841  *-------------------------------------------------------------------------------
8842   
8844   
8845  * Capacity
8846  eqoilcap_c_brazil(t,tp1,n,oilg)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
8847      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
8848   
8849  * Production
8850  eqoilprod_c_brazil(t,tp1,n,oilg)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
8851      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
8852   
8853  eqq_out_oil_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8854      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
8855   
8856  * Cumulative production
8857  eqcum_oil_c_brazil(t,tp1,n,oilg)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
8858      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
8859   
8860  * Cost
8861  eqcost_oil_c_brazil(t,tp1,n,oilg)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
8862      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
8863                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
8864                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
8865   
8866  * Investments
8867  eqi_oil_c_brazil(t,tp1,n,oilg)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
8868      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
8869   
8870  * Total investment
8871  eqi_out_oil_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
8872      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
8873   
8874  * Emissions
8875  eqq_emi_out_oil_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8876      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
8877   
8878  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
8881  *-------------------------------------------------------------------------------
8882  * Uranium Resources
8883  *-------------------------------------------------------------------------------
8884   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
8887  *-------------------------------------------------------------------------------
8888  * Gas Resources
8889  *-------------------------------------------------------------------------------
8890   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
8893  *-------------------------------------------------------------------------------
8894  * Coal Resources
8895  *-------------------------------------------------------------------------------
8896   
8898   
8899   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
8901  *-------------------------------------------------------------------------------
8902  * Climate
8903  *
8904  * Represents the climate
8905  * - based on the DICE model equations
8906  * - Radiative forcing for non CO2 ghgs
8907  * - parameters calibrated to reproduce MAGICC6.4 default response
8908  *
8909  *  Options:
8910  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
8911  * - $setglobal cooperate_on_climate {'YES','NO'}
8912  * - 'YES'(default): Countries within a coalition act in cooperation
8913  *   'NO': Countries within a coalition act individually
8914  *
8915  *-------------------------------------------------------------------------------
8916   
8918   
8920   
8921  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
8924  *-------------------------------------------------------------------------------
8925  * Long-run Damages from Climate Change
8926  * - Economic impacts
8927  * - Adaptation
8928  *-------------------------------------------------------------------------------
8929   
8931   
8933   
8934  *-------------------------------------------------------------------------------
8936   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
8938  *-------------------------------------------------------------------------------
8939  * Light-duty Vehicles for Personal Transport
8940  *-------------------------------------------------------------------------------
8941   
8943   
8944  *** newcode
8945  eqq_inv_red_ban_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8946      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
8947   
8948  ***
8949  *- Number of light duty vehicles
8950  eqnb_veh_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8951      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
8952   
8953  *- Yearly energy demand of vehicles
8954  eqq_en_veh_c_brazil(jveh,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8955      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
8956   
8957  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
8958  eqq_el_edv_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8959      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
8960   
8961  *- Investment cost for hybrid vehicles
8962  eqmcost_inv_hybrid_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
8963                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
8964   
8965  *- Investment cost for plug-in hybrid vehicles
8966  eqmcost_inv_plghybrid_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
8967                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
8968   
8969  *- Investment cost for electric drive vehicles
8970  eqmcost_inv_edv_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
8971                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
8972   
8973  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
8976  *-------------------------------------------------------------------------------
8977  * Road Freight Transport
8978  *-------------------------------------------------------------------------------
8980   
8981  *-  Number of freight vehicles
8982  eqnb_frtveh_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8983                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
8984   
8985  *-  Yearly fuel consumption of freight vehicles
8986  eqq_en_frtveh_c_brazil(jfrt,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8987                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
8988   
8989  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
8990  eqq_el_frtedv_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8991                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
8992   
8993  *-  Investment cost for hbd_stfr vehicle
8994  eqmcost_inv_hbd_stfr_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
8995                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
8996   
8997  *-  Investment cost for plug-in hbd_stfr vehicle
8998  eqmcost_inv_plghbd_stfr_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
8999                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
9000   
9001  *-  Investment cost for electric drive vehicle
9002  eqmcost_inv_edv_stfr_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
9003                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
9004   
9005  *-------------------------------------------------------------------------------
9007   
9008   
9009   
9010   
9011   
9012   
9013  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
9015  *-------------------------------------------------------------------------------
9016  * Traditional Biomass
9017  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
9018  *  - require post_process to be launch before
9019  *-------------------------------------------------------------------------------
9020   
9022   
9023  * Optional modules
9024   
9025  * Policy modules
9026   
9027  * Calibration
9030   
9031   
9032  model witch_c_brazil /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
9034  *-------------------------------------------------------------------------------
9035  * Call modules by order
9036  *-------------------------------------------------------------------------------
9040   
9041  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
9043  *-------------------------------------------------------------------------------
9044  * Algorithm
9045  *-------------------------------------------------------------------------------
9046   
9048   
9049  eqobj_c_brazil
9050   
9051  *-------------------------------------------------------------------------------
9053   
9054  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
9056  *-------------------------------------------------------------------------------
9057  * Time
9058  * - Temporal structure
9059  * - Fixed time periods
9060  * - States of the world
9061  *-------------------------------------------------------------------------------
9062   
9064   
9065  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
9067  *-------------------------------------------------------------------------------
9068  * Geographic dimension and mapping with countries
9069  *-------------------------------------------------------------------------------
9070   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
9073  *-------------------------------------------------------------------------------
9074  * Non-Cooperative Setup
9075  *
9076  * Each region is defined as an individual coalition.
9077  *
9078  *-------------------------------------------------------------------------------
9079   
9081   
9082  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
9084  *-------------------------------------------------------------------------------
9085  * Welfare
9086  *-------------------------------------------------------------------------------
9087   
9089   
9090  equtility_c_brazil
9091   
9092  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
9095  *-------------------------------------------------------------------------------
9096  * Economy
9097  * - Production and Consumption definition
9098  * - Top-level of the production function
9099  * Options:
9100  * --original_ssp=1 : original SSP population and GDP data
9101  *-------------------------------------------------------------------------------
9102   
9104   
9105  eqk_c_brazil
9106  eqq_cc_c_brazil
9107  eqq_fen_c_brazil
9108  eqq_y_c_brazil
9109   
9110  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
9113  *-------------------------------------------------------------------------------
9114  * Energy sector
9115  *-------------------------------------------------------------------------------
9116   
9118   
9119  eq_mkt_clearing_oil_c_brazil
9120  eqcost_pes_c_brazil
9121  eqcost_ses_c_brazil
9122  eqk_en_c_brazil
9123  eqq_ces_el_c_brazil
9124  eqq_ces_nelgas_c_brazil
9125  eqq_el2_c_brazil
9126  eqq_el_c_brazil
9127  eqq_elff_c_brazil
9128  eqq_en_c_brazil
9129  eqq_en_in_c_brazil
9130  eqq_en_mu_c_brazil
9131  eqq_en_tree_c_brazil
9132  eqq_nel_c_brazil
9133  eqq_nelog_c_brazil
9134  eqq_fuel_c_brazil
9135  eqq_elffren_c_brazil
9136   
9137  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
9140  *-------------------------------------------------------------------------------
9141  * Carbon Emissions
9142  * - Total CO2 emissions and CO2 Fossil fuel and Industry
9143  * - CO2 emission costs
9144  * - GHG permit market
9145  *-------------------------------------------------------------------------------
9146   
9148   
9149  eqq_emi_lim_c_brazil
9150  ***newcode
9151  eqq_emi_lim_USAc_brazil
9152  ***
9153  eqq_emi_tree_c_brazil
9154  eqq_emi_co2ffi_c_brazil
9155   
9156  eqcost_emi_co2_c_brazil
9157   
9158  eq_mkt_clearing_nip_c_brazil
9159   
9160  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
9163  *-------------------------------------------------------------------------------
9164  * Research & Development
9165  * Options:
9166  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
9167  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
9168  *-------------------------------------------------------------------------------
9169   
9171   
9172  eqk_rd_c_brazil
9173  eqspill_coop_c_brazil
9174  eqspill_lead_c_brazil
9175  eqspill_foll_c_brazil
9176  eqmcost_inv_back_c_brazil
9177  eqmcost_inv_back_lbd_c_brazil
9178   
9179  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
9182  *-------------------------------------------------------------------------------
9183  * Default Climate Policy Implementation
9184  *
9185  * Options:
9186  *    --policy={bau (default),ctax}
9187  *        Implement a climate policy setting
9188  *  [ --scen= ]
9189  *        Policy variant.
9190  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
9191  *          * XXX for a fixed percentage/yr (e.g. 5) growth
9192  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
9193  *  [ --ctax_year=2020 ]
9194  *        Starting year of the carbon tax
9195  *  [ --ctax_initial=30 ]
9196  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
9197  *
9198  *-------------------------------------------------------------------------------
9200   
9201  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
9203  *-------------------------------------------------------------------------------
9204  * Energy efficiency
9205  *-------------------------------------------------------------------------------
9206   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
9209  *-------------------------------------------------------------------------------
9210  * Hydro Power
9211  *-------------------------------------------------------------------------------
9212   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
9215  *-------------------------------------------------------------------------------
9216  * System Integration:
9217  * - Capacity constraint
9218  * - Flexibility constraint
9219  * - Grid Investment
9220  * - Capacity growth constraint
9221  *-------------------------------------------------------------------------------
9222   
9224   
9225  eqq_elintren_c_brazil
9226  eqflex_c_brazil
9227  eqk_en_grid_c_brazil
9228  eqk_en_grid_to_k_en_c_brazil
9229  eqfirm_capacity_c_brazil
9230  eqcap_growth_c_brazil
9231   
9232  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
9235  *-------------------------------------------------------------------------------
9236  * Nuclear power plants
9237  *-------------------------------------------------------------------------------
9238   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
9241  *-------------------------------------------------------------------------------
9242  * GHG module
9243  * - CH4 FFI + CH4 waste + CH4 open fires
9244  * - N2O FFI + N2O waste + N2O open fires
9245  *-------------------------------------------------------------------------------
9246   
9248   
9249  eqq_emi_waste_c_brazil
9250  eqq_emi_n2o_ffi_c_brazil
9251  eqq_emi_ch4_ffi_c_brazil
9252   
9253  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
9256  *-------------------------------------------------------------------------------
9257  * F-gases
9258  * - LLF
9259  * - SLF
9260  *-------------------------------------------------------------------------------
9261   
9263   
9264  eqq_emi_fgases_c_brazil
9265   
9266  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
9269  *-------------------------------------------------------------------------------
9270  * Landuse [simplified version of the land-use model]
9271  *-------------------------------------------------------------------------------
9272   
9274   
9275  eq_wbio_c_brazil
9276  eqcost_pes_wbio_c_brazil
9277   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
9280  *-------------------------------------------------------------------------------
9281  * Bioenergy power plant
9282  *-------------------------------------------------------------------------------
9283   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
9286  *-------------------------------------------------------------------------------
9287  * Traditional Biofuels
9288  * - Requires the precedence of mod_landuse
9289  *-------------------------------------------------------------------------------
9290   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
9293  *-------------------------------------------------------------------------------
9294  * Advanced biofuel
9295  * - Require the precedence of mod_landuse
9296  *-------------------------------------------------------------------------------
9297   
9299   
9300  eqq_en_lim_advbiofuel_c_brazil
9301  eqmcost_fuel_advbiofuel_c_brazil
9302   
9303  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
9306  *-------------------------------------------------------------------------------
9307  * Carbon Capture and Sequestration
9308  *-------------------------------------------------------------------------------
9309   
9311   
9312  eqq_emi_ccs_c_brazil
9313  eqcost_emi_sinks_c_brazil
9314  eq_stor_ccs_cum_c_brazil
9315  eq_emi_stor_ccs_c_brazil
9316  eq_emi_leak_ccs_c_brazil
9317   
9318  *-------------------------------------------------------------------------------
9320   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
9322  *-------------------------------------------------------------------------------
9323  * Coal for non-electric sectors
9324  * - Coke Plants
9325  * - Industrial and Commercial combined-heat-and-power (CHP)
9326  * - Others
9327  *-------------------------------------------------------------------------------
9328   
9330   
9331  eqcost_en_nelcoal_c_brazil
9332  eqq_ncoalabat_monotone_c_brazil
9333  eqq_en_nelcoalccs_max_c_brazil
9334   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
9337  *-------------------------------------------------------------------------------
9338  * Wind energy module
9339  * - onshore and offshore
9340  *-------------------------------------------------------------------------------
9341   
9343   
9344  eqq_en_mu_windon_c_brazil
9345  eqq_en_mu_windoff_c_brazil
9346  eqk_en_windon_c_brazil
9347  eqk_en_windoff_c_brazil
9348  eqq_en_windon_sum_c_brazil
9349  eqq_en_windoff_sum_c_brazil
9350  eqk_en_windon_sum_c_brazil
9351  eqk_en_windoff_sum_c_brazil
9352  eqi_en_windon_sum_c_brazil
9353  eqi_en_windoff_sum_c_brazil
9354   
9356   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
9358  *-------------------------------------------------------------------------------
9359  * Solar Powerplants (PV and CSP) to the electrical system
9360  *-------------------------------------------------------------------------------
9361   
9362  *-------------------------------------------------------------------------------
9364   
9365  eqq_en_mu_pv_c_brazil
9366  eqq_en_mu_csp_c_brazil
9367  eqk_en_pv_c_brazil
9368  eqk_en_csp_c_brazil
9369  eqq_en_pv_sum_c_brazil
9370  eqq_en_csp_sum_c_brazil
9371  eqk_en_pv_sum_c_brazil
9372  eqk_en_csp_sum_c_brazil
9373  eqi_en_pv_sum_c_brazil
9374  eqi_en_csp_sum_c_brazil
9375  eqk_en_solar_comp_c_brazil
9376   
9377  *-------------------------------------------------------------------------------
9379   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
9381  *-------------------------------------------------------------------------------
9382  * Technology development scenarios
9383  *-------------------------------------------------------------------------------
9384   
9386   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
9388  *-------------------------------------------------------------------------------
9389  * Oil Extraction
9390  * Options:
9391  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
9392  *-------------------------------------------------------------------------------
9393   
9395   
9396  eqoilcap_c_brazil
9397  eqoilprod_c_brazil
9398  eqq_out_oil_c_brazil
9399  eqcum_oil_c_brazil
9400  eqcost_oil_c_brazil
9401  eqi_oil_c_brazil
9402  eqi_out_oil_c_brazil
9403  eqq_emi_out_oil_c_brazil
9404   
9405  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
9408  *-------------------------------------------------------------------------------
9409  * Uranium Resources
9410  *-------------------------------------------------------------------------------
9411   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
9414  *-------------------------------------------------------------------------------
9415  * Gas Resources
9416  *-------------------------------------------------------------------------------
9417   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
9420  *-------------------------------------------------------------------------------
9421  * Coal Resources
9422  *-------------------------------------------------------------------------------
9423   
9425   
9426   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
9428  *-------------------------------------------------------------------------------
9429  * Climate
9430  *
9431  * Represents the climate
9432  * - based on the DICE model equations
9433  * - Radiative forcing for non CO2 ghgs
9434  * - parameters calibrated to reproduce MAGICC6.4 default response
9435  *
9436  *  Options:
9437  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
9438  * - $setglobal cooperate_on_climate {'YES','NO'}
9439  * - 'YES'(default): Countries within a coalition act in cooperation
9440  *   'NO': Countries within a coalition act individually
9441  *
9442  *-------------------------------------------------------------------------------
9443   
9445   
9447   
9448  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
9451  *-------------------------------------------------------------------------------
9452  * Long-run Damages from Climate Change
9453  * - Economic impacts
9454  * - Adaptation
9455  *-------------------------------------------------------------------------------
9456   
9458   
9460   
9461  *-------------------------------------------------------------------------------
9463   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
9465  *-------------------------------------------------------------------------------
9466  * Light-duty Vehicles for Personal Transport
9467  *-------------------------------------------------------------------------------
9468   
9470   
9471  eqnb_veh_c_brazil
9472  eqq_en_veh_c_brazil
9473  eqq_el_edv_c_brazil
9474  eqmcost_inv_hybrid_c_brazil
9475  eqmcost_inv_plghybrid_c_brazil
9476  eqmcost_inv_edv_c_brazil
9477  *** newcode
9478  eqq_inv_red_ban_c_brazil
9479  ***
9480  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
9483  *-------------------------------------------------------------------------------
9484  * Road Freight Transport
9485  *-------------------------------------------------------------------------------
9487   
9488  eqnb_frtveh_c_brazil
9489  eqq_en_frtveh_c_brazil
9490  eqq_el_frtedv_c_brazil
9491  eqmcost_inv_hbd_stfr_c_brazil
9492  eqmcost_inv_plghbd_stfr_c_brazil
9493  eqmcost_inv_edv_stfr_c_brazil
9494   
9495  *-------------------------------------------------------------------------------
9497   
9498   
9499   
9500   
9501   
9502   
9503  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
9505  *-------------------------------------------------------------------------------
9506  * Traditional Biomass
9507  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
9508  *  - require post_process to be launch before
9509  *-------------------------------------------------------------------------------
9510   
9512   
9513  * Optional modules
9514   
9515  * Policy modules
9516   
9517  * Calibration
9520  /;
9521   
9522  witch_c_brazil.optfile=1;   # the option file solvername.opt is to be used
9523  witch_c_brazil.holdfixed=1; # treat fixed values as constant
9524  witch_c_brazil.scaleopt=1;  # Use scaling for better gradients estimation
9525  witch_c_brazil.solvelink=3; # Use parallel or sequential solving
9526   
9531   
9532  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
9534  *-------------------------------------------------------------------------------
9535  * Call modules by order
9536  *-------------------------------------------------------------------------------
9540   
9541  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
9543  *-------------------------------------------------------------------------------
9544  * Algorithm
9545  *-------------------------------------------------------------------------------
9546   
9548   
9549  eqobj_c_canada
9550   
9551  *-------------------------------------------------------------------------------
9553   
9554  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
9556  *-------------------------------------------------------------------------------
9557  * Time
9558  * - Temporal structure
9559  * - Fixed time periods
9560  * - States of the world
9561  *-------------------------------------------------------------------------------
9562   
9564   
9565  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
9567  *-------------------------------------------------------------------------------
9568  * Geographic dimension and mapping with countries
9569  *-------------------------------------------------------------------------------
9570   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
9573  *-------------------------------------------------------------------------------
9574  * Non-Cooperative Setup
9575  *
9576  * Each region is defined as an individual coalition.
9577  *
9578  *-------------------------------------------------------------------------------
9579   
9581   
9582  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
9584  *-------------------------------------------------------------------------------
9585  * Welfare
9586  *-------------------------------------------------------------------------------
9587   
9589   
9590  equtility_c_canada
9591   
9592  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
9595  *-------------------------------------------------------------------------------
9596  * Economy
9597  * - Production and Consumption definition
9598  * - Top-level of the production function
9599  * Options:
9600  * --original_ssp=1 : original SSP population and GDP data
9601  *-------------------------------------------------------------------------------
9602   
9604   
9605  eqk_c_canada
9606  eqq_cc_c_canada
9607  eqq_fen_c_canada
9608  eqq_y_c_canada
9609   
9610  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
9613  *-------------------------------------------------------------------------------
9614  * Energy sector
9615  *-------------------------------------------------------------------------------
9616   
9618   
9619  eq_mkt_clearing_oil_c_canada
9620  eqcost_pes_c_canada
9621  eqcost_ses_c_canada
9622  eqk_en_c_canada
9623  eqq_ces_el_c_canada
9624  eqq_ces_nelgas_c_canada
9625  eqq_el2_c_canada
9626  eqq_el_c_canada
9627  eqq_elff_c_canada
9628  eqq_en_c_canada
9629  eqq_en_in_c_canada
9630  eqq_en_mu_c_canada
9631  eqq_en_tree_c_canada
9632  eqq_nel_c_canada
9633  eqq_nelog_c_canada
9634  eqq_fuel_c_canada
9635  eqq_elffren_c_canada
9636   
9637  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
9640  *-------------------------------------------------------------------------------
9641  * Carbon Emissions
9642  * - Total CO2 emissions and CO2 Fossil fuel and Industry
9643  * - CO2 emission costs
9644  * - GHG permit market
9645  *-------------------------------------------------------------------------------
9646   
9648   
9649  eqq_emi_lim_c_canada
9650  ***newcode
9651  eqq_emi_lim_USAc_canada
9652  ***
9653  eqq_emi_tree_c_canada
9654  eqq_emi_co2ffi_c_canada
9655   
9656  eqcost_emi_co2_c_canada
9657   
9658  eq_mkt_clearing_nip_c_canada
9659   
9660  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
9663  *-------------------------------------------------------------------------------
9664  * Research & Development
9665  * Options:
9666  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
9667  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
9668  *-------------------------------------------------------------------------------
9669   
9671   
9672  eqk_rd_c_canada
9673  eqspill_coop_c_canada
9674  eqspill_lead_c_canada
9675  eqspill_foll_c_canada
9676  eqmcost_inv_back_c_canada
9677  eqmcost_inv_back_lbd_c_canada
9678   
9679  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
9682  *-------------------------------------------------------------------------------
9683  * Default Climate Policy Implementation
9684  *
9685  * Options:
9686  *    --policy={bau (default),ctax}
9687  *        Implement a climate policy setting
9688  *  [ --scen= ]
9689  *        Policy variant.
9690  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
9691  *          * XXX for a fixed percentage/yr (e.g. 5) growth
9692  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
9693  *  [ --ctax_year=2020 ]
9694  *        Starting year of the carbon tax
9695  *  [ --ctax_initial=30 ]
9696  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
9697  *
9698  *-------------------------------------------------------------------------------
9700   
9701  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
9703  *-------------------------------------------------------------------------------
9704  * Energy efficiency
9705  *-------------------------------------------------------------------------------
9706   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
9709  *-------------------------------------------------------------------------------
9710  * Hydro Power
9711  *-------------------------------------------------------------------------------
9712   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
9715  *-------------------------------------------------------------------------------
9716  * System Integration:
9717  * - Capacity constraint
9718  * - Flexibility constraint
9719  * - Grid Investment
9720  * - Capacity growth constraint
9721  *-------------------------------------------------------------------------------
9722   
9724   
9725  eqq_elintren_c_canada
9726  eqflex_c_canada
9727  eqk_en_grid_c_canada
9728  eqk_en_grid_to_k_en_c_canada
9729  eqfirm_capacity_c_canada
9730  eqcap_growth_c_canada
9731   
9732  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
9735  *-------------------------------------------------------------------------------
9736  * Nuclear power plants
9737  *-------------------------------------------------------------------------------
9738   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
9741  *-------------------------------------------------------------------------------
9742  * GHG module
9743  * - CH4 FFI + CH4 waste + CH4 open fires
9744  * - N2O FFI + N2O waste + N2O open fires
9745  *-------------------------------------------------------------------------------
9746   
9748   
9749  eqq_emi_waste_c_canada
9750  eqq_emi_n2o_ffi_c_canada
9751  eqq_emi_ch4_ffi_c_canada
9752   
9753  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
9756  *-------------------------------------------------------------------------------
9757  * F-gases
9758  * - LLF
9759  * - SLF
9760  *-------------------------------------------------------------------------------
9761   
9763   
9764  eqq_emi_fgases_c_canada
9765   
9766  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
9769  *-------------------------------------------------------------------------------
9770  * Landuse [simplified version of the land-use model]
9771  *-------------------------------------------------------------------------------
9772   
9774   
9775  eq_wbio_c_canada
9776  eqcost_pes_wbio_c_canada
9777   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
9780  *-------------------------------------------------------------------------------
9781  * Bioenergy power plant
9782  *-------------------------------------------------------------------------------
9783   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
9786  *-------------------------------------------------------------------------------
9787  * Traditional Biofuels
9788  * - Requires the precedence of mod_landuse
9789  *-------------------------------------------------------------------------------
9790   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
9793  *-------------------------------------------------------------------------------
9794  * Advanced biofuel
9795  * - Require the precedence of mod_landuse
9796  *-------------------------------------------------------------------------------
9797   
9799   
9800  eqq_en_lim_advbiofuel_c_canada
9801  eqmcost_fuel_advbiofuel_c_canada
9802   
9803  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
9806  *-------------------------------------------------------------------------------
9807  * Carbon Capture and Sequestration
9808  *-------------------------------------------------------------------------------
9809   
9811   
9812  eqq_emi_ccs_c_canada
9813  eqcost_emi_sinks_c_canada
9814  eq_stor_ccs_cum_c_canada
9815  eq_emi_stor_ccs_c_canada
9816  eq_emi_leak_ccs_c_canada
9817   
9818  *-------------------------------------------------------------------------------
9820   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
9822  *-------------------------------------------------------------------------------
9823  * Coal for non-electric sectors
9824  * - Coke Plants
9825  * - Industrial and Commercial combined-heat-and-power (CHP)
9826  * - Others
9827  *-------------------------------------------------------------------------------
9828   
9830   
9831  eqcost_en_nelcoal_c_canada
9832  eqq_ncoalabat_monotone_c_canada
9833  eqq_en_nelcoalccs_max_c_canada
9834   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
9837  *-------------------------------------------------------------------------------
9838  * Wind energy module
9839  * - onshore and offshore
9840  *-------------------------------------------------------------------------------
9841   
9843   
9844  eqq_en_mu_windon_c_canada
9845  eqq_en_mu_windoff_c_canada
9846  eqk_en_windon_c_canada
9847  eqk_en_windoff_c_canada
9848  eqq_en_windon_sum_c_canada
9849  eqq_en_windoff_sum_c_canada
9850  eqk_en_windon_sum_c_canada
9851  eqk_en_windoff_sum_c_canada
9852  eqi_en_windon_sum_c_canada
9853  eqi_en_windoff_sum_c_canada
9854   
9856   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
9858  *-------------------------------------------------------------------------------
9859  * Solar Powerplants (PV and CSP) to the electrical system
9860  *-------------------------------------------------------------------------------
9861   
9862  *-------------------------------------------------------------------------------
9864   
9865  eqq_en_mu_pv_c_canada
9866  eqq_en_mu_csp_c_canada
9867  eqk_en_pv_c_canada
9868  eqk_en_csp_c_canada
9869  eqq_en_pv_sum_c_canada
9870  eqq_en_csp_sum_c_canada
9871  eqk_en_pv_sum_c_canada
9872  eqk_en_csp_sum_c_canada
9873  eqi_en_pv_sum_c_canada
9874  eqi_en_csp_sum_c_canada
9875  eqk_en_solar_comp_c_canada
9876   
9877  *-------------------------------------------------------------------------------
9879   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
9881  *-------------------------------------------------------------------------------
9882  * Technology development scenarios
9883  *-------------------------------------------------------------------------------
9884   
9886   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
9888  *-------------------------------------------------------------------------------
9889  * Oil Extraction
9890  * Options:
9891  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
9892  *-------------------------------------------------------------------------------
9893   
9895   
9896  eqoilcap_c_canada
9897  eqoilprod_c_canada
9898  eqq_out_oil_c_canada
9899  eqcum_oil_c_canada
9900  eqcost_oil_c_canada
9901  eqi_oil_c_canada
9902  eqi_out_oil_c_canada
9903  eqq_emi_out_oil_c_canada
9904   
9905  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
9908  *-------------------------------------------------------------------------------
9909  * Uranium Resources
9910  *-------------------------------------------------------------------------------
9911   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
9914  *-------------------------------------------------------------------------------
9915  * Gas Resources
9916  *-------------------------------------------------------------------------------
9917   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
9920  *-------------------------------------------------------------------------------
9921  * Coal Resources
9922  *-------------------------------------------------------------------------------
9923   
9925   
9926   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
9928  *-------------------------------------------------------------------------------
9929  * Climate
9930  *
9931  * Represents the climate
9932  * - based on the DICE model equations
9933  * - Radiative forcing for non CO2 ghgs
9934  * - parameters calibrated to reproduce MAGICC6.4 default response
9935  *
9936  *  Options:
9937  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
9938  * - $setglobal cooperate_on_climate {'YES','NO'}
9939  * - 'YES'(default): Countries within a coalition act in cooperation
9940  *   'NO': Countries within a coalition act individually
9941  *
9942  *-------------------------------------------------------------------------------
9943   
9945   
9947   
9948  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
9951  *-------------------------------------------------------------------------------
9952  * Long-run Damages from Climate Change
9953  * - Economic impacts
9954  * - Adaptation
9955  *-------------------------------------------------------------------------------
9956   
9958   
9960   
9961  *-------------------------------------------------------------------------------
9963   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
9965  *-------------------------------------------------------------------------------
9966  * Light-duty Vehicles for Personal Transport
9967  *-------------------------------------------------------------------------------
9968   
9970   
9971  eqnb_veh_c_canada
9972  eqq_en_veh_c_canada
9973  eqq_el_edv_c_canada
9974  eqmcost_inv_hybrid_c_canada
9975  eqmcost_inv_plghybrid_c_canada
9976  eqmcost_inv_edv_c_canada
9977  *** newcode
9978  eqq_inv_red_ban_c_canada
9979  ***
9980  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
9983  *-------------------------------------------------------------------------------
9984  * Road Freight Transport
9985  *-------------------------------------------------------------------------------
9987   
9988  eqnb_frtveh_c_canada
9989  eqq_en_frtveh_c_canada
9990  eqq_el_frtedv_c_canada
9991  eqmcost_inv_hbd_stfr_c_canada
9992  eqmcost_inv_plghbd_stfr_c_canada
9993  eqmcost_inv_edv_stfr_c_canada
9994   
9995  *-------------------------------------------------------------------------------
9997   
9998   
9999   
10000   
10001   
10002   
10003  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
10005  *-------------------------------------------------------------------------------
10006  * Traditional Biomass
10007  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
10008  *  - require post_process to be launch before
10009  *-------------------------------------------------------------------------------
10010   
10012   
10013  * Optional modules
10014   
10015  * Policy modules
10016   
10017  * Calibration
10020  ;
10021   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
10023  *-------------------------------------------------------------------------------
10024  * Call modules by order
10025  *-------------------------------------------------------------------------------
10029   
10030  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
10032  *-------------------------------------------------------------------------------
10033  * Algorithm
10034  *-------------------------------------------------------------------------------
10035   
10037   
10039  * Add the component of the (maximized) objective function as required by the ADMM algorithm
10040  eqobj_c_canada..
10041      OBJADMM =e= UTILITY -
10042          sum(t, rho_admm('oil',t) / 2 *
10043              sum(n$(map_clt_n('c_canada',n) and trading_t('oil',t,n)),
10044                  power(
10045                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
10046                      x_admm('oil',t,n) +
10047                      xavg_admm('oil',t) +
10048                      u_admm('oil', t)
10049                  ,2)
10050              )) -
10051          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
10052              sum(n$(map_clt_n('c_canada',n) and trading_t(c_mkt,t,n)),
10053                  power(
10054                      Q_EMI(c_mkt,t,n) -
10055                      x_admm(c_mkt,t,n) +
10056                      xavg_admm(c_mkt,t) +
10057                      u_admm(c_mkt,t)
10058                  ,2)
10059              ))
10060      ;
10062   
10063  *-------------------------------------------------------------------------------
10065   
10066  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
10068  *-------------------------------------------------------------------------------
10069  * Time
10070  * - Temporal structure
10071  * - Fixed time periods
10072  * - States of the world
10073  *-------------------------------------------------------------------------------
10074   
10076   
10077  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
10079  *-------------------------------------------------------------------------------
10080  * Geographic dimension and mapping with countries
10081  *-------------------------------------------------------------------------------
10082   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
10085  *-------------------------------------------------------------------------------
10086  * Non-Cooperative Setup
10087  *
10088  * Each region is defined as an individual coalition.
10089  *
10090  *-------------------------------------------------------------------------------
10091   
10093   
10094  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
10096  *-------------------------------------------------------------------------------
10097  * Welfare
10098  *-------------------------------------------------------------------------------
10099   
10101   
10102  * Objective function - Welfare to be maximized
10103  equtility_c_canada..
10104      UTILITY =e=
10105   
10106  * Negishi SWF
10108   
10109  * Welfare functions based on CEBGE
10112                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
10113                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
10114                      ((sum(n$map_clt_n('c_canada',n),
10115                        (l(t,n) / sum(nn$map_clt_n('c_canada',nn), l(t,nn))) *
10116                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
10117                       )**(1 / (1 - gamma))
10118                      )**(1 - eta) ) +
10119                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
10120                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
10121                      ((sum(n$map_clt_n('c_canada',n),
10122                        (l(t,n) / sum(nn$map_clt_n('c_canada',nn), l(t,nn))) *
10123                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
10124                       )**(1 / (1 - gamma))
10125                      )**(1 - eta) )
10126                  )**(1/(1 - eta)) * 1e6
10129   
10130   
10131  ;
10132   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
10135  *-------------------------------------------------------------------------------
10136  * Economy
10137  * - Production and Consumption definition
10138  * - Top-level of the production function
10139  * Options:
10140  * --original_ssp=1 : original SSP population and GDP data
10141  *-------------------------------------------------------------------------------
10142   
10144   
10145  * Production
10146  eqq_y_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10147   
10148      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
10149                     ## Climate feedback on economy
10151                     ## Net cost of Primary and Secondary Energy Sources
10152                     - sum(fuel, COST_FUEL(fuel,t,n))
10153                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
10154                     - sum(cce, COST_EMI(cce,t,n))
10155                     ## Carbon tax
10156                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
10157                     ## Additionnal costs on gross product
10158                     - sum(ccy, COST_Y(ccy,t,n))
10159  ;
10160   
10161  * Consumption
10162  eqq_cc_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
10163      Q('cc',t,n) =e= Q('y',t,n)
10164                      ## Investments in goods g (final good, adaptation)
10165                      -sum(g, I(g,t,n))
10166                      ## Investments in r&d
10167                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
10168                      ## Investments in energy technlogies
10169                      -sum(jinv, I_EN(jinv,t,n))
10170                       ## Investments in grid infrastructures
10171                      - I_EN_GRID(t,n)
10172                      ## Investments in extraction sector
10173                      -sum(extract(f), I_OUT(f,t,n))
10174                      ## O&M for energy technlogies
10175                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
10176                      ## O&M for extraction
10177                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
10178                      ## Energy technology penalty costs
10179                      -sum(jpenalty(j), COST_EN(j,t,n))
10180  ;
10181   
10182  * Capital accumulation
10183  eqk_c_canada(g,t,tp1,n)$(map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
10184      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
10185   
10186  * Energy services
10187  eqq_fen_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10188      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
10189   
10190  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
10193  *-------------------------------------------------------------------------------
10194  * Energy sector
10195  *-------------------------------------------------------------------------------
10196   
10198   
10199  *-------------------------------------------------------------------------------
10200  * Production - Energy sector
10201  *-------------------------------------------------------------------------------
10202   
10203  eqq_en_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10204      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
10205   
10206  *-------------------------------------------------------------------------------
10207  * Production - Electrical sector
10208  *-------------------------------------------------------------------------------
10209   
10210  eqq_el_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10211      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
10212   
10213  eqq_el2_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10214      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
10215   
10216  eqq_elffren_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10217      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
10218  eqq_elff_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10219      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
10220   
10221  eqq_ces_el_c_canada(ices_el,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
10222      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
10223  ;
10224   
10225  *-------------------------------------------------------------------------------
10226  * Production - Non-electrical sector
10227  *-------------------------------------------------------------------------------
10228   
10229  eqq_nel_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10230      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
10231   
10232  eqq_nelog_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10233      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
10234  ;
10235  eqq_ces_nelgas_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10236      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
10237   
10238  *-------------------------------------------------------------------------------
10239  * PES and fuels
10240  *-------------------------------------------------------------------------------
10241   
10242  eqq_fuel_c_canada(fuel,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
10243      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
10244   
10245  *-------------------------------------------------------------------------------
10246  * Cost
10247  *-------------------------------------------------------------------------------
10248   
10249  * Net cost of Primary Energy Supplies
10250  eqcost_pes_c_canada(f,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
10251      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
10252                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
10253   
10254  * Net cost of Secondary Energy Supplies
10255  eqcost_ses_c_canada(s,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10256      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
10257   
10258   
10259  *-------------------------------------------------------------------------------
10260  * Market balances
10261  *-------------------------------------------------------------------------------
10262   
10263  eq_mkt_clearing_oil_c_canada(t,'c_canada')$(internal('oil'))..
10264      sum( n$(map_clt_n('c_canada',n) and trading_t('oil',t,n)),
10265          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
10266      ) =e= 0;
10267   
10268  *-------------------------------------------------------------------------------
10269  * New capital in the energy sector
10270  *-------------------------------------------------------------------------------
10271   
10272  * Electrical generation plants (new)
10273  eqk_en_c_canada(jinv,t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
10274      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
10275                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
10276   
10277  *-------------------------------------------------------------------------------
10278  * ENERGY
10279  *-------------------------------------------------------------------------------
10280   
10281  * Capacity limits in the electrical sector
10282  eqq_en_mu_c_canada(jel,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
10283      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
10284   
10285  * Efficiency of energy technology sector
10286  eqq_en_in_c_canada(jfed,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
10287      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
10288                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
10289   
10290  * Energy generation "tree"
10291  eqq_en_tree_c_canada(j,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
10292      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
10293   
10294  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
10297  *-------------------------------------------------------------------------------
10298  * Carbon Emissions
10299  * - Total CO2 emissions and CO2 Fossil fuel and Industry
10300  * - CO2 emission costs
10301  * - GHG permit market
10302  *-------------------------------------------------------------------------------
10303   
10305   
10306  * GHG emission cap
10307  eqq_emi_lim_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
10308      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
10309                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
10310   
10311  ***newcode
10312  eqq_emi_lim_USAc_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
10313  ***
10314   
10315  * Compute total and sectoral emissions
10316  eqq_emi_tree_c_canada(t,n,e)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
10317      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
10318   
10319  * Industrial CO2 emissions
10320  eqq_emi_co2ffi_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10321      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
10322                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
10323                              # Emissions from biomass
10324                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
10325                              # Emissions from fuel extraction
10326                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
10327                              # Captured emissions
10328                              sum(sink, Q_EMI(sink,t,n));
10329   
10330  * CO2 emission costs
10331  eqcost_emi_co2_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10332      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
10333   
10334  * Emission permit market clearing for internal market
10335  eq_mkt_clearing_nip_c_canada(c_mkt,t,'c_canada')$(internal(c_mkt))..
10336      sum(n$(map_clt_n('c_canada',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
10337   
10338  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
10341  *-------------------------------------------------------------------------------
10342  * Research & Development
10343  * Options:
10344  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
10345  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
10346  *-------------------------------------------------------------------------------
10347   
10349   
10350  * Knowledge stock accumulation
10351  eqk_rd_c_canada(rd,t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
10352                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
10353                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
10354                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
10355                                        SPILL(rd,t,n)**rd_coef(rd,'d');
10356   
10357  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
10358  eqspill_coop_c_canada(rd,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_canada'))..
10359          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
10360                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_canada',nn)), K_RD(rd,t,nn)) +
10361                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_canada',nn))), K_RD.l(rd,t,nn))
10362                            ) *
10363                            (
10364                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_canada',nn)), K_RD(rd,t,nn)) +
10365                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_canada',nn))), K_RD.l(rd,t,nn))
10366                              ) - K_RD(rd,t,n)
10367                            );
10368   
10369  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
10370  eqspill_lead_c_canada(rd,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_canada')) and leadrd(rd,n))..
10371                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
10372   
10373  * No-cooperation : a follower sees is negative effect on the quantity he can grab
10374  eqspill_foll_c_canada(rd,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_canada')) and (not leadrd(rd,n)))..
10375                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
10376   
10377  *- Only LbR (without learning by doing)
10378  eqmcost_inv_back_c_canada(jrd,t,tt,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
10379                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
10380                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
10381   
10382  *- LbR together with learning by doing ==> Two-factor learning curve
10383  eqmcost_inv_back_lbd_c_canada(jrd,t,tt,tfirst,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
10384                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
10385                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
10386                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
10387   
10388  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
10391  *-------------------------------------------------------------------------------
10392  * Default Climate Policy Implementation
10393  *
10394  * Options:
10395  *    --policy={bau (default),ctax}
10396  *        Implement a climate policy setting
10397  *  [ --scen= ]
10398  *        Policy variant.
10399  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
10400  *          * XXX for a fixed percentage/yr (e.g. 5) growth
10401  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
10402  *  [ --ctax_year=2020 ]
10403  *        Starting year of the carbon tax
10404  *  [ --ctax_initial=30 ]
10405  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
10406  *
10407  *-------------------------------------------------------------------------------
10409   
10410  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
10412  *-------------------------------------------------------------------------------
10413  * Energy efficiency
10414  *-------------------------------------------------------------------------------
10415   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
10418  *-------------------------------------------------------------------------------
10419  * Hydro Power
10420  *-------------------------------------------------------------------------------
10421   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
10424  *-------------------------------------------------------------------------------
10425  * System Integration:
10426  * - Capacity constraint
10427  * - Flexibility constraint
10428  * - Grid Investment
10429  * - Capacity growth constraint
10430  *-------------------------------------------------------------------------------
10431   
10433   
10434   
10435  * Renewable CES
10436   
10437  * Definition of the renewable CES
10438  eqq_elintren_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10439      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
10440   
10441  * Capacity constraint
10442   
10444  eqfirm_capacity_c_canada(t,n)$(map_clt_n('c_canada',n) and (not tfix(t)) and year(t) gt 2005)..
10445                   sum(jel_firm, K_EN(jel_firm,t,n))
10446                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
10447                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
10448                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
10449                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
10450                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
10451                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
10452                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
10453                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
10454                                       ) / yearly_hours
10455  ;
10457   
10458  * Flexibility constraint
10459  eqflex_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10460          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
10461                             ( Q_EN('el',t,n) -
10462                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
10463                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
10464                             ) * flex_coeff('load')
10465  ;
10466   
10467  * Grid
10468   
10469  ** Grid depreciation and investments
10470  eqk_en_grid_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
10471                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
10472                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
10473   
10474  ** Grid adjustment to power capacity
10475  eqk_en_grid_to_k_en_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10476                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
10477                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
10478                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
10479                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
10480                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
10481                                     ) / grid_cost +
10482                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
10483                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
10484                                      K_EN('elcsp',t,n);
10485  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
10486   
10487  * Capacity growth constraint
10488  eqcap_growth_c_canada(jinv,t,tp1,tp2,n)$((map_clt_n('c_canada',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
10489                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
10490                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
10491   
10492  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
10495  *-------------------------------------------------------------------------------
10496  * Nuclear power plants
10497  *-------------------------------------------------------------------------------
10498   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
10501  *-------------------------------------------------------------------------------
10502  * GHG module
10503  * - CH4 FFI + CH4 waste + CH4 open fires
10504  * - N2O FFI + N2O waste + N2O open fires
10505  *-------------------------------------------------------------------------------
10506   
10508   
10509  * CH4, N2O waste emissions
10510  eqq_emi_waste_c_canada(waste,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
10511                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
10512   
10513  * n2o FFI
10514  eqq_emi_n2o_ffi_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
10515    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
10516                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
10517                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
10518                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
10519                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
10520                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
10521                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
10522                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
10523                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
10524                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
10525                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
10526                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
10527                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
10528                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
10529                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
10530                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
10531                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
10532                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
10533                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
10534                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
10535                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
10536                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
10537                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
10538                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
10539                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
10540                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
10541                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
10542                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
10543                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
10544                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
10545                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
10546   
10547  * ch4 FFI
10548  eqq_emi_ch4_ffi_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
10549    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
10552  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
10553  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
10554                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
10555                             smax(tt$(year(tt) eq 2015),
10556                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
10559  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
10560  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
10561                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
10562   
10563  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
10566  *-------------------------------------------------------------------------------
10567  * F-gases
10568  * - LLF
10569  * - SLF
10570  *-------------------------------------------------------------------------------
10571   
10573   
10574  * F-gases emissions
10575  eqq_emi_fgases_c_canada(fgases,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
10576                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
10577   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
10580  *-------------------------------------------------------------------------------
10581  * Landuse [simplified version of the land-use model]
10582  *-------------------------------------------------------------------------------
10583   
10585   
10586  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
10587  eq_wbio_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10588      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
10589   
10591  * Cost of all woody biomass produced for advanced biofuels and woody biomass
10592  eqcost_pes_wbio_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10593      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
10595   
10596  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
10599  *-------------------------------------------------------------------------------
10600  * Bioenergy power plant
10601  *-------------------------------------------------------------------------------
10602   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
10605  *-------------------------------------------------------------------------------
10606  * Traditional Biofuels
10607  * - Requires the precedence of mod_landuse
10608  *-------------------------------------------------------------------------------
10609   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
10612  *-------------------------------------------------------------------------------
10613  * Advanced biofuel
10614  * - Require the precedence of mod_landuse
10615  *-------------------------------------------------------------------------------
10616   
10618   
10619  * Limitations for nel backstops
10620  eqq_en_lim_advbiofuel_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
10621               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
10622               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
10623   
10624  * Peculiarity of advbiofuel
10625  eqmcost_fuel_advbiofuel_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10626                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
10627   
10628  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
10631  *-------------------------------------------------------------------------------
10632  * Carbon Capture and Sequestration
10633  *-------------------------------------------------------------------------------
10634   
10636   
10637  eqq_emi_ccs_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10638                  Q_EMI('ccs_plant',t,n) =e=
10639                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
10640                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
10641  ;
10642   
10643  eqcost_emi_sinks_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10644                  COST_EMI('ccs_plant',t,n) =e=
10645                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
10646                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
10647  ;
10648   
10649  eq_stor_ccs_cum_c_canada(ccs_stor,tp1,t,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
10650                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
10651  ;
10652   
10653  eq_emi_stor_ccs_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10654                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
10655  ;
10656   
10657  eq_emi_leak_ccs_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10658                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
10659   
10660  *-------------------------------------------------------------------------------
10662   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
10664  *-------------------------------------------------------------------------------
10665  * Coal for non-electric sectors
10666  * - Coke Plants
10667  * - Industrial and Commercial combined-heat-and-power (CHP)
10668  * - Others
10669  *-------------------------------------------------------------------------------
10670   
10672   
10673  eqcost_en_nelcoal_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10674           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
10675                                          nelcoal_max_abat(t,n) *
10676                                          (nelcoal_cmac(n,'a') *
10677                                            Q_EN('nelcoalabat',t,n) /
10678                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
10679                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
10680                                              (exp(nelcoal_cmac(n,'c') *
10681                                                (Q_EN('nelcoalabat',t,n)/
10682                                                  (nelcoal_max_abat(t,n) *
10683                                                      nelcoal_baseline(t,n))
10684                                                  ) - 1 )
10685                                              )
10686                                          );
10687   
10688  eqq_ncoalabat_monotone_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
10689          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
10690   
10691  * ensure Q_EN is lower than K_EN for CCS as not in jel
10692  eqq_en_nelcoalccs_max_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10693          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
10694   
10695  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
10698  *-------------------------------------------------------------------------------
10699  * Wind energy module
10700  * - onshore and offshore
10701  *-------------------------------------------------------------------------------
10702   
10704   
10705  * Capacity limits in the wind onshore electrical sector
10706  eqq_en_mu_windon_c_canada(wind_dist,wind_class,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
10707      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
10708   
10709  * Capacity limits in the wind offshore electrical sector
10710  eqq_en_mu_windoff_c_canada(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
10711      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
10712   
10713  * Wind onshore electrical generation plants (new)
10714  eqk_en_windon_c_canada(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
10715      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
10716                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
10717   
10718  * Wind offshore electrical generation plants (new)
10719  eqk_en_windoff_c_canada(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
10720      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
10721                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
10722   
10723  * Total onshore wind energy production
10724  eqq_en_windon_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10725                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
10726   
10727  * Total offshore wind energy production
10728  eqq_en_windoff_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10729                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
10730   
10731  * Total onshore wind capacity
10732  eqk_en_windon_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10733                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
10734   
10735  * Total offshore wind capacity
10736  eqk_en_windoff_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10737                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
10738   
10739  * Total onshore wind investment
10740  eqi_en_windon_sum_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
10741                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
10742   
10743  * Total offshore wind investment
10744  eqi_en_windoff_sum_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
10745                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
10746   
10747  *-------------------------------------------------------------------------------
10749   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
10751  *-------------------------------------------------------------------------------
10752  * Solar Powerplants (PV and CSP) to the electrical system
10753  *-------------------------------------------------------------------------------
10754   
10755  *-------------------------------------------------------------------------------
10757   
10758   
10759  * Capacity limits in the pv electrical sector
10760  eqq_en_mu_pv_c_canada(solar_dist,solar_class,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
10761                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
10762   
10763  * Capacity limits in the csp electrical sector
10764  eqq_en_mu_csp_c_canada(solar_dist,solar_class,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
10765                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
10766   
10767  * PV electrical generation plants (new)
10768  eqk_en_pv_c_canada(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
10769                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
10770                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
10771   
10772  * CSP electrical generation plants (new)
10773  eqk_en_csp_c_canada(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
10774                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
10775                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
10776   
10777  * Total PV energy production
10778  eqq_en_pv_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10779                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
10780   
10781  * Total CSP energy production
10782  eqq_en_csp_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10783                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
10784   
10785  * Total PV capacity
10786  eqk_en_pv_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10787                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
10788   
10789  * Total CSP capacity
10790  eqk_en_csp_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10791                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
10792   
10793  * Total PV investment
10794  eqi_en_pv_sum_c_canada(t,tp1,n)$(map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
10795                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
10796   
10797  * Total CSP investment
10798  eqi_en_csp_sum_c_canada(t,tp1,n)$(map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
10799                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
10800   
10801  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
10802  eqk_en_solar_comp_c_canada(t,n,solar_dist)$(map_clt_n('c_canada',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
10803                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
10804                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
10805   
10806   
10807   
10808  *-------------------------------------------------------------------------------
10810   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
10812  *-------------------------------------------------------------------------------
10813  * Technology development scenarios
10814  *-------------------------------------------------------------------------------
10815   
10817   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
10819  *-------------------------------------------------------------------------------
10820  * Oil Extraction
10821  * Options:
10822  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
10823  *-------------------------------------------------------------------------------
10824   
10826   
10827  * Capacity
10828  eqoilcap_c_canada(t,tp1,n,oilg)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
10829      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
10830   
10831  * Production
10832  eqoilprod_c_canada(t,tp1,n,oilg)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
10833      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
10834   
10835  eqq_out_oil_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10836      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
10837   
10838  * Cumulative production
10839  eqcum_oil_c_canada(t,tp1,n,oilg)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
10840      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
10841   
10842  * Cost
10843  eqcost_oil_c_canada(t,tp1,n,oilg)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
10844      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
10845                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
10846                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
10847   
10848  * Investments
10849  eqi_oil_c_canada(t,tp1,n,oilg)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
10850      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
10851   
10852  * Total investment
10853  eqi_out_oil_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
10854      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
10855   
10856  * Emissions
10857  eqq_emi_out_oil_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10858      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
10859   
10860  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
10863  *-------------------------------------------------------------------------------
10864  * Uranium Resources
10865  *-------------------------------------------------------------------------------
10866   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
10869  *-------------------------------------------------------------------------------
10870  * Gas Resources
10871  *-------------------------------------------------------------------------------
10872   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
10875  *-------------------------------------------------------------------------------
10876  * Coal Resources
10877  *-------------------------------------------------------------------------------
10878   
10880   
10881   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
10883  *-------------------------------------------------------------------------------
10884  * Climate
10885  *
10886  * Represents the climate
10887  * - based on the DICE model equations
10888  * - Radiative forcing for non CO2 ghgs
10889  * - parameters calibrated to reproduce MAGICC6.4 default response
10890  *
10891  *  Options:
10892  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
10893  * - $setglobal cooperate_on_climate {'YES','NO'}
10894  * - 'YES'(default): Countries within a coalition act in cooperation
10895  *   'NO': Countries within a coalition act individually
10896  *
10897  *-------------------------------------------------------------------------------
10898   
10900   
10902   
10903  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
10906  *-------------------------------------------------------------------------------
10907  * Long-run Damages from Climate Change
10908  * - Economic impacts
10909  * - Adaptation
10910  *-------------------------------------------------------------------------------
10911   
10913   
10915   
10916  *-------------------------------------------------------------------------------
10918   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
10920  *-------------------------------------------------------------------------------
10921  * Light-duty Vehicles for Personal Transport
10922  *-------------------------------------------------------------------------------
10923   
10925   
10926  *** newcode
10927  eqq_inv_red_ban_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10928      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
10929   
10930  ***
10931  *- Number of light duty vehicles
10932  eqnb_veh_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10933      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
10934   
10935  *- Yearly energy demand of vehicles
10936  eqq_en_veh_c_canada(jveh,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10937      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
10938   
10939  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
10940  eqq_el_edv_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10941      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
10942   
10943  *- Investment cost for hybrid vehicles
10944  eqmcost_inv_hybrid_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
10945                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
10946   
10947  *- Investment cost for plug-in hybrid vehicles
10948  eqmcost_inv_plghybrid_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
10949                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
10950   
10951  *- Investment cost for electric drive vehicles
10952  eqmcost_inv_edv_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
10953                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
10954   
10955  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
10958  *-------------------------------------------------------------------------------
10959  * Road Freight Transport
10960  *-------------------------------------------------------------------------------
10962   
10963  *-  Number of freight vehicles
10964  eqnb_frtveh_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10965                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
10966   
10967  *-  Yearly fuel consumption of freight vehicles
10968  eqq_en_frtveh_c_canada(jfrt,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10969                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
10970   
10971  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
10972  eqq_el_frtedv_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10973                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
10974   
10975  *-  Investment cost for hbd_stfr vehicle
10976  eqmcost_inv_hbd_stfr_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
10977                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
10978   
10979  *-  Investment cost for plug-in hbd_stfr vehicle
10980  eqmcost_inv_plghbd_stfr_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
10981                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
10982   
10983  *-  Investment cost for electric drive vehicle
10984  eqmcost_inv_edv_stfr_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
10985                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
10986   
10987  *-------------------------------------------------------------------------------
10989   
10990   
10991   
10992   
10993   
10994   
10995  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
10997  *-------------------------------------------------------------------------------
10998  * Traditional Biomass
10999  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
11000  *  - require post_process to be launch before
11001  *-------------------------------------------------------------------------------
11002   
11004   
11005  * Optional modules
11006   
11007  * Policy modules
11008   
11009  * Calibration
11012   
11013   
11014  model witch_c_canada /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
11016  *-------------------------------------------------------------------------------
11017  * Call modules by order
11018  *-------------------------------------------------------------------------------
11022   
11023  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
11025  *-------------------------------------------------------------------------------
11026  * Algorithm
11027  *-------------------------------------------------------------------------------
11028   
11030   
11031  eqobj_c_canada
11032   
11033  *-------------------------------------------------------------------------------
11035   
11036  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
11038  *-------------------------------------------------------------------------------
11039  * Time
11040  * - Temporal structure
11041  * - Fixed time periods
11042  * - States of the world
11043  *-------------------------------------------------------------------------------
11044   
11046   
11047  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
11049  *-------------------------------------------------------------------------------
11050  * Geographic dimension and mapping with countries
11051  *-------------------------------------------------------------------------------
11052   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
11055  *-------------------------------------------------------------------------------
11056  * Non-Cooperative Setup
11057  *
11058  * Each region is defined as an individual coalition.
11059  *
11060  *-------------------------------------------------------------------------------
11061   
11063   
11064  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
11066  *-------------------------------------------------------------------------------
11067  * Welfare
11068  *-------------------------------------------------------------------------------
11069   
11071   
11072  equtility_c_canada
11073   
11074  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
11077  *-------------------------------------------------------------------------------
11078  * Economy
11079  * - Production and Consumption definition
11080  * - Top-level of the production function
11081  * Options:
11082  * --original_ssp=1 : original SSP population and GDP data
11083  *-------------------------------------------------------------------------------
11084   
11086   
11087  eqk_c_canada
11088  eqq_cc_c_canada
11089  eqq_fen_c_canada
11090  eqq_y_c_canada
11091   
11092  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
11095  *-------------------------------------------------------------------------------
11096  * Energy sector
11097  *-------------------------------------------------------------------------------
11098   
11100   
11101  eq_mkt_clearing_oil_c_canada
11102  eqcost_pes_c_canada
11103  eqcost_ses_c_canada
11104  eqk_en_c_canada
11105  eqq_ces_el_c_canada
11106  eqq_ces_nelgas_c_canada
11107  eqq_el2_c_canada
11108  eqq_el_c_canada
11109  eqq_elff_c_canada
11110  eqq_en_c_canada
11111  eqq_en_in_c_canada
11112  eqq_en_mu_c_canada
11113  eqq_en_tree_c_canada
11114  eqq_nel_c_canada
11115  eqq_nelog_c_canada
11116  eqq_fuel_c_canada
11117  eqq_elffren_c_canada
11118   
11119  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
11122  *-------------------------------------------------------------------------------
11123  * Carbon Emissions
11124  * - Total CO2 emissions and CO2 Fossil fuel and Industry
11125  * - CO2 emission costs
11126  * - GHG permit market
11127  *-------------------------------------------------------------------------------
11128   
11130   
11131  eqq_emi_lim_c_canada
11132  ***newcode
11133  eqq_emi_lim_USAc_canada
11134  ***
11135  eqq_emi_tree_c_canada
11136  eqq_emi_co2ffi_c_canada
11137   
11138  eqcost_emi_co2_c_canada
11139   
11140  eq_mkt_clearing_nip_c_canada
11141   
11142  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
11145  *-------------------------------------------------------------------------------
11146  * Research & Development
11147  * Options:
11148  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
11149  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
11150  *-------------------------------------------------------------------------------
11151   
11153   
11154  eqk_rd_c_canada
11155  eqspill_coop_c_canada
11156  eqspill_lead_c_canada
11157  eqspill_foll_c_canada
11158  eqmcost_inv_back_c_canada
11159  eqmcost_inv_back_lbd_c_canada
11160   
11161  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
11164  *-------------------------------------------------------------------------------
11165  * Default Climate Policy Implementation
11166  *
11167  * Options:
11168  *    --policy={bau (default),ctax}
11169  *        Implement a climate policy setting
11170  *  [ --scen= ]
11171  *        Policy variant.
11172  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
11173  *          * XXX for a fixed percentage/yr (e.g. 5) growth
11174  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
11175  *  [ --ctax_year=2020 ]
11176  *        Starting year of the carbon tax
11177  *  [ --ctax_initial=30 ]
11178  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
11179  *
11180  *-------------------------------------------------------------------------------
11182   
11183  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
11185  *-------------------------------------------------------------------------------
11186  * Energy efficiency
11187  *-------------------------------------------------------------------------------
11188   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
11191  *-------------------------------------------------------------------------------
11192  * Hydro Power
11193  *-------------------------------------------------------------------------------
11194   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
11197  *-------------------------------------------------------------------------------
11198  * System Integration:
11199  * - Capacity constraint
11200  * - Flexibility constraint
11201  * - Grid Investment
11202  * - Capacity growth constraint
11203  *-------------------------------------------------------------------------------
11204   
11206   
11207  eqq_elintren_c_canada
11208  eqflex_c_canada
11209  eqk_en_grid_c_canada
11210  eqk_en_grid_to_k_en_c_canada
11211  eqfirm_capacity_c_canada
11212  eqcap_growth_c_canada
11213   
11214  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
11217  *-------------------------------------------------------------------------------
11218  * Nuclear power plants
11219  *-------------------------------------------------------------------------------
11220   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
11223  *-------------------------------------------------------------------------------
11224  * GHG module
11225  * - CH4 FFI + CH4 waste + CH4 open fires
11226  * - N2O FFI + N2O waste + N2O open fires
11227  *-------------------------------------------------------------------------------
11228   
11230   
11231  eqq_emi_waste_c_canada
11232  eqq_emi_n2o_ffi_c_canada
11233  eqq_emi_ch4_ffi_c_canada
11234   
11235  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
11238  *-------------------------------------------------------------------------------
11239  * F-gases
11240  * - LLF
11241  * - SLF
11242  *-------------------------------------------------------------------------------
11243   
11245   
11246  eqq_emi_fgases_c_canada
11247   
11248  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
11251  *-------------------------------------------------------------------------------
11252  * Landuse [simplified version of the land-use model]
11253  *-------------------------------------------------------------------------------
11254   
11256   
11257  eq_wbio_c_canada
11258  eqcost_pes_wbio_c_canada
11259   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
11262  *-------------------------------------------------------------------------------
11263  * Bioenergy power plant
11264  *-------------------------------------------------------------------------------
11265   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
11268  *-------------------------------------------------------------------------------
11269  * Traditional Biofuels
11270  * - Requires the precedence of mod_landuse
11271  *-------------------------------------------------------------------------------
11272   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
11275  *-------------------------------------------------------------------------------
11276  * Advanced biofuel
11277  * - Require the precedence of mod_landuse
11278  *-------------------------------------------------------------------------------
11279   
11281   
11282  eqq_en_lim_advbiofuel_c_canada
11283  eqmcost_fuel_advbiofuel_c_canada
11284   
11285  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
11288  *-------------------------------------------------------------------------------
11289  * Carbon Capture and Sequestration
11290  *-------------------------------------------------------------------------------
11291   
11293   
11294  eqq_emi_ccs_c_canada
11295  eqcost_emi_sinks_c_canada
11296  eq_stor_ccs_cum_c_canada
11297  eq_emi_stor_ccs_c_canada
11298  eq_emi_leak_ccs_c_canada
11299   
11300  *-------------------------------------------------------------------------------
11302   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
11304  *-------------------------------------------------------------------------------
11305  * Coal for non-electric sectors
11306  * - Coke Plants
11307  * - Industrial and Commercial combined-heat-and-power (CHP)
11308  * - Others
11309  *-------------------------------------------------------------------------------
11310   
11312   
11313  eqcost_en_nelcoal_c_canada
11314  eqq_ncoalabat_monotone_c_canada
11315  eqq_en_nelcoalccs_max_c_canada
11316   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
11319  *-------------------------------------------------------------------------------
11320  * Wind energy module
11321  * - onshore and offshore
11322  *-------------------------------------------------------------------------------
11323   
11325   
11326  eqq_en_mu_windon_c_canada
11327  eqq_en_mu_windoff_c_canada
11328  eqk_en_windon_c_canada
11329  eqk_en_windoff_c_canada
11330  eqq_en_windon_sum_c_canada
11331  eqq_en_windoff_sum_c_canada
11332  eqk_en_windon_sum_c_canada
11333  eqk_en_windoff_sum_c_canada
11334  eqi_en_windon_sum_c_canada
11335  eqi_en_windoff_sum_c_canada
11336   
11338   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
11340  *-------------------------------------------------------------------------------
11341  * Solar Powerplants (PV and CSP) to the electrical system
11342  *-------------------------------------------------------------------------------
11343   
11344  *-------------------------------------------------------------------------------
11346   
11347  eqq_en_mu_pv_c_canada
11348  eqq_en_mu_csp_c_canada
11349  eqk_en_pv_c_canada
11350  eqk_en_csp_c_canada
11351  eqq_en_pv_sum_c_canada
11352  eqq_en_csp_sum_c_canada
11353  eqk_en_pv_sum_c_canada
11354  eqk_en_csp_sum_c_canada
11355  eqi_en_pv_sum_c_canada
11356  eqi_en_csp_sum_c_canada
11357  eqk_en_solar_comp_c_canada
11358   
11359  *-------------------------------------------------------------------------------
11361   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
11363  *-------------------------------------------------------------------------------
11364  * Technology development scenarios
11365  *-------------------------------------------------------------------------------
11366   
11368   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
11370  *-------------------------------------------------------------------------------
11371  * Oil Extraction
11372  * Options:
11373  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
11374  *-------------------------------------------------------------------------------
11375   
11377   
11378  eqoilcap_c_canada
11379  eqoilprod_c_canada
11380  eqq_out_oil_c_canada
11381  eqcum_oil_c_canada
11382  eqcost_oil_c_canada
11383  eqi_oil_c_canada
11384  eqi_out_oil_c_canada
11385  eqq_emi_out_oil_c_canada
11386   
11387  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
11390  *-------------------------------------------------------------------------------
11391  * Uranium Resources
11392  *-------------------------------------------------------------------------------
11393   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
11396  *-------------------------------------------------------------------------------
11397  * Gas Resources
11398  *-------------------------------------------------------------------------------
11399   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
11402  *-------------------------------------------------------------------------------
11403  * Coal Resources
11404  *-------------------------------------------------------------------------------
11405   
11407   
11408   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
11410  *-------------------------------------------------------------------------------
11411  * Climate
11412  *
11413  * Represents the climate
11414  * - based on the DICE model equations
11415  * - Radiative forcing for non CO2 ghgs
11416  * - parameters calibrated to reproduce MAGICC6.4 default response
11417  *
11418  *  Options:
11419  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
11420  * - $setglobal cooperate_on_climate {'YES','NO'}
11421  * - 'YES'(default): Countries within a coalition act in cooperation
11422  *   'NO': Countries within a coalition act individually
11423  *
11424  *-------------------------------------------------------------------------------
11425   
11427   
11429   
11430  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
11433  *-------------------------------------------------------------------------------
11434  * Long-run Damages from Climate Change
11435  * - Economic impacts
11436  * - Adaptation
11437  *-------------------------------------------------------------------------------
11438   
11440   
11442   
11443  *-------------------------------------------------------------------------------
11445   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
11447  *-------------------------------------------------------------------------------
11448  * Light-duty Vehicles for Personal Transport
11449  *-------------------------------------------------------------------------------
11450   
11452   
11453  eqnb_veh_c_canada
11454  eqq_en_veh_c_canada
11455  eqq_el_edv_c_canada
11456  eqmcost_inv_hybrid_c_canada
11457  eqmcost_inv_plghybrid_c_canada
11458  eqmcost_inv_edv_c_canada
11459  *** newcode
11460  eqq_inv_red_ban_c_canada
11461  ***
11462  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
11465  *-------------------------------------------------------------------------------
11466  * Road Freight Transport
11467  *-------------------------------------------------------------------------------
11469   
11470  eqnb_frtveh_c_canada
11471  eqq_en_frtveh_c_canada
11472  eqq_el_frtedv_c_canada
11473  eqmcost_inv_hbd_stfr_c_canada
11474  eqmcost_inv_plghbd_stfr_c_canada
11475  eqmcost_inv_edv_stfr_c_canada
11476   
11477  *-------------------------------------------------------------------------------
11479   
11480   
11481   
11482   
11483   
11484   
11485  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
11487  *-------------------------------------------------------------------------------
11488  * Traditional Biomass
11489  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
11490  *  - require post_process to be launch before
11491  *-------------------------------------------------------------------------------
11492   
11494   
11495  * Optional modules
11496   
11497  * Policy modules
11498   
11499  * Calibration
11502  /;
11503   
11504  witch_c_canada.optfile=1;   # the option file solvername.opt is to be used
11505  witch_c_canada.holdfixed=1; # treat fixed values as constant
11506  witch_c_canada.scaleopt=1;  # Use scaling for better gradients estimation
11507  witch_c_canada.solvelink=3; # Use parallel or sequential solving
11508   
11513   
11514  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
11516  *-------------------------------------------------------------------------------
11517  * Call modules by order
11518  *-------------------------------------------------------------------------------
11522   
11523  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
11525  *-------------------------------------------------------------------------------
11526  * Algorithm
11527  *-------------------------------------------------------------------------------
11528   
11530   
11531  eqobj_c_china
11532   
11533  *-------------------------------------------------------------------------------
11535   
11536  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
11538  *-------------------------------------------------------------------------------
11539  * Time
11540  * - Temporal structure
11541  * - Fixed time periods
11542  * - States of the world
11543  *-------------------------------------------------------------------------------
11544   
11546   
11547  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
11549  *-------------------------------------------------------------------------------
11550  * Geographic dimension and mapping with countries
11551  *-------------------------------------------------------------------------------
11552   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
11555  *-------------------------------------------------------------------------------
11556  * Non-Cooperative Setup
11557  *
11558  * Each region is defined as an individual coalition.
11559  *
11560  *-------------------------------------------------------------------------------
11561   
11563   
11564  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
11566  *-------------------------------------------------------------------------------
11567  * Welfare
11568  *-------------------------------------------------------------------------------
11569   
11571   
11572  equtility_c_china
11573   
11574  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
11577  *-------------------------------------------------------------------------------
11578  * Economy
11579  * - Production and Consumption definition
11580  * - Top-level of the production function
11581  * Options:
11582  * --original_ssp=1 : original SSP population and GDP data
11583  *-------------------------------------------------------------------------------
11584   
11586   
11587  eqk_c_china
11588  eqq_cc_c_china
11589  eqq_fen_c_china
11590  eqq_y_c_china
11591   
11592  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
11595  *-------------------------------------------------------------------------------
11596  * Energy sector
11597  *-------------------------------------------------------------------------------
11598   
11600   
11601  eq_mkt_clearing_oil_c_china
11602  eqcost_pes_c_china
11603  eqcost_ses_c_china
11604  eqk_en_c_china
11605  eqq_ces_el_c_china
11606  eqq_ces_nelgas_c_china
11607  eqq_el2_c_china
11608  eqq_el_c_china
11609  eqq_elff_c_china
11610  eqq_en_c_china
11611  eqq_en_in_c_china
11612  eqq_en_mu_c_china
11613  eqq_en_tree_c_china
11614  eqq_nel_c_china
11615  eqq_nelog_c_china
11616  eqq_fuel_c_china
11617  eqq_elffren_c_china
11618   
11619  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
11622  *-------------------------------------------------------------------------------
11623  * Carbon Emissions
11624  * - Total CO2 emissions and CO2 Fossil fuel and Industry
11625  * - CO2 emission costs
11626  * - GHG permit market
11627  *-------------------------------------------------------------------------------
11628   
11630   
11631  eqq_emi_lim_c_china
11632  ***newcode
11633  eqq_emi_lim_USAc_china
11634  ***
11635  eqq_emi_tree_c_china
11636  eqq_emi_co2ffi_c_china
11637   
11638  eqcost_emi_co2_c_china
11639   
11640  eq_mkt_clearing_nip_c_china
11641   
11642  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
11645  *-------------------------------------------------------------------------------
11646  * Research & Development
11647  * Options:
11648  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
11649  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
11650  *-------------------------------------------------------------------------------
11651   
11653   
11654  eqk_rd_c_china
11655  eqspill_coop_c_china
11656  eqspill_lead_c_china
11657  eqspill_foll_c_china
11658  eqmcost_inv_back_c_china
11659  eqmcost_inv_back_lbd_c_china
11660   
11661  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
11664  *-------------------------------------------------------------------------------
11665  * Default Climate Policy Implementation
11666  *
11667  * Options:
11668  *    --policy={bau (default),ctax}
11669  *        Implement a climate policy setting
11670  *  [ --scen= ]
11671  *        Policy variant.
11672  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
11673  *          * XXX for a fixed percentage/yr (e.g. 5) growth
11674  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
11675  *  [ --ctax_year=2020 ]
11676  *        Starting year of the carbon tax
11677  *  [ --ctax_initial=30 ]
11678  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
11679  *
11680  *-------------------------------------------------------------------------------
11682   
11683  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
11685  *-------------------------------------------------------------------------------
11686  * Energy efficiency
11687  *-------------------------------------------------------------------------------
11688   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
11691  *-------------------------------------------------------------------------------
11692  * Hydro Power
11693  *-------------------------------------------------------------------------------
11694   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
11697  *-------------------------------------------------------------------------------
11698  * System Integration:
11699  * - Capacity constraint
11700  * - Flexibility constraint
11701  * - Grid Investment
11702  * - Capacity growth constraint
11703  *-------------------------------------------------------------------------------
11704   
11706   
11707  eqq_elintren_c_china
11708  eqflex_c_china
11709  eqk_en_grid_c_china
11710  eqk_en_grid_to_k_en_c_china
11711  eqfirm_capacity_c_china
11712  eqcap_growth_c_china
11713   
11714  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
11717  *-------------------------------------------------------------------------------
11718  * Nuclear power plants
11719  *-------------------------------------------------------------------------------
11720   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
11723  *-------------------------------------------------------------------------------
11724  * GHG module
11725  * - CH4 FFI + CH4 waste + CH4 open fires
11726  * - N2O FFI + N2O waste + N2O open fires
11727  *-------------------------------------------------------------------------------
11728   
11730   
11731  eqq_emi_waste_c_china
11732  eqq_emi_n2o_ffi_c_china
11733  eqq_emi_ch4_ffi_c_china
11734   
11735  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
11738  *-------------------------------------------------------------------------------
11739  * F-gases
11740  * - LLF
11741  * - SLF
11742  *-------------------------------------------------------------------------------
11743   
11745   
11746  eqq_emi_fgases_c_china
11747   
11748  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
11751  *-------------------------------------------------------------------------------
11752  * Landuse [simplified version of the land-use model]
11753  *-------------------------------------------------------------------------------
11754   
11756   
11757  eq_wbio_c_china
11758  eqcost_pes_wbio_c_china
11759   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
11762  *-------------------------------------------------------------------------------
11763  * Bioenergy power plant
11764  *-------------------------------------------------------------------------------
11765   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
11768  *-------------------------------------------------------------------------------
11769  * Traditional Biofuels
11770  * - Requires the precedence of mod_landuse
11771  *-------------------------------------------------------------------------------
11772   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
11775  *-------------------------------------------------------------------------------
11776  * Advanced biofuel
11777  * - Require the precedence of mod_landuse
11778  *-------------------------------------------------------------------------------
11779   
11781   
11782  eqq_en_lim_advbiofuel_c_china
11783  eqmcost_fuel_advbiofuel_c_china
11784   
11785  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
11788  *-------------------------------------------------------------------------------
11789  * Carbon Capture and Sequestration
11790  *-------------------------------------------------------------------------------
11791   
11793   
11794  eqq_emi_ccs_c_china
11795  eqcost_emi_sinks_c_china
11796  eq_stor_ccs_cum_c_china
11797  eq_emi_stor_ccs_c_china
11798  eq_emi_leak_ccs_c_china
11799   
11800  *-------------------------------------------------------------------------------
11802   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
11804  *-------------------------------------------------------------------------------
11805  * Coal for non-electric sectors
11806  * - Coke Plants
11807  * - Industrial and Commercial combined-heat-and-power (CHP)
11808  * - Others
11809  *-------------------------------------------------------------------------------
11810   
11812   
11813  eqcost_en_nelcoal_c_china
11814  eqq_ncoalabat_monotone_c_china
11815  eqq_en_nelcoalccs_max_c_china
11816   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
11819  *-------------------------------------------------------------------------------
11820  * Wind energy module
11821  * - onshore and offshore
11822  *-------------------------------------------------------------------------------
11823   
11825   
11826  eqq_en_mu_windon_c_china
11827  eqq_en_mu_windoff_c_china
11828  eqk_en_windon_c_china
11829  eqk_en_windoff_c_china
11830  eqq_en_windon_sum_c_china
11831  eqq_en_windoff_sum_c_china
11832  eqk_en_windon_sum_c_china
11833  eqk_en_windoff_sum_c_china
11834  eqi_en_windon_sum_c_china
11835  eqi_en_windoff_sum_c_china
11836   
11838   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
11840  *-------------------------------------------------------------------------------
11841  * Solar Powerplants (PV and CSP) to the electrical system
11842  *-------------------------------------------------------------------------------
11843   
11844  *-------------------------------------------------------------------------------
11846   
11847  eqq_en_mu_pv_c_china
11848  eqq_en_mu_csp_c_china
11849  eqk_en_pv_c_china
11850  eqk_en_csp_c_china
11851  eqq_en_pv_sum_c_china
11852  eqq_en_csp_sum_c_china
11853  eqk_en_pv_sum_c_china
11854  eqk_en_csp_sum_c_china
11855  eqi_en_pv_sum_c_china
11856  eqi_en_csp_sum_c_china
11857  eqk_en_solar_comp_c_china
11858   
11859  *-------------------------------------------------------------------------------
11861   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
11863  *-------------------------------------------------------------------------------
11864  * Technology development scenarios
11865  *-------------------------------------------------------------------------------
11866   
11868   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
11870  *-------------------------------------------------------------------------------
11871  * Oil Extraction
11872  * Options:
11873  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
11874  *-------------------------------------------------------------------------------
11875   
11877   
11878  eqoilcap_c_china
11879  eqoilprod_c_china
11880  eqq_out_oil_c_china
11881  eqcum_oil_c_china
11882  eqcost_oil_c_china
11883  eqi_oil_c_china
11884  eqi_out_oil_c_china
11885  eqq_emi_out_oil_c_china
11886   
11887  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
11890  *-------------------------------------------------------------------------------
11891  * Uranium Resources
11892  *-------------------------------------------------------------------------------
11893   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
11896  *-------------------------------------------------------------------------------
11897  * Gas Resources
11898  *-------------------------------------------------------------------------------
11899   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
11902  *-------------------------------------------------------------------------------
11903  * Coal Resources
11904  *-------------------------------------------------------------------------------
11905   
11907   
11908   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
11910  *-------------------------------------------------------------------------------
11911  * Climate
11912  *
11913  * Represents the climate
11914  * - based on the DICE model equations
11915  * - Radiative forcing for non CO2 ghgs
11916  * - parameters calibrated to reproduce MAGICC6.4 default response
11917  *
11918  *  Options:
11919  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
11920  * - $setglobal cooperate_on_climate {'YES','NO'}
11921  * - 'YES'(default): Countries within a coalition act in cooperation
11922  *   'NO': Countries within a coalition act individually
11923  *
11924  *-------------------------------------------------------------------------------
11925   
11927   
11929   
11930  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
11933  *-------------------------------------------------------------------------------
11934  * Long-run Damages from Climate Change
11935  * - Economic impacts
11936  * - Adaptation
11937  *-------------------------------------------------------------------------------
11938   
11940   
11942   
11943  *-------------------------------------------------------------------------------
11945   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
11947  *-------------------------------------------------------------------------------
11948  * Light-duty Vehicles for Personal Transport
11949  *-------------------------------------------------------------------------------
11950   
11952   
11953  eqnb_veh_c_china
11954  eqq_en_veh_c_china
11955  eqq_el_edv_c_china
11956  eqmcost_inv_hybrid_c_china
11957  eqmcost_inv_plghybrid_c_china
11958  eqmcost_inv_edv_c_china
11959  *** newcode
11960  eqq_inv_red_ban_c_china
11961  ***
11962  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
11965  *-------------------------------------------------------------------------------
11966  * Road Freight Transport
11967  *-------------------------------------------------------------------------------
11969   
11970  eqnb_frtveh_c_china
11971  eqq_en_frtveh_c_china
11972  eqq_el_frtedv_c_china
11973  eqmcost_inv_hbd_stfr_c_china
11974  eqmcost_inv_plghbd_stfr_c_china
11975  eqmcost_inv_edv_stfr_c_china
11976   
11977  *-------------------------------------------------------------------------------
11979   
11980   
11981   
11982   
11983   
11984   
11985  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
11987  *-------------------------------------------------------------------------------
11988  * Traditional Biomass
11989  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
11990  *  - require post_process to be launch before
11991  *-------------------------------------------------------------------------------
11992   
11994   
11995  * Optional modules
11996   
11997  * Policy modules
11998   
11999  * Calibration
12002  ;
12003   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
12005  *-------------------------------------------------------------------------------
12006  * Call modules by order
12007  *-------------------------------------------------------------------------------
12011   
12012  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
12014  *-------------------------------------------------------------------------------
12015  * Algorithm
12016  *-------------------------------------------------------------------------------
12017   
12019   
12021  * Add the component of the (maximized) objective function as required by the ADMM algorithm
12022  eqobj_c_china..
12023      OBJADMM =e= UTILITY -
12024          sum(t, rho_admm('oil',t) / 2 *
12025              sum(n$(map_clt_n('c_china',n) and trading_t('oil',t,n)),
12026                  power(
12027                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
12028                      x_admm('oil',t,n) +
12029                      xavg_admm('oil',t) +
12030                      u_admm('oil', t)
12031                  ,2)
12032              )) -
12033          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
12034              sum(n$(map_clt_n('c_china',n) and trading_t(c_mkt,t,n)),
12035                  power(
12036                      Q_EMI(c_mkt,t,n) -
12037                      x_admm(c_mkt,t,n) +
12038                      xavg_admm(c_mkt,t) +
12039                      u_admm(c_mkt,t)
12040                  ,2)
12041              ))
12042      ;
12044   
12045  *-------------------------------------------------------------------------------
12047   
12048  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
12050  *-------------------------------------------------------------------------------
12051  * Time
12052  * - Temporal structure
12053  * - Fixed time periods
12054  * - States of the world
12055  *-------------------------------------------------------------------------------
12056   
12058   
12059  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
12061  *-------------------------------------------------------------------------------
12062  * Geographic dimension and mapping with countries
12063  *-------------------------------------------------------------------------------
12064   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
12067  *-------------------------------------------------------------------------------
12068  * Non-Cooperative Setup
12069  *
12070  * Each region is defined as an individual coalition.
12071  *
12072  *-------------------------------------------------------------------------------
12073   
12075   
12076  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
12078  *-------------------------------------------------------------------------------
12079  * Welfare
12080  *-------------------------------------------------------------------------------
12081   
12083   
12084  * Objective function - Welfare to be maximized
12085  equtility_c_china..
12086      UTILITY =e=
12087   
12088  * Negishi SWF
12090   
12091  * Welfare functions based on CEBGE
12094                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
12095                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
12096                      ((sum(n$map_clt_n('c_china',n),
12097                        (l(t,n) / sum(nn$map_clt_n('c_china',nn), l(t,nn))) *
12098                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
12099                       )**(1 / (1 - gamma))
12100                      )**(1 - eta) ) +
12101                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
12102                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
12103                      ((sum(n$map_clt_n('c_china',n),
12104                        (l(t,n) / sum(nn$map_clt_n('c_china',nn), l(t,nn))) *
12105                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
12106                       )**(1 / (1 - gamma))
12107                      )**(1 - eta) )
12108                  )**(1/(1 - eta)) * 1e6
12111   
12112   
12113  ;
12114   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
12117  *-------------------------------------------------------------------------------
12118  * Economy
12119  * - Production and Consumption definition
12120  * - Top-level of the production function
12121  * Options:
12122  * --original_ssp=1 : original SSP population and GDP data
12123  *-------------------------------------------------------------------------------
12124   
12126   
12127  * Production
12128  eqq_y_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12129   
12130      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
12131                     ## Climate feedback on economy
12133                     ## Net cost of Primary and Secondary Energy Sources
12134                     - sum(fuel, COST_FUEL(fuel,t,n))
12135                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
12136                     - sum(cce, COST_EMI(cce,t,n))
12137                     ## Carbon tax
12138                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
12139                     ## Additionnal costs on gross product
12140                     - sum(ccy, COST_Y(ccy,t,n))
12141  ;
12142   
12143  * Consumption
12144  eqq_cc_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
12145      Q('cc',t,n) =e= Q('y',t,n)
12146                      ## Investments in goods g (final good, adaptation)
12147                      -sum(g, I(g,t,n))
12148                      ## Investments in r&d
12149                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
12150                      ## Investments in energy technlogies
12151                      -sum(jinv, I_EN(jinv,t,n))
12152                       ## Investments in grid infrastructures
12153                      - I_EN_GRID(t,n)
12154                      ## Investments in extraction sector
12155                      -sum(extract(f), I_OUT(f,t,n))
12156                      ## O&M for energy technlogies
12157                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
12158                      ## O&M for extraction
12159                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
12160                      ## Energy technology penalty costs
12161                      -sum(jpenalty(j), COST_EN(j,t,n))
12162  ;
12163   
12164  * Capital accumulation
12165  eqk_c_china(g,t,tp1,n)$(map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
12166      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
12167   
12168  * Energy services
12169  eqq_fen_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12170      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
12171   
12172  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
12175  *-------------------------------------------------------------------------------
12176  * Energy sector
12177  *-------------------------------------------------------------------------------
12178   
12180   
12181  *-------------------------------------------------------------------------------
12182  * Production - Energy sector
12183  *-------------------------------------------------------------------------------
12184   
12185  eqq_en_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12186      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
12187   
12188  *-------------------------------------------------------------------------------
12189  * Production - Electrical sector
12190  *-------------------------------------------------------------------------------
12191   
12192  eqq_el_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12193      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
12194   
12195  eqq_el2_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12196      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
12197   
12198  eqq_elffren_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12199      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
12200  eqq_elff_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12201      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
12202   
12203  eqq_ces_el_c_china(ices_el,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
12204      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
12205  ;
12206   
12207  *-------------------------------------------------------------------------------
12208  * Production - Non-electrical sector
12209  *-------------------------------------------------------------------------------
12210   
12211  eqq_nel_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12212      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
12213   
12214  eqq_nelog_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12215      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
12216  ;
12217  eqq_ces_nelgas_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12218      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
12219   
12220  *-------------------------------------------------------------------------------
12221  * PES and fuels
12222  *-------------------------------------------------------------------------------
12223   
12224  eqq_fuel_c_china(fuel,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
12225      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
12226   
12227  *-------------------------------------------------------------------------------
12228  * Cost
12229  *-------------------------------------------------------------------------------
12230   
12231  * Net cost of Primary Energy Supplies
12232  eqcost_pes_c_china(f,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
12233      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
12234                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
12235   
12236  * Net cost of Secondary Energy Supplies
12237  eqcost_ses_c_china(s,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12238      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
12239   
12240   
12241  *-------------------------------------------------------------------------------
12242  * Market balances
12243  *-------------------------------------------------------------------------------
12244   
12245  eq_mkt_clearing_oil_c_china(t,'c_china')$(internal('oil'))..
12246      sum( n$(map_clt_n('c_china',n) and trading_t('oil',t,n)),
12247          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
12248      ) =e= 0;
12249   
12250  *-------------------------------------------------------------------------------
12251  * New capital in the energy sector
12252  *-------------------------------------------------------------------------------
12253   
12254  * Electrical generation plants (new)
12255  eqk_en_c_china(jinv,t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
12256      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
12257                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
12258   
12259  *-------------------------------------------------------------------------------
12260  * ENERGY
12261  *-------------------------------------------------------------------------------
12262   
12263  * Capacity limits in the electrical sector
12264  eqq_en_mu_c_china(jel,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
12265      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
12266   
12267  * Efficiency of energy technology sector
12268  eqq_en_in_c_china(jfed,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
12269      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
12270                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
12271   
12272  * Energy generation "tree"
12273  eqq_en_tree_c_china(j,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
12274      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
12275   
12276  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
12279  *-------------------------------------------------------------------------------
12280  * Carbon Emissions
12281  * - Total CO2 emissions and CO2 Fossil fuel and Industry
12282  * - CO2 emission costs
12283  * - GHG permit market
12284  *-------------------------------------------------------------------------------
12285   
12287   
12288  * GHG emission cap
12289  eqq_emi_lim_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
12290      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
12291                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
12292   
12293  ***newcode
12294  eqq_emi_lim_USAc_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
12295  ***
12296   
12297  * Compute total and sectoral emissions
12298  eqq_emi_tree_c_china(t,n,e)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
12299      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
12300   
12301  * Industrial CO2 emissions
12302  eqq_emi_co2ffi_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12303      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
12304                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
12305                              # Emissions from biomass
12306                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
12307                              # Emissions from fuel extraction
12308                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
12309                              # Captured emissions
12310                              sum(sink, Q_EMI(sink,t,n));
12311   
12312  * CO2 emission costs
12313  eqcost_emi_co2_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12314      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
12315   
12316  * Emission permit market clearing for internal market
12317  eq_mkt_clearing_nip_c_china(c_mkt,t,'c_china')$(internal(c_mkt))..
12318      sum(n$(map_clt_n('c_china',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
12319   
12320  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
12323  *-------------------------------------------------------------------------------
12324  * Research & Development
12325  * Options:
12326  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
12327  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
12328  *-------------------------------------------------------------------------------
12329   
12331   
12332  * Knowledge stock accumulation
12333  eqk_rd_c_china(rd,t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
12334                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
12335                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
12336                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
12337                                        SPILL(rd,t,n)**rd_coef(rd,'d');
12338   
12339  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
12340  eqspill_coop_c_china(rd,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_china'))..
12341          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
12342                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_china',nn)), K_RD(rd,t,nn)) +
12343                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_china',nn))), K_RD.l(rd,t,nn))
12344                            ) *
12345                            (
12346                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_china',nn)), K_RD(rd,t,nn)) +
12347                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_china',nn))), K_RD.l(rd,t,nn))
12348                              ) - K_RD(rd,t,n)
12349                            );
12350   
12351  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
12352  eqspill_lead_c_china(rd,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_china')) and leadrd(rd,n))..
12353                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
12354   
12355  * No-cooperation : a follower sees is negative effect on the quantity he can grab
12356  eqspill_foll_c_china(rd,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_china')) and (not leadrd(rd,n)))..
12357                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
12358   
12359  *- Only LbR (without learning by doing)
12360  eqmcost_inv_back_c_china(jrd,t,tt,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
12361                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
12362                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
12363   
12364  *- LbR together with learning by doing ==> Two-factor learning curve
12365  eqmcost_inv_back_lbd_c_china(jrd,t,tt,tfirst,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
12366                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
12367                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
12368                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
12369   
12370  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
12373  *-------------------------------------------------------------------------------
12374  * Default Climate Policy Implementation
12375  *
12376  * Options:
12377  *    --policy={bau (default),ctax}
12378  *        Implement a climate policy setting
12379  *  [ --scen= ]
12380  *        Policy variant.
12381  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
12382  *          * XXX for a fixed percentage/yr (e.g. 5) growth
12383  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
12384  *  [ --ctax_year=2020 ]
12385  *        Starting year of the carbon tax
12386  *  [ --ctax_initial=30 ]
12387  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
12388  *
12389  *-------------------------------------------------------------------------------
12391   
12392  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
12394  *-------------------------------------------------------------------------------
12395  * Energy efficiency
12396  *-------------------------------------------------------------------------------
12397   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
12400  *-------------------------------------------------------------------------------
12401  * Hydro Power
12402  *-------------------------------------------------------------------------------
12403   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
12406  *-------------------------------------------------------------------------------
12407  * System Integration:
12408  * - Capacity constraint
12409  * - Flexibility constraint
12410  * - Grid Investment
12411  * - Capacity growth constraint
12412  *-------------------------------------------------------------------------------
12413   
12415   
12416   
12417  * Renewable CES
12418   
12419  * Definition of the renewable CES
12420  eqq_elintren_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12421      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
12422   
12423  * Capacity constraint
12424   
12426  eqfirm_capacity_c_china(t,n)$(map_clt_n('c_china',n) and (not tfix(t)) and year(t) gt 2005)..
12427                   sum(jel_firm, K_EN(jel_firm,t,n))
12428                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
12429                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
12430                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
12431                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
12432                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
12433                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
12434                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
12435                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
12436                                       ) / yearly_hours
12437  ;
12439   
12440  * Flexibility constraint
12441  eqflex_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12442          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
12443                             ( Q_EN('el',t,n) -
12444                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
12445                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
12446                             ) * flex_coeff('load')
12447  ;
12448   
12449  * Grid
12450   
12451  ** Grid depreciation and investments
12452  eqk_en_grid_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
12453                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
12454                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
12455   
12456  ** Grid adjustment to power capacity
12457  eqk_en_grid_to_k_en_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12458                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
12459                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
12460                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
12461                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
12462                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
12463                                     ) / grid_cost +
12464                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
12465                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
12466                                      K_EN('elcsp',t,n);
12467  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
12468   
12469  * Capacity growth constraint
12470  eqcap_growth_c_china(jinv,t,tp1,tp2,n)$((map_clt_n('c_china',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
12471                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
12472                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
12473   
12474  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
12477  *-------------------------------------------------------------------------------
12478  * Nuclear power plants
12479  *-------------------------------------------------------------------------------
12480   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
12483  *-------------------------------------------------------------------------------
12484  * GHG module
12485  * - CH4 FFI + CH4 waste + CH4 open fires
12486  * - N2O FFI + N2O waste + N2O open fires
12487  *-------------------------------------------------------------------------------
12488   
12490   
12491  * CH4, N2O waste emissions
12492  eqq_emi_waste_c_china(waste,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
12493                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
12494   
12495  * n2o FFI
12496  eqq_emi_n2o_ffi_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
12497    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
12498                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
12499                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
12500                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
12501                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
12502                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
12503                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
12504                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
12505                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
12506                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
12507                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
12508                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
12509                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
12510                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
12511                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
12512                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
12513                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
12514                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
12515                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
12516                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
12517                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
12518                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
12519                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
12520                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
12521                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
12522                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
12523                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
12524                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
12525                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
12526                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
12527                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
12528   
12529  * ch4 FFI
12530  eqq_emi_ch4_ffi_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
12531    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
12534  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
12535  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
12536                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
12537                             smax(tt$(year(tt) eq 2015),
12538                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
12541  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
12542  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
12543                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
12544   
12545  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
12548  *-------------------------------------------------------------------------------
12549  * F-gases
12550  * - LLF
12551  * - SLF
12552  *-------------------------------------------------------------------------------
12553   
12555   
12556  * F-gases emissions
12557  eqq_emi_fgases_c_china(fgases,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
12558                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
12559   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
12562  *-------------------------------------------------------------------------------
12563  * Landuse [simplified version of the land-use model]
12564  *-------------------------------------------------------------------------------
12565   
12567   
12568  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
12569  eq_wbio_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12570      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
12571   
12573  * Cost of all woody biomass produced for advanced biofuels and woody biomass
12574  eqcost_pes_wbio_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12575      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
12577   
12578  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
12581  *-------------------------------------------------------------------------------
12582  * Bioenergy power plant
12583  *-------------------------------------------------------------------------------
12584   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
12587  *-------------------------------------------------------------------------------
12588  * Traditional Biofuels
12589  * - Requires the precedence of mod_landuse
12590  *-------------------------------------------------------------------------------
12591   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
12594  *-------------------------------------------------------------------------------
12595  * Advanced biofuel
12596  * - Require the precedence of mod_landuse
12597  *-------------------------------------------------------------------------------
12598   
12600   
12601  * Limitations for nel backstops
12602  eqq_en_lim_advbiofuel_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
12603               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
12604               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
12605   
12606  * Peculiarity of advbiofuel
12607  eqmcost_fuel_advbiofuel_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12608                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
12609   
12610  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
12613  *-------------------------------------------------------------------------------
12614  * Carbon Capture and Sequestration
12615  *-------------------------------------------------------------------------------
12616   
12618   
12619  eqq_emi_ccs_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12620                  Q_EMI('ccs_plant',t,n) =e=
12621                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
12622                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
12623  ;
12624   
12625  eqcost_emi_sinks_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12626                  COST_EMI('ccs_plant',t,n) =e=
12627                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
12628                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
12629  ;
12630   
12631  eq_stor_ccs_cum_c_china(ccs_stor,tp1,t,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
12632                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
12633  ;
12634   
12635  eq_emi_stor_ccs_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12636                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
12637  ;
12638   
12639  eq_emi_leak_ccs_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12640                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
12641   
12642  *-------------------------------------------------------------------------------
12644   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
12646  *-------------------------------------------------------------------------------
12647  * Coal for non-electric sectors
12648  * - Coke Plants
12649  * - Industrial and Commercial combined-heat-and-power (CHP)
12650  * - Others
12651  *-------------------------------------------------------------------------------
12652   
12654   
12655  eqcost_en_nelcoal_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12656           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
12657                                          nelcoal_max_abat(t,n) *
12658                                          (nelcoal_cmac(n,'a') *
12659                                            Q_EN('nelcoalabat',t,n) /
12660                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
12661                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
12662                                              (exp(nelcoal_cmac(n,'c') *
12663                                                (Q_EN('nelcoalabat',t,n)/
12664                                                  (nelcoal_max_abat(t,n) *
12665                                                      nelcoal_baseline(t,n))
12666                                                  ) - 1 )
12667                                              )
12668                                          );
12669   
12670  eqq_ncoalabat_monotone_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
12671          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
12672   
12673  * ensure Q_EN is lower than K_EN for CCS as not in jel
12674  eqq_en_nelcoalccs_max_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12675          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
12676   
12677  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
12680  *-------------------------------------------------------------------------------
12681  * Wind energy module
12682  * - onshore and offshore
12683  *-------------------------------------------------------------------------------
12684   
12686   
12687  * Capacity limits in the wind onshore electrical sector
12688  eqq_en_mu_windon_c_china(wind_dist,wind_class,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
12689      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
12690   
12691  * Capacity limits in the wind offshore electrical sector
12692  eqq_en_mu_windoff_c_china(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
12693      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
12694   
12695  * Wind onshore electrical generation plants (new)
12696  eqk_en_windon_c_china(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
12697      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
12698                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
12699   
12700  * Wind offshore electrical generation plants (new)
12701  eqk_en_windoff_c_china(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
12702      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
12703                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
12704   
12705  * Total onshore wind energy production
12706  eqq_en_windon_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12707                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
12708   
12709  * Total offshore wind energy production
12710  eqq_en_windoff_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12711                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
12712   
12713  * Total onshore wind capacity
12714  eqk_en_windon_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12715                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
12716   
12717  * Total offshore wind capacity
12718  eqk_en_windoff_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12719                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
12720   
12721  * Total onshore wind investment
12722  eqi_en_windon_sum_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
12723                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
12724   
12725  * Total offshore wind investment
12726  eqi_en_windoff_sum_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
12727                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
12728   
12729  *-------------------------------------------------------------------------------
12731   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
12733  *-------------------------------------------------------------------------------
12734  * Solar Powerplants (PV and CSP) to the electrical system
12735  *-------------------------------------------------------------------------------
12736   
12737  *-------------------------------------------------------------------------------
12739   
12740   
12741  * Capacity limits in the pv electrical sector
12742  eqq_en_mu_pv_c_china(solar_dist,solar_class,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
12743                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
12744   
12745  * Capacity limits in the csp electrical sector
12746  eqq_en_mu_csp_c_china(solar_dist,solar_class,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
12747                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
12748   
12749  * PV electrical generation plants (new)
12750  eqk_en_pv_c_china(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
12751                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
12752                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
12753   
12754  * CSP electrical generation plants (new)
12755  eqk_en_csp_c_china(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
12756                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
12757                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
12758   
12759  * Total PV energy production
12760  eqq_en_pv_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12761                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
12762   
12763  * Total CSP energy production
12764  eqq_en_csp_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12765                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
12766   
12767  * Total PV capacity
12768  eqk_en_pv_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12769                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
12770   
12771  * Total CSP capacity
12772  eqk_en_csp_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12773                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
12774   
12775  * Total PV investment
12776  eqi_en_pv_sum_c_china(t,tp1,n)$(map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
12777                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
12778   
12779  * Total CSP investment
12780  eqi_en_csp_sum_c_china(t,tp1,n)$(map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
12781                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
12782   
12783  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
12784  eqk_en_solar_comp_c_china(t,n,solar_dist)$(map_clt_n('c_china',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
12785                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
12786                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
12787   
12788   
12789   
12790  *-------------------------------------------------------------------------------
12792   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
12794  *-------------------------------------------------------------------------------
12795  * Technology development scenarios
12796  *-------------------------------------------------------------------------------
12797   
12799   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
12801  *-------------------------------------------------------------------------------
12802  * Oil Extraction
12803  * Options:
12804  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
12805  *-------------------------------------------------------------------------------
12806   
12808   
12809  * Capacity
12810  eqoilcap_c_china(t,tp1,n,oilg)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
12811      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
12812   
12813  * Production
12814  eqoilprod_c_china(t,tp1,n,oilg)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
12815      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
12816   
12817  eqq_out_oil_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12818      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
12819   
12820  * Cumulative production
12821  eqcum_oil_c_china(t,tp1,n,oilg)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
12822      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
12823   
12824  * Cost
12825  eqcost_oil_c_china(t,tp1,n,oilg)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
12826      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
12827                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
12828                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
12829   
12830  * Investments
12831  eqi_oil_c_china(t,tp1,n,oilg)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
12832      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
12833   
12834  * Total investment
12835  eqi_out_oil_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
12836      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
12837   
12838  * Emissions
12839  eqq_emi_out_oil_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12840      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
12841   
12842  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
12845  *-------------------------------------------------------------------------------
12846  * Uranium Resources
12847  *-------------------------------------------------------------------------------
12848   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
12851  *-------------------------------------------------------------------------------
12852  * Gas Resources
12853  *-------------------------------------------------------------------------------
12854   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
12857  *-------------------------------------------------------------------------------
12858  * Coal Resources
12859  *-------------------------------------------------------------------------------
12860   
12862   
12863   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
12865  *-------------------------------------------------------------------------------
12866  * Climate
12867  *
12868  * Represents the climate
12869  * - based on the DICE model equations
12870  * - Radiative forcing for non CO2 ghgs
12871  * - parameters calibrated to reproduce MAGICC6.4 default response
12872  *
12873  *  Options:
12874  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
12875  * - $setglobal cooperate_on_climate {'YES','NO'}
12876  * - 'YES'(default): Countries within a coalition act in cooperation
12877  *   'NO': Countries within a coalition act individually
12878  *
12879  *-------------------------------------------------------------------------------
12880   
12882   
12884   
12885  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
12888  *-------------------------------------------------------------------------------
12889  * Long-run Damages from Climate Change
12890  * - Economic impacts
12891  * - Adaptation
12892  *-------------------------------------------------------------------------------
12893   
12895   
12897   
12898  *-------------------------------------------------------------------------------
12900   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
12902  *-------------------------------------------------------------------------------
12903  * Light-duty Vehicles for Personal Transport
12904  *-------------------------------------------------------------------------------
12905   
12907   
12908  *** newcode
12909  eqq_inv_red_ban_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12910      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
12911   
12912  ***
12913  *- Number of light duty vehicles
12914  eqnb_veh_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12915      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
12916   
12917  *- Yearly energy demand of vehicles
12918  eqq_en_veh_c_china(jveh,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12919      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
12920   
12921  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
12922  eqq_el_edv_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12923      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
12924   
12925  *- Investment cost for hybrid vehicles
12926  eqmcost_inv_hybrid_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
12927                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
12928   
12929  *- Investment cost for plug-in hybrid vehicles
12930  eqmcost_inv_plghybrid_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
12931                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
12932   
12933  *- Investment cost for electric drive vehicles
12934  eqmcost_inv_edv_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
12935                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
12936   
12937  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
12940  *-------------------------------------------------------------------------------
12941  * Road Freight Transport
12942  *-------------------------------------------------------------------------------
12944   
12945  *-  Number of freight vehicles
12946  eqnb_frtveh_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12947                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
12948   
12949  *-  Yearly fuel consumption of freight vehicles
12950  eqq_en_frtveh_c_china(jfrt,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12951                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
12952   
12953  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
12954  eqq_el_frtedv_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12955                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
12956   
12957  *-  Investment cost for hbd_stfr vehicle
12958  eqmcost_inv_hbd_stfr_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
12959                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
12960   
12961  *-  Investment cost for plug-in hbd_stfr vehicle
12962  eqmcost_inv_plghbd_stfr_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
12963                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
12964   
12965  *-  Investment cost for electric drive vehicle
12966  eqmcost_inv_edv_stfr_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
12967                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
12968   
12969  *-------------------------------------------------------------------------------
12971   
12972   
12973   
12974   
12975   
12976   
12977  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
12979  *-------------------------------------------------------------------------------
12980  * Traditional Biomass
12981  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
12982  *  - require post_process to be launch before
12983  *-------------------------------------------------------------------------------
12984   
12986   
12987  * Optional modules
12988   
12989  * Policy modules
12990   
12991  * Calibration
12994   
12995   
12996  model witch_c_china /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
12998  *-------------------------------------------------------------------------------
12999  * Call modules by order
13000  *-------------------------------------------------------------------------------
13004   
13005  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
13007  *-------------------------------------------------------------------------------
13008  * Algorithm
13009  *-------------------------------------------------------------------------------
13010   
13012   
13013  eqobj_c_china
13014   
13015  *-------------------------------------------------------------------------------
13017   
13018  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
13020  *-------------------------------------------------------------------------------
13021  * Time
13022  * - Temporal structure
13023  * - Fixed time periods
13024  * - States of the world
13025  *-------------------------------------------------------------------------------
13026   
13028   
13029  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
13031  *-------------------------------------------------------------------------------
13032  * Geographic dimension and mapping with countries
13033  *-------------------------------------------------------------------------------
13034   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
13037  *-------------------------------------------------------------------------------
13038  * Non-Cooperative Setup
13039  *
13040  * Each region is defined as an individual coalition.
13041  *
13042  *-------------------------------------------------------------------------------
13043   
13045   
13046  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
13048  *-------------------------------------------------------------------------------
13049  * Welfare
13050  *-------------------------------------------------------------------------------
13051   
13053   
13054  equtility_c_china
13055   
13056  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
13059  *-------------------------------------------------------------------------------
13060  * Economy
13061  * - Production and Consumption definition
13062  * - Top-level of the production function
13063  * Options:
13064  * --original_ssp=1 : original SSP population and GDP data
13065  *-------------------------------------------------------------------------------
13066   
13068   
13069  eqk_c_china
13070  eqq_cc_c_china
13071  eqq_fen_c_china
13072  eqq_y_c_china
13073   
13074  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
13077  *-------------------------------------------------------------------------------
13078  * Energy sector
13079  *-------------------------------------------------------------------------------
13080   
13082   
13083  eq_mkt_clearing_oil_c_china
13084  eqcost_pes_c_china
13085  eqcost_ses_c_china
13086  eqk_en_c_china
13087  eqq_ces_el_c_china
13088  eqq_ces_nelgas_c_china
13089  eqq_el2_c_china
13090  eqq_el_c_china
13091  eqq_elff_c_china
13092  eqq_en_c_china
13093  eqq_en_in_c_china
13094  eqq_en_mu_c_china
13095  eqq_en_tree_c_china
13096  eqq_nel_c_china
13097  eqq_nelog_c_china
13098  eqq_fuel_c_china
13099  eqq_elffren_c_china
13100   
13101  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
13104  *-------------------------------------------------------------------------------
13105  * Carbon Emissions
13106  * - Total CO2 emissions and CO2 Fossil fuel and Industry
13107  * - CO2 emission costs
13108  * - GHG permit market
13109  *-------------------------------------------------------------------------------
13110   
13112   
13113  eqq_emi_lim_c_china
13114  ***newcode
13115  eqq_emi_lim_USAc_china
13116  ***
13117  eqq_emi_tree_c_china
13118  eqq_emi_co2ffi_c_china
13119   
13120  eqcost_emi_co2_c_china
13121   
13122  eq_mkt_clearing_nip_c_china
13123   
13124  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
13127  *-------------------------------------------------------------------------------
13128  * Research & Development
13129  * Options:
13130  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
13131  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
13132  *-------------------------------------------------------------------------------
13133   
13135   
13136  eqk_rd_c_china
13137  eqspill_coop_c_china
13138  eqspill_lead_c_china
13139  eqspill_foll_c_china
13140  eqmcost_inv_back_c_china
13141  eqmcost_inv_back_lbd_c_china
13142   
13143  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
13146  *-------------------------------------------------------------------------------
13147  * Default Climate Policy Implementation
13148  *
13149  * Options:
13150  *    --policy={bau (default),ctax}
13151  *        Implement a climate policy setting
13152  *  [ --scen= ]
13153  *        Policy variant.
13154  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
13155  *          * XXX for a fixed percentage/yr (e.g. 5) growth
13156  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
13157  *  [ --ctax_year=2020 ]
13158  *        Starting year of the carbon tax
13159  *  [ --ctax_initial=30 ]
13160  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
13161  *
13162  *-------------------------------------------------------------------------------
13164   
13165  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
13167  *-------------------------------------------------------------------------------
13168  * Energy efficiency
13169  *-------------------------------------------------------------------------------
13170   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
13173  *-------------------------------------------------------------------------------
13174  * Hydro Power
13175  *-------------------------------------------------------------------------------
13176   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
13179  *-------------------------------------------------------------------------------
13180  * System Integration:
13181  * - Capacity constraint
13182  * - Flexibility constraint
13183  * - Grid Investment
13184  * - Capacity growth constraint
13185  *-------------------------------------------------------------------------------
13186   
13188   
13189  eqq_elintren_c_china
13190  eqflex_c_china
13191  eqk_en_grid_c_china
13192  eqk_en_grid_to_k_en_c_china
13193  eqfirm_capacity_c_china
13194  eqcap_growth_c_china
13195   
13196  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
13199  *-------------------------------------------------------------------------------
13200  * Nuclear power plants
13201  *-------------------------------------------------------------------------------
13202   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
13205  *-------------------------------------------------------------------------------
13206  * GHG module
13207  * - CH4 FFI + CH4 waste + CH4 open fires
13208  * - N2O FFI + N2O waste + N2O open fires
13209  *-------------------------------------------------------------------------------
13210   
13212   
13213  eqq_emi_waste_c_china
13214  eqq_emi_n2o_ffi_c_china
13215  eqq_emi_ch4_ffi_c_china
13216   
13217  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
13220  *-------------------------------------------------------------------------------
13221  * F-gases
13222  * - LLF
13223  * - SLF
13224  *-------------------------------------------------------------------------------
13225   
13227   
13228  eqq_emi_fgases_c_china
13229   
13230  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
13233  *-------------------------------------------------------------------------------
13234  * Landuse [simplified version of the land-use model]
13235  *-------------------------------------------------------------------------------
13236   
13238   
13239  eq_wbio_c_china
13240  eqcost_pes_wbio_c_china
13241   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
13244  *-------------------------------------------------------------------------------
13245  * Bioenergy power plant
13246  *-------------------------------------------------------------------------------
13247   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
13250  *-------------------------------------------------------------------------------
13251  * Traditional Biofuels
13252  * - Requires the precedence of mod_landuse
13253  *-------------------------------------------------------------------------------
13254   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
13257  *-------------------------------------------------------------------------------
13258  * Advanced biofuel
13259  * - Require the precedence of mod_landuse
13260  *-------------------------------------------------------------------------------
13261   
13263   
13264  eqq_en_lim_advbiofuel_c_china
13265  eqmcost_fuel_advbiofuel_c_china
13266   
13267  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
13270  *-------------------------------------------------------------------------------
13271  * Carbon Capture and Sequestration
13272  *-------------------------------------------------------------------------------
13273   
13275   
13276  eqq_emi_ccs_c_china
13277  eqcost_emi_sinks_c_china
13278  eq_stor_ccs_cum_c_china
13279  eq_emi_stor_ccs_c_china
13280  eq_emi_leak_ccs_c_china
13281   
13282  *-------------------------------------------------------------------------------
13284   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
13286  *-------------------------------------------------------------------------------
13287  * Coal for non-electric sectors
13288  * - Coke Plants
13289  * - Industrial and Commercial combined-heat-and-power (CHP)
13290  * - Others
13291  *-------------------------------------------------------------------------------
13292   
13294   
13295  eqcost_en_nelcoal_c_china
13296  eqq_ncoalabat_monotone_c_china
13297  eqq_en_nelcoalccs_max_c_china
13298   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
13301  *-------------------------------------------------------------------------------
13302  * Wind energy module
13303  * - onshore and offshore
13304  *-------------------------------------------------------------------------------
13305   
13307   
13308  eqq_en_mu_windon_c_china
13309  eqq_en_mu_windoff_c_china
13310  eqk_en_windon_c_china
13311  eqk_en_windoff_c_china
13312  eqq_en_windon_sum_c_china
13313  eqq_en_windoff_sum_c_china
13314  eqk_en_windon_sum_c_china
13315  eqk_en_windoff_sum_c_china
13316  eqi_en_windon_sum_c_china
13317  eqi_en_windoff_sum_c_china
13318   
13320   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
13322  *-------------------------------------------------------------------------------
13323  * Solar Powerplants (PV and CSP) to the electrical system
13324  *-------------------------------------------------------------------------------
13325   
13326  *-------------------------------------------------------------------------------
13328   
13329  eqq_en_mu_pv_c_china
13330  eqq_en_mu_csp_c_china
13331  eqk_en_pv_c_china
13332  eqk_en_csp_c_china
13333  eqq_en_pv_sum_c_china
13334  eqq_en_csp_sum_c_china
13335  eqk_en_pv_sum_c_china
13336  eqk_en_csp_sum_c_china
13337  eqi_en_pv_sum_c_china
13338  eqi_en_csp_sum_c_china
13339  eqk_en_solar_comp_c_china
13340   
13341  *-------------------------------------------------------------------------------
13343   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
13345  *-------------------------------------------------------------------------------
13346  * Technology development scenarios
13347  *-------------------------------------------------------------------------------
13348   
13350   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
13352  *-------------------------------------------------------------------------------
13353  * Oil Extraction
13354  * Options:
13355  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
13356  *-------------------------------------------------------------------------------
13357   
13359   
13360  eqoilcap_c_china
13361  eqoilprod_c_china
13362  eqq_out_oil_c_china
13363  eqcum_oil_c_china
13364  eqcost_oil_c_china
13365  eqi_oil_c_china
13366  eqi_out_oil_c_china
13367  eqq_emi_out_oil_c_china
13368   
13369  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
13372  *-------------------------------------------------------------------------------
13373  * Uranium Resources
13374  *-------------------------------------------------------------------------------
13375   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
13378  *-------------------------------------------------------------------------------
13379  * Gas Resources
13380  *-------------------------------------------------------------------------------
13381   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
13384  *-------------------------------------------------------------------------------
13385  * Coal Resources
13386  *-------------------------------------------------------------------------------
13387   
13389   
13390   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
13392  *-------------------------------------------------------------------------------
13393  * Climate
13394  *
13395  * Represents the climate
13396  * - based on the DICE model equations
13397  * - Radiative forcing for non CO2 ghgs
13398  * - parameters calibrated to reproduce MAGICC6.4 default response
13399  *
13400  *  Options:
13401  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
13402  * - $setglobal cooperate_on_climate {'YES','NO'}
13403  * - 'YES'(default): Countries within a coalition act in cooperation
13404  *   'NO': Countries within a coalition act individually
13405  *
13406  *-------------------------------------------------------------------------------
13407   
13409   
13411   
13412  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
13415  *-------------------------------------------------------------------------------
13416  * Long-run Damages from Climate Change
13417  * - Economic impacts
13418  * - Adaptation
13419  *-------------------------------------------------------------------------------
13420   
13422   
13424   
13425  *-------------------------------------------------------------------------------
13427   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
13429  *-------------------------------------------------------------------------------
13430  * Light-duty Vehicles for Personal Transport
13431  *-------------------------------------------------------------------------------
13432   
13434   
13435  eqnb_veh_c_china
13436  eqq_en_veh_c_china
13437  eqq_el_edv_c_china
13438  eqmcost_inv_hybrid_c_china
13439  eqmcost_inv_plghybrid_c_china
13440  eqmcost_inv_edv_c_china
13441  *** newcode
13442  eqq_inv_red_ban_c_china
13443  ***
13444  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
13447  *-------------------------------------------------------------------------------
13448  * Road Freight Transport
13449  *-------------------------------------------------------------------------------
13451   
13452  eqnb_frtveh_c_china
13453  eqq_en_frtveh_c_china
13454  eqq_el_frtedv_c_china
13455  eqmcost_inv_hbd_stfr_c_china
13456  eqmcost_inv_plghbd_stfr_c_china
13457  eqmcost_inv_edv_stfr_c_china
13458   
13459  *-------------------------------------------------------------------------------
13461   
13462   
13463   
13464   
13465   
13466   
13467  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
13469  *-------------------------------------------------------------------------------
13470  * Traditional Biomass
13471  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
13472  *  - require post_process to be launch before
13473  *-------------------------------------------------------------------------------
13474   
13476   
13477  * Optional modules
13478   
13479  * Policy modules
13480   
13481  * Calibration
13484  /;
13485   
13486  witch_c_china.optfile=1;   # the option file solvername.opt is to be used
13487  witch_c_china.holdfixed=1; # treat fixed values as constant
13488  witch_c_china.scaleopt=1;  # Use scaling for better gradients estimation
13489  witch_c_china.solvelink=3; # Use parallel or sequential solving
13490   
13495   
13496  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
13498  *-------------------------------------------------------------------------------
13499  * Call modules by order
13500  *-------------------------------------------------------------------------------
13504   
13505  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
13507  *-------------------------------------------------------------------------------
13508  * Algorithm
13509  *-------------------------------------------------------------------------------
13510   
13512   
13513  eqobj_c_europe
13514   
13515  *-------------------------------------------------------------------------------
13517   
13518  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
13520  *-------------------------------------------------------------------------------
13521  * Time
13522  * - Temporal structure
13523  * - Fixed time periods
13524  * - States of the world
13525  *-------------------------------------------------------------------------------
13526   
13528   
13529  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
13531  *-------------------------------------------------------------------------------
13532  * Geographic dimension and mapping with countries
13533  *-------------------------------------------------------------------------------
13534   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
13537  *-------------------------------------------------------------------------------
13538  * Non-Cooperative Setup
13539  *
13540  * Each region is defined as an individual coalition.
13541  *
13542  *-------------------------------------------------------------------------------
13543   
13545   
13546  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
13548  *-------------------------------------------------------------------------------
13549  * Welfare
13550  *-------------------------------------------------------------------------------
13551   
13553   
13554  equtility_c_europe
13555   
13556  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
13559  *-------------------------------------------------------------------------------
13560  * Economy
13561  * - Production and Consumption definition
13562  * - Top-level of the production function
13563  * Options:
13564  * --original_ssp=1 : original SSP population and GDP data
13565  *-------------------------------------------------------------------------------
13566   
13568   
13569  eqk_c_europe
13570  eqq_cc_c_europe
13571  eqq_fen_c_europe
13572  eqq_y_c_europe
13573   
13574  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
13577  *-------------------------------------------------------------------------------
13578  * Energy sector
13579  *-------------------------------------------------------------------------------
13580   
13582   
13583  eq_mkt_clearing_oil_c_europe
13584  eqcost_pes_c_europe
13585  eqcost_ses_c_europe
13586  eqk_en_c_europe
13587  eqq_ces_el_c_europe
13588  eqq_ces_nelgas_c_europe
13589  eqq_el2_c_europe
13590  eqq_el_c_europe
13591  eqq_elff_c_europe
13592  eqq_en_c_europe
13593  eqq_en_in_c_europe
13594  eqq_en_mu_c_europe
13595  eqq_en_tree_c_europe
13596  eqq_nel_c_europe
13597  eqq_nelog_c_europe
13598  eqq_fuel_c_europe
13599  eqq_elffren_c_europe
13600   
13601  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
13604  *-------------------------------------------------------------------------------
13605  * Carbon Emissions
13606  * - Total CO2 emissions and CO2 Fossil fuel and Industry
13607  * - CO2 emission costs
13608  * - GHG permit market
13609  *-------------------------------------------------------------------------------
13610   
13612   
13613  eqq_emi_lim_c_europe
13614  ***newcode
13615  eqq_emi_lim_USAc_europe
13616  ***
13617  eqq_emi_tree_c_europe
13618  eqq_emi_co2ffi_c_europe
13619   
13620  eqcost_emi_co2_c_europe
13621   
13622  eq_mkt_clearing_nip_c_europe
13623   
13624  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
13627  *-------------------------------------------------------------------------------
13628  * Research & Development
13629  * Options:
13630  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
13631  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
13632  *-------------------------------------------------------------------------------
13633   
13635   
13636  eqk_rd_c_europe
13637  eqspill_coop_c_europe
13638  eqspill_lead_c_europe
13639  eqspill_foll_c_europe
13640  eqmcost_inv_back_c_europe
13641  eqmcost_inv_back_lbd_c_europe
13642   
13643  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
13646  *-------------------------------------------------------------------------------
13647  * Default Climate Policy Implementation
13648  *
13649  * Options:
13650  *    --policy={bau (default),ctax}
13651  *        Implement a climate policy setting
13652  *  [ --scen= ]
13653  *        Policy variant.
13654  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
13655  *          * XXX for a fixed percentage/yr (e.g. 5) growth
13656  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
13657  *  [ --ctax_year=2020 ]
13658  *        Starting year of the carbon tax
13659  *  [ --ctax_initial=30 ]
13660  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
13661  *
13662  *-------------------------------------------------------------------------------
13664   
13665  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
13667  *-------------------------------------------------------------------------------
13668  * Energy efficiency
13669  *-------------------------------------------------------------------------------
13670   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
13673  *-------------------------------------------------------------------------------
13674  * Hydro Power
13675  *-------------------------------------------------------------------------------
13676   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
13679  *-------------------------------------------------------------------------------
13680  * System Integration:
13681  * - Capacity constraint
13682  * - Flexibility constraint
13683  * - Grid Investment
13684  * - Capacity growth constraint
13685  *-------------------------------------------------------------------------------
13686   
13688   
13689  eqq_elintren_c_europe
13690  eqflex_c_europe
13691  eqk_en_grid_c_europe
13692  eqk_en_grid_to_k_en_c_europe
13693  eqfirm_capacity_c_europe
13694  eqcap_growth_c_europe
13695   
13696  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
13699  *-------------------------------------------------------------------------------
13700  * Nuclear power plants
13701  *-------------------------------------------------------------------------------
13702   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
13705  *-------------------------------------------------------------------------------
13706  * GHG module
13707  * - CH4 FFI + CH4 waste + CH4 open fires
13708  * - N2O FFI + N2O waste + N2O open fires
13709  *-------------------------------------------------------------------------------
13710   
13712   
13713  eqq_emi_waste_c_europe
13714  eqq_emi_n2o_ffi_c_europe
13715  eqq_emi_ch4_ffi_c_europe
13716   
13717  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
13720  *-------------------------------------------------------------------------------
13721  * F-gases
13722  * - LLF
13723  * - SLF
13724  *-------------------------------------------------------------------------------
13725   
13727   
13728  eqq_emi_fgases_c_europe
13729   
13730  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
13733  *-------------------------------------------------------------------------------
13734  * Landuse [simplified version of the land-use model]
13735  *-------------------------------------------------------------------------------
13736   
13738   
13739  eq_wbio_c_europe
13740  eqcost_pes_wbio_c_europe
13741   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
13744  *-------------------------------------------------------------------------------
13745  * Bioenergy power plant
13746  *-------------------------------------------------------------------------------
13747   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
13750  *-------------------------------------------------------------------------------
13751  * Traditional Biofuels
13752  * - Requires the precedence of mod_landuse
13753  *-------------------------------------------------------------------------------
13754   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
13757  *-------------------------------------------------------------------------------
13758  * Advanced biofuel
13759  * - Require the precedence of mod_landuse
13760  *-------------------------------------------------------------------------------
13761   
13763   
13764  eqq_en_lim_advbiofuel_c_europe
13765  eqmcost_fuel_advbiofuel_c_europe
13766   
13767  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
13770  *-------------------------------------------------------------------------------
13771  * Carbon Capture and Sequestration
13772  *-------------------------------------------------------------------------------
13773   
13775   
13776  eqq_emi_ccs_c_europe
13777  eqcost_emi_sinks_c_europe
13778  eq_stor_ccs_cum_c_europe
13779  eq_emi_stor_ccs_c_europe
13780  eq_emi_leak_ccs_c_europe
13781   
13782  *-------------------------------------------------------------------------------
13784   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
13786  *-------------------------------------------------------------------------------
13787  * Coal for non-electric sectors
13788  * - Coke Plants
13789  * - Industrial and Commercial combined-heat-and-power (CHP)
13790  * - Others
13791  *-------------------------------------------------------------------------------
13792   
13794   
13795  eqcost_en_nelcoal_c_europe
13796  eqq_ncoalabat_monotone_c_europe
13797  eqq_en_nelcoalccs_max_c_europe
13798   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
13801  *-------------------------------------------------------------------------------
13802  * Wind energy module
13803  * - onshore and offshore
13804  *-------------------------------------------------------------------------------
13805   
13807   
13808  eqq_en_mu_windon_c_europe
13809  eqq_en_mu_windoff_c_europe
13810  eqk_en_windon_c_europe
13811  eqk_en_windoff_c_europe
13812  eqq_en_windon_sum_c_europe
13813  eqq_en_windoff_sum_c_europe
13814  eqk_en_windon_sum_c_europe
13815  eqk_en_windoff_sum_c_europe
13816  eqi_en_windon_sum_c_europe
13817  eqi_en_windoff_sum_c_europe
13818   
13820   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
13822  *-------------------------------------------------------------------------------
13823  * Solar Powerplants (PV and CSP) to the electrical system
13824  *-------------------------------------------------------------------------------
13825   
13826  *-------------------------------------------------------------------------------
13828   
13829  eqq_en_mu_pv_c_europe
13830  eqq_en_mu_csp_c_europe
13831  eqk_en_pv_c_europe
13832  eqk_en_csp_c_europe
13833  eqq_en_pv_sum_c_europe
13834  eqq_en_csp_sum_c_europe
13835  eqk_en_pv_sum_c_europe
13836  eqk_en_csp_sum_c_europe
13837  eqi_en_pv_sum_c_europe
13838  eqi_en_csp_sum_c_europe
13839  eqk_en_solar_comp_c_europe
13840   
13841  *-------------------------------------------------------------------------------
13843   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
13845  *-------------------------------------------------------------------------------
13846  * Technology development scenarios
13847  *-------------------------------------------------------------------------------
13848   
13850   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
13852  *-------------------------------------------------------------------------------
13853  * Oil Extraction
13854  * Options:
13855  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
13856  *-------------------------------------------------------------------------------
13857   
13859   
13860  eqoilcap_c_europe
13861  eqoilprod_c_europe
13862  eqq_out_oil_c_europe
13863  eqcum_oil_c_europe
13864  eqcost_oil_c_europe
13865  eqi_oil_c_europe
13866  eqi_out_oil_c_europe
13867  eqq_emi_out_oil_c_europe
13868   
13869  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
13872  *-------------------------------------------------------------------------------
13873  * Uranium Resources
13874  *-------------------------------------------------------------------------------
13875   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
13878  *-------------------------------------------------------------------------------
13879  * Gas Resources
13880  *-------------------------------------------------------------------------------
13881   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
13884  *-------------------------------------------------------------------------------
13885  * Coal Resources
13886  *-------------------------------------------------------------------------------
13887   
13889   
13890   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
13892  *-------------------------------------------------------------------------------
13893  * Climate
13894  *
13895  * Represents the climate
13896  * - based on the DICE model equations
13897  * - Radiative forcing for non CO2 ghgs
13898  * - parameters calibrated to reproduce MAGICC6.4 default response
13899  *
13900  *  Options:
13901  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
13902  * - $setglobal cooperate_on_climate {'YES','NO'}
13903  * - 'YES'(default): Countries within a coalition act in cooperation
13904  *   'NO': Countries within a coalition act individually
13905  *
13906  *-------------------------------------------------------------------------------
13907   
13909   
13911   
13912  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
13915  *-------------------------------------------------------------------------------
13916  * Long-run Damages from Climate Change
13917  * - Economic impacts
13918  * - Adaptation
13919  *-------------------------------------------------------------------------------
13920   
13922   
13924   
13925  *-------------------------------------------------------------------------------
13927   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
13929  *-------------------------------------------------------------------------------
13930  * Light-duty Vehicles for Personal Transport
13931  *-------------------------------------------------------------------------------
13932   
13934   
13935  eqnb_veh_c_europe
13936  eqq_en_veh_c_europe
13937  eqq_el_edv_c_europe
13938  eqmcost_inv_hybrid_c_europe
13939  eqmcost_inv_plghybrid_c_europe
13940  eqmcost_inv_edv_c_europe
13941  *** newcode
13942  eqq_inv_red_ban_c_europe
13943  ***
13944  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
13947  *-------------------------------------------------------------------------------
13948  * Road Freight Transport
13949  *-------------------------------------------------------------------------------
13951   
13952  eqnb_frtveh_c_europe
13953  eqq_en_frtveh_c_europe
13954  eqq_el_frtedv_c_europe
13955  eqmcost_inv_hbd_stfr_c_europe
13956  eqmcost_inv_plghbd_stfr_c_europe
13957  eqmcost_inv_edv_stfr_c_europe
13958   
13959  *-------------------------------------------------------------------------------
13961   
13962   
13963   
13964   
13965   
13966   
13967  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
13969  *-------------------------------------------------------------------------------
13970  * Traditional Biomass
13971  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
13972  *  - require post_process to be launch before
13973  *-------------------------------------------------------------------------------
13974   
13976   
13977  * Optional modules
13978   
13979  * Policy modules
13980   
13981  * Calibration
13984  ;
13985   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
13987  *-------------------------------------------------------------------------------
13988  * Call modules by order
13989  *-------------------------------------------------------------------------------
13993   
13994  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
13996  *-------------------------------------------------------------------------------
13997  * Algorithm
13998  *-------------------------------------------------------------------------------
13999   
14001   
14003  * Add the component of the (maximized) objective function as required by the ADMM algorithm
14004  eqobj_c_europe..
14005      OBJADMM =e= UTILITY -
14006          sum(t, rho_admm('oil',t) / 2 *
14007              sum(n$(map_clt_n('c_europe',n) and trading_t('oil',t,n)),
14008                  power(
14009                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
14010                      x_admm('oil',t,n) +
14011                      xavg_admm('oil',t) +
14012                      u_admm('oil', t)
14013                  ,2)
14014              )) -
14015          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
14016              sum(n$(map_clt_n('c_europe',n) and trading_t(c_mkt,t,n)),
14017                  power(
14018                      Q_EMI(c_mkt,t,n) -
14019                      x_admm(c_mkt,t,n) +
14020                      xavg_admm(c_mkt,t) +
14021                      u_admm(c_mkt,t)
14022                  ,2)
14023              ))
14024      ;
14026   
14027  *-------------------------------------------------------------------------------
14029   
14030  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
14032  *-------------------------------------------------------------------------------
14033  * Time
14034  * - Temporal structure
14035  * - Fixed time periods
14036  * - States of the world
14037  *-------------------------------------------------------------------------------
14038   
14040   
14041  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
14043  *-------------------------------------------------------------------------------
14044  * Geographic dimension and mapping with countries
14045  *-------------------------------------------------------------------------------
14046   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
14049  *-------------------------------------------------------------------------------
14050  * Non-Cooperative Setup
14051  *
14052  * Each region is defined as an individual coalition.
14053  *
14054  *-------------------------------------------------------------------------------
14055   
14057   
14058  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
14060  *-------------------------------------------------------------------------------
14061  * Welfare
14062  *-------------------------------------------------------------------------------
14063   
14065   
14066  * Objective function - Welfare to be maximized
14067  equtility_c_europe..
14068      UTILITY =e=
14069   
14070  * Negishi SWF
14072   
14073  * Welfare functions based on CEBGE
14076                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
14077                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
14078                      ((sum(n$map_clt_n('c_europe',n),
14079                        (l(t,n) / sum(nn$map_clt_n('c_europe',nn), l(t,nn))) *
14080                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
14081                       )**(1 / (1 - gamma))
14082                      )**(1 - eta) ) +
14083                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
14084                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
14085                      ((sum(n$map_clt_n('c_europe',n),
14086                        (l(t,n) / sum(nn$map_clt_n('c_europe',nn), l(t,nn))) *
14087                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
14088                       )**(1 / (1 - gamma))
14089                      )**(1 - eta) )
14090                  )**(1/(1 - eta)) * 1e6
14093   
14094   
14095  ;
14096   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
14099  *-------------------------------------------------------------------------------
14100  * Economy
14101  * - Production and Consumption definition
14102  * - Top-level of the production function
14103  * Options:
14104  * --original_ssp=1 : original SSP population and GDP data
14105  *-------------------------------------------------------------------------------
14106   
14108   
14109  * Production
14110  eqq_y_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14111   
14112      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
14113                     ## Climate feedback on economy
14115                     ## Net cost of Primary and Secondary Energy Sources
14116                     - sum(fuel, COST_FUEL(fuel,t,n))
14117                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
14118                     - sum(cce, COST_EMI(cce,t,n))
14119                     ## Carbon tax
14120                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
14121                     ## Additionnal costs on gross product
14122                     - sum(ccy, COST_Y(ccy,t,n))
14123  ;
14124   
14125  * Consumption
14126  eqq_cc_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
14127      Q('cc',t,n) =e= Q('y',t,n)
14128                      ## Investments in goods g (final good, adaptation)
14129                      -sum(g, I(g,t,n))
14130                      ## Investments in r&d
14131                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
14132                      ## Investments in energy technlogies
14133                      -sum(jinv, I_EN(jinv,t,n))
14134                       ## Investments in grid infrastructures
14135                      - I_EN_GRID(t,n)
14136                      ## Investments in extraction sector
14137                      -sum(extract(f), I_OUT(f,t,n))
14138                      ## O&M for energy technlogies
14139                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
14140                      ## O&M for extraction
14141                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
14142                      ## Energy technology penalty costs
14143                      -sum(jpenalty(j), COST_EN(j,t,n))
14144  ;
14145   
14146  * Capital accumulation
14147  eqk_c_europe(g,t,tp1,n)$(map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
14148      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
14149   
14150  * Energy services
14151  eqq_fen_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14152      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
14153   
14154  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
14157  *-------------------------------------------------------------------------------
14158  * Energy sector
14159  *-------------------------------------------------------------------------------
14160   
14162   
14163  *-------------------------------------------------------------------------------
14164  * Production - Energy sector
14165  *-------------------------------------------------------------------------------
14166   
14167  eqq_en_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14168      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
14169   
14170  *-------------------------------------------------------------------------------
14171  * Production - Electrical sector
14172  *-------------------------------------------------------------------------------
14173   
14174  eqq_el_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14175      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
14176   
14177  eqq_el2_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14178      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
14179   
14180  eqq_elffren_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14181      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
14182  eqq_elff_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14183      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
14184   
14185  eqq_ces_el_c_europe(ices_el,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
14186      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
14187  ;
14188   
14189  *-------------------------------------------------------------------------------
14190  * Production - Non-electrical sector
14191  *-------------------------------------------------------------------------------
14192   
14193  eqq_nel_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14194      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
14195   
14196  eqq_nelog_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14197      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
14198  ;
14199  eqq_ces_nelgas_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14200      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
14201   
14202  *-------------------------------------------------------------------------------
14203  * PES and fuels
14204  *-------------------------------------------------------------------------------
14205   
14206  eqq_fuel_c_europe(fuel,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
14207      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
14208   
14209  *-------------------------------------------------------------------------------
14210  * Cost
14211  *-------------------------------------------------------------------------------
14212   
14213  * Net cost of Primary Energy Supplies
14214  eqcost_pes_c_europe(f,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
14215      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
14216                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
14217   
14218  * Net cost of Secondary Energy Supplies
14219  eqcost_ses_c_europe(s,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14220      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
14221   
14222   
14223  *-------------------------------------------------------------------------------
14224  * Market balances
14225  *-------------------------------------------------------------------------------
14226   
14227  eq_mkt_clearing_oil_c_europe(t,'c_europe')$(internal('oil'))..
14228      sum( n$(map_clt_n('c_europe',n) and trading_t('oil',t,n)),
14229          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
14230      ) =e= 0;
14231   
14232  *-------------------------------------------------------------------------------
14233  * New capital in the energy sector
14234  *-------------------------------------------------------------------------------
14235   
14236  * Electrical generation plants (new)
14237  eqk_en_c_europe(jinv,t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
14238      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
14239                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
14240   
14241  *-------------------------------------------------------------------------------
14242  * ENERGY
14243  *-------------------------------------------------------------------------------
14244   
14245  * Capacity limits in the electrical sector
14246  eqq_en_mu_c_europe(jel,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
14247      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
14248   
14249  * Efficiency of energy technology sector
14250  eqq_en_in_c_europe(jfed,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
14251      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
14252                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
14253   
14254  * Energy generation "tree"
14255  eqq_en_tree_c_europe(j,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
14256      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
14257   
14258  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
14261  *-------------------------------------------------------------------------------
14262  * Carbon Emissions
14263  * - Total CO2 emissions and CO2 Fossil fuel and Industry
14264  * - CO2 emission costs
14265  * - GHG permit market
14266  *-------------------------------------------------------------------------------
14267   
14269   
14270  * GHG emission cap
14271  eqq_emi_lim_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
14272      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
14273                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
14274   
14275  ***newcode
14276  eqq_emi_lim_USAc_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
14277  ***
14278   
14279  * Compute total and sectoral emissions
14280  eqq_emi_tree_c_europe(t,n,e)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
14281      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
14282   
14283  * Industrial CO2 emissions
14284  eqq_emi_co2ffi_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14285      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
14286                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
14287                              # Emissions from biomass
14288                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
14289                              # Emissions from fuel extraction
14290                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
14291                              # Captured emissions
14292                              sum(sink, Q_EMI(sink,t,n));
14293   
14294  * CO2 emission costs
14295  eqcost_emi_co2_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14296      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
14297   
14298  * Emission permit market clearing for internal market
14299  eq_mkt_clearing_nip_c_europe(c_mkt,t,'c_europe')$(internal(c_mkt))..
14300      sum(n$(map_clt_n('c_europe',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
14301   
14302  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
14305  *-------------------------------------------------------------------------------
14306  * Research & Development
14307  * Options:
14308  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
14309  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
14310  *-------------------------------------------------------------------------------
14311   
14313   
14314  * Knowledge stock accumulation
14315  eqk_rd_c_europe(rd,t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
14316                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
14317                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
14318                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
14319                                        SPILL(rd,t,n)**rd_coef(rd,'d');
14320   
14321  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
14322  eqspill_coop_c_europe(rd,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_europe'))..
14323          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
14324                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_europe',nn)), K_RD(rd,t,nn)) +
14325                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_europe',nn))), K_RD.l(rd,t,nn))
14326                            ) *
14327                            (
14328                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_europe',nn)), K_RD(rd,t,nn)) +
14329                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_europe',nn))), K_RD.l(rd,t,nn))
14330                              ) - K_RD(rd,t,n)
14331                            );
14332   
14333  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
14334  eqspill_lead_c_europe(rd,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_europe')) and leadrd(rd,n))..
14335                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
14336   
14337  * No-cooperation : a follower sees is negative effect on the quantity he can grab
14338  eqspill_foll_c_europe(rd,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_europe')) and (not leadrd(rd,n)))..
14339                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
14340   
14341  *- Only LbR (without learning by doing)
14342  eqmcost_inv_back_c_europe(jrd,t,tt,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
14343                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
14344                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
14345   
14346  *- LbR together with learning by doing ==> Two-factor learning curve
14347  eqmcost_inv_back_lbd_c_europe(jrd,t,tt,tfirst,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
14348                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
14349                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
14350                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
14351   
14352  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
14355  *-------------------------------------------------------------------------------
14356  * Default Climate Policy Implementation
14357  *
14358  * Options:
14359  *    --policy={bau (default),ctax}
14360  *        Implement a climate policy setting
14361  *  [ --scen= ]
14362  *        Policy variant.
14363  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
14364  *          * XXX for a fixed percentage/yr (e.g. 5) growth
14365  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
14366  *  [ --ctax_year=2020 ]
14367  *        Starting year of the carbon tax
14368  *  [ --ctax_initial=30 ]
14369  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
14370  *
14371  *-------------------------------------------------------------------------------
14373   
14374  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
14376  *-------------------------------------------------------------------------------
14377  * Energy efficiency
14378  *-------------------------------------------------------------------------------
14379   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
14382  *-------------------------------------------------------------------------------
14383  * Hydro Power
14384  *-------------------------------------------------------------------------------
14385   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
14388  *-------------------------------------------------------------------------------
14389  * System Integration:
14390  * - Capacity constraint
14391  * - Flexibility constraint
14392  * - Grid Investment
14393  * - Capacity growth constraint
14394  *-------------------------------------------------------------------------------
14395   
14397   
14398   
14399  * Renewable CES
14400   
14401  * Definition of the renewable CES
14402  eqq_elintren_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14403      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
14404   
14405  * Capacity constraint
14406   
14408  eqfirm_capacity_c_europe(t,n)$(map_clt_n('c_europe',n) and (not tfix(t)) and year(t) gt 2005)..
14409                   sum(jel_firm, K_EN(jel_firm,t,n))
14410                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
14411                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
14412                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
14413                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
14414                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
14415                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
14416                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
14417                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
14418                                       ) / yearly_hours
14419  ;
14421   
14422  * Flexibility constraint
14423  eqflex_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14424          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
14425                             ( Q_EN('el',t,n) -
14426                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
14427                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
14428                             ) * flex_coeff('load')
14429  ;
14430   
14431  * Grid
14432   
14433  ** Grid depreciation and investments
14434  eqk_en_grid_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
14435                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
14436                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
14437   
14438  ** Grid adjustment to power capacity
14439  eqk_en_grid_to_k_en_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14440                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
14441                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
14442                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
14443                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
14444                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
14445                                     ) / grid_cost +
14446                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
14447                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
14448                                      K_EN('elcsp',t,n);
14449  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
14450   
14451  * Capacity growth constraint
14452  eqcap_growth_c_europe(jinv,t,tp1,tp2,n)$((map_clt_n('c_europe',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
14453                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
14454                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
14455   
14456  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
14459  *-------------------------------------------------------------------------------
14460  * Nuclear power plants
14461  *-------------------------------------------------------------------------------
14462   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
14465  *-------------------------------------------------------------------------------
14466  * GHG module
14467  * - CH4 FFI + CH4 waste + CH4 open fires
14468  * - N2O FFI + N2O waste + N2O open fires
14469  *-------------------------------------------------------------------------------
14470   
14472   
14473  * CH4, N2O waste emissions
14474  eqq_emi_waste_c_europe(waste,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
14475                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
14476   
14477  * n2o FFI
14478  eqq_emi_n2o_ffi_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
14479    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
14480                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
14481                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
14482                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
14483                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
14484                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
14485                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
14486                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
14487                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
14488                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
14489                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
14490                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
14491                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
14492                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
14493                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
14494                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
14495                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
14496                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
14497                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
14498                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
14499                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
14500                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
14501                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
14502                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
14503                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
14504                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
14505                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
14506                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
14507                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
14508                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
14509                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
14510   
14511  * ch4 FFI
14512  eqq_emi_ch4_ffi_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
14513    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
14516  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
14517  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
14518                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
14519                             smax(tt$(year(tt) eq 2015),
14520                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
14523  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
14524  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
14525                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
14526   
14527  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
14530  *-------------------------------------------------------------------------------
14531  * F-gases
14532  * - LLF
14533  * - SLF
14534  *-------------------------------------------------------------------------------
14535   
14537   
14538  * F-gases emissions
14539  eqq_emi_fgases_c_europe(fgases,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
14540                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
14541   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
14544  *-------------------------------------------------------------------------------
14545  * Landuse [simplified version of the land-use model]
14546  *-------------------------------------------------------------------------------
14547   
14549   
14550  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
14551  eq_wbio_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14552      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
14553   
14555  * Cost of all woody biomass produced for advanced biofuels and woody biomass
14556  eqcost_pes_wbio_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14557      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
14559   
14560  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
14563  *-------------------------------------------------------------------------------
14564  * Bioenergy power plant
14565  *-------------------------------------------------------------------------------
14566   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
14569  *-------------------------------------------------------------------------------
14570  * Traditional Biofuels
14571  * - Requires the precedence of mod_landuse
14572  *-------------------------------------------------------------------------------
14573   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
14576  *-------------------------------------------------------------------------------
14577  * Advanced biofuel
14578  * - Require the precedence of mod_landuse
14579  *-------------------------------------------------------------------------------
14580   
14582   
14583  * Limitations for nel backstops
14584  eqq_en_lim_advbiofuel_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
14585               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
14586               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
14587   
14588  * Peculiarity of advbiofuel
14589  eqmcost_fuel_advbiofuel_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14590                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
14591   
14592  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
14595  *-------------------------------------------------------------------------------
14596  * Carbon Capture and Sequestration
14597  *-------------------------------------------------------------------------------
14598   
14600   
14601  eqq_emi_ccs_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14602                  Q_EMI('ccs_plant',t,n) =e=
14603                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
14604                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
14605  ;
14606   
14607  eqcost_emi_sinks_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14608                  COST_EMI('ccs_plant',t,n) =e=
14609                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
14610                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
14611  ;
14612   
14613  eq_stor_ccs_cum_c_europe(ccs_stor,tp1,t,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
14614                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
14615  ;
14616   
14617  eq_emi_stor_ccs_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14618                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
14619  ;
14620   
14621  eq_emi_leak_ccs_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14622                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
14623   
14624  *-------------------------------------------------------------------------------
14626   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
14628  *-------------------------------------------------------------------------------
14629  * Coal for non-electric sectors
14630  * - Coke Plants
14631  * - Industrial and Commercial combined-heat-and-power (CHP)
14632  * - Others
14633  *-------------------------------------------------------------------------------
14634   
14636   
14637  eqcost_en_nelcoal_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14638           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
14639                                          nelcoal_max_abat(t,n) *
14640                                          (nelcoal_cmac(n,'a') *
14641                                            Q_EN('nelcoalabat',t,n) /
14642                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
14643                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
14644                                              (exp(nelcoal_cmac(n,'c') *
14645                                                (Q_EN('nelcoalabat',t,n)/
14646                                                  (nelcoal_max_abat(t,n) *
14647                                                      nelcoal_baseline(t,n))
14648                                                  ) - 1 )
14649                                              )
14650                                          );
14651   
14652  eqq_ncoalabat_monotone_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
14653          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
14654   
14655  * ensure Q_EN is lower than K_EN for CCS as not in jel
14656  eqq_en_nelcoalccs_max_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14657          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
14658   
14659  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
14662  *-------------------------------------------------------------------------------
14663  * Wind energy module
14664  * - onshore and offshore
14665  *-------------------------------------------------------------------------------
14666   
14668   
14669  * Capacity limits in the wind onshore electrical sector
14670  eqq_en_mu_windon_c_europe(wind_dist,wind_class,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
14671      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
14672   
14673  * Capacity limits in the wind offshore electrical sector
14674  eqq_en_mu_windoff_c_europe(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
14675      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
14676   
14677  * Wind onshore electrical generation plants (new)
14678  eqk_en_windon_c_europe(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
14679      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
14680                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
14681   
14682  * Wind offshore electrical generation plants (new)
14683  eqk_en_windoff_c_europe(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
14684      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
14685                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
14686   
14687  * Total onshore wind energy production
14688  eqq_en_windon_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14689                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
14690   
14691  * Total offshore wind energy production
14692  eqq_en_windoff_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14693                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
14694   
14695  * Total onshore wind capacity
14696  eqk_en_windon_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14697                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
14698   
14699  * Total offshore wind capacity
14700  eqk_en_windoff_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14701                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
14702   
14703  * Total onshore wind investment
14704  eqi_en_windon_sum_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
14705                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
14706   
14707  * Total offshore wind investment
14708  eqi_en_windoff_sum_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
14709                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
14710   
14711  *-------------------------------------------------------------------------------
14713   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
14715  *-------------------------------------------------------------------------------
14716  * Solar Powerplants (PV and CSP) to the electrical system
14717  *-------------------------------------------------------------------------------
14718   
14719  *-------------------------------------------------------------------------------
14721   
14722   
14723  * Capacity limits in the pv electrical sector
14724  eqq_en_mu_pv_c_europe(solar_dist,solar_class,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
14725                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
14726   
14727  * Capacity limits in the csp electrical sector
14728  eqq_en_mu_csp_c_europe(solar_dist,solar_class,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
14729                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
14730   
14731  * PV electrical generation plants (new)
14732  eqk_en_pv_c_europe(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
14733                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
14734                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
14735   
14736  * CSP electrical generation plants (new)
14737  eqk_en_csp_c_europe(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
14738                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
14739                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
14740   
14741  * Total PV energy production
14742  eqq_en_pv_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14743                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
14744   
14745  * Total CSP energy production
14746  eqq_en_csp_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14747                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
14748   
14749  * Total PV capacity
14750  eqk_en_pv_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14751                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
14752   
14753  * Total CSP capacity
14754  eqk_en_csp_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14755                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
14756   
14757  * Total PV investment
14758  eqi_en_pv_sum_c_europe(t,tp1,n)$(map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
14759                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
14760   
14761  * Total CSP investment
14762  eqi_en_csp_sum_c_europe(t,tp1,n)$(map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
14763                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
14764   
14765  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
14766  eqk_en_solar_comp_c_europe(t,n,solar_dist)$(map_clt_n('c_europe',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
14767                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
14768                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
14769   
14770   
14771   
14772  *-------------------------------------------------------------------------------
14774   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
14776  *-------------------------------------------------------------------------------
14777  * Technology development scenarios
14778  *-------------------------------------------------------------------------------
14779   
14781   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
14783  *-------------------------------------------------------------------------------
14784  * Oil Extraction
14785  * Options:
14786  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
14787  *-------------------------------------------------------------------------------
14788   
14790   
14791  * Capacity
14792  eqoilcap_c_europe(t,tp1,n,oilg)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
14793      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
14794   
14795  * Production
14796  eqoilprod_c_europe(t,tp1,n,oilg)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
14797      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
14798   
14799  eqq_out_oil_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14800      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
14801   
14802  * Cumulative production
14803  eqcum_oil_c_europe(t,tp1,n,oilg)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
14804      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
14805   
14806  * Cost
14807  eqcost_oil_c_europe(t,tp1,n,oilg)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
14808      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
14809                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
14810                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
14811   
14812  * Investments
14813  eqi_oil_c_europe(t,tp1,n,oilg)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
14814      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
14815   
14816  * Total investment
14817  eqi_out_oil_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
14818      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
14819   
14820  * Emissions
14821  eqq_emi_out_oil_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14822      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
14823   
14824  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
14827  *-------------------------------------------------------------------------------
14828  * Uranium Resources
14829  *-------------------------------------------------------------------------------
14830   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
14833  *-------------------------------------------------------------------------------
14834  * Gas Resources
14835  *-------------------------------------------------------------------------------
14836   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
14839  *-------------------------------------------------------------------------------
14840  * Coal Resources
14841  *-------------------------------------------------------------------------------
14842   
14844   
14845   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
14847  *-------------------------------------------------------------------------------
14848  * Climate
14849  *
14850  * Represents the climate
14851  * - based on the DICE model equations
14852  * - Radiative forcing for non CO2 ghgs
14853  * - parameters calibrated to reproduce MAGICC6.4 default response
14854  *
14855  *  Options:
14856  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
14857  * - $setglobal cooperate_on_climate {'YES','NO'}
14858  * - 'YES'(default): Countries within a coalition act in cooperation
14859  *   'NO': Countries within a coalition act individually
14860  *
14861  *-------------------------------------------------------------------------------
14862   
14864   
14866   
14867  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
14870  *-------------------------------------------------------------------------------
14871  * Long-run Damages from Climate Change
14872  * - Economic impacts
14873  * - Adaptation
14874  *-------------------------------------------------------------------------------
14875   
14877   
14879   
14880  *-------------------------------------------------------------------------------
14882   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
14884  *-------------------------------------------------------------------------------
14885  * Light-duty Vehicles for Personal Transport
14886  *-------------------------------------------------------------------------------
14887   
14889   
14890  *** newcode
14891  eqq_inv_red_ban_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14892      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
14893   
14894  ***
14895  *- Number of light duty vehicles
14896  eqnb_veh_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14897      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
14898   
14899  *- Yearly energy demand of vehicles
14900  eqq_en_veh_c_europe(jveh,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14901      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
14902   
14903  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
14904  eqq_el_edv_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14905      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
14906   
14907  *- Investment cost for hybrid vehicles
14908  eqmcost_inv_hybrid_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
14909                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
14910   
14911  *- Investment cost for plug-in hybrid vehicles
14912  eqmcost_inv_plghybrid_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
14913                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
14914   
14915  *- Investment cost for electric drive vehicles
14916  eqmcost_inv_edv_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
14917                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
14918   
14919  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
14922  *-------------------------------------------------------------------------------
14923  * Road Freight Transport
14924  *-------------------------------------------------------------------------------
14926   
14927  *-  Number of freight vehicles
14928  eqnb_frtveh_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14929                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
14930   
14931  *-  Yearly fuel consumption of freight vehicles
14932  eqq_en_frtveh_c_europe(jfrt,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14933                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
14934   
14935  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
14936  eqq_el_frtedv_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14937                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
14938   
14939  *-  Investment cost for hbd_stfr vehicle
14940  eqmcost_inv_hbd_stfr_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
14941                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
14942   
14943  *-  Investment cost for plug-in hbd_stfr vehicle
14944  eqmcost_inv_plghbd_stfr_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
14945                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
14946   
14947  *-  Investment cost for electric drive vehicle
14948  eqmcost_inv_edv_stfr_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
14949                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
14950   
14951  *-------------------------------------------------------------------------------
14953   
14954   
14955   
14956   
14957   
14958   
14959  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
14961  *-------------------------------------------------------------------------------
14962  * Traditional Biomass
14963  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
14964  *  - require post_process to be launch before
14965  *-------------------------------------------------------------------------------
14966   
14968   
14969  * Optional modules
14970   
14971  * Policy modules
14972   
14973  * Calibration
14976   
14977   
14978  model witch_c_europe /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
14980  *-------------------------------------------------------------------------------
14981  * Call modules by order
14982  *-------------------------------------------------------------------------------
14986   
14987  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
14989  *-------------------------------------------------------------------------------
14990  * Algorithm
14991  *-------------------------------------------------------------------------------
14992   
14994   
14995  eqobj_c_europe
14996   
14997  *-------------------------------------------------------------------------------
14999   
15000  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
15002  *-------------------------------------------------------------------------------
15003  * Time
15004  * - Temporal structure
15005  * - Fixed time periods
15006  * - States of the world
15007  *-------------------------------------------------------------------------------
15008   
15010   
15011  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
15013  *-------------------------------------------------------------------------------
15014  * Geographic dimension and mapping with countries
15015  *-------------------------------------------------------------------------------
15016   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
15019  *-------------------------------------------------------------------------------
15020  * Non-Cooperative Setup
15021  *
15022  * Each region is defined as an individual coalition.
15023  *
15024  *-------------------------------------------------------------------------------
15025   
15027   
15028  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
15030  *-------------------------------------------------------------------------------
15031  * Welfare
15032  *-------------------------------------------------------------------------------
15033   
15035   
15036  equtility_c_europe
15037   
15038  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
15041  *-------------------------------------------------------------------------------
15042  * Economy
15043  * - Production and Consumption definition
15044  * - Top-level of the production function
15045  * Options:
15046  * --original_ssp=1 : original SSP population and GDP data
15047  *-------------------------------------------------------------------------------
15048   
15050   
15051  eqk_c_europe
15052  eqq_cc_c_europe
15053  eqq_fen_c_europe
15054  eqq_y_c_europe
15055   
15056  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
15059  *-------------------------------------------------------------------------------
15060  * Energy sector
15061  *-------------------------------------------------------------------------------
15062   
15064   
15065  eq_mkt_clearing_oil_c_europe
15066  eqcost_pes_c_europe
15067  eqcost_ses_c_europe
15068  eqk_en_c_europe
15069  eqq_ces_el_c_europe
15070  eqq_ces_nelgas_c_europe
15071  eqq_el2_c_europe
15072  eqq_el_c_europe
15073  eqq_elff_c_europe
15074  eqq_en_c_europe
15075  eqq_en_in_c_europe
15076  eqq_en_mu_c_europe
15077  eqq_en_tree_c_europe
15078  eqq_nel_c_europe
15079  eqq_nelog_c_europe
15080  eqq_fuel_c_europe
15081  eqq_elffren_c_europe
15082   
15083  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
15086  *-------------------------------------------------------------------------------
15087  * Carbon Emissions
15088  * - Total CO2 emissions and CO2 Fossil fuel and Industry
15089  * - CO2 emission costs
15090  * - GHG permit market
15091  *-------------------------------------------------------------------------------
15092   
15094   
15095  eqq_emi_lim_c_europe
15096  ***newcode
15097  eqq_emi_lim_USAc_europe
15098  ***
15099  eqq_emi_tree_c_europe
15100  eqq_emi_co2ffi_c_europe
15101   
15102  eqcost_emi_co2_c_europe
15103   
15104  eq_mkt_clearing_nip_c_europe
15105   
15106  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
15109  *-------------------------------------------------------------------------------
15110  * Research & Development
15111  * Options:
15112  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
15113  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
15114  *-------------------------------------------------------------------------------
15115   
15117   
15118  eqk_rd_c_europe
15119  eqspill_coop_c_europe
15120  eqspill_lead_c_europe
15121  eqspill_foll_c_europe
15122  eqmcost_inv_back_c_europe
15123  eqmcost_inv_back_lbd_c_europe
15124   
15125  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
15128  *-------------------------------------------------------------------------------
15129  * Default Climate Policy Implementation
15130  *
15131  * Options:
15132  *    --policy={bau (default),ctax}
15133  *        Implement a climate policy setting
15134  *  [ --scen= ]
15135  *        Policy variant.
15136  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
15137  *          * XXX for a fixed percentage/yr (e.g. 5) growth
15138  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
15139  *  [ --ctax_year=2020 ]
15140  *        Starting year of the carbon tax
15141  *  [ --ctax_initial=30 ]
15142  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
15143  *
15144  *-------------------------------------------------------------------------------
15146   
15147  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
15149  *-------------------------------------------------------------------------------
15150  * Energy efficiency
15151  *-------------------------------------------------------------------------------
15152   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
15155  *-------------------------------------------------------------------------------
15156  * Hydro Power
15157  *-------------------------------------------------------------------------------
15158   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
15161  *-------------------------------------------------------------------------------
15162  * System Integration:
15163  * - Capacity constraint
15164  * - Flexibility constraint
15165  * - Grid Investment
15166  * - Capacity growth constraint
15167  *-------------------------------------------------------------------------------
15168   
15170   
15171  eqq_elintren_c_europe
15172  eqflex_c_europe
15173  eqk_en_grid_c_europe
15174  eqk_en_grid_to_k_en_c_europe
15175  eqfirm_capacity_c_europe
15176  eqcap_growth_c_europe
15177   
15178  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
15181  *-------------------------------------------------------------------------------
15182  * Nuclear power plants
15183  *-------------------------------------------------------------------------------
15184   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
15187  *-------------------------------------------------------------------------------
15188  * GHG module
15189  * - CH4 FFI + CH4 waste + CH4 open fires
15190  * - N2O FFI + N2O waste + N2O open fires
15191  *-------------------------------------------------------------------------------
15192   
15194   
15195  eqq_emi_waste_c_europe
15196  eqq_emi_n2o_ffi_c_europe
15197  eqq_emi_ch4_ffi_c_europe
15198   
15199  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
15202  *-------------------------------------------------------------------------------
15203  * F-gases
15204  * - LLF
15205  * - SLF
15206  *-------------------------------------------------------------------------------
15207   
15209   
15210  eqq_emi_fgases_c_europe
15211   
15212  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
15215  *-------------------------------------------------------------------------------
15216  * Landuse [simplified version of the land-use model]
15217  *-------------------------------------------------------------------------------
15218   
15220   
15221  eq_wbio_c_europe
15222  eqcost_pes_wbio_c_europe
15223   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
15226  *-------------------------------------------------------------------------------
15227  * Bioenergy power plant
15228  *-------------------------------------------------------------------------------
15229   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
15232  *-------------------------------------------------------------------------------
15233  * Traditional Biofuels
15234  * - Requires the precedence of mod_landuse
15235  *-------------------------------------------------------------------------------
15236   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
15239  *-------------------------------------------------------------------------------
15240  * Advanced biofuel
15241  * - Require the precedence of mod_landuse
15242  *-------------------------------------------------------------------------------
15243   
15245   
15246  eqq_en_lim_advbiofuel_c_europe
15247  eqmcost_fuel_advbiofuel_c_europe
15248   
15249  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
15252  *-------------------------------------------------------------------------------
15253  * Carbon Capture and Sequestration
15254  *-------------------------------------------------------------------------------
15255   
15257   
15258  eqq_emi_ccs_c_europe
15259  eqcost_emi_sinks_c_europe
15260  eq_stor_ccs_cum_c_europe
15261  eq_emi_stor_ccs_c_europe
15262  eq_emi_leak_ccs_c_europe
15263   
15264  *-------------------------------------------------------------------------------
15266   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
15268  *-------------------------------------------------------------------------------
15269  * Coal for non-electric sectors
15270  * - Coke Plants
15271  * - Industrial and Commercial combined-heat-and-power (CHP)
15272  * - Others
15273  *-------------------------------------------------------------------------------
15274   
15276   
15277  eqcost_en_nelcoal_c_europe
15278  eqq_ncoalabat_monotone_c_europe
15279  eqq_en_nelcoalccs_max_c_europe
15280   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
15283  *-------------------------------------------------------------------------------
15284  * Wind energy module
15285  * - onshore and offshore
15286  *-------------------------------------------------------------------------------
15287   
15289   
15290  eqq_en_mu_windon_c_europe
15291  eqq_en_mu_windoff_c_europe
15292  eqk_en_windon_c_europe
15293  eqk_en_windoff_c_europe
15294  eqq_en_windon_sum_c_europe
15295  eqq_en_windoff_sum_c_europe
15296  eqk_en_windon_sum_c_europe
15297  eqk_en_windoff_sum_c_europe
15298  eqi_en_windon_sum_c_europe
15299  eqi_en_windoff_sum_c_europe
15300   
15302   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
15304  *-------------------------------------------------------------------------------
15305  * Solar Powerplants (PV and CSP) to the electrical system
15306  *-------------------------------------------------------------------------------
15307   
15308  *-------------------------------------------------------------------------------
15310   
15311  eqq_en_mu_pv_c_europe
15312  eqq_en_mu_csp_c_europe
15313  eqk_en_pv_c_europe
15314  eqk_en_csp_c_europe
15315  eqq_en_pv_sum_c_europe
15316  eqq_en_csp_sum_c_europe
15317  eqk_en_pv_sum_c_europe
15318  eqk_en_csp_sum_c_europe
15319  eqi_en_pv_sum_c_europe
15320  eqi_en_csp_sum_c_europe
15321  eqk_en_solar_comp_c_europe
15322   
15323  *-------------------------------------------------------------------------------
15325   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
15327  *-------------------------------------------------------------------------------
15328  * Technology development scenarios
15329  *-------------------------------------------------------------------------------
15330   
15332   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
15334  *-------------------------------------------------------------------------------
15335  * Oil Extraction
15336  * Options:
15337  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
15338  *-------------------------------------------------------------------------------
15339   
15341   
15342  eqoilcap_c_europe
15343  eqoilprod_c_europe
15344  eqq_out_oil_c_europe
15345  eqcum_oil_c_europe
15346  eqcost_oil_c_europe
15347  eqi_oil_c_europe
15348  eqi_out_oil_c_europe
15349  eqq_emi_out_oil_c_europe
15350   
15351  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
15354  *-------------------------------------------------------------------------------
15355  * Uranium Resources
15356  *-------------------------------------------------------------------------------
15357   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
15360  *-------------------------------------------------------------------------------
15361  * Gas Resources
15362  *-------------------------------------------------------------------------------
15363   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
15366  *-------------------------------------------------------------------------------
15367  * Coal Resources
15368  *-------------------------------------------------------------------------------
15369   
15371   
15372   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
15374  *-------------------------------------------------------------------------------
15375  * Climate
15376  *
15377  * Represents the climate
15378  * - based on the DICE model equations
15379  * - Radiative forcing for non CO2 ghgs
15380  * - parameters calibrated to reproduce MAGICC6.4 default response
15381  *
15382  *  Options:
15383  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
15384  * - $setglobal cooperate_on_climate {'YES','NO'}
15385  * - 'YES'(default): Countries within a coalition act in cooperation
15386  *   'NO': Countries within a coalition act individually
15387  *
15388  *-------------------------------------------------------------------------------
15389   
15391   
15393   
15394  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
15397  *-------------------------------------------------------------------------------
15398  * Long-run Damages from Climate Change
15399  * - Economic impacts
15400  * - Adaptation
15401  *-------------------------------------------------------------------------------
15402   
15404   
15406   
15407  *-------------------------------------------------------------------------------
15409   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
15411  *-------------------------------------------------------------------------------
15412  * Light-duty Vehicles for Personal Transport
15413  *-------------------------------------------------------------------------------
15414   
15416   
15417  eqnb_veh_c_europe
15418  eqq_en_veh_c_europe
15419  eqq_el_edv_c_europe
15420  eqmcost_inv_hybrid_c_europe
15421  eqmcost_inv_plghybrid_c_europe
15422  eqmcost_inv_edv_c_europe
15423  *** newcode
15424  eqq_inv_red_ban_c_europe
15425  ***
15426  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
15429  *-------------------------------------------------------------------------------
15430  * Road Freight Transport
15431  *-------------------------------------------------------------------------------
15433   
15434  eqnb_frtveh_c_europe
15435  eqq_en_frtveh_c_europe
15436  eqq_el_frtedv_c_europe
15437  eqmcost_inv_hbd_stfr_c_europe
15438  eqmcost_inv_plghbd_stfr_c_europe
15439  eqmcost_inv_edv_stfr_c_europe
15440   
15441  *-------------------------------------------------------------------------------
15443   
15444   
15445   
15446   
15447   
15448   
15449  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
15451  *-------------------------------------------------------------------------------
15452  * Traditional Biomass
15453  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
15454  *  - require post_process to be launch before
15455  *-------------------------------------------------------------------------------
15456   
15458   
15459  * Optional modules
15460   
15461  * Policy modules
15462   
15463  * Calibration
15466  /;
15467   
15468  witch_c_europe.optfile=1;   # the option file solvername.opt is to be used
15469  witch_c_europe.holdfixed=1; # treat fixed values as constant
15470  witch_c_europe.scaleopt=1;  # Use scaling for better gradients estimation
15471  witch_c_europe.solvelink=3; # Use parallel or sequential solving
15472   
15477   
15478  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
15480  *-------------------------------------------------------------------------------
15481  * Call modules by order
15482  *-------------------------------------------------------------------------------
15486   
15487  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
15489  *-------------------------------------------------------------------------------
15490  * Algorithm
15491  *-------------------------------------------------------------------------------
15492   
15494   
15495  eqobj_c_india
15496   
15497  *-------------------------------------------------------------------------------
15499   
15500  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
15502  *-------------------------------------------------------------------------------
15503  * Time
15504  * - Temporal structure
15505  * - Fixed time periods
15506  * - States of the world
15507  *-------------------------------------------------------------------------------
15508   
15510   
15511  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
15513  *-------------------------------------------------------------------------------
15514  * Geographic dimension and mapping with countries
15515  *-------------------------------------------------------------------------------
15516   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
15519  *-------------------------------------------------------------------------------
15520  * Non-Cooperative Setup
15521  *
15522  * Each region is defined as an individual coalition.
15523  *
15524  *-------------------------------------------------------------------------------
15525   
15527   
15528  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
15530  *-------------------------------------------------------------------------------
15531  * Welfare
15532  *-------------------------------------------------------------------------------
15533   
15535   
15536  equtility_c_india
15537   
15538  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
15541  *-------------------------------------------------------------------------------
15542  * Economy
15543  * - Production and Consumption definition
15544  * - Top-level of the production function
15545  * Options:
15546  * --original_ssp=1 : original SSP population and GDP data
15547  *-------------------------------------------------------------------------------
15548   
15550   
15551  eqk_c_india
15552  eqq_cc_c_india
15553  eqq_fen_c_india
15554  eqq_y_c_india
15555   
15556  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
15559  *-------------------------------------------------------------------------------
15560  * Energy sector
15561  *-------------------------------------------------------------------------------
15562   
15564   
15565  eq_mkt_clearing_oil_c_india
15566  eqcost_pes_c_india
15567  eqcost_ses_c_india
15568  eqk_en_c_india
15569  eqq_ces_el_c_india
15570  eqq_ces_nelgas_c_india
15571  eqq_el2_c_india
15572  eqq_el_c_india
15573  eqq_elff_c_india
15574  eqq_en_c_india
15575  eqq_en_in_c_india
15576  eqq_en_mu_c_india
15577  eqq_en_tree_c_india
15578  eqq_nel_c_india
15579  eqq_nelog_c_india
15580  eqq_fuel_c_india
15581  eqq_elffren_c_india
15582   
15583  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
15586  *-------------------------------------------------------------------------------
15587  * Carbon Emissions
15588  * - Total CO2 emissions and CO2 Fossil fuel and Industry
15589  * - CO2 emission costs
15590  * - GHG permit market
15591  *-------------------------------------------------------------------------------
15592   
15594   
15595  eqq_emi_lim_c_india
15596  ***newcode
15597  eqq_emi_lim_USAc_india
15598  ***
15599  eqq_emi_tree_c_india
15600  eqq_emi_co2ffi_c_india
15601   
15602  eqcost_emi_co2_c_india
15603   
15604  eq_mkt_clearing_nip_c_india
15605   
15606  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
15609  *-------------------------------------------------------------------------------
15610  * Research & Development
15611  * Options:
15612  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
15613  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
15614  *-------------------------------------------------------------------------------
15615   
15617   
15618  eqk_rd_c_india
15619  eqspill_coop_c_india
15620  eqspill_lead_c_india
15621  eqspill_foll_c_india
15622  eqmcost_inv_back_c_india
15623  eqmcost_inv_back_lbd_c_india
15624   
15625  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
15628  *-------------------------------------------------------------------------------
15629  * Default Climate Policy Implementation
15630  *
15631  * Options:
15632  *    --policy={bau (default),ctax}
15633  *        Implement a climate policy setting
15634  *  [ --scen= ]
15635  *        Policy variant.
15636  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
15637  *          * XXX for a fixed percentage/yr (e.g. 5) growth
15638  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
15639  *  [ --ctax_year=2020 ]
15640  *        Starting year of the carbon tax
15641  *  [ --ctax_initial=30 ]
15642  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
15643  *
15644  *-------------------------------------------------------------------------------
15646   
15647  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
15649  *-------------------------------------------------------------------------------
15650  * Energy efficiency
15651  *-------------------------------------------------------------------------------
15652   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
15655  *-------------------------------------------------------------------------------
15656  * Hydro Power
15657  *-------------------------------------------------------------------------------
15658   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
15661  *-------------------------------------------------------------------------------
15662  * System Integration:
15663  * - Capacity constraint
15664  * - Flexibility constraint
15665  * - Grid Investment
15666  * - Capacity growth constraint
15667  *-------------------------------------------------------------------------------
15668   
15670   
15671  eqq_elintren_c_india
15672  eqflex_c_india
15673  eqk_en_grid_c_india
15674  eqk_en_grid_to_k_en_c_india
15675  eqfirm_capacity_c_india
15676  eqcap_growth_c_india
15677   
15678  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
15681  *-------------------------------------------------------------------------------
15682  * Nuclear power plants
15683  *-------------------------------------------------------------------------------
15684   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
15687  *-------------------------------------------------------------------------------
15688  * GHG module
15689  * - CH4 FFI + CH4 waste + CH4 open fires
15690  * - N2O FFI + N2O waste + N2O open fires
15691  *-------------------------------------------------------------------------------
15692   
15694   
15695  eqq_emi_waste_c_india
15696  eqq_emi_n2o_ffi_c_india
15697  eqq_emi_ch4_ffi_c_india
15698   
15699  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
15702  *-------------------------------------------------------------------------------
15703  * F-gases
15704  * - LLF
15705  * - SLF
15706  *-------------------------------------------------------------------------------
15707   
15709   
15710  eqq_emi_fgases_c_india
15711   
15712  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
15715  *-------------------------------------------------------------------------------
15716  * Landuse [simplified version of the land-use model]
15717  *-------------------------------------------------------------------------------
15718   
15720   
15721  eq_wbio_c_india
15722  eqcost_pes_wbio_c_india
15723   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
15726  *-------------------------------------------------------------------------------
15727  * Bioenergy power plant
15728  *-------------------------------------------------------------------------------
15729   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
15732  *-------------------------------------------------------------------------------
15733  * Traditional Biofuels
15734  * - Requires the precedence of mod_landuse
15735  *-------------------------------------------------------------------------------
15736   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
15739  *-------------------------------------------------------------------------------
15740  * Advanced biofuel
15741  * - Require the precedence of mod_landuse
15742  *-------------------------------------------------------------------------------
15743   
15745   
15746  eqq_en_lim_advbiofuel_c_india
15747  eqmcost_fuel_advbiofuel_c_india
15748   
15749  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
15752  *-------------------------------------------------------------------------------
15753  * Carbon Capture and Sequestration
15754  *-------------------------------------------------------------------------------
15755   
15757   
15758  eqq_emi_ccs_c_india
15759  eqcost_emi_sinks_c_india
15760  eq_stor_ccs_cum_c_india
15761  eq_emi_stor_ccs_c_india
15762  eq_emi_leak_ccs_c_india
15763   
15764  *-------------------------------------------------------------------------------
15766   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
15768  *-------------------------------------------------------------------------------
15769  * Coal for non-electric sectors
15770  * - Coke Plants
15771  * - Industrial and Commercial combined-heat-and-power (CHP)
15772  * - Others
15773  *-------------------------------------------------------------------------------
15774   
15776   
15777  eqcost_en_nelcoal_c_india
15778  eqq_ncoalabat_monotone_c_india
15779  eqq_en_nelcoalccs_max_c_india
15780   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
15783  *-------------------------------------------------------------------------------
15784  * Wind energy module
15785  * - onshore and offshore
15786  *-------------------------------------------------------------------------------
15787   
15789   
15790  eqq_en_mu_windon_c_india
15791  eqq_en_mu_windoff_c_india
15792  eqk_en_windon_c_india
15793  eqk_en_windoff_c_india
15794  eqq_en_windon_sum_c_india
15795  eqq_en_windoff_sum_c_india
15796  eqk_en_windon_sum_c_india
15797  eqk_en_windoff_sum_c_india
15798  eqi_en_windon_sum_c_india
15799  eqi_en_windoff_sum_c_india
15800   
15802   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
15804  *-------------------------------------------------------------------------------
15805  * Solar Powerplants (PV and CSP) to the electrical system
15806  *-------------------------------------------------------------------------------
15807   
15808  *-------------------------------------------------------------------------------
15810   
15811  eqq_en_mu_pv_c_india
15812  eqq_en_mu_csp_c_india
15813  eqk_en_pv_c_india
15814  eqk_en_csp_c_india
15815  eqq_en_pv_sum_c_india
15816  eqq_en_csp_sum_c_india
15817  eqk_en_pv_sum_c_india
15818  eqk_en_csp_sum_c_india
15819  eqi_en_pv_sum_c_india
15820  eqi_en_csp_sum_c_india
15821  eqk_en_solar_comp_c_india
15822   
15823  *-------------------------------------------------------------------------------
15825   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
15827  *-------------------------------------------------------------------------------
15828  * Technology development scenarios
15829  *-------------------------------------------------------------------------------
15830   
15832   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
15834  *-------------------------------------------------------------------------------
15835  * Oil Extraction
15836  * Options:
15837  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
15838  *-------------------------------------------------------------------------------
15839   
15841   
15842  eqoilcap_c_india
15843  eqoilprod_c_india
15844  eqq_out_oil_c_india
15845  eqcum_oil_c_india
15846  eqcost_oil_c_india
15847  eqi_oil_c_india
15848  eqi_out_oil_c_india
15849  eqq_emi_out_oil_c_india
15850   
15851  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
15854  *-------------------------------------------------------------------------------
15855  * Uranium Resources
15856  *-------------------------------------------------------------------------------
15857   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
15860  *-------------------------------------------------------------------------------
15861  * Gas Resources
15862  *-------------------------------------------------------------------------------
15863   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
15866  *-------------------------------------------------------------------------------
15867  * Coal Resources
15868  *-------------------------------------------------------------------------------
15869   
15871   
15872   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
15874  *-------------------------------------------------------------------------------
15875  * Climate
15876  *
15877  * Represents the climate
15878  * - based on the DICE model equations
15879  * - Radiative forcing for non CO2 ghgs
15880  * - parameters calibrated to reproduce MAGICC6.4 default response
15881  *
15882  *  Options:
15883  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
15884  * - $setglobal cooperate_on_climate {'YES','NO'}
15885  * - 'YES'(default): Countries within a coalition act in cooperation
15886  *   'NO': Countries within a coalition act individually
15887  *
15888  *-------------------------------------------------------------------------------
15889   
15891   
15893   
15894  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
15897  *-------------------------------------------------------------------------------
15898  * Long-run Damages from Climate Change
15899  * - Economic impacts
15900  * - Adaptation
15901  *-------------------------------------------------------------------------------
15902   
15904   
15906   
15907  *-------------------------------------------------------------------------------
15909   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
15911  *-------------------------------------------------------------------------------
15912  * Light-duty Vehicles for Personal Transport
15913  *-------------------------------------------------------------------------------
15914   
15916   
15917  eqnb_veh_c_india
15918  eqq_en_veh_c_india
15919  eqq_el_edv_c_india
15920  eqmcost_inv_hybrid_c_india
15921  eqmcost_inv_plghybrid_c_india
15922  eqmcost_inv_edv_c_india
15923  *** newcode
15924  eqq_inv_red_ban_c_india
15925  ***
15926  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
15929  *-------------------------------------------------------------------------------
15930  * Road Freight Transport
15931  *-------------------------------------------------------------------------------
15933   
15934  eqnb_frtveh_c_india
15935  eqq_en_frtveh_c_india
15936  eqq_el_frtedv_c_india
15937  eqmcost_inv_hbd_stfr_c_india
15938  eqmcost_inv_plghbd_stfr_c_india
15939  eqmcost_inv_edv_stfr_c_india
15940   
15941  *-------------------------------------------------------------------------------
15943   
15944   
15945   
15946   
15947   
15948   
15949  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
15951  *-------------------------------------------------------------------------------
15952  * Traditional Biomass
15953  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
15954  *  - require post_process to be launch before
15955  *-------------------------------------------------------------------------------
15956   
15958   
15959  * Optional modules
15960   
15961  * Policy modules
15962   
15963  * Calibration
15966  ;
15967   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
15969  *-------------------------------------------------------------------------------
15970  * Call modules by order
15971  *-------------------------------------------------------------------------------
15975   
15976  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
15978  *-------------------------------------------------------------------------------
15979  * Algorithm
15980  *-------------------------------------------------------------------------------
15981   
15983   
15985  * Add the component of the (maximized) objective function as required by the ADMM algorithm
15986  eqobj_c_india..
15987      OBJADMM =e= UTILITY -
15988          sum(t, rho_admm('oil',t) / 2 *
15989              sum(n$(map_clt_n('c_india',n) and trading_t('oil',t,n)),
15990                  power(
15991                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
15992                      x_admm('oil',t,n) +
15993                      xavg_admm('oil',t) +
15994                      u_admm('oil', t)
15995                  ,2)
15996              )) -
15997          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
15998              sum(n$(map_clt_n('c_india',n) and trading_t(c_mkt,t,n)),
15999                  power(
16000                      Q_EMI(c_mkt,t,n) -
16001                      x_admm(c_mkt,t,n) +
16002                      xavg_admm(c_mkt,t) +
16003                      u_admm(c_mkt,t)
16004                  ,2)
16005              ))
16006      ;
16008   
16009  *-------------------------------------------------------------------------------
16011   
16012  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
16014  *-------------------------------------------------------------------------------
16015  * Time
16016  * - Temporal structure
16017  * - Fixed time periods
16018  * - States of the world
16019  *-------------------------------------------------------------------------------
16020   
16022   
16023  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
16025  *-------------------------------------------------------------------------------
16026  * Geographic dimension and mapping with countries
16027  *-------------------------------------------------------------------------------
16028   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
16031  *-------------------------------------------------------------------------------
16032  * Non-Cooperative Setup
16033  *
16034  * Each region is defined as an individual coalition.
16035  *
16036  *-------------------------------------------------------------------------------
16037   
16039   
16040  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
16042  *-------------------------------------------------------------------------------
16043  * Welfare
16044  *-------------------------------------------------------------------------------
16045   
16047   
16048  * Objective function - Welfare to be maximized
16049  equtility_c_india..
16050      UTILITY =e=
16051   
16052  * Negishi SWF
16054   
16055  * Welfare functions based on CEBGE
16058                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
16059                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
16060                      ((sum(n$map_clt_n('c_india',n),
16061                        (l(t,n) / sum(nn$map_clt_n('c_india',nn), l(t,nn))) *
16062                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
16063                       )**(1 / (1 - gamma))
16064                      )**(1 - eta) ) +
16065                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
16066                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
16067                      ((sum(n$map_clt_n('c_india',n),
16068                        (l(t,n) / sum(nn$map_clt_n('c_india',nn), l(t,nn))) *
16069                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
16070                       )**(1 / (1 - gamma))
16071                      )**(1 - eta) )
16072                  )**(1/(1 - eta)) * 1e6
16075   
16076   
16077  ;
16078   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
16081  *-------------------------------------------------------------------------------
16082  * Economy
16083  * - Production and Consumption definition
16084  * - Top-level of the production function
16085  * Options:
16086  * --original_ssp=1 : original SSP population and GDP data
16087  *-------------------------------------------------------------------------------
16088   
16090   
16091  * Production
16092  eqq_y_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16093   
16094      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
16095                     ## Climate feedback on economy
16097                     ## Net cost of Primary and Secondary Energy Sources
16098                     - sum(fuel, COST_FUEL(fuel,t,n))
16099                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
16100                     - sum(cce, COST_EMI(cce,t,n))
16101                     ## Carbon tax
16102                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
16103                     ## Additionnal costs on gross product
16104                     - sum(ccy, COST_Y(ccy,t,n))
16105  ;
16106   
16107  * Consumption
16108  eqq_cc_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
16109      Q('cc',t,n) =e= Q('y',t,n)
16110                      ## Investments in goods g (final good, adaptation)
16111                      -sum(g, I(g,t,n))
16112                      ## Investments in r&d
16113                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
16114                      ## Investments in energy technlogies
16115                      -sum(jinv, I_EN(jinv,t,n))
16116                       ## Investments in grid infrastructures
16117                      - I_EN_GRID(t,n)
16118                      ## Investments in extraction sector
16119                      -sum(extract(f), I_OUT(f,t,n))
16120                      ## O&M for energy technlogies
16121                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
16122                      ## O&M for extraction
16123                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
16124                      ## Energy technology penalty costs
16125                      -sum(jpenalty(j), COST_EN(j,t,n))
16126  ;
16127   
16128  * Capital accumulation
16129  eqk_c_india(g,t,tp1,n)$(map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
16130      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
16131   
16132  * Energy services
16133  eqq_fen_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16134      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
16135   
16136  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
16139  *-------------------------------------------------------------------------------
16140  * Energy sector
16141  *-------------------------------------------------------------------------------
16142   
16144   
16145  *-------------------------------------------------------------------------------
16146  * Production - Energy sector
16147  *-------------------------------------------------------------------------------
16148   
16149  eqq_en_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16150      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
16151   
16152  *-------------------------------------------------------------------------------
16153  * Production - Electrical sector
16154  *-------------------------------------------------------------------------------
16155   
16156  eqq_el_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16157      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
16158   
16159  eqq_el2_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16160      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
16161   
16162  eqq_elffren_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16163      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
16164  eqq_elff_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16165      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
16166   
16167  eqq_ces_el_c_india(ices_el,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
16168      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
16169  ;
16170   
16171  *-------------------------------------------------------------------------------
16172  * Production - Non-electrical sector
16173  *-------------------------------------------------------------------------------
16174   
16175  eqq_nel_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16176      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
16177   
16178  eqq_nelog_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16179      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
16180  ;
16181  eqq_ces_nelgas_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16182      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
16183   
16184  *-------------------------------------------------------------------------------
16185  * PES and fuels
16186  *-------------------------------------------------------------------------------
16187   
16188  eqq_fuel_c_india(fuel,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
16189      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
16190   
16191  *-------------------------------------------------------------------------------
16192  * Cost
16193  *-------------------------------------------------------------------------------
16194   
16195  * Net cost of Primary Energy Supplies
16196  eqcost_pes_c_india(f,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
16197      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
16198                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
16199   
16200  * Net cost of Secondary Energy Supplies
16201  eqcost_ses_c_india(s,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16202      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
16203   
16204   
16205  *-------------------------------------------------------------------------------
16206  * Market balances
16207  *-------------------------------------------------------------------------------
16208   
16209  eq_mkt_clearing_oil_c_india(t,'c_india')$(internal('oil'))..
16210      sum( n$(map_clt_n('c_india',n) and trading_t('oil',t,n)),
16211          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
16212      ) =e= 0;
16213   
16214  *-------------------------------------------------------------------------------
16215  * New capital in the energy sector
16216  *-------------------------------------------------------------------------------
16217   
16218  * Electrical generation plants (new)
16219  eqk_en_c_india(jinv,t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
16220      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
16221                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
16222   
16223  *-------------------------------------------------------------------------------
16224  * ENERGY
16225  *-------------------------------------------------------------------------------
16226   
16227  * Capacity limits in the electrical sector
16228  eqq_en_mu_c_india(jel,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
16229      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
16230   
16231  * Efficiency of energy technology sector
16232  eqq_en_in_c_india(jfed,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
16233      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
16234                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
16235   
16236  * Energy generation "tree"
16237  eqq_en_tree_c_india(j,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
16238      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
16239   
16240  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
16243  *-------------------------------------------------------------------------------
16244  * Carbon Emissions
16245  * - Total CO2 emissions and CO2 Fossil fuel and Industry
16246  * - CO2 emission costs
16247  * - GHG permit market
16248  *-------------------------------------------------------------------------------
16249   
16251   
16252  * GHG emission cap
16253  eqq_emi_lim_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
16254      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
16255                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
16256   
16257  ***newcode
16258  eqq_emi_lim_USAc_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
16259  ***
16260   
16261  * Compute total and sectoral emissions
16262  eqq_emi_tree_c_india(t,n,e)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
16263      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
16264   
16265  * Industrial CO2 emissions
16266  eqq_emi_co2ffi_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16267      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
16268                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
16269                              # Emissions from biomass
16270                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
16271                              # Emissions from fuel extraction
16272                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
16273                              # Captured emissions
16274                              sum(sink, Q_EMI(sink,t,n));
16275   
16276  * CO2 emission costs
16277  eqcost_emi_co2_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16278      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
16279   
16280  * Emission permit market clearing for internal market
16281  eq_mkt_clearing_nip_c_india(c_mkt,t,'c_india')$(internal(c_mkt))..
16282      sum(n$(map_clt_n('c_india',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
16283   
16284  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
16287  *-------------------------------------------------------------------------------
16288  * Research & Development
16289  * Options:
16290  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
16291  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
16292  *-------------------------------------------------------------------------------
16293   
16295   
16296  * Knowledge stock accumulation
16297  eqk_rd_c_india(rd,t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
16298                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
16299                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
16300                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
16301                                        SPILL(rd,t,n)**rd_coef(rd,'d');
16302   
16303  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
16304  eqspill_coop_c_india(rd,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_india'))..
16305          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
16306                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_india',nn)), K_RD(rd,t,nn)) +
16307                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_india',nn))), K_RD.l(rd,t,nn))
16308                            ) *
16309                            (
16310                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_india',nn)), K_RD(rd,t,nn)) +
16311                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_india',nn))), K_RD.l(rd,t,nn))
16312                              ) - K_RD(rd,t,n)
16313                            );
16314   
16315  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
16316  eqspill_lead_c_india(rd,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_india')) and leadrd(rd,n))..
16317                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
16318   
16319  * No-cooperation : a follower sees is negative effect on the quantity he can grab
16320  eqspill_foll_c_india(rd,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_india')) and (not leadrd(rd,n)))..
16321                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
16322   
16323  *- Only LbR (without learning by doing)
16324  eqmcost_inv_back_c_india(jrd,t,tt,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
16325                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
16326                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
16327   
16328  *- LbR together with learning by doing ==> Two-factor learning curve
16329  eqmcost_inv_back_lbd_c_india(jrd,t,tt,tfirst,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
16330                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
16331                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
16332                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
16333   
16334  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
16337  *-------------------------------------------------------------------------------
16338  * Default Climate Policy Implementation
16339  *
16340  * Options:
16341  *    --policy={bau (default),ctax}
16342  *        Implement a climate policy setting
16343  *  [ --scen= ]
16344  *        Policy variant.
16345  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
16346  *          * XXX for a fixed percentage/yr (e.g. 5) growth
16347  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
16348  *  [ --ctax_year=2020 ]
16349  *        Starting year of the carbon tax
16350  *  [ --ctax_initial=30 ]
16351  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
16352  *
16353  *-------------------------------------------------------------------------------
16355   
16356  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
16358  *-------------------------------------------------------------------------------
16359  * Energy efficiency
16360  *-------------------------------------------------------------------------------
16361   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
16364  *-------------------------------------------------------------------------------
16365  * Hydro Power
16366  *-------------------------------------------------------------------------------
16367   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
16370  *-------------------------------------------------------------------------------
16371  * System Integration:
16372  * - Capacity constraint
16373  * - Flexibility constraint
16374  * - Grid Investment
16375  * - Capacity growth constraint
16376  *-------------------------------------------------------------------------------
16377   
16379   
16380   
16381  * Renewable CES
16382   
16383  * Definition of the renewable CES
16384  eqq_elintren_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16385      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
16386   
16387  * Capacity constraint
16388   
16390  eqfirm_capacity_c_india(t,n)$(map_clt_n('c_india',n) and (not tfix(t)) and year(t) gt 2005)..
16391                   sum(jel_firm, K_EN(jel_firm,t,n))
16392                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
16393                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
16394                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
16395                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
16396                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
16397                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
16398                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
16399                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
16400                                       ) / yearly_hours
16401  ;
16403   
16404  * Flexibility constraint
16405  eqflex_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16406          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
16407                             ( Q_EN('el',t,n) -
16408                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
16409                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
16410                             ) * flex_coeff('load')
16411  ;
16412   
16413  * Grid
16414   
16415  ** Grid depreciation and investments
16416  eqk_en_grid_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
16417                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
16418                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
16419   
16420  ** Grid adjustment to power capacity
16421  eqk_en_grid_to_k_en_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16422                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
16423                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
16424                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
16425                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
16426                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
16427                                     ) / grid_cost +
16428                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
16429                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
16430                                      K_EN('elcsp',t,n);
16431  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
16432   
16433  * Capacity growth constraint
16434  eqcap_growth_c_india(jinv,t,tp1,tp2,n)$((map_clt_n('c_india',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
16435                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
16436                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
16437   
16438  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
16441  *-------------------------------------------------------------------------------
16442  * Nuclear power plants
16443  *-------------------------------------------------------------------------------
16444   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
16447  *-------------------------------------------------------------------------------
16448  * GHG module
16449  * - CH4 FFI + CH4 waste + CH4 open fires
16450  * - N2O FFI + N2O waste + N2O open fires
16451  *-------------------------------------------------------------------------------
16452   
16454   
16455  * CH4, N2O waste emissions
16456  eqq_emi_waste_c_india(waste,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
16457                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
16458   
16459  * n2o FFI
16460  eqq_emi_n2o_ffi_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
16461    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
16462                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
16463                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
16464                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
16465                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
16466                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
16467                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
16468                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
16469                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
16470                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
16471                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
16472                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
16473                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
16474                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
16475                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
16476                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
16477                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
16478                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
16479                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
16480                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
16481                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
16482                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
16483                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
16484                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
16485                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
16486                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
16487                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
16488                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
16489                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
16490                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
16491                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
16492   
16493  * ch4 FFI
16494  eqq_emi_ch4_ffi_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
16495    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
16498  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
16499  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
16500                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
16501                             smax(tt$(year(tt) eq 2015),
16502                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
16505  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
16506  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
16507                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
16508   
16509  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
16512  *-------------------------------------------------------------------------------
16513  * F-gases
16514  * - LLF
16515  * - SLF
16516  *-------------------------------------------------------------------------------
16517   
16519   
16520  * F-gases emissions
16521  eqq_emi_fgases_c_india(fgases,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
16522                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
16523   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
16526  *-------------------------------------------------------------------------------
16527  * Landuse [simplified version of the land-use model]
16528  *-------------------------------------------------------------------------------
16529   
16531   
16532  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
16533  eq_wbio_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16534      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
16535   
16537  * Cost of all woody biomass produced for advanced biofuels and woody biomass
16538  eqcost_pes_wbio_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16539      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
16541   
16542  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
16545  *-------------------------------------------------------------------------------
16546  * Bioenergy power plant
16547  *-------------------------------------------------------------------------------
16548   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
16551  *-------------------------------------------------------------------------------
16552  * Traditional Biofuels
16553  * - Requires the precedence of mod_landuse
16554  *-------------------------------------------------------------------------------
16555   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
16558  *-------------------------------------------------------------------------------
16559  * Advanced biofuel
16560  * - Require the precedence of mod_landuse
16561  *-------------------------------------------------------------------------------
16562   
16564   
16565  * Limitations for nel backstops
16566  eqq_en_lim_advbiofuel_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
16567               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
16568               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
16569   
16570  * Peculiarity of advbiofuel
16571  eqmcost_fuel_advbiofuel_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16572                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
16573   
16574  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
16577  *-------------------------------------------------------------------------------
16578  * Carbon Capture and Sequestration
16579  *-------------------------------------------------------------------------------
16580   
16582   
16583  eqq_emi_ccs_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16584                  Q_EMI('ccs_plant',t,n) =e=
16585                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
16586                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
16587  ;
16588   
16589  eqcost_emi_sinks_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16590                  COST_EMI('ccs_plant',t,n) =e=
16591                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
16592                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
16593  ;
16594   
16595  eq_stor_ccs_cum_c_india(ccs_stor,tp1,t,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
16596                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
16597  ;
16598   
16599  eq_emi_stor_ccs_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16600                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
16601  ;
16602   
16603  eq_emi_leak_ccs_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16604                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
16605   
16606  *-------------------------------------------------------------------------------
16608   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
16610  *-------------------------------------------------------------------------------
16611  * Coal for non-electric sectors
16612  * - Coke Plants
16613  * - Industrial and Commercial combined-heat-and-power (CHP)
16614  * - Others
16615  *-------------------------------------------------------------------------------
16616   
16618   
16619  eqcost_en_nelcoal_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16620           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
16621                                          nelcoal_max_abat(t,n) *
16622                                          (nelcoal_cmac(n,'a') *
16623                                            Q_EN('nelcoalabat',t,n) /
16624                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
16625                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
16626                                              (exp(nelcoal_cmac(n,'c') *
16627                                                (Q_EN('nelcoalabat',t,n)/
16628                                                  (nelcoal_max_abat(t,n) *
16629                                                      nelcoal_baseline(t,n))
16630                                                  ) - 1 )
16631                                              )
16632                                          );
16633   
16634  eqq_ncoalabat_monotone_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
16635          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
16636   
16637  * ensure Q_EN is lower than K_EN for CCS as not in jel
16638  eqq_en_nelcoalccs_max_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16639          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
16640   
16641  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
16644  *-------------------------------------------------------------------------------
16645  * Wind energy module
16646  * - onshore and offshore
16647  *-------------------------------------------------------------------------------
16648   
16650   
16651  * Capacity limits in the wind onshore electrical sector
16652  eqq_en_mu_windon_c_india(wind_dist,wind_class,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
16653      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
16654   
16655  * Capacity limits in the wind offshore electrical sector
16656  eqq_en_mu_windoff_c_india(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
16657      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
16658   
16659  * Wind onshore electrical generation plants (new)
16660  eqk_en_windon_c_india(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
16661      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
16662                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
16663   
16664  * Wind offshore electrical generation plants (new)
16665  eqk_en_windoff_c_india(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
16666      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
16667                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
16668   
16669  * Total onshore wind energy production
16670  eqq_en_windon_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16671                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
16672   
16673  * Total offshore wind energy production
16674  eqq_en_windoff_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16675                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
16676   
16677  * Total onshore wind capacity
16678  eqk_en_windon_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16679                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
16680   
16681  * Total offshore wind capacity
16682  eqk_en_windoff_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16683                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
16684   
16685  * Total onshore wind investment
16686  eqi_en_windon_sum_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
16687                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
16688   
16689  * Total offshore wind investment
16690  eqi_en_windoff_sum_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
16691                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
16692   
16693  *-------------------------------------------------------------------------------
16695   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
16697  *-------------------------------------------------------------------------------
16698  * Solar Powerplants (PV and CSP) to the electrical system
16699  *-------------------------------------------------------------------------------
16700   
16701  *-------------------------------------------------------------------------------
16703   
16704   
16705  * Capacity limits in the pv electrical sector
16706  eqq_en_mu_pv_c_india(solar_dist,solar_class,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
16707                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
16708   
16709  * Capacity limits in the csp electrical sector
16710  eqq_en_mu_csp_c_india(solar_dist,solar_class,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
16711                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
16712   
16713  * PV electrical generation plants (new)
16714  eqk_en_pv_c_india(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
16715                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
16716                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
16717   
16718  * CSP electrical generation plants (new)
16719  eqk_en_csp_c_india(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
16720                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
16721                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
16722   
16723  * Total PV energy production
16724  eqq_en_pv_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16725                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
16726   
16727  * Total CSP energy production
16728  eqq_en_csp_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16729                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
16730   
16731  * Total PV capacity
16732  eqk_en_pv_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16733                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
16734   
16735  * Total CSP capacity
16736  eqk_en_csp_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16737                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
16738   
16739  * Total PV investment
16740  eqi_en_pv_sum_c_india(t,tp1,n)$(map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
16741                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
16742   
16743  * Total CSP investment
16744  eqi_en_csp_sum_c_india(t,tp1,n)$(map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
16745                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
16746   
16747  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
16748  eqk_en_solar_comp_c_india(t,n,solar_dist)$(map_clt_n('c_india',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
16749                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
16750                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
16751   
16752   
16753   
16754  *-------------------------------------------------------------------------------
16756   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
16758  *-------------------------------------------------------------------------------
16759  * Technology development scenarios
16760  *-------------------------------------------------------------------------------
16761   
16763   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
16765  *-------------------------------------------------------------------------------
16766  * Oil Extraction
16767  * Options:
16768  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
16769  *-------------------------------------------------------------------------------
16770   
16772   
16773  * Capacity
16774  eqoilcap_c_india(t,tp1,n,oilg)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
16775      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
16776   
16777  * Production
16778  eqoilprod_c_india(t,tp1,n,oilg)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
16779      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
16780   
16781  eqq_out_oil_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16782      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
16783   
16784  * Cumulative production
16785  eqcum_oil_c_india(t,tp1,n,oilg)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
16786      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
16787   
16788  * Cost
16789  eqcost_oil_c_india(t,tp1,n,oilg)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
16790      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
16791                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
16792                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
16793   
16794  * Investments
16795  eqi_oil_c_india(t,tp1,n,oilg)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
16796      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
16797   
16798  * Total investment
16799  eqi_out_oil_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
16800      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
16801   
16802  * Emissions
16803  eqq_emi_out_oil_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16804      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
16805   
16806  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
16809  *-------------------------------------------------------------------------------
16810  * Uranium Resources
16811  *-------------------------------------------------------------------------------
16812   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
16815  *-------------------------------------------------------------------------------
16816  * Gas Resources
16817  *-------------------------------------------------------------------------------
16818   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
16821  *-------------------------------------------------------------------------------
16822  * Coal Resources
16823  *-------------------------------------------------------------------------------
16824   
16826   
16827   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
16829  *-------------------------------------------------------------------------------
16830  * Climate
16831  *
16832  * Represents the climate
16833  * - based on the DICE model equations
16834  * - Radiative forcing for non CO2 ghgs
16835  * - parameters calibrated to reproduce MAGICC6.4 default response
16836  *
16837  *  Options:
16838  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
16839  * - $setglobal cooperate_on_climate {'YES','NO'}
16840  * - 'YES'(default): Countries within a coalition act in cooperation
16841  *   'NO': Countries within a coalition act individually
16842  *
16843  *-------------------------------------------------------------------------------
16844   
16846   
16848   
16849  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
16852  *-------------------------------------------------------------------------------
16853  * Long-run Damages from Climate Change
16854  * - Economic impacts
16855  * - Adaptation
16856  *-------------------------------------------------------------------------------
16857   
16859   
16861   
16862  *-------------------------------------------------------------------------------
16864   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
16866  *-------------------------------------------------------------------------------
16867  * Light-duty Vehicles for Personal Transport
16868  *-------------------------------------------------------------------------------
16869   
16871   
16872  *** newcode
16873  eqq_inv_red_ban_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16874      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
16875   
16876  ***
16877  *- Number of light duty vehicles
16878  eqnb_veh_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16879      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
16880   
16881  *- Yearly energy demand of vehicles
16882  eqq_en_veh_c_india(jveh,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16883      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
16884   
16885  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
16886  eqq_el_edv_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16887      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
16888   
16889  *- Investment cost for hybrid vehicles
16890  eqmcost_inv_hybrid_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
16891                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
16892   
16893  *- Investment cost for plug-in hybrid vehicles
16894  eqmcost_inv_plghybrid_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
16895                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
16896   
16897  *- Investment cost for electric drive vehicles
16898  eqmcost_inv_edv_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
16899                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
16900   
16901  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
16904  *-------------------------------------------------------------------------------
16905  * Road Freight Transport
16906  *-------------------------------------------------------------------------------
16908   
16909  *-  Number of freight vehicles
16910  eqnb_frtveh_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16911                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
16912   
16913  *-  Yearly fuel consumption of freight vehicles
16914  eqq_en_frtveh_c_india(jfrt,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16915                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
16916   
16917  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
16918  eqq_el_frtedv_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16919                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
16920   
16921  *-  Investment cost for hbd_stfr vehicle
16922  eqmcost_inv_hbd_stfr_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
16923                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
16924   
16925  *-  Investment cost for plug-in hbd_stfr vehicle
16926  eqmcost_inv_plghbd_stfr_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
16927                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
16928   
16929  *-  Investment cost for electric drive vehicle
16930  eqmcost_inv_edv_stfr_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
16931                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
16932   
16933  *-------------------------------------------------------------------------------
16935   
16936   
16937   
16938   
16939   
16940   
16941  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
16943  *-------------------------------------------------------------------------------
16944  * Traditional Biomass
16945  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
16946  *  - require post_process to be launch before
16947  *-------------------------------------------------------------------------------
16948   
16950   
16951  * Optional modules
16952   
16953  * Policy modules
16954   
16955  * Calibration
16958   
16959   
16960  model witch_c_india /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
16962  *-------------------------------------------------------------------------------
16963  * Call modules by order
16964  *-------------------------------------------------------------------------------
16968   
16969  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
16971  *-------------------------------------------------------------------------------
16972  * Algorithm
16973  *-------------------------------------------------------------------------------
16974   
16976   
16977  eqobj_c_india
16978   
16979  *-------------------------------------------------------------------------------
16981   
16982  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
16984  *-------------------------------------------------------------------------------
16985  * Time
16986  * - Temporal structure
16987  * - Fixed time periods
16988  * - States of the world
16989  *-------------------------------------------------------------------------------
16990   
16992   
16993  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
16995  *-------------------------------------------------------------------------------
16996  * Geographic dimension and mapping with countries
16997  *-------------------------------------------------------------------------------
16998   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
17001  *-------------------------------------------------------------------------------
17002  * Non-Cooperative Setup
17003  *
17004  * Each region is defined as an individual coalition.
17005  *
17006  *-------------------------------------------------------------------------------
17007   
17009   
17010  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
17012  *-------------------------------------------------------------------------------
17013  * Welfare
17014  *-------------------------------------------------------------------------------
17015   
17017   
17018  equtility_c_india
17019   
17020  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
17023  *-------------------------------------------------------------------------------
17024  * Economy
17025  * - Production and Consumption definition
17026  * - Top-level of the production function
17027  * Options:
17028  * --original_ssp=1 : original SSP population and GDP data
17029  *-------------------------------------------------------------------------------
17030   
17032   
17033  eqk_c_india
17034  eqq_cc_c_india
17035  eqq_fen_c_india
17036  eqq_y_c_india
17037   
17038  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
17041  *-------------------------------------------------------------------------------
17042  * Energy sector
17043  *-------------------------------------------------------------------------------
17044   
17046   
17047  eq_mkt_clearing_oil_c_india
17048  eqcost_pes_c_india
17049  eqcost_ses_c_india
17050  eqk_en_c_india
17051  eqq_ces_el_c_india
17052  eqq_ces_nelgas_c_india
17053  eqq_el2_c_india
17054  eqq_el_c_india
17055  eqq_elff_c_india
17056  eqq_en_c_india
17057  eqq_en_in_c_india
17058  eqq_en_mu_c_india
17059  eqq_en_tree_c_india
17060  eqq_nel_c_india
17061  eqq_nelog_c_india
17062  eqq_fuel_c_india
17063  eqq_elffren_c_india
17064   
17065  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
17068  *-------------------------------------------------------------------------------
17069  * Carbon Emissions
17070  * - Total CO2 emissions and CO2 Fossil fuel and Industry
17071  * - CO2 emission costs
17072  * - GHG permit market
17073  *-------------------------------------------------------------------------------
17074   
17076   
17077  eqq_emi_lim_c_india
17078  ***newcode
17079  eqq_emi_lim_USAc_india
17080  ***
17081  eqq_emi_tree_c_india
17082  eqq_emi_co2ffi_c_india
17083   
17084  eqcost_emi_co2_c_india
17085   
17086  eq_mkt_clearing_nip_c_india
17087   
17088  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
17091  *-------------------------------------------------------------------------------
17092  * Research & Development
17093  * Options:
17094  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
17095  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
17096  *-------------------------------------------------------------------------------
17097   
17099   
17100  eqk_rd_c_india
17101  eqspill_coop_c_india
17102  eqspill_lead_c_india
17103  eqspill_foll_c_india
17104  eqmcost_inv_back_c_india
17105  eqmcost_inv_back_lbd_c_india
17106   
17107  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
17110  *-------------------------------------------------------------------------------
17111  * Default Climate Policy Implementation
17112  *
17113  * Options:
17114  *    --policy={bau (default),ctax}
17115  *        Implement a climate policy setting
17116  *  [ --scen= ]
17117  *        Policy variant.
17118  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
17119  *          * XXX for a fixed percentage/yr (e.g. 5) growth
17120  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
17121  *  [ --ctax_year=2020 ]
17122  *        Starting year of the carbon tax
17123  *  [ --ctax_initial=30 ]
17124  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
17125  *
17126  *-------------------------------------------------------------------------------
17128   
17129  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
17131  *-------------------------------------------------------------------------------
17132  * Energy efficiency
17133  *-------------------------------------------------------------------------------
17134   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
17137  *-------------------------------------------------------------------------------
17138  * Hydro Power
17139  *-------------------------------------------------------------------------------
17140   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
17143  *-------------------------------------------------------------------------------
17144  * System Integration:
17145  * - Capacity constraint
17146  * - Flexibility constraint
17147  * - Grid Investment
17148  * - Capacity growth constraint
17149  *-------------------------------------------------------------------------------
17150   
17152   
17153  eqq_elintren_c_india
17154  eqflex_c_india
17155  eqk_en_grid_c_india
17156  eqk_en_grid_to_k_en_c_india
17157  eqfirm_capacity_c_india
17158  eqcap_growth_c_india
17159   
17160  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
17163  *-------------------------------------------------------------------------------
17164  * Nuclear power plants
17165  *-------------------------------------------------------------------------------
17166   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
17169  *-------------------------------------------------------------------------------
17170  * GHG module
17171  * - CH4 FFI + CH4 waste + CH4 open fires
17172  * - N2O FFI + N2O waste + N2O open fires
17173  *-------------------------------------------------------------------------------
17174   
17176   
17177  eqq_emi_waste_c_india
17178  eqq_emi_n2o_ffi_c_india
17179  eqq_emi_ch4_ffi_c_india
17180   
17181  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
17184  *-------------------------------------------------------------------------------
17185  * F-gases
17186  * - LLF
17187  * - SLF
17188  *-------------------------------------------------------------------------------
17189   
17191   
17192  eqq_emi_fgases_c_india
17193   
17194  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
17197  *-------------------------------------------------------------------------------
17198  * Landuse [simplified version of the land-use model]
17199  *-------------------------------------------------------------------------------
17200   
17202   
17203  eq_wbio_c_india
17204  eqcost_pes_wbio_c_india
17205   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
17208  *-------------------------------------------------------------------------------
17209  * Bioenergy power plant
17210  *-------------------------------------------------------------------------------
17211   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
17214  *-------------------------------------------------------------------------------
17215  * Traditional Biofuels
17216  * - Requires the precedence of mod_landuse
17217  *-------------------------------------------------------------------------------
17218   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
17221  *-------------------------------------------------------------------------------
17222  * Advanced biofuel
17223  * - Require the precedence of mod_landuse
17224  *-------------------------------------------------------------------------------
17225   
17227   
17228  eqq_en_lim_advbiofuel_c_india
17229  eqmcost_fuel_advbiofuel_c_india
17230   
17231  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
17234  *-------------------------------------------------------------------------------
17235  * Carbon Capture and Sequestration
17236  *-------------------------------------------------------------------------------
17237   
17239   
17240  eqq_emi_ccs_c_india
17241  eqcost_emi_sinks_c_india
17242  eq_stor_ccs_cum_c_india
17243  eq_emi_stor_ccs_c_india
17244  eq_emi_leak_ccs_c_india
17245   
17246  *-------------------------------------------------------------------------------
17248   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
17250  *-------------------------------------------------------------------------------
17251  * Coal for non-electric sectors
17252  * - Coke Plants
17253  * - Industrial and Commercial combined-heat-and-power (CHP)
17254  * - Others
17255  *-------------------------------------------------------------------------------
17256   
17258   
17259  eqcost_en_nelcoal_c_india
17260  eqq_ncoalabat_monotone_c_india
17261  eqq_en_nelcoalccs_max_c_india
17262   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
17265  *-------------------------------------------------------------------------------
17266  * Wind energy module
17267  * - onshore and offshore
17268  *-------------------------------------------------------------------------------
17269   
17271   
17272  eqq_en_mu_windon_c_india
17273  eqq_en_mu_windoff_c_india
17274  eqk_en_windon_c_india
17275  eqk_en_windoff_c_india
17276  eqq_en_windon_sum_c_india
17277  eqq_en_windoff_sum_c_india
17278  eqk_en_windon_sum_c_india
17279  eqk_en_windoff_sum_c_india
17280  eqi_en_windon_sum_c_india
17281  eqi_en_windoff_sum_c_india
17282   
17284   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
17286  *-------------------------------------------------------------------------------
17287  * Solar Powerplants (PV and CSP) to the electrical system
17288  *-------------------------------------------------------------------------------
17289   
17290  *-------------------------------------------------------------------------------
17292   
17293  eqq_en_mu_pv_c_india
17294  eqq_en_mu_csp_c_india
17295  eqk_en_pv_c_india
17296  eqk_en_csp_c_india
17297  eqq_en_pv_sum_c_india
17298  eqq_en_csp_sum_c_india
17299  eqk_en_pv_sum_c_india
17300  eqk_en_csp_sum_c_india
17301  eqi_en_pv_sum_c_india
17302  eqi_en_csp_sum_c_india
17303  eqk_en_solar_comp_c_india
17304   
17305  *-------------------------------------------------------------------------------
17307   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
17309  *-------------------------------------------------------------------------------
17310  * Technology development scenarios
17311  *-------------------------------------------------------------------------------
17312   
17314   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
17316  *-------------------------------------------------------------------------------
17317  * Oil Extraction
17318  * Options:
17319  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
17320  *-------------------------------------------------------------------------------
17321   
17323   
17324  eqoilcap_c_india
17325  eqoilprod_c_india
17326  eqq_out_oil_c_india
17327  eqcum_oil_c_india
17328  eqcost_oil_c_india
17329  eqi_oil_c_india
17330  eqi_out_oil_c_india
17331  eqq_emi_out_oil_c_india
17332   
17333  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
17336  *-------------------------------------------------------------------------------
17337  * Uranium Resources
17338  *-------------------------------------------------------------------------------
17339   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
17342  *-------------------------------------------------------------------------------
17343  * Gas Resources
17344  *-------------------------------------------------------------------------------
17345   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
17348  *-------------------------------------------------------------------------------
17349  * Coal Resources
17350  *-------------------------------------------------------------------------------
17351   
17353   
17354   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
17356  *-------------------------------------------------------------------------------
17357  * Climate
17358  *
17359  * Represents the climate
17360  * - based on the DICE model equations
17361  * - Radiative forcing for non CO2 ghgs
17362  * - parameters calibrated to reproduce MAGICC6.4 default response
17363  *
17364  *  Options:
17365  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
17366  * - $setglobal cooperate_on_climate {'YES','NO'}
17367  * - 'YES'(default): Countries within a coalition act in cooperation
17368  *   'NO': Countries within a coalition act individually
17369  *
17370  *-------------------------------------------------------------------------------
17371   
17373   
17375   
17376  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
17379  *-------------------------------------------------------------------------------
17380  * Long-run Damages from Climate Change
17381  * - Economic impacts
17382  * - Adaptation
17383  *-------------------------------------------------------------------------------
17384   
17386   
17388   
17389  *-------------------------------------------------------------------------------
17391   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
17393  *-------------------------------------------------------------------------------
17394  * Light-duty Vehicles for Personal Transport
17395  *-------------------------------------------------------------------------------
17396   
17398   
17399  eqnb_veh_c_india
17400  eqq_en_veh_c_india
17401  eqq_el_edv_c_india
17402  eqmcost_inv_hybrid_c_india
17403  eqmcost_inv_plghybrid_c_india
17404  eqmcost_inv_edv_c_india
17405  *** newcode
17406  eqq_inv_red_ban_c_india
17407  ***
17408  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
17411  *-------------------------------------------------------------------------------
17412  * Road Freight Transport
17413  *-------------------------------------------------------------------------------
17415   
17416  eqnb_frtveh_c_india
17417  eqq_en_frtveh_c_india
17418  eqq_el_frtedv_c_india
17419  eqmcost_inv_hbd_stfr_c_india
17420  eqmcost_inv_plghbd_stfr_c_india
17421  eqmcost_inv_edv_stfr_c_india
17422   
17423  *-------------------------------------------------------------------------------
17425   
17426   
17427   
17428   
17429   
17430   
17431  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
17433  *-------------------------------------------------------------------------------
17434  * Traditional Biomass
17435  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
17436  *  - require post_process to be launch before
17437  *-------------------------------------------------------------------------------
17438   
17440   
17441  * Optional modules
17442   
17443  * Policy modules
17444   
17445  * Calibration
17448  /;
17449   
17450  witch_c_india.optfile=1;   # the option file solvername.opt is to be used
17451  witch_c_india.holdfixed=1; # treat fixed values as constant
17452  witch_c_india.scaleopt=1;  # Use scaling for better gradients estimation
17453  witch_c_india.solvelink=3; # Use parallel or sequential solving
17454   
17459   
17460  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
17462  *-------------------------------------------------------------------------------
17463  * Call modules by order
17464  *-------------------------------------------------------------------------------
17468   
17469  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
17471  *-------------------------------------------------------------------------------
17472  * Algorithm
17473  *-------------------------------------------------------------------------------
17474   
17476   
17477  eqobj_c_indonesia
17478   
17479  *-------------------------------------------------------------------------------
17481   
17482  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
17484  *-------------------------------------------------------------------------------
17485  * Time
17486  * - Temporal structure
17487  * - Fixed time periods
17488  * - States of the world
17489  *-------------------------------------------------------------------------------
17490   
17492   
17493  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
17495  *-------------------------------------------------------------------------------
17496  * Geographic dimension and mapping with countries
17497  *-------------------------------------------------------------------------------
17498   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
17501  *-------------------------------------------------------------------------------
17502  * Non-Cooperative Setup
17503  *
17504  * Each region is defined as an individual coalition.
17505  *
17506  *-------------------------------------------------------------------------------
17507   
17509   
17510  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
17512  *-------------------------------------------------------------------------------
17513  * Welfare
17514  *-------------------------------------------------------------------------------
17515   
17517   
17518  equtility_c_indonesia
17519   
17520  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
17523  *-------------------------------------------------------------------------------
17524  * Economy
17525  * - Production and Consumption definition
17526  * - Top-level of the production function
17527  * Options:
17528  * --original_ssp=1 : original SSP population and GDP data
17529  *-------------------------------------------------------------------------------
17530   
17532   
17533  eqk_c_indonesia
17534  eqq_cc_c_indonesia
17535  eqq_fen_c_indonesia
17536  eqq_y_c_indonesia
17537   
17538  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
17541  *-------------------------------------------------------------------------------
17542  * Energy sector
17543  *-------------------------------------------------------------------------------
17544   
17546   
17547  eq_mkt_clearing_oil_c_indonesia
17548  eqcost_pes_c_indonesia
17549  eqcost_ses_c_indonesia
17550  eqk_en_c_indonesia
17551  eqq_ces_el_c_indonesia
17552  eqq_ces_nelgas_c_indonesia
17553  eqq_el2_c_indonesia
17554  eqq_el_c_indonesia
17555  eqq_elff_c_indonesia
17556  eqq_en_c_indonesia
17557  eqq_en_in_c_indonesia
17558  eqq_en_mu_c_indonesia
17559  eqq_en_tree_c_indonesia
17560  eqq_nel_c_indonesia
17561  eqq_nelog_c_indonesia
17562  eqq_fuel_c_indonesia
17563  eqq_elffren_c_indonesia
17564   
17565  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
17568  *-------------------------------------------------------------------------------
17569  * Carbon Emissions
17570  * - Total CO2 emissions and CO2 Fossil fuel and Industry
17571  * - CO2 emission costs
17572  * - GHG permit market
17573  *-------------------------------------------------------------------------------
17574   
17576   
17577  eqq_emi_lim_c_indonesia
17578  ***newcode
17579  eqq_emi_lim_USAc_indonesia
17580  ***
17581  eqq_emi_tree_c_indonesia
17582  eqq_emi_co2ffi_c_indonesia
17583   
17584  eqcost_emi_co2_c_indonesia
17585   
17586  eq_mkt_clearing_nip_c_indonesia
17587   
17588  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
17591  *-------------------------------------------------------------------------------
17592  * Research & Development
17593  * Options:
17594  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
17595  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
17596  *-------------------------------------------------------------------------------
17597   
17599   
17600  eqk_rd_c_indonesia
17601  eqspill_coop_c_indonesia
17602  eqspill_lead_c_indonesia
17603  eqspill_foll_c_indonesia
17604  eqmcost_inv_back_c_indonesia
17605  eqmcost_inv_back_lbd_c_indonesia
17606   
17607  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
17610  *-------------------------------------------------------------------------------
17611  * Default Climate Policy Implementation
17612  *
17613  * Options:
17614  *    --policy={bau (default),ctax}
17615  *        Implement a climate policy setting
17616  *  [ --scen= ]
17617  *        Policy variant.
17618  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
17619  *          * XXX for a fixed percentage/yr (e.g. 5) growth
17620  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
17621  *  [ --ctax_year=2020 ]
17622  *        Starting year of the carbon tax
17623  *  [ --ctax_initial=30 ]
17624  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
17625  *
17626  *-------------------------------------------------------------------------------
17628   
17629  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
17631  *-------------------------------------------------------------------------------
17632  * Energy efficiency
17633  *-------------------------------------------------------------------------------
17634   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
17637  *-------------------------------------------------------------------------------
17638  * Hydro Power
17639  *-------------------------------------------------------------------------------
17640   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
17643  *-------------------------------------------------------------------------------
17644  * System Integration:
17645  * - Capacity constraint
17646  * - Flexibility constraint
17647  * - Grid Investment
17648  * - Capacity growth constraint
17649  *-------------------------------------------------------------------------------
17650   
17652   
17653  eqq_elintren_c_indonesia
17654  eqflex_c_indonesia
17655  eqk_en_grid_c_indonesia
17656  eqk_en_grid_to_k_en_c_indonesia
17657  eqfirm_capacity_c_indonesia
17658  eqcap_growth_c_indonesia
17659   
17660  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
17663  *-------------------------------------------------------------------------------
17664  * Nuclear power plants
17665  *-------------------------------------------------------------------------------
17666   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
17669  *-------------------------------------------------------------------------------
17670  * GHG module
17671  * - CH4 FFI + CH4 waste + CH4 open fires
17672  * - N2O FFI + N2O waste + N2O open fires
17673  *-------------------------------------------------------------------------------
17674   
17676   
17677  eqq_emi_waste_c_indonesia
17678  eqq_emi_n2o_ffi_c_indonesia
17679  eqq_emi_ch4_ffi_c_indonesia
17680   
17681  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
17684  *-------------------------------------------------------------------------------
17685  * F-gases
17686  * - LLF
17687  * - SLF
17688  *-------------------------------------------------------------------------------
17689   
17691   
17692  eqq_emi_fgases_c_indonesia
17693   
17694  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
17697  *-------------------------------------------------------------------------------
17698  * Landuse [simplified version of the land-use model]
17699  *-------------------------------------------------------------------------------
17700   
17702   
17703  eq_wbio_c_indonesia
17704  eqcost_pes_wbio_c_indonesia
17705   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
17708  *-------------------------------------------------------------------------------
17709  * Bioenergy power plant
17710  *-------------------------------------------------------------------------------
17711   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
17714  *-------------------------------------------------------------------------------
17715  * Traditional Biofuels
17716  * - Requires the precedence of mod_landuse
17717  *-------------------------------------------------------------------------------
17718   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
17721  *-------------------------------------------------------------------------------
17722  * Advanced biofuel
17723  * - Require the precedence of mod_landuse
17724  *-------------------------------------------------------------------------------
17725   
17727   
17728  eqq_en_lim_advbiofuel_c_indonesia
17729  eqmcost_fuel_advbiofuel_c_indonesia
17730   
17731  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
17734  *-------------------------------------------------------------------------------
17735  * Carbon Capture and Sequestration
17736  *-------------------------------------------------------------------------------
17737   
17739   
17740  eqq_emi_ccs_c_indonesia
17741  eqcost_emi_sinks_c_indonesia
17742  eq_stor_ccs_cum_c_indonesia
17743  eq_emi_stor_ccs_c_indonesia
17744  eq_emi_leak_ccs_c_indonesia
17745   
17746  *-------------------------------------------------------------------------------
17748   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
17750  *-------------------------------------------------------------------------------
17751  * Coal for non-electric sectors
17752  * - Coke Plants
17753  * - Industrial and Commercial combined-heat-and-power (CHP)
17754  * - Others
17755  *-------------------------------------------------------------------------------
17756   
17758   
17759  eqcost_en_nelcoal_c_indonesia
17760  eqq_ncoalabat_monotone_c_indonesia
17761  eqq_en_nelcoalccs_max_c_indonesia
17762   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
17765  *-------------------------------------------------------------------------------
17766  * Wind energy module
17767  * - onshore and offshore
17768  *-------------------------------------------------------------------------------
17769   
17771   
17772  eqq_en_mu_windon_c_indonesia
17773  eqq_en_mu_windoff_c_indonesia
17774  eqk_en_windon_c_indonesia
17775  eqk_en_windoff_c_indonesia
17776  eqq_en_windon_sum_c_indonesia
17777  eqq_en_windoff_sum_c_indonesia
17778  eqk_en_windon_sum_c_indonesia
17779  eqk_en_windoff_sum_c_indonesia
17780  eqi_en_windon_sum_c_indonesia
17781  eqi_en_windoff_sum_c_indonesia
17782   
17784   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
17786  *-------------------------------------------------------------------------------
17787  * Solar Powerplants (PV and CSP) to the electrical system
17788  *-------------------------------------------------------------------------------
17789   
17790  *-------------------------------------------------------------------------------
17792   
17793  eqq_en_mu_pv_c_indonesia
17794  eqq_en_mu_csp_c_indonesia
17795  eqk_en_pv_c_indonesia
17796  eqk_en_csp_c_indonesia
17797  eqq_en_pv_sum_c_indonesia
17798  eqq_en_csp_sum_c_indonesia
17799  eqk_en_pv_sum_c_indonesia
17800  eqk_en_csp_sum_c_indonesia
17801  eqi_en_pv_sum_c_indonesia
17802  eqi_en_csp_sum_c_indonesia
17803  eqk_en_solar_comp_c_indonesia
17804   
17805  *-------------------------------------------------------------------------------
17807   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
17809  *-------------------------------------------------------------------------------
17810  * Technology development scenarios
17811  *-------------------------------------------------------------------------------
17812   
17814   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
17816  *-------------------------------------------------------------------------------
17817  * Oil Extraction
17818  * Options:
17819  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
17820  *-------------------------------------------------------------------------------
17821   
17823   
17824  eqoilcap_c_indonesia
17825  eqoilprod_c_indonesia
17826  eqq_out_oil_c_indonesia
17827  eqcum_oil_c_indonesia
17828  eqcost_oil_c_indonesia
17829  eqi_oil_c_indonesia
17830  eqi_out_oil_c_indonesia
17831  eqq_emi_out_oil_c_indonesia
17832   
17833  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
17836  *-------------------------------------------------------------------------------
17837  * Uranium Resources
17838  *-------------------------------------------------------------------------------
17839   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
17842  *-------------------------------------------------------------------------------
17843  * Gas Resources
17844  *-------------------------------------------------------------------------------
17845   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
17848  *-------------------------------------------------------------------------------
17849  * Coal Resources
17850  *-------------------------------------------------------------------------------
17851   
17853   
17854   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
17856  *-------------------------------------------------------------------------------
17857  * Climate
17858  *
17859  * Represents the climate
17860  * - based on the DICE model equations
17861  * - Radiative forcing for non CO2 ghgs
17862  * - parameters calibrated to reproduce MAGICC6.4 default response
17863  *
17864  *  Options:
17865  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
17866  * - $setglobal cooperate_on_climate {'YES','NO'}
17867  * - 'YES'(default): Countries within a coalition act in cooperation
17868  *   'NO': Countries within a coalition act individually
17869  *
17870  *-------------------------------------------------------------------------------
17871   
17873   
17875   
17876  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
17879  *-------------------------------------------------------------------------------
17880  * Long-run Damages from Climate Change
17881  * - Economic impacts
17882  * - Adaptation
17883  *-------------------------------------------------------------------------------
17884   
17886   
17888   
17889  *-------------------------------------------------------------------------------
17891   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
17893  *-------------------------------------------------------------------------------
17894  * Light-duty Vehicles for Personal Transport
17895  *-------------------------------------------------------------------------------
17896   
17898   
17899  eqnb_veh_c_indonesia
17900  eqq_en_veh_c_indonesia
17901  eqq_el_edv_c_indonesia
17902  eqmcost_inv_hybrid_c_indonesia
17903  eqmcost_inv_plghybrid_c_indonesia
17904  eqmcost_inv_edv_c_indonesia
17905  *** newcode
17906  eqq_inv_red_ban_c_indonesia
17907  ***
17908  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
17911  *-------------------------------------------------------------------------------
17912  * Road Freight Transport
17913  *-------------------------------------------------------------------------------
17915   
17916  eqnb_frtveh_c_indonesia
17917  eqq_en_frtveh_c_indonesia
17918  eqq_el_frtedv_c_indonesia
17919  eqmcost_inv_hbd_stfr_c_indonesia
17920  eqmcost_inv_plghbd_stfr_c_indonesia
17921  eqmcost_inv_edv_stfr_c_indonesia
17922   
17923  *-------------------------------------------------------------------------------
17925   
17926   
17927   
17928   
17929   
17930   
17931  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
17933  *-------------------------------------------------------------------------------
17934  * Traditional Biomass
17935  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
17936  *  - require post_process to be launch before
17937  *-------------------------------------------------------------------------------
17938   
17940   
17941  * Optional modules
17942   
17943  * Policy modules
17944   
17945  * Calibration
17948  ;
17949   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
17951  *-------------------------------------------------------------------------------
17952  * Call modules by order
17953  *-------------------------------------------------------------------------------
17957   
17958  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
17960  *-------------------------------------------------------------------------------
17961  * Algorithm
17962  *-------------------------------------------------------------------------------
17963   
17965   
17967  * Add the component of the (maximized) objective function as required by the ADMM algorithm
17968  eqobj_c_indonesia..
17969      OBJADMM =e= UTILITY -
17970          sum(t, rho_admm('oil',t) / 2 *
17971              sum(n$(map_clt_n('c_indonesia',n) and trading_t('oil',t,n)),
17972                  power(
17973                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
17974                      x_admm('oil',t,n) +
17975                      xavg_admm('oil',t) +
17976                      u_admm('oil', t)
17977                  ,2)
17978              )) -
17979          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
17980              sum(n$(map_clt_n('c_indonesia',n) and trading_t(c_mkt,t,n)),
17981                  power(
17982                      Q_EMI(c_mkt,t,n) -
17983                      x_admm(c_mkt,t,n) +
17984                      xavg_admm(c_mkt,t) +
17985                      u_admm(c_mkt,t)
17986                  ,2)
17987              ))
17988      ;
17990   
17991  *-------------------------------------------------------------------------------
17993   
17994  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
17996  *-------------------------------------------------------------------------------
17997  * Time
17998  * - Temporal structure
17999  * - Fixed time periods
18000  * - States of the world
18001  *-------------------------------------------------------------------------------
18002   
18004   
18005  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
18007  *-------------------------------------------------------------------------------
18008  * Geographic dimension and mapping with countries
18009  *-------------------------------------------------------------------------------
18010   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
18013  *-------------------------------------------------------------------------------
18014  * Non-Cooperative Setup
18015  *
18016  * Each region is defined as an individual coalition.
18017  *
18018  *-------------------------------------------------------------------------------
18019   
18021   
18022  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
18024  *-------------------------------------------------------------------------------
18025  * Welfare
18026  *-------------------------------------------------------------------------------
18027   
18029   
18030  * Objective function - Welfare to be maximized
18031  equtility_c_indonesia..
18032      UTILITY =e=
18033   
18034  * Negishi SWF
18036   
18037  * Welfare functions based on CEBGE
18040                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
18041                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
18042                      ((sum(n$map_clt_n('c_indonesia',n),
18043                        (l(t,n) / sum(nn$map_clt_n('c_indonesia',nn), l(t,nn))) *
18044                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
18045                       )**(1 / (1 - gamma))
18046                      )**(1 - eta) ) +
18047                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
18048                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
18049                      ((sum(n$map_clt_n('c_indonesia',n),
18050                        (l(t,n) / sum(nn$map_clt_n('c_indonesia',nn), l(t,nn))) *
18051                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
18052                       )**(1 / (1 - gamma))
18053                      )**(1 - eta) )
18054                  )**(1/(1 - eta)) * 1e6
18057   
18058   
18059  ;
18060   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
18063  *-------------------------------------------------------------------------------
18064  * Economy
18065  * - Production and Consumption definition
18066  * - Top-level of the production function
18067  * Options:
18068  * --original_ssp=1 : original SSP population and GDP data
18069  *-------------------------------------------------------------------------------
18070   
18072   
18073  * Production
18074  eqq_y_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18075   
18076      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
18077                     ## Climate feedback on economy
18079                     ## Net cost of Primary and Secondary Energy Sources
18080                     - sum(fuel, COST_FUEL(fuel,t,n))
18081                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
18082                     - sum(cce, COST_EMI(cce,t,n))
18083                     ## Carbon tax
18084                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
18085                     ## Additionnal costs on gross product
18086                     - sum(ccy, COST_Y(ccy,t,n))
18087  ;
18088   
18089  * Consumption
18090  eqq_cc_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
18091      Q('cc',t,n) =e= Q('y',t,n)
18092                      ## Investments in goods g (final good, adaptation)
18093                      -sum(g, I(g,t,n))
18094                      ## Investments in r&d
18095                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
18096                      ## Investments in energy technlogies
18097                      -sum(jinv, I_EN(jinv,t,n))
18098                       ## Investments in grid infrastructures
18099                      - I_EN_GRID(t,n)
18100                      ## Investments in extraction sector
18101                      -sum(extract(f), I_OUT(f,t,n))
18102                      ## O&M for energy technlogies
18103                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
18104                      ## O&M for extraction
18105                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
18106                      ## Energy technology penalty costs
18107                      -sum(jpenalty(j), COST_EN(j,t,n))
18108  ;
18109   
18110  * Capital accumulation
18111  eqk_c_indonesia(g,t,tp1,n)$(map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
18112      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
18113   
18114  * Energy services
18115  eqq_fen_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18116      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
18117   
18118  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
18121  *-------------------------------------------------------------------------------
18122  * Energy sector
18123  *-------------------------------------------------------------------------------
18124   
18126   
18127  *-------------------------------------------------------------------------------
18128  * Production - Energy sector
18129  *-------------------------------------------------------------------------------
18130   
18131  eqq_en_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18132      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
18133   
18134  *-------------------------------------------------------------------------------
18135  * Production - Electrical sector
18136  *-------------------------------------------------------------------------------
18137   
18138  eqq_el_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18139      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
18140   
18141  eqq_el2_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18142      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
18143   
18144  eqq_elffren_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18145      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
18146  eqq_elff_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18147      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
18148   
18149  eqq_ces_el_c_indonesia(ices_el,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
18150      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
18151  ;
18152   
18153  *-------------------------------------------------------------------------------
18154  * Production - Non-electrical sector
18155  *-------------------------------------------------------------------------------
18156   
18157  eqq_nel_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18158      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
18159   
18160  eqq_nelog_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18161      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
18162  ;
18163  eqq_ces_nelgas_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18164      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
18165   
18166  *-------------------------------------------------------------------------------
18167  * PES and fuels
18168  *-------------------------------------------------------------------------------
18169   
18170  eqq_fuel_c_indonesia(fuel,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
18171      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
18172   
18173  *-------------------------------------------------------------------------------
18174  * Cost
18175  *-------------------------------------------------------------------------------
18176   
18177  * Net cost of Primary Energy Supplies
18178  eqcost_pes_c_indonesia(f,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
18179      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
18180                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
18181   
18182  * Net cost of Secondary Energy Supplies
18183  eqcost_ses_c_indonesia(s,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18184      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
18185   
18186   
18187  *-------------------------------------------------------------------------------
18188  * Market balances
18189  *-------------------------------------------------------------------------------
18190   
18191  eq_mkt_clearing_oil_c_indonesia(t,'c_indonesia')$(internal('oil'))..
18192      sum( n$(map_clt_n('c_indonesia',n) and trading_t('oil',t,n)),
18193          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
18194      ) =e= 0;
18195   
18196  *-------------------------------------------------------------------------------
18197  * New capital in the energy sector
18198  *-------------------------------------------------------------------------------
18199   
18200  * Electrical generation plants (new)
18201  eqk_en_c_indonesia(jinv,t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
18202      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
18203                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
18204   
18205  *-------------------------------------------------------------------------------
18206  * ENERGY
18207  *-------------------------------------------------------------------------------
18208   
18209  * Capacity limits in the electrical sector
18210  eqq_en_mu_c_indonesia(jel,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
18211      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
18212   
18213  * Efficiency of energy technology sector
18214  eqq_en_in_c_indonesia(jfed,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
18215      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
18216                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
18217   
18218  * Energy generation "tree"
18219  eqq_en_tree_c_indonesia(j,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
18220      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
18221   
18222  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
18225  *-------------------------------------------------------------------------------
18226  * Carbon Emissions
18227  * - Total CO2 emissions and CO2 Fossil fuel and Industry
18228  * - CO2 emission costs
18229  * - GHG permit market
18230  *-------------------------------------------------------------------------------
18231   
18233   
18234  * GHG emission cap
18235  eqq_emi_lim_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
18236      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
18237                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
18238   
18239  ***newcode
18240  eqq_emi_lim_USAc_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
18241  ***
18242   
18243  * Compute total and sectoral emissions
18244  eqq_emi_tree_c_indonesia(t,n,e)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
18245      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
18246   
18247  * Industrial CO2 emissions
18248  eqq_emi_co2ffi_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18249      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
18250                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
18251                              # Emissions from biomass
18252                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
18253                              # Emissions from fuel extraction
18254                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
18255                              # Captured emissions
18256                              sum(sink, Q_EMI(sink,t,n));
18257   
18258  * CO2 emission costs
18259  eqcost_emi_co2_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18260      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
18261   
18262  * Emission permit market clearing for internal market
18263  eq_mkt_clearing_nip_c_indonesia(c_mkt,t,'c_indonesia')$(internal(c_mkt))..
18264      sum(n$(map_clt_n('c_indonesia',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
18265   
18266  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
18269  *-------------------------------------------------------------------------------
18270  * Research & Development
18271  * Options:
18272  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
18273  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
18274  *-------------------------------------------------------------------------------
18275   
18277   
18278  * Knowledge stock accumulation
18279  eqk_rd_c_indonesia(rd,t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
18280                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
18281                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
18282                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
18283                                        SPILL(rd,t,n)**rd_coef(rd,'d');
18284   
18285  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
18286  eqspill_coop_c_indonesia(rd,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_indonesia'))..
18287          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
18288                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_indonesia',nn)), K_RD(rd,t,nn)) +
18289                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_indonesia',nn))), K_RD.l(rd,t,nn))
18290                            ) *
18291                            (
18292                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_indonesia',nn)), K_RD(rd,t,nn)) +
18293                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_indonesia',nn))), K_RD.l(rd,t,nn))
18294                              ) - K_RD(rd,t,n)
18295                            );
18296   
18297  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
18298  eqspill_lead_c_indonesia(rd,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_indonesia')) and leadrd(rd,n))..
18299                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
18300   
18301  * No-cooperation : a follower sees is negative effect on the quantity he can grab
18302  eqspill_foll_c_indonesia(rd,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_indonesia')) and (not leadrd(rd,n)))..
18303                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
18304   
18305  *- Only LbR (without learning by doing)
18306  eqmcost_inv_back_c_indonesia(jrd,t,tt,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
18307                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
18308                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
18309   
18310  *- LbR together with learning by doing ==> Two-factor learning curve
18311  eqmcost_inv_back_lbd_c_indonesia(jrd,t,tt,tfirst,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
18312                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
18313                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
18314                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
18315   
18316  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
18319  *-------------------------------------------------------------------------------
18320  * Default Climate Policy Implementation
18321  *
18322  * Options:
18323  *    --policy={bau (default),ctax}
18324  *        Implement a climate policy setting
18325  *  [ --scen= ]
18326  *        Policy variant.
18327  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
18328  *          * XXX for a fixed percentage/yr (e.g. 5) growth
18329  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
18330  *  [ --ctax_year=2020 ]
18331  *        Starting year of the carbon tax
18332  *  [ --ctax_initial=30 ]
18333  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
18334  *
18335  *-------------------------------------------------------------------------------
18337   
18338  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
18340  *-------------------------------------------------------------------------------
18341  * Energy efficiency
18342  *-------------------------------------------------------------------------------
18343   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
18346  *-------------------------------------------------------------------------------
18347  * Hydro Power
18348  *-------------------------------------------------------------------------------
18349   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
18352  *-------------------------------------------------------------------------------
18353  * System Integration:
18354  * - Capacity constraint
18355  * - Flexibility constraint
18356  * - Grid Investment
18357  * - Capacity growth constraint
18358  *-------------------------------------------------------------------------------
18359   
18361   
18362   
18363  * Renewable CES
18364   
18365  * Definition of the renewable CES
18366  eqq_elintren_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18367      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
18368   
18369  * Capacity constraint
18370   
18372  eqfirm_capacity_c_indonesia(t,n)$(map_clt_n('c_indonesia',n) and (not tfix(t)) and year(t) gt 2005)..
18373                   sum(jel_firm, K_EN(jel_firm,t,n))
18374                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
18375                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
18376                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
18377                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
18378                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
18379                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
18380                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
18381                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
18382                                       ) / yearly_hours
18383  ;
18385   
18386  * Flexibility constraint
18387  eqflex_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18388          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
18389                             ( Q_EN('el',t,n) -
18390                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
18391                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
18392                             ) * flex_coeff('load')
18393  ;
18394   
18395  * Grid
18396   
18397  ** Grid depreciation and investments
18398  eqk_en_grid_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
18399                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
18400                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
18401   
18402  ** Grid adjustment to power capacity
18403  eqk_en_grid_to_k_en_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18404                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
18405                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
18406                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
18407                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
18408                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
18409                                     ) / grid_cost +
18410                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
18411                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
18412                                      K_EN('elcsp',t,n);
18413  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
18414   
18415  * Capacity growth constraint
18416  eqcap_growth_c_indonesia(jinv,t,tp1,tp2,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
18417                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
18418                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
18419   
18420  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
18423  *-------------------------------------------------------------------------------
18424  * Nuclear power plants
18425  *-------------------------------------------------------------------------------
18426   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
18429  *-------------------------------------------------------------------------------
18430  * GHG module
18431  * - CH4 FFI + CH4 waste + CH4 open fires
18432  * - N2O FFI + N2O waste + N2O open fires
18433  *-------------------------------------------------------------------------------
18434   
18436   
18437  * CH4, N2O waste emissions
18438  eqq_emi_waste_c_indonesia(waste,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
18439                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
18440   
18441  * n2o FFI
18442  eqq_emi_n2o_ffi_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
18443    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
18444                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
18445                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
18446                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
18447                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
18448                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
18449                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
18450                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
18451                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
18452                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
18453                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
18454                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
18455                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
18456                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
18457                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
18458                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
18459                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
18460                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
18461                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
18462                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
18463                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
18464                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
18465                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
18466                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
18467                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
18468                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
18469                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
18470                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
18471                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
18472                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
18473                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
18474   
18475  * ch4 FFI
18476  eqq_emi_ch4_ffi_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
18477    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
18480  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
18481  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
18482                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
18483                             smax(tt$(year(tt) eq 2015),
18484                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
18487  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
18488  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
18489                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
18490   
18491  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
18494  *-------------------------------------------------------------------------------
18495  * F-gases
18496  * - LLF
18497  * - SLF
18498  *-------------------------------------------------------------------------------
18499   
18501   
18502  * F-gases emissions
18503  eqq_emi_fgases_c_indonesia(fgases,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
18504                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
18505   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
18508  *-------------------------------------------------------------------------------
18509  * Landuse [simplified version of the land-use model]
18510  *-------------------------------------------------------------------------------
18511   
18513   
18514  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
18515  eq_wbio_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18516      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
18517   
18519  * Cost of all woody biomass produced for advanced biofuels and woody biomass
18520  eqcost_pes_wbio_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18521      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
18523   
18524  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
18527  *-------------------------------------------------------------------------------
18528  * Bioenergy power plant
18529  *-------------------------------------------------------------------------------
18530   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
18533  *-------------------------------------------------------------------------------
18534  * Traditional Biofuels
18535  * - Requires the precedence of mod_landuse
18536  *-------------------------------------------------------------------------------
18537   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
18540  *-------------------------------------------------------------------------------
18541  * Advanced biofuel
18542  * - Require the precedence of mod_landuse
18543  *-------------------------------------------------------------------------------
18544   
18546   
18547  * Limitations for nel backstops
18548  eqq_en_lim_advbiofuel_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
18549               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
18550               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
18551   
18552  * Peculiarity of advbiofuel
18553  eqmcost_fuel_advbiofuel_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18554                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
18555   
18556  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
18559  *-------------------------------------------------------------------------------
18560  * Carbon Capture and Sequestration
18561  *-------------------------------------------------------------------------------
18562   
18564   
18565  eqq_emi_ccs_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18566                  Q_EMI('ccs_plant',t,n) =e=
18567                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
18568                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
18569  ;
18570   
18571  eqcost_emi_sinks_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18572                  COST_EMI('ccs_plant',t,n) =e=
18573                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
18574                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
18575  ;
18576   
18577  eq_stor_ccs_cum_c_indonesia(ccs_stor,tp1,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
18578                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
18579  ;
18580   
18581  eq_emi_stor_ccs_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18582                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
18583  ;
18584   
18585  eq_emi_leak_ccs_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18586                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
18587   
18588  *-------------------------------------------------------------------------------
18590   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
18592  *-------------------------------------------------------------------------------
18593  * Coal for non-electric sectors
18594  * - Coke Plants
18595  * - Industrial and Commercial combined-heat-and-power (CHP)
18596  * - Others
18597  *-------------------------------------------------------------------------------
18598   
18600   
18601  eqcost_en_nelcoal_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18602           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
18603                                          nelcoal_max_abat(t,n) *
18604                                          (nelcoal_cmac(n,'a') *
18605                                            Q_EN('nelcoalabat',t,n) /
18606                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
18607                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
18608                                              (exp(nelcoal_cmac(n,'c') *
18609                                                (Q_EN('nelcoalabat',t,n)/
18610                                                  (nelcoal_max_abat(t,n) *
18611                                                      nelcoal_baseline(t,n))
18612                                                  ) - 1 )
18613                                              )
18614                                          );
18615   
18616  eqq_ncoalabat_monotone_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
18617          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
18618   
18619  * ensure Q_EN is lower than K_EN for CCS as not in jel
18620  eqq_en_nelcoalccs_max_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18621          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
18622   
18623  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
18626  *-------------------------------------------------------------------------------
18627  * Wind energy module
18628  * - onshore and offshore
18629  *-------------------------------------------------------------------------------
18630   
18632   
18633  * Capacity limits in the wind onshore electrical sector
18634  eqq_en_mu_windon_c_indonesia(wind_dist,wind_class,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
18635      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
18636   
18637  * Capacity limits in the wind offshore electrical sector
18638  eqq_en_mu_windoff_c_indonesia(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
18639      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
18640   
18641  * Wind onshore electrical generation plants (new)
18642  eqk_en_windon_c_indonesia(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
18643      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
18644                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
18645   
18646  * Wind offshore electrical generation plants (new)
18647  eqk_en_windoff_c_indonesia(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
18648      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
18649                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
18650   
18651  * Total onshore wind energy production
18652  eqq_en_windon_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18653                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
18654   
18655  * Total offshore wind energy production
18656  eqq_en_windoff_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18657                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
18658   
18659  * Total onshore wind capacity
18660  eqk_en_windon_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18661                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
18662   
18663  * Total offshore wind capacity
18664  eqk_en_windoff_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18665                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
18666   
18667  * Total onshore wind investment
18668  eqi_en_windon_sum_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
18669                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
18670   
18671  * Total offshore wind investment
18672  eqi_en_windoff_sum_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
18673                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
18674   
18675  *-------------------------------------------------------------------------------
18677   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
18679  *-------------------------------------------------------------------------------
18680  * Solar Powerplants (PV and CSP) to the electrical system
18681  *-------------------------------------------------------------------------------
18682   
18683  *-------------------------------------------------------------------------------
18685   
18686   
18687  * Capacity limits in the pv electrical sector
18688  eqq_en_mu_pv_c_indonesia(solar_dist,solar_class,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
18689                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
18690   
18691  * Capacity limits in the csp electrical sector
18692  eqq_en_mu_csp_c_indonesia(solar_dist,solar_class,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
18693                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
18694   
18695  * PV electrical generation plants (new)
18696  eqk_en_pv_c_indonesia(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
18697                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
18698                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
18699   
18700  * CSP electrical generation plants (new)
18701  eqk_en_csp_c_indonesia(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
18702                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
18703                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
18704   
18705  * Total PV energy production
18706  eqq_en_pv_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18707                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
18708   
18709  * Total CSP energy production
18710  eqq_en_csp_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18711                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
18712   
18713  * Total PV capacity
18714  eqk_en_pv_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18715                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
18716   
18717  * Total CSP capacity
18718  eqk_en_csp_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18719                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
18720   
18721  * Total PV investment
18722  eqi_en_pv_sum_c_indonesia(t,tp1,n)$(map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
18723                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
18724   
18725  * Total CSP investment
18726  eqi_en_csp_sum_c_indonesia(t,tp1,n)$(map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
18727                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
18728   
18729  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
18730  eqk_en_solar_comp_c_indonesia(t,n,solar_dist)$(map_clt_n('c_indonesia',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
18731                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
18732                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
18733   
18734   
18735   
18736  *-------------------------------------------------------------------------------
18738   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
18740  *-------------------------------------------------------------------------------
18741  * Technology development scenarios
18742  *-------------------------------------------------------------------------------
18743   
18745   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
18747  *-------------------------------------------------------------------------------
18748  * Oil Extraction
18749  * Options:
18750  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
18751  *-------------------------------------------------------------------------------
18752   
18754   
18755  * Capacity
18756  eqoilcap_c_indonesia(t,tp1,n,oilg)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
18757      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
18758   
18759  * Production
18760  eqoilprod_c_indonesia(t,tp1,n,oilg)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
18761      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
18762   
18763  eqq_out_oil_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18764      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
18765   
18766  * Cumulative production
18767  eqcum_oil_c_indonesia(t,tp1,n,oilg)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
18768      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
18769   
18770  * Cost
18771  eqcost_oil_c_indonesia(t,tp1,n,oilg)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
18772      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
18773                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
18774                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
18775   
18776  * Investments
18777  eqi_oil_c_indonesia(t,tp1,n,oilg)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
18778      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
18779   
18780  * Total investment
18781  eqi_out_oil_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
18782      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
18783   
18784  * Emissions
18785  eqq_emi_out_oil_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18786      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
18787   
18788  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
18791  *-------------------------------------------------------------------------------
18792  * Uranium Resources
18793  *-------------------------------------------------------------------------------
18794   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
18797  *-------------------------------------------------------------------------------
18798  * Gas Resources
18799  *-------------------------------------------------------------------------------
18800   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
18803  *-------------------------------------------------------------------------------
18804  * Coal Resources
18805  *-------------------------------------------------------------------------------
18806   
18808   
18809   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
18811  *-------------------------------------------------------------------------------
18812  * Climate
18813  *
18814  * Represents the climate
18815  * - based on the DICE model equations
18816  * - Radiative forcing for non CO2 ghgs
18817  * - parameters calibrated to reproduce MAGICC6.4 default response
18818  *
18819  *  Options:
18820  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
18821  * - $setglobal cooperate_on_climate {'YES','NO'}
18822  * - 'YES'(default): Countries within a coalition act in cooperation
18823  *   'NO': Countries within a coalition act individually
18824  *
18825  *-------------------------------------------------------------------------------
18826   
18828   
18830   
18831  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
18834  *-------------------------------------------------------------------------------
18835  * Long-run Damages from Climate Change
18836  * - Economic impacts
18837  * - Adaptation
18838  *-------------------------------------------------------------------------------
18839   
18841   
18843   
18844  *-------------------------------------------------------------------------------
18846   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
18848  *-------------------------------------------------------------------------------
18849  * Light-duty Vehicles for Personal Transport
18850  *-------------------------------------------------------------------------------
18851   
18853   
18854  *** newcode
18855  eqq_inv_red_ban_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18856      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
18857   
18858  ***
18859  *- Number of light duty vehicles
18860  eqnb_veh_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18861      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
18862   
18863  *- Yearly energy demand of vehicles
18864  eqq_en_veh_c_indonesia(jveh,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18865      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
18866   
18867  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
18868  eqq_el_edv_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18869      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
18870   
18871  *- Investment cost for hybrid vehicles
18872  eqmcost_inv_hybrid_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
18873                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
18874   
18875  *- Investment cost for plug-in hybrid vehicles
18876  eqmcost_inv_plghybrid_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
18877                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
18878   
18879  *- Investment cost for electric drive vehicles
18880  eqmcost_inv_edv_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
18881                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
18882   
18883  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
18886  *-------------------------------------------------------------------------------
18887  * Road Freight Transport
18888  *-------------------------------------------------------------------------------
18890   
18891  *-  Number of freight vehicles
18892  eqnb_frtveh_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18893                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
18894   
18895  *-  Yearly fuel consumption of freight vehicles
18896  eqq_en_frtveh_c_indonesia(jfrt,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18897                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
18898   
18899  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
18900  eqq_el_frtedv_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18901                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
18902   
18903  *-  Investment cost for hbd_stfr vehicle
18904  eqmcost_inv_hbd_stfr_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
18905                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
18906   
18907  *-  Investment cost for plug-in hbd_stfr vehicle
18908  eqmcost_inv_plghbd_stfr_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
18909                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
18910   
18911  *-  Investment cost for electric drive vehicle
18912  eqmcost_inv_edv_stfr_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
18913                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
18914   
18915  *-------------------------------------------------------------------------------
18917   
18918   
18919   
18920   
18921   
18922   
18923  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
18925  *-------------------------------------------------------------------------------
18926  * Traditional Biomass
18927  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
18928  *  - require post_process to be launch before
18929  *-------------------------------------------------------------------------------
18930   
18932   
18933  * Optional modules
18934   
18935  * Policy modules
18936   
18937  * Calibration
18940   
18941   
18942  model witch_c_indonesia /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
18944  *-------------------------------------------------------------------------------
18945  * Call modules by order
18946  *-------------------------------------------------------------------------------
18950   
18951  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
18953  *-------------------------------------------------------------------------------
18954  * Algorithm
18955  *-------------------------------------------------------------------------------
18956   
18958   
18959  eqobj_c_indonesia
18960   
18961  *-------------------------------------------------------------------------------
18963   
18964  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
18966  *-------------------------------------------------------------------------------
18967  * Time
18968  * - Temporal structure
18969  * - Fixed time periods
18970  * - States of the world
18971  *-------------------------------------------------------------------------------
18972   
18974   
18975  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
18977  *-------------------------------------------------------------------------------
18978  * Geographic dimension and mapping with countries
18979  *-------------------------------------------------------------------------------
18980   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
18983  *-------------------------------------------------------------------------------
18984  * Non-Cooperative Setup
18985  *
18986  * Each region is defined as an individual coalition.
18987  *
18988  *-------------------------------------------------------------------------------
18989   
18991   
18992  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
18994  *-------------------------------------------------------------------------------
18995  * Welfare
18996  *-------------------------------------------------------------------------------
18997   
18999   
19000  equtility_c_indonesia
19001   
19002  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
19005  *-------------------------------------------------------------------------------
19006  * Economy
19007  * - Production and Consumption definition
19008  * - Top-level of the production function
19009  * Options:
19010  * --original_ssp=1 : original SSP population and GDP data
19011  *-------------------------------------------------------------------------------
19012   
19014   
19015  eqk_c_indonesia
19016  eqq_cc_c_indonesia
19017  eqq_fen_c_indonesia
19018  eqq_y_c_indonesia
19019   
19020  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
19023  *-------------------------------------------------------------------------------
19024  * Energy sector
19025  *-------------------------------------------------------------------------------
19026   
19028   
19029  eq_mkt_clearing_oil_c_indonesia
19030  eqcost_pes_c_indonesia
19031  eqcost_ses_c_indonesia
19032  eqk_en_c_indonesia
19033  eqq_ces_el_c_indonesia
19034  eqq_ces_nelgas_c_indonesia
19035  eqq_el2_c_indonesia
19036  eqq_el_c_indonesia
19037  eqq_elff_c_indonesia
19038  eqq_en_c_indonesia
19039  eqq_en_in_c_indonesia
19040  eqq_en_mu_c_indonesia
19041  eqq_en_tree_c_indonesia
19042  eqq_nel_c_indonesia
19043  eqq_nelog_c_indonesia
19044  eqq_fuel_c_indonesia
19045  eqq_elffren_c_indonesia
19046   
19047  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
19050  *-------------------------------------------------------------------------------
19051  * Carbon Emissions
19052  * - Total CO2 emissions and CO2 Fossil fuel and Industry
19053  * - CO2 emission costs
19054  * - GHG permit market
19055  *-------------------------------------------------------------------------------
19056   
19058   
19059  eqq_emi_lim_c_indonesia
19060  ***newcode
19061  eqq_emi_lim_USAc_indonesia
19062  ***
19063  eqq_emi_tree_c_indonesia
19064  eqq_emi_co2ffi_c_indonesia
19065   
19066  eqcost_emi_co2_c_indonesia
19067   
19068  eq_mkt_clearing_nip_c_indonesia
19069   
19070  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
19073  *-------------------------------------------------------------------------------
19074  * Research & Development
19075  * Options:
19076  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
19077  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
19078  *-------------------------------------------------------------------------------
19079   
19081   
19082  eqk_rd_c_indonesia
19083  eqspill_coop_c_indonesia
19084  eqspill_lead_c_indonesia
19085  eqspill_foll_c_indonesia
19086  eqmcost_inv_back_c_indonesia
19087  eqmcost_inv_back_lbd_c_indonesia
19088   
19089  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
19092  *-------------------------------------------------------------------------------
19093  * Default Climate Policy Implementation
19094  *
19095  * Options:
19096  *    --policy={bau (default),ctax}
19097  *        Implement a climate policy setting
19098  *  [ --scen= ]
19099  *        Policy variant.
19100  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
19101  *          * XXX for a fixed percentage/yr (e.g. 5) growth
19102  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
19103  *  [ --ctax_year=2020 ]
19104  *        Starting year of the carbon tax
19105  *  [ --ctax_initial=30 ]
19106  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
19107  *
19108  *-------------------------------------------------------------------------------
19110   
19111  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
19113  *-------------------------------------------------------------------------------
19114  * Energy efficiency
19115  *-------------------------------------------------------------------------------
19116   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
19119  *-------------------------------------------------------------------------------
19120  * Hydro Power
19121  *-------------------------------------------------------------------------------
19122   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
19125  *-------------------------------------------------------------------------------
19126  * System Integration:
19127  * - Capacity constraint
19128  * - Flexibility constraint
19129  * - Grid Investment
19130  * - Capacity growth constraint
19131  *-------------------------------------------------------------------------------
19132   
19134   
19135  eqq_elintren_c_indonesia
19136  eqflex_c_indonesia
19137  eqk_en_grid_c_indonesia
19138  eqk_en_grid_to_k_en_c_indonesia
19139  eqfirm_capacity_c_indonesia
19140  eqcap_growth_c_indonesia
19141   
19142  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
19145  *-------------------------------------------------------------------------------
19146  * Nuclear power plants
19147  *-------------------------------------------------------------------------------
19148   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
19151  *-------------------------------------------------------------------------------
19152  * GHG module
19153  * - CH4 FFI + CH4 waste + CH4 open fires
19154  * - N2O FFI + N2O waste + N2O open fires
19155  *-------------------------------------------------------------------------------
19156   
19158   
19159  eqq_emi_waste_c_indonesia
19160  eqq_emi_n2o_ffi_c_indonesia
19161  eqq_emi_ch4_ffi_c_indonesia
19162   
19163  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
19166  *-------------------------------------------------------------------------------
19167  * F-gases
19168  * - LLF
19169  * - SLF
19170  *-------------------------------------------------------------------------------
19171   
19173   
19174  eqq_emi_fgases_c_indonesia
19175   
19176  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
19179  *-------------------------------------------------------------------------------
19180  * Landuse [simplified version of the land-use model]
19181  *-------------------------------------------------------------------------------
19182   
19184   
19185  eq_wbio_c_indonesia
19186  eqcost_pes_wbio_c_indonesia
19187   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
19190  *-------------------------------------------------------------------------------
19191  * Bioenergy power plant
19192  *-------------------------------------------------------------------------------
19193   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
19196  *-------------------------------------------------------------------------------
19197  * Traditional Biofuels
19198  * - Requires the precedence of mod_landuse
19199  *-------------------------------------------------------------------------------
19200   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
19203  *-------------------------------------------------------------------------------
19204  * Advanced biofuel
19205  * - Require the precedence of mod_landuse
19206  *-------------------------------------------------------------------------------
19207   
19209   
19210  eqq_en_lim_advbiofuel_c_indonesia
19211  eqmcost_fuel_advbiofuel_c_indonesia
19212   
19213  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
19216  *-------------------------------------------------------------------------------
19217  * Carbon Capture and Sequestration
19218  *-------------------------------------------------------------------------------
19219   
19221   
19222  eqq_emi_ccs_c_indonesia
19223  eqcost_emi_sinks_c_indonesia
19224  eq_stor_ccs_cum_c_indonesia
19225  eq_emi_stor_ccs_c_indonesia
19226  eq_emi_leak_ccs_c_indonesia
19227   
19228  *-------------------------------------------------------------------------------
19230   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
19232  *-------------------------------------------------------------------------------
19233  * Coal for non-electric sectors
19234  * - Coke Plants
19235  * - Industrial and Commercial combined-heat-and-power (CHP)
19236  * - Others
19237  *-------------------------------------------------------------------------------
19238   
19240   
19241  eqcost_en_nelcoal_c_indonesia
19242  eqq_ncoalabat_monotone_c_indonesia
19243  eqq_en_nelcoalccs_max_c_indonesia
19244   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
19247  *-------------------------------------------------------------------------------
19248  * Wind energy module
19249  * - onshore and offshore
19250  *-------------------------------------------------------------------------------
19251   
19253   
19254  eqq_en_mu_windon_c_indonesia
19255  eqq_en_mu_windoff_c_indonesia
19256  eqk_en_windon_c_indonesia
19257  eqk_en_windoff_c_indonesia
19258  eqq_en_windon_sum_c_indonesia
19259  eqq_en_windoff_sum_c_indonesia
19260  eqk_en_windon_sum_c_indonesia
19261  eqk_en_windoff_sum_c_indonesia
19262  eqi_en_windon_sum_c_indonesia
19263  eqi_en_windoff_sum_c_indonesia
19264   
19266   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
19268  *-------------------------------------------------------------------------------
19269  * Solar Powerplants (PV and CSP) to the electrical system
19270  *-------------------------------------------------------------------------------
19271   
19272  *-------------------------------------------------------------------------------
19274   
19275  eqq_en_mu_pv_c_indonesia
19276  eqq_en_mu_csp_c_indonesia
19277  eqk_en_pv_c_indonesia
19278  eqk_en_csp_c_indonesia
19279  eqq_en_pv_sum_c_indonesia
19280  eqq_en_csp_sum_c_indonesia
19281  eqk_en_pv_sum_c_indonesia
19282  eqk_en_csp_sum_c_indonesia
19283  eqi_en_pv_sum_c_indonesia
19284  eqi_en_csp_sum_c_indonesia
19285  eqk_en_solar_comp_c_indonesia
19286   
19287  *-------------------------------------------------------------------------------
19289   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
19291  *-------------------------------------------------------------------------------
19292  * Technology development scenarios
19293  *-------------------------------------------------------------------------------
19294   
19296   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
19298  *-------------------------------------------------------------------------------
19299  * Oil Extraction
19300  * Options:
19301  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
19302  *-------------------------------------------------------------------------------
19303   
19305   
19306  eqoilcap_c_indonesia
19307  eqoilprod_c_indonesia
19308  eqq_out_oil_c_indonesia
19309  eqcum_oil_c_indonesia
19310  eqcost_oil_c_indonesia
19311  eqi_oil_c_indonesia
19312  eqi_out_oil_c_indonesia
19313  eqq_emi_out_oil_c_indonesia
19314   
19315  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
19318  *-------------------------------------------------------------------------------
19319  * Uranium Resources
19320  *-------------------------------------------------------------------------------
19321   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
19324  *-------------------------------------------------------------------------------
19325  * Gas Resources
19326  *-------------------------------------------------------------------------------
19327   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
19330  *-------------------------------------------------------------------------------
19331  * Coal Resources
19332  *-------------------------------------------------------------------------------
19333   
19335   
19336   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
19338  *-------------------------------------------------------------------------------
19339  * Climate
19340  *
19341  * Represents the climate
19342  * - based on the DICE model equations
19343  * - Radiative forcing for non CO2 ghgs
19344  * - parameters calibrated to reproduce MAGICC6.4 default response
19345  *
19346  *  Options:
19347  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
19348  * - $setglobal cooperate_on_climate {'YES','NO'}
19349  * - 'YES'(default): Countries within a coalition act in cooperation
19350  *   'NO': Countries within a coalition act individually
19351  *
19352  *-------------------------------------------------------------------------------
19353   
19355   
19357   
19358  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
19361  *-------------------------------------------------------------------------------
19362  * Long-run Damages from Climate Change
19363  * - Economic impacts
19364  * - Adaptation
19365  *-------------------------------------------------------------------------------
19366   
19368   
19370   
19371  *-------------------------------------------------------------------------------
19373   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
19375  *-------------------------------------------------------------------------------
19376  * Light-duty Vehicles for Personal Transport
19377  *-------------------------------------------------------------------------------
19378   
19380   
19381  eqnb_veh_c_indonesia
19382  eqq_en_veh_c_indonesia
19383  eqq_el_edv_c_indonesia
19384  eqmcost_inv_hybrid_c_indonesia
19385  eqmcost_inv_plghybrid_c_indonesia
19386  eqmcost_inv_edv_c_indonesia
19387  *** newcode
19388  eqq_inv_red_ban_c_indonesia
19389  ***
19390  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
19393  *-------------------------------------------------------------------------------
19394  * Road Freight Transport
19395  *-------------------------------------------------------------------------------
19397   
19398  eqnb_frtveh_c_indonesia
19399  eqq_en_frtveh_c_indonesia
19400  eqq_el_frtedv_c_indonesia
19401  eqmcost_inv_hbd_stfr_c_indonesia
19402  eqmcost_inv_plghbd_stfr_c_indonesia
19403  eqmcost_inv_edv_stfr_c_indonesia
19404   
19405  *-------------------------------------------------------------------------------
19407   
19408   
19409   
19410   
19411   
19412   
19413  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
19415  *-------------------------------------------------------------------------------
19416  * Traditional Biomass
19417  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
19418  *  - require post_process to be launch before
19419  *-------------------------------------------------------------------------------
19420   
19422   
19423  * Optional modules
19424   
19425  * Policy modules
19426   
19427  * Calibration
19430  /;
19431   
19432  witch_c_indonesia.optfile=1;   # the option file solvername.opt is to be used
19433  witch_c_indonesia.holdfixed=1; # treat fixed values as constant
19434  witch_c_indonesia.scaleopt=1;  # Use scaling for better gradients estimation
19435  witch_c_indonesia.solvelink=3; # Use parallel or sequential solving
19436   
19441   
19442  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
19444  *-------------------------------------------------------------------------------
19445  * Call modules by order
19446  *-------------------------------------------------------------------------------
19450   
19451  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
19453  *-------------------------------------------------------------------------------
19454  * Algorithm
19455  *-------------------------------------------------------------------------------
19456   
19458   
19459  eqobj_c_jpnkor
19460   
19461  *-------------------------------------------------------------------------------
19463   
19464  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
19466  *-------------------------------------------------------------------------------
19467  * Time
19468  * - Temporal structure
19469  * - Fixed time periods
19470  * - States of the world
19471  *-------------------------------------------------------------------------------
19472   
19474   
19475  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
19477  *-------------------------------------------------------------------------------
19478  * Geographic dimension and mapping with countries
19479  *-------------------------------------------------------------------------------
19480   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
19483  *-------------------------------------------------------------------------------
19484  * Non-Cooperative Setup
19485  *
19486  * Each region is defined as an individual coalition.
19487  *
19488  *-------------------------------------------------------------------------------
19489   
19491   
19492  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
19494  *-------------------------------------------------------------------------------
19495  * Welfare
19496  *-------------------------------------------------------------------------------
19497   
19499   
19500  equtility_c_jpnkor
19501   
19502  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
19505  *-------------------------------------------------------------------------------
19506  * Economy
19507  * - Production and Consumption definition
19508  * - Top-level of the production function
19509  * Options:
19510  * --original_ssp=1 : original SSP population and GDP data
19511  *-------------------------------------------------------------------------------
19512   
19514   
19515  eqk_c_jpnkor
19516  eqq_cc_c_jpnkor
19517  eqq_fen_c_jpnkor
19518  eqq_y_c_jpnkor
19519   
19520  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
19523  *-------------------------------------------------------------------------------
19524  * Energy sector
19525  *-------------------------------------------------------------------------------
19526   
19528   
19529  eq_mkt_clearing_oil_c_jpnkor
19530  eqcost_pes_c_jpnkor
19531  eqcost_ses_c_jpnkor
19532  eqk_en_c_jpnkor
19533  eqq_ces_el_c_jpnkor
19534  eqq_ces_nelgas_c_jpnkor
19535  eqq_el2_c_jpnkor
19536  eqq_el_c_jpnkor
19537  eqq_elff_c_jpnkor
19538  eqq_en_c_jpnkor
19539  eqq_en_in_c_jpnkor
19540  eqq_en_mu_c_jpnkor
19541  eqq_en_tree_c_jpnkor
19542  eqq_nel_c_jpnkor
19543  eqq_nelog_c_jpnkor
19544  eqq_fuel_c_jpnkor
19545  eqq_elffren_c_jpnkor
19546   
19547  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
19550  *-------------------------------------------------------------------------------
19551  * Carbon Emissions
19552  * - Total CO2 emissions and CO2 Fossil fuel and Industry
19553  * - CO2 emission costs
19554  * - GHG permit market
19555  *-------------------------------------------------------------------------------
19556   
19558   
19559  eqq_emi_lim_c_jpnkor
19560  ***newcode
19561  eqq_emi_lim_USAc_jpnkor
19562  ***
19563  eqq_emi_tree_c_jpnkor
19564  eqq_emi_co2ffi_c_jpnkor
19565   
19566  eqcost_emi_co2_c_jpnkor
19567   
19568  eq_mkt_clearing_nip_c_jpnkor
19569   
19570  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
19573  *-------------------------------------------------------------------------------
19574  * Research & Development
19575  * Options:
19576  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
19577  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
19578  *-------------------------------------------------------------------------------
19579   
19581   
19582  eqk_rd_c_jpnkor
19583  eqspill_coop_c_jpnkor
19584  eqspill_lead_c_jpnkor
19585  eqspill_foll_c_jpnkor
19586  eqmcost_inv_back_c_jpnkor
19587  eqmcost_inv_back_lbd_c_jpnkor
19588   
19589  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
19592  *-------------------------------------------------------------------------------
19593  * Default Climate Policy Implementation
19594  *
19595  * Options:
19596  *    --policy={bau (default),ctax}
19597  *        Implement a climate policy setting
19598  *  [ --scen= ]
19599  *        Policy variant.
19600  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
19601  *          * XXX for a fixed percentage/yr (e.g. 5) growth
19602  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
19603  *  [ --ctax_year=2020 ]
19604  *        Starting year of the carbon tax
19605  *  [ --ctax_initial=30 ]
19606  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
19607  *
19608  *-------------------------------------------------------------------------------
19610   
19611  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
19613  *-------------------------------------------------------------------------------
19614  * Energy efficiency
19615  *-------------------------------------------------------------------------------
19616   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
19619  *-------------------------------------------------------------------------------
19620  * Hydro Power
19621  *-------------------------------------------------------------------------------
19622   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
19625  *-------------------------------------------------------------------------------
19626  * System Integration:
19627  * - Capacity constraint
19628  * - Flexibility constraint
19629  * - Grid Investment
19630  * - Capacity growth constraint
19631  *-------------------------------------------------------------------------------
19632   
19634   
19635  eqq_elintren_c_jpnkor
19636  eqflex_c_jpnkor
19637  eqk_en_grid_c_jpnkor
19638  eqk_en_grid_to_k_en_c_jpnkor
19639  eqfirm_capacity_c_jpnkor
19640  eqcap_growth_c_jpnkor
19641   
19642  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
19645  *-------------------------------------------------------------------------------
19646  * Nuclear power plants
19647  *-------------------------------------------------------------------------------
19648   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
19651  *-------------------------------------------------------------------------------
19652  * GHG module
19653  * - CH4 FFI + CH4 waste + CH4 open fires
19654  * - N2O FFI + N2O waste + N2O open fires
19655  *-------------------------------------------------------------------------------
19656   
19658   
19659  eqq_emi_waste_c_jpnkor
19660  eqq_emi_n2o_ffi_c_jpnkor
19661  eqq_emi_ch4_ffi_c_jpnkor
19662   
19663  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
19666  *-------------------------------------------------------------------------------
19667  * F-gases
19668  * - LLF
19669  * - SLF
19670  *-------------------------------------------------------------------------------
19671   
19673   
19674  eqq_emi_fgases_c_jpnkor
19675   
19676  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
19679  *-------------------------------------------------------------------------------
19680  * Landuse [simplified version of the land-use model]
19681  *-------------------------------------------------------------------------------
19682   
19684   
19685  eq_wbio_c_jpnkor
19686  eqcost_pes_wbio_c_jpnkor
19687   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
19690  *-------------------------------------------------------------------------------
19691  * Bioenergy power plant
19692  *-------------------------------------------------------------------------------
19693   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
19696  *-------------------------------------------------------------------------------
19697  * Traditional Biofuels
19698  * - Requires the precedence of mod_landuse
19699  *-------------------------------------------------------------------------------
19700   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
19703  *-------------------------------------------------------------------------------
19704  * Advanced biofuel
19705  * - Require the precedence of mod_landuse
19706  *-------------------------------------------------------------------------------
19707   
19709   
19710  eqq_en_lim_advbiofuel_c_jpnkor
19711  eqmcost_fuel_advbiofuel_c_jpnkor
19712   
19713  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
19716  *-------------------------------------------------------------------------------
19717  * Carbon Capture and Sequestration
19718  *-------------------------------------------------------------------------------
19719   
19721   
19722  eqq_emi_ccs_c_jpnkor
19723  eqcost_emi_sinks_c_jpnkor
19724  eq_stor_ccs_cum_c_jpnkor
19725  eq_emi_stor_ccs_c_jpnkor
19726  eq_emi_leak_ccs_c_jpnkor
19727   
19728  *-------------------------------------------------------------------------------
19730   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
19732  *-------------------------------------------------------------------------------
19733  * Coal for non-electric sectors
19734  * - Coke Plants
19735  * - Industrial and Commercial combined-heat-and-power (CHP)
19736  * - Others
19737  *-------------------------------------------------------------------------------
19738   
19740   
19741  eqcost_en_nelcoal_c_jpnkor
19742  eqq_ncoalabat_monotone_c_jpnkor
19743  eqq_en_nelcoalccs_max_c_jpnkor
19744   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
19747  *-------------------------------------------------------------------------------
19748  * Wind energy module
19749  * - onshore and offshore
19750  *-------------------------------------------------------------------------------
19751   
19753   
19754  eqq_en_mu_windon_c_jpnkor
19755  eqq_en_mu_windoff_c_jpnkor
19756  eqk_en_windon_c_jpnkor
19757  eqk_en_windoff_c_jpnkor
19758  eqq_en_windon_sum_c_jpnkor
19759  eqq_en_windoff_sum_c_jpnkor
19760  eqk_en_windon_sum_c_jpnkor
19761  eqk_en_windoff_sum_c_jpnkor
19762  eqi_en_windon_sum_c_jpnkor
19763  eqi_en_windoff_sum_c_jpnkor
19764   
19766   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
19768  *-------------------------------------------------------------------------------
19769  * Solar Powerplants (PV and CSP) to the electrical system
19770  *-------------------------------------------------------------------------------
19771   
19772  *-------------------------------------------------------------------------------
19774   
19775  eqq_en_mu_pv_c_jpnkor
19776  eqq_en_mu_csp_c_jpnkor
19777  eqk_en_pv_c_jpnkor
19778  eqk_en_csp_c_jpnkor
19779  eqq_en_pv_sum_c_jpnkor
19780  eqq_en_csp_sum_c_jpnkor
19781  eqk_en_pv_sum_c_jpnkor
19782  eqk_en_csp_sum_c_jpnkor
19783  eqi_en_pv_sum_c_jpnkor
19784  eqi_en_csp_sum_c_jpnkor
19785  eqk_en_solar_comp_c_jpnkor
19786   
19787  *-------------------------------------------------------------------------------
19789   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
19791  *-------------------------------------------------------------------------------
19792  * Technology development scenarios
19793  *-------------------------------------------------------------------------------
19794   
19796   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
19798  *-------------------------------------------------------------------------------
19799  * Oil Extraction
19800  * Options:
19801  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
19802  *-------------------------------------------------------------------------------
19803   
19805   
19806  eqoilcap_c_jpnkor
19807  eqoilprod_c_jpnkor
19808  eqq_out_oil_c_jpnkor
19809  eqcum_oil_c_jpnkor
19810  eqcost_oil_c_jpnkor
19811  eqi_oil_c_jpnkor
19812  eqi_out_oil_c_jpnkor
19813  eqq_emi_out_oil_c_jpnkor
19814   
19815  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
19818  *-------------------------------------------------------------------------------
19819  * Uranium Resources
19820  *-------------------------------------------------------------------------------
19821   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
19824  *-------------------------------------------------------------------------------
19825  * Gas Resources
19826  *-------------------------------------------------------------------------------
19827   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
19830  *-------------------------------------------------------------------------------
19831  * Coal Resources
19832  *-------------------------------------------------------------------------------
19833   
19835   
19836   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
19838  *-------------------------------------------------------------------------------
19839  * Climate
19840  *
19841  * Represents the climate
19842  * - based on the DICE model equations
19843  * - Radiative forcing for non CO2 ghgs
19844  * - parameters calibrated to reproduce MAGICC6.4 default response
19845  *
19846  *  Options:
19847  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
19848  * - $setglobal cooperate_on_climate {'YES','NO'}
19849  * - 'YES'(default): Countries within a coalition act in cooperation
19850  *   'NO': Countries within a coalition act individually
19851  *
19852  *-------------------------------------------------------------------------------
19853   
19855   
19857   
19858  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
19861  *-------------------------------------------------------------------------------
19862  * Long-run Damages from Climate Change
19863  * - Economic impacts
19864  * - Adaptation
19865  *-------------------------------------------------------------------------------
19866   
19868   
19870   
19871  *-------------------------------------------------------------------------------
19873   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
19875  *-------------------------------------------------------------------------------
19876  * Light-duty Vehicles for Personal Transport
19877  *-------------------------------------------------------------------------------
19878   
19880   
19881  eqnb_veh_c_jpnkor
19882  eqq_en_veh_c_jpnkor
19883  eqq_el_edv_c_jpnkor
19884  eqmcost_inv_hybrid_c_jpnkor
19885  eqmcost_inv_plghybrid_c_jpnkor
19886  eqmcost_inv_edv_c_jpnkor
19887  *** newcode
19888  eqq_inv_red_ban_c_jpnkor
19889  ***
19890  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
19893  *-------------------------------------------------------------------------------
19894  * Road Freight Transport
19895  *-------------------------------------------------------------------------------
19897   
19898  eqnb_frtveh_c_jpnkor
19899  eqq_en_frtveh_c_jpnkor
19900  eqq_el_frtedv_c_jpnkor
19901  eqmcost_inv_hbd_stfr_c_jpnkor
19902  eqmcost_inv_plghbd_stfr_c_jpnkor
19903  eqmcost_inv_edv_stfr_c_jpnkor
19904   
19905  *-------------------------------------------------------------------------------
19907   
19908   
19909   
19910   
19911   
19912   
19913  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
19915  *-------------------------------------------------------------------------------
19916  * Traditional Biomass
19917  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
19918  *  - require post_process to be launch before
19919  *-------------------------------------------------------------------------------
19920   
19922   
19923  * Optional modules
19924   
19925  * Policy modules
19926   
19927  * Calibration
19930  ;
19931   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
19933  *-------------------------------------------------------------------------------
19934  * Call modules by order
19935  *-------------------------------------------------------------------------------
19939   
19940  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
19942  *-------------------------------------------------------------------------------
19943  * Algorithm
19944  *-------------------------------------------------------------------------------
19945   
19947   
19949  * Add the component of the (maximized) objective function as required by the ADMM algorithm
19950  eqobj_c_jpnkor..
19951      OBJADMM =e= UTILITY -
19952          sum(t, rho_admm('oil',t) / 2 *
19953              sum(n$(map_clt_n('c_jpnkor',n) and trading_t('oil',t,n)),
19954                  power(
19955                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
19956                      x_admm('oil',t,n) +
19957                      xavg_admm('oil',t) +
19958                      u_admm('oil', t)
19959                  ,2)
19960              )) -
19961          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
19962              sum(n$(map_clt_n('c_jpnkor',n) and trading_t(c_mkt,t,n)),
19963                  power(
19964                      Q_EMI(c_mkt,t,n) -
19965                      x_admm(c_mkt,t,n) +
19966                      xavg_admm(c_mkt,t) +
19967                      u_admm(c_mkt,t)
19968                  ,2)
19969              ))
19970      ;
19972   
19973  *-------------------------------------------------------------------------------
19975   
19976  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
19978  *-------------------------------------------------------------------------------
19979  * Time
19980  * - Temporal structure
19981  * - Fixed time periods
19982  * - States of the world
19983  *-------------------------------------------------------------------------------
19984   
19986   
19987  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
19989  *-------------------------------------------------------------------------------
19990  * Geographic dimension and mapping with countries
19991  *-------------------------------------------------------------------------------
19992   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
19995  *-------------------------------------------------------------------------------
19996  * Non-Cooperative Setup
19997  *
19998  * Each region is defined as an individual coalition.
19999  *
20000  *-------------------------------------------------------------------------------
20001   
20003   
20004  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
20006  *-------------------------------------------------------------------------------
20007  * Welfare
20008  *-------------------------------------------------------------------------------
20009   
20011   
20012  * Objective function - Welfare to be maximized
20013  equtility_c_jpnkor..
20014      UTILITY =e=
20015   
20016  * Negishi SWF
20018   
20019  * Welfare functions based on CEBGE
20022                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
20023                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
20024                      ((sum(n$map_clt_n('c_jpnkor',n),
20025                        (l(t,n) / sum(nn$map_clt_n('c_jpnkor',nn), l(t,nn))) *
20026                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
20027                       )**(1 / (1 - gamma))
20028                      )**(1 - eta) ) +
20029                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
20030                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
20031                      ((sum(n$map_clt_n('c_jpnkor',n),
20032                        (l(t,n) / sum(nn$map_clt_n('c_jpnkor',nn), l(t,nn))) *
20033                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
20034                       )**(1 / (1 - gamma))
20035                      )**(1 - eta) )
20036                  )**(1/(1 - eta)) * 1e6
20039   
20040   
20041  ;
20042   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
20045  *-------------------------------------------------------------------------------
20046  * Economy
20047  * - Production and Consumption definition
20048  * - Top-level of the production function
20049  * Options:
20050  * --original_ssp=1 : original SSP population and GDP data
20051  *-------------------------------------------------------------------------------
20052   
20054   
20055  * Production
20056  eqq_y_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20057   
20058      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
20059                     ## Climate feedback on economy
20061                     ## Net cost of Primary and Secondary Energy Sources
20062                     - sum(fuel, COST_FUEL(fuel,t,n))
20063                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
20064                     - sum(cce, COST_EMI(cce,t,n))
20065                     ## Carbon tax
20066                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
20067                     ## Additionnal costs on gross product
20068                     - sum(ccy, COST_Y(ccy,t,n))
20069  ;
20070   
20071  * Consumption
20072  eqq_cc_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
20073      Q('cc',t,n) =e= Q('y',t,n)
20074                      ## Investments in goods g (final good, adaptation)
20075                      -sum(g, I(g,t,n))
20076                      ## Investments in r&d
20077                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
20078                      ## Investments in energy technlogies
20079                      -sum(jinv, I_EN(jinv,t,n))
20080                       ## Investments in grid infrastructures
20081                      - I_EN_GRID(t,n)
20082                      ## Investments in extraction sector
20083                      -sum(extract(f), I_OUT(f,t,n))
20084                      ## O&M for energy technlogies
20085                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
20086                      ## O&M for extraction
20087                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
20088                      ## Energy technology penalty costs
20089                      -sum(jpenalty(j), COST_EN(j,t,n))
20090  ;
20091   
20092  * Capital accumulation
20093  eqk_c_jpnkor(g,t,tp1,n)$(map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
20094      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
20095   
20096  * Energy services
20097  eqq_fen_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20098      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
20099   
20100  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
20103  *-------------------------------------------------------------------------------
20104  * Energy sector
20105  *-------------------------------------------------------------------------------
20106   
20108   
20109  *-------------------------------------------------------------------------------
20110  * Production - Energy sector
20111  *-------------------------------------------------------------------------------
20112   
20113  eqq_en_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20114      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
20115   
20116  *-------------------------------------------------------------------------------
20117  * Production - Electrical sector
20118  *-------------------------------------------------------------------------------
20119   
20120  eqq_el_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20121      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
20122   
20123  eqq_el2_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20124      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
20125   
20126  eqq_elffren_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20127      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
20128  eqq_elff_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20129      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
20130   
20131  eqq_ces_el_c_jpnkor(ices_el,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
20132      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
20133  ;
20134   
20135  *-------------------------------------------------------------------------------
20136  * Production - Non-electrical sector
20137  *-------------------------------------------------------------------------------
20138   
20139  eqq_nel_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20140      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
20141   
20142  eqq_nelog_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20143      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
20144  ;
20145  eqq_ces_nelgas_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20146      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
20147   
20148  *-------------------------------------------------------------------------------
20149  * PES and fuels
20150  *-------------------------------------------------------------------------------
20151   
20152  eqq_fuel_c_jpnkor(fuel,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
20153      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
20154   
20155  *-------------------------------------------------------------------------------
20156  * Cost
20157  *-------------------------------------------------------------------------------
20158   
20159  * Net cost of Primary Energy Supplies
20160  eqcost_pes_c_jpnkor(f,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
20161      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
20162                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
20163   
20164  * Net cost of Secondary Energy Supplies
20165  eqcost_ses_c_jpnkor(s,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20166      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
20167   
20168   
20169  *-------------------------------------------------------------------------------
20170  * Market balances
20171  *-------------------------------------------------------------------------------
20172   
20173  eq_mkt_clearing_oil_c_jpnkor(t,'c_jpnkor')$(internal('oil'))..
20174      sum( n$(map_clt_n('c_jpnkor',n) and trading_t('oil',t,n)),
20175          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
20176      ) =e= 0;
20177   
20178  *-------------------------------------------------------------------------------
20179  * New capital in the energy sector
20180  *-------------------------------------------------------------------------------
20181   
20182  * Electrical generation plants (new)
20183  eqk_en_c_jpnkor(jinv,t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
20184      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
20185                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
20186   
20187  *-------------------------------------------------------------------------------
20188  * ENERGY
20189  *-------------------------------------------------------------------------------
20190   
20191  * Capacity limits in the electrical sector
20192  eqq_en_mu_c_jpnkor(jel,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
20193      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
20194   
20195  * Efficiency of energy technology sector
20196  eqq_en_in_c_jpnkor(jfed,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
20197      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
20198                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
20199   
20200  * Energy generation "tree"
20201  eqq_en_tree_c_jpnkor(j,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
20202      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
20203   
20204  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
20207  *-------------------------------------------------------------------------------
20208  * Carbon Emissions
20209  * - Total CO2 emissions and CO2 Fossil fuel and Industry
20210  * - CO2 emission costs
20211  * - GHG permit market
20212  *-------------------------------------------------------------------------------
20213   
20215   
20216  * GHG emission cap
20217  eqq_emi_lim_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
20218      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
20219                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
20220   
20221  ***newcode
20222  eqq_emi_lim_USAc_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
20223  ***
20224   
20225  * Compute total and sectoral emissions
20226  eqq_emi_tree_c_jpnkor(t,n,e)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
20227      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
20228   
20229  * Industrial CO2 emissions
20230  eqq_emi_co2ffi_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20231      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
20232                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
20233                              # Emissions from biomass
20234                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
20235                              # Emissions from fuel extraction
20236                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
20237                              # Captured emissions
20238                              sum(sink, Q_EMI(sink,t,n));
20239   
20240  * CO2 emission costs
20241  eqcost_emi_co2_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20242      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
20243   
20244  * Emission permit market clearing for internal market
20245  eq_mkt_clearing_nip_c_jpnkor(c_mkt,t,'c_jpnkor')$(internal(c_mkt))..
20246      sum(n$(map_clt_n('c_jpnkor',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
20247   
20248  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
20251  *-------------------------------------------------------------------------------
20252  * Research & Development
20253  * Options:
20254  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
20255  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
20256  *-------------------------------------------------------------------------------
20257   
20259   
20260  * Knowledge stock accumulation
20261  eqk_rd_c_jpnkor(rd,t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
20262                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
20263                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
20264                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
20265                                        SPILL(rd,t,n)**rd_coef(rd,'d');
20266   
20267  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
20268  eqspill_coop_c_jpnkor(rd,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_jpnkor'))..
20269          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
20270                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_jpnkor',nn)), K_RD(rd,t,nn)) +
20271                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_jpnkor',nn))), K_RD.l(rd,t,nn))
20272                            ) *
20273                            (
20274                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_jpnkor',nn)), K_RD(rd,t,nn)) +
20275                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_jpnkor',nn))), K_RD.l(rd,t,nn))
20276                              ) - K_RD(rd,t,n)
20277                            );
20278   
20279  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
20280  eqspill_lead_c_jpnkor(rd,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_jpnkor')) and leadrd(rd,n))..
20281                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
20282   
20283  * No-cooperation : a follower sees is negative effect on the quantity he can grab
20284  eqspill_foll_c_jpnkor(rd,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_jpnkor')) and (not leadrd(rd,n)))..
20285                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
20286   
20287  *- Only LbR (without learning by doing)
20288  eqmcost_inv_back_c_jpnkor(jrd,t,tt,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
20289                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
20290                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
20291   
20292  *- LbR together with learning by doing ==> Two-factor learning curve
20293  eqmcost_inv_back_lbd_c_jpnkor(jrd,t,tt,tfirst,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
20294                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
20295                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
20296                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
20297   
20298  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
20301  *-------------------------------------------------------------------------------
20302  * Default Climate Policy Implementation
20303  *
20304  * Options:
20305  *    --policy={bau (default),ctax}
20306  *        Implement a climate policy setting
20307  *  [ --scen= ]
20308  *        Policy variant.
20309  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
20310  *          * XXX for a fixed percentage/yr (e.g. 5) growth
20311  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
20312  *  [ --ctax_year=2020 ]
20313  *        Starting year of the carbon tax
20314  *  [ --ctax_initial=30 ]
20315  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
20316  *
20317  *-------------------------------------------------------------------------------
20319   
20320  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
20322  *-------------------------------------------------------------------------------
20323  * Energy efficiency
20324  *-------------------------------------------------------------------------------
20325   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
20328  *-------------------------------------------------------------------------------
20329  * Hydro Power
20330  *-------------------------------------------------------------------------------
20331   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
20334  *-------------------------------------------------------------------------------
20335  * System Integration:
20336  * - Capacity constraint
20337  * - Flexibility constraint
20338  * - Grid Investment
20339  * - Capacity growth constraint
20340  *-------------------------------------------------------------------------------
20341   
20343   
20344   
20345  * Renewable CES
20346   
20347  * Definition of the renewable CES
20348  eqq_elintren_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20349      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
20350   
20351  * Capacity constraint
20352   
20354  eqfirm_capacity_c_jpnkor(t,n)$(map_clt_n('c_jpnkor',n) and (not tfix(t)) and year(t) gt 2005)..
20355                   sum(jel_firm, K_EN(jel_firm,t,n))
20356                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
20357                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
20358                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
20359                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
20360                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
20361                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
20362                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
20363                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
20364                                       ) / yearly_hours
20365  ;
20367   
20368  * Flexibility constraint
20369  eqflex_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20370          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
20371                             ( Q_EN('el',t,n) -
20372                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
20373                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
20374                             ) * flex_coeff('load')
20375  ;
20376   
20377  * Grid
20378   
20379  ** Grid depreciation and investments
20380  eqk_en_grid_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
20381                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
20382                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
20383   
20384  ** Grid adjustment to power capacity
20385  eqk_en_grid_to_k_en_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20386                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
20387                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
20388                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
20389                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
20390                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
20391                                     ) / grid_cost +
20392                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
20393                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
20394                                      K_EN('elcsp',t,n);
20395  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
20396   
20397  * Capacity growth constraint
20398  eqcap_growth_c_jpnkor(jinv,t,tp1,tp2,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
20399                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
20400                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
20401   
20402  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
20405  *-------------------------------------------------------------------------------
20406  * Nuclear power plants
20407  *-------------------------------------------------------------------------------
20408   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
20411  *-------------------------------------------------------------------------------
20412  * GHG module
20413  * - CH4 FFI + CH4 waste + CH4 open fires
20414  * - N2O FFI + N2O waste + N2O open fires
20415  *-------------------------------------------------------------------------------
20416   
20418   
20419  * CH4, N2O waste emissions
20420  eqq_emi_waste_c_jpnkor(waste,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
20421                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
20422   
20423  * n2o FFI
20424  eqq_emi_n2o_ffi_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
20425    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
20426                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
20427                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
20428                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
20429                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
20430                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
20431                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
20432                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
20433                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
20434                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
20435                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
20436                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
20437                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
20438                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
20439                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
20440                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
20441                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
20442                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
20443                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
20444                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
20445                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
20446                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
20447                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
20448                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
20449                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
20450                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
20451                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
20452                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
20453                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
20454                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
20455                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
20456   
20457  * ch4 FFI
20458  eqq_emi_ch4_ffi_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
20459    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
20462  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
20463  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
20464                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
20465                             smax(tt$(year(tt) eq 2015),
20466                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
20469  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
20470  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
20471                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
20472   
20473  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
20476  *-------------------------------------------------------------------------------
20477  * F-gases
20478  * - LLF
20479  * - SLF
20480  *-------------------------------------------------------------------------------
20481   
20483   
20484  * F-gases emissions
20485  eqq_emi_fgases_c_jpnkor(fgases,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
20486                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
20487   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
20490  *-------------------------------------------------------------------------------
20491  * Landuse [simplified version of the land-use model]
20492  *-------------------------------------------------------------------------------
20493   
20495   
20496  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
20497  eq_wbio_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20498      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
20499   
20501  * Cost of all woody biomass produced for advanced biofuels and woody biomass
20502  eqcost_pes_wbio_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20503      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
20505   
20506  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
20509  *-------------------------------------------------------------------------------
20510  * Bioenergy power plant
20511  *-------------------------------------------------------------------------------
20512   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
20515  *-------------------------------------------------------------------------------
20516  * Traditional Biofuels
20517  * - Requires the precedence of mod_landuse
20518  *-------------------------------------------------------------------------------
20519   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
20522  *-------------------------------------------------------------------------------
20523  * Advanced biofuel
20524  * - Require the precedence of mod_landuse
20525  *-------------------------------------------------------------------------------
20526   
20528   
20529  * Limitations for nel backstops
20530  eqq_en_lim_advbiofuel_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
20531               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
20532               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
20533   
20534  * Peculiarity of advbiofuel
20535  eqmcost_fuel_advbiofuel_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20536                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
20537   
20538  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
20541  *-------------------------------------------------------------------------------
20542  * Carbon Capture and Sequestration
20543  *-------------------------------------------------------------------------------
20544   
20546   
20547  eqq_emi_ccs_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20548                  Q_EMI('ccs_plant',t,n) =e=
20549                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
20550                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
20551  ;
20552   
20553  eqcost_emi_sinks_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20554                  COST_EMI('ccs_plant',t,n) =e=
20555                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
20556                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
20557  ;
20558   
20559  eq_stor_ccs_cum_c_jpnkor(ccs_stor,tp1,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
20560                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
20561  ;
20562   
20563  eq_emi_stor_ccs_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20564                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
20565  ;
20566   
20567  eq_emi_leak_ccs_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20568                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
20569   
20570  *-------------------------------------------------------------------------------
20572   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
20574  *-------------------------------------------------------------------------------
20575  * Coal for non-electric sectors
20576  * - Coke Plants
20577  * - Industrial and Commercial combined-heat-and-power (CHP)
20578  * - Others
20579  *-------------------------------------------------------------------------------
20580   
20582   
20583  eqcost_en_nelcoal_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20584           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
20585                                          nelcoal_max_abat(t,n) *
20586                                          (nelcoal_cmac(n,'a') *
20587                                            Q_EN('nelcoalabat',t,n) /
20588                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
20589                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
20590                                              (exp(nelcoal_cmac(n,'c') *
20591                                                (Q_EN('nelcoalabat',t,n)/
20592                                                  (nelcoal_max_abat(t,n) *
20593                                                      nelcoal_baseline(t,n))
20594                                                  ) - 1 )
20595                                              )
20596                                          );
20597   
20598  eqq_ncoalabat_monotone_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
20599          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
20600   
20601  * ensure Q_EN is lower than K_EN for CCS as not in jel
20602  eqq_en_nelcoalccs_max_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20603          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
20604   
20605  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
20608  *-------------------------------------------------------------------------------
20609  * Wind energy module
20610  * - onshore and offshore
20611  *-------------------------------------------------------------------------------
20612   
20614   
20615  * Capacity limits in the wind onshore electrical sector
20616  eqq_en_mu_windon_c_jpnkor(wind_dist,wind_class,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
20617      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
20618   
20619  * Capacity limits in the wind offshore electrical sector
20620  eqq_en_mu_windoff_c_jpnkor(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
20621      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
20622   
20623  * Wind onshore electrical generation plants (new)
20624  eqk_en_windon_c_jpnkor(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
20625      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
20626                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
20627   
20628  * Wind offshore electrical generation plants (new)
20629  eqk_en_windoff_c_jpnkor(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
20630      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
20631                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
20632   
20633  * Total onshore wind energy production
20634  eqq_en_windon_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20635                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
20636   
20637  * Total offshore wind energy production
20638  eqq_en_windoff_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20639                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
20640   
20641  * Total onshore wind capacity
20642  eqk_en_windon_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20643                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
20644   
20645  * Total offshore wind capacity
20646  eqk_en_windoff_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20647                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
20648   
20649  * Total onshore wind investment
20650  eqi_en_windon_sum_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
20651                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
20652   
20653  * Total offshore wind investment
20654  eqi_en_windoff_sum_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
20655                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
20656   
20657  *-------------------------------------------------------------------------------
20659   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
20661  *-------------------------------------------------------------------------------
20662  * Solar Powerplants (PV and CSP) to the electrical system
20663  *-------------------------------------------------------------------------------
20664   
20665  *-------------------------------------------------------------------------------
20667   
20668   
20669  * Capacity limits in the pv electrical sector
20670  eqq_en_mu_pv_c_jpnkor(solar_dist,solar_class,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
20671                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
20672   
20673  * Capacity limits in the csp electrical sector
20674  eqq_en_mu_csp_c_jpnkor(solar_dist,solar_class,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
20675                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
20676   
20677  * PV electrical generation plants (new)
20678  eqk_en_pv_c_jpnkor(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
20679                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
20680                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
20681   
20682  * CSP electrical generation plants (new)
20683  eqk_en_csp_c_jpnkor(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
20684                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
20685                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
20686   
20687  * Total PV energy production
20688  eqq_en_pv_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20689                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
20690   
20691  * Total CSP energy production
20692  eqq_en_csp_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20693                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
20694   
20695  * Total PV capacity
20696  eqk_en_pv_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20697                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
20698   
20699  * Total CSP capacity
20700  eqk_en_csp_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20701                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
20702   
20703  * Total PV investment
20704  eqi_en_pv_sum_c_jpnkor(t,tp1,n)$(map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
20705                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
20706   
20707  * Total CSP investment
20708  eqi_en_csp_sum_c_jpnkor(t,tp1,n)$(map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
20709                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
20710   
20711  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
20712  eqk_en_solar_comp_c_jpnkor(t,n,solar_dist)$(map_clt_n('c_jpnkor',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
20713                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
20714                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
20715   
20716   
20717   
20718  *-------------------------------------------------------------------------------
20720   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
20722  *-------------------------------------------------------------------------------
20723  * Technology development scenarios
20724  *-------------------------------------------------------------------------------
20725   
20727   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
20729  *-------------------------------------------------------------------------------
20730  * Oil Extraction
20731  * Options:
20732  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
20733  *-------------------------------------------------------------------------------
20734   
20736   
20737  * Capacity
20738  eqoilcap_c_jpnkor(t,tp1,n,oilg)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
20739      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
20740   
20741  * Production
20742  eqoilprod_c_jpnkor(t,tp1,n,oilg)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
20743      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
20744   
20745  eqq_out_oil_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20746      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
20747   
20748  * Cumulative production
20749  eqcum_oil_c_jpnkor(t,tp1,n,oilg)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
20750      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
20751   
20752  * Cost
20753  eqcost_oil_c_jpnkor(t,tp1,n,oilg)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
20754      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
20755                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
20756                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
20757   
20758  * Investments
20759  eqi_oil_c_jpnkor(t,tp1,n,oilg)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
20760      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
20761   
20762  * Total investment
20763  eqi_out_oil_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
20764      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
20765   
20766  * Emissions
20767  eqq_emi_out_oil_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20768      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
20769   
20770  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
20773  *-------------------------------------------------------------------------------
20774  * Uranium Resources
20775  *-------------------------------------------------------------------------------
20776   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
20779  *-------------------------------------------------------------------------------
20780  * Gas Resources
20781  *-------------------------------------------------------------------------------
20782   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
20785  *-------------------------------------------------------------------------------
20786  * Coal Resources
20787  *-------------------------------------------------------------------------------
20788   
20790   
20791   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
20793  *-------------------------------------------------------------------------------
20794  * Climate
20795  *
20796  * Represents the climate
20797  * - based on the DICE model equations
20798  * - Radiative forcing for non CO2 ghgs
20799  * - parameters calibrated to reproduce MAGICC6.4 default response
20800  *
20801  *  Options:
20802  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
20803  * - $setglobal cooperate_on_climate {'YES','NO'}
20804  * - 'YES'(default): Countries within a coalition act in cooperation
20805  *   'NO': Countries within a coalition act individually
20806  *
20807  *-------------------------------------------------------------------------------
20808   
20810   
20812   
20813  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
20816  *-------------------------------------------------------------------------------
20817  * Long-run Damages from Climate Change
20818  * - Economic impacts
20819  * - Adaptation
20820  *-------------------------------------------------------------------------------
20821   
20823   
20825   
20826  *-------------------------------------------------------------------------------
20828   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
20830  *-------------------------------------------------------------------------------
20831  * Light-duty Vehicles for Personal Transport
20832  *-------------------------------------------------------------------------------
20833   
20835   
20836  *** newcode
20837  eqq_inv_red_ban_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20838      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
20839   
20840  ***
20841  *- Number of light duty vehicles
20842  eqnb_veh_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20843      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
20844   
20845  *- Yearly energy demand of vehicles
20846  eqq_en_veh_c_jpnkor(jveh,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20847      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
20848   
20849  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
20850  eqq_el_edv_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20851      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
20852   
20853  *- Investment cost for hybrid vehicles
20854  eqmcost_inv_hybrid_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
20855                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
20856   
20857  *- Investment cost for plug-in hybrid vehicles
20858  eqmcost_inv_plghybrid_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
20859                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
20860   
20861  *- Investment cost for electric drive vehicles
20862  eqmcost_inv_edv_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
20863                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
20864   
20865  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
20868  *-------------------------------------------------------------------------------
20869  * Road Freight Transport
20870  *-------------------------------------------------------------------------------
20872   
20873  *-  Number of freight vehicles
20874  eqnb_frtveh_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20875                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
20876   
20877  *-  Yearly fuel consumption of freight vehicles
20878  eqq_en_frtveh_c_jpnkor(jfrt,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20879                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
20880   
20881  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
20882  eqq_el_frtedv_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20883                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
20884   
20885  *-  Investment cost for hbd_stfr vehicle
20886  eqmcost_inv_hbd_stfr_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
20887                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
20888   
20889  *-  Investment cost for plug-in hbd_stfr vehicle
20890  eqmcost_inv_plghbd_stfr_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
20891                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
20892   
20893  *-  Investment cost for electric drive vehicle
20894  eqmcost_inv_edv_stfr_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
20895                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
20896   
20897  *-------------------------------------------------------------------------------
20899   
20900   
20901   
20902   
20903   
20904   
20905  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
20907  *-------------------------------------------------------------------------------
20908  * Traditional Biomass
20909  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
20910  *  - require post_process to be launch before
20911  *-------------------------------------------------------------------------------
20912   
20914   
20915  * Optional modules
20916   
20917  * Policy modules
20918   
20919  * Calibration
20922   
20923   
20924  model witch_c_jpnkor /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
20926  *-------------------------------------------------------------------------------
20927  * Call modules by order
20928  *-------------------------------------------------------------------------------
20932   
20933  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
20935  *-------------------------------------------------------------------------------
20936  * Algorithm
20937  *-------------------------------------------------------------------------------
20938   
20940   
20941  eqobj_c_jpnkor
20942   
20943  *-------------------------------------------------------------------------------
20945   
20946  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
20948  *-------------------------------------------------------------------------------
20949  * Time
20950  * - Temporal structure
20951  * - Fixed time periods
20952  * - States of the world
20953  *-------------------------------------------------------------------------------
20954   
20956   
20957  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
20959  *-------------------------------------------------------------------------------
20960  * Geographic dimension and mapping with countries
20961  *-------------------------------------------------------------------------------
20962   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
20965  *-------------------------------------------------------------------------------
20966  * Non-Cooperative Setup
20967  *
20968  * Each region is defined as an individual coalition.
20969  *
20970  *-------------------------------------------------------------------------------
20971   
20973   
20974  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
20976  *-------------------------------------------------------------------------------
20977  * Welfare
20978  *-------------------------------------------------------------------------------
20979   
20981   
20982  equtility_c_jpnkor
20983   
20984  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
20987  *-------------------------------------------------------------------------------
20988  * Economy
20989  * - Production and Consumption definition
20990  * - Top-level of the production function
20991  * Options:
20992  * --original_ssp=1 : original SSP population and GDP data
20993  *-------------------------------------------------------------------------------
20994   
20996   
20997  eqk_c_jpnkor
20998  eqq_cc_c_jpnkor
20999  eqq_fen_c_jpnkor
21000  eqq_y_c_jpnkor
21001   
21002  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
21005  *-------------------------------------------------------------------------------
21006  * Energy sector
21007  *-------------------------------------------------------------------------------
21008   
21010   
21011  eq_mkt_clearing_oil_c_jpnkor
21012  eqcost_pes_c_jpnkor
21013  eqcost_ses_c_jpnkor
21014  eqk_en_c_jpnkor
21015  eqq_ces_el_c_jpnkor
21016  eqq_ces_nelgas_c_jpnkor
21017  eqq_el2_c_jpnkor
21018  eqq_el_c_jpnkor
21019  eqq_elff_c_jpnkor
21020  eqq_en_c_jpnkor
21021  eqq_en_in_c_jpnkor
21022  eqq_en_mu_c_jpnkor
21023  eqq_en_tree_c_jpnkor
21024  eqq_nel_c_jpnkor
21025  eqq_nelog_c_jpnkor
21026  eqq_fuel_c_jpnkor
21027  eqq_elffren_c_jpnkor
21028   
21029  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
21032  *-------------------------------------------------------------------------------
21033  * Carbon Emissions
21034  * - Total CO2 emissions and CO2 Fossil fuel and Industry
21035  * - CO2 emission costs
21036  * - GHG permit market
21037  *-------------------------------------------------------------------------------
21038   
21040   
21041  eqq_emi_lim_c_jpnkor
21042  ***newcode
21043  eqq_emi_lim_USAc_jpnkor
21044  ***
21045  eqq_emi_tree_c_jpnkor
21046  eqq_emi_co2ffi_c_jpnkor
21047   
21048  eqcost_emi_co2_c_jpnkor
21049   
21050  eq_mkt_clearing_nip_c_jpnkor
21051   
21052  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
21055  *-------------------------------------------------------------------------------
21056  * Research & Development
21057  * Options:
21058  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
21059  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
21060  *-------------------------------------------------------------------------------
21061   
21063   
21064  eqk_rd_c_jpnkor
21065  eqspill_coop_c_jpnkor
21066  eqspill_lead_c_jpnkor
21067  eqspill_foll_c_jpnkor
21068  eqmcost_inv_back_c_jpnkor
21069  eqmcost_inv_back_lbd_c_jpnkor
21070   
21071  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
21074  *-------------------------------------------------------------------------------
21075  * Default Climate Policy Implementation
21076  *
21077  * Options:
21078  *    --policy={bau (default),ctax}
21079  *        Implement a climate policy setting
21080  *  [ --scen= ]
21081  *        Policy variant.
21082  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
21083  *          * XXX for a fixed percentage/yr (e.g. 5) growth
21084  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
21085  *  [ --ctax_year=2020 ]
21086  *        Starting year of the carbon tax
21087  *  [ --ctax_initial=30 ]
21088  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
21089  *
21090  *-------------------------------------------------------------------------------
21092   
21093  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
21095  *-------------------------------------------------------------------------------
21096  * Energy efficiency
21097  *-------------------------------------------------------------------------------
21098   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
21101  *-------------------------------------------------------------------------------
21102  * Hydro Power
21103  *-------------------------------------------------------------------------------
21104   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
21107  *-------------------------------------------------------------------------------
21108  * System Integration:
21109  * - Capacity constraint
21110  * - Flexibility constraint
21111  * - Grid Investment
21112  * - Capacity growth constraint
21113  *-------------------------------------------------------------------------------
21114   
21116   
21117  eqq_elintren_c_jpnkor
21118  eqflex_c_jpnkor
21119  eqk_en_grid_c_jpnkor
21120  eqk_en_grid_to_k_en_c_jpnkor
21121  eqfirm_capacity_c_jpnkor
21122  eqcap_growth_c_jpnkor
21123   
21124  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
21127  *-------------------------------------------------------------------------------
21128  * Nuclear power plants
21129  *-------------------------------------------------------------------------------
21130   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
21133  *-------------------------------------------------------------------------------
21134  * GHG module
21135  * - CH4 FFI + CH4 waste + CH4 open fires
21136  * - N2O FFI + N2O waste + N2O open fires
21137  *-------------------------------------------------------------------------------
21138   
21140   
21141  eqq_emi_waste_c_jpnkor
21142  eqq_emi_n2o_ffi_c_jpnkor
21143  eqq_emi_ch4_ffi_c_jpnkor
21144   
21145  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
21148  *-------------------------------------------------------------------------------
21149  * F-gases
21150  * - LLF
21151  * - SLF
21152  *-------------------------------------------------------------------------------
21153   
21155   
21156  eqq_emi_fgases_c_jpnkor
21157   
21158  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
21161  *-------------------------------------------------------------------------------
21162  * Landuse [simplified version of the land-use model]
21163  *-------------------------------------------------------------------------------
21164   
21166   
21167  eq_wbio_c_jpnkor
21168  eqcost_pes_wbio_c_jpnkor
21169   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
21172  *-------------------------------------------------------------------------------
21173  * Bioenergy power plant
21174  *-------------------------------------------------------------------------------
21175   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
21178  *-------------------------------------------------------------------------------
21179  * Traditional Biofuels
21180  * - Requires the precedence of mod_landuse
21181  *-------------------------------------------------------------------------------
21182   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
21185  *-------------------------------------------------------------------------------
21186  * Advanced biofuel
21187  * - Require the precedence of mod_landuse
21188  *-------------------------------------------------------------------------------
21189   
21191   
21192  eqq_en_lim_advbiofuel_c_jpnkor
21193  eqmcost_fuel_advbiofuel_c_jpnkor
21194   
21195  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
21198  *-------------------------------------------------------------------------------
21199  * Carbon Capture and Sequestration
21200  *-------------------------------------------------------------------------------
21201   
21203   
21204  eqq_emi_ccs_c_jpnkor
21205  eqcost_emi_sinks_c_jpnkor
21206  eq_stor_ccs_cum_c_jpnkor
21207  eq_emi_stor_ccs_c_jpnkor
21208  eq_emi_leak_ccs_c_jpnkor
21209   
21210  *-------------------------------------------------------------------------------
21212   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
21214  *-------------------------------------------------------------------------------
21215  * Coal for non-electric sectors
21216  * - Coke Plants
21217  * - Industrial and Commercial combined-heat-and-power (CHP)
21218  * - Others
21219  *-------------------------------------------------------------------------------
21220   
21222   
21223  eqcost_en_nelcoal_c_jpnkor
21224  eqq_ncoalabat_monotone_c_jpnkor
21225  eqq_en_nelcoalccs_max_c_jpnkor
21226   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
21229  *-------------------------------------------------------------------------------
21230  * Wind energy module
21231  * - onshore and offshore
21232  *-------------------------------------------------------------------------------
21233   
21235   
21236  eqq_en_mu_windon_c_jpnkor
21237  eqq_en_mu_windoff_c_jpnkor
21238  eqk_en_windon_c_jpnkor
21239  eqk_en_windoff_c_jpnkor
21240  eqq_en_windon_sum_c_jpnkor
21241  eqq_en_windoff_sum_c_jpnkor
21242  eqk_en_windon_sum_c_jpnkor
21243  eqk_en_windoff_sum_c_jpnkor
21244  eqi_en_windon_sum_c_jpnkor
21245  eqi_en_windoff_sum_c_jpnkor
21246   
21248   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
21250  *-------------------------------------------------------------------------------
21251  * Solar Powerplants (PV and CSP) to the electrical system
21252  *-------------------------------------------------------------------------------
21253   
21254  *-------------------------------------------------------------------------------
21256   
21257  eqq_en_mu_pv_c_jpnkor
21258  eqq_en_mu_csp_c_jpnkor
21259  eqk_en_pv_c_jpnkor
21260  eqk_en_csp_c_jpnkor
21261  eqq_en_pv_sum_c_jpnkor
21262  eqq_en_csp_sum_c_jpnkor
21263  eqk_en_pv_sum_c_jpnkor
21264  eqk_en_csp_sum_c_jpnkor
21265  eqi_en_pv_sum_c_jpnkor
21266  eqi_en_csp_sum_c_jpnkor
21267  eqk_en_solar_comp_c_jpnkor
21268   
21269  *-------------------------------------------------------------------------------
21271   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
21273  *-------------------------------------------------------------------------------
21274  * Technology development scenarios
21275  *-------------------------------------------------------------------------------
21276   
21278   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
21280  *-------------------------------------------------------------------------------
21281  * Oil Extraction
21282  * Options:
21283  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
21284  *-------------------------------------------------------------------------------
21285   
21287   
21288  eqoilcap_c_jpnkor
21289  eqoilprod_c_jpnkor
21290  eqq_out_oil_c_jpnkor
21291  eqcum_oil_c_jpnkor
21292  eqcost_oil_c_jpnkor
21293  eqi_oil_c_jpnkor
21294  eqi_out_oil_c_jpnkor
21295  eqq_emi_out_oil_c_jpnkor
21296   
21297  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
21300  *-------------------------------------------------------------------------------
21301  * Uranium Resources
21302  *-------------------------------------------------------------------------------
21303   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
21306  *-------------------------------------------------------------------------------
21307  * Gas Resources
21308  *-------------------------------------------------------------------------------
21309   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
21312  *-------------------------------------------------------------------------------
21313  * Coal Resources
21314  *-------------------------------------------------------------------------------
21315   
21317   
21318   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
21320  *-------------------------------------------------------------------------------
21321  * Climate
21322  *
21323  * Represents the climate
21324  * - based on the DICE model equations
21325  * - Radiative forcing for non CO2 ghgs
21326  * - parameters calibrated to reproduce MAGICC6.4 default response
21327  *
21328  *  Options:
21329  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
21330  * - $setglobal cooperate_on_climate {'YES','NO'}
21331  * - 'YES'(default): Countries within a coalition act in cooperation
21332  *   'NO': Countries within a coalition act individually
21333  *
21334  *-------------------------------------------------------------------------------
21335   
21337   
21339   
21340  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
21343  *-------------------------------------------------------------------------------
21344  * Long-run Damages from Climate Change
21345  * - Economic impacts
21346  * - Adaptation
21347  *-------------------------------------------------------------------------------
21348   
21350   
21352   
21353  *-------------------------------------------------------------------------------
21355   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
21357  *-------------------------------------------------------------------------------
21358  * Light-duty Vehicles for Personal Transport
21359  *-------------------------------------------------------------------------------
21360   
21362   
21363  eqnb_veh_c_jpnkor
21364  eqq_en_veh_c_jpnkor
21365  eqq_el_edv_c_jpnkor
21366  eqmcost_inv_hybrid_c_jpnkor
21367  eqmcost_inv_plghybrid_c_jpnkor
21368  eqmcost_inv_edv_c_jpnkor
21369  *** newcode
21370  eqq_inv_red_ban_c_jpnkor
21371  ***
21372  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
21375  *-------------------------------------------------------------------------------
21376  * Road Freight Transport
21377  *-------------------------------------------------------------------------------
21379   
21380  eqnb_frtveh_c_jpnkor
21381  eqq_en_frtveh_c_jpnkor
21382  eqq_el_frtedv_c_jpnkor
21383  eqmcost_inv_hbd_stfr_c_jpnkor
21384  eqmcost_inv_plghbd_stfr_c_jpnkor
21385  eqmcost_inv_edv_stfr_c_jpnkor
21386   
21387  *-------------------------------------------------------------------------------
21389   
21390   
21391   
21392   
21393   
21394   
21395  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
21397  *-------------------------------------------------------------------------------
21398  * Traditional Biomass
21399  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
21400  *  - require post_process to be launch before
21401  *-------------------------------------------------------------------------------
21402   
21404   
21405  * Optional modules
21406   
21407  * Policy modules
21408   
21409  * Calibration
21412  /;
21413   
21414  witch_c_jpnkor.optfile=1;   # the option file solvername.opt is to be used
21415  witch_c_jpnkor.holdfixed=1; # treat fixed values as constant
21416  witch_c_jpnkor.scaleopt=1;  # Use scaling for better gradients estimation
21417  witch_c_jpnkor.solvelink=3; # Use parallel or sequential solving
21418   
21423   
21424  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
21426  *-------------------------------------------------------------------------------
21427  * Call modules by order
21428  *-------------------------------------------------------------------------------
21432   
21433  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
21435  *-------------------------------------------------------------------------------
21436  * Algorithm
21437  *-------------------------------------------------------------------------------
21438   
21440   
21441  eqobj_c_laca
21442   
21443  *-------------------------------------------------------------------------------
21445   
21446  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
21448  *-------------------------------------------------------------------------------
21449  * Time
21450  * - Temporal structure
21451  * - Fixed time periods
21452  * - States of the world
21453  *-------------------------------------------------------------------------------
21454   
21456   
21457  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
21459  *-------------------------------------------------------------------------------
21460  * Geographic dimension and mapping with countries
21461  *-------------------------------------------------------------------------------
21462   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
21465  *-------------------------------------------------------------------------------
21466  * Non-Cooperative Setup
21467  *
21468  * Each region is defined as an individual coalition.
21469  *
21470  *-------------------------------------------------------------------------------
21471   
21473   
21474  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
21476  *-------------------------------------------------------------------------------
21477  * Welfare
21478  *-------------------------------------------------------------------------------
21479   
21481   
21482  equtility_c_laca
21483   
21484  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
21487  *-------------------------------------------------------------------------------
21488  * Economy
21489  * - Production and Consumption definition
21490  * - Top-level of the production function
21491  * Options:
21492  * --original_ssp=1 : original SSP population and GDP data
21493  *-------------------------------------------------------------------------------
21494   
21496   
21497  eqk_c_laca
21498  eqq_cc_c_laca
21499  eqq_fen_c_laca
21500  eqq_y_c_laca
21501   
21502  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
21505  *-------------------------------------------------------------------------------
21506  * Energy sector
21507  *-------------------------------------------------------------------------------
21508   
21510   
21511  eq_mkt_clearing_oil_c_laca
21512  eqcost_pes_c_laca
21513  eqcost_ses_c_laca
21514  eqk_en_c_laca
21515  eqq_ces_el_c_laca
21516  eqq_ces_nelgas_c_laca
21517  eqq_el2_c_laca
21518  eqq_el_c_laca
21519  eqq_elff_c_laca
21520  eqq_en_c_laca
21521  eqq_en_in_c_laca
21522  eqq_en_mu_c_laca
21523  eqq_en_tree_c_laca
21524  eqq_nel_c_laca
21525  eqq_nelog_c_laca
21526  eqq_fuel_c_laca
21527  eqq_elffren_c_laca
21528   
21529  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
21532  *-------------------------------------------------------------------------------
21533  * Carbon Emissions
21534  * - Total CO2 emissions and CO2 Fossil fuel and Industry
21535  * - CO2 emission costs
21536  * - GHG permit market
21537  *-------------------------------------------------------------------------------
21538   
21540   
21541  eqq_emi_lim_c_laca
21542  ***newcode
21543  eqq_emi_lim_USAc_laca
21544  ***
21545  eqq_emi_tree_c_laca
21546  eqq_emi_co2ffi_c_laca
21547   
21548  eqcost_emi_co2_c_laca
21549   
21550  eq_mkt_clearing_nip_c_laca
21551   
21552  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
21555  *-------------------------------------------------------------------------------
21556  * Research & Development
21557  * Options:
21558  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
21559  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
21560  *-------------------------------------------------------------------------------
21561   
21563   
21564  eqk_rd_c_laca
21565  eqspill_coop_c_laca
21566  eqspill_lead_c_laca
21567  eqspill_foll_c_laca
21568  eqmcost_inv_back_c_laca
21569  eqmcost_inv_back_lbd_c_laca
21570   
21571  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
21574  *-------------------------------------------------------------------------------
21575  * Default Climate Policy Implementation
21576  *
21577  * Options:
21578  *    --policy={bau (default),ctax}
21579  *        Implement a climate policy setting
21580  *  [ --scen= ]
21581  *        Policy variant.
21582  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
21583  *          * XXX for a fixed percentage/yr (e.g. 5) growth
21584  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
21585  *  [ --ctax_year=2020 ]
21586  *        Starting year of the carbon tax
21587  *  [ --ctax_initial=30 ]
21588  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
21589  *
21590  *-------------------------------------------------------------------------------
21592   
21593  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
21595  *-------------------------------------------------------------------------------
21596  * Energy efficiency
21597  *-------------------------------------------------------------------------------
21598   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
21601  *-------------------------------------------------------------------------------
21602  * Hydro Power
21603  *-------------------------------------------------------------------------------
21604   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
21607  *-------------------------------------------------------------------------------
21608  * System Integration:
21609  * - Capacity constraint
21610  * - Flexibility constraint
21611  * - Grid Investment
21612  * - Capacity growth constraint
21613  *-------------------------------------------------------------------------------
21614   
21616   
21617  eqq_elintren_c_laca
21618  eqflex_c_laca
21619  eqk_en_grid_c_laca
21620  eqk_en_grid_to_k_en_c_laca
21621  eqfirm_capacity_c_laca
21622  eqcap_growth_c_laca
21623   
21624  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
21627  *-------------------------------------------------------------------------------
21628  * Nuclear power plants
21629  *-------------------------------------------------------------------------------
21630   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
21633  *-------------------------------------------------------------------------------
21634  * GHG module
21635  * - CH4 FFI + CH4 waste + CH4 open fires
21636  * - N2O FFI + N2O waste + N2O open fires
21637  *-------------------------------------------------------------------------------
21638   
21640   
21641  eqq_emi_waste_c_laca
21642  eqq_emi_n2o_ffi_c_laca
21643  eqq_emi_ch4_ffi_c_laca
21644   
21645  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
21648  *-------------------------------------------------------------------------------
21649  * F-gases
21650  * - LLF
21651  * - SLF
21652  *-------------------------------------------------------------------------------
21653   
21655   
21656  eqq_emi_fgases_c_laca
21657   
21658  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
21661  *-------------------------------------------------------------------------------
21662  * Landuse [simplified version of the land-use model]
21663  *-------------------------------------------------------------------------------
21664   
21666   
21667  eq_wbio_c_laca
21668  eqcost_pes_wbio_c_laca
21669   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
21672  *-------------------------------------------------------------------------------
21673  * Bioenergy power plant
21674  *-------------------------------------------------------------------------------
21675   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
21678  *-------------------------------------------------------------------------------
21679  * Traditional Biofuels
21680  * - Requires the precedence of mod_landuse
21681  *-------------------------------------------------------------------------------
21682   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
21685  *-------------------------------------------------------------------------------
21686  * Advanced biofuel
21687  * - Require the precedence of mod_landuse
21688  *-------------------------------------------------------------------------------
21689   
21691   
21692  eqq_en_lim_advbiofuel_c_laca
21693  eqmcost_fuel_advbiofuel_c_laca
21694   
21695  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
21698  *-------------------------------------------------------------------------------
21699  * Carbon Capture and Sequestration
21700  *-------------------------------------------------------------------------------
21701   
21703   
21704  eqq_emi_ccs_c_laca
21705  eqcost_emi_sinks_c_laca
21706  eq_stor_ccs_cum_c_laca
21707  eq_emi_stor_ccs_c_laca
21708  eq_emi_leak_ccs_c_laca
21709   
21710  *-------------------------------------------------------------------------------
21712   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
21714  *-------------------------------------------------------------------------------
21715  * Coal for non-electric sectors
21716  * - Coke Plants
21717  * - Industrial and Commercial combined-heat-and-power (CHP)
21718  * - Others
21719  *-------------------------------------------------------------------------------
21720   
21722   
21723  eqcost_en_nelcoal_c_laca
21724  eqq_ncoalabat_monotone_c_laca
21725  eqq_en_nelcoalccs_max_c_laca
21726   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
21729  *-------------------------------------------------------------------------------
21730  * Wind energy module
21731  * - onshore and offshore
21732  *-------------------------------------------------------------------------------
21733   
21735   
21736  eqq_en_mu_windon_c_laca
21737  eqq_en_mu_windoff_c_laca
21738  eqk_en_windon_c_laca
21739  eqk_en_windoff_c_laca
21740  eqq_en_windon_sum_c_laca
21741  eqq_en_windoff_sum_c_laca
21742  eqk_en_windon_sum_c_laca
21743  eqk_en_windoff_sum_c_laca
21744  eqi_en_windon_sum_c_laca
21745  eqi_en_windoff_sum_c_laca
21746   
21748   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
21750  *-------------------------------------------------------------------------------
21751  * Solar Powerplants (PV and CSP) to the electrical system
21752  *-------------------------------------------------------------------------------
21753   
21754  *-------------------------------------------------------------------------------
21756   
21757  eqq_en_mu_pv_c_laca
21758  eqq_en_mu_csp_c_laca
21759  eqk_en_pv_c_laca
21760  eqk_en_csp_c_laca
21761  eqq_en_pv_sum_c_laca
21762  eqq_en_csp_sum_c_laca
21763  eqk_en_pv_sum_c_laca
21764  eqk_en_csp_sum_c_laca
21765  eqi_en_pv_sum_c_laca
21766  eqi_en_csp_sum_c_laca
21767  eqk_en_solar_comp_c_laca
21768   
21769  *-------------------------------------------------------------------------------
21771   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
21773  *-------------------------------------------------------------------------------
21774  * Technology development scenarios
21775  *-------------------------------------------------------------------------------
21776   
21778   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
21780  *-------------------------------------------------------------------------------
21781  * Oil Extraction
21782  * Options:
21783  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
21784  *-------------------------------------------------------------------------------
21785   
21787   
21788  eqoilcap_c_laca
21789  eqoilprod_c_laca
21790  eqq_out_oil_c_laca
21791  eqcum_oil_c_laca
21792  eqcost_oil_c_laca
21793  eqi_oil_c_laca
21794  eqi_out_oil_c_laca
21795  eqq_emi_out_oil_c_laca
21796   
21797  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
21800  *-------------------------------------------------------------------------------
21801  * Uranium Resources
21802  *-------------------------------------------------------------------------------
21803   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
21806  *-------------------------------------------------------------------------------
21807  * Gas Resources
21808  *-------------------------------------------------------------------------------
21809   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
21812  *-------------------------------------------------------------------------------
21813  * Coal Resources
21814  *-------------------------------------------------------------------------------
21815   
21817   
21818   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
21820  *-------------------------------------------------------------------------------
21821  * Climate
21822  *
21823  * Represents the climate
21824  * - based on the DICE model equations
21825  * - Radiative forcing for non CO2 ghgs
21826  * - parameters calibrated to reproduce MAGICC6.4 default response
21827  *
21828  *  Options:
21829  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
21830  * - $setglobal cooperate_on_climate {'YES','NO'}
21831  * - 'YES'(default): Countries within a coalition act in cooperation
21832  *   'NO': Countries within a coalition act individually
21833  *
21834  *-------------------------------------------------------------------------------
21835   
21837   
21839   
21840  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
21843  *-------------------------------------------------------------------------------
21844  * Long-run Damages from Climate Change
21845  * - Economic impacts
21846  * - Adaptation
21847  *-------------------------------------------------------------------------------
21848   
21850   
21852   
21853  *-------------------------------------------------------------------------------
21855   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
21857  *-------------------------------------------------------------------------------
21858  * Light-duty Vehicles for Personal Transport
21859  *-------------------------------------------------------------------------------
21860   
21862   
21863  eqnb_veh_c_laca
21864  eqq_en_veh_c_laca
21865  eqq_el_edv_c_laca
21866  eqmcost_inv_hybrid_c_laca
21867  eqmcost_inv_plghybrid_c_laca
21868  eqmcost_inv_edv_c_laca
21869  *** newcode
21870  eqq_inv_red_ban_c_laca
21871  ***
21872  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
21875  *-------------------------------------------------------------------------------
21876  * Road Freight Transport
21877  *-------------------------------------------------------------------------------
21879   
21880  eqnb_frtveh_c_laca
21881  eqq_en_frtveh_c_laca
21882  eqq_el_frtedv_c_laca
21883  eqmcost_inv_hbd_stfr_c_laca
21884  eqmcost_inv_plghbd_stfr_c_laca
21885  eqmcost_inv_edv_stfr_c_laca
21886   
21887  *-------------------------------------------------------------------------------
21889   
21890   
21891   
21892   
21893   
21894   
21895  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
21897  *-------------------------------------------------------------------------------
21898  * Traditional Biomass
21899  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
21900  *  - require post_process to be launch before
21901  *-------------------------------------------------------------------------------
21902   
21904   
21905  * Optional modules
21906   
21907  * Policy modules
21908   
21909  * Calibration
21912  ;
21913   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
21915  *-------------------------------------------------------------------------------
21916  * Call modules by order
21917  *-------------------------------------------------------------------------------
21921   
21922  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
21924  *-------------------------------------------------------------------------------
21925  * Algorithm
21926  *-------------------------------------------------------------------------------
21927   
21929   
21931  * Add the component of the (maximized) objective function as required by the ADMM algorithm
21932  eqobj_c_laca..
21933      OBJADMM =e= UTILITY -
21934          sum(t, rho_admm('oil',t) / 2 *
21935              sum(n$(map_clt_n('c_laca',n) and trading_t('oil',t,n)),
21936                  power(
21937                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
21938                      x_admm('oil',t,n) +
21939                      xavg_admm('oil',t) +
21940                      u_admm('oil', t)
21941                  ,2)
21942              )) -
21943          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
21944              sum(n$(map_clt_n('c_laca',n) and trading_t(c_mkt,t,n)),
21945                  power(
21946                      Q_EMI(c_mkt,t,n) -
21947                      x_admm(c_mkt,t,n) +
21948                      xavg_admm(c_mkt,t) +
21949                      u_admm(c_mkt,t)
21950                  ,2)
21951              ))
21952      ;
21954   
21955  *-------------------------------------------------------------------------------
21957   
21958  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
21960  *-------------------------------------------------------------------------------
21961  * Time
21962  * - Temporal structure
21963  * - Fixed time periods
21964  * - States of the world
21965  *-------------------------------------------------------------------------------
21966   
21968   
21969  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
21971  *-------------------------------------------------------------------------------
21972  * Geographic dimension and mapping with countries
21973  *-------------------------------------------------------------------------------
21974   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
21977  *-------------------------------------------------------------------------------
21978  * Non-Cooperative Setup
21979  *
21980  * Each region is defined as an individual coalition.
21981  *
21982  *-------------------------------------------------------------------------------
21983   
21985   
21986  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
21988  *-------------------------------------------------------------------------------
21989  * Welfare
21990  *-------------------------------------------------------------------------------
21991   
21993   
21994  * Objective function - Welfare to be maximized
21995  equtility_c_laca..
21996      UTILITY =e=
21997   
21998  * Negishi SWF
22000   
22001  * Welfare functions based on CEBGE
22004                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
22005                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
22006                      ((sum(n$map_clt_n('c_laca',n),
22007                        (l(t,n) / sum(nn$map_clt_n('c_laca',nn), l(t,nn))) *
22008                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
22009                       )**(1 / (1 - gamma))
22010                      )**(1 - eta) ) +
22011                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
22012                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
22013                      ((sum(n$map_clt_n('c_laca',n),
22014                        (l(t,n) / sum(nn$map_clt_n('c_laca',nn), l(t,nn))) *
22015                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
22016                       )**(1 / (1 - gamma))
22017                      )**(1 - eta) )
22018                  )**(1/(1 - eta)) * 1e6
22021   
22022   
22023  ;
22024   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
22027  *-------------------------------------------------------------------------------
22028  * Economy
22029  * - Production and Consumption definition
22030  * - Top-level of the production function
22031  * Options:
22032  * --original_ssp=1 : original SSP population and GDP data
22033  *-------------------------------------------------------------------------------
22034   
22036   
22037  * Production
22038  eqq_y_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22039   
22040      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
22041                     ## Climate feedback on economy
22043                     ## Net cost of Primary and Secondary Energy Sources
22044                     - sum(fuel, COST_FUEL(fuel,t,n))
22045                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
22046                     - sum(cce, COST_EMI(cce,t,n))
22047                     ## Carbon tax
22048                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
22049                     ## Additionnal costs on gross product
22050                     - sum(ccy, COST_Y(ccy,t,n))
22051  ;
22052   
22053  * Consumption
22054  eqq_cc_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
22055      Q('cc',t,n) =e= Q('y',t,n)
22056                      ## Investments in goods g (final good, adaptation)
22057                      -sum(g, I(g,t,n))
22058                      ## Investments in r&d
22059                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
22060                      ## Investments in energy technlogies
22061                      -sum(jinv, I_EN(jinv,t,n))
22062                       ## Investments in grid infrastructures
22063                      - I_EN_GRID(t,n)
22064                      ## Investments in extraction sector
22065                      -sum(extract(f), I_OUT(f,t,n))
22066                      ## O&M for energy technlogies
22067                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
22068                      ## O&M for extraction
22069                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
22070                      ## Energy technology penalty costs
22071                      -sum(jpenalty(j), COST_EN(j,t,n))
22072  ;
22073   
22074  * Capital accumulation
22075  eqk_c_laca(g,t,tp1,n)$(map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
22076      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
22077   
22078  * Energy services
22079  eqq_fen_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22080      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
22081   
22082  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
22085  *-------------------------------------------------------------------------------
22086  * Energy sector
22087  *-------------------------------------------------------------------------------
22088   
22090   
22091  *-------------------------------------------------------------------------------
22092  * Production - Energy sector
22093  *-------------------------------------------------------------------------------
22094   
22095  eqq_en_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22096      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
22097   
22098  *-------------------------------------------------------------------------------
22099  * Production - Electrical sector
22100  *-------------------------------------------------------------------------------
22101   
22102  eqq_el_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22103      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
22104   
22105  eqq_el2_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22106      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
22107   
22108  eqq_elffren_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22109      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
22110  eqq_elff_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22111      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
22112   
22113  eqq_ces_el_c_laca(ices_el,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
22114      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
22115  ;
22116   
22117  *-------------------------------------------------------------------------------
22118  * Production - Non-electrical sector
22119  *-------------------------------------------------------------------------------
22120   
22121  eqq_nel_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22122      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
22123   
22124  eqq_nelog_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22125      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
22126  ;
22127  eqq_ces_nelgas_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22128      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
22129   
22130  *-------------------------------------------------------------------------------
22131  * PES and fuels
22132  *-------------------------------------------------------------------------------
22133   
22134  eqq_fuel_c_laca(fuel,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
22135      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
22136   
22137  *-------------------------------------------------------------------------------
22138  * Cost
22139  *-------------------------------------------------------------------------------
22140   
22141  * Net cost of Primary Energy Supplies
22142  eqcost_pes_c_laca(f,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
22143      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
22144                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
22145   
22146  * Net cost of Secondary Energy Supplies
22147  eqcost_ses_c_laca(s,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22148      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
22149   
22150   
22151  *-------------------------------------------------------------------------------
22152  * Market balances
22153  *-------------------------------------------------------------------------------
22154   
22155  eq_mkt_clearing_oil_c_laca(t,'c_laca')$(internal('oil'))..
22156      sum( n$(map_clt_n('c_laca',n) and trading_t('oil',t,n)),
22157          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
22158      ) =e= 0;
22159   
22160  *-------------------------------------------------------------------------------
22161  * New capital in the energy sector
22162  *-------------------------------------------------------------------------------
22163   
22164  * Electrical generation plants (new)
22165  eqk_en_c_laca(jinv,t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
22166      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
22167                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
22168   
22169  *-------------------------------------------------------------------------------
22170  * ENERGY
22171  *-------------------------------------------------------------------------------
22172   
22173  * Capacity limits in the electrical sector
22174  eqq_en_mu_c_laca(jel,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
22175      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
22176   
22177  * Efficiency of energy technology sector
22178  eqq_en_in_c_laca(jfed,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
22179      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
22180                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
22181   
22182  * Energy generation "tree"
22183  eqq_en_tree_c_laca(j,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
22184      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
22185   
22186  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
22189  *-------------------------------------------------------------------------------
22190  * Carbon Emissions
22191  * - Total CO2 emissions and CO2 Fossil fuel and Industry
22192  * - CO2 emission costs
22193  * - GHG permit market
22194  *-------------------------------------------------------------------------------
22195   
22197   
22198  * GHG emission cap
22199  eqq_emi_lim_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
22200      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
22201                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
22202   
22203  ***newcode
22204  eqq_emi_lim_USAc_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
22205  ***
22206   
22207  * Compute total and sectoral emissions
22208  eqq_emi_tree_c_laca(t,n,e)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
22209      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
22210   
22211  * Industrial CO2 emissions
22212  eqq_emi_co2ffi_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22213      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
22214                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
22215                              # Emissions from biomass
22216                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
22217                              # Emissions from fuel extraction
22218                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
22219                              # Captured emissions
22220                              sum(sink, Q_EMI(sink,t,n));
22221   
22222  * CO2 emission costs
22223  eqcost_emi_co2_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22224      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
22225   
22226  * Emission permit market clearing for internal market
22227  eq_mkt_clearing_nip_c_laca(c_mkt,t,'c_laca')$(internal(c_mkt))..
22228      sum(n$(map_clt_n('c_laca',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
22229   
22230  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
22233  *-------------------------------------------------------------------------------
22234  * Research & Development
22235  * Options:
22236  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
22237  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
22238  *-------------------------------------------------------------------------------
22239   
22241   
22242  * Knowledge stock accumulation
22243  eqk_rd_c_laca(rd,t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
22244                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
22245                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
22246                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
22247                                        SPILL(rd,t,n)**rd_coef(rd,'d');
22248   
22249  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
22250  eqspill_coop_c_laca(rd,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_laca'))..
22251          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
22252                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_laca',nn)), K_RD(rd,t,nn)) +
22253                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_laca',nn))), K_RD.l(rd,t,nn))
22254                            ) *
22255                            (
22256                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_laca',nn)), K_RD(rd,t,nn)) +
22257                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_laca',nn))), K_RD.l(rd,t,nn))
22258                              ) - K_RD(rd,t,n)
22259                            );
22260   
22261  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
22262  eqspill_lead_c_laca(rd,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_laca')) and leadrd(rd,n))..
22263                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
22264   
22265  * No-cooperation : a follower sees is negative effect on the quantity he can grab
22266  eqspill_foll_c_laca(rd,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_laca')) and (not leadrd(rd,n)))..
22267                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
22268   
22269  *- Only LbR (without learning by doing)
22270  eqmcost_inv_back_c_laca(jrd,t,tt,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
22271                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
22272                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
22273   
22274  *- LbR together with learning by doing ==> Two-factor learning curve
22275  eqmcost_inv_back_lbd_c_laca(jrd,t,tt,tfirst,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
22276                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
22277                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
22278                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
22279   
22280  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
22283  *-------------------------------------------------------------------------------
22284  * Default Climate Policy Implementation
22285  *
22286  * Options:
22287  *    --policy={bau (default),ctax}
22288  *        Implement a climate policy setting
22289  *  [ --scen= ]
22290  *        Policy variant.
22291  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
22292  *          * XXX for a fixed percentage/yr (e.g. 5) growth
22293  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
22294  *  [ --ctax_year=2020 ]
22295  *        Starting year of the carbon tax
22296  *  [ --ctax_initial=30 ]
22297  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
22298  *
22299  *-------------------------------------------------------------------------------
22301   
22302  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
22304  *-------------------------------------------------------------------------------
22305  * Energy efficiency
22306  *-------------------------------------------------------------------------------
22307   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
22310  *-------------------------------------------------------------------------------
22311  * Hydro Power
22312  *-------------------------------------------------------------------------------
22313   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
22316  *-------------------------------------------------------------------------------
22317  * System Integration:
22318  * - Capacity constraint
22319  * - Flexibility constraint
22320  * - Grid Investment
22321  * - Capacity growth constraint
22322  *-------------------------------------------------------------------------------
22323   
22325   
22326   
22327  * Renewable CES
22328   
22329  * Definition of the renewable CES
22330  eqq_elintren_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22331      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
22332   
22333  * Capacity constraint
22334   
22336  eqfirm_capacity_c_laca(t,n)$(map_clt_n('c_laca',n) and (not tfix(t)) and year(t) gt 2005)..
22337                   sum(jel_firm, K_EN(jel_firm,t,n))
22338                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
22339                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
22340                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
22341                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
22342                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
22343                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
22344                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
22345                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
22346                                       ) / yearly_hours
22347  ;
22349   
22350  * Flexibility constraint
22351  eqflex_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22352          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
22353                             ( Q_EN('el',t,n) -
22354                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
22355                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
22356                             ) * flex_coeff('load')
22357  ;
22358   
22359  * Grid
22360   
22361  ** Grid depreciation and investments
22362  eqk_en_grid_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
22363                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
22364                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
22365   
22366  ** Grid adjustment to power capacity
22367  eqk_en_grid_to_k_en_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22368                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
22369                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
22370                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
22371                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
22372                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
22373                                     ) / grid_cost +
22374                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
22375                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
22376                                      K_EN('elcsp',t,n);
22377  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
22378   
22379  * Capacity growth constraint
22380  eqcap_growth_c_laca(jinv,t,tp1,tp2,n)$((map_clt_n('c_laca',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
22381                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
22382                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
22383   
22384  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
22387  *-------------------------------------------------------------------------------
22388  * Nuclear power plants
22389  *-------------------------------------------------------------------------------
22390   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
22393  *-------------------------------------------------------------------------------
22394  * GHG module
22395  * - CH4 FFI + CH4 waste + CH4 open fires
22396  * - N2O FFI + N2O waste + N2O open fires
22397  *-------------------------------------------------------------------------------
22398   
22400   
22401  * CH4, N2O waste emissions
22402  eqq_emi_waste_c_laca(waste,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
22403                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
22404   
22405  * n2o FFI
22406  eqq_emi_n2o_ffi_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
22407    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
22408                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
22409                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
22410                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
22411                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
22412                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
22413                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
22414                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
22415                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
22416                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
22417                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
22418                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
22419                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
22420                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
22421                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
22422                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
22423                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
22424                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
22425                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
22426                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
22427                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
22428                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
22429                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
22430                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
22431                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
22432                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
22433                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
22434                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
22435                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
22436                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
22437                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
22438   
22439  * ch4 FFI
22440  eqq_emi_ch4_ffi_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
22441    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
22444  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
22445  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
22446                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
22447                             smax(tt$(year(tt) eq 2015),
22448                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
22451  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
22452  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
22453                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
22454   
22455  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
22458  *-------------------------------------------------------------------------------
22459  * F-gases
22460  * - LLF
22461  * - SLF
22462  *-------------------------------------------------------------------------------
22463   
22465   
22466  * F-gases emissions
22467  eqq_emi_fgases_c_laca(fgases,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
22468                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
22469   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
22472  *-------------------------------------------------------------------------------
22473  * Landuse [simplified version of the land-use model]
22474  *-------------------------------------------------------------------------------
22475   
22477   
22478  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
22479  eq_wbio_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22480      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
22481   
22483  * Cost of all woody biomass produced for advanced biofuels and woody biomass
22484  eqcost_pes_wbio_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22485      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
22487   
22488  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
22491  *-------------------------------------------------------------------------------
22492  * Bioenergy power plant
22493  *-------------------------------------------------------------------------------
22494   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
22497  *-------------------------------------------------------------------------------
22498  * Traditional Biofuels
22499  * - Requires the precedence of mod_landuse
22500  *-------------------------------------------------------------------------------
22501   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
22504  *-------------------------------------------------------------------------------
22505  * Advanced biofuel
22506  * - Require the precedence of mod_landuse
22507  *-------------------------------------------------------------------------------
22508   
22510   
22511  * Limitations for nel backstops
22512  eqq_en_lim_advbiofuel_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
22513               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
22514               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
22515   
22516  * Peculiarity of advbiofuel
22517  eqmcost_fuel_advbiofuel_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22518                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
22519   
22520  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
22523  *-------------------------------------------------------------------------------
22524  * Carbon Capture and Sequestration
22525  *-------------------------------------------------------------------------------
22526   
22528   
22529  eqq_emi_ccs_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22530                  Q_EMI('ccs_plant',t,n) =e=
22531                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
22532                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
22533  ;
22534   
22535  eqcost_emi_sinks_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22536                  COST_EMI('ccs_plant',t,n) =e=
22537                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
22538                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
22539  ;
22540   
22541  eq_stor_ccs_cum_c_laca(ccs_stor,tp1,t,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
22542                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
22543  ;
22544   
22545  eq_emi_stor_ccs_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22546                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
22547  ;
22548   
22549  eq_emi_leak_ccs_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22550                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
22551   
22552  *-------------------------------------------------------------------------------
22554   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
22556  *-------------------------------------------------------------------------------
22557  * Coal for non-electric sectors
22558  * - Coke Plants
22559  * - Industrial and Commercial combined-heat-and-power (CHP)
22560  * - Others
22561  *-------------------------------------------------------------------------------
22562   
22564   
22565  eqcost_en_nelcoal_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22566           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
22567                                          nelcoal_max_abat(t,n) *
22568                                          (nelcoal_cmac(n,'a') *
22569                                            Q_EN('nelcoalabat',t,n) /
22570                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
22571                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
22572                                              (exp(nelcoal_cmac(n,'c') *
22573                                                (Q_EN('nelcoalabat',t,n)/
22574                                                  (nelcoal_max_abat(t,n) *
22575                                                      nelcoal_baseline(t,n))
22576                                                  ) - 1 )
22577                                              )
22578                                          );
22579   
22580  eqq_ncoalabat_monotone_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
22581          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
22582   
22583  * ensure Q_EN is lower than K_EN for CCS as not in jel
22584  eqq_en_nelcoalccs_max_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22585          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
22586   
22587  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
22590  *-------------------------------------------------------------------------------
22591  * Wind energy module
22592  * - onshore and offshore
22593  *-------------------------------------------------------------------------------
22594   
22596   
22597  * Capacity limits in the wind onshore electrical sector
22598  eqq_en_mu_windon_c_laca(wind_dist,wind_class,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
22599      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
22600   
22601  * Capacity limits in the wind offshore electrical sector
22602  eqq_en_mu_windoff_c_laca(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
22603      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
22604   
22605  * Wind onshore electrical generation plants (new)
22606  eqk_en_windon_c_laca(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
22607      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
22608                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
22609   
22610  * Wind offshore electrical generation plants (new)
22611  eqk_en_windoff_c_laca(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
22612      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
22613                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
22614   
22615  * Total onshore wind energy production
22616  eqq_en_windon_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22617                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
22618   
22619  * Total offshore wind energy production
22620  eqq_en_windoff_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22621                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
22622   
22623  * Total onshore wind capacity
22624  eqk_en_windon_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22625                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
22626   
22627  * Total offshore wind capacity
22628  eqk_en_windoff_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22629                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
22630   
22631  * Total onshore wind investment
22632  eqi_en_windon_sum_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
22633                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
22634   
22635  * Total offshore wind investment
22636  eqi_en_windoff_sum_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
22637                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
22638   
22639  *-------------------------------------------------------------------------------
22641   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
22643  *-------------------------------------------------------------------------------
22644  * Solar Powerplants (PV and CSP) to the electrical system
22645  *-------------------------------------------------------------------------------
22646   
22647  *-------------------------------------------------------------------------------
22649   
22650   
22651  * Capacity limits in the pv electrical sector
22652  eqq_en_mu_pv_c_laca(solar_dist,solar_class,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
22653                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
22654   
22655  * Capacity limits in the csp electrical sector
22656  eqq_en_mu_csp_c_laca(solar_dist,solar_class,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
22657                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
22658   
22659  * PV electrical generation plants (new)
22660  eqk_en_pv_c_laca(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
22661                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
22662                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
22663   
22664  * CSP electrical generation plants (new)
22665  eqk_en_csp_c_laca(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
22666                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
22667                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
22668   
22669  * Total PV energy production
22670  eqq_en_pv_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22671                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
22672   
22673  * Total CSP energy production
22674  eqq_en_csp_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22675                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
22676   
22677  * Total PV capacity
22678  eqk_en_pv_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22679                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
22680   
22681  * Total CSP capacity
22682  eqk_en_csp_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22683                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
22684   
22685  * Total PV investment
22686  eqi_en_pv_sum_c_laca(t,tp1,n)$(map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
22687                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
22688   
22689  * Total CSP investment
22690  eqi_en_csp_sum_c_laca(t,tp1,n)$(map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
22691                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
22692   
22693  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
22694  eqk_en_solar_comp_c_laca(t,n,solar_dist)$(map_clt_n('c_laca',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
22695                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
22696                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
22697   
22698   
22699   
22700  *-------------------------------------------------------------------------------
22702   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
22704  *-------------------------------------------------------------------------------
22705  * Technology development scenarios
22706  *-------------------------------------------------------------------------------
22707   
22709   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
22711  *-------------------------------------------------------------------------------
22712  * Oil Extraction
22713  * Options:
22714  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
22715  *-------------------------------------------------------------------------------
22716   
22718   
22719  * Capacity
22720  eqoilcap_c_laca(t,tp1,n,oilg)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
22721      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
22722   
22723  * Production
22724  eqoilprod_c_laca(t,tp1,n,oilg)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
22725      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
22726   
22727  eqq_out_oil_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22728      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
22729   
22730  * Cumulative production
22731  eqcum_oil_c_laca(t,tp1,n,oilg)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
22732      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
22733   
22734  * Cost
22735  eqcost_oil_c_laca(t,tp1,n,oilg)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
22736      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
22737                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
22738                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
22739   
22740  * Investments
22741  eqi_oil_c_laca(t,tp1,n,oilg)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
22742      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
22743   
22744  * Total investment
22745  eqi_out_oil_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
22746      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
22747   
22748  * Emissions
22749  eqq_emi_out_oil_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22750      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
22751   
22752  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
22755  *-------------------------------------------------------------------------------
22756  * Uranium Resources
22757  *-------------------------------------------------------------------------------
22758   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
22761  *-------------------------------------------------------------------------------
22762  * Gas Resources
22763  *-------------------------------------------------------------------------------
22764   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
22767  *-------------------------------------------------------------------------------
22768  * Coal Resources
22769  *-------------------------------------------------------------------------------
22770   
22772   
22773   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
22775  *-------------------------------------------------------------------------------
22776  * Climate
22777  *
22778  * Represents the climate
22779  * - based on the DICE model equations
22780  * - Radiative forcing for non CO2 ghgs
22781  * - parameters calibrated to reproduce MAGICC6.4 default response
22782  *
22783  *  Options:
22784  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
22785  * - $setglobal cooperate_on_climate {'YES','NO'}
22786  * - 'YES'(default): Countries within a coalition act in cooperation
22787  *   'NO': Countries within a coalition act individually
22788  *
22789  *-------------------------------------------------------------------------------
22790   
22792   
22794   
22795  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
22798  *-------------------------------------------------------------------------------
22799  * Long-run Damages from Climate Change
22800  * - Economic impacts
22801  * - Adaptation
22802  *-------------------------------------------------------------------------------
22803   
22805   
22807   
22808  *-------------------------------------------------------------------------------
22810   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
22812  *-------------------------------------------------------------------------------
22813  * Light-duty Vehicles for Personal Transport
22814  *-------------------------------------------------------------------------------
22815   
22817   
22818  *** newcode
22819  eqq_inv_red_ban_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22820      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
22821   
22822  ***
22823  *- Number of light duty vehicles
22824  eqnb_veh_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22825      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
22826   
22827  *- Yearly energy demand of vehicles
22828  eqq_en_veh_c_laca(jveh,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22829      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
22830   
22831  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
22832  eqq_el_edv_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22833      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
22834   
22835  *- Investment cost for hybrid vehicles
22836  eqmcost_inv_hybrid_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
22837                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
22838   
22839  *- Investment cost for plug-in hybrid vehicles
22840  eqmcost_inv_plghybrid_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
22841                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
22842   
22843  *- Investment cost for electric drive vehicles
22844  eqmcost_inv_edv_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
22845                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
22846   
22847  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
22850  *-------------------------------------------------------------------------------
22851  * Road Freight Transport
22852  *-------------------------------------------------------------------------------
22854   
22855  *-  Number of freight vehicles
22856  eqnb_frtveh_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22857                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
22858   
22859  *-  Yearly fuel consumption of freight vehicles
22860  eqq_en_frtveh_c_laca(jfrt,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22861                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
22862   
22863  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
22864  eqq_el_frtedv_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22865                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
22866   
22867  *-  Investment cost for hbd_stfr vehicle
22868  eqmcost_inv_hbd_stfr_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
22869                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
22870   
22871  *-  Investment cost for plug-in hbd_stfr vehicle
22872  eqmcost_inv_plghbd_stfr_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
22873                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
22874   
22875  *-  Investment cost for electric drive vehicle
22876  eqmcost_inv_edv_stfr_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
22877                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
22878   
22879  *-------------------------------------------------------------------------------
22881   
22882   
22883   
22884   
22885   
22886   
22887  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
22889  *-------------------------------------------------------------------------------
22890  * Traditional Biomass
22891  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
22892  *  - require post_process to be launch before
22893  *-------------------------------------------------------------------------------
22894   
22896   
22897  * Optional modules
22898   
22899  * Policy modules
22900   
22901  * Calibration
22904   
22905   
22906  model witch_c_laca /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
22908  *-------------------------------------------------------------------------------
22909  * Call modules by order
22910  *-------------------------------------------------------------------------------
22914   
22915  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
22917  *-------------------------------------------------------------------------------
22918  * Algorithm
22919  *-------------------------------------------------------------------------------
22920   
22922   
22923  eqobj_c_laca
22924   
22925  *-------------------------------------------------------------------------------
22927   
22928  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
22930  *-------------------------------------------------------------------------------
22931  * Time
22932  * - Temporal structure
22933  * - Fixed time periods
22934  * - States of the world
22935  *-------------------------------------------------------------------------------
22936   
22938   
22939  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
22941  *-------------------------------------------------------------------------------
22942  * Geographic dimension and mapping with countries
22943  *-------------------------------------------------------------------------------
22944   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
22947  *-------------------------------------------------------------------------------
22948  * Non-Cooperative Setup
22949  *
22950  * Each region is defined as an individual coalition.
22951  *
22952  *-------------------------------------------------------------------------------
22953   
22955   
22956  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
22958  *-------------------------------------------------------------------------------
22959  * Welfare
22960  *-------------------------------------------------------------------------------
22961   
22963   
22964  equtility_c_laca
22965   
22966  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
22969  *-------------------------------------------------------------------------------
22970  * Economy
22971  * - Production and Consumption definition
22972  * - Top-level of the production function
22973  * Options:
22974  * --original_ssp=1 : original SSP population and GDP data
22975  *-------------------------------------------------------------------------------
22976   
22978   
22979  eqk_c_laca
22980  eqq_cc_c_laca
22981  eqq_fen_c_laca
22982  eqq_y_c_laca
22983   
22984  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
22987  *-------------------------------------------------------------------------------
22988  * Energy sector
22989  *-------------------------------------------------------------------------------
22990   
22992   
22993  eq_mkt_clearing_oil_c_laca
22994  eqcost_pes_c_laca
22995  eqcost_ses_c_laca
22996  eqk_en_c_laca
22997  eqq_ces_el_c_laca
22998  eqq_ces_nelgas_c_laca
22999  eqq_el2_c_laca
23000  eqq_el_c_laca
23001  eqq_elff_c_laca
23002  eqq_en_c_laca
23003  eqq_en_in_c_laca
23004  eqq_en_mu_c_laca
23005  eqq_en_tree_c_laca
23006  eqq_nel_c_laca
23007  eqq_nelog_c_laca
23008  eqq_fuel_c_laca
23009  eqq_elffren_c_laca
23010   
23011  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
23014  *-------------------------------------------------------------------------------
23015  * Carbon Emissions
23016  * - Total CO2 emissions and CO2 Fossil fuel and Industry
23017  * - CO2 emission costs
23018  * - GHG permit market
23019  *-------------------------------------------------------------------------------
23020   
23022   
23023  eqq_emi_lim_c_laca
23024  ***newcode
23025  eqq_emi_lim_USAc_laca
23026  ***
23027  eqq_emi_tree_c_laca
23028  eqq_emi_co2ffi_c_laca
23029   
23030  eqcost_emi_co2_c_laca
23031   
23032  eq_mkt_clearing_nip_c_laca
23033   
23034  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
23037  *-------------------------------------------------------------------------------
23038  * Research & Development
23039  * Options:
23040  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
23041  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
23042  *-------------------------------------------------------------------------------
23043   
23045   
23046  eqk_rd_c_laca
23047  eqspill_coop_c_laca
23048  eqspill_lead_c_laca
23049  eqspill_foll_c_laca
23050  eqmcost_inv_back_c_laca
23051  eqmcost_inv_back_lbd_c_laca
23052   
23053  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
23056  *-------------------------------------------------------------------------------
23057  * Default Climate Policy Implementation
23058  *
23059  * Options:
23060  *    --policy={bau (default),ctax}
23061  *        Implement a climate policy setting
23062  *  [ --scen= ]
23063  *        Policy variant.
23064  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
23065  *          * XXX for a fixed percentage/yr (e.g. 5) growth
23066  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
23067  *  [ --ctax_year=2020 ]
23068  *        Starting year of the carbon tax
23069  *  [ --ctax_initial=30 ]
23070  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
23071  *
23072  *-------------------------------------------------------------------------------
23074   
23075  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
23077  *-------------------------------------------------------------------------------
23078  * Energy efficiency
23079  *-------------------------------------------------------------------------------
23080   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
23083  *-------------------------------------------------------------------------------
23084  * Hydro Power
23085  *-------------------------------------------------------------------------------
23086   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
23089  *-------------------------------------------------------------------------------
23090  * System Integration:
23091  * - Capacity constraint
23092  * - Flexibility constraint
23093  * - Grid Investment
23094  * - Capacity growth constraint
23095  *-------------------------------------------------------------------------------
23096   
23098   
23099  eqq_elintren_c_laca
23100  eqflex_c_laca
23101  eqk_en_grid_c_laca
23102  eqk_en_grid_to_k_en_c_laca
23103  eqfirm_capacity_c_laca
23104  eqcap_growth_c_laca
23105   
23106  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
23109  *-------------------------------------------------------------------------------
23110  * Nuclear power plants
23111  *-------------------------------------------------------------------------------
23112   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
23115  *-------------------------------------------------------------------------------
23116  * GHG module
23117  * - CH4 FFI + CH4 waste + CH4 open fires
23118  * - N2O FFI + N2O waste + N2O open fires
23119  *-------------------------------------------------------------------------------
23120   
23122   
23123  eqq_emi_waste_c_laca
23124  eqq_emi_n2o_ffi_c_laca
23125  eqq_emi_ch4_ffi_c_laca
23126   
23127  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
23130  *-------------------------------------------------------------------------------
23131  * F-gases
23132  * - LLF
23133  * - SLF
23134  *-------------------------------------------------------------------------------
23135   
23137   
23138  eqq_emi_fgases_c_laca
23139   
23140  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
23143  *-------------------------------------------------------------------------------
23144  * Landuse [simplified version of the land-use model]
23145  *-------------------------------------------------------------------------------
23146   
23148   
23149  eq_wbio_c_laca
23150  eqcost_pes_wbio_c_laca
23151   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
23154  *-------------------------------------------------------------------------------
23155  * Bioenergy power plant
23156  *-------------------------------------------------------------------------------
23157   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
23160  *-------------------------------------------------------------------------------
23161  * Traditional Biofuels
23162  * - Requires the precedence of mod_landuse
23163  *-------------------------------------------------------------------------------
23164   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
23167  *-------------------------------------------------------------------------------
23168  * Advanced biofuel
23169  * - Require the precedence of mod_landuse
23170  *-------------------------------------------------------------------------------
23171   
23173   
23174  eqq_en_lim_advbiofuel_c_laca
23175  eqmcost_fuel_advbiofuel_c_laca
23176   
23177  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
23180  *-------------------------------------------------------------------------------
23181  * Carbon Capture and Sequestration
23182  *-------------------------------------------------------------------------------
23183   
23185   
23186  eqq_emi_ccs_c_laca
23187  eqcost_emi_sinks_c_laca
23188  eq_stor_ccs_cum_c_laca
23189  eq_emi_stor_ccs_c_laca
23190  eq_emi_leak_ccs_c_laca
23191   
23192  *-------------------------------------------------------------------------------
23194   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
23196  *-------------------------------------------------------------------------------
23197  * Coal for non-electric sectors
23198  * - Coke Plants
23199  * - Industrial and Commercial combined-heat-and-power (CHP)
23200  * - Others
23201  *-------------------------------------------------------------------------------
23202   
23204   
23205  eqcost_en_nelcoal_c_laca
23206  eqq_ncoalabat_monotone_c_laca
23207  eqq_en_nelcoalccs_max_c_laca
23208   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
23211  *-------------------------------------------------------------------------------
23212  * Wind energy module
23213  * - onshore and offshore
23214  *-------------------------------------------------------------------------------
23215   
23217   
23218  eqq_en_mu_windon_c_laca
23219  eqq_en_mu_windoff_c_laca
23220  eqk_en_windon_c_laca
23221  eqk_en_windoff_c_laca
23222  eqq_en_windon_sum_c_laca
23223  eqq_en_windoff_sum_c_laca
23224  eqk_en_windon_sum_c_laca
23225  eqk_en_windoff_sum_c_laca
23226  eqi_en_windon_sum_c_laca
23227  eqi_en_windoff_sum_c_laca
23228   
23230   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
23232  *-------------------------------------------------------------------------------
23233  * Solar Powerplants (PV and CSP) to the electrical system
23234  *-------------------------------------------------------------------------------
23235   
23236  *-------------------------------------------------------------------------------
23238   
23239  eqq_en_mu_pv_c_laca
23240  eqq_en_mu_csp_c_laca
23241  eqk_en_pv_c_laca
23242  eqk_en_csp_c_laca
23243  eqq_en_pv_sum_c_laca
23244  eqq_en_csp_sum_c_laca
23245  eqk_en_pv_sum_c_laca
23246  eqk_en_csp_sum_c_laca
23247  eqi_en_pv_sum_c_laca
23248  eqi_en_csp_sum_c_laca
23249  eqk_en_solar_comp_c_laca
23250   
23251  *-------------------------------------------------------------------------------
23253   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
23255  *-------------------------------------------------------------------------------
23256  * Technology development scenarios
23257  *-------------------------------------------------------------------------------
23258   
23260   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
23262  *-------------------------------------------------------------------------------
23263  * Oil Extraction
23264  * Options:
23265  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
23266  *-------------------------------------------------------------------------------
23267   
23269   
23270  eqoilcap_c_laca
23271  eqoilprod_c_laca
23272  eqq_out_oil_c_laca
23273  eqcum_oil_c_laca
23274  eqcost_oil_c_laca
23275  eqi_oil_c_laca
23276  eqi_out_oil_c_laca
23277  eqq_emi_out_oil_c_laca
23278   
23279  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
23282  *-------------------------------------------------------------------------------
23283  * Uranium Resources
23284  *-------------------------------------------------------------------------------
23285   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
23288  *-------------------------------------------------------------------------------
23289  * Gas Resources
23290  *-------------------------------------------------------------------------------
23291   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
23294  *-------------------------------------------------------------------------------
23295  * Coal Resources
23296  *-------------------------------------------------------------------------------
23297   
23299   
23300   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
23302  *-------------------------------------------------------------------------------
23303  * Climate
23304  *
23305  * Represents the climate
23306  * - based on the DICE model equations
23307  * - Radiative forcing for non CO2 ghgs
23308  * - parameters calibrated to reproduce MAGICC6.4 default response
23309  *
23310  *  Options:
23311  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
23312  * - $setglobal cooperate_on_climate {'YES','NO'}
23313  * - 'YES'(default): Countries within a coalition act in cooperation
23314  *   'NO': Countries within a coalition act individually
23315  *
23316  *-------------------------------------------------------------------------------
23317   
23319   
23321   
23322  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
23325  *-------------------------------------------------------------------------------
23326  * Long-run Damages from Climate Change
23327  * - Economic impacts
23328  * - Adaptation
23329  *-------------------------------------------------------------------------------
23330   
23332   
23334   
23335  *-------------------------------------------------------------------------------
23337   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
23339  *-------------------------------------------------------------------------------
23340  * Light-duty Vehicles for Personal Transport
23341  *-------------------------------------------------------------------------------
23342   
23344   
23345  eqnb_veh_c_laca
23346  eqq_en_veh_c_laca
23347  eqq_el_edv_c_laca
23348  eqmcost_inv_hybrid_c_laca
23349  eqmcost_inv_plghybrid_c_laca
23350  eqmcost_inv_edv_c_laca
23351  *** newcode
23352  eqq_inv_red_ban_c_laca
23353  ***
23354  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
23357  *-------------------------------------------------------------------------------
23358  * Road Freight Transport
23359  *-------------------------------------------------------------------------------
23361   
23362  eqnb_frtveh_c_laca
23363  eqq_en_frtveh_c_laca
23364  eqq_el_frtedv_c_laca
23365  eqmcost_inv_hbd_stfr_c_laca
23366  eqmcost_inv_plghbd_stfr_c_laca
23367  eqmcost_inv_edv_stfr_c_laca
23368   
23369  *-------------------------------------------------------------------------------
23371   
23372   
23373   
23374   
23375   
23376   
23377  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
23379  *-------------------------------------------------------------------------------
23380  * Traditional Biomass
23381  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
23382  *  - require post_process to be launch before
23383  *-------------------------------------------------------------------------------
23384   
23386   
23387  * Optional modules
23388   
23389  * Policy modules
23390   
23391  * Calibration
23394  /;
23395   
23396  witch_c_laca.optfile=1;   # the option file solvername.opt is to be used
23397  witch_c_laca.holdfixed=1; # treat fixed values as constant
23398  witch_c_laca.scaleopt=1;  # Use scaling for better gradients estimation
23399  witch_c_laca.solvelink=3; # Use parallel or sequential solving
23400   
23405   
23406  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
23408  *-------------------------------------------------------------------------------
23409  * Call modules by order
23410  *-------------------------------------------------------------------------------
23414   
23415  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
23417  *-------------------------------------------------------------------------------
23418  * Algorithm
23419  *-------------------------------------------------------------------------------
23420   
23422   
23423  eqobj_c_mena
23424   
23425  *-------------------------------------------------------------------------------
23427   
23428  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
23430  *-------------------------------------------------------------------------------
23431  * Time
23432  * - Temporal structure
23433  * - Fixed time periods
23434  * - States of the world
23435  *-------------------------------------------------------------------------------
23436   
23438   
23439  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
23441  *-------------------------------------------------------------------------------
23442  * Geographic dimension and mapping with countries
23443  *-------------------------------------------------------------------------------
23444   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
23447  *-------------------------------------------------------------------------------
23448  * Non-Cooperative Setup
23449  *
23450  * Each region is defined as an individual coalition.
23451  *
23452  *-------------------------------------------------------------------------------
23453   
23455   
23456  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
23458  *-------------------------------------------------------------------------------
23459  * Welfare
23460  *-------------------------------------------------------------------------------
23461   
23463   
23464  equtility_c_mena
23465   
23466  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
23469  *-------------------------------------------------------------------------------
23470  * Economy
23471  * - Production and Consumption definition
23472  * - Top-level of the production function
23473  * Options:
23474  * --original_ssp=1 : original SSP population and GDP data
23475  *-------------------------------------------------------------------------------
23476   
23478   
23479  eqk_c_mena
23480  eqq_cc_c_mena
23481  eqq_fen_c_mena
23482  eqq_y_c_mena
23483   
23484  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
23487  *-------------------------------------------------------------------------------
23488  * Energy sector
23489  *-------------------------------------------------------------------------------
23490   
23492   
23493  eq_mkt_clearing_oil_c_mena
23494  eqcost_pes_c_mena
23495  eqcost_ses_c_mena
23496  eqk_en_c_mena
23497  eqq_ces_el_c_mena
23498  eqq_ces_nelgas_c_mena
23499  eqq_el2_c_mena
23500  eqq_el_c_mena
23501  eqq_elff_c_mena
23502  eqq_en_c_mena
23503  eqq_en_in_c_mena
23504  eqq_en_mu_c_mena
23505  eqq_en_tree_c_mena
23506  eqq_nel_c_mena
23507  eqq_nelog_c_mena
23508  eqq_fuel_c_mena
23509  eqq_elffren_c_mena
23510   
23511  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
23514  *-------------------------------------------------------------------------------
23515  * Carbon Emissions
23516  * - Total CO2 emissions and CO2 Fossil fuel and Industry
23517  * - CO2 emission costs
23518  * - GHG permit market
23519  *-------------------------------------------------------------------------------
23520   
23522   
23523  eqq_emi_lim_c_mena
23524  ***newcode
23525  eqq_emi_lim_USAc_mena
23526  ***
23527  eqq_emi_tree_c_mena
23528  eqq_emi_co2ffi_c_mena
23529   
23530  eqcost_emi_co2_c_mena
23531   
23532  eq_mkt_clearing_nip_c_mena
23533   
23534  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
23537  *-------------------------------------------------------------------------------
23538  * Research & Development
23539  * Options:
23540  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
23541  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
23542  *-------------------------------------------------------------------------------
23543   
23545   
23546  eqk_rd_c_mena
23547  eqspill_coop_c_mena
23548  eqspill_lead_c_mena
23549  eqspill_foll_c_mena
23550  eqmcost_inv_back_c_mena
23551  eqmcost_inv_back_lbd_c_mena
23552   
23553  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
23556  *-------------------------------------------------------------------------------
23557  * Default Climate Policy Implementation
23558  *
23559  * Options:
23560  *    --policy={bau (default),ctax}
23561  *        Implement a climate policy setting
23562  *  [ --scen= ]
23563  *        Policy variant.
23564  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
23565  *          * XXX for a fixed percentage/yr (e.g. 5) growth
23566  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
23567  *  [ --ctax_year=2020 ]
23568  *        Starting year of the carbon tax
23569  *  [ --ctax_initial=30 ]
23570  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
23571  *
23572  *-------------------------------------------------------------------------------
23574   
23575  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
23577  *-------------------------------------------------------------------------------
23578  * Energy efficiency
23579  *-------------------------------------------------------------------------------
23580   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
23583  *-------------------------------------------------------------------------------
23584  * Hydro Power
23585  *-------------------------------------------------------------------------------
23586   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
23589  *-------------------------------------------------------------------------------
23590  * System Integration:
23591  * - Capacity constraint
23592  * - Flexibility constraint
23593  * - Grid Investment
23594  * - Capacity growth constraint
23595  *-------------------------------------------------------------------------------
23596   
23598   
23599  eqq_elintren_c_mena
23600  eqflex_c_mena
23601  eqk_en_grid_c_mena
23602  eqk_en_grid_to_k_en_c_mena
23603  eqfirm_capacity_c_mena
23604  eqcap_growth_c_mena
23605   
23606  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
23609  *-------------------------------------------------------------------------------
23610  * Nuclear power plants
23611  *-------------------------------------------------------------------------------
23612   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
23615  *-------------------------------------------------------------------------------
23616  * GHG module
23617  * - CH4 FFI + CH4 waste + CH4 open fires
23618  * - N2O FFI + N2O waste + N2O open fires
23619  *-------------------------------------------------------------------------------
23620   
23622   
23623  eqq_emi_waste_c_mena
23624  eqq_emi_n2o_ffi_c_mena
23625  eqq_emi_ch4_ffi_c_mena
23626   
23627  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
23630  *-------------------------------------------------------------------------------
23631  * F-gases
23632  * - LLF
23633  * - SLF
23634  *-------------------------------------------------------------------------------
23635   
23637   
23638  eqq_emi_fgases_c_mena
23639   
23640  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
23643  *-------------------------------------------------------------------------------
23644  * Landuse [simplified version of the land-use model]
23645  *-------------------------------------------------------------------------------
23646   
23648   
23649  eq_wbio_c_mena
23650  eqcost_pes_wbio_c_mena
23651   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
23654  *-------------------------------------------------------------------------------
23655  * Bioenergy power plant
23656  *-------------------------------------------------------------------------------
23657   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
23660  *-------------------------------------------------------------------------------
23661  * Traditional Biofuels
23662  * - Requires the precedence of mod_landuse
23663  *-------------------------------------------------------------------------------
23664   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
23667  *-------------------------------------------------------------------------------
23668  * Advanced biofuel
23669  * - Require the precedence of mod_landuse
23670  *-------------------------------------------------------------------------------
23671   
23673   
23674  eqq_en_lim_advbiofuel_c_mena
23675  eqmcost_fuel_advbiofuel_c_mena
23676   
23677  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
23680  *-------------------------------------------------------------------------------
23681  * Carbon Capture and Sequestration
23682  *-------------------------------------------------------------------------------
23683   
23685   
23686  eqq_emi_ccs_c_mena
23687  eqcost_emi_sinks_c_mena
23688  eq_stor_ccs_cum_c_mena
23689  eq_emi_stor_ccs_c_mena
23690  eq_emi_leak_ccs_c_mena
23691   
23692  *-------------------------------------------------------------------------------
23694   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
23696  *-------------------------------------------------------------------------------
23697  * Coal for non-electric sectors
23698  * - Coke Plants
23699  * - Industrial and Commercial combined-heat-and-power (CHP)
23700  * - Others
23701  *-------------------------------------------------------------------------------
23702   
23704   
23705  eqcost_en_nelcoal_c_mena
23706  eqq_ncoalabat_monotone_c_mena
23707  eqq_en_nelcoalccs_max_c_mena
23708   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
23711  *-------------------------------------------------------------------------------
23712  * Wind energy module
23713  * - onshore and offshore
23714  *-------------------------------------------------------------------------------
23715   
23717   
23718  eqq_en_mu_windon_c_mena
23719  eqq_en_mu_windoff_c_mena
23720  eqk_en_windon_c_mena
23721  eqk_en_windoff_c_mena
23722  eqq_en_windon_sum_c_mena
23723  eqq_en_windoff_sum_c_mena
23724  eqk_en_windon_sum_c_mena
23725  eqk_en_windoff_sum_c_mena
23726  eqi_en_windon_sum_c_mena
23727  eqi_en_windoff_sum_c_mena
23728   
23730   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
23732  *-------------------------------------------------------------------------------
23733  * Solar Powerplants (PV and CSP) to the electrical system
23734  *-------------------------------------------------------------------------------
23735   
23736  *-------------------------------------------------------------------------------
23738   
23739  eqq_en_mu_pv_c_mena
23740  eqq_en_mu_csp_c_mena
23741  eqk_en_pv_c_mena
23742  eqk_en_csp_c_mena
23743  eqq_en_pv_sum_c_mena
23744  eqq_en_csp_sum_c_mena
23745  eqk_en_pv_sum_c_mena
23746  eqk_en_csp_sum_c_mena
23747  eqi_en_pv_sum_c_mena
23748  eqi_en_csp_sum_c_mena
23749  eqk_en_solar_comp_c_mena
23750   
23751  *-------------------------------------------------------------------------------
23753   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
23755  *-------------------------------------------------------------------------------
23756  * Technology development scenarios
23757  *-------------------------------------------------------------------------------
23758   
23760   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
23762  *-------------------------------------------------------------------------------
23763  * Oil Extraction
23764  * Options:
23765  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
23766  *-------------------------------------------------------------------------------
23767   
23769   
23770  eqoilcap_c_mena
23771  eqoilprod_c_mena
23772  eqq_out_oil_c_mena
23773  eqcum_oil_c_mena
23774  eqcost_oil_c_mena
23775  eqi_oil_c_mena
23776  eqi_out_oil_c_mena
23777  eqq_emi_out_oil_c_mena
23778   
23779  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
23782  *-------------------------------------------------------------------------------
23783  * Uranium Resources
23784  *-------------------------------------------------------------------------------
23785   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
23788  *-------------------------------------------------------------------------------
23789  * Gas Resources
23790  *-------------------------------------------------------------------------------
23791   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
23794  *-------------------------------------------------------------------------------
23795  * Coal Resources
23796  *-------------------------------------------------------------------------------
23797   
23799   
23800   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
23802  *-------------------------------------------------------------------------------
23803  * Climate
23804  *
23805  * Represents the climate
23806  * - based on the DICE model equations
23807  * - Radiative forcing for non CO2 ghgs
23808  * - parameters calibrated to reproduce MAGICC6.4 default response
23809  *
23810  *  Options:
23811  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
23812  * - $setglobal cooperate_on_climate {'YES','NO'}
23813  * - 'YES'(default): Countries within a coalition act in cooperation
23814  *   'NO': Countries within a coalition act individually
23815  *
23816  *-------------------------------------------------------------------------------
23817   
23819   
23821   
23822  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
23825  *-------------------------------------------------------------------------------
23826  * Long-run Damages from Climate Change
23827  * - Economic impacts
23828  * - Adaptation
23829  *-------------------------------------------------------------------------------
23830   
23832   
23834   
23835  *-------------------------------------------------------------------------------
23837   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
23839  *-------------------------------------------------------------------------------
23840  * Light-duty Vehicles for Personal Transport
23841  *-------------------------------------------------------------------------------
23842   
23844   
23845  eqnb_veh_c_mena
23846  eqq_en_veh_c_mena
23847  eqq_el_edv_c_mena
23848  eqmcost_inv_hybrid_c_mena
23849  eqmcost_inv_plghybrid_c_mena
23850  eqmcost_inv_edv_c_mena
23851  *** newcode
23852  eqq_inv_red_ban_c_mena
23853  ***
23854  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
23857  *-------------------------------------------------------------------------------
23858  * Road Freight Transport
23859  *-------------------------------------------------------------------------------
23861   
23862  eqnb_frtveh_c_mena
23863  eqq_en_frtveh_c_mena
23864  eqq_el_frtedv_c_mena
23865  eqmcost_inv_hbd_stfr_c_mena
23866  eqmcost_inv_plghbd_stfr_c_mena
23867  eqmcost_inv_edv_stfr_c_mena
23868   
23869  *-------------------------------------------------------------------------------
23871   
23872   
23873   
23874   
23875   
23876   
23877  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
23879  *-------------------------------------------------------------------------------
23880  * Traditional Biomass
23881  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
23882  *  - require post_process to be launch before
23883  *-------------------------------------------------------------------------------
23884   
23886   
23887  * Optional modules
23888   
23889  * Policy modules
23890   
23891  * Calibration
23894  ;
23895   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
23897  *-------------------------------------------------------------------------------
23898  * Call modules by order
23899  *-------------------------------------------------------------------------------
23903   
23904  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
23906  *-------------------------------------------------------------------------------
23907  * Algorithm
23908  *-------------------------------------------------------------------------------
23909   
23911   
23913  * Add the component of the (maximized) objective function as required by the ADMM algorithm
23914  eqobj_c_mena..
23915      OBJADMM =e= UTILITY -
23916          sum(t, rho_admm('oil',t) / 2 *
23917              sum(n$(map_clt_n('c_mena',n) and trading_t('oil',t,n)),
23918                  power(
23919                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
23920                      x_admm('oil',t,n) +
23921                      xavg_admm('oil',t) +
23922                      u_admm('oil', t)
23923                  ,2)
23924              )) -
23925          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
23926              sum(n$(map_clt_n('c_mena',n) and trading_t(c_mkt,t,n)),
23927                  power(
23928                      Q_EMI(c_mkt,t,n) -
23929                      x_admm(c_mkt,t,n) +
23930                      xavg_admm(c_mkt,t) +
23931                      u_admm(c_mkt,t)
23932                  ,2)
23933              ))
23934      ;
23936   
23937  *-------------------------------------------------------------------------------
23939   
23940  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
23942  *-------------------------------------------------------------------------------
23943  * Time
23944  * - Temporal structure
23945  * - Fixed time periods
23946  * - States of the world
23947  *-------------------------------------------------------------------------------
23948   
23950   
23951  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
23953  *-------------------------------------------------------------------------------
23954  * Geographic dimension and mapping with countries
23955  *-------------------------------------------------------------------------------
23956   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
23959  *-------------------------------------------------------------------------------
23960  * Non-Cooperative Setup
23961  *
23962  * Each region is defined as an individual coalition.
23963  *
23964  *-------------------------------------------------------------------------------
23965   
23967   
23968  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
23970  *-------------------------------------------------------------------------------
23971  * Welfare
23972  *-------------------------------------------------------------------------------
23973   
23975   
23976  * Objective function - Welfare to be maximized
23977  equtility_c_mena..
23978      UTILITY =e=
23979   
23980  * Negishi SWF
23982   
23983  * Welfare functions based on CEBGE
23986                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
23987                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
23988                      ((sum(n$map_clt_n('c_mena',n),
23989                        (l(t,n) / sum(nn$map_clt_n('c_mena',nn), l(t,nn))) *
23990                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
23991                       )**(1 / (1 - gamma))
23992                      )**(1 - eta) ) +
23993                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
23994                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
23995                      ((sum(n$map_clt_n('c_mena',n),
23996                        (l(t,n) / sum(nn$map_clt_n('c_mena',nn), l(t,nn))) *
23997                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
23998                       )**(1 / (1 - gamma))
23999                      )**(1 - eta) )
24000                  )**(1/(1 - eta)) * 1e6
24003   
24004   
24005  ;
24006   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
24009  *-------------------------------------------------------------------------------
24010  * Economy
24011  * - Production and Consumption definition
24012  * - Top-level of the production function
24013  * Options:
24014  * --original_ssp=1 : original SSP population and GDP data
24015  *-------------------------------------------------------------------------------
24016   
24018   
24019  * Production
24020  eqq_y_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24021   
24022      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
24023                     ## Climate feedback on economy
24025                     ## Net cost of Primary and Secondary Energy Sources
24026                     - sum(fuel, COST_FUEL(fuel,t,n))
24027                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
24028                     - sum(cce, COST_EMI(cce,t,n))
24029                     ## Carbon tax
24030                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
24031                     ## Additionnal costs on gross product
24032                     - sum(ccy, COST_Y(ccy,t,n))
24033  ;
24034   
24035  * Consumption
24036  eqq_cc_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
24037      Q('cc',t,n) =e= Q('y',t,n)
24038                      ## Investments in goods g (final good, adaptation)
24039                      -sum(g, I(g,t,n))
24040                      ## Investments in r&d
24041                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
24042                      ## Investments in energy technlogies
24043                      -sum(jinv, I_EN(jinv,t,n))
24044                       ## Investments in grid infrastructures
24045                      - I_EN_GRID(t,n)
24046                      ## Investments in extraction sector
24047                      -sum(extract(f), I_OUT(f,t,n))
24048                      ## O&M for energy technlogies
24049                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
24050                      ## O&M for extraction
24051                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
24052                      ## Energy technology penalty costs
24053                      -sum(jpenalty(j), COST_EN(j,t,n))
24054  ;
24055   
24056  * Capital accumulation
24057  eqk_c_mena(g,t,tp1,n)$(map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
24058      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
24059   
24060  * Energy services
24061  eqq_fen_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24062      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
24063   
24064  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
24067  *-------------------------------------------------------------------------------
24068  * Energy sector
24069  *-------------------------------------------------------------------------------
24070   
24072   
24073  *-------------------------------------------------------------------------------
24074  * Production - Energy sector
24075  *-------------------------------------------------------------------------------
24076   
24077  eqq_en_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24078      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
24079   
24080  *-------------------------------------------------------------------------------
24081  * Production - Electrical sector
24082  *-------------------------------------------------------------------------------
24083   
24084  eqq_el_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24085      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
24086   
24087  eqq_el2_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24088      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
24089   
24090  eqq_elffren_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24091      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
24092  eqq_elff_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24093      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
24094   
24095  eqq_ces_el_c_mena(ices_el,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
24096      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
24097  ;
24098   
24099  *-------------------------------------------------------------------------------
24100  * Production - Non-electrical sector
24101  *-------------------------------------------------------------------------------
24102   
24103  eqq_nel_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24104      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
24105   
24106  eqq_nelog_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24107      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
24108  ;
24109  eqq_ces_nelgas_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24110      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
24111   
24112  *-------------------------------------------------------------------------------
24113  * PES and fuels
24114  *-------------------------------------------------------------------------------
24115   
24116  eqq_fuel_c_mena(fuel,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
24117      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
24118   
24119  *-------------------------------------------------------------------------------
24120  * Cost
24121  *-------------------------------------------------------------------------------
24122   
24123  * Net cost of Primary Energy Supplies
24124  eqcost_pes_c_mena(f,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
24125      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
24126                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
24127   
24128  * Net cost of Secondary Energy Supplies
24129  eqcost_ses_c_mena(s,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24130      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
24131   
24132   
24133  *-------------------------------------------------------------------------------
24134  * Market balances
24135  *-------------------------------------------------------------------------------
24136   
24137  eq_mkt_clearing_oil_c_mena(t,'c_mena')$(internal('oil'))..
24138      sum( n$(map_clt_n('c_mena',n) and trading_t('oil',t,n)),
24139          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
24140      ) =e= 0;
24141   
24142  *-------------------------------------------------------------------------------
24143  * New capital in the energy sector
24144  *-------------------------------------------------------------------------------
24145   
24146  * Electrical generation plants (new)
24147  eqk_en_c_mena(jinv,t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
24148      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
24149                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
24150   
24151  *-------------------------------------------------------------------------------
24152  * ENERGY
24153  *-------------------------------------------------------------------------------
24154   
24155  * Capacity limits in the electrical sector
24156  eqq_en_mu_c_mena(jel,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
24157      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
24158   
24159  * Efficiency of energy technology sector
24160  eqq_en_in_c_mena(jfed,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
24161      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
24162                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
24163   
24164  * Energy generation "tree"
24165  eqq_en_tree_c_mena(j,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
24166      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
24167   
24168  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
24171  *-------------------------------------------------------------------------------
24172  * Carbon Emissions
24173  * - Total CO2 emissions and CO2 Fossil fuel and Industry
24174  * - CO2 emission costs
24175  * - GHG permit market
24176  *-------------------------------------------------------------------------------
24177   
24179   
24180  * GHG emission cap
24181  eqq_emi_lim_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
24182      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
24183                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
24184   
24185  ***newcode
24186  eqq_emi_lim_USAc_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
24187  ***
24188   
24189  * Compute total and sectoral emissions
24190  eqq_emi_tree_c_mena(t,n,e)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
24191      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
24192   
24193  * Industrial CO2 emissions
24194  eqq_emi_co2ffi_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24195      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
24196                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
24197                              # Emissions from biomass
24198                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
24199                              # Emissions from fuel extraction
24200                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
24201                              # Captured emissions
24202                              sum(sink, Q_EMI(sink,t,n));
24203   
24204  * CO2 emission costs
24205  eqcost_emi_co2_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24206      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
24207   
24208  * Emission permit market clearing for internal market
24209  eq_mkt_clearing_nip_c_mena(c_mkt,t,'c_mena')$(internal(c_mkt))..
24210      sum(n$(map_clt_n('c_mena',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
24211   
24212  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
24215  *-------------------------------------------------------------------------------
24216  * Research & Development
24217  * Options:
24218  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
24219  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
24220  *-------------------------------------------------------------------------------
24221   
24223   
24224  * Knowledge stock accumulation
24225  eqk_rd_c_mena(rd,t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
24226                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
24227                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
24228                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
24229                                        SPILL(rd,t,n)**rd_coef(rd,'d');
24230   
24231  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
24232  eqspill_coop_c_mena(rd,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_mena'))..
24233          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
24234                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_mena',nn)), K_RD(rd,t,nn)) +
24235                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_mena',nn))), K_RD.l(rd,t,nn))
24236                            ) *
24237                            (
24238                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_mena',nn)), K_RD(rd,t,nn)) +
24239                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_mena',nn))), K_RD.l(rd,t,nn))
24240                              ) - K_RD(rd,t,n)
24241                            );
24242   
24243  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
24244  eqspill_lead_c_mena(rd,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_mena')) and leadrd(rd,n))..
24245                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
24246   
24247  * No-cooperation : a follower sees is negative effect on the quantity he can grab
24248  eqspill_foll_c_mena(rd,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_mena')) and (not leadrd(rd,n)))..
24249                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
24250   
24251  *- Only LbR (without learning by doing)
24252  eqmcost_inv_back_c_mena(jrd,t,tt,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
24253                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
24254                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
24255   
24256  *- LbR together with learning by doing ==> Two-factor learning curve
24257  eqmcost_inv_back_lbd_c_mena(jrd,t,tt,tfirst,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
24258                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
24259                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
24260                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
24261   
24262  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
24265  *-------------------------------------------------------------------------------
24266  * Default Climate Policy Implementation
24267  *
24268  * Options:
24269  *    --policy={bau (default),ctax}
24270  *        Implement a climate policy setting
24271  *  [ --scen= ]
24272  *        Policy variant.
24273  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
24274  *          * XXX for a fixed percentage/yr (e.g. 5) growth
24275  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
24276  *  [ --ctax_year=2020 ]
24277  *        Starting year of the carbon tax
24278  *  [ --ctax_initial=30 ]
24279  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
24280  *
24281  *-------------------------------------------------------------------------------
24283   
24284  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
24286  *-------------------------------------------------------------------------------
24287  * Energy efficiency
24288  *-------------------------------------------------------------------------------
24289   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
24292  *-------------------------------------------------------------------------------
24293  * Hydro Power
24294  *-------------------------------------------------------------------------------
24295   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
24298  *-------------------------------------------------------------------------------
24299  * System Integration:
24300  * - Capacity constraint
24301  * - Flexibility constraint
24302  * - Grid Investment
24303  * - Capacity growth constraint
24304  *-------------------------------------------------------------------------------
24305   
24307   
24308   
24309  * Renewable CES
24310   
24311  * Definition of the renewable CES
24312  eqq_elintren_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24313      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
24314   
24315  * Capacity constraint
24316   
24318  eqfirm_capacity_c_mena(t,n)$(map_clt_n('c_mena',n) and (not tfix(t)) and year(t) gt 2005)..
24319                   sum(jel_firm, K_EN(jel_firm,t,n))
24320                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
24321                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
24322                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
24323                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
24324                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
24325                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
24326                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
24327                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
24328                                       ) / yearly_hours
24329  ;
24331   
24332  * Flexibility constraint
24333  eqflex_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24334          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
24335                             ( Q_EN('el',t,n) -
24336                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
24337                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
24338                             ) * flex_coeff('load')
24339  ;
24340   
24341  * Grid
24342   
24343  ** Grid depreciation and investments
24344  eqk_en_grid_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
24345                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
24346                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
24347   
24348  ** Grid adjustment to power capacity
24349  eqk_en_grid_to_k_en_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24350                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
24351                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
24352                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
24353                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
24354                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
24355                                     ) / grid_cost +
24356                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
24357                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
24358                                      K_EN('elcsp',t,n);
24359  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
24360   
24361  * Capacity growth constraint
24362  eqcap_growth_c_mena(jinv,t,tp1,tp2,n)$((map_clt_n('c_mena',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
24363                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
24364                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
24365   
24366  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
24369  *-------------------------------------------------------------------------------
24370  * Nuclear power plants
24371  *-------------------------------------------------------------------------------
24372   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
24375  *-------------------------------------------------------------------------------
24376  * GHG module
24377  * - CH4 FFI + CH4 waste + CH4 open fires
24378  * - N2O FFI + N2O waste + N2O open fires
24379  *-------------------------------------------------------------------------------
24380   
24382   
24383  * CH4, N2O waste emissions
24384  eqq_emi_waste_c_mena(waste,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
24385                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
24386   
24387  * n2o FFI
24388  eqq_emi_n2o_ffi_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
24389    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
24390                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
24391                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
24392                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
24393                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
24394                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
24395                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
24396                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
24397                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
24398                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
24399                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
24400                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
24401                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
24402                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
24403                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
24404                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
24405                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
24406                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
24407                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
24408                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
24409                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
24410                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
24411                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
24412                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
24413                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
24414                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
24415                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
24416                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
24417                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
24418                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
24419                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
24420   
24421  * ch4 FFI
24422  eqq_emi_ch4_ffi_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
24423    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
24426  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
24427  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
24428                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
24429                             smax(tt$(year(tt) eq 2015),
24430                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
24433  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
24434  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
24435                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
24436   
24437  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
24440  *-------------------------------------------------------------------------------
24441  * F-gases
24442  * - LLF
24443  * - SLF
24444  *-------------------------------------------------------------------------------
24445   
24447   
24448  * F-gases emissions
24449  eqq_emi_fgases_c_mena(fgases,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
24450                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
24451   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
24454  *-------------------------------------------------------------------------------
24455  * Landuse [simplified version of the land-use model]
24456  *-------------------------------------------------------------------------------
24457   
24459   
24460  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
24461  eq_wbio_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24462      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
24463   
24465  * Cost of all woody biomass produced for advanced biofuels and woody biomass
24466  eqcost_pes_wbio_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24467      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
24469   
24470  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
24473  *-------------------------------------------------------------------------------
24474  * Bioenergy power plant
24475  *-------------------------------------------------------------------------------
24476   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
24479  *-------------------------------------------------------------------------------
24480  * Traditional Biofuels
24481  * - Requires the precedence of mod_landuse
24482  *-------------------------------------------------------------------------------
24483   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
24486  *-------------------------------------------------------------------------------
24487  * Advanced biofuel
24488  * - Require the precedence of mod_landuse
24489  *-------------------------------------------------------------------------------
24490   
24492   
24493  * Limitations for nel backstops
24494  eqq_en_lim_advbiofuel_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
24495               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
24496               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
24497   
24498  * Peculiarity of advbiofuel
24499  eqmcost_fuel_advbiofuel_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24500                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
24501   
24502  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
24505  *-------------------------------------------------------------------------------
24506  * Carbon Capture and Sequestration
24507  *-------------------------------------------------------------------------------
24508   
24510   
24511  eqq_emi_ccs_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24512                  Q_EMI('ccs_plant',t,n) =e=
24513                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
24514                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
24515  ;
24516   
24517  eqcost_emi_sinks_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24518                  COST_EMI('ccs_plant',t,n) =e=
24519                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
24520                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
24521  ;
24522   
24523  eq_stor_ccs_cum_c_mena(ccs_stor,tp1,t,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
24524                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
24525  ;
24526   
24527  eq_emi_stor_ccs_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24528                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
24529  ;
24530   
24531  eq_emi_leak_ccs_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24532                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
24533   
24534  *-------------------------------------------------------------------------------
24536   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
24538  *-------------------------------------------------------------------------------
24539  * Coal for non-electric sectors
24540  * - Coke Plants
24541  * - Industrial and Commercial combined-heat-and-power (CHP)
24542  * - Others
24543  *-------------------------------------------------------------------------------
24544   
24546   
24547  eqcost_en_nelcoal_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24548           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
24549                                          nelcoal_max_abat(t,n) *
24550                                          (nelcoal_cmac(n,'a') *
24551                                            Q_EN('nelcoalabat',t,n) /
24552                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
24553                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
24554                                              (exp(nelcoal_cmac(n,'c') *
24555                                                (Q_EN('nelcoalabat',t,n)/
24556                                                  (nelcoal_max_abat(t,n) *
24557                                                      nelcoal_baseline(t,n))
24558                                                  ) - 1 )
24559                                              )
24560                                          );
24561   
24562  eqq_ncoalabat_monotone_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
24563          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
24564   
24565  * ensure Q_EN is lower than K_EN for CCS as not in jel
24566  eqq_en_nelcoalccs_max_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24567          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
24568   
24569  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
24572  *-------------------------------------------------------------------------------
24573  * Wind energy module
24574  * - onshore and offshore
24575  *-------------------------------------------------------------------------------
24576   
24578   
24579  * Capacity limits in the wind onshore electrical sector
24580  eqq_en_mu_windon_c_mena(wind_dist,wind_class,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
24581      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
24582   
24583  * Capacity limits in the wind offshore electrical sector
24584  eqq_en_mu_windoff_c_mena(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
24585      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
24586   
24587  * Wind onshore electrical generation plants (new)
24588  eqk_en_windon_c_mena(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
24589      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
24590                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
24591   
24592  * Wind offshore electrical generation plants (new)
24593  eqk_en_windoff_c_mena(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
24594      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
24595                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
24596   
24597  * Total onshore wind energy production
24598  eqq_en_windon_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24599                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
24600   
24601  * Total offshore wind energy production
24602  eqq_en_windoff_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24603                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
24604   
24605  * Total onshore wind capacity
24606  eqk_en_windon_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24607                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
24608   
24609  * Total offshore wind capacity
24610  eqk_en_windoff_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24611                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
24612   
24613  * Total onshore wind investment
24614  eqi_en_windon_sum_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
24615                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
24616   
24617  * Total offshore wind investment
24618  eqi_en_windoff_sum_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
24619                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
24620   
24621  *-------------------------------------------------------------------------------
24623   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
24625  *-------------------------------------------------------------------------------
24626  * Solar Powerplants (PV and CSP) to the electrical system
24627  *-------------------------------------------------------------------------------
24628   
24629  *-------------------------------------------------------------------------------
24631   
24632   
24633  * Capacity limits in the pv electrical sector
24634  eqq_en_mu_pv_c_mena(solar_dist,solar_class,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
24635                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
24636   
24637  * Capacity limits in the csp electrical sector
24638  eqq_en_mu_csp_c_mena(solar_dist,solar_class,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
24639                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
24640   
24641  * PV electrical generation plants (new)
24642  eqk_en_pv_c_mena(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
24643                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
24644                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
24645   
24646  * CSP electrical generation plants (new)
24647  eqk_en_csp_c_mena(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
24648                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
24649                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
24650   
24651  * Total PV energy production
24652  eqq_en_pv_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24653                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
24654   
24655  * Total CSP energy production
24656  eqq_en_csp_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24657                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
24658   
24659  * Total PV capacity
24660  eqk_en_pv_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24661                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
24662   
24663  * Total CSP capacity
24664  eqk_en_csp_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24665                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
24666   
24667  * Total PV investment
24668  eqi_en_pv_sum_c_mena(t,tp1,n)$(map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
24669                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
24670   
24671  * Total CSP investment
24672  eqi_en_csp_sum_c_mena(t,tp1,n)$(map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
24673                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
24674   
24675  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
24676  eqk_en_solar_comp_c_mena(t,n,solar_dist)$(map_clt_n('c_mena',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
24677                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
24678                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
24679   
24680   
24681   
24682  *-------------------------------------------------------------------------------
24684   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
24686  *-------------------------------------------------------------------------------
24687  * Technology development scenarios
24688  *-------------------------------------------------------------------------------
24689   
24691   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
24693  *-------------------------------------------------------------------------------
24694  * Oil Extraction
24695  * Options:
24696  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
24697  *-------------------------------------------------------------------------------
24698   
24700   
24701  * Capacity
24702  eqoilcap_c_mena(t,tp1,n,oilg)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
24703      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
24704   
24705  * Production
24706  eqoilprod_c_mena(t,tp1,n,oilg)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
24707      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
24708   
24709  eqq_out_oil_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24710      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
24711   
24712  * Cumulative production
24713  eqcum_oil_c_mena(t,tp1,n,oilg)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
24714      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
24715   
24716  * Cost
24717  eqcost_oil_c_mena(t,tp1,n,oilg)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
24718      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
24719                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
24720                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
24721   
24722  * Investments
24723  eqi_oil_c_mena(t,tp1,n,oilg)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
24724      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
24725   
24726  * Total investment
24727  eqi_out_oil_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
24728      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
24729   
24730  * Emissions
24731  eqq_emi_out_oil_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24732      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
24733   
24734  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
24737  *-------------------------------------------------------------------------------
24738  * Uranium Resources
24739  *-------------------------------------------------------------------------------
24740   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
24743  *-------------------------------------------------------------------------------
24744  * Gas Resources
24745  *-------------------------------------------------------------------------------
24746   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
24749  *-------------------------------------------------------------------------------
24750  * Coal Resources
24751  *-------------------------------------------------------------------------------
24752   
24754   
24755   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
24757  *-------------------------------------------------------------------------------
24758  * Climate
24759  *
24760  * Represents the climate
24761  * - based on the DICE model equations
24762  * - Radiative forcing for non CO2 ghgs
24763  * - parameters calibrated to reproduce MAGICC6.4 default response
24764  *
24765  *  Options:
24766  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
24767  * - $setglobal cooperate_on_climate {'YES','NO'}
24768  * - 'YES'(default): Countries within a coalition act in cooperation
24769  *   'NO': Countries within a coalition act individually
24770  *
24771  *-------------------------------------------------------------------------------
24772   
24774   
24776   
24777  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
24780  *-------------------------------------------------------------------------------
24781  * Long-run Damages from Climate Change
24782  * - Economic impacts
24783  * - Adaptation
24784  *-------------------------------------------------------------------------------
24785   
24787   
24789   
24790  *-------------------------------------------------------------------------------
24792   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
24794  *-------------------------------------------------------------------------------
24795  * Light-duty Vehicles for Personal Transport
24796  *-------------------------------------------------------------------------------
24797   
24799   
24800  *** newcode
24801  eqq_inv_red_ban_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24802      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
24803   
24804  ***
24805  *- Number of light duty vehicles
24806  eqnb_veh_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24807      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
24808   
24809  *- Yearly energy demand of vehicles
24810  eqq_en_veh_c_mena(jveh,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24811      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
24812   
24813  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
24814  eqq_el_edv_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24815      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
24816   
24817  *- Investment cost for hybrid vehicles
24818  eqmcost_inv_hybrid_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
24819                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
24820   
24821  *- Investment cost for plug-in hybrid vehicles
24822  eqmcost_inv_plghybrid_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
24823                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
24824   
24825  *- Investment cost for electric drive vehicles
24826  eqmcost_inv_edv_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
24827                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
24828   
24829  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
24832  *-------------------------------------------------------------------------------
24833  * Road Freight Transport
24834  *-------------------------------------------------------------------------------
24836   
24837  *-  Number of freight vehicles
24838  eqnb_frtveh_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24839                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
24840   
24841  *-  Yearly fuel consumption of freight vehicles
24842  eqq_en_frtveh_c_mena(jfrt,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24843                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
24844   
24845  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
24846  eqq_el_frtedv_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24847                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
24848   
24849  *-  Investment cost for hbd_stfr vehicle
24850  eqmcost_inv_hbd_stfr_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
24851                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
24852   
24853  *-  Investment cost for plug-in hbd_stfr vehicle
24854  eqmcost_inv_plghbd_stfr_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
24855                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
24856   
24857  *-  Investment cost for electric drive vehicle
24858  eqmcost_inv_edv_stfr_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
24859                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
24860   
24861  *-------------------------------------------------------------------------------
24863   
24864   
24865   
24866   
24867   
24868   
24869  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
24871  *-------------------------------------------------------------------------------
24872  * Traditional Biomass
24873  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
24874  *  - require post_process to be launch before
24875  *-------------------------------------------------------------------------------
24876   
24878   
24879  * Optional modules
24880   
24881  * Policy modules
24882   
24883  * Calibration
24886   
24887   
24888  model witch_c_mena /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
24890  *-------------------------------------------------------------------------------
24891  * Call modules by order
24892  *-------------------------------------------------------------------------------
24896   
24897  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
24899  *-------------------------------------------------------------------------------
24900  * Algorithm
24901  *-------------------------------------------------------------------------------
24902   
24904   
24905  eqobj_c_mena
24906   
24907  *-------------------------------------------------------------------------------
24909   
24910  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
24912  *-------------------------------------------------------------------------------
24913  * Time
24914  * - Temporal structure
24915  * - Fixed time periods
24916  * - States of the world
24917  *-------------------------------------------------------------------------------
24918   
24920   
24921  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
24923  *-------------------------------------------------------------------------------
24924  * Geographic dimension and mapping with countries
24925  *-------------------------------------------------------------------------------
24926   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
24929  *-------------------------------------------------------------------------------
24930  * Non-Cooperative Setup
24931  *
24932  * Each region is defined as an individual coalition.
24933  *
24934  *-------------------------------------------------------------------------------
24935   
24937   
24938  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
24940  *-------------------------------------------------------------------------------
24941  * Welfare
24942  *-------------------------------------------------------------------------------
24943   
24945   
24946  equtility_c_mena
24947   
24948  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
24951  *-------------------------------------------------------------------------------
24952  * Economy
24953  * - Production and Consumption definition
24954  * - Top-level of the production function
24955  * Options:
24956  * --original_ssp=1 : original SSP population and GDP data
24957  *-------------------------------------------------------------------------------
24958   
24960   
24961  eqk_c_mena
24962  eqq_cc_c_mena
24963  eqq_fen_c_mena
24964  eqq_y_c_mena
24965   
24966  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
24969  *-------------------------------------------------------------------------------
24970  * Energy sector
24971  *-------------------------------------------------------------------------------
24972   
24974   
24975  eq_mkt_clearing_oil_c_mena
24976  eqcost_pes_c_mena
24977  eqcost_ses_c_mena
24978  eqk_en_c_mena
24979  eqq_ces_el_c_mena
24980  eqq_ces_nelgas_c_mena
24981  eqq_el2_c_mena
24982  eqq_el_c_mena
24983  eqq_elff_c_mena
24984  eqq_en_c_mena
24985  eqq_en_in_c_mena
24986  eqq_en_mu_c_mena
24987  eqq_en_tree_c_mena
24988  eqq_nel_c_mena
24989  eqq_nelog_c_mena
24990  eqq_fuel_c_mena
24991  eqq_elffren_c_mena
24992   
24993  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
24996  *-------------------------------------------------------------------------------
24997  * Carbon Emissions
24998  * - Total CO2 emissions and CO2 Fossil fuel and Industry
24999  * - CO2 emission costs
25000  * - GHG permit market
25001  *-------------------------------------------------------------------------------
25002   
25004   
25005  eqq_emi_lim_c_mena
25006  ***newcode
25007  eqq_emi_lim_USAc_mena
25008  ***
25009  eqq_emi_tree_c_mena
25010  eqq_emi_co2ffi_c_mena
25011   
25012  eqcost_emi_co2_c_mena
25013   
25014  eq_mkt_clearing_nip_c_mena
25015   
25016  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
25019  *-------------------------------------------------------------------------------
25020  * Research & Development
25021  * Options:
25022  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
25023  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
25024  *-------------------------------------------------------------------------------
25025   
25027   
25028  eqk_rd_c_mena
25029  eqspill_coop_c_mena
25030  eqspill_lead_c_mena
25031  eqspill_foll_c_mena
25032  eqmcost_inv_back_c_mena
25033  eqmcost_inv_back_lbd_c_mena
25034   
25035  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
25038  *-------------------------------------------------------------------------------
25039  * Default Climate Policy Implementation
25040  *
25041  * Options:
25042  *    --policy={bau (default),ctax}
25043  *        Implement a climate policy setting
25044  *  [ --scen= ]
25045  *        Policy variant.
25046  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
25047  *          * XXX for a fixed percentage/yr (e.g. 5) growth
25048  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
25049  *  [ --ctax_year=2020 ]
25050  *        Starting year of the carbon tax
25051  *  [ --ctax_initial=30 ]
25052  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
25053  *
25054  *-------------------------------------------------------------------------------
25056   
25057  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
25059  *-------------------------------------------------------------------------------
25060  * Energy efficiency
25061  *-------------------------------------------------------------------------------
25062   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
25065  *-------------------------------------------------------------------------------
25066  * Hydro Power
25067  *-------------------------------------------------------------------------------
25068   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
25071  *-------------------------------------------------------------------------------
25072  * System Integration:
25073  * - Capacity constraint
25074  * - Flexibility constraint
25075  * - Grid Investment
25076  * - Capacity growth constraint
25077  *-------------------------------------------------------------------------------
25078   
25080   
25081  eqq_elintren_c_mena
25082  eqflex_c_mena
25083  eqk_en_grid_c_mena
25084  eqk_en_grid_to_k_en_c_mena
25085  eqfirm_capacity_c_mena
25086  eqcap_growth_c_mena
25087   
25088  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
25091  *-------------------------------------------------------------------------------
25092  * Nuclear power plants
25093  *-------------------------------------------------------------------------------
25094   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
25097  *-------------------------------------------------------------------------------
25098  * GHG module
25099  * - CH4 FFI + CH4 waste + CH4 open fires
25100  * - N2O FFI + N2O waste + N2O open fires
25101  *-------------------------------------------------------------------------------
25102   
25104   
25105  eqq_emi_waste_c_mena
25106  eqq_emi_n2o_ffi_c_mena
25107  eqq_emi_ch4_ffi_c_mena
25108   
25109  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
25112  *-------------------------------------------------------------------------------
25113  * F-gases
25114  * - LLF
25115  * - SLF
25116  *-------------------------------------------------------------------------------
25117   
25119   
25120  eqq_emi_fgases_c_mena
25121   
25122  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
25125  *-------------------------------------------------------------------------------
25126  * Landuse [simplified version of the land-use model]
25127  *-------------------------------------------------------------------------------
25128   
25130   
25131  eq_wbio_c_mena
25132  eqcost_pes_wbio_c_mena
25133   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
25136  *-------------------------------------------------------------------------------
25137  * Bioenergy power plant
25138  *-------------------------------------------------------------------------------
25139   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
25142  *-------------------------------------------------------------------------------
25143  * Traditional Biofuels
25144  * - Requires the precedence of mod_landuse
25145  *-------------------------------------------------------------------------------
25146   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
25149  *-------------------------------------------------------------------------------
25150  * Advanced biofuel
25151  * - Require the precedence of mod_landuse
25152  *-------------------------------------------------------------------------------
25153   
25155   
25156  eqq_en_lim_advbiofuel_c_mena
25157  eqmcost_fuel_advbiofuel_c_mena
25158   
25159  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
25162  *-------------------------------------------------------------------------------
25163  * Carbon Capture and Sequestration
25164  *-------------------------------------------------------------------------------
25165   
25167   
25168  eqq_emi_ccs_c_mena
25169  eqcost_emi_sinks_c_mena
25170  eq_stor_ccs_cum_c_mena
25171  eq_emi_stor_ccs_c_mena
25172  eq_emi_leak_ccs_c_mena
25173   
25174  *-------------------------------------------------------------------------------
25176   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
25178  *-------------------------------------------------------------------------------
25179  * Coal for non-electric sectors
25180  * - Coke Plants
25181  * - Industrial and Commercial combined-heat-and-power (CHP)
25182  * - Others
25183  *-------------------------------------------------------------------------------
25184   
25186   
25187  eqcost_en_nelcoal_c_mena
25188  eqq_ncoalabat_monotone_c_mena
25189  eqq_en_nelcoalccs_max_c_mena
25190   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
25193  *-------------------------------------------------------------------------------
25194  * Wind energy module
25195  * - onshore and offshore
25196  *-------------------------------------------------------------------------------
25197   
25199   
25200  eqq_en_mu_windon_c_mena
25201  eqq_en_mu_windoff_c_mena
25202  eqk_en_windon_c_mena
25203  eqk_en_windoff_c_mena
25204  eqq_en_windon_sum_c_mena
25205  eqq_en_windoff_sum_c_mena
25206  eqk_en_windon_sum_c_mena
25207  eqk_en_windoff_sum_c_mena
25208  eqi_en_windon_sum_c_mena
25209  eqi_en_windoff_sum_c_mena
25210   
25212   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
25214  *-------------------------------------------------------------------------------
25215  * Solar Powerplants (PV and CSP) to the electrical system
25216  *-------------------------------------------------------------------------------
25217   
25218  *-------------------------------------------------------------------------------
25220   
25221  eqq_en_mu_pv_c_mena
25222  eqq_en_mu_csp_c_mena
25223  eqk_en_pv_c_mena
25224  eqk_en_csp_c_mena
25225  eqq_en_pv_sum_c_mena
25226  eqq_en_csp_sum_c_mena
25227  eqk_en_pv_sum_c_mena
25228  eqk_en_csp_sum_c_mena
25229  eqi_en_pv_sum_c_mena
25230  eqi_en_csp_sum_c_mena
25231  eqk_en_solar_comp_c_mena
25232   
25233  *-------------------------------------------------------------------------------
25235   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
25237  *-------------------------------------------------------------------------------
25238  * Technology development scenarios
25239  *-------------------------------------------------------------------------------
25240   
25242   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
25244  *-------------------------------------------------------------------------------
25245  * Oil Extraction
25246  * Options:
25247  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
25248  *-------------------------------------------------------------------------------
25249   
25251   
25252  eqoilcap_c_mena
25253  eqoilprod_c_mena
25254  eqq_out_oil_c_mena
25255  eqcum_oil_c_mena
25256  eqcost_oil_c_mena
25257  eqi_oil_c_mena
25258  eqi_out_oil_c_mena
25259  eqq_emi_out_oil_c_mena
25260   
25261  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
25264  *-------------------------------------------------------------------------------
25265  * Uranium Resources
25266  *-------------------------------------------------------------------------------
25267   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
25270  *-------------------------------------------------------------------------------
25271  * Gas Resources
25272  *-------------------------------------------------------------------------------
25273   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
25276  *-------------------------------------------------------------------------------
25277  * Coal Resources
25278  *-------------------------------------------------------------------------------
25279   
25281   
25282   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
25284  *-------------------------------------------------------------------------------
25285  * Climate
25286  *
25287  * Represents the climate
25288  * - based on the DICE model equations
25289  * - Radiative forcing for non CO2 ghgs
25290  * - parameters calibrated to reproduce MAGICC6.4 default response
25291  *
25292  *  Options:
25293  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
25294  * - $setglobal cooperate_on_climate {'YES','NO'}
25295  * - 'YES'(default): Countries within a coalition act in cooperation
25296  *   'NO': Countries within a coalition act individually
25297  *
25298  *-------------------------------------------------------------------------------
25299   
25301   
25303   
25304  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
25307  *-------------------------------------------------------------------------------
25308  * Long-run Damages from Climate Change
25309  * - Economic impacts
25310  * - Adaptation
25311  *-------------------------------------------------------------------------------
25312   
25314   
25316   
25317  *-------------------------------------------------------------------------------
25319   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
25321  *-------------------------------------------------------------------------------
25322  * Light-duty Vehicles for Personal Transport
25323  *-------------------------------------------------------------------------------
25324   
25326   
25327  eqnb_veh_c_mena
25328  eqq_en_veh_c_mena
25329  eqq_el_edv_c_mena
25330  eqmcost_inv_hybrid_c_mena
25331  eqmcost_inv_plghybrid_c_mena
25332  eqmcost_inv_edv_c_mena
25333  *** newcode
25334  eqq_inv_red_ban_c_mena
25335  ***
25336  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
25339  *-------------------------------------------------------------------------------
25340  * Road Freight Transport
25341  *-------------------------------------------------------------------------------
25343   
25344  eqnb_frtveh_c_mena
25345  eqq_en_frtveh_c_mena
25346  eqq_el_frtedv_c_mena
25347  eqmcost_inv_hbd_stfr_c_mena
25348  eqmcost_inv_plghbd_stfr_c_mena
25349  eqmcost_inv_edv_stfr_c_mena
25350   
25351  *-------------------------------------------------------------------------------
25353   
25354   
25355   
25356   
25357   
25358   
25359  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
25361  *-------------------------------------------------------------------------------
25362  * Traditional Biomass
25363  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
25364  *  - require post_process to be launch before
25365  *-------------------------------------------------------------------------------
25366   
25368   
25369  * Optional modules
25370   
25371  * Policy modules
25372   
25373  * Calibration
25376  /;
25377   
25378  witch_c_mena.optfile=1;   # the option file solvername.opt is to be used
25379  witch_c_mena.holdfixed=1; # treat fixed values as constant
25380  witch_c_mena.scaleopt=1;  # Use scaling for better gradients estimation
25381  witch_c_mena.solvelink=3; # Use parallel or sequential solving
25382   
25387   
25388  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
25390  *-------------------------------------------------------------------------------
25391  * Call modules by order
25392  *-------------------------------------------------------------------------------
25396   
25397  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
25399  *-------------------------------------------------------------------------------
25400  * Algorithm
25401  *-------------------------------------------------------------------------------
25402   
25404   
25405  eqobj_c_mexico
25406   
25407  *-------------------------------------------------------------------------------
25409   
25410  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
25412  *-------------------------------------------------------------------------------
25413  * Time
25414  * - Temporal structure
25415  * - Fixed time periods
25416  * - States of the world
25417  *-------------------------------------------------------------------------------
25418   
25420   
25421  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
25423  *-------------------------------------------------------------------------------
25424  * Geographic dimension and mapping with countries
25425  *-------------------------------------------------------------------------------
25426   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
25429  *-------------------------------------------------------------------------------
25430  * Non-Cooperative Setup
25431  *
25432  * Each region is defined as an individual coalition.
25433  *
25434  *-------------------------------------------------------------------------------
25435   
25437   
25438  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
25440  *-------------------------------------------------------------------------------
25441  * Welfare
25442  *-------------------------------------------------------------------------------
25443   
25445   
25446  equtility_c_mexico
25447   
25448  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
25451  *-------------------------------------------------------------------------------
25452  * Economy
25453  * - Production and Consumption definition
25454  * - Top-level of the production function
25455  * Options:
25456  * --original_ssp=1 : original SSP population and GDP data
25457  *-------------------------------------------------------------------------------
25458   
25460   
25461  eqk_c_mexico
25462  eqq_cc_c_mexico
25463  eqq_fen_c_mexico
25464  eqq_y_c_mexico
25465   
25466  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
25469  *-------------------------------------------------------------------------------
25470  * Energy sector
25471  *-------------------------------------------------------------------------------
25472   
25474   
25475  eq_mkt_clearing_oil_c_mexico
25476  eqcost_pes_c_mexico
25477  eqcost_ses_c_mexico
25478  eqk_en_c_mexico
25479  eqq_ces_el_c_mexico
25480  eqq_ces_nelgas_c_mexico
25481  eqq_el2_c_mexico
25482  eqq_el_c_mexico
25483  eqq_elff_c_mexico
25484  eqq_en_c_mexico
25485  eqq_en_in_c_mexico
25486  eqq_en_mu_c_mexico
25487  eqq_en_tree_c_mexico
25488  eqq_nel_c_mexico
25489  eqq_nelog_c_mexico
25490  eqq_fuel_c_mexico
25491  eqq_elffren_c_mexico
25492   
25493  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
25496  *-------------------------------------------------------------------------------
25497  * Carbon Emissions
25498  * - Total CO2 emissions and CO2 Fossil fuel and Industry
25499  * - CO2 emission costs
25500  * - GHG permit market
25501  *-------------------------------------------------------------------------------
25502   
25504   
25505  eqq_emi_lim_c_mexico
25506  ***newcode
25507  eqq_emi_lim_USAc_mexico
25508  ***
25509  eqq_emi_tree_c_mexico
25510  eqq_emi_co2ffi_c_mexico
25511   
25512  eqcost_emi_co2_c_mexico
25513   
25514  eq_mkt_clearing_nip_c_mexico
25515   
25516  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
25519  *-------------------------------------------------------------------------------
25520  * Research & Development
25521  * Options:
25522  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
25523  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
25524  *-------------------------------------------------------------------------------
25525   
25527   
25528  eqk_rd_c_mexico
25529  eqspill_coop_c_mexico
25530  eqspill_lead_c_mexico
25531  eqspill_foll_c_mexico
25532  eqmcost_inv_back_c_mexico
25533  eqmcost_inv_back_lbd_c_mexico
25534   
25535  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
25538  *-------------------------------------------------------------------------------
25539  * Default Climate Policy Implementation
25540  *
25541  * Options:
25542  *    --policy={bau (default),ctax}
25543  *        Implement a climate policy setting
25544  *  [ --scen= ]
25545  *        Policy variant.
25546  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
25547  *          * XXX for a fixed percentage/yr (e.g. 5) growth
25548  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
25549  *  [ --ctax_year=2020 ]
25550  *        Starting year of the carbon tax
25551  *  [ --ctax_initial=30 ]
25552  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
25553  *
25554  *-------------------------------------------------------------------------------
25556   
25557  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
25559  *-------------------------------------------------------------------------------
25560  * Energy efficiency
25561  *-------------------------------------------------------------------------------
25562   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
25565  *-------------------------------------------------------------------------------
25566  * Hydro Power
25567  *-------------------------------------------------------------------------------
25568   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
25571  *-------------------------------------------------------------------------------
25572  * System Integration:
25573  * - Capacity constraint
25574  * - Flexibility constraint
25575  * - Grid Investment
25576  * - Capacity growth constraint
25577  *-------------------------------------------------------------------------------
25578   
25580   
25581  eqq_elintren_c_mexico
25582  eqflex_c_mexico
25583  eqk_en_grid_c_mexico
25584  eqk_en_grid_to_k_en_c_mexico
25585  eqfirm_capacity_c_mexico
25586  eqcap_growth_c_mexico
25587   
25588  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
25591  *-------------------------------------------------------------------------------
25592  * Nuclear power plants
25593  *-------------------------------------------------------------------------------
25594   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
25597  *-------------------------------------------------------------------------------
25598  * GHG module
25599  * - CH4 FFI + CH4 waste + CH4 open fires
25600  * - N2O FFI + N2O waste + N2O open fires
25601  *-------------------------------------------------------------------------------
25602   
25604   
25605  eqq_emi_waste_c_mexico
25606  eqq_emi_n2o_ffi_c_mexico
25607  eqq_emi_ch4_ffi_c_mexico
25608   
25609  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
25612  *-------------------------------------------------------------------------------
25613  * F-gases
25614  * - LLF
25615  * - SLF
25616  *-------------------------------------------------------------------------------
25617   
25619   
25620  eqq_emi_fgases_c_mexico
25621   
25622  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
25625  *-------------------------------------------------------------------------------
25626  * Landuse [simplified version of the land-use model]
25627  *-------------------------------------------------------------------------------
25628   
25630   
25631  eq_wbio_c_mexico
25632  eqcost_pes_wbio_c_mexico
25633   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
25636  *-------------------------------------------------------------------------------
25637  * Bioenergy power plant
25638  *-------------------------------------------------------------------------------
25639   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
25642  *-------------------------------------------------------------------------------
25643  * Traditional Biofuels
25644  * - Requires the precedence of mod_landuse
25645  *-------------------------------------------------------------------------------
25646   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
25649  *-------------------------------------------------------------------------------
25650  * Advanced biofuel
25651  * - Require the precedence of mod_landuse
25652  *-------------------------------------------------------------------------------
25653   
25655   
25656  eqq_en_lim_advbiofuel_c_mexico
25657  eqmcost_fuel_advbiofuel_c_mexico
25658   
25659  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
25662  *-------------------------------------------------------------------------------
25663  * Carbon Capture and Sequestration
25664  *-------------------------------------------------------------------------------
25665   
25667   
25668  eqq_emi_ccs_c_mexico
25669  eqcost_emi_sinks_c_mexico
25670  eq_stor_ccs_cum_c_mexico
25671  eq_emi_stor_ccs_c_mexico
25672  eq_emi_leak_ccs_c_mexico
25673   
25674  *-------------------------------------------------------------------------------
25676   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
25678  *-------------------------------------------------------------------------------
25679  * Coal for non-electric sectors
25680  * - Coke Plants
25681  * - Industrial and Commercial combined-heat-and-power (CHP)
25682  * - Others
25683  *-------------------------------------------------------------------------------
25684   
25686   
25687  eqcost_en_nelcoal_c_mexico
25688  eqq_ncoalabat_monotone_c_mexico
25689  eqq_en_nelcoalccs_max_c_mexico
25690   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
25693  *-------------------------------------------------------------------------------
25694  * Wind energy module
25695  * - onshore and offshore
25696  *-------------------------------------------------------------------------------
25697   
25699   
25700  eqq_en_mu_windon_c_mexico
25701  eqq_en_mu_windoff_c_mexico
25702  eqk_en_windon_c_mexico
25703  eqk_en_windoff_c_mexico
25704  eqq_en_windon_sum_c_mexico
25705  eqq_en_windoff_sum_c_mexico
25706  eqk_en_windon_sum_c_mexico
25707  eqk_en_windoff_sum_c_mexico
25708  eqi_en_windon_sum_c_mexico
25709  eqi_en_windoff_sum_c_mexico
25710   
25712   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
25714  *-------------------------------------------------------------------------------
25715  * Solar Powerplants (PV and CSP) to the electrical system
25716  *-------------------------------------------------------------------------------
25717   
25718  *-------------------------------------------------------------------------------
25720   
25721  eqq_en_mu_pv_c_mexico
25722  eqq_en_mu_csp_c_mexico
25723  eqk_en_pv_c_mexico
25724  eqk_en_csp_c_mexico
25725  eqq_en_pv_sum_c_mexico
25726  eqq_en_csp_sum_c_mexico
25727  eqk_en_pv_sum_c_mexico
25728  eqk_en_csp_sum_c_mexico
25729  eqi_en_pv_sum_c_mexico
25730  eqi_en_csp_sum_c_mexico
25731  eqk_en_solar_comp_c_mexico
25732   
25733  *-------------------------------------------------------------------------------
25735   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
25737  *-------------------------------------------------------------------------------
25738  * Technology development scenarios
25739  *-------------------------------------------------------------------------------
25740   
25742   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
25744  *-------------------------------------------------------------------------------
25745  * Oil Extraction
25746  * Options:
25747  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
25748  *-------------------------------------------------------------------------------
25749   
25751   
25752  eqoilcap_c_mexico
25753  eqoilprod_c_mexico
25754  eqq_out_oil_c_mexico
25755  eqcum_oil_c_mexico
25756  eqcost_oil_c_mexico
25757  eqi_oil_c_mexico
25758  eqi_out_oil_c_mexico
25759  eqq_emi_out_oil_c_mexico
25760   
25761  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
25764  *-------------------------------------------------------------------------------
25765  * Uranium Resources
25766  *-------------------------------------------------------------------------------
25767   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
25770  *-------------------------------------------------------------------------------
25771  * Gas Resources
25772  *-------------------------------------------------------------------------------
25773   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
25776  *-------------------------------------------------------------------------------
25777  * Coal Resources
25778  *-------------------------------------------------------------------------------
25779   
25781   
25782   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
25784  *-------------------------------------------------------------------------------
25785  * Climate
25786  *
25787  * Represents the climate
25788  * - based on the DICE model equations
25789  * - Radiative forcing for non CO2 ghgs
25790  * - parameters calibrated to reproduce MAGICC6.4 default response
25791  *
25792  *  Options:
25793  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
25794  * - $setglobal cooperate_on_climate {'YES','NO'}
25795  * - 'YES'(default): Countries within a coalition act in cooperation
25796  *   'NO': Countries within a coalition act individually
25797  *
25798  *-------------------------------------------------------------------------------
25799   
25801   
25803   
25804  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
25807  *-------------------------------------------------------------------------------
25808  * Long-run Damages from Climate Change
25809  * - Economic impacts
25810  * - Adaptation
25811  *-------------------------------------------------------------------------------
25812   
25814   
25816   
25817  *-------------------------------------------------------------------------------
25819   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
25821  *-------------------------------------------------------------------------------
25822  * Light-duty Vehicles for Personal Transport
25823  *-------------------------------------------------------------------------------
25824   
25826   
25827  eqnb_veh_c_mexico
25828  eqq_en_veh_c_mexico
25829  eqq_el_edv_c_mexico
25830  eqmcost_inv_hybrid_c_mexico
25831  eqmcost_inv_plghybrid_c_mexico
25832  eqmcost_inv_edv_c_mexico
25833  *** newcode
25834  eqq_inv_red_ban_c_mexico
25835  ***
25836  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
25839  *-------------------------------------------------------------------------------
25840  * Road Freight Transport
25841  *-------------------------------------------------------------------------------
25843   
25844  eqnb_frtveh_c_mexico
25845  eqq_en_frtveh_c_mexico
25846  eqq_el_frtedv_c_mexico
25847  eqmcost_inv_hbd_stfr_c_mexico
25848  eqmcost_inv_plghbd_stfr_c_mexico
25849  eqmcost_inv_edv_stfr_c_mexico
25850   
25851  *-------------------------------------------------------------------------------
25853   
25854   
25855   
25856   
25857   
25858   
25859  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
25861  *-------------------------------------------------------------------------------
25862  * Traditional Biomass
25863  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
25864  *  - require post_process to be launch before
25865  *-------------------------------------------------------------------------------
25866   
25868   
25869  * Optional modules
25870   
25871  * Policy modules
25872   
25873  * Calibration
25876  ;
25877   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
25879  *-------------------------------------------------------------------------------
25880  * Call modules by order
25881  *-------------------------------------------------------------------------------
25885   
25886  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
25888  *-------------------------------------------------------------------------------
25889  * Algorithm
25890  *-------------------------------------------------------------------------------
25891   
25893   
25895  * Add the component of the (maximized) objective function as required by the ADMM algorithm
25896  eqobj_c_mexico..
25897      OBJADMM =e= UTILITY -
25898          sum(t, rho_admm('oil',t) / 2 *
25899              sum(n$(map_clt_n('c_mexico',n) and trading_t('oil',t,n)),
25900                  power(
25901                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
25902                      x_admm('oil',t,n) +
25903                      xavg_admm('oil',t) +
25904                      u_admm('oil', t)
25905                  ,2)
25906              )) -
25907          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
25908              sum(n$(map_clt_n('c_mexico',n) and trading_t(c_mkt,t,n)),
25909                  power(
25910                      Q_EMI(c_mkt,t,n) -
25911                      x_admm(c_mkt,t,n) +
25912                      xavg_admm(c_mkt,t) +
25913                      u_admm(c_mkt,t)
25914                  ,2)
25915              ))
25916      ;
25918   
25919  *-------------------------------------------------------------------------------
25921   
25922  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
25924  *-------------------------------------------------------------------------------
25925  * Time
25926  * - Temporal structure
25927  * - Fixed time periods
25928  * - States of the world
25929  *-------------------------------------------------------------------------------
25930   
25932   
25933  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
25935  *-------------------------------------------------------------------------------
25936  * Geographic dimension and mapping with countries
25937  *-------------------------------------------------------------------------------
25938   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
25941  *-------------------------------------------------------------------------------
25942  * Non-Cooperative Setup
25943  *
25944  * Each region is defined as an individual coalition.
25945  *
25946  *-------------------------------------------------------------------------------
25947   
25949   
25950  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
25952  *-------------------------------------------------------------------------------
25953  * Welfare
25954  *-------------------------------------------------------------------------------
25955   
25957   
25958  * Objective function - Welfare to be maximized
25959  equtility_c_mexico..
25960      UTILITY =e=
25961   
25962  * Negishi SWF
25964   
25965  * Welfare functions based on CEBGE
25968                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
25969                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
25970                      ((sum(n$map_clt_n('c_mexico',n),
25971                        (l(t,n) / sum(nn$map_clt_n('c_mexico',nn), l(t,nn))) *
25972                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
25973                       )**(1 / (1 - gamma))
25974                      )**(1 - eta) ) +
25975                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
25976                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
25977                      ((sum(n$map_clt_n('c_mexico',n),
25978                        (l(t,n) / sum(nn$map_clt_n('c_mexico',nn), l(t,nn))) *
25979                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
25980                       )**(1 / (1 - gamma))
25981                      )**(1 - eta) )
25982                  )**(1/(1 - eta)) * 1e6
25985   
25986   
25987  ;
25988   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
25991  *-------------------------------------------------------------------------------
25992  * Economy
25993  * - Production and Consumption definition
25994  * - Top-level of the production function
25995  * Options:
25996  * --original_ssp=1 : original SSP population and GDP data
25997  *-------------------------------------------------------------------------------
25998   
26000   
26001  * Production
26002  eqq_y_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26003   
26004      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
26005                     ## Climate feedback on economy
26007                     ## Net cost of Primary and Secondary Energy Sources
26008                     - sum(fuel, COST_FUEL(fuel,t,n))
26009                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
26010                     - sum(cce, COST_EMI(cce,t,n))
26011                     ## Carbon tax
26012                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
26013                     ## Additionnal costs on gross product
26014                     - sum(ccy, COST_Y(ccy,t,n))
26015  ;
26016   
26017  * Consumption
26018  eqq_cc_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
26019      Q('cc',t,n) =e= Q('y',t,n)
26020                      ## Investments in goods g (final good, adaptation)
26021                      -sum(g, I(g,t,n))
26022                      ## Investments in r&d
26023                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
26024                      ## Investments in energy technlogies
26025                      -sum(jinv, I_EN(jinv,t,n))
26026                       ## Investments in grid infrastructures
26027                      - I_EN_GRID(t,n)
26028                      ## Investments in extraction sector
26029                      -sum(extract(f), I_OUT(f,t,n))
26030                      ## O&M for energy technlogies
26031                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
26032                      ## O&M for extraction
26033                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
26034                      ## Energy technology penalty costs
26035                      -sum(jpenalty(j), COST_EN(j,t,n))
26036  ;
26037   
26038  * Capital accumulation
26039  eqk_c_mexico(g,t,tp1,n)$(map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
26040      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
26041   
26042  * Energy services
26043  eqq_fen_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26044      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
26045   
26046  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
26049  *-------------------------------------------------------------------------------
26050  * Energy sector
26051  *-------------------------------------------------------------------------------
26052   
26054   
26055  *-------------------------------------------------------------------------------
26056  * Production - Energy sector
26057  *-------------------------------------------------------------------------------
26058   
26059  eqq_en_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26060      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
26061   
26062  *-------------------------------------------------------------------------------
26063  * Production - Electrical sector
26064  *-------------------------------------------------------------------------------
26065   
26066  eqq_el_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26067      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
26068   
26069  eqq_el2_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26070      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
26071   
26072  eqq_elffren_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26073      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
26074  eqq_elff_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26075      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
26076   
26077  eqq_ces_el_c_mexico(ices_el,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
26078      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
26079  ;
26080   
26081  *-------------------------------------------------------------------------------
26082  * Production - Non-electrical sector
26083  *-------------------------------------------------------------------------------
26084   
26085  eqq_nel_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26086      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
26087   
26088  eqq_nelog_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26089      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
26090  ;
26091  eqq_ces_nelgas_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26092      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
26093   
26094  *-------------------------------------------------------------------------------
26095  * PES and fuels
26096  *-------------------------------------------------------------------------------
26097   
26098  eqq_fuel_c_mexico(fuel,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
26099      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
26100   
26101  *-------------------------------------------------------------------------------
26102  * Cost
26103  *-------------------------------------------------------------------------------
26104   
26105  * Net cost of Primary Energy Supplies
26106  eqcost_pes_c_mexico(f,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
26107      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
26108                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
26109   
26110  * Net cost of Secondary Energy Supplies
26111  eqcost_ses_c_mexico(s,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26112      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
26113   
26114   
26115  *-------------------------------------------------------------------------------
26116  * Market balances
26117  *-------------------------------------------------------------------------------
26118   
26119  eq_mkt_clearing_oil_c_mexico(t,'c_mexico')$(internal('oil'))..
26120      sum( n$(map_clt_n('c_mexico',n) and trading_t('oil',t,n)),
26121          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
26122      ) =e= 0;
26123   
26124  *-------------------------------------------------------------------------------
26125  * New capital in the energy sector
26126  *-------------------------------------------------------------------------------
26127   
26128  * Electrical generation plants (new)
26129  eqk_en_c_mexico(jinv,t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
26130      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
26131                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
26132   
26133  *-------------------------------------------------------------------------------
26134  * ENERGY
26135  *-------------------------------------------------------------------------------
26136   
26137  * Capacity limits in the electrical sector
26138  eqq_en_mu_c_mexico(jel,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
26139      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
26140   
26141  * Efficiency of energy technology sector
26142  eqq_en_in_c_mexico(jfed,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
26143      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
26144                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
26145   
26146  * Energy generation "tree"
26147  eqq_en_tree_c_mexico(j,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
26148      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
26149   
26150  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
26153  *-------------------------------------------------------------------------------
26154  * Carbon Emissions
26155  * - Total CO2 emissions and CO2 Fossil fuel and Industry
26156  * - CO2 emission costs
26157  * - GHG permit market
26158  *-------------------------------------------------------------------------------
26159   
26161   
26162  * GHG emission cap
26163  eqq_emi_lim_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
26164      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
26165                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
26166   
26167  ***newcode
26168  eqq_emi_lim_USAc_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
26169  ***
26170   
26171  * Compute total and sectoral emissions
26172  eqq_emi_tree_c_mexico(t,n,e)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
26173      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
26174   
26175  * Industrial CO2 emissions
26176  eqq_emi_co2ffi_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26177      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
26178                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
26179                              # Emissions from biomass
26180                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
26181                              # Emissions from fuel extraction
26182                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
26183                              # Captured emissions
26184                              sum(sink, Q_EMI(sink,t,n));
26185   
26186  * CO2 emission costs
26187  eqcost_emi_co2_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26188      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
26189   
26190  * Emission permit market clearing for internal market
26191  eq_mkt_clearing_nip_c_mexico(c_mkt,t,'c_mexico')$(internal(c_mkt))..
26192      sum(n$(map_clt_n('c_mexico',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
26193   
26194  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
26197  *-------------------------------------------------------------------------------
26198  * Research & Development
26199  * Options:
26200  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
26201  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
26202  *-------------------------------------------------------------------------------
26203   
26205   
26206  * Knowledge stock accumulation
26207  eqk_rd_c_mexico(rd,t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
26208                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
26209                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
26210                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
26211                                        SPILL(rd,t,n)**rd_coef(rd,'d');
26212   
26213  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
26214  eqspill_coop_c_mexico(rd,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_mexico'))..
26215          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
26216                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_mexico',nn)), K_RD(rd,t,nn)) +
26217                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_mexico',nn))), K_RD.l(rd,t,nn))
26218                            ) *
26219                            (
26220                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_mexico',nn)), K_RD(rd,t,nn)) +
26221                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_mexico',nn))), K_RD.l(rd,t,nn))
26222                              ) - K_RD(rd,t,n)
26223                            );
26224   
26225  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
26226  eqspill_lead_c_mexico(rd,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_mexico')) and leadrd(rd,n))..
26227                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
26228   
26229  * No-cooperation : a follower sees is negative effect on the quantity he can grab
26230  eqspill_foll_c_mexico(rd,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_mexico')) and (not leadrd(rd,n)))..
26231                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
26232   
26233  *- Only LbR (without learning by doing)
26234  eqmcost_inv_back_c_mexico(jrd,t,tt,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
26235                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
26236                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
26237   
26238  *- LbR together with learning by doing ==> Two-factor learning curve
26239  eqmcost_inv_back_lbd_c_mexico(jrd,t,tt,tfirst,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
26240                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
26241                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
26242                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
26243   
26244  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
26247  *-------------------------------------------------------------------------------
26248  * Default Climate Policy Implementation
26249  *
26250  * Options:
26251  *    --policy={bau (default),ctax}
26252  *        Implement a climate policy setting
26253  *  [ --scen= ]
26254  *        Policy variant.
26255  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
26256  *          * XXX for a fixed percentage/yr (e.g. 5) growth
26257  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
26258  *  [ --ctax_year=2020 ]
26259  *        Starting year of the carbon tax
26260  *  [ --ctax_initial=30 ]
26261  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
26262  *
26263  *-------------------------------------------------------------------------------
26265   
26266  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
26268  *-------------------------------------------------------------------------------
26269  * Energy efficiency
26270  *-------------------------------------------------------------------------------
26271   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
26274  *-------------------------------------------------------------------------------
26275  * Hydro Power
26276  *-------------------------------------------------------------------------------
26277   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
26280  *-------------------------------------------------------------------------------
26281  * System Integration:
26282  * - Capacity constraint
26283  * - Flexibility constraint
26284  * - Grid Investment
26285  * - Capacity growth constraint
26286  *-------------------------------------------------------------------------------
26287   
26289   
26290   
26291  * Renewable CES
26292   
26293  * Definition of the renewable CES
26294  eqq_elintren_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26295      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
26296   
26297  * Capacity constraint
26298   
26300  eqfirm_capacity_c_mexico(t,n)$(map_clt_n('c_mexico',n) and (not tfix(t)) and year(t) gt 2005)..
26301                   sum(jel_firm, K_EN(jel_firm,t,n))
26302                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
26303                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
26304                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
26305                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
26306                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
26307                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
26308                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
26309                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
26310                                       ) / yearly_hours
26311  ;
26313   
26314  * Flexibility constraint
26315  eqflex_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26316          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
26317                             ( Q_EN('el',t,n) -
26318                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
26319                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
26320                             ) * flex_coeff('load')
26321  ;
26322   
26323  * Grid
26324   
26325  ** Grid depreciation and investments
26326  eqk_en_grid_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
26327                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
26328                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
26329   
26330  ** Grid adjustment to power capacity
26331  eqk_en_grid_to_k_en_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26332                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
26333                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
26334                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
26335                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
26336                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
26337                                     ) / grid_cost +
26338                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
26339                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
26340                                      K_EN('elcsp',t,n);
26341  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
26342   
26343  * Capacity growth constraint
26344  eqcap_growth_c_mexico(jinv,t,tp1,tp2,n)$((map_clt_n('c_mexico',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
26345                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
26346                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
26347   
26348  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
26351  *-------------------------------------------------------------------------------
26352  * Nuclear power plants
26353  *-------------------------------------------------------------------------------
26354   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
26357  *-------------------------------------------------------------------------------
26358  * GHG module
26359  * - CH4 FFI + CH4 waste + CH4 open fires
26360  * - N2O FFI + N2O waste + N2O open fires
26361  *-------------------------------------------------------------------------------
26362   
26364   
26365  * CH4, N2O waste emissions
26366  eqq_emi_waste_c_mexico(waste,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
26367                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
26368   
26369  * n2o FFI
26370  eqq_emi_n2o_ffi_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
26371    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
26372                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
26373                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
26374                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
26375                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
26376                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
26377                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
26378                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
26379                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
26380                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
26381                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
26382                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
26383                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
26384                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
26385                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
26386                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
26387                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
26388                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
26389                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
26390                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
26391                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
26392                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
26393                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
26394                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
26395                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
26396                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
26397                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
26398                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
26399                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
26400                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
26401                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
26402   
26403  * ch4 FFI
26404  eqq_emi_ch4_ffi_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
26405    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
26408  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
26409  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
26410                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
26411                             smax(tt$(year(tt) eq 2015),
26412                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
26415  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
26416  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
26417                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
26418   
26419  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
26422  *-------------------------------------------------------------------------------
26423  * F-gases
26424  * - LLF
26425  * - SLF
26426  *-------------------------------------------------------------------------------
26427   
26429   
26430  * F-gases emissions
26431  eqq_emi_fgases_c_mexico(fgases,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
26432                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
26433   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
26436  *-------------------------------------------------------------------------------
26437  * Landuse [simplified version of the land-use model]
26438  *-------------------------------------------------------------------------------
26439   
26441   
26442  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
26443  eq_wbio_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26444      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
26445   
26447  * Cost of all woody biomass produced for advanced biofuels and woody biomass
26448  eqcost_pes_wbio_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26449      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
26451   
26452  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
26455  *-------------------------------------------------------------------------------
26456  * Bioenergy power plant
26457  *-------------------------------------------------------------------------------
26458   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
26461  *-------------------------------------------------------------------------------
26462  * Traditional Biofuels
26463  * - Requires the precedence of mod_landuse
26464  *-------------------------------------------------------------------------------
26465   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
26468  *-------------------------------------------------------------------------------
26469  * Advanced biofuel
26470  * - Require the precedence of mod_landuse
26471  *-------------------------------------------------------------------------------
26472   
26474   
26475  * Limitations for nel backstops
26476  eqq_en_lim_advbiofuel_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
26477               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
26478               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
26479   
26480  * Peculiarity of advbiofuel
26481  eqmcost_fuel_advbiofuel_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26482                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
26483   
26484  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
26487  *-------------------------------------------------------------------------------
26488  * Carbon Capture and Sequestration
26489  *-------------------------------------------------------------------------------
26490   
26492   
26493  eqq_emi_ccs_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26494                  Q_EMI('ccs_plant',t,n) =e=
26495                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
26496                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
26497  ;
26498   
26499  eqcost_emi_sinks_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26500                  COST_EMI('ccs_plant',t,n) =e=
26501                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
26502                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
26503  ;
26504   
26505  eq_stor_ccs_cum_c_mexico(ccs_stor,tp1,t,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
26506                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
26507  ;
26508   
26509  eq_emi_stor_ccs_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26510                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
26511  ;
26512   
26513  eq_emi_leak_ccs_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26514                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
26515   
26516  *-------------------------------------------------------------------------------
26518   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
26520  *-------------------------------------------------------------------------------
26521  * Coal for non-electric sectors
26522  * - Coke Plants
26523  * - Industrial and Commercial combined-heat-and-power (CHP)
26524  * - Others
26525  *-------------------------------------------------------------------------------
26526   
26528   
26529  eqcost_en_nelcoal_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26530           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
26531                                          nelcoal_max_abat(t,n) *
26532                                          (nelcoal_cmac(n,'a') *
26533                                            Q_EN('nelcoalabat',t,n) /
26534                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
26535                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
26536                                              (exp(nelcoal_cmac(n,'c') *
26537                                                (Q_EN('nelcoalabat',t,n)/
26538                                                  (nelcoal_max_abat(t,n) *
26539                                                      nelcoal_baseline(t,n))
26540                                                  ) - 1 )
26541                                              )
26542                                          );
26543   
26544  eqq_ncoalabat_monotone_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
26545          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
26546   
26547  * ensure Q_EN is lower than K_EN for CCS as not in jel
26548  eqq_en_nelcoalccs_max_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26549          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
26550   
26551  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
26554  *-------------------------------------------------------------------------------
26555  * Wind energy module
26556  * - onshore and offshore
26557  *-------------------------------------------------------------------------------
26558   
26560   
26561  * Capacity limits in the wind onshore electrical sector
26562  eqq_en_mu_windon_c_mexico(wind_dist,wind_class,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
26563      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
26564   
26565  * Capacity limits in the wind offshore electrical sector
26566  eqq_en_mu_windoff_c_mexico(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
26567      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
26568   
26569  * Wind onshore electrical generation plants (new)
26570  eqk_en_windon_c_mexico(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
26571      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
26572                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
26573   
26574  * Wind offshore electrical generation plants (new)
26575  eqk_en_windoff_c_mexico(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
26576      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
26577                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
26578   
26579  * Total onshore wind energy production
26580  eqq_en_windon_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26581                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
26582   
26583  * Total offshore wind energy production
26584  eqq_en_windoff_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26585                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
26586   
26587  * Total onshore wind capacity
26588  eqk_en_windon_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26589                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
26590   
26591  * Total offshore wind capacity
26592  eqk_en_windoff_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26593                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
26594   
26595  * Total onshore wind investment
26596  eqi_en_windon_sum_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
26597                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
26598   
26599  * Total offshore wind investment
26600  eqi_en_windoff_sum_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
26601                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
26602   
26603  *-------------------------------------------------------------------------------
26605   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
26607  *-------------------------------------------------------------------------------
26608  * Solar Powerplants (PV and CSP) to the electrical system
26609  *-------------------------------------------------------------------------------
26610   
26611  *-------------------------------------------------------------------------------
26613   
26614   
26615  * Capacity limits in the pv electrical sector
26616  eqq_en_mu_pv_c_mexico(solar_dist,solar_class,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
26617                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
26618   
26619  * Capacity limits in the csp electrical sector
26620  eqq_en_mu_csp_c_mexico(solar_dist,solar_class,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
26621                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
26622   
26623  * PV electrical generation plants (new)
26624  eqk_en_pv_c_mexico(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
26625                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
26626                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
26627   
26628  * CSP electrical generation plants (new)
26629  eqk_en_csp_c_mexico(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
26630                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
26631                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
26632   
26633  * Total PV energy production
26634  eqq_en_pv_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26635                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
26636   
26637  * Total CSP energy production
26638  eqq_en_csp_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26639                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
26640   
26641  * Total PV capacity
26642  eqk_en_pv_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26643                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
26644   
26645  * Total CSP capacity
26646  eqk_en_csp_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26647                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
26648   
26649  * Total PV investment
26650  eqi_en_pv_sum_c_mexico(t,tp1,n)$(map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
26651                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
26652   
26653  * Total CSP investment
26654  eqi_en_csp_sum_c_mexico(t,tp1,n)$(map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
26655                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
26656   
26657  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
26658  eqk_en_solar_comp_c_mexico(t,n,solar_dist)$(map_clt_n('c_mexico',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
26659                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
26660                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
26661   
26662   
26663   
26664  *-------------------------------------------------------------------------------
26666   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
26668  *-------------------------------------------------------------------------------
26669  * Technology development scenarios
26670  *-------------------------------------------------------------------------------
26671   
26673   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
26675  *-------------------------------------------------------------------------------
26676  * Oil Extraction
26677  * Options:
26678  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
26679  *-------------------------------------------------------------------------------
26680   
26682   
26683  * Capacity
26684  eqoilcap_c_mexico(t,tp1,n,oilg)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
26685      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
26686   
26687  * Production
26688  eqoilprod_c_mexico(t,tp1,n,oilg)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
26689      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
26690   
26691  eqq_out_oil_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26692      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
26693   
26694  * Cumulative production
26695  eqcum_oil_c_mexico(t,tp1,n,oilg)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
26696      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
26697   
26698  * Cost
26699  eqcost_oil_c_mexico(t,tp1,n,oilg)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
26700      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
26701                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
26702                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
26703   
26704  * Investments
26705  eqi_oil_c_mexico(t,tp1,n,oilg)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
26706      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
26707   
26708  * Total investment
26709  eqi_out_oil_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
26710      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
26711   
26712  * Emissions
26713  eqq_emi_out_oil_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26714      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
26715   
26716  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
26719  *-------------------------------------------------------------------------------
26720  * Uranium Resources
26721  *-------------------------------------------------------------------------------
26722   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
26725  *-------------------------------------------------------------------------------
26726  * Gas Resources
26727  *-------------------------------------------------------------------------------
26728   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
26731  *-------------------------------------------------------------------------------
26732  * Coal Resources
26733  *-------------------------------------------------------------------------------
26734   
26736   
26737   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
26739  *-------------------------------------------------------------------------------
26740  * Climate
26741  *
26742  * Represents the climate
26743  * - based on the DICE model equations
26744  * - Radiative forcing for non CO2 ghgs
26745  * - parameters calibrated to reproduce MAGICC6.4 default response
26746  *
26747  *  Options:
26748  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
26749  * - $setglobal cooperate_on_climate {'YES','NO'}
26750  * - 'YES'(default): Countries within a coalition act in cooperation
26751  *   'NO': Countries within a coalition act individually
26752  *
26753  *-------------------------------------------------------------------------------
26754   
26756   
26758   
26759  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
26762  *-------------------------------------------------------------------------------
26763  * Long-run Damages from Climate Change
26764  * - Economic impacts
26765  * - Adaptation
26766  *-------------------------------------------------------------------------------
26767   
26769   
26771   
26772  *-------------------------------------------------------------------------------
26774   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
26776  *-------------------------------------------------------------------------------
26777  * Light-duty Vehicles for Personal Transport
26778  *-------------------------------------------------------------------------------
26779   
26781   
26782  *** newcode
26783  eqq_inv_red_ban_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26784      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
26785   
26786  ***
26787  *- Number of light duty vehicles
26788  eqnb_veh_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26789      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
26790   
26791  *- Yearly energy demand of vehicles
26792  eqq_en_veh_c_mexico(jveh,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26793      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
26794   
26795  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
26796  eqq_el_edv_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26797      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
26798   
26799  *- Investment cost for hybrid vehicles
26800  eqmcost_inv_hybrid_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
26801                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
26802   
26803  *- Investment cost for plug-in hybrid vehicles
26804  eqmcost_inv_plghybrid_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
26805                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
26806   
26807  *- Investment cost for electric drive vehicles
26808  eqmcost_inv_edv_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
26809                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
26810   
26811  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
26814  *-------------------------------------------------------------------------------
26815  * Road Freight Transport
26816  *-------------------------------------------------------------------------------
26818   
26819  *-  Number of freight vehicles
26820  eqnb_frtveh_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26821                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
26822   
26823  *-  Yearly fuel consumption of freight vehicles
26824  eqq_en_frtveh_c_mexico(jfrt,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26825                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
26826   
26827  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
26828  eqq_el_frtedv_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26829                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
26830   
26831  *-  Investment cost for hbd_stfr vehicle
26832  eqmcost_inv_hbd_stfr_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
26833                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
26834   
26835  *-  Investment cost for plug-in hbd_stfr vehicle
26836  eqmcost_inv_plghbd_stfr_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
26837                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
26838   
26839  *-  Investment cost for electric drive vehicle
26840  eqmcost_inv_edv_stfr_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
26841                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
26842   
26843  *-------------------------------------------------------------------------------
26845   
26846   
26847   
26848   
26849   
26850   
26851  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
26853  *-------------------------------------------------------------------------------
26854  * Traditional Biomass
26855  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
26856  *  - require post_process to be launch before
26857  *-------------------------------------------------------------------------------
26858   
26860   
26861  * Optional modules
26862   
26863  * Policy modules
26864   
26865  * Calibration
26868   
26869   
26870  model witch_c_mexico /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
26872  *-------------------------------------------------------------------------------
26873  * Call modules by order
26874  *-------------------------------------------------------------------------------
26878   
26879  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
26881  *-------------------------------------------------------------------------------
26882  * Algorithm
26883  *-------------------------------------------------------------------------------
26884   
26886   
26887  eqobj_c_mexico
26888   
26889  *-------------------------------------------------------------------------------
26891   
26892  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
26894  *-------------------------------------------------------------------------------
26895  * Time
26896  * - Temporal structure
26897  * - Fixed time periods
26898  * - States of the world
26899  *-------------------------------------------------------------------------------
26900   
26902   
26903  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
26905  *-------------------------------------------------------------------------------
26906  * Geographic dimension and mapping with countries
26907  *-------------------------------------------------------------------------------
26908   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
26911  *-------------------------------------------------------------------------------
26912  * Non-Cooperative Setup
26913  *
26914  * Each region is defined as an individual coalition.
26915  *
26916  *-------------------------------------------------------------------------------
26917   
26919   
26920  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
26922  *-------------------------------------------------------------------------------
26923  * Welfare
26924  *-------------------------------------------------------------------------------
26925   
26927   
26928  equtility_c_mexico
26929   
26930  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
26933  *-------------------------------------------------------------------------------
26934  * Economy
26935  * - Production and Consumption definition
26936  * - Top-level of the production function
26937  * Options:
26938  * --original_ssp=1 : original SSP population and GDP data
26939  *-------------------------------------------------------------------------------
26940   
26942   
26943  eqk_c_mexico
26944  eqq_cc_c_mexico
26945  eqq_fen_c_mexico
26946  eqq_y_c_mexico
26947   
26948  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
26951  *-------------------------------------------------------------------------------
26952  * Energy sector
26953  *-------------------------------------------------------------------------------
26954   
26956   
26957  eq_mkt_clearing_oil_c_mexico
26958  eqcost_pes_c_mexico
26959  eqcost_ses_c_mexico
26960  eqk_en_c_mexico
26961  eqq_ces_el_c_mexico
26962  eqq_ces_nelgas_c_mexico
26963  eqq_el2_c_mexico
26964  eqq_el_c_mexico
26965  eqq_elff_c_mexico
26966  eqq_en_c_mexico
26967  eqq_en_in_c_mexico
26968  eqq_en_mu_c_mexico
26969  eqq_en_tree_c_mexico
26970  eqq_nel_c_mexico
26971  eqq_nelog_c_mexico
26972  eqq_fuel_c_mexico
26973  eqq_elffren_c_mexico
26974   
26975  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
26978  *-------------------------------------------------------------------------------
26979  * Carbon Emissions
26980  * - Total CO2 emissions and CO2 Fossil fuel and Industry
26981  * - CO2 emission costs
26982  * - GHG permit market
26983  *-------------------------------------------------------------------------------
26984   
26986   
26987  eqq_emi_lim_c_mexico
26988  ***newcode
26989  eqq_emi_lim_USAc_mexico
26990  ***
26991  eqq_emi_tree_c_mexico
26992  eqq_emi_co2ffi_c_mexico
26993   
26994  eqcost_emi_co2_c_mexico
26995   
26996  eq_mkt_clearing_nip_c_mexico
26997   
26998  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
27001  *-------------------------------------------------------------------------------
27002  * Research & Development
27003  * Options:
27004  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
27005  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
27006  *-------------------------------------------------------------------------------
27007   
27009   
27010  eqk_rd_c_mexico
27011  eqspill_coop_c_mexico
27012  eqspill_lead_c_mexico
27013  eqspill_foll_c_mexico
27014  eqmcost_inv_back_c_mexico
27015  eqmcost_inv_back_lbd_c_mexico
27016   
27017  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
27020  *-------------------------------------------------------------------------------
27021  * Default Climate Policy Implementation
27022  *
27023  * Options:
27024  *    --policy={bau (default),ctax}
27025  *        Implement a climate policy setting
27026  *  [ --scen= ]
27027  *        Policy variant.
27028  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
27029  *          * XXX for a fixed percentage/yr (e.g. 5) growth
27030  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
27031  *  [ --ctax_year=2020 ]
27032  *        Starting year of the carbon tax
27033  *  [ --ctax_initial=30 ]
27034  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
27035  *
27036  *-------------------------------------------------------------------------------
27038   
27039  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
27041  *-------------------------------------------------------------------------------
27042  * Energy efficiency
27043  *-------------------------------------------------------------------------------
27044   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
27047  *-------------------------------------------------------------------------------
27048  * Hydro Power
27049  *-------------------------------------------------------------------------------
27050   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
27053  *-------------------------------------------------------------------------------
27054  * System Integration:
27055  * - Capacity constraint
27056  * - Flexibility constraint
27057  * - Grid Investment
27058  * - Capacity growth constraint
27059  *-------------------------------------------------------------------------------
27060   
27062   
27063  eqq_elintren_c_mexico
27064  eqflex_c_mexico
27065  eqk_en_grid_c_mexico
27066  eqk_en_grid_to_k_en_c_mexico
27067  eqfirm_capacity_c_mexico
27068  eqcap_growth_c_mexico
27069   
27070  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
27073  *-------------------------------------------------------------------------------
27074  * Nuclear power plants
27075  *-------------------------------------------------------------------------------
27076   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
27079  *-------------------------------------------------------------------------------
27080  * GHG module
27081  * - CH4 FFI + CH4 waste + CH4 open fires
27082  * - N2O FFI + N2O waste + N2O open fires
27083  *-------------------------------------------------------------------------------
27084   
27086   
27087  eqq_emi_waste_c_mexico
27088  eqq_emi_n2o_ffi_c_mexico
27089  eqq_emi_ch4_ffi_c_mexico
27090   
27091  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
27094  *-------------------------------------------------------------------------------
27095  * F-gases
27096  * - LLF
27097  * - SLF
27098  *-------------------------------------------------------------------------------
27099   
27101   
27102  eqq_emi_fgases_c_mexico
27103   
27104  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
27107  *-------------------------------------------------------------------------------
27108  * Landuse [simplified version of the land-use model]
27109  *-------------------------------------------------------------------------------
27110   
27112   
27113  eq_wbio_c_mexico
27114  eqcost_pes_wbio_c_mexico
27115   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
27118  *-------------------------------------------------------------------------------
27119  * Bioenergy power plant
27120  *-------------------------------------------------------------------------------
27121   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
27124  *-------------------------------------------------------------------------------
27125  * Traditional Biofuels
27126  * - Requires the precedence of mod_landuse
27127  *-------------------------------------------------------------------------------
27128   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
27131  *-------------------------------------------------------------------------------
27132  * Advanced biofuel
27133  * - Require the precedence of mod_landuse
27134  *-------------------------------------------------------------------------------
27135   
27137   
27138  eqq_en_lim_advbiofuel_c_mexico
27139  eqmcost_fuel_advbiofuel_c_mexico
27140   
27141  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
27144  *-------------------------------------------------------------------------------
27145  * Carbon Capture and Sequestration
27146  *-------------------------------------------------------------------------------
27147   
27149   
27150  eqq_emi_ccs_c_mexico
27151  eqcost_emi_sinks_c_mexico
27152  eq_stor_ccs_cum_c_mexico
27153  eq_emi_stor_ccs_c_mexico
27154  eq_emi_leak_ccs_c_mexico
27155   
27156  *-------------------------------------------------------------------------------
27158   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
27160  *-------------------------------------------------------------------------------
27161  * Coal for non-electric sectors
27162  * - Coke Plants
27163  * - Industrial and Commercial combined-heat-and-power (CHP)
27164  * - Others
27165  *-------------------------------------------------------------------------------
27166   
27168   
27169  eqcost_en_nelcoal_c_mexico
27170  eqq_ncoalabat_monotone_c_mexico
27171  eqq_en_nelcoalccs_max_c_mexico
27172   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
27175  *-------------------------------------------------------------------------------
27176  * Wind energy module
27177  * - onshore and offshore
27178  *-------------------------------------------------------------------------------
27179   
27181   
27182  eqq_en_mu_windon_c_mexico
27183  eqq_en_mu_windoff_c_mexico
27184  eqk_en_windon_c_mexico
27185  eqk_en_windoff_c_mexico
27186  eqq_en_windon_sum_c_mexico
27187  eqq_en_windoff_sum_c_mexico
27188  eqk_en_windon_sum_c_mexico
27189  eqk_en_windoff_sum_c_mexico
27190  eqi_en_windon_sum_c_mexico
27191  eqi_en_windoff_sum_c_mexico
27192   
27194   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
27196  *-------------------------------------------------------------------------------
27197  * Solar Powerplants (PV and CSP) to the electrical system
27198  *-------------------------------------------------------------------------------
27199   
27200  *-------------------------------------------------------------------------------
27202   
27203  eqq_en_mu_pv_c_mexico
27204  eqq_en_mu_csp_c_mexico
27205  eqk_en_pv_c_mexico
27206  eqk_en_csp_c_mexico
27207  eqq_en_pv_sum_c_mexico
27208  eqq_en_csp_sum_c_mexico
27209  eqk_en_pv_sum_c_mexico
27210  eqk_en_csp_sum_c_mexico
27211  eqi_en_pv_sum_c_mexico
27212  eqi_en_csp_sum_c_mexico
27213  eqk_en_solar_comp_c_mexico
27214   
27215  *-------------------------------------------------------------------------------
27217   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
27219  *-------------------------------------------------------------------------------
27220  * Technology development scenarios
27221  *-------------------------------------------------------------------------------
27222   
27224   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
27226  *-------------------------------------------------------------------------------
27227  * Oil Extraction
27228  * Options:
27229  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
27230  *-------------------------------------------------------------------------------
27231   
27233   
27234  eqoilcap_c_mexico
27235  eqoilprod_c_mexico
27236  eqq_out_oil_c_mexico
27237  eqcum_oil_c_mexico
27238  eqcost_oil_c_mexico
27239  eqi_oil_c_mexico
27240  eqi_out_oil_c_mexico
27241  eqq_emi_out_oil_c_mexico
27242   
27243  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
27246  *-------------------------------------------------------------------------------
27247  * Uranium Resources
27248  *-------------------------------------------------------------------------------
27249   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
27252  *-------------------------------------------------------------------------------
27253  * Gas Resources
27254  *-------------------------------------------------------------------------------
27255   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
27258  *-------------------------------------------------------------------------------
27259  * Coal Resources
27260  *-------------------------------------------------------------------------------
27261   
27263   
27264   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
27266  *-------------------------------------------------------------------------------
27267  * Climate
27268  *
27269  * Represents the climate
27270  * - based on the DICE model equations
27271  * - Radiative forcing for non CO2 ghgs
27272  * - parameters calibrated to reproduce MAGICC6.4 default response
27273  *
27274  *  Options:
27275  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
27276  * - $setglobal cooperate_on_climate {'YES','NO'}
27277  * - 'YES'(default): Countries within a coalition act in cooperation
27278  *   'NO': Countries within a coalition act individually
27279  *
27280  *-------------------------------------------------------------------------------
27281   
27283   
27285   
27286  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
27289  *-------------------------------------------------------------------------------
27290  * Long-run Damages from Climate Change
27291  * - Economic impacts
27292  * - Adaptation
27293  *-------------------------------------------------------------------------------
27294   
27296   
27298   
27299  *-------------------------------------------------------------------------------
27301   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
27303  *-------------------------------------------------------------------------------
27304  * Light-duty Vehicles for Personal Transport
27305  *-------------------------------------------------------------------------------
27306   
27308   
27309  eqnb_veh_c_mexico
27310  eqq_en_veh_c_mexico
27311  eqq_el_edv_c_mexico
27312  eqmcost_inv_hybrid_c_mexico
27313  eqmcost_inv_plghybrid_c_mexico
27314  eqmcost_inv_edv_c_mexico
27315  *** newcode
27316  eqq_inv_red_ban_c_mexico
27317  ***
27318  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
27321  *-------------------------------------------------------------------------------
27322  * Road Freight Transport
27323  *-------------------------------------------------------------------------------
27325   
27326  eqnb_frtveh_c_mexico
27327  eqq_en_frtveh_c_mexico
27328  eqq_el_frtedv_c_mexico
27329  eqmcost_inv_hbd_stfr_c_mexico
27330  eqmcost_inv_plghbd_stfr_c_mexico
27331  eqmcost_inv_edv_stfr_c_mexico
27332   
27333  *-------------------------------------------------------------------------------
27335   
27336   
27337   
27338   
27339   
27340   
27341  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
27343  *-------------------------------------------------------------------------------
27344  * Traditional Biomass
27345  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
27346  *  - require post_process to be launch before
27347  *-------------------------------------------------------------------------------
27348   
27350   
27351  * Optional modules
27352   
27353  * Policy modules
27354   
27355  * Calibration
27358  /;
27359   
27360  witch_c_mexico.optfile=1;   # the option file solvername.opt is to be used
27361  witch_c_mexico.holdfixed=1; # treat fixed values as constant
27362  witch_c_mexico.scaleopt=1;  # Use scaling for better gradients estimation
27363  witch_c_mexico.solvelink=3; # Use parallel or sequential solving
27364   
27369   
27370  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
27372  *-------------------------------------------------------------------------------
27373  * Call modules by order
27374  *-------------------------------------------------------------------------------
27378   
27379  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
27381  *-------------------------------------------------------------------------------
27382  * Algorithm
27383  *-------------------------------------------------------------------------------
27384   
27386   
27387  eqobj_c_oceania
27388   
27389  *-------------------------------------------------------------------------------
27391   
27392  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
27394  *-------------------------------------------------------------------------------
27395  * Time
27396  * - Temporal structure
27397  * - Fixed time periods
27398  * - States of the world
27399  *-------------------------------------------------------------------------------
27400   
27402   
27403  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
27405  *-------------------------------------------------------------------------------
27406  * Geographic dimension and mapping with countries
27407  *-------------------------------------------------------------------------------
27408   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
27411  *-------------------------------------------------------------------------------
27412  * Non-Cooperative Setup
27413  *
27414  * Each region is defined as an individual coalition.
27415  *
27416  *-------------------------------------------------------------------------------
27417   
27419   
27420  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
27422  *-------------------------------------------------------------------------------
27423  * Welfare
27424  *-------------------------------------------------------------------------------
27425   
27427   
27428  equtility_c_oceania
27429   
27430  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
27433  *-------------------------------------------------------------------------------
27434  * Economy
27435  * - Production and Consumption definition
27436  * - Top-level of the production function
27437  * Options:
27438  * --original_ssp=1 : original SSP population and GDP data
27439  *-------------------------------------------------------------------------------
27440   
27442   
27443  eqk_c_oceania
27444  eqq_cc_c_oceania
27445  eqq_fen_c_oceania
27446  eqq_y_c_oceania
27447   
27448  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
27451  *-------------------------------------------------------------------------------
27452  * Energy sector
27453  *-------------------------------------------------------------------------------
27454   
27456   
27457  eq_mkt_clearing_oil_c_oceania
27458  eqcost_pes_c_oceania
27459  eqcost_ses_c_oceania
27460  eqk_en_c_oceania
27461  eqq_ces_el_c_oceania
27462  eqq_ces_nelgas_c_oceania
27463  eqq_el2_c_oceania
27464  eqq_el_c_oceania
27465  eqq_elff_c_oceania
27466  eqq_en_c_oceania
27467  eqq_en_in_c_oceania
27468  eqq_en_mu_c_oceania
27469  eqq_en_tree_c_oceania
27470  eqq_nel_c_oceania
27471  eqq_nelog_c_oceania
27472  eqq_fuel_c_oceania
27473  eqq_elffren_c_oceania
27474   
27475  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
27478  *-------------------------------------------------------------------------------
27479  * Carbon Emissions
27480  * - Total CO2 emissions and CO2 Fossil fuel and Industry
27481  * - CO2 emission costs
27482  * - GHG permit market
27483  *-------------------------------------------------------------------------------
27484   
27486   
27487  eqq_emi_lim_c_oceania
27488  ***newcode
27489  eqq_emi_lim_USAc_oceania
27490  ***
27491  eqq_emi_tree_c_oceania
27492  eqq_emi_co2ffi_c_oceania
27493   
27494  eqcost_emi_co2_c_oceania
27495   
27496  eq_mkt_clearing_nip_c_oceania
27497   
27498  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
27501  *-------------------------------------------------------------------------------
27502  * Research & Development
27503  * Options:
27504  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
27505  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
27506  *-------------------------------------------------------------------------------
27507   
27509   
27510  eqk_rd_c_oceania
27511  eqspill_coop_c_oceania
27512  eqspill_lead_c_oceania
27513  eqspill_foll_c_oceania
27514  eqmcost_inv_back_c_oceania
27515  eqmcost_inv_back_lbd_c_oceania
27516   
27517  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
27520  *-------------------------------------------------------------------------------
27521  * Default Climate Policy Implementation
27522  *
27523  * Options:
27524  *    --policy={bau (default),ctax}
27525  *        Implement a climate policy setting
27526  *  [ --scen= ]
27527  *        Policy variant.
27528  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
27529  *          * XXX for a fixed percentage/yr (e.g. 5) growth
27530  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
27531  *  [ --ctax_year=2020 ]
27532  *        Starting year of the carbon tax
27533  *  [ --ctax_initial=30 ]
27534  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
27535  *
27536  *-------------------------------------------------------------------------------
27538   
27539  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
27541  *-------------------------------------------------------------------------------
27542  * Energy efficiency
27543  *-------------------------------------------------------------------------------
27544   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
27547  *-------------------------------------------------------------------------------
27548  * Hydro Power
27549  *-------------------------------------------------------------------------------
27550   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
27553  *-------------------------------------------------------------------------------
27554  * System Integration:
27555  * - Capacity constraint
27556  * - Flexibility constraint
27557  * - Grid Investment
27558  * - Capacity growth constraint
27559  *-------------------------------------------------------------------------------
27560   
27562   
27563  eqq_elintren_c_oceania
27564  eqflex_c_oceania
27565  eqk_en_grid_c_oceania
27566  eqk_en_grid_to_k_en_c_oceania
27567  eqfirm_capacity_c_oceania
27568  eqcap_growth_c_oceania
27569   
27570  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
27573  *-------------------------------------------------------------------------------
27574  * Nuclear power plants
27575  *-------------------------------------------------------------------------------
27576   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
27579  *-------------------------------------------------------------------------------
27580  * GHG module
27581  * - CH4 FFI + CH4 waste + CH4 open fires
27582  * - N2O FFI + N2O waste + N2O open fires
27583  *-------------------------------------------------------------------------------
27584   
27586   
27587  eqq_emi_waste_c_oceania
27588  eqq_emi_n2o_ffi_c_oceania
27589  eqq_emi_ch4_ffi_c_oceania
27590   
27591  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
27594  *-------------------------------------------------------------------------------
27595  * F-gases
27596  * - LLF
27597  * - SLF
27598  *-------------------------------------------------------------------------------
27599   
27601   
27602  eqq_emi_fgases_c_oceania
27603   
27604  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
27607  *-------------------------------------------------------------------------------
27608  * Landuse [simplified version of the land-use model]
27609  *-------------------------------------------------------------------------------
27610   
27612   
27613  eq_wbio_c_oceania
27614  eqcost_pes_wbio_c_oceania
27615   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
27618  *-------------------------------------------------------------------------------
27619  * Bioenergy power plant
27620  *-------------------------------------------------------------------------------
27621   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
27624  *-------------------------------------------------------------------------------
27625  * Traditional Biofuels
27626  * - Requires the precedence of mod_landuse
27627  *-------------------------------------------------------------------------------
27628   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
27631  *-------------------------------------------------------------------------------
27632  * Advanced biofuel
27633  * - Require the precedence of mod_landuse
27634  *-------------------------------------------------------------------------------
27635   
27637   
27638  eqq_en_lim_advbiofuel_c_oceania
27639  eqmcost_fuel_advbiofuel_c_oceania
27640   
27641  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
27644  *-------------------------------------------------------------------------------
27645  * Carbon Capture and Sequestration
27646  *-------------------------------------------------------------------------------
27647   
27649   
27650  eqq_emi_ccs_c_oceania
27651  eqcost_emi_sinks_c_oceania
27652  eq_stor_ccs_cum_c_oceania
27653  eq_emi_stor_ccs_c_oceania
27654  eq_emi_leak_ccs_c_oceania
27655   
27656  *-------------------------------------------------------------------------------
27658   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
27660  *-------------------------------------------------------------------------------
27661  * Coal for non-electric sectors
27662  * - Coke Plants
27663  * - Industrial and Commercial combined-heat-and-power (CHP)
27664  * - Others
27665  *-------------------------------------------------------------------------------
27666   
27668   
27669  eqcost_en_nelcoal_c_oceania
27670  eqq_ncoalabat_monotone_c_oceania
27671  eqq_en_nelcoalccs_max_c_oceania
27672   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
27675  *-------------------------------------------------------------------------------
27676  * Wind energy module
27677  * - onshore and offshore
27678  *-------------------------------------------------------------------------------
27679   
27681   
27682  eqq_en_mu_windon_c_oceania
27683  eqq_en_mu_windoff_c_oceania
27684  eqk_en_windon_c_oceania
27685  eqk_en_windoff_c_oceania
27686  eqq_en_windon_sum_c_oceania
27687  eqq_en_windoff_sum_c_oceania
27688  eqk_en_windon_sum_c_oceania
27689  eqk_en_windoff_sum_c_oceania
27690  eqi_en_windon_sum_c_oceania
27691  eqi_en_windoff_sum_c_oceania
27692   
27694   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
27696  *-------------------------------------------------------------------------------
27697  * Solar Powerplants (PV and CSP) to the electrical system
27698  *-------------------------------------------------------------------------------
27699   
27700  *-------------------------------------------------------------------------------
27702   
27703  eqq_en_mu_pv_c_oceania
27704  eqq_en_mu_csp_c_oceania
27705  eqk_en_pv_c_oceania
27706  eqk_en_csp_c_oceania
27707  eqq_en_pv_sum_c_oceania
27708  eqq_en_csp_sum_c_oceania
27709  eqk_en_pv_sum_c_oceania
27710  eqk_en_csp_sum_c_oceania
27711  eqi_en_pv_sum_c_oceania
27712  eqi_en_csp_sum_c_oceania
27713  eqk_en_solar_comp_c_oceania
27714   
27715  *-------------------------------------------------------------------------------
27717   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
27719  *-------------------------------------------------------------------------------
27720  * Technology development scenarios
27721  *-------------------------------------------------------------------------------
27722   
27724   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
27726  *-------------------------------------------------------------------------------
27727  * Oil Extraction
27728  * Options:
27729  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
27730  *-------------------------------------------------------------------------------
27731   
27733   
27734  eqoilcap_c_oceania
27735  eqoilprod_c_oceania
27736  eqq_out_oil_c_oceania
27737  eqcum_oil_c_oceania
27738  eqcost_oil_c_oceania
27739  eqi_oil_c_oceania
27740  eqi_out_oil_c_oceania
27741  eqq_emi_out_oil_c_oceania
27742   
27743  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
27746  *-------------------------------------------------------------------------------
27747  * Uranium Resources
27748  *-------------------------------------------------------------------------------
27749   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
27752  *-------------------------------------------------------------------------------
27753  * Gas Resources
27754  *-------------------------------------------------------------------------------
27755   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
27758  *-------------------------------------------------------------------------------
27759  * Coal Resources
27760  *-------------------------------------------------------------------------------
27761   
27763   
27764   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
27766  *-------------------------------------------------------------------------------
27767  * Climate
27768  *
27769  * Represents the climate
27770  * - based on the DICE model equations
27771  * - Radiative forcing for non CO2 ghgs
27772  * - parameters calibrated to reproduce MAGICC6.4 default response
27773  *
27774  *  Options:
27775  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
27776  * - $setglobal cooperate_on_climate {'YES','NO'}
27777  * - 'YES'(default): Countries within a coalition act in cooperation
27778  *   'NO': Countries within a coalition act individually
27779  *
27780  *-------------------------------------------------------------------------------
27781   
27783   
27785   
27786  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
27789  *-------------------------------------------------------------------------------
27790  * Long-run Damages from Climate Change
27791  * - Economic impacts
27792  * - Adaptation
27793  *-------------------------------------------------------------------------------
27794   
27796   
27798   
27799  *-------------------------------------------------------------------------------
27801   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
27803  *-------------------------------------------------------------------------------
27804  * Light-duty Vehicles for Personal Transport
27805  *-------------------------------------------------------------------------------
27806   
27808   
27809  eqnb_veh_c_oceania
27810  eqq_en_veh_c_oceania
27811  eqq_el_edv_c_oceania
27812  eqmcost_inv_hybrid_c_oceania
27813  eqmcost_inv_plghybrid_c_oceania
27814  eqmcost_inv_edv_c_oceania
27815  *** newcode
27816  eqq_inv_red_ban_c_oceania
27817  ***
27818  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
27821  *-------------------------------------------------------------------------------
27822  * Road Freight Transport
27823  *-------------------------------------------------------------------------------
27825   
27826  eqnb_frtveh_c_oceania
27827  eqq_en_frtveh_c_oceania
27828  eqq_el_frtedv_c_oceania
27829  eqmcost_inv_hbd_stfr_c_oceania
27830  eqmcost_inv_plghbd_stfr_c_oceania
27831  eqmcost_inv_edv_stfr_c_oceania
27832   
27833  *-------------------------------------------------------------------------------
27835   
27836   
27837   
27838   
27839   
27840   
27841  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
27843  *-------------------------------------------------------------------------------
27844  * Traditional Biomass
27845  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
27846  *  - require post_process to be launch before
27847  *-------------------------------------------------------------------------------
27848   
27850   
27851  * Optional modules
27852   
27853  * Policy modules
27854   
27855  * Calibration
27858  ;
27859   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
27861  *-------------------------------------------------------------------------------
27862  * Call modules by order
27863  *-------------------------------------------------------------------------------
27867   
27868  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
27870  *-------------------------------------------------------------------------------
27871  * Algorithm
27872  *-------------------------------------------------------------------------------
27873   
27875   
27877  * Add the component of the (maximized) objective function as required by the ADMM algorithm
27878  eqobj_c_oceania..
27879      OBJADMM =e= UTILITY -
27880          sum(t, rho_admm('oil',t) / 2 *
27881              sum(n$(map_clt_n('c_oceania',n) and trading_t('oil',t,n)),
27882                  power(
27883                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
27884                      x_admm('oil',t,n) +
27885                      xavg_admm('oil',t) +
27886                      u_admm('oil', t)
27887                  ,2)
27888              )) -
27889          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
27890              sum(n$(map_clt_n('c_oceania',n) and trading_t(c_mkt,t,n)),
27891                  power(
27892                      Q_EMI(c_mkt,t,n) -
27893                      x_admm(c_mkt,t,n) +
27894                      xavg_admm(c_mkt,t) +
27895                      u_admm(c_mkt,t)
27896                  ,2)
27897              ))
27898      ;
27900   
27901  *-------------------------------------------------------------------------------
27903   
27904  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
27906  *-------------------------------------------------------------------------------
27907  * Time
27908  * - Temporal structure
27909  * - Fixed time periods
27910  * - States of the world
27911  *-------------------------------------------------------------------------------
27912   
27914   
27915  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
27917  *-------------------------------------------------------------------------------
27918  * Geographic dimension and mapping with countries
27919  *-------------------------------------------------------------------------------
27920   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
27923  *-------------------------------------------------------------------------------
27924  * Non-Cooperative Setup
27925  *
27926  * Each region is defined as an individual coalition.
27927  *
27928  *-------------------------------------------------------------------------------
27929   
27931   
27932  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
27934  *-------------------------------------------------------------------------------
27935  * Welfare
27936  *-------------------------------------------------------------------------------
27937   
27939   
27940  * Objective function - Welfare to be maximized
27941  equtility_c_oceania..
27942      UTILITY =e=
27943   
27944  * Negishi SWF
27946   
27947  * Welfare functions based on CEBGE
27950                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
27951                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
27952                      ((sum(n$map_clt_n('c_oceania',n),
27953                        (l(t,n) / sum(nn$map_clt_n('c_oceania',nn), l(t,nn))) *
27954                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
27955                       )**(1 / (1 - gamma))
27956                      )**(1 - eta) ) +
27957                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
27958                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
27959                      ((sum(n$map_clt_n('c_oceania',n),
27960                        (l(t,n) / sum(nn$map_clt_n('c_oceania',nn), l(t,nn))) *
27961                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
27962                       )**(1 / (1 - gamma))
27963                      )**(1 - eta) )
27964                  )**(1/(1 - eta)) * 1e6
27967   
27968   
27969  ;
27970   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
27973  *-------------------------------------------------------------------------------
27974  * Economy
27975  * - Production and Consumption definition
27976  * - Top-level of the production function
27977  * Options:
27978  * --original_ssp=1 : original SSP population and GDP data
27979  *-------------------------------------------------------------------------------
27980   
27982   
27983  * Production
27984  eqq_y_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
27985   
27986      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
27987                     ## Climate feedback on economy
27989                     ## Net cost of Primary and Secondary Energy Sources
27990                     - sum(fuel, COST_FUEL(fuel,t,n))
27991                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
27992                     - sum(cce, COST_EMI(cce,t,n))
27993                     ## Carbon tax
27994                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
27995                     ## Additionnal costs on gross product
27996                     - sum(ccy, COST_Y(ccy,t,n))
27997  ;
27998   
27999  * Consumption
28000  eqq_cc_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
28001      Q('cc',t,n) =e= Q('y',t,n)
28002                      ## Investments in goods g (final good, adaptation)
28003                      -sum(g, I(g,t,n))
28004                      ## Investments in r&d
28005                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
28006                      ## Investments in energy technlogies
28007                      -sum(jinv, I_EN(jinv,t,n))
28008                       ## Investments in grid infrastructures
28009                      - I_EN_GRID(t,n)
28010                      ## Investments in extraction sector
28011                      -sum(extract(f), I_OUT(f,t,n))
28012                      ## O&M for energy technlogies
28013                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
28014                      ## O&M for extraction
28015                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
28016                      ## Energy technology penalty costs
28017                      -sum(jpenalty(j), COST_EN(j,t,n))
28018  ;
28019   
28020  * Capital accumulation
28021  eqk_c_oceania(g,t,tp1,n)$(map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
28022      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
28023   
28024  * Energy services
28025  eqq_fen_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28026      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
28027   
28028  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
28031  *-------------------------------------------------------------------------------
28032  * Energy sector
28033  *-------------------------------------------------------------------------------
28034   
28036   
28037  *-------------------------------------------------------------------------------
28038  * Production - Energy sector
28039  *-------------------------------------------------------------------------------
28040   
28041  eqq_en_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28042      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
28043   
28044  *-------------------------------------------------------------------------------
28045  * Production - Electrical sector
28046  *-------------------------------------------------------------------------------
28047   
28048  eqq_el_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28049      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
28050   
28051  eqq_el2_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28052      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
28053   
28054  eqq_elffren_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28055      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
28056  eqq_elff_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28057      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
28058   
28059  eqq_ces_el_c_oceania(ices_el,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
28060      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
28061  ;
28062   
28063  *-------------------------------------------------------------------------------
28064  * Production - Non-electrical sector
28065  *-------------------------------------------------------------------------------
28066   
28067  eqq_nel_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28068      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
28069   
28070  eqq_nelog_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28071      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
28072  ;
28073  eqq_ces_nelgas_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28074      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
28075   
28076  *-------------------------------------------------------------------------------
28077  * PES and fuels
28078  *-------------------------------------------------------------------------------
28079   
28080  eqq_fuel_c_oceania(fuel,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
28081      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
28082   
28083  *-------------------------------------------------------------------------------
28084  * Cost
28085  *-------------------------------------------------------------------------------
28086   
28087  * Net cost of Primary Energy Supplies
28088  eqcost_pes_c_oceania(f,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
28089      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
28090                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
28091   
28092  * Net cost of Secondary Energy Supplies
28093  eqcost_ses_c_oceania(s,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28094      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
28095   
28096   
28097  *-------------------------------------------------------------------------------
28098  * Market balances
28099  *-------------------------------------------------------------------------------
28100   
28101  eq_mkt_clearing_oil_c_oceania(t,'c_oceania')$(internal('oil'))..
28102      sum( n$(map_clt_n('c_oceania',n) and trading_t('oil',t,n)),
28103          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
28104      ) =e= 0;
28105   
28106  *-------------------------------------------------------------------------------
28107  * New capital in the energy sector
28108  *-------------------------------------------------------------------------------
28109   
28110  * Electrical generation plants (new)
28111  eqk_en_c_oceania(jinv,t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
28112      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
28113                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
28114   
28115  *-------------------------------------------------------------------------------
28116  * ENERGY
28117  *-------------------------------------------------------------------------------
28118   
28119  * Capacity limits in the electrical sector
28120  eqq_en_mu_c_oceania(jel,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
28121      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
28122   
28123  * Efficiency of energy technology sector
28124  eqq_en_in_c_oceania(jfed,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
28125      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
28126                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
28127   
28128  * Energy generation "tree"
28129  eqq_en_tree_c_oceania(j,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
28130      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
28131   
28132  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
28135  *-------------------------------------------------------------------------------
28136  * Carbon Emissions
28137  * - Total CO2 emissions and CO2 Fossil fuel and Industry
28138  * - CO2 emission costs
28139  * - GHG permit market
28140  *-------------------------------------------------------------------------------
28141   
28143   
28144  * GHG emission cap
28145  eqq_emi_lim_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
28146      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
28147                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
28148   
28149  ***newcode
28150  eqq_emi_lim_USAc_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
28151  ***
28152   
28153  * Compute total and sectoral emissions
28154  eqq_emi_tree_c_oceania(t,n,e)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
28155      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
28156   
28157  * Industrial CO2 emissions
28158  eqq_emi_co2ffi_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28159      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
28160                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
28161                              # Emissions from biomass
28162                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
28163                              # Emissions from fuel extraction
28164                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
28165                              # Captured emissions
28166                              sum(sink, Q_EMI(sink,t,n));
28167   
28168  * CO2 emission costs
28169  eqcost_emi_co2_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28170      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
28171   
28172  * Emission permit market clearing for internal market
28173  eq_mkt_clearing_nip_c_oceania(c_mkt,t,'c_oceania')$(internal(c_mkt))..
28174      sum(n$(map_clt_n('c_oceania',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
28175   
28176  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
28179  *-------------------------------------------------------------------------------
28180  * Research & Development
28181  * Options:
28182  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
28183  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
28184  *-------------------------------------------------------------------------------
28185   
28187   
28188  * Knowledge stock accumulation
28189  eqk_rd_c_oceania(rd,t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
28190                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
28191                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
28192                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
28193                                        SPILL(rd,t,n)**rd_coef(rd,'d');
28194   
28195  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
28196  eqspill_coop_c_oceania(rd,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_oceania'))..
28197          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
28198                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_oceania',nn)), K_RD(rd,t,nn)) +
28199                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_oceania',nn))), K_RD.l(rd,t,nn))
28200                            ) *
28201                            (
28202                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_oceania',nn)), K_RD(rd,t,nn)) +
28203                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_oceania',nn))), K_RD.l(rd,t,nn))
28204                              ) - K_RD(rd,t,n)
28205                            );
28206   
28207  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
28208  eqspill_lead_c_oceania(rd,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_oceania')) and leadrd(rd,n))..
28209                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
28210   
28211  * No-cooperation : a follower sees is negative effect on the quantity he can grab
28212  eqspill_foll_c_oceania(rd,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_oceania')) and (not leadrd(rd,n)))..
28213                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
28214   
28215  *- Only LbR (without learning by doing)
28216  eqmcost_inv_back_c_oceania(jrd,t,tt,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
28217                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
28218                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
28219   
28220  *- LbR together with learning by doing ==> Two-factor learning curve
28221  eqmcost_inv_back_lbd_c_oceania(jrd,t,tt,tfirst,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
28222                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
28223                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
28224                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
28225   
28226  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
28229  *-------------------------------------------------------------------------------
28230  * Default Climate Policy Implementation
28231  *
28232  * Options:
28233  *    --policy={bau (default),ctax}
28234  *        Implement a climate policy setting
28235  *  [ --scen= ]
28236  *        Policy variant.
28237  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
28238  *          * XXX for a fixed percentage/yr (e.g. 5) growth
28239  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
28240  *  [ --ctax_year=2020 ]
28241  *        Starting year of the carbon tax
28242  *  [ --ctax_initial=30 ]
28243  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
28244  *
28245  *-------------------------------------------------------------------------------
28247   
28248  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
28250  *-------------------------------------------------------------------------------
28251  * Energy efficiency
28252  *-------------------------------------------------------------------------------
28253   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
28256  *-------------------------------------------------------------------------------
28257  * Hydro Power
28258  *-------------------------------------------------------------------------------
28259   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
28262  *-------------------------------------------------------------------------------
28263  * System Integration:
28264  * - Capacity constraint
28265  * - Flexibility constraint
28266  * - Grid Investment
28267  * - Capacity growth constraint
28268  *-------------------------------------------------------------------------------
28269   
28271   
28272   
28273  * Renewable CES
28274   
28275  * Definition of the renewable CES
28276  eqq_elintren_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28277      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
28278   
28279  * Capacity constraint
28280   
28282  eqfirm_capacity_c_oceania(t,n)$(map_clt_n('c_oceania',n) and (not tfix(t)) and year(t) gt 2005)..
28283                   sum(jel_firm, K_EN(jel_firm,t,n))
28284                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
28285                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
28286                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
28287                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
28288                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
28289                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
28290                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
28291                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
28292                                       ) / yearly_hours
28293  ;
28295   
28296  * Flexibility constraint
28297  eqflex_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28298          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
28299                             ( Q_EN('el',t,n) -
28300                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
28301                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
28302                             ) * flex_coeff('load')
28303  ;
28304   
28305  * Grid
28306   
28307  ** Grid depreciation and investments
28308  eqk_en_grid_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
28309                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
28310                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
28311   
28312  ** Grid adjustment to power capacity
28313  eqk_en_grid_to_k_en_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28314                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
28315                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
28316                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
28317                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
28318                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
28319                                     ) / grid_cost +
28320                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
28321                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
28322                                      K_EN('elcsp',t,n);
28323  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
28324   
28325  * Capacity growth constraint
28326  eqcap_growth_c_oceania(jinv,t,tp1,tp2,n)$((map_clt_n('c_oceania',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
28327                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
28328                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
28329   
28330  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
28333  *-------------------------------------------------------------------------------
28334  * Nuclear power plants
28335  *-------------------------------------------------------------------------------
28336   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
28339  *-------------------------------------------------------------------------------
28340  * GHG module
28341  * - CH4 FFI + CH4 waste + CH4 open fires
28342  * - N2O FFI + N2O waste + N2O open fires
28343  *-------------------------------------------------------------------------------
28344   
28346   
28347  * CH4, N2O waste emissions
28348  eqq_emi_waste_c_oceania(waste,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
28349                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
28350   
28351  * n2o FFI
28352  eqq_emi_n2o_ffi_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
28353    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
28354                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
28355                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
28356                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
28357                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
28358                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
28359                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
28360                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
28361                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
28362                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
28363                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
28364                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
28365                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
28366                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
28367                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
28368                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
28369                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
28370                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
28371                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
28372                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
28373                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
28374                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
28375                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
28376                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
28377                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
28378                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
28379                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
28380                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
28381                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
28382                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
28383                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
28384   
28385  * ch4 FFI
28386  eqq_emi_ch4_ffi_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
28387    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
28390  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
28391  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
28392                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
28393                             smax(tt$(year(tt) eq 2015),
28394                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
28397  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
28398  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
28399                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
28400   
28401  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
28404  *-------------------------------------------------------------------------------
28405  * F-gases
28406  * - LLF
28407  * - SLF
28408  *-------------------------------------------------------------------------------
28409   
28411   
28412  * F-gases emissions
28413  eqq_emi_fgases_c_oceania(fgases,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
28414                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
28415   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
28418  *-------------------------------------------------------------------------------
28419  * Landuse [simplified version of the land-use model]
28420  *-------------------------------------------------------------------------------
28421   
28423   
28424  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
28425  eq_wbio_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28426      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
28427   
28429  * Cost of all woody biomass produced for advanced biofuels and woody biomass
28430  eqcost_pes_wbio_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28431      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
28433   
28434  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
28437  *-------------------------------------------------------------------------------
28438  * Bioenergy power plant
28439  *-------------------------------------------------------------------------------
28440   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
28443  *-------------------------------------------------------------------------------
28444  * Traditional Biofuels
28445  * - Requires the precedence of mod_landuse
28446  *-------------------------------------------------------------------------------
28447   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
28450  *-------------------------------------------------------------------------------
28451  * Advanced biofuel
28452  * - Require the precedence of mod_landuse
28453  *-------------------------------------------------------------------------------
28454   
28456   
28457  * Limitations for nel backstops
28458  eqq_en_lim_advbiofuel_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
28459               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
28460               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
28461   
28462  * Peculiarity of advbiofuel
28463  eqmcost_fuel_advbiofuel_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28464                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
28465   
28466  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
28469  *-------------------------------------------------------------------------------
28470  * Carbon Capture and Sequestration
28471  *-------------------------------------------------------------------------------
28472   
28474   
28475  eqq_emi_ccs_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28476                  Q_EMI('ccs_plant',t,n) =e=
28477                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
28478                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
28479  ;
28480   
28481  eqcost_emi_sinks_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28482                  COST_EMI('ccs_plant',t,n) =e=
28483                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
28484                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
28485  ;
28486   
28487  eq_stor_ccs_cum_c_oceania(ccs_stor,tp1,t,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
28488                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
28489  ;
28490   
28491  eq_emi_stor_ccs_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28492                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
28493  ;
28494   
28495  eq_emi_leak_ccs_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28496                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
28497   
28498  *-------------------------------------------------------------------------------
28500   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
28502  *-------------------------------------------------------------------------------
28503  * Coal for non-electric sectors
28504  * - Coke Plants
28505  * - Industrial and Commercial combined-heat-and-power (CHP)
28506  * - Others
28507  *-------------------------------------------------------------------------------
28508   
28510   
28511  eqcost_en_nelcoal_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28512           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
28513                                          nelcoal_max_abat(t,n) *
28514                                          (nelcoal_cmac(n,'a') *
28515                                            Q_EN('nelcoalabat',t,n) /
28516                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
28517                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
28518                                              (exp(nelcoal_cmac(n,'c') *
28519                                                (Q_EN('nelcoalabat',t,n)/
28520                                                  (nelcoal_max_abat(t,n) *
28521                                                      nelcoal_baseline(t,n))
28522                                                  ) - 1 )
28523                                              )
28524                                          );
28525   
28526  eqq_ncoalabat_monotone_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
28527          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
28528   
28529  * ensure Q_EN is lower than K_EN for CCS as not in jel
28530  eqq_en_nelcoalccs_max_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28531          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
28532   
28533  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
28536  *-------------------------------------------------------------------------------
28537  * Wind energy module
28538  * - onshore and offshore
28539  *-------------------------------------------------------------------------------
28540   
28542   
28543  * Capacity limits in the wind onshore electrical sector
28544  eqq_en_mu_windon_c_oceania(wind_dist,wind_class,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
28545      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
28546   
28547  * Capacity limits in the wind offshore electrical sector
28548  eqq_en_mu_windoff_c_oceania(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
28549      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
28550   
28551  * Wind onshore electrical generation plants (new)
28552  eqk_en_windon_c_oceania(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
28553      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
28554                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
28555   
28556  * Wind offshore electrical generation plants (new)
28557  eqk_en_windoff_c_oceania(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
28558      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
28559                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
28560   
28561  * Total onshore wind energy production
28562  eqq_en_windon_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28563                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
28564   
28565  * Total offshore wind energy production
28566  eqq_en_windoff_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28567                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
28568   
28569  * Total onshore wind capacity
28570  eqk_en_windon_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28571                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
28572   
28573  * Total offshore wind capacity
28574  eqk_en_windoff_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28575                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
28576   
28577  * Total onshore wind investment
28578  eqi_en_windon_sum_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
28579                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
28580   
28581  * Total offshore wind investment
28582  eqi_en_windoff_sum_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
28583                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
28584   
28585  *-------------------------------------------------------------------------------
28587   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
28589  *-------------------------------------------------------------------------------
28590  * Solar Powerplants (PV and CSP) to the electrical system
28591  *-------------------------------------------------------------------------------
28592   
28593  *-------------------------------------------------------------------------------
28595   
28596   
28597  * Capacity limits in the pv electrical sector
28598  eqq_en_mu_pv_c_oceania(solar_dist,solar_class,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
28599                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
28600   
28601  * Capacity limits in the csp electrical sector
28602  eqq_en_mu_csp_c_oceania(solar_dist,solar_class,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
28603                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
28604   
28605  * PV electrical generation plants (new)
28606  eqk_en_pv_c_oceania(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
28607                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
28608                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
28609   
28610  * CSP electrical generation plants (new)
28611  eqk_en_csp_c_oceania(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
28612                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
28613                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
28614   
28615  * Total PV energy production
28616  eqq_en_pv_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28617                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
28618   
28619  * Total CSP energy production
28620  eqq_en_csp_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28621                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
28622   
28623  * Total PV capacity
28624  eqk_en_pv_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28625                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
28626   
28627  * Total CSP capacity
28628  eqk_en_csp_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28629                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
28630   
28631  * Total PV investment
28632  eqi_en_pv_sum_c_oceania(t,tp1,n)$(map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
28633                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
28634   
28635  * Total CSP investment
28636  eqi_en_csp_sum_c_oceania(t,tp1,n)$(map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
28637                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
28638   
28639  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
28640  eqk_en_solar_comp_c_oceania(t,n,solar_dist)$(map_clt_n('c_oceania',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
28641                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
28642                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
28643   
28644   
28645   
28646  *-------------------------------------------------------------------------------
28648   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
28650  *-------------------------------------------------------------------------------
28651  * Technology development scenarios
28652  *-------------------------------------------------------------------------------
28653   
28655   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
28657  *-------------------------------------------------------------------------------
28658  * Oil Extraction
28659  * Options:
28660  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
28661  *-------------------------------------------------------------------------------
28662   
28664   
28665  * Capacity
28666  eqoilcap_c_oceania(t,tp1,n,oilg)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
28667      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
28668   
28669  * Production
28670  eqoilprod_c_oceania(t,tp1,n,oilg)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
28671      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
28672   
28673  eqq_out_oil_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28674      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
28675   
28676  * Cumulative production
28677  eqcum_oil_c_oceania(t,tp1,n,oilg)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
28678      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
28679   
28680  * Cost
28681  eqcost_oil_c_oceania(t,tp1,n,oilg)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
28682      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
28683                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
28684                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
28685   
28686  * Investments
28687  eqi_oil_c_oceania(t,tp1,n,oilg)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
28688      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
28689   
28690  * Total investment
28691  eqi_out_oil_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
28692      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
28693   
28694  * Emissions
28695  eqq_emi_out_oil_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28696      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
28697   
28698  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
28701  *-------------------------------------------------------------------------------
28702  * Uranium Resources
28703  *-------------------------------------------------------------------------------
28704   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
28707  *-------------------------------------------------------------------------------
28708  * Gas Resources
28709  *-------------------------------------------------------------------------------
28710   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
28713  *-------------------------------------------------------------------------------
28714  * Coal Resources
28715  *-------------------------------------------------------------------------------
28716   
28718   
28719   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
28721  *-------------------------------------------------------------------------------
28722  * Climate
28723  *
28724  * Represents the climate
28725  * - based on the DICE model equations
28726  * - Radiative forcing for non CO2 ghgs
28727  * - parameters calibrated to reproduce MAGICC6.4 default response
28728  *
28729  *  Options:
28730  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
28731  * - $setglobal cooperate_on_climate {'YES','NO'}
28732  * - 'YES'(default): Countries within a coalition act in cooperation
28733  *   'NO': Countries within a coalition act individually
28734  *
28735  *-------------------------------------------------------------------------------
28736   
28738   
28740   
28741  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
28744  *-------------------------------------------------------------------------------
28745  * Long-run Damages from Climate Change
28746  * - Economic impacts
28747  * - Adaptation
28748  *-------------------------------------------------------------------------------
28749   
28751   
28753   
28754  *-------------------------------------------------------------------------------
28756   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
28758  *-------------------------------------------------------------------------------
28759  * Light-duty Vehicles for Personal Transport
28760  *-------------------------------------------------------------------------------
28761   
28763   
28764  *** newcode
28765  eqq_inv_red_ban_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28766      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
28767   
28768  ***
28769  *- Number of light duty vehicles
28770  eqnb_veh_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28771      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
28772   
28773  *- Yearly energy demand of vehicles
28774  eqq_en_veh_c_oceania(jveh,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28775      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
28776   
28777  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
28778  eqq_el_edv_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28779      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
28780   
28781  *- Investment cost for hybrid vehicles
28782  eqmcost_inv_hybrid_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
28783                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
28784   
28785  *- Investment cost for plug-in hybrid vehicles
28786  eqmcost_inv_plghybrid_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
28787                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
28788   
28789  *- Investment cost for electric drive vehicles
28790  eqmcost_inv_edv_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
28791                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
28792   
28793  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
28796  *-------------------------------------------------------------------------------
28797  * Road Freight Transport
28798  *-------------------------------------------------------------------------------
28800   
28801  *-  Number of freight vehicles
28802  eqnb_frtveh_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28803                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
28804   
28805  *-  Yearly fuel consumption of freight vehicles
28806  eqq_en_frtveh_c_oceania(jfrt,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28807                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
28808   
28809  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
28810  eqq_el_frtedv_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28811                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
28812   
28813  *-  Investment cost for hbd_stfr vehicle
28814  eqmcost_inv_hbd_stfr_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
28815                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
28816   
28817  *-  Investment cost for plug-in hbd_stfr vehicle
28818  eqmcost_inv_plghbd_stfr_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
28819                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
28820   
28821  *-  Investment cost for electric drive vehicle
28822  eqmcost_inv_edv_stfr_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
28823                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
28824   
28825  *-------------------------------------------------------------------------------
28827   
28828   
28829   
28830   
28831   
28832   
28833  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
28835  *-------------------------------------------------------------------------------
28836  * Traditional Biomass
28837  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
28838  *  - require post_process to be launch before
28839  *-------------------------------------------------------------------------------
28840   
28842   
28843  * Optional modules
28844   
28845  * Policy modules
28846   
28847  * Calibration
28850   
28851   
28852  model witch_c_oceania /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
28854  *-------------------------------------------------------------------------------
28855  * Call modules by order
28856  *-------------------------------------------------------------------------------
28860   
28861  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
28863  *-------------------------------------------------------------------------------
28864  * Algorithm
28865  *-------------------------------------------------------------------------------
28866   
28868   
28869  eqobj_c_oceania
28870   
28871  *-------------------------------------------------------------------------------
28873   
28874  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
28876  *-------------------------------------------------------------------------------
28877  * Time
28878  * - Temporal structure
28879  * - Fixed time periods
28880  * - States of the world
28881  *-------------------------------------------------------------------------------
28882   
28884   
28885  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
28887  *-------------------------------------------------------------------------------
28888  * Geographic dimension and mapping with countries
28889  *-------------------------------------------------------------------------------
28890   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
28893  *-------------------------------------------------------------------------------
28894  * Non-Cooperative Setup
28895  *
28896  * Each region is defined as an individual coalition.
28897  *
28898  *-------------------------------------------------------------------------------
28899   
28901   
28902  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
28904  *-------------------------------------------------------------------------------
28905  * Welfare
28906  *-------------------------------------------------------------------------------
28907   
28909   
28910  equtility_c_oceania
28911   
28912  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
28915  *-------------------------------------------------------------------------------
28916  * Economy
28917  * - Production and Consumption definition
28918  * - Top-level of the production function
28919  * Options:
28920  * --original_ssp=1 : original SSP population and GDP data
28921  *-------------------------------------------------------------------------------
28922   
28924   
28925  eqk_c_oceania
28926  eqq_cc_c_oceania
28927  eqq_fen_c_oceania
28928  eqq_y_c_oceania
28929   
28930  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
28933  *-------------------------------------------------------------------------------
28934  * Energy sector
28935  *-------------------------------------------------------------------------------
28936   
28938   
28939  eq_mkt_clearing_oil_c_oceania
28940  eqcost_pes_c_oceania
28941  eqcost_ses_c_oceania
28942  eqk_en_c_oceania
28943  eqq_ces_el_c_oceania
28944  eqq_ces_nelgas_c_oceania
28945  eqq_el2_c_oceania
28946  eqq_el_c_oceania
28947  eqq_elff_c_oceania
28948  eqq_en_c_oceania
28949  eqq_en_in_c_oceania
28950  eqq_en_mu_c_oceania
28951  eqq_en_tree_c_oceania
28952  eqq_nel_c_oceania
28953  eqq_nelog_c_oceania
28954  eqq_fuel_c_oceania
28955  eqq_elffren_c_oceania
28956   
28957  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
28960  *-------------------------------------------------------------------------------
28961  * Carbon Emissions
28962  * - Total CO2 emissions and CO2 Fossil fuel and Industry
28963  * - CO2 emission costs
28964  * - GHG permit market
28965  *-------------------------------------------------------------------------------
28966   
28968   
28969  eqq_emi_lim_c_oceania
28970  ***newcode
28971  eqq_emi_lim_USAc_oceania
28972  ***
28973  eqq_emi_tree_c_oceania
28974  eqq_emi_co2ffi_c_oceania
28975   
28976  eqcost_emi_co2_c_oceania
28977   
28978  eq_mkt_clearing_nip_c_oceania
28979   
28980  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
28983  *-------------------------------------------------------------------------------
28984  * Research & Development
28985  * Options:
28986  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
28987  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
28988  *-------------------------------------------------------------------------------
28989   
28991   
28992  eqk_rd_c_oceania
28993  eqspill_coop_c_oceania
28994  eqspill_lead_c_oceania
28995  eqspill_foll_c_oceania
28996  eqmcost_inv_back_c_oceania
28997  eqmcost_inv_back_lbd_c_oceania
28998   
28999  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
29002  *-------------------------------------------------------------------------------
29003  * Default Climate Policy Implementation
29004  *
29005  * Options:
29006  *    --policy={bau (default),ctax}
29007  *        Implement a climate policy setting
29008  *  [ --scen= ]
29009  *        Policy variant.
29010  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
29011  *          * XXX for a fixed percentage/yr (e.g. 5) growth
29012  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
29013  *  [ --ctax_year=2020 ]
29014  *        Starting year of the carbon tax
29015  *  [ --ctax_initial=30 ]
29016  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
29017  *
29018  *-------------------------------------------------------------------------------
29020   
29021  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
29023  *-------------------------------------------------------------------------------
29024  * Energy efficiency
29025  *-------------------------------------------------------------------------------
29026   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
29029  *-------------------------------------------------------------------------------
29030  * Hydro Power
29031  *-------------------------------------------------------------------------------
29032   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
29035  *-------------------------------------------------------------------------------
29036  * System Integration:
29037  * - Capacity constraint
29038  * - Flexibility constraint
29039  * - Grid Investment
29040  * - Capacity growth constraint
29041  *-------------------------------------------------------------------------------
29042   
29044   
29045  eqq_elintren_c_oceania
29046  eqflex_c_oceania
29047  eqk_en_grid_c_oceania
29048  eqk_en_grid_to_k_en_c_oceania
29049  eqfirm_capacity_c_oceania
29050  eqcap_growth_c_oceania
29051   
29052  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
29055  *-------------------------------------------------------------------------------
29056  * Nuclear power plants
29057  *-------------------------------------------------------------------------------
29058   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
29061  *-------------------------------------------------------------------------------
29062  * GHG module
29063  * - CH4 FFI + CH4 waste + CH4 open fires
29064  * - N2O FFI + N2O waste + N2O open fires
29065  *-------------------------------------------------------------------------------
29066   
29068   
29069  eqq_emi_waste_c_oceania
29070  eqq_emi_n2o_ffi_c_oceania
29071  eqq_emi_ch4_ffi_c_oceania
29072   
29073  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
29076  *-------------------------------------------------------------------------------
29077  * F-gases
29078  * - LLF
29079  * - SLF
29080  *-------------------------------------------------------------------------------
29081   
29083   
29084  eqq_emi_fgases_c_oceania
29085   
29086  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
29089  *-------------------------------------------------------------------------------
29090  * Landuse [simplified version of the land-use model]
29091  *-------------------------------------------------------------------------------
29092   
29094   
29095  eq_wbio_c_oceania
29096  eqcost_pes_wbio_c_oceania
29097   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
29100  *-------------------------------------------------------------------------------
29101  * Bioenergy power plant
29102  *-------------------------------------------------------------------------------
29103   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
29106  *-------------------------------------------------------------------------------
29107  * Traditional Biofuels
29108  * - Requires the precedence of mod_landuse
29109  *-------------------------------------------------------------------------------
29110   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
29113  *-------------------------------------------------------------------------------
29114  * Advanced biofuel
29115  * - Require the precedence of mod_landuse
29116  *-------------------------------------------------------------------------------
29117   
29119   
29120  eqq_en_lim_advbiofuel_c_oceania
29121  eqmcost_fuel_advbiofuel_c_oceania
29122   
29123  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
29126  *-------------------------------------------------------------------------------
29127  * Carbon Capture and Sequestration
29128  *-------------------------------------------------------------------------------
29129   
29131   
29132  eqq_emi_ccs_c_oceania
29133  eqcost_emi_sinks_c_oceania
29134  eq_stor_ccs_cum_c_oceania
29135  eq_emi_stor_ccs_c_oceania
29136  eq_emi_leak_ccs_c_oceania
29137   
29138  *-------------------------------------------------------------------------------
29140   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
29142  *-------------------------------------------------------------------------------
29143  * Coal for non-electric sectors
29144  * - Coke Plants
29145  * - Industrial and Commercial combined-heat-and-power (CHP)
29146  * - Others
29147  *-------------------------------------------------------------------------------
29148   
29150   
29151  eqcost_en_nelcoal_c_oceania
29152  eqq_ncoalabat_monotone_c_oceania
29153  eqq_en_nelcoalccs_max_c_oceania
29154   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
29157  *-------------------------------------------------------------------------------
29158  * Wind energy module
29159  * - onshore and offshore
29160  *-------------------------------------------------------------------------------
29161   
29163   
29164  eqq_en_mu_windon_c_oceania
29165  eqq_en_mu_windoff_c_oceania
29166  eqk_en_windon_c_oceania
29167  eqk_en_windoff_c_oceania
29168  eqq_en_windon_sum_c_oceania
29169  eqq_en_windoff_sum_c_oceania
29170  eqk_en_windon_sum_c_oceania
29171  eqk_en_windoff_sum_c_oceania
29172  eqi_en_windon_sum_c_oceania
29173  eqi_en_windoff_sum_c_oceania
29174   
29176   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
29178  *-------------------------------------------------------------------------------
29179  * Solar Powerplants (PV and CSP) to the electrical system
29180  *-------------------------------------------------------------------------------
29181   
29182  *-------------------------------------------------------------------------------
29184   
29185  eqq_en_mu_pv_c_oceania
29186  eqq_en_mu_csp_c_oceania
29187  eqk_en_pv_c_oceania
29188  eqk_en_csp_c_oceania
29189  eqq_en_pv_sum_c_oceania
29190  eqq_en_csp_sum_c_oceania
29191  eqk_en_pv_sum_c_oceania
29192  eqk_en_csp_sum_c_oceania
29193  eqi_en_pv_sum_c_oceania
29194  eqi_en_csp_sum_c_oceania
29195  eqk_en_solar_comp_c_oceania
29196   
29197  *-------------------------------------------------------------------------------
29199   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
29201  *-------------------------------------------------------------------------------
29202  * Technology development scenarios
29203  *-------------------------------------------------------------------------------
29204   
29206   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
29208  *-------------------------------------------------------------------------------
29209  * Oil Extraction
29210  * Options:
29211  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
29212  *-------------------------------------------------------------------------------
29213   
29215   
29216  eqoilcap_c_oceania
29217  eqoilprod_c_oceania
29218  eqq_out_oil_c_oceania
29219  eqcum_oil_c_oceania
29220  eqcost_oil_c_oceania
29221  eqi_oil_c_oceania
29222  eqi_out_oil_c_oceania
29223  eqq_emi_out_oil_c_oceania
29224   
29225  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
29228  *-------------------------------------------------------------------------------
29229  * Uranium Resources
29230  *-------------------------------------------------------------------------------
29231   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
29234  *-------------------------------------------------------------------------------
29235  * Gas Resources
29236  *-------------------------------------------------------------------------------
29237   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
29240  *-------------------------------------------------------------------------------
29241  * Coal Resources
29242  *-------------------------------------------------------------------------------
29243   
29245   
29246   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
29248  *-------------------------------------------------------------------------------
29249  * Climate
29250  *
29251  * Represents the climate
29252  * - based on the DICE model equations
29253  * - Radiative forcing for non CO2 ghgs
29254  * - parameters calibrated to reproduce MAGICC6.4 default response
29255  *
29256  *  Options:
29257  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
29258  * - $setglobal cooperate_on_climate {'YES','NO'}
29259  * - 'YES'(default): Countries within a coalition act in cooperation
29260  *   'NO': Countries within a coalition act individually
29261  *
29262  *-------------------------------------------------------------------------------
29263   
29265   
29267   
29268  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
29271  *-------------------------------------------------------------------------------
29272  * Long-run Damages from Climate Change
29273  * - Economic impacts
29274  * - Adaptation
29275  *-------------------------------------------------------------------------------
29276   
29278   
29280   
29281  *-------------------------------------------------------------------------------
29283   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
29285  *-------------------------------------------------------------------------------
29286  * Light-duty Vehicles for Personal Transport
29287  *-------------------------------------------------------------------------------
29288   
29290   
29291  eqnb_veh_c_oceania
29292  eqq_en_veh_c_oceania
29293  eqq_el_edv_c_oceania
29294  eqmcost_inv_hybrid_c_oceania
29295  eqmcost_inv_plghybrid_c_oceania
29296  eqmcost_inv_edv_c_oceania
29297  *** newcode
29298  eqq_inv_red_ban_c_oceania
29299  ***
29300  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
29303  *-------------------------------------------------------------------------------
29304  * Road Freight Transport
29305  *-------------------------------------------------------------------------------
29307   
29308  eqnb_frtveh_c_oceania
29309  eqq_en_frtveh_c_oceania
29310  eqq_el_frtedv_c_oceania
29311  eqmcost_inv_hbd_stfr_c_oceania
29312  eqmcost_inv_plghbd_stfr_c_oceania
29313  eqmcost_inv_edv_stfr_c_oceania
29314   
29315  *-------------------------------------------------------------------------------
29317   
29318   
29319   
29320   
29321   
29322   
29323  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
29325  *-------------------------------------------------------------------------------
29326  * Traditional Biomass
29327  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
29328  *  - require post_process to be launch before
29329  *-------------------------------------------------------------------------------
29330   
29332   
29333  * Optional modules
29334   
29335  * Policy modules
29336   
29337  * Calibration
29340  /;
29341   
29342  witch_c_oceania.optfile=1;   # the option file solvername.opt is to be used
29343  witch_c_oceania.holdfixed=1; # treat fixed values as constant
29344  witch_c_oceania.scaleopt=1;  # Use scaling for better gradients estimation
29345  witch_c_oceania.solvelink=3; # Use parallel or sequential solving
29346   
29351   
29352  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
29354  *-------------------------------------------------------------------------------
29355  * Call modules by order
29356  *-------------------------------------------------------------------------------
29360   
29361  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
29363  *-------------------------------------------------------------------------------
29364  * Algorithm
29365  *-------------------------------------------------------------------------------
29366   
29368   
29369  eqobj_c_sasia
29370   
29371  *-------------------------------------------------------------------------------
29373   
29374  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
29376  *-------------------------------------------------------------------------------
29377  * Time
29378  * - Temporal structure
29379  * - Fixed time periods
29380  * - States of the world
29381  *-------------------------------------------------------------------------------
29382   
29384   
29385  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
29387  *-------------------------------------------------------------------------------
29388  * Geographic dimension and mapping with countries
29389  *-------------------------------------------------------------------------------
29390   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
29393  *-------------------------------------------------------------------------------
29394  * Non-Cooperative Setup
29395  *
29396  * Each region is defined as an individual coalition.
29397  *
29398  *-------------------------------------------------------------------------------
29399   
29401   
29402  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
29404  *-------------------------------------------------------------------------------
29405  * Welfare
29406  *-------------------------------------------------------------------------------
29407   
29409   
29410  equtility_c_sasia
29411   
29412  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
29415  *-------------------------------------------------------------------------------
29416  * Economy
29417  * - Production and Consumption definition
29418  * - Top-level of the production function
29419  * Options:
29420  * --original_ssp=1 : original SSP population and GDP data
29421  *-------------------------------------------------------------------------------
29422   
29424   
29425  eqk_c_sasia
29426  eqq_cc_c_sasia
29427  eqq_fen_c_sasia
29428  eqq_y_c_sasia
29429   
29430  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
29433  *-------------------------------------------------------------------------------
29434  * Energy sector
29435  *-------------------------------------------------------------------------------
29436   
29438   
29439  eq_mkt_clearing_oil_c_sasia
29440  eqcost_pes_c_sasia
29441  eqcost_ses_c_sasia
29442  eqk_en_c_sasia
29443  eqq_ces_el_c_sasia
29444  eqq_ces_nelgas_c_sasia
29445  eqq_el2_c_sasia
29446  eqq_el_c_sasia
29447  eqq_elff_c_sasia
29448  eqq_en_c_sasia
29449  eqq_en_in_c_sasia
29450  eqq_en_mu_c_sasia
29451  eqq_en_tree_c_sasia
29452  eqq_nel_c_sasia
29453  eqq_nelog_c_sasia
29454  eqq_fuel_c_sasia
29455  eqq_elffren_c_sasia
29456   
29457  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
29460  *-------------------------------------------------------------------------------
29461  * Carbon Emissions
29462  * - Total CO2 emissions and CO2 Fossil fuel and Industry
29463  * - CO2 emission costs
29464  * - GHG permit market
29465  *-------------------------------------------------------------------------------
29466   
29468   
29469  eqq_emi_lim_c_sasia
29470  ***newcode
29471  eqq_emi_lim_USAc_sasia
29472  ***
29473  eqq_emi_tree_c_sasia
29474  eqq_emi_co2ffi_c_sasia
29475   
29476  eqcost_emi_co2_c_sasia
29477   
29478  eq_mkt_clearing_nip_c_sasia
29479   
29480  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
29483  *-------------------------------------------------------------------------------
29484  * Research & Development
29485  * Options:
29486  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
29487  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
29488  *-------------------------------------------------------------------------------
29489   
29491   
29492  eqk_rd_c_sasia
29493  eqspill_coop_c_sasia
29494  eqspill_lead_c_sasia
29495  eqspill_foll_c_sasia
29496  eqmcost_inv_back_c_sasia
29497  eqmcost_inv_back_lbd_c_sasia
29498   
29499  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
29502  *-------------------------------------------------------------------------------
29503  * Default Climate Policy Implementation
29504  *
29505  * Options:
29506  *    --policy={bau (default),ctax}
29507  *        Implement a climate policy setting
29508  *  [ --scen= ]
29509  *        Policy variant.
29510  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
29511  *          * XXX for a fixed percentage/yr (e.g. 5) growth
29512  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
29513  *  [ --ctax_year=2020 ]
29514  *        Starting year of the carbon tax
29515  *  [ --ctax_initial=30 ]
29516  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
29517  *
29518  *-------------------------------------------------------------------------------
29520   
29521  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
29523  *-------------------------------------------------------------------------------
29524  * Energy efficiency
29525  *-------------------------------------------------------------------------------
29526   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
29529  *-------------------------------------------------------------------------------
29530  * Hydro Power
29531  *-------------------------------------------------------------------------------
29532   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
29535  *-------------------------------------------------------------------------------
29536  * System Integration:
29537  * - Capacity constraint
29538  * - Flexibility constraint
29539  * - Grid Investment
29540  * - Capacity growth constraint
29541  *-------------------------------------------------------------------------------
29542   
29544   
29545  eqq_elintren_c_sasia
29546  eqflex_c_sasia
29547  eqk_en_grid_c_sasia
29548  eqk_en_grid_to_k_en_c_sasia
29549  eqfirm_capacity_c_sasia
29550  eqcap_growth_c_sasia
29551   
29552  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
29555  *-------------------------------------------------------------------------------
29556  * Nuclear power plants
29557  *-------------------------------------------------------------------------------
29558   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
29561  *-------------------------------------------------------------------------------
29562  * GHG module
29563  * - CH4 FFI + CH4 waste + CH4 open fires
29564  * - N2O FFI + N2O waste + N2O open fires
29565  *-------------------------------------------------------------------------------
29566   
29568   
29569  eqq_emi_waste_c_sasia
29570  eqq_emi_n2o_ffi_c_sasia
29571  eqq_emi_ch4_ffi_c_sasia
29572   
29573  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
29576  *-------------------------------------------------------------------------------
29577  * F-gases
29578  * - LLF
29579  * - SLF
29580  *-------------------------------------------------------------------------------
29581   
29583   
29584  eqq_emi_fgases_c_sasia
29585   
29586  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
29589  *-------------------------------------------------------------------------------
29590  * Landuse [simplified version of the land-use model]
29591  *-------------------------------------------------------------------------------
29592   
29594   
29595  eq_wbio_c_sasia
29596  eqcost_pes_wbio_c_sasia
29597   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
29600  *-------------------------------------------------------------------------------
29601  * Bioenergy power plant
29602  *-------------------------------------------------------------------------------
29603   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
29606  *-------------------------------------------------------------------------------
29607  * Traditional Biofuels
29608  * - Requires the precedence of mod_landuse
29609  *-------------------------------------------------------------------------------
29610   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
29613  *-------------------------------------------------------------------------------
29614  * Advanced biofuel
29615  * - Require the precedence of mod_landuse
29616  *-------------------------------------------------------------------------------
29617   
29619   
29620  eqq_en_lim_advbiofuel_c_sasia
29621  eqmcost_fuel_advbiofuel_c_sasia
29622   
29623  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
29626  *-------------------------------------------------------------------------------
29627  * Carbon Capture and Sequestration
29628  *-------------------------------------------------------------------------------
29629   
29631   
29632  eqq_emi_ccs_c_sasia
29633  eqcost_emi_sinks_c_sasia
29634  eq_stor_ccs_cum_c_sasia
29635  eq_emi_stor_ccs_c_sasia
29636  eq_emi_leak_ccs_c_sasia
29637   
29638  *-------------------------------------------------------------------------------
29640   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
29642  *-------------------------------------------------------------------------------
29643  * Coal for non-electric sectors
29644  * - Coke Plants
29645  * - Industrial and Commercial combined-heat-and-power (CHP)
29646  * - Others
29647  *-------------------------------------------------------------------------------
29648   
29650   
29651  eqcost_en_nelcoal_c_sasia
29652  eqq_ncoalabat_monotone_c_sasia
29653  eqq_en_nelcoalccs_max_c_sasia
29654   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
29657  *-------------------------------------------------------------------------------
29658  * Wind energy module
29659  * - onshore and offshore
29660  *-------------------------------------------------------------------------------
29661   
29663   
29664  eqq_en_mu_windon_c_sasia
29665  eqq_en_mu_windoff_c_sasia
29666  eqk_en_windon_c_sasia
29667  eqk_en_windoff_c_sasia
29668  eqq_en_windon_sum_c_sasia
29669  eqq_en_windoff_sum_c_sasia
29670  eqk_en_windon_sum_c_sasia
29671  eqk_en_windoff_sum_c_sasia
29672  eqi_en_windon_sum_c_sasia
29673  eqi_en_windoff_sum_c_sasia
29674   
29676   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
29678  *-------------------------------------------------------------------------------
29679  * Solar Powerplants (PV and CSP) to the electrical system
29680  *-------------------------------------------------------------------------------
29681   
29682  *-------------------------------------------------------------------------------
29684   
29685  eqq_en_mu_pv_c_sasia
29686  eqq_en_mu_csp_c_sasia
29687  eqk_en_pv_c_sasia
29688  eqk_en_csp_c_sasia
29689  eqq_en_pv_sum_c_sasia
29690  eqq_en_csp_sum_c_sasia
29691  eqk_en_pv_sum_c_sasia
29692  eqk_en_csp_sum_c_sasia
29693  eqi_en_pv_sum_c_sasia
29694  eqi_en_csp_sum_c_sasia
29695  eqk_en_solar_comp_c_sasia
29696   
29697  *-------------------------------------------------------------------------------
29699   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
29701  *-------------------------------------------------------------------------------
29702  * Technology development scenarios
29703  *-------------------------------------------------------------------------------
29704   
29706   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
29708  *-------------------------------------------------------------------------------
29709  * Oil Extraction
29710  * Options:
29711  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
29712  *-------------------------------------------------------------------------------
29713   
29715   
29716  eqoilcap_c_sasia
29717  eqoilprod_c_sasia
29718  eqq_out_oil_c_sasia
29719  eqcum_oil_c_sasia
29720  eqcost_oil_c_sasia
29721  eqi_oil_c_sasia
29722  eqi_out_oil_c_sasia
29723  eqq_emi_out_oil_c_sasia
29724   
29725  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
29728  *-------------------------------------------------------------------------------
29729  * Uranium Resources
29730  *-------------------------------------------------------------------------------
29731   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
29734  *-------------------------------------------------------------------------------
29735  * Gas Resources
29736  *-------------------------------------------------------------------------------
29737   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
29740  *-------------------------------------------------------------------------------
29741  * Coal Resources
29742  *-------------------------------------------------------------------------------
29743   
29745   
29746   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
29748  *-------------------------------------------------------------------------------
29749  * Climate
29750  *
29751  * Represents the climate
29752  * - based on the DICE model equations
29753  * - Radiative forcing for non CO2 ghgs
29754  * - parameters calibrated to reproduce MAGICC6.4 default response
29755  *
29756  *  Options:
29757  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
29758  * - $setglobal cooperate_on_climate {'YES','NO'}
29759  * - 'YES'(default): Countries within a coalition act in cooperation
29760  *   'NO': Countries within a coalition act individually
29761  *
29762  *-------------------------------------------------------------------------------
29763   
29765   
29767   
29768  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
29771  *-------------------------------------------------------------------------------
29772  * Long-run Damages from Climate Change
29773  * - Economic impacts
29774  * - Adaptation
29775  *-------------------------------------------------------------------------------
29776   
29778   
29780   
29781  *-------------------------------------------------------------------------------
29783   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
29785  *-------------------------------------------------------------------------------
29786  * Light-duty Vehicles for Personal Transport
29787  *-------------------------------------------------------------------------------
29788   
29790   
29791  eqnb_veh_c_sasia
29792  eqq_en_veh_c_sasia
29793  eqq_el_edv_c_sasia
29794  eqmcost_inv_hybrid_c_sasia
29795  eqmcost_inv_plghybrid_c_sasia
29796  eqmcost_inv_edv_c_sasia
29797  *** newcode
29798  eqq_inv_red_ban_c_sasia
29799  ***
29800  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
29803  *-------------------------------------------------------------------------------
29804  * Road Freight Transport
29805  *-------------------------------------------------------------------------------
29807   
29808  eqnb_frtveh_c_sasia
29809  eqq_en_frtveh_c_sasia
29810  eqq_el_frtedv_c_sasia
29811  eqmcost_inv_hbd_stfr_c_sasia
29812  eqmcost_inv_plghbd_stfr_c_sasia
29813  eqmcost_inv_edv_stfr_c_sasia
29814   
29815  *-------------------------------------------------------------------------------
29817   
29818   
29819   
29820   
29821   
29822   
29823  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
29825  *-------------------------------------------------------------------------------
29826  * Traditional Biomass
29827  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
29828  *  - require post_process to be launch before
29829  *-------------------------------------------------------------------------------
29830   
29832   
29833  * Optional modules
29834   
29835  * Policy modules
29836   
29837  * Calibration
29840  ;
29841   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
29843  *-------------------------------------------------------------------------------
29844  * Call modules by order
29845  *-------------------------------------------------------------------------------
29849   
29850  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
29852  *-------------------------------------------------------------------------------
29853  * Algorithm
29854  *-------------------------------------------------------------------------------
29855   
29857   
29859  * Add the component of the (maximized) objective function as required by the ADMM algorithm
29860  eqobj_c_sasia..
29861      OBJADMM =e= UTILITY -
29862          sum(t, rho_admm('oil',t) / 2 *
29863              sum(n$(map_clt_n('c_sasia',n) and trading_t('oil',t,n)),
29864                  power(
29865                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
29866                      x_admm('oil',t,n) +
29867                      xavg_admm('oil',t) +
29868                      u_admm('oil', t)
29869                  ,2)
29870              )) -
29871          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
29872              sum(n$(map_clt_n('c_sasia',n) and trading_t(c_mkt,t,n)),
29873                  power(
29874                      Q_EMI(c_mkt,t,n) -
29875                      x_admm(c_mkt,t,n) +
29876                      xavg_admm(c_mkt,t) +
29877                      u_admm(c_mkt,t)
29878                  ,2)
29879              ))
29880      ;
29882   
29883  *-------------------------------------------------------------------------------
29885   
29886  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
29888  *-------------------------------------------------------------------------------
29889  * Time
29890  * - Temporal structure
29891  * - Fixed time periods
29892  * - States of the world
29893  *-------------------------------------------------------------------------------
29894   
29896   
29897  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
29899  *-------------------------------------------------------------------------------
29900  * Geographic dimension and mapping with countries
29901  *-------------------------------------------------------------------------------
29902   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
29905  *-------------------------------------------------------------------------------
29906  * Non-Cooperative Setup
29907  *
29908  * Each region is defined as an individual coalition.
29909  *
29910  *-------------------------------------------------------------------------------
29911   
29913   
29914  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
29916  *-------------------------------------------------------------------------------
29917  * Welfare
29918  *-------------------------------------------------------------------------------
29919   
29921   
29922  * Objective function - Welfare to be maximized
29923  equtility_c_sasia..
29924      UTILITY =e=
29925   
29926  * Negishi SWF
29928   
29929  * Welfare functions based on CEBGE
29932                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
29933                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
29934                      ((sum(n$map_clt_n('c_sasia',n),
29935                        (l(t,n) / sum(nn$map_clt_n('c_sasia',nn), l(t,nn))) *
29936                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
29937                       )**(1 / (1 - gamma))
29938                      )**(1 - eta) ) +
29939                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
29940                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
29941                      ((sum(n$map_clt_n('c_sasia',n),
29942                        (l(t,n) / sum(nn$map_clt_n('c_sasia',nn), l(t,nn))) *
29943                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
29944                       )**(1 / (1 - gamma))
29945                      )**(1 - eta) )
29946                  )**(1/(1 - eta)) * 1e6
29949   
29950   
29951  ;
29952   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
29955  *-------------------------------------------------------------------------------
29956  * Economy
29957  * - Production and Consumption definition
29958  * - Top-level of the production function
29959  * Options:
29960  * --original_ssp=1 : original SSP population and GDP data
29961  *-------------------------------------------------------------------------------
29962   
29964   
29965  * Production
29966  eqq_y_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
29967   
29968      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
29969                     ## Climate feedback on economy
29971                     ## Net cost of Primary and Secondary Energy Sources
29972                     - sum(fuel, COST_FUEL(fuel,t,n))
29973                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
29974                     - sum(cce, COST_EMI(cce,t,n))
29975                     ## Carbon tax
29976                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
29977                     ## Additionnal costs on gross product
29978                     - sum(ccy, COST_Y(ccy,t,n))
29979  ;
29980   
29981  * Consumption
29982  eqq_cc_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
29983      Q('cc',t,n) =e= Q('y',t,n)
29984                      ## Investments in goods g (final good, adaptation)
29985                      -sum(g, I(g,t,n))
29986                      ## Investments in r&d
29987                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
29988                      ## Investments in energy technlogies
29989                      -sum(jinv, I_EN(jinv,t,n))
29990                       ## Investments in grid infrastructures
29991                      - I_EN_GRID(t,n)
29992                      ## Investments in extraction sector
29993                      -sum(extract(f), I_OUT(f,t,n))
29994                      ## O&M for energy technlogies
29995                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
29996                      ## O&M for extraction
29997                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
29998                      ## Energy technology penalty costs
29999                      -sum(jpenalty(j), COST_EN(j,t,n))
30000  ;
30001   
30002  * Capital accumulation
30003  eqk_c_sasia(g,t,tp1,n)$(map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
30004      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
30005   
30006  * Energy services
30007  eqq_fen_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30008      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
30009   
30010  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
30013  *-------------------------------------------------------------------------------
30014  * Energy sector
30015  *-------------------------------------------------------------------------------
30016   
30018   
30019  *-------------------------------------------------------------------------------
30020  * Production - Energy sector
30021  *-------------------------------------------------------------------------------
30022   
30023  eqq_en_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30024      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
30025   
30026  *-------------------------------------------------------------------------------
30027  * Production - Electrical sector
30028  *-------------------------------------------------------------------------------
30029   
30030  eqq_el_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30031      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
30032   
30033  eqq_el2_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30034      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
30035   
30036  eqq_elffren_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30037      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
30038  eqq_elff_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30039      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
30040   
30041  eqq_ces_el_c_sasia(ices_el,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
30042      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
30043  ;
30044   
30045  *-------------------------------------------------------------------------------
30046  * Production - Non-electrical sector
30047  *-------------------------------------------------------------------------------
30048   
30049  eqq_nel_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30050      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
30051   
30052  eqq_nelog_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30053      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
30054  ;
30055  eqq_ces_nelgas_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30056      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
30057   
30058  *-------------------------------------------------------------------------------
30059  * PES and fuels
30060  *-------------------------------------------------------------------------------
30061   
30062  eqq_fuel_c_sasia(fuel,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
30063      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
30064   
30065  *-------------------------------------------------------------------------------
30066  * Cost
30067  *-------------------------------------------------------------------------------
30068   
30069  * Net cost of Primary Energy Supplies
30070  eqcost_pes_c_sasia(f,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
30071      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
30072                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
30073   
30074  * Net cost of Secondary Energy Supplies
30075  eqcost_ses_c_sasia(s,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30076      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
30077   
30078   
30079  *-------------------------------------------------------------------------------
30080  * Market balances
30081  *-------------------------------------------------------------------------------
30082   
30083  eq_mkt_clearing_oil_c_sasia(t,'c_sasia')$(internal('oil'))..
30084      sum( n$(map_clt_n('c_sasia',n) and trading_t('oil',t,n)),
30085          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
30086      ) =e= 0;
30087   
30088  *-------------------------------------------------------------------------------
30089  * New capital in the energy sector
30090  *-------------------------------------------------------------------------------
30091   
30092  * Electrical generation plants (new)
30093  eqk_en_c_sasia(jinv,t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
30094      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
30095                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
30096   
30097  *-------------------------------------------------------------------------------
30098  * ENERGY
30099  *-------------------------------------------------------------------------------
30100   
30101  * Capacity limits in the electrical sector
30102  eqq_en_mu_c_sasia(jel,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
30103      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
30104   
30105  * Efficiency of energy technology sector
30106  eqq_en_in_c_sasia(jfed,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
30107      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
30108                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
30109   
30110  * Energy generation "tree"
30111  eqq_en_tree_c_sasia(j,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
30112      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
30113   
30114  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
30117  *-------------------------------------------------------------------------------
30118  * Carbon Emissions
30119  * - Total CO2 emissions and CO2 Fossil fuel and Industry
30120  * - CO2 emission costs
30121  * - GHG permit market
30122  *-------------------------------------------------------------------------------
30123   
30125   
30126  * GHG emission cap
30127  eqq_emi_lim_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
30128      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
30129                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
30130   
30131  ***newcode
30132  eqq_emi_lim_USAc_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
30133  ***
30134   
30135  * Compute total and sectoral emissions
30136  eqq_emi_tree_c_sasia(t,n,e)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
30137      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
30138   
30139  * Industrial CO2 emissions
30140  eqq_emi_co2ffi_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30141      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
30142                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
30143                              # Emissions from biomass
30144                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
30145                              # Emissions from fuel extraction
30146                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
30147                              # Captured emissions
30148                              sum(sink, Q_EMI(sink,t,n));
30149   
30150  * CO2 emission costs
30151  eqcost_emi_co2_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30152      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
30153   
30154  * Emission permit market clearing for internal market
30155  eq_mkt_clearing_nip_c_sasia(c_mkt,t,'c_sasia')$(internal(c_mkt))..
30156      sum(n$(map_clt_n('c_sasia',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
30157   
30158  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
30161  *-------------------------------------------------------------------------------
30162  * Research & Development
30163  * Options:
30164  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
30165  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
30166  *-------------------------------------------------------------------------------
30167   
30169   
30170  * Knowledge stock accumulation
30171  eqk_rd_c_sasia(rd,t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
30172                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
30173                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
30174                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
30175                                        SPILL(rd,t,n)**rd_coef(rd,'d');
30176   
30177  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
30178  eqspill_coop_c_sasia(rd,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_sasia'))..
30179          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
30180                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_sasia',nn)), K_RD(rd,t,nn)) +
30181                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_sasia',nn))), K_RD.l(rd,t,nn))
30182                            ) *
30183                            (
30184                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_sasia',nn)), K_RD(rd,t,nn)) +
30185                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_sasia',nn))), K_RD.l(rd,t,nn))
30186                              ) - K_RD(rd,t,n)
30187                            );
30188   
30189  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
30190  eqspill_lead_c_sasia(rd,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_sasia')) and leadrd(rd,n))..
30191                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
30192   
30193  * No-cooperation : a follower sees is negative effect on the quantity he can grab
30194  eqspill_foll_c_sasia(rd,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_sasia')) and (not leadrd(rd,n)))..
30195                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
30196   
30197  *- Only LbR (without learning by doing)
30198  eqmcost_inv_back_c_sasia(jrd,t,tt,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
30199                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
30200                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
30201   
30202  *- LbR together with learning by doing ==> Two-factor learning curve
30203  eqmcost_inv_back_lbd_c_sasia(jrd,t,tt,tfirst,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
30204                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
30205                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
30206                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
30207   
30208  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
30211  *-------------------------------------------------------------------------------
30212  * Default Climate Policy Implementation
30213  *
30214  * Options:
30215  *    --policy={bau (default),ctax}
30216  *        Implement a climate policy setting
30217  *  [ --scen= ]
30218  *        Policy variant.
30219  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
30220  *          * XXX for a fixed percentage/yr (e.g. 5) growth
30221  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
30222  *  [ --ctax_year=2020 ]
30223  *        Starting year of the carbon tax
30224  *  [ --ctax_initial=30 ]
30225  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
30226  *
30227  *-------------------------------------------------------------------------------
30229   
30230  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
30232  *-------------------------------------------------------------------------------
30233  * Energy efficiency
30234  *-------------------------------------------------------------------------------
30235   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
30238  *-------------------------------------------------------------------------------
30239  * Hydro Power
30240  *-------------------------------------------------------------------------------
30241   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
30244  *-------------------------------------------------------------------------------
30245  * System Integration:
30246  * - Capacity constraint
30247  * - Flexibility constraint
30248  * - Grid Investment
30249  * - Capacity growth constraint
30250  *-------------------------------------------------------------------------------
30251   
30253   
30254   
30255  * Renewable CES
30256   
30257  * Definition of the renewable CES
30258  eqq_elintren_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30259      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
30260   
30261  * Capacity constraint
30262   
30264  eqfirm_capacity_c_sasia(t,n)$(map_clt_n('c_sasia',n) and (not tfix(t)) and year(t) gt 2005)..
30265                   sum(jel_firm, K_EN(jel_firm,t,n))
30266                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
30267                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
30268                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
30269                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
30270                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
30271                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
30272                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
30273                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
30274                                       ) / yearly_hours
30275  ;
30277   
30278  * Flexibility constraint
30279  eqflex_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30280          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
30281                             ( Q_EN('el',t,n) -
30282                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
30283                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
30284                             ) * flex_coeff('load')
30285  ;
30286   
30287  * Grid
30288   
30289  ** Grid depreciation and investments
30290  eqk_en_grid_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
30291                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
30292                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
30293   
30294  ** Grid adjustment to power capacity
30295  eqk_en_grid_to_k_en_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30296                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
30297                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
30298                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
30299                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
30300                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
30301                                     ) / grid_cost +
30302                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
30303                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
30304                                      K_EN('elcsp',t,n);
30305  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
30306   
30307  * Capacity growth constraint
30308  eqcap_growth_c_sasia(jinv,t,tp1,tp2,n)$((map_clt_n('c_sasia',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
30309                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
30310                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
30311   
30312  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
30315  *-------------------------------------------------------------------------------
30316  * Nuclear power plants
30317  *-------------------------------------------------------------------------------
30318   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
30321  *-------------------------------------------------------------------------------
30322  * GHG module
30323  * - CH4 FFI + CH4 waste + CH4 open fires
30324  * - N2O FFI + N2O waste + N2O open fires
30325  *-------------------------------------------------------------------------------
30326   
30328   
30329  * CH4, N2O waste emissions
30330  eqq_emi_waste_c_sasia(waste,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
30331                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
30332   
30333  * n2o FFI
30334  eqq_emi_n2o_ffi_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
30335    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
30336                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
30337                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
30338                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
30339                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
30340                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
30341                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
30342                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
30343                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
30344                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
30345                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
30346                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
30347                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
30348                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
30349                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
30350                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
30351                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
30352                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
30353                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
30354                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
30355                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
30356                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
30357                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
30358                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
30359                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
30360                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
30361                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
30362                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
30363                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
30364                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
30365                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
30366   
30367  * ch4 FFI
30368  eqq_emi_ch4_ffi_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
30369    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
30372  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
30373  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
30374                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
30375                             smax(tt$(year(tt) eq 2015),
30376                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
30379  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
30380  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
30381                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
30382   
30383  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
30386  *-------------------------------------------------------------------------------
30387  * F-gases
30388  * - LLF
30389  * - SLF
30390  *-------------------------------------------------------------------------------
30391   
30393   
30394  * F-gases emissions
30395  eqq_emi_fgases_c_sasia(fgases,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
30396                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
30397   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
30400  *-------------------------------------------------------------------------------
30401  * Landuse [simplified version of the land-use model]
30402  *-------------------------------------------------------------------------------
30403   
30405   
30406  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
30407  eq_wbio_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30408      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
30409   
30411  * Cost of all woody biomass produced for advanced biofuels and woody biomass
30412  eqcost_pes_wbio_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30413      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
30415   
30416  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
30419  *-------------------------------------------------------------------------------
30420  * Bioenergy power plant
30421  *-------------------------------------------------------------------------------
30422   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
30425  *-------------------------------------------------------------------------------
30426  * Traditional Biofuels
30427  * - Requires the precedence of mod_landuse
30428  *-------------------------------------------------------------------------------
30429   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
30432  *-------------------------------------------------------------------------------
30433  * Advanced biofuel
30434  * - Require the precedence of mod_landuse
30435  *-------------------------------------------------------------------------------
30436   
30438   
30439  * Limitations for nel backstops
30440  eqq_en_lim_advbiofuel_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
30441               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
30442               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
30443   
30444  * Peculiarity of advbiofuel
30445  eqmcost_fuel_advbiofuel_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30446                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
30447   
30448  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
30451  *-------------------------------------------------------------------------------
30452  * Carbon Capture and Sequestration
30453  *-------------------------------------------------------------------------------
30454   
30456   
30457  eqq_emi_ccs_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30458                  Q_EMI('ccs_plant',t,n) =e=
30459                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
30460                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
30461  ;
30462   
30463  eqcost_emi_sinks_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30464                  COST_EMI('ccs_plant',t,n) =e=
30465                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
30466                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
30467  ;
30468   
30469  eq_stor_ccs_cum_c_sasia(ccs_stor,tp1,t,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
30470                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
30471  ;
30472   
30473  eq_emi_stor_ccs_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30474                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
30475  ;
30476   
30477  eq_emi_leak_ccs_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30478                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
30479   
30480  *-------------------------------------------------------------------------------
30482   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
30484  *-------------------------------------------------------------------------------
30485  * Coal for non-electric sectors
30486  * - Coke Plants
30487  * - Industrial and Commercial combined-heat-and-power (CHP)
30488  * - Others
30489  *-------------------------------------------------------------------------------
30490   
30492   
30493  eqcost_en_nelcoal_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30494           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
30495                                          nelcoal_max_abat(t,n) *
30496                                          (nelcoal_cmac(n,'a') *
30497                                            Q_EN('nelcoalabat',t,n) /
30498                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
30499                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
30500                                              (exp(nelcoal_cmac(n,'c') *
30501                                                (Q_EN('nelcoalabat',t,n)/
30502                                                  (nelcoal_max_abat(t,n) *
30503                                                      nelcoal_baseline(t,n))
30504                                                  ) - 1 )
30505                                              )
30506                                          );
30507   
30508  eqq_ncoalabat_monotone_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
30509          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
30510   
30511  * ensure Q_EN is lower than K_EN for CCS as not in jel
30512  eqq_en_nelcoalccs_max_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30513          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
30514   
30515  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
30518  *-------------------------------------------------------------------------------
30519  * Wind energy module
30520  * - onshore and offshore
30521  *-------------------------------------------------------------------------------
30522   
30524   
30525  * Capacity limits in the wind onshore electrical sector
30526  eqq_en_mu_windon_c_sasia(wind_dist,wind_class,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
30527      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
30528   
30529  * Capacity limits in the wind offshore electrical sector
30530  eqq_en_mu_windoff_c_sasia(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
30531      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
30532   
30533  * Wind onshore electrical generation plants (new)
30534  eqk_en_windon_c_sasia(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
30535      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
30536                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
30537   
30538  * Wind offshore electrical generation plants (new)
30539  eqk_en_windoff_c_sasia(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
30540      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
30541                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
30542   
30543  * Total onshore wind energy production
30544  eqq_en_windon_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30545                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
30546   
30547  * Total offshore wind energy production
30548  eqq_en_windoff_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30549                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
30550   
30551  * Total onshore wind capacity
30552  eqk_en_windon_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30553                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
30554   
30555  * Total offshore wind capacity
30556  eqk_en_windoff_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30557                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
30558   
30559  * Total onshore wind investment
30560  eqi_en_windon_sum_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
30561                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
30562   
30563  * Total offshore wind investment
30564  eqi_en_windoff_sum_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
30565                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
30566   
30567  *-------------------------------------------------------------------------------
30569   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
30571  *-------------------------------------------------------------------------------
30572  * Solar Powerplants (PV and CSP) to the electrical system
30573  *-------------------------------------------------------------------------------
30574   
30575  *-------------------------------------------------------------------------------
30577   
30578   
30579  * Capacity limits in the pv electrical sector
30580  eqq_en_mu_pv_c_sasia(solar_dist,solar_class,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
30581                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
30582   
30583  * Capacity limits in the csp electrical sector
30584  eqq_en_mu_csp_c_sasia(solar_dist,solar_class,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
30585                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
30586   
30587  * PV electrical generation plants (new)
30588  eqk_en_pv_c_sasia(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
30589                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
30590                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
30591   
30592  * CSP electrical generation plants (new)
30593  eqk_en_csp_c_sasia(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
30594                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
30595                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
30596   
30597  * Total PV energy production
30598  eqq_en_pv_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30599                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
30600   
30601  * Total CSP energy production
30602  eqq_en_csp_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30603                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
30604   
30605  * Total PV capacity
30606  eqk_en_pv_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30607                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
30608   
30609  * Total CSP capacity
30610  eqk_en_csp_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30611                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
30612   
30613  * Total PV investment
30614  eqi_en_pv_sum_c_sasia(t,tp1,n)$(map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
30615                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
30616   
30617  * Total CSP investment
30618  eqi_en_csp_sum_c_sasia(t,tp1,n)$(map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
30619                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
30620   
30621  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
30622  eqk_en_solar_comp_c_sasia(t,n,solar_dist)$(map_clt_n('c_sasia',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
30623                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
30624                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
30625   
30626   
30627   
30628  *-------------------------------------------------------------------------------
30630   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
30632  *-------------------------------------------------------------------------------
30633  * Technology development scenarios
30634  *-------------------------------------------------------------------------------
30635   
30637   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
30639  *-------------------------------------------------------------------------------
30640  * Oil Extraction
30641  * Options:
30642  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
30643  *-------------------------------------------------------------------------------
30644   
30646   
30647  * Capacity
30648  eqoilcap_c_sasia(t,tp1,n,oilg)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
30649      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
30650   
30651  * Production
30652  eqoilprod_c_sasia(t,tp1,n,oilg)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
30653      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
30654   
30655  eqq_out_oil_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30656      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
30657   
30658  * Cumulative production
30659  eqcum_oil_c_sasia(t,tp1,n,oilg)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
30660      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
30661   
30662  * Cost
30663  eqcost_oil_c_sasia(t,tp1,n,oilg)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
30664      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
30665                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
30666                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
30667   
30668  * Investments
30669  eqi_oil_c_sasia(t,tp1,n,oilg)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
30670      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
30671   
30672  * Total investment
30673  eqi_out_oil_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
30674      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
30675   
30676  * Emissions
30677  eqq_emi_out_oil_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30678      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
30679   
30680  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
30683  *-------------------------------------------------------------------------------
30684  * Uranium Resources
30685  *-------------------------------------------------------------------------------
30686   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
30689  *-------------------------------------------------------------------------------
30690  * Gas Resources
30691  *-------------------------------------------------------------------------------
30692   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
30695  *-------------------------------------------------------------------------------
30696  * Coal Resources
30697  *-------------------------------------------------------------------------------
30698   
30700   
30701   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
30703  *-------------------------------------------------------------------------------
30704  * Climate
30705  *
30706  * Represents the climate
30707  * - based on the DICE model equations
30708  * - Radiative forcing for non CO2 ghgs
30709  * - parameters calibrated to reproduce MAGICC6.4 default response
30710  *
30711  *  Options:
30712  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
30713  * - $setglobal cooperate_on_climate {'YES','NO'}
30714  * - 'YES'(default): Countries within a coalition act in cooperation
30715  *   'NO': Countries within a coalition act individually
30716  *
30717  *-------------------------------------------------------------------------------
30718   
30720   
30722   
30723  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
30726  *-------------------------------------------------------------------------------
30727  * Long-run Damages from Climate Change
30728  * - Economic impacts
30729  * - Adaptation
30730  *-------------------------------------------------------------------------------
30731   
30733   
30735   
30736  *-------------------------------------------------------------------------------
30738   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
30740  *-------------------------------------------------------------------------------
30741  * Light-duty Vehicles for Personal Transport
30742  *-------------------------------------------------------------------------------
30743   
30745   
30746  *** newcode
30747  eqq_inv_red_ban_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30748      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
30749   
30750  ***
30751  *- Number of light duty vehicles
30752  eqnb_veh_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30753      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
30754   
30755  *- Yearly energy demand of vehicles
30756  eqq_en_veh_c_sasia(jveh,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30757      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
30758   
30759  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
30760  eqq_el_edv_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30761      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
30762   
30763  *- Investment cost for hybrid vehicles
30764  eqmcost_inv_hybrid_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
30765                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
30766   
30767  *- Investment cost for plug-in hybrid vehicles
30768  eqmcost_inv_plghybrid_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
30769                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
30770   
30771  *- Investment cost for electric drive vehicles
30772  eqmcost_inv_edv_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
30773                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
30774   
30775  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
30778  *-------------------------------------------------------------------------------
30779  * Road Freight Transport
30780  *-------------------------------------------------------------------------------
30782   
30783  *-  Number of freight vehicles
30784  eqnb_frtveh_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30785                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
30786   
30787  *-  Yearly fuel consumption of freight vehicles
30788  eqq_en_frtveh_c_sasia(jfrt,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30789                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
30790   
30791  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
30792  eqq_el_frtedv_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30793                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
30794   
30795  *-  Investment cost for hbd_stfr vehicle
30796  eqmcost_inv_hbd_stfr_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
30797                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
30798   
30799  *-  Investment cost for plug-in hbd_stfr vehicle
30800  eqmcost_inv_plghbd_stfr_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
30801                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
30802   
30803  *-  Investment cost for electric drive vehicle
30804  eqmcost_inv_edv_stfr_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
30805                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
30806   
30807  *-------------------------------------------------------------------------------
30809   
30810   
30811   
30812   
30813   
30814   
30815  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
30817  *-------------------------------------------------------------------------------
30818  * Traditional Biomass
30819  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
30820  *  - require post_process to be launch before
30821  *-------------------------------------------------------------------------------
30822   
30824   
30825  * Optional modules
30826   
30827  * Policy modules
30828   
30829  * Calibration
30832   
30833   
30834  model witch_c_sasia /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
30836  *-------------------------------------------------------------------------------
30837  * Call modules by order
30838  *-------------------------------------------------------------------------------
30842   
30843  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
30845  *-------------------------------------------------------------------------------
30846  * Algorithm
30847  *-------------------------------------------------------------------------------
30848   
30850   
30851  eqobj_c_sasia
30852   
30853  *-------------------------------------------------------------------------------
30855   
30856  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
30858  *-------------------------------------------------------------------------------
30859  * Time
30860  * - Temporal structure
30861  * - Fixed time periods
30862  * - States of the world
30863  *-------------------------------------------------------------------------------
30864   
30866   
30867  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
30869  *-------------------------------------------------------------------------------
30870  * Geographic dimension and mapping with countries
30871  *-------------------------------------------------------------------------------
30872   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
30875  *-------------------------------------------------------------------------------
30876  * Non-Cooperative Setup
30877  *
30878  * Each region is defined as an individual coalition.
30879  *
30880  *-------------------------------------------------------------------------------
30881   
30883   
30884  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
30886  *-------------------------------------------------------------------------------
30887  * Welfare
30888  *-------------------------------------------------------------------------------
30889   
30891   
30892  equtility_c_sasia
30893   
30894  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
30897  *-------------------------------------------------------------------------------
30898  * Economy
30899  * - Production and Consumption definition
30900  * - Top-level of the production function
30901  * Options:
30902  * --original_ssp=1 : original SSP population and GDP data
30903  *-------------------------------------------------------------------------------
30904   
30906   
30907  eqk_c_sasia
30908  eqq_cc_c_sasia
30909  eqq_fen_c_sasia
30910  eqq_y_c_sasia
30911   
30912  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
30915  *-------------------------------------------------------------------------------
30916  * Energy sector
30917  *-------------------------------------------------------------------------------
30918   
30920   
30921  eq_mkt_clearing_oil_c_sasia
30922  eqcost_pes_c_sasia
30923  eqcost_ses_c_sasia
30924  eqk_en_c_sasia
30925  eqq_ces_el_c_sasia
30926  eqq_ces_nelgas_c_sasia
30927  eqq_el2_c_sasia
30928  eqq_el_c_sasia
30929  eqq_elff_c_sasia
30930  eqq_en_c_sasia
30931  eqq_en_in_c_sasia
30932  eqq_en_mu_c_sasia
30933  eqq_en_tree_c_sasia
30934  eqq_nel_c_sasia
30935  eqq_nelog_c_sasia
30936  eqq_fuel_c_sasia
30937  eqq_elffren_c_sasia
30938   
30939  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
30942  *-------------------------------------------------------------------------------
30943  * Carbon Emissions
30944  * - Total CO2 emissions and CO2 Fossil fuel and Industry
30945  * - CO2 emission costs
30946  * - GHG permit market
30947  *-------------------------------------------------------------------------------
30948   
30950   
30951  eqq_emi_lim_c_sasia
30952  ***newcode
30953  eqq_emi_lim_USAc_sasia
30954  ***
30955  eqq_emi_tree_c_sasia
30956  eqq_emi_co2ffi_c_sasia
30957   
30958  eqcost_emi_co2_c_sasia
30959   
30960  eq_mkt_clearing_nip_c_sasia
30961   
30962  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
30965  *-------------------------------------------------------------------------------
30966  * Research & Development
30967  * Options:
30968  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
30969  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
30970  *-------------------------------------------------------------------------------
30971   
30973   
30974  eqk_rd_c_sasia
30975  eqspill_coop_c_sasia
30976  eqspill_lead_c_sasia
30977  eqspill_foll_c_sasia
30978  eqmcost_inv_back_c_sasia
30979  eqmcost_inv_back_lbd_c_sasia
30980   
30981  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
30984  *-------------------------------------------------------------------------------
30985  * Default Climate Policy Implementation
30986  *
30987  * Options:
30988  *    --policy={bau (default),ctax}
30989  *        Implement a climate policy setting
30990  *  [ --scen= ]
30991  *        Policy variant.
30992  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
30993  *          * XXX for a fixed percentage/yr (e.g. 5) growth
30994  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
30995  *  [ --ctax_year=2020 ]
30996  *        Starting year of the carbon tax
30997  *  [ --ctax_initial=30 ]
30998  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
30999  *
31000  *-------------------------------------------------------------------------------
31002   
31003  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
31005  *-------------------------------------------------------------------------------
31006  * Energy efficiency
31007  *-------------------------------------------------------------------------------
31008   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
31011  *-------------------------------------------------------------------------------
31012  * Hydro Power
31013  *-------------------------------------------------------------------------------
31014   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
31017  *-------------------------------------------------------------------------------
31018  * System Integration:
31019  * - Capacity constraint
31020  * - Flexibility constraint
31021  * - Grid Investment
31022  * - Capacity growth constraint
31023  *-------------------------------------------------------------------------------
31024   
31026   
31027  eqq_elintren_c_sasia
31028  eqflex_c_sasia
31029  eqk_en_grid_c_sasia
31030  eqk_en_grid_to_k_en_c_sasia
31031  eqfirm_capacity_c_sasia
31032  eqcap_growth_c_sasia
31033   
31034  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
31037  *-------------------------------------------------------------------------------
31038  * Nuclear power plants
31039  *-------------------------------------------------------------------------------
31040   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
31043  *-------------------------------------------------------------------------------
31044  * GHG module
31045  * - CH4 FFI + CH4 waste + CH4 open fires
31046  * - N2O FFI + N2O waste + N2O open fires
31047  *-------------------------------------------------------------------------------
31048   
31050   
31051  eqq_emi_waste_c_sasia
31052  eqq_emi_n2o_ffi_c_sasia
31053  eqq_emi_ch4_ffi_c_sasia
31054   
31055  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
31058  *-------------------------------------------------------------------------------
31059  * F-gases
31060  * - LLF
31061  * - SLF
31062  *-------------------------------------------------------------------------------
31063   
31065   
31066  eqq_emi_fgases_c_sasia
31067   
31068  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
31071  *-------------------------------------------------------------------------------
31072  * Landuse [simplified version of the land-use model]
31073  *-------------------------------------------------------------------------------
31074   
31076   
31077  eq_wbio_c_sasia
31078  eqcost_pes_wbio_c_sasia
31079   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
31082  *-------------------------------------------------------------------------------
31083  * Bioenergy power plant
31084  *-------------------------------------------------------------------------------
31085   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
31088  *-------------------------------------------------------------------------------
31089  * Traditional Biofuels
31090  * - Requires the precedence of mod_landuse
31091  *-------------------------------------------------------------------------------
31092   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
31095  *-------------------------------------------------------------------------------
31096  * Advanced biofuel
31097  * - Require the precedence of mod_landuse
31098  *-------------------------------------------------------------------------------
31099   
31101   
31102  eqq_en_lim_advbiofuel_c_sasia
31103  eqmcost_fuel_advbiofuel_c_sasia
31104   
31105  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
31108  *-------------------------------------------------------------------------------
31109  * Carbon Capture and Sequestration
31110  *-------------------------------------------------------------------------------
31111   
31113   
31114  eqq_emi_ccs_c_sasia
31115  eqcost_emi_sinks_c_sasia
31116  eq_stor_ccs_cum_c_sasia
31117  eq_emi_stor_ccs_c_sasia
31118  eq_emi_leak_ccs_c_sasia
31119   
31120  *-------------------------------------------------------------------------------
31122   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
31124  *-------------------------------------------------------------------------------
31125  * Coal for non-electric sectors
31126  * - Coke Plants
31127  * - Industrial and Commercial combined-heat-and-power (CHP)
31128  * - Others
31129  *-------------------------------------------------------------------------------
31130   
31132   
31133  eqcost_en_nelcoal_c_sasia
31134  eqq_ncoalabat_monotone_c_sasia
31135  eqq_en_nelcoalccs_max_c_sasia
31136   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
31139  *-------------------------------------------------------------------------------
31140  * Wind energy module
31141  * - onshore and offshore
31142  *-------------------------------------------------------------------------------
31143   
31145   
31146  eqq_en_mu_windon_c_sasia
31147  eqq_en_mu_windoff_c_sasia
31148  eqk_en_windon_c_sasia
31149  eqk_en_windoff_c_sasia
31150  eqq_en_windon_sum_c_sasia
31151  eqq_en_windoff_sum_c_sasia
31152  eqk_en_windon_sum_c_sasia
31153  eqk_en_windoff_sum_c_sasia
31154  eqi_en_windon_sum_c_sasia
31155  eqi_en_windoff_sum_c_sasia
31156   
31158   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
31160  *-------------------------------------------------------------------------------
31161  * Solar Powerplants (PV and CSP) to the electrical system
31162  *-------------------------------------------------------------------------------
31163   
31164  *-------------------------------------------------------------------------------
31166   
31167  eqq_en_mu_pv_c_sasia
31168  eqq_en_mu_csp_c_sasia
31169  eqk_en_pv_c_sasia
31170  eqk_en_csp_c_sasia
31171  eqq_en_pv_sum_c_sasia
31172  eqq_en_csp_sum_c_sasia
31173  eqk_en_pv_sum_c_sasia
31174  eqk_en_csp_sum_c_sasia
31175  eqi_en_pv_sum_c_sasia
31176  eqi_en_csp_sum_c_sasia
31177  eqk_en_solar_comp_c_sasia
31178   
31179  *-------------------------------------------------------------------------------
31181   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
31183  *-------------------------------------------------------------------------------
31184  * Technology development scenarios
31185  *-------------------------------------------------------------------------------
31186   
31188   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
31190  *-------------------------------------------------------------------------------
31191  * Oil Extraction
31192  * Options:
31193  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
31194  *-------------------------------------------------------------------------------
31195   
31197   
31198  eqoilcap_c_sasia
31199  eqoilprod_c_sasia
31200  eqq_out_oil_c_sasia
31201  eqcum_oil_c_sasia
31202  eqcost_oil_c_sasia
31203  eqi_oil_c_sasia
31204  eqi_out_oil_c_sasia
31205  eqq_emi_out_oil_c_sasia
31206   
31207  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
31210  *-------------------------------------------------------------------------------
31211  * Uranium Resources
31212  *-------------------------------------------------------------------------------
31213   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
31216  *-------------------------------------------------------------------------------
31217  * Gas Resources
31218  *-------------------------------------------------------------------------------
31219   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
31222  *-------------------------------------------------------------------------------
31223  * Coal Resources
31224  *-------------------------------------------------------------------------------
31225   
31227   
31228   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
31230  *-------------------------------------------------------------------------------
31231  * Climate
31232  *
31233  * Represents the climate
31234  * - based on the DICE model equations
31235  * - Radiative forcing for non CO2 ghgs
31236  * - parameters calibrated to reproduce MAGICC6.4 default response
31237  *
31238  *  Options:
31239  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
31240  * - $setglobal cooperate_on_climate {'YES','NO'}
31241  * - 'YES'(default): Countries within a coalition act in cooperation
31242  *   'NO': Countries within a coalition act individually
31243  *
31244  *-------------------------------------------------------------------------------
31245   
31247   
31249   
31250  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
31253  *-------------------------------------------------------------------------------
31254  * Long-run Damages from Climate Change
31255  * - Economic impacts
31256  * - Adaptation
31257  *-------------------------------------------------------------------------------
31258   
31260   
31262   
31263  *-------------------------------------------------------------------------------
31265   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
31267  *-------------------------------------------------------------------------------
31268  * Light-duty Vehicles for Personal Transport
31269  *-------------------------------------------------------------------------------
31270   
31272   
31273  eqnb_veh_c_sasia
31274  eqq_en_veh_c_sasia
31275  eqq_el_edv_c_sasia
31276  eqmcost_inv_hybrid_c_sasia
31277  eqmcost_inv_plghybrid_c_sasia
31278  eqmcost_inv_edv_c_sasia
31279  *** newcode
31280  eqq_inv_red_ban_c_sasia
31281  ***
31282  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
31285  *-------------------------------------------------------------------------------
31286  * Road Freight Transport
31287  *-------------------------------------------------------------------------------
31289   
31290  eqnb_frtveh_c_sasia
31291  eqq_en_frtveh_c_sasia
31292  eqq_el_frtedv_c_sasia
31293  eqmcost_inv_hbd_stfr_c_sasia
31294  eqmcost_inv_plghbd_stfr_c_sasia
31295  eqmcost_inv_edv_stfr_c_sasia
31296   
31297  *-------------------------------------------------------------------------------
31299   
31300   
31301   
31302   
31303   
31304   
31305  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
31307  *-------------------------------------------------------------------------------
31308  * Traditional Biomass
31309  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
31310  *  - require post_process to be launch before
31311  *-------------------------------------------------------------------------------
31312   
31314   
31315  * Optional modules
31316   
31317  * Policy modules
31318   
31319  * Calibration
31322  /;
31323   
31324  witch_c_sasia.optfile=1;   # the option file solvername.opt is to be used
31325  witch_c_sasia.holdfixed=1; # treat fixed values as constant
31326  witch_c_sasia.scaleopt=1;  # Use scaling for better gradients estimation
31327  witch_c_sasia.solvelink=3; # Use parallel or sequential solving
31328   
31333   
31334  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
31336  *-------------------------------------------------------------------------------
31337  * Call modules by order
31338  *-------------------------------------------------------------------------------
31342   
31343  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
31345  *-------------------------------------------------------------------------------
31346  * Algorithm
31347  *-------------------------------------------------------------------------------
31348   
31350   
31351  eqobj_c_seasia
31352   
31353  *-------------------------------------------------------------------------------
31355   
31356  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
31358  *-------------------------------------------------------------------------------
31359  * Time
31360  * - Temporal structure
31361  * - Fixed time periods
31362  * - States of the world
31363  *-------------------------------------------------------------------------------
31364   
31366   
31367  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
31369  *-------------------------------------------------------------------------------
31370  * Geographic dimension and mapping with countries
31371  *-------------------------------------------------------------------------------
31372   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
31375  *-------------------------------------------------------------------------------
31376  * Non-Cooperative Setup
31377  *
31378  * Each region is defined as an individual coalition.
31379  *
31380  *-------------------------------------------------------------------------------
31381   
31383   
31384  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
31386  *-------------------------------------------------------------------------------
31387  * Welfare
31388  *-------------------------------------------------------------------------------
31389   
31391   
31392  equtility_c_seasia
31393   
31394  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
31397  *-------------------------------------------------------------------------------
31398  * Economy
31399  * - Production and Consumption definition
31400  * - Top-level of the production function
31401  * Options:
31402  * --original_ssp=1 : original SSP population and GDP data
31403  *-------------------------------------------------------------------------------
31404   
31406   
31407  eqk_c_seasia
31408  eqq_cc_c_seasia
31409  eqq_fen_c_seasia
31410  eqq_y_c_seasia
31411   
31412  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
31415  *-------------------------------------------------------------------------------
31416  * Energy sector
31417  *-------------------------------------------------------------------------------
31418   
31420   
31421  eq_mkt_clearing_oil_c_seasia
31422  eqcost_pes_c_seasia
31423  eqcost_ses_c_seasia
31424  eqk_en_c_seasia
31425  eqq_ces_el_c_seasia
31426  eqq_ces_nelgas_c_seasia
31427  eqq_el2_c_seasia
31428  eqq_el_c_seasia
31429  eqq_elff_c_seasia
31430  eqq_en_c_seasia
31431  eqq_en_in_c_seasia
31432  eqq_en_mu_c_seasia
31433  eqq_en_tree_c_seasia
31434  eqq_nel_c_seasia
31435  eqq_nelog_c_seasia
31436  eqq_fuel_c_seasia
31437  eqq_elffren_c_seasia
31438   
31439  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
31442  *-------------------------------------------------------------------------------
31443  * Carbon Emissions
31444  * - Total CO2 emissions and CO2 Fossil fuel and Industry
31445  * - CO2 emission costs
31446  * - GHG permit market
31447  *-------------------------------------------------------------------------------
31448   
31450   
31451  eqq_emi_lim_c_seasia
31452  ***newcode
31453  eqq_emi_lim_USAc_seasia
31454  ***
31455  eqq_emi_tree_c_seasia
31456  eqq_emi_co2ffi_c_seasia
31457   
31458  eqcost_emi_co2_c_seasia
31459   
31460  eq_mkt_clearing_nip_c_seasia
31461   
31462  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
31465  *-------------------------------------------------------------------------------
31466  * Research & Development
31467  * Options:
31468  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
31469  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
31470  *-------------------------------------------------------------------------------
31471   
31473   
31474  eqk_rd_c_seasia
31475  eqspill_coop_c_seasia
31476  eqspill_lead_c_seasia
31477  eqspill_foll_c_seasia
31478  eqmcost_inv_back_c_seasia
31479  eqmcost_inv_back_lbd_c_seasia
31480   
31481  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
31484  *-------------------------------------------------------------------------------
31485  * Default Climate Policy Implementation
31486  *
31487  * Options:
31488  *    --policy={bau (default),ctax}
31489  *        Implement a climate policy setting
31490  *  [ --scen= ]
31491  *        Policy variant.
31492  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
31493  *          * XXX for a fixed percentage/yr (e.g. 5) growth
31494  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
31495  *  [ --ctax_year=2020 ]
31496  *        Starting year of the carbon tax
31497  *  [ --ctax_initial=30 ]
31498  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
31499  *
31500  *-------------------------------------------------------------------------------
31502   
31503  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
31505  *-------------------------------------------------------------------------------
31506  * Energy efficiency
31507  *-------------------------------------------------------------------------------
31508   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
31511  *-------------------------------------------------------------------------------
31512  * Hydro Power
31513  *-------------------------------------------------------------------------------
31514   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
31517  *-------------------------------------------------------------------------------
31518  * System Integration:
31519  * - Capacity constraint
31520  * - Flexibility constraint
31521  * - Grid Investment
31522  * - Capacity growth constraint
31523  *-------------------------------------------------------------------------------
31524   
31526   
31527  eqq_elintren_c_seasia
31528  eqflex_c_seasia
31529  eqk_en_grid_c_seasia
31530  eqk_en_grid_to_k_en_c_seasia
31531  eqfirm_capacity_c_seasia
31532  eqcap_growth_c_seasia
31533   
31534  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
31537  *-------------------------------------------------------------------------------
31538  * Nuclear power plants
31539  *-------------------------------------------------------------------------------
31540   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
31543  *-------------------------------------------------------------------------------
31544  * GHG module
31545  * - CH4 FFI + CH4 waste + CH4 open fires
31546  * - N2O FFI + N2O waste + N2O open fires
31547  *-------------------------------------------------------------------------------
31548   
31550   
31551  eqq_emi_waste_c_seasia
31552  eqq_emi_n2o_ffi_c_seasia
31553  eqq_emi_ch4_ffi_c_seasia
31554   
31555  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
31558  *-------------------------------------------------------------------------------
31559  * F-gases
31560  * - LLF
31561  * - SLF
31562  *-------------------------------------------------------------------------------
31563   
31565   
31566  eqq_emi_fgases_c_seasia
31567   
31568  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
31571  *-------------------------------------------------------------------------------
31572  * Landuse [simplified version of the land-use model]
31573  *-------------------------------------------------------------------------------
31574   
31576   
31577  eq_wbio_c_seasia
31578  eqcost_pes_wbio_c_seasia
31579   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
31582  *-------------------------------------------------------------------------------
31583  * Bioenergy power plant
31584  *-------------------------------------------------------------------------------
31585   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
31588  *-------------------------------------------------------------------------------
31589  * Traditional Biofuels
31590  * - Requires the precedence of mod_landuse
31591  *-------------------------------------------------------------------------------
31592   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
31595  *-------------------------------------------------------------------------------
31596  * Advanced biofuel
31597  * - Require the precedence of mod_landuse
31598  *-------------------------------------------------------------------------------
31599   
31601   
31602  eqq_en_lim_advbiofuel_c_seasia
31603  eqmcost_fuel_advbiofuel_c_seasia
31604   
31605  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
31608  *-------------------------------------------------------------------------------
31609  * Carbon Capture and Sequestration
31610  *-------------------------------------------------------------------------------
31611   
31613   
31614  eqq_emi_ccs_c_seasia
31615  eqcost_emi_sinks_c_seasia
31616  eq_stor_ccs_cum_c_seasia
31617  eq_emi_stor_ccs_c_seasia
31618  eq_emi_leak_ccs_c_seasia
31619   
31620  *-------------------------------------------------------------------------------
31622   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
31624  *-------------------------------------------------------------------------------
31625  * Coal for non-electric sectors
31626  * - Coke Plants
31627  * - Industrial and Commercial combined-heat-and-power (CHP)
31628  * - Others
31629  *-------------------------------------------------------------------------------
31630   
31632   
31633  eqcost_en_nelcoal_c_seasia
31634  eqq_ncoalabat_monotone_c_seasia
31635  eqq_en_nelcoalccs_max_c_seasia
31636   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
31639  *-------------------------------------------------------------------------------
31640  * Wind energy module
31641  * - onshore and offshore
31642  *-------------------------------------------------------------------------------
31643   
31645   
31646  eqq_en_mu_windon_c_seasia
31647  eqq_en_mu_windoff_c_seasia
31648  eqk_en_windon_c_seasia
31649  eqk_en_windoff_c_seasia
31650  eqq_en_windon_sum_c_seasia
31651  eqq_en_windoff_sum_c_seasia
31652  eqk_en_windon_sum_c_seasia
31653  eqk_en_windoff_sum_c_seasia
31654  eqi_en_windon_sum_c_seasia
31655  eqi_en_windoff_sum_c_seasia
31656   
31658   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
31660  *-------------------------------------------------------------------------------
31661  * Solar Powerplants (PV and CSP) to the electrical system
31662  *-------------------------------------------------------------------------------
31663   
31664  *-------------------------------------------------------------------------------
31666   
31667  eqq_en_mu_pv_c_seasia
31668  eqq_en_mu_csp_c_seasia
31669  eqk_en_pv_c_seasia
31670  eqk_en_csp_c_seasia
31671  eqq_en_pv_sum_c_seasia
31672  eqq_en_csp_sum_c_seasia
31673  eqk_en_pv_sum_c_seasia
31674  eqk_en_csp_sum_c_seasia
31675  eqi_en_pv_sum_c_seasia
31676  eqi_en_csp_sum_c_seasia
31677  eqk_en_solar_comp_c_seasia
31678   
31679  *-------------------------------------------------------------------------------
31681   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
31683  *-------------------------------------------------------------------------------
31684  * Technology development scenarios
31685  *-------------------------------------------------------------------------------
31686   
31688   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
31690  *-------------------------------------------------------------------------------
31691  * Oil Extraction
31692  * Options:
31693  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
31694  *-------------------------------------------------------------------------------
31695   
31697   
31698  eqoilcap_c_seasia
31699  eqoilprod_c_seasia
31700  eqq_out_oil_c_seasia
31701  eqcum_oil_c_seasia
31702  eqcost_oil_c_seasia
31703  eqi_oil_c_seasia
31704  eqi_out_oil_c_seasia
31705  eqq_emi_out_oil_c_seasia
31706   
31707  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
31710  *-------------------------------------------------------------------------------
31711  * Uranium Resources
31712  *-------------------------------------------------------------------------------
31713   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
31716  *-------------------------------------------------------------------------------
31717  * Gas Resources
31718  *-------------------------------------------------------------------------------
31719   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
31722  *-------------------------------------------------------------------------------
31723  * Coal Resources
31724  *-------------------------------------------------------------------------------
31725   
31727   
31728   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
31730  *-------------------------------------------------------------------------------
31731  * Climate
31732  *
31733  * Represents the climate
31734  * - based on the DICE model equations
31735  * - Radiative forcing for non CO2 ghgs
31736  * - parameters calibrated to reproduce MAGICC6.4 default response
31737  *
31738  *  Options:
31739  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
31740  * - $setglobal cooperate_on_climate {'YES','NO'}
31741  * - 'YES'(default): Countries within a coalition act in cooperation
31742  *   'NO': Countries within a coalition act individually
31743  *
31744  *-------------------------------------------------------------------------------
31745   
31747   
31749   
31750  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
31753  *-------------------------------------------------------------------------------
31754  * Long-run Damages from Climate Change
31755  * - Economic impacts
31756  * - Adaptation
31757  *-------------------------------------------------------------------------------
31758   
31760   
31762   
31763  *-------------------------------------------------------------------------------
31765   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
31767  *-------------------------------------------------------------------------------
31768  * Light-duty Vehicles for Personal Transport
31769  *-------------------------------------------------------------------------------
31770   
31772   
31773  eqnb_veh_c_seasia
31774  eqq_en_veh_c_seasia
31775  eqq_el_edv_c_seasia
31776  eqmcost_inv_hybrid_c_seasia
31777  eqmcost_inv_plghybrid_c_seasia
31778  eqmcost_inv_edv_c_seasia
31779  *** newcode
31780  eqq_inv_red_ban_c_seasia
31781  ***
31782  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
31785  *-------------------------------------------------------------------------------
31786  * Road Freight Transport
31787  *-------------------------------------------------------------------------------
31789   
31790  eqnb_frtveh_c_seasia
31791  eqq_en_frtveh_c_seasia
31792  eqq_el_frtedv_c_seasia
31793  eqmcost_inv_hbd_stfr_c_seasia
31794  eqmcost_inv_plghbd_stfr_c_seasia
31795  eqmcost_inv_edv_stfr_c_seasia
31796   
31797  *-------------------------------------------------------------------------------
31799   
31800   
31801   
31802   
31803   
31804   
31805  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
31807  *-------------------------------------------------------------------------------
31808  * Traditional Biomass
31809  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
31810  *  - require post_process to be launch before
31811  *-------------------------------------------------------------------------------
31812   
31814   
31815  * Optional modules
31816   
31817  * Policy modules
31818   
31819  * Calibration
31822  ;
31823   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
31825  *-------------------------------------------------------------------------------
31826  * Call modules by order
31827  *-------------------------------------------------------------------------------
31831   
31832  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
31834  *-------------------------------------------------------------------------------
31835  * Algorithm
31836  *-------------------------------------------------------------------------------
31837   
31839   
31841  * Add the component of the (maximized) objective function as required by the ADMM algorithm
31842  eqobj_c_seasia..
31843      OBJADMM =e= UTILITY -
31844          sum(t, rho_admm('oil',t) / 2 *
31845              sum(n$(map_clt_n('c_seasia',n) and trading_t('oil',t,n)),
31846                  power(
31847                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
31848                      x_admm('oil',t,n) +
31849                      xavg_admm('oil',t) +
31850                      u_admm('oil', t)
31851                  ,2)
31852              )) -
31853          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
31854              sum(n$(map_clt_n('c_seasia',n) and trading_t(c_mkt,t,n)),
31855                  power(
31856                      Q_EMI(c_mkt,t,n) -
31857                      x_admm(c_mkt,t,n) +
31858                      xavg_admm(c_mkt,t) +
31859                      u_admm(c_mkt,t)
31860                  ,2)
31861              ))
31862      ;
31864   
31865  *-------------------------------------------------------------------------------
31867   
31868  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
31870  *-------------------------------------------------------------------------------
31871  * Time
31872  * - Temporal structure
31873  * - Fixed time periods
31874  * - States of the world
31875  *-------------------------------------------------------------------------------
31876   
31878   
31879  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
31881  *-------------------------------------------------------------------------------
31882  * Geographic dimension and mapping with countries
31883  *-------------------------------------------------------------------------------
31884   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
31887  *-------------------------------------------------------------------------------
31888  * Non-Cooperative Setup
31889  *
31890  * Each region is defined as an individual coalition.
31891  *
31892  *-------------------------------------------------------------------------------
31893   
31895   
31896  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
31898  *-------------------------------------------------------------------------------
31899  * Welfare
31900  *-------------------------------------------------------------------------------
31901   
31903   
31904  * Objective function - Welfare to be maximized
31905  equtility_c_seasia..
31906      UTILITY =e=
31907   
31908  * Negishi SWF
31910   
31911  * Welfare functions based on CEBGE
31914                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
31915                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
31916                      ((sum(n$map_clt_n('c_seasia',n),
31917                        (l(t,n) / sum(nn$map_clt_n('c_seasia',nn), l(t,nn))) *
31918                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
31919                       )**(1 / (1 - gamma))
31920                      )**(1 - eta) ) +
31921                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
31922                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
31923                      ((sum(n$map_clt_n('c_seasia',n),
31924                        (l(t,n) / sum(nn$map_clt_n('c_seasia',nn), l(t,nn))) *
31925                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
31926                       )**(1 / (1 - gamma))
31927                      )**(1 - eta) )
31928                  )**(1/(1 - eta)) * 1e6
31931   
31932   
31933  ;
31934   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
31937  *-------------------------------------------------------------------------------
31938  * Economy
31939  * - Production and Consumption definition
31940  * - Top-level of the production function
31941  * Options:
31942  * --original_ssp=1 : original SSP population and GDP data
31943  *-------------------------------------------------------------------------------
31944   
31946   
31947  * Production
31948  eqq_y_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31949   
31950      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
31951                     ## Climate feedback on economy
31953                     ## Net cost of Primary and Secondary Energy Sources
31954                     - sum(fuel, COST_FUEL(fuel,t,n))
31955                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
31956                     - sum(cce, COST_EMI(cce,t,n))
31957                     ## Carbon tax
31958                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
31959                     ## Additionnal costs on gross product
31960                     - sum(ccy, COST_Y(ccy,t,n))
31961  ;
31962   
31963  * Consumption
31964  eqq_cc_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
31965      Q('cc',t,n) =e= Q('y',t,n)
31966                      ## Investments in goods g (final good, adaptation)
31967                      -sum(g, I(g,t,n))
31968                      ## Investments in r&d
31969                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
31970                      ## Investments in energy technlogies
31971                      -sum(jinv, I_EN(jinv,t,n))
31972                       ## Investments in grid infrastructures
31973                      - I_EN_GRID(t,n)
31974                      ## Investments in extraction sector
31975                      -sum(extract(f), I_OUT(f,t,n))
31976                      ## O&M for energy technlogies
31977                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
31978                      ## O&M for extraction
31979                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
31980                      ## Energy technology penalty costs
31981                      -sum(jpenalty(j), COST_EN(j,t,n))
31982  ;
31983   
31984  * Capital accumulation
31985  eqk_c_seasia(g,t,tp1,n)$(map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
31986      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
31987   
31988  * Energy services
31989  eqq_fen_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31990      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
31991   
31992  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
31995  *-------------------------------------------------------------------------------
31996  * Energy sector
31997  *-------------------------------------------------------------------------------
31998   
32000   
32001  *-------------------------------------------------------------------------------
32002  * Production - Energy sector
32003  *-------------------------------------------------------------------------------
32004   
32005  eqq_en_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32006      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
32007   
32008  *-------------------------------------------------------------------------------
32009  * Production - Electrical sector
32010  *-------------------------------------------------------------------------------
32011   
32012  eqq_el_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32013      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
32014   
32015  eqq_el2_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32016      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
32017   
32018  eqq_elffren_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32019      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
32020  eqq_elff_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32021      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
32022   
32023  eqq_ces_el_c_seasia(ices_el,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
32024      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
32025  ;
32026   
32027  *-------------------------------------------------------------------------------
32028  * Production - Non-electrical sector
32029  *-------------------------------------------------------------------------------
32030   
32031  eqq_nel_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32032      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
32033   
32034  eqq_nelog_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32035      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
32036  ;
32037  eqq_ces_nelgas_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32038      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
32039   
32040  *-------------------------------------------------------------------------------
32041  * PES and fuels
32042  *-------------------------------------------------------------------------------
32043   
32044  eqq_fuel_c_seasia(fuel,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
32045      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
32046   
32047  *-------------------------------------------------------------------------------
32048  * Cost
32049  *-------------------------------------------------------------------------------
32050   
32051  * Net cost of Primary Energy Supplies
32052  eqcost_pes_c_seasia(f,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
32053      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
32054                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
32055   
32056  * Net cost of Secondary Energy Supplies
32057  eqcost_ses_c_seasia(s,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32058      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
32059   
32060   
32061  *-------------------------------------------------------------------------------
32062  * Market balances
32063  *-------------------------------------------------------------------------------
32064   
32065  eq_mkt_clearing_oil_c_seasia(t,'c_seasia')$(internal('oil'))..
32066      sum( n$(map_clt_n('c_seasia',n) and trading_t('oil',t,n)),
32067          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
32068      ) =e= 0;
32069   
32070  *-------------------------------------------------------------------------------
32071  * New capital in the energy sector
32072  *-------------------------------------------------------------------------------
32073   
32074  * Electrical generation plants (new)
32075  eqk_en_c_seasia(jinv,t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
32076      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
32077                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
32078   
32079  *-------------------------------------------------------------------------------
32080  * ENERGY
32081  *-------------------------------------------------------------------------------
32082   
32083  * Capacity limits in the electrical sector
32084  eqq_en_mu_c_seasia(jel,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
32085      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
32086   
32087  * Efficiency of energy technology sector
32088  eqq_en_in_c_seasia(jfed,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
32089      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
32090                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
32091   
32092  * Energy generation "tree"
32093  eqq_en_tree_c_seasia(j,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
32094      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
32095   
32096  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
32099  *-------------------------------------------------------------------------------
32100  * Carbon Emissions
32101  * - Total CO2 emissions and CO2 Fossil fuel and Industry
32102  * - CO2 emission costs
32103  * - GHG permit market
32104  *-------------------------------------------------------------------------------
32105   
32107   
32108  * GHG emission cap
32109  eqq_emi_lim_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
32110      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
32111                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
32112   
32113  ***newcode
32114  eqq_emi_lim_USAc_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
32115  ***
32116   
32117  * Compute total and sectoral emissions
32118  eqq_emi_tree_c_seasia(t,n,e)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
32119      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
32120   
32121  * Industrial CO2 emissions
32122  eqq_emi_co2ffi_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32123      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
32124                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
32125                              # Emissions from biomass
32126                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
32127                              # Emissions from fuel extraction
32128                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
32129                              # Captured emissions
32130                              sum(sink, Q_EMI(sink,t,n));
32131   
32132  * CO2 emission costs
32133  eqcost_emi_co2_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32134      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
32135   
32136  * Emission permit market clearing for internal market
32137  eq_mkt_clearing_nip_c_seasia(c_mkt,t,'c_seasia')$(internal(c_mkt))..
32138      sum(n$(map_clt_n('c_seasia',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
32139   
32140  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
32143  *-------------------------------------------------------------------------------
32144  * Research & Development
32145  * Options:
32146  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
32147  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
32148  *-------------------------------------------------------------------------------
32149   
32151   
32152  * Knowledge stock accumulation
32153  eqk_rd_c_seasia(rd,t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
32154                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
32155                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
32156                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
32157                                        SPILL(rd,t,n)**rd_coef(rd,'d');
32158   
32159  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
32160  eqspill_coop_c_seasia(rd,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_seasia'))..
32161          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
32162                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_seasia',nn)), K_RD(rd,t,nn)) +
32163                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_seasia',nn))), K_RD.l(rd,t,nn))
32164                            ) *
32165                            (
32166                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_seasia',nn)), K_RD(rd,t,nn)) +
32167                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_seasia',nn))), K_RD.l(rd,t,nn))
32168                              ) - K_RD(rd,t,n)
32169                            );
32170   
32171  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
32172  eqspill_lead_c_seasia(rd,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_seasia')) and leadrd(rd,n))..
32173                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
32174   
32175  * No-cooperation : a follower sees is negative effect on the quantity he can grab
32176  eqspill_foll_c_seasia(rd,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_seasia')) and (not leadrd(rd,n)))..
32177                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
32178   
32179  *- Only LbR (without learning by doing)
32180  eqmcost_inv_back_c_seasia(jrd,t,tt,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
32181                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
32182                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
32183   
32184  *- LbR together with learning by doing ==> Two-factor learning curve
32185  eqmcost_inv_back_lbd_c_seasia(jrd,t,tt,tfirst,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
32186                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
32187                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
32188                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
32189   
32190  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
32193  *-------------------------------------------------------------------------------
32194  * Default Climate Policy Implementation
32195  *
32196  * Options:
32197  *    --policy={bau (default),ctax}
32198  *        Implement a climate policy setting
32199  *  [ --scen= ]
32200  *        Policy variant.
32201  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
32202  *          * XXX for a fixed percentage/yr (e.g. 5) growth
32203  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
32204  *  [ --ctax_year=2020 ]
32205  *        Starting year of the carbon tax
32206  *  [ --ctax_initial=30 ]
32207  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
32208  *
32209  *-------------------------------------------------------------------------------
32211   
32212  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
32214  *-------------------------------------------------------------------------------
32215  * Energy efficiency
32216  *-------------------------------------------------------------------------------
32217   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
32220  *-------------------------------------------------------------------------------
32221  * Hydro Power
32222  *-------------------------------------------------------------------------------
32223   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
32226  *-------------------------------------------------------------------------------
32227  * System Integration:
32228  * - Capacity constraint
32229  * - Flexibility constraint
32230  * - Grid Investment
32231  * - Capacity growth constraint
32232  *-------------------------------------------------------------------------------
32233   
32235   
32236   
32237  * Renewable CES
32238   
32239  * Definition of the renewable CES
32240  eqq_elintren_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32241      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
32242   
32243  * Capacity constraint
32244   
32246  eqfirm_capacity_c_seasia(t,n)$(map_clt_n('c_seasia',n) and (not tfix(t)) and year(t) gt 2005)..
32247                   sum(jel_firm, K_EN(jel_firm,t,n))
32248                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
32249                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
32250                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
32251                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
32252                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
32253                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
32254                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
32255                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
32256                                       ) / yearly_hours
32257  ;
32259   
32260  * Flexibility constraint
32261  eqflex_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32262          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
32263                             ( Q_EN('el',t,n) -
32264                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
32265                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
32266                             ) * flex_coeff('load')
32267  ;
32268   
32269  * Grid
32270   
32271  ** Grid depreciation and investments
32272  eqk_en_grid_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
32273                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
32274                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
32275   
32276  ** Grid adjustment to power capacity
32277  eqk_en_grid_to_k_en_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32278                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
32279                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
32280                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
32281                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
32282                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
32283                                     ) / grid_cost +
32284                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
32285                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
32286                                      K_EN('elcsp',t,n);
32287  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
32288   
32289  * Capacity growth constraint
32290  eqcap_growth_c_seasia(jinv,t,tp1,tp2,n)$((map_clt_n('c_seasia',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
32291                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
32292                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
32293   
32294  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
32297  *-------------------------------------------------------------------------------
32298  * Nuclear power plants
32299  *-------------------------------------------------------------------------------
32300   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
32303  *-------------------------------------------------------------------------------
32304  * GHG module
32305  * - CH4 FFI + CH4 waste + CH4 open fires
32306  * - N2O FFI + N2O waste + N2O open fires
32307  *-------------------------------------------------------------------------------
32308   
32310   
32311  * CH4, N2O waste emissions
32312  eqq_emi_waste_c_seasia(waste,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
32313                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
32314   
32315  * n2o FFI
32316  eqq_emi_n2o_ffi_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
32317    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
32318                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
32319                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
32320                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
32321                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
32322                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
32323                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
32324                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
32325                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
32326                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
32327                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
32328                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
32329                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
32330                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
32331                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
32332                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
32333                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
32334                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
32335                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
32336                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
32337                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
32338                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
32339                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
32340                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
32341                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
32342                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
32343                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
32344                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
32345                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
32346                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
32347                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
32348   
32349  * ch4 FFI
32350  eqq_emi_ch4_ffi_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
32351    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
32354  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
32355  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
32356                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
32357                             smax(tt$(year(tt) eq 2015),
32358                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
32361  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
32362  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
32363                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
32364   
32365  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
32368  *-------------------------------------------------------------------------------
32369  * F-gases
32370  * - LLF
32371  * - SLF
32372  *-------------------------------------------------------------------------------
32373   
32375   
32376  * F-gases emissions
32377  eqq_emi_fgases_c_seasia(fgases,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
32378                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
32379   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
32382  *-------------------------------------------------------------------------------
32383  * Landuse [simplified version of the land-use model]
32384  *-------------------------------------------------------------------------------
32385   
32387   
32388  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
32389  eq_wbio_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32390      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
32391   
32393  * Cost of all woody biomass produced for advanced biofuels and woody biomass
32394  eqcost_pes_wbio_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32395      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
32397   
32398  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
32401  *-------------------------------------------------------------------------------
32402  * Bioenergy power plant
32403  *-------------------------------------------------------------------------------
32404   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
32407  *-------------------------------------------------------------------------------
32408  * Traditional Biofuels
32409  * - Requires the precedence of mod_landuse
32410  *-------------------------------------------------------------------------------
32411   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
32414  *-------------------------------------------------------------------------------
32415  * Advanced biofuel
32416  * - Require the precedence of mod_landuse
32417  *-------------------------------------------------------------------------------
32418   
32420   
32421  * Limitations for nel backstops
32422  eqq_en_lim_advbiofuel_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
32423               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
32424               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
32425   
32426  * Peculiarity of advbiofuel
32427  eqmcost_fuel_advbiofuel_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32428                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
32429   
32430  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
32433  *-------------------------------------------------------------------------------
32434  * Carbon Capture and Sequestration
32435  *-------------------------------------------------------------------------------
32436   
32438   
32439  eqq_emi_ccs_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32440                  Q_EMI('ccs_plant',t,n) =e=
32441                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
32442                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
32443  ;
32444   
32445  eqcost_emi_sinks_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32446                  COST_EMI('ccs_plant',t,n) =e=
32447                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
32448                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
32449  ;
32450   
32451  eq_stor_ccs_cum_c_seasia(ccs_stor,tp1,t,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
32452                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
32453  ;
32454   
32455  eq_emi_stor_ccs_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32456                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
32457  ;
32458   
32459  eq_emi_leak_ccs_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32460                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
32461   
32462  *-------------------------------------------------------------------------------
32464   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
32466  *-------------------------------------------------------------------------------
32467  * Coal for non-electric sectors
32468  * - Coke Plants
32469  * - Industrial and Commercial combined-heat-and-power (CHP)
32470  * - Others
32471  *-------------------------------------------------------------------------------
32472   
32474   
32475  eqcost_en_nelcoal_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32476           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
32477                                          nelcoal_max_abat(t,n) *
32478                                          (nelcoal_cmac(n,'a') *
32479                                            Q_EN('nelcoalabat',t,n) /
32480                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
32481                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
32482                                              (exp(nelcoal_cmac(n,'c') *
32483                                                (Q_EN('nelcoalabat',t,n)/
32484                                                  (nelcoal_max_abat(t,n) *
32485                                                      nelcoal_baseline(t,n))
32486                                                  ) - 1 )
32487                                              )
32488                                          );
32489   
32490  eqq_ncoalabat_monotone_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
32491          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
32492   
32493  * ensure Q_EN is lower than K_EN for CCS as not in jel
32494  eqq_en_nelcoalccs_max_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32495          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
32496   
32497  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
32500  *-------------------------------------------------------------------------------
32501  * Wind energy module
32502  * - onshore and offshore
32503  *-------------------------------------------------------------------------------
32504   
32506   
32507  * Capacity limits in the wind onshore electrical sector
32508  eqq_en_mu_windon_c_seasia(wind_dist,wind_class,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
32509      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
32510   
32511  * Capacity limits in the wind offshore electrical sector
32512  eqq_en_mu_windoff_c_seasia(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
32513      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
32514   
32515  * Wind onshore electrical generation plants (new)
32516  eqk_en_windon_c_seasia(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
32517      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
32518                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
32519   
32520  * Wind offshore electrical generation plants (new)
32521  eqk_en_windoff_c_seasia(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
32522      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
32523                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
32524   
32525  * Total onshore wind energy production
32526  eqq_en_windon_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32527                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
32528   
32529  * Total offshore wind energy production
32530  eqq_en_windoff_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32531                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
32532   
32533  * Total onshore wind capacity
32534  eqk_en_windon_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32535                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
32536   
32537  * Total offshore wind capacity
32538  eqk_en_windoff_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32539                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
32540   
32541  * Total onshore wind investment
32542  eqi_en_windon_sum_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
32543                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
32544   
32545  * Total offshore wind investment
32546  eqi_en_windoff_sum_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
32547                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
32548   
32549  *-------------------------------------------------------------------------------
32551   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
32553  *-------------------------------------------------------------------------------
32554  * Solar Powerplants (PV and CSP) to the electrical system
32555  *-------------------------------------------------------------------------------
32556   
32557  *-------------------------------------------------------------------------------
32559   
32560   
32561  * Capacity limits in the pv electrical sector
32562  eqq_en_mu_pv_c_seasia(solar_dist,solar_class,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
32563                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
32564   
32565  * Capacity limits in the csp electrical sector
32566  eqq_en_mu_csp_c_seasia(solar_dist,solar_class,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
32567                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
32568   
32569  * PV electrical generation plants (new)
32570  eqk_en_pv_c_seasia(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
32571                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
32572                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
32573   
32574  * CSP electrical generation plants (new)
32575  eqk_en_csp_c_seasia(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
32576                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
32577                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
32578   
32579  * Total PV energy production
32580  eqq_en_pv_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32581                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
32582   
32583  * Total CSP energy production
32584  eqq_en_csp_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32585                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
32586   
32587  * Total PV capacity
32588  eqk_en_pv_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32589                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
32590   
32591  * Total CSP capacity
32592  eqk_en_csp_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32593                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
32594   
32595  * Total PV investment
32596  eqi_en_pv_sum_c_seasia(t,tp1,n)$(map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
32597                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
32598   
32599  * Total CSP investment
32600  eqi_en_csp_sum_c_seasia(t,tp1,n)$(map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
32601                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
32602   
32603  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
32604  eqk_en_solar_comp_c_seasia(t,n,solar_dist)$(map_clt_n('c_seasia',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
32605                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
32606                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
32607   
32608   
32609   
32610  *-------------------------------------------------------------------------------
32612   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
32614  *-------------------------------------------------------------------------------
32615  * Technology development scenarios
32616  *-------------------------------------------------------------------------------
32617   
32619   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
32621  *-------------------------------------------------------------------------------
32622  * Oil Extraction
32623  * Options:
32624  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
32625  *-------------------------------------------------------------------------------
32626   
32628   
32629  * Capacity
32630  eqoilcap_c_seasia(t,tp1,n,oilg)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
32631      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
32632   
32633  * Production
32634  eqoilprod_c_seasia(t,tp1,n,oilg)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
32635      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
32636   
32637  eqq_out_oil_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32638      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
32639   
32640  * Cumulative production
32641  eqcum_oil_c_seasia(t,tp1,n,oilg)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
32642      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
32643   
32644  * Cost
32645  eqcost_oil_c_seasia(t,tp1,n,oilg)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
32646      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
32647                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
32648                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
32649   
32650  * Investments
32651  eqi_oil_c_seasia(t,tp1,n,oilg)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
32652      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
32653   
32654  * Total investment
32655  eqi_out_oil_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
32656      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
32657   
32658  * Emissions
32659  eqq_emi_out_oil_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32660      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
32661   
32662  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
32665  *-------------------------------------------------------------------------------
32666  * Uranium Resources
32667  *-------------------------------------------------------------------------------
32668   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
32671  *-------------------------------------------------------------------------------
32672  * Gas Resources
32673  *-------------------------------------------------------------------------------
32674   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
32677  *-------------------------------------------------------------------------------
32678  * Coal Resources
32679  *-------------------------------------------------------------------------------
32680   
32682   
32683   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
32685  *-------------------------------------------------------------------------------
32686  * Climate
32687  *
32688  * Represents the climate
32689  * - based on the DICE model equations
32690  * - Radiative forcing for non CO2 ghgs
32691  * - parameters calibrated to reproduce MAGICC6.4 default response
32692  *
32693  *  Options:
32694  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
32695  * - $setglobal cooperate_on_climate {'YES','NO'}
32696  * - 'YES'(default): Countries within a coalition act in cooperation
32697  *   'NO': Countries within a coalition act individually
32698  *
32699  *-------------------------------------------------------------------------------
32700   
32702   
32704   
32705  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
32708  *-------------------------------------------------------------------------------
32709  * Long-run Damages from Climate Change
32710  * - Economic impacts
32711  * - Adaptation
32712  *-------------------------------------------------------------------------------
32713   
32715   
32717   
32718  *-------------------------------------------------------------------------------
32720   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
32722  *-------------------------------------------------------------------------------
32723  * Light-duty Vehicles for Personal Transport
32724  *-------------------------------------------------------------------------------
32725   
32727   
32728  *** newcode
32729  eqq_inv_red_ban_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32730      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
32731   
32732  ***
32733  *- Number of light duty vehicles
32734  eqnb_veh_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32735      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
32736   
32737  *- Yearly energy demand of vehicles
32738  eqq_en_veh_c_seasia(jveh,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32739      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
32740   
32741  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
32742  eqq_el_edv_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32743      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
32744   
32745  *- Investment cost for hybrid vehicles
32746  eqmcost_inv_hybrid_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
32747                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
32748   
32749  *- Investment cost for plug-in hybrid vehicles
32750  eqmcost_inv_plghybrid_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
32751                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
32752   
32753  *- Investment cost for electric drive vehicles
32754  eqmcost_inv_edv_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
32755                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
32756   
32757  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
32760  *-------------------------------------------------------------------------------
32761  * Road Freight Transport
32762  *-------------------------------------------------------------------------------
32764   
32765  *-  Number of freight vehicles
32766  eqnb_frtveh_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32767                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
32768   
32769  *-  Yearly fuel consumption of freight vehicles
32770  eqq_en_frtveh_c_seasia(jfrt,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32771                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
32772   
32773  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
32774  eqq_el_frtedv_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32775                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
32776   
32777  *-  Investment cost for hbd_stfr vehicle
32778  eqmcost_inv_hbd_stfr_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
32779                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
32780   
32781  *-  Investment cost for plug-in hbd_stfr vehicle
32782  eqmcost_inv_plghbd_stfr_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
32783                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
32784   
32785  *-  Investment cost for electric drive vehicle
32786  eqmcost_inv_edv_stfr_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
32787                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
32788   
32789  *-------------------------------------------------------------------------------
32791   
32792   
32793   
32794   
32795   
32796   
32797  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
32799  *-------------------------------------------------------------------------------
32800  * Traditional Biomass
32801  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
32802  *  - require post_process to be launch before
32803  *-------------------------------------------------------------------------------
32804   
32806   
32807  * Optional modules
32808   
32809  * Policy modules
32810   
32811  * Calibration
32814   
32815   
32816  model witch_c_seasia /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
32818  *-------------------------------------------------------------------------------
32819  * Call modules by order
32820  *-------------------------------------------------------------------------------
32824   
32825  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
32827  *-------------------------------------------------------------------------------
32828  * Algorithm
32829  *-------------------------------------------------------------------------------
32830   
32832   
32833  eqobj_c_seasia
32834   
32835  *-------------------------------------------------------------------------------
32837   
32838  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
32840  *-------------------------------------------------------------------------------
32841  * Time
32842  * - Temporal structure
32843  * - Fixed time periods
32844  * - States of the world
32845  *-------------------------------------------------------------------------------
32846   
32848   
32849  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
32851  *-------------------------------------------------------------------------------
32852  * Geographic dimension and mapping with countries
32853  *-------------------------------------------------------------------------------
32854   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
32857  *-------------------------------------------------------------------------------
32858  * Non-Cooperative Setup
32859  *
32860  * Each region is defined as an individual coalition.
32861  *
32862  *-------------------------------------------------------------------------------
32863   
32865   
32866  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
32868  *-------------------------------------------------------------------------------
32869  * Welfare
32870  *-------------------------------------------------------------------------------
32871   
32873   
32874  equtility_c_seasia
32875   
32876  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
32879  *-------------------------------------------------------------------------------
32880  * Economy
32881  * - Production and Consumption definition
32882  * - Top-level of the production function
32883  * Options:
32884  * --original_ssp=1 : original SSP population and GDP data
32885  *-------------------------------------------------------------------------------
32886   
32888   
32889  eqk_c_seasia
32890  eqq_cc_c_seasia
32891  eqq_fen_c_seasia
32892  eqq_y_c_seasia
32893   
32894  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
32897  *-------------------------------------------------------------------------------
32898  * Energy sector
32899  *-------------------------------------------------------------------------------
32900   
32902   
32903  eq_mkt_clearing_oil_c_seasia
32904  eqcost_pes_c_seasia
32905  eqcost_ses_c_seasia
32906  eqk_en_c_seasia
32907  eqq_ces_el_c_seasia
32908  eqq_ces_nelgas_c_seasia
32909  eqq_el2_c_seasia
32910  eqq_el_c_seasia
32911  eqq_elff_c_seasia
32912  eqq_en_c_seasia
32913  eqq_en_in_c_seasia
32914  eqq_en_mu_c_seasia
32915  eqq_en_tree_c_seasia
32916  eqq_nel_c_seasia
32917  eqq_nelog_c_seasia
32918  eqq_fuel_c_seasia
32919  eqq_elffren_c_seasia
32920   
32921  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
32924  *-------------------------------------------------------------------------------
32925  * Carbon Emissions
32926  * - Total CO2 emissions and CO2 Fossil fuel and Industry
32927  * - CO2 emission costs
32928  * - GHG permit market
32929  *-------------------------------------------------------------------------------
32930   
32932   
32933  eqq_emi_lim_c_seasia
32934  ***newcode
32935  eqq_emi_lim_USAc_seasia
32936  ***
32937  eqq_emi_tree_c_seasia
32938  eqq_emi_co2ffi_c_seasia
32939   
32940  eqcost_emi_co2_c_seasia
32941   
32942  eq_mkt_clearing_nip_c_seasia
32943   
32944  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
32947  *-------------------------------------------------------------------------------
32948  * Research & Development
32949  * Options:
32950  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
32951  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
32952  *-------------------------------------------------------------------------------
32953   
32955   
32956  eqk_rd_c_seasia
32957  eqspill_coop_c_seasia
32958  eqspill_lead_c_seasia
32959  eqspill_foll_c_seasia
32960  eqmcost_inv_back_c_seasia
32961  eqmcost_inv_back_lbd_c_seasia
32962   
32963  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
32966  *-------------------------------------------------------------------------------
32967  * Default Climate Policy Implementation
32968  *
32969  * Options:
32970  *    --policy={bau (default),ctax}
32971  *        Implement a climate policy setting
32972  *  [ --scen= ]
32973  *        Policy variant.
32974  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
32975  *          * XXX for a fixed percentage/yr (e.g. 5) growth
32976  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
32977  *  [ --ctax_year=2020 ]
32978  *        Starting year of the carbon tax
32979  *  [ --ctax_initial=30 ]
32980  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
32981  *
32982  *-------------------------------------------------------------------------------
32984   
32985  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
32987  *-------------------------------------------------------------------------------
32988  * Energy efficiency
32989  *-------------------------------------------------------------------------------
32990   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
32993  *-------------------------------------------------------------------------------
32994  * Hydro Power
32995  *-------------------------------------------------------------------------------
32996   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
32999  *-------------------------------------------------------------------------------
33000  * System Integration:
33001  * - Capacity constraint
33002  * - Flexibility constraint
33003  * - Grid Investment
33004  * - Capacity growth constraint
33005  *-------------------------------------------------------------------------------
33006   
33008   
33009  eqq_elintren_c_seasia
33010  eqflex_c_seasia
33011  eqk_en_grid_c_seasia
33012  eqk_en_grid_to_k_en_c_seasia
33013  eqfirm_capacity_c_seasia
33014  eqcap_growth_c_seasia
33015   
33016  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
33019  *-------------------------------------------------------------------------------
33020  * Nuclear power plants
33021  *-------------------------------------------------------------------------------
33022   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
33025  *-------------------------------------------------------------------------------
33026  * GHG module
33027  * - CH4 FFI + CH4 waste + CH4 open fires
33028  * - N2O FFI + N2O waste + N2O open fires
33029  *-------------------------------------------------------------------------------
33030   
33032   
33033  eqq_emi_waste_c_seasia
33034  eqq_emi_n2o_ffi_c_seasia
33035  eqq_emi_ch4_ffi_c_seasia
33036   
33037  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
33040  *-------------------------------------------------------------------------------
33041  * F-gases
33042  * - LLF
33043  * - SLF
33044  *-------------------------------------------------------------------------------
33045   
33047   
33048  eqq_emi_fgases_c_seasia
33049   
33050  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
33053  *-------------------------------------------------------------------------------
33054  * Landuse [simplified version of the land-use model]
33055  *-------------------------------------------------------------------------------
33056   
33058   
33059  eq_wbio_c_seasia
33060  eqcost_pes_wbio_c_seasia
33061   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
33064  *-------------------------------------------------------------------------------
33065  * Bioenergy power plant
33066  *-------------------------------------------------------------------------------
33067   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
33070  *-------------------------------------------------------------------------------
33071  * Traditional Biofuels
33072  * - Requires the precedence of mod_landuse
33073  *-------------------------------------------------------------------------------
33074   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
33077  *-------------------------------------------------------------------------------
33078  * Advanced biofuel
33079  * - Require the precedence of mod_landuse
33080  *-------------------------------------------------------------------------------
33081   
33083   
33084  eqq_en_lim_advbiofuel_c_seasia
33085  eqmcost_fuel_advbiofuel_c_seasia
33086   
33087  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
33090  *-------------------------------------------------------------------------------
33091  * Carbon Capture and Sequestration
33092  *-------------------------------------------------------------------------------
33093   
33095   
33096  eqq_emi_ccs_c_seasia
33097  eqcost_emi_sinks_c_seasia
33098  eq_stor_ccs_cum_c_seasia
33099  eq_emi_stor_ccs_c_seasia
33100  eq_emi_leak_ccs_c_seasia
33101   
33102  *-------------------------------------------------------------------------------
33104   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
33106  *-------------------------------------------------------------------------------
33107  * Coal for non-electric sectors
33108  * - Coke Plants
33109  * - Industrial and Commercial combined-heat-and-power (CHP)
33110  * - Others
33111  *-------------------------------------------------------------------------------
33112   
33114   
33115  eqcost_en_nelcoal_c_seasia
33116  eqq_ncoalabat_monotone_c_seasia
33117  eqq_en_nelcoalccs_max_c_seasia
33118   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
33121  *-------------------------------------------------------------------------------
33122  * Wind energy module
33123  * - onshore and offshore
33124  *-------------------------------------------------------------------------------
33125   
33127   
33128  eqq_en_mu_windon_c_seasia
33129  eqq_en_mu_windoff_c_seasia
33130  eqk_en_windon_c_seasia
33131  eqk_en_windoff_c_seasia
33132  eqq_en_windon_sum_c_seasia
33133  eqq_en_windoff_sum_c_seasia
33134  eqk_en_windon_sum_c_seasia
33135  eqk_en_windoff_sum_c_seasia
33136  eqi_en_windon_sum_c_seasia
33137  eqi_en_windoff_sum_c_seasia
33138   
33140   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
33142  *-------------------------------------------------------------------------------
33143  * Solar Powerplants (PV and CSP) to the electrical system
33144  *-------------------------------------------------------------------------------
33145   
33146  *-------------------------------------------------------------------------------
33148   
33149  eqq_en_mu_pv_c_seasia
33150  eqq_en_mu_csp_c_seasia
33151  eqk_en_pv_c_seasia
33152  eqk_en_csp_c_seasia
33153  eqq_en_pv_sum_c_seasia
33154  eqq_en_csp_sum_c_seasia
33155  eqk_en_pv_sum_c_seasia
33156  eqk_en_csp_sum_c_seasia
33157  eqi_en_pv_sum_c_seasia
33158  eqi_en_csp_sum_c_seasia
33159  eqk_en_solar_comp_c_seasia
33160   
33161  *-------------------------------------------------------------------------------
33163   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
33165  *-------------------------------------------------------------------------------
33166  * Technology development scenarios
33167  *-------------------------------------------------------------------------------
33168   
33170   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
33172  *-------------------------------------------------------------------------------
33173  * Oil Extraction
33174  * Options:
33175  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
33176  *-------------------------------------------------------------------------------
33177   
33179   
33180  eqoilcap_c_seasia
33181  eqoilprod_c_seasia
33182  eqq_out_oil_c_seasia
33183  eqcum_oil_c_seasia
33184  eqcost_oil_c_seasia
33185  eqi_oil_c_seasia
33186  eqi_out_oil_c_seasia
33187  eqq_emi_out_oil_c_seasia
33188   
33189  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
33192  *-------------------------------------------------------------------------------
33193  * Uranium Resources
33194  *-------------------------------------------------------------------------------
33195   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
33198  *-------------------------------------------------------------------------------
33199  * Gas Resources
33200  *-------------------------------------------------------------------------------
33201   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
33204  *-------------------------------------------------------------------------------
33205  * Coal Resources
33206  *-------------------------------------------------------------------------------
33207   
33209   
33210   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
33212  *-------------------------------------------------------------------------------
33213  * Climate
33214  *
33215  * Represents the climate
33216  * - based on the DICE model equations
33217  * - Radiative forcing for non CO2 ghgs
33218  * - parameters calibrated to reproduce MAGICC6.4 default response
33219  *
33220  *  Options:
33221  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
33222  * - $setglobal cooperate_on_climate {'YES','NO'}
33223  * - 'YES'(default): Countries within a coalition act in cooperation
33224  *   'NO': Countries within a coalition act individually
33225  *
33226  *-------------------------------------------------------------------------------
33227   
33229   
33231   
33232  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
33235  *-------------------------------------------------------------------------------
33236  * Long-run Damages from Climate Change
33237  * - Economic impacts
33238  * - Adaptation
33239  *-------------------------------------------------------------------------------
33240   
33242   
33244   
33245  *-------------------------------------------------------------------------------
33247   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
33249  *-------------------------------------------------------------------------------
33250  * Light-duty Vehicles for Personal Transport
33251  *-------------------------------------------------------------------------------
33252   
33254   
33255  eqnb_veh_c_seasia
33256  eqq_en_veh_c_seasia
33257  eqq_el_edv_c_seasia
33258  eqmcost_inv_hybrid_c_seasia
33259  eqmcost_inv_plghybrid_c_seasia
33260  eqmcost_inv_edv_c_seasia
33261  *** newcode
33262  eqq_inv_red_ban_c_seasia
33263  ***
33264  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
33267  *-------------------------------------------------------------------------------
33268  * Road Freight Transport
33269  *-------------------------------------------------------------------------------
33271   
33272  eqnb_frtveh_c_seasia
33273  eqq_en_frtveh_c_seasia
33274  eqq_el_frtedv_c_seasia
33275  eqmcost_inv_hbd_stfr_c_seasia
33276  eqmcost_inv_plghbd_stfr_c_seasia
33277  eqmcost_inv_edv_stfr_c_seasia
33278   
33279  *-------------------------------------------------------------------------------
33281   
33282   
33283   
33284   
33285   
33286   
33287  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
33289  *-------------------------------------------------------------------------------
33290  * Traditional Biomass
33291  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
33292  *  - require post_process to be launch before
33293  *-------------------------------------------------------------------------------
33294   
33296   
33297  * Optional modules
33298   
33299  * Policy modules
33300   
33301  * Calibration
33304  /;
33305   
33306  witch_c_seasia.optfile=1;   # the option file solvername.opt is to be used
33307  witch_c_seasia.holdfixed=1; # treat fixed values as constant
33308  witch_c_seasia.scaleopt=1;  # Use scaling for better gradients estimation
33309  witch_c_seasia.solvelink=3; # Use parallel or sequential solving
33310   
33315   
33316  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
33318  *-------------------------------------------------------------------------------
33319  * Call modules by order
33320  *-------------------------------------------------------------------------------
33324   
33325  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
33327  *-------------------------------------------------------------------------------
33328  * Algorithm
33329  *-------------------------------------------------------------------------------
33330   
33332   
33333  eqobj_c_southafrica
33334   
33335  *-------------------------------------------------------------------------------
33337   
33338  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
33340  *-------------------------------------------------------------------------------
33341  * Time
33342  * - Temporal structure
33343  * - Fixed time periods
33344  * - States of the world
33345  *-------------------------------------------------------------------------------
33346   
33348   
33349  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
33351  *-------------------------------------------------------------------------------
33352  * Geographic dimension and mapping with countries
33353  *-------------------------------------------------------------------------------
33354   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
33357  *-------------------------------------------------------------------------------
33358  * Non-Cooperative Setup
33359  *
33360  * Each region is defined as an individual coalition.
33361  *
33362  *-------------------------------------------------------------------------------
33363   
33365   
33366  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
33368  *-------------------------------------------------------------------------------
33369  * Welfare
33370  *-------------------------------------------------------------------------------
33371   
33373   
33374  equtility_c_southafrica
33375   
33376  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
33379  *-------------------------------------------------------------------------------
33380  * Economy
33381  * - Production and Consumption definition
33382  * - Top-level of the production function
33383  * Options:
33384  * --original_ssp=1 : original SSP population and GDP data
33385  *-------------------------------------------------------------------------------
33386   
33388   
33389  eqk_c_southafrica
33390  eqq_cc_c_southafrica
33391  eqq_fen_c_southafrica
33392  eqq_y_c_southafrica
33393   
33394  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
33397  *-------------------------------------------------------------------------------
33398  * Energy sector
33399  *-------------------------------------------------------------------------------
33400   
33402   
33403  eq_mkt_clearing_oil_c_southafrica
33404  eqcost_pes_c_southafrica
33405  eqcost_ses_c_southafrica
33406  eqk_en_c_southafrica
33407  eqq_ces_el_c_southafrica
33408  eqq_ces_nelgas_c_southafrica
33409  eqq_el2_c_southafrica
33410  eqq_el_c_southafrica
33411  eqq_elff_c_southafrica
33412  eqq_en_c_southafrica
33413  eqq_en_in_c_southafrica
33414  eqq_en_mu_c_southafrica
33415  eqq_en_tree_c_southafrica
33416  eqq_nel_c_southafrica
33417  eqq_nelog_c_southafrica
33418  eqq_fuel_c_southafrica
33419  eqq_elffren_c_southafrica
33420   
33421  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
33424  *-------------------------------------------------------------------------------
33425  * Carbon Emissions
33426  * - Total CO2 emissions and CO2 Fossil fuel and Industry
33427  * - CO2 emission costs
33428  * - GHG permit market
33429  *-------------------------------------------------------------------------------
33430   
33432   
33433  eqq_emi_lim_c_southafrica
33434  ***newcode
33435  eqq_emi_lim_USAc_southafrica
33436  ***
33437  eqq_emi_tree_c_southafrica
33438  eqq_emi_co2ffi_c_southafrica
33439   
33440  eqcost_emi_co2_c_southafrica
33441   
33442  eq_mkt_clearing_nip_c_southafrica
33443   
33444  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
33447  *-------------------------------------------------------------------------------
33448  * Research & Development
33449  * Options:
33450  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
33451  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
33452  *-------------------------------------------------------------------------------
33453   
33455   
33456  eqk_rd_c_southafrica
33457  eqspill_coop_c_southafrica
33458  eqspill_lead_c_southafrica
33459  eqspill_foll_c_southafrica
33460  eqmcost_inv_back_c_southafrica
33461  eqmcost_inv_back_lbd_c_southafrica
33462   
33463  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
33466  *-------------------------------------------------------------------------------
33467  * Default Climate Policy Implementation
33468  *
33469  * Options:
33470  *    --policy={bau (default),ctax}
33471  *        Implement a climate policy setting
33472  *  [ --scen= ]
33473  *        Policy variant.
33474  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
33475  *          * XXX for a fixed percentage/yr (e.g. 5) growth
33476  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
33477  *  [ --ctax_year=2020 ]
33478  *        Starting year of the carbon tax
33479  *  [ --ctax_initial=30 ]
33480  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
33481  *
33482  *-------------------------------------------------------------------------------
33484   
33485  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
33487  *-------------------------------------------------------------------------------
33488  * Energy efficiency
33489  *-------------------------------------------------------------------------------
33490   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
33493  *-------------------------------------------------------------------------------
33494  * Hydro Power
33495  *-------------------------------------------------------------------------------
33496   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
33499  *-------------------------------------------------------------------------------
33500  * System Integration:
33501  * - Capacity constraint
33502  * - Flexibility constraint
33503  * - Grid Investment
33504  * - Capacity growth constraint
33505  *-------------------------------------------------------------------------------
33506   
33508   
33509  eqq_elintren_c_southafrica
33510  eqflex_c_southafrica
33511  eqk_en_grid_c_southafrica
33512  eqk_en_grid_to_k_en_c_southafrica
33513  eqfirm_capacity_c_southafrica
33514  eqcap_growth_c_southafrica
33515   
33516  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
33519  *-------------------------------------------------------------------------------
33520  * Nuclear power plants
33521  *-------------------------------------------------------------------------------
33522   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
33525  *-------------------------------------------------------------------------------
33526  * GHG module
33527  * - CH4 FFI + CH4 waste + CH4 open fires
33528  * - N2O FFI + N2O waste + N2O open fires
33529  *-------------------------------------------------------------------------------
33530   
33532   
33533  eqq_emi_waste_c_southafrica
33534  eqq_emi_n2o_ffi_c_southafrica
33535  eqq_emi_ch4_ffi_c_southafrica
33536   
33537  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
33540  *-------------------------------------------------------------------------------
33541  * F-gases
33542  * - LLF
33543  * - SLF
33544  *-------------------------------------------------------------------------------
33545   
33547   
33548  eqq_emi_fgases_c_southafrica
33549   
33550  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
33553  *-------------------------------------------------------------------------------
33554  * Landuse [simplified version of the land-use model]
33555  *-------------------------------------------------------------------------------
33556   
33558   
33559  eq_wbio_c_southafrica
33560  eqcost_pes_wbio_c_southafrica
33561   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
33564  *-------------------------------------------------------------------------------
33565  * Bioenergy power plant
33566  *-------------------------------------------------------------------------------
33567   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
33570  *-------------------------------------------------------------------------------
33571  * Traditional Biofuels
33572  * - Requires the precedence of mod_landuse
33573  *-------------------------------------------------------------------------------
33574   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
33577  *-------------------------------------------------------------------------------
33578  * Advanced biofuel
33579  * - Require the precedence of mod_landuse
33580  *-------------------------------------------------------------------------------
33581   
33583   
33584  eqq_en_lim_advbiofuel_c_southafrica
33585  eqmcost_fuel_advbiofuel_c_southafrica
33586   
33587  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
33590  *-------------------------------------------------------------------------------
33591  * Carbon Capture and Sequestration
33592  *-------------------------------------------------------------------------------
33593   
33595   
33596  eqq_emi_ccs_c_southafrica
33597  eqcost_emi_sinks_c_southafrica
33598  eq_stor_ccs_cum_c_southafrica
33599  eq_emi_stor_ccs_c_southafrica
33600  eq_emi_leak_ccs_c_southafrica
33601   
33602  *-------------------------------------------------------------------------------
33604   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
33606  *-------------------------------------------------------------------------------
33607  * Coal for non-electric sectors
33608  * - Coke Plants
33609  * - Industrial and Commercial combined-heat-and-power (CHP)
33610  * - Others
33611  *-------------------------------------------------------------------------------
33612   
33614   
33615  eqcost_en_nelcoal_c_southafrica
33616  eqq_ncoalabat_monotone_c_southafrica
33617  eqq_en_nelcoalccs_max_c_southafrica
33618   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
33621  *-------------------------------------------------------------------------------
33622  * Wind energy module
33623  * - onshore and offshore
33624  *-------------------------------------------------------------------------------
33625   
33627   
33628  eqq_en_mu_windon_c_southafrica
33629  eqq_en_mu_windoff_c_southafrica
33630  eqk_en_windon_c_southafrica
33631  eqk_en_windoff_c_southafrica
33632  eqq_en_windon_sum_c_southafrica
33633  eqq_en_windoff_sum_c_southafrica
33634  eqk_en_windon_sum_c_southafrica
33635  eqk_en_windoff_sum_c_southafrica
33636  eqi_en_windon_sum_c_southafrica
33637  eqi_en_windoff_sum_c_southafrica
33638   
33640   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
33642  *-------------------------------------------------------------------------------
33643  * Solar Powerplants (PV and CSP) to the electrical system
33644  *-------------------------------------------------------------------------------
33645   
33646  *-------------------------------------------------------------------------------
33648   
33649  eqq_en_mu_pv_c_southafrica
33650  eqq_en_mu_csp_c_southafrica
33651  eqk_en_pv_c_southafrica
33652  eqk_en_csp_c_southafrica
33653  eqq_en_pv_sum_c_southafrica
33654  eqq_en_csp_sum_c_southafrica
33655  eqk_en_pv_sum_c_southafrica
33656  eqk_en_csp_sum_c_southafrica
33657  eqi_en_pv_sum_c_southafrica
33658  eqi_en_csp_sum_c_southafrica
33659  eqk_en_solar_comp_c_southafrica
33660   
33661  *-------------------------------------------------------------------------------
33663   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
33665  *-------------------------------------------------------------------------------
33666  * Technology development scenarios
33667  *-------------------------------------------------------------------------------
33668   
33670   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
33672  *-------------------------------------------------------------------------------
33673  * Oil Extraction
33674  * Options:
33675  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
33676  *-------------------------------------------------------------------------------
33677   
33679   
33680  eqoilcap_c_southafrica
33681  eqoilprod_c_southafrica
33682  eqq_out_oil_c_southafrica
33683  eqcum_oil_c_southafrica
33684  eqcost_oil_c_southafrica
33685  eqi_oil_c_southafrica
33686  eqi_out_oil_c_southafrica
33687  eqq_emi_out_oil_c_southafrica
33688   
33689  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
33692  *-------------------------------------------------------------------------------
33693  * Uranium Resources
33694  *-------------------------------------------------------------------------------
33695   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
33698  *-------------------------------------------------------------------------------
33699  * Gas Resources
33700  *-------------------------------------------------------------------------------
33701   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
33704  *-------------------------------------------------------------------------------
33705  * Coal Resources
33706  *-------------------------------------------------------------------------------
33707   
33709   
33710   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
33712  *-------------------------------------------------------------------------------
33713  * Climate
33714  *
33715  * Represents the climate
33716  * - based on the DICE model equations
33717  * - Radiative forcing for non CO2 ghgs
33718  * - parameters calibrated to reproduce MAGICC6.4 default response
33719  *
33720  *  Options:
33721  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
33722  * - $setglobal cooperate_on_climate {'YES','NO'}
33723  * - 'YES'(default): Countries within a coalition act in cooperation
33724  *   'NO': Countries within a coalition act individually
33725  *
33726  *-------------------------------------------------------------------------------
33727   
33729   
33731   
33732  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
33735  *-------------------------------------------------------------------------------
33736  * Long-run Damages from Climate Change
33737  * - Economic impacts
33738  * - Adaptation
33739  *-------------------------------------------------------------------------------
33740   
33742   
33744   
33745  *-------------------------------------------------------------------------------
33747   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
33749  *-------------------------------------------------------------------------------
33750  * Light-duty Vehicles for Personal Transport
33751  *-------------------------------------------------------------------------------
33752   
33754   
33755  eqnb_veh_c_southafrica
33756  eqq_en_veh_c_southafrica
33757  eqq_el_edv_c_southafrica
33758  eqmcost_inv_hybrid_c_southafrica
33759  eqmcost_inv_plghybrid_c_southafrica
33760  eqmcost_inv_edv_c_southafrica
33761  *** newcode
33762  eqq_inv_red_ban_c_southafrica
33763  ***
33764  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
33767  *-------------------------------------------------------------------------------
33768  * Road Freight Transport
33769  *-------------------------------------------------------------------------------
33771   
33772  eqnb_frtveh_c_southafrica
33773  eqq_en_frtveh_c_southafrica
33774  eqq_el_frtedv_c_southafrica
33775  eqmcost_inv_hbd_stfr_c_southafrica
33776  eqmcost_inv_plghbd_stfr_c_southafrica
33777  eqmcost_inv_edv_stfr_c_southafrica
33778   
33779  *-------------------------------------------------------------------------------
33781   
33782   
33783   
33784   
33785   
33786   
33787  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
33789  *-------------------------------------------------------------------------------
33790  * Traditional Biomass
33791  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
33792  *  - require post_process to be launch before
33793  *-------------------------------------------------------------------------------
33794   
33796   
33797  * Optional modules
33798   
33799  * Policy modules
33800   
33801  * Calibration
33804  ;
33805   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
33807  *-------------------------------------------------------------------------------
33808  * Call modules by order
33809  *-------------------------------------------------------------------------------
33813   
33814  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
33816  *-------------------------------------------------------------------------------
33817  * Algorithm
33818  *-------------------------------------------------------------------------------
33819   
33821   
33823  * Add the component of the (maximized) objective function as required by the ADMM algorithm
33824  eqobj_c_southafrica..
33825      OBJADMM =e= UTILITY -
33826          sum(t, rho_admm('oil',t) / 2 *
33827              sum(n$(map_clt_n('c_southafrica',n) and trading_t('oil',t,n)),
33828                  power(
33829                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
33830                      x_admm('oil',t,n) +
33831                      xavg_admm('oil',t) +
33832                      u_admm('oil', t)
33833                  ,2)
33834              )) -
33835          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
33836              sum(n$(map_clt_n('c_southafrica',n) and trading_t(c_mkt,t,n)),
33837                  power(
33838                      Q_EMI(c_mkt,t,n) -
33839                      x_admm(c_mkt,t,n) +
33840                      xavg_admm(c_mkt,t) +
33841                      u_admm(c_mkt,t)
33842                  ,2)
33843              ))
33844      ;
33846   
33847  *-------------------------------------------------------------------------------
33849   
33850  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
33852  *-------------------------------------------------------------------------------
33853  * Time
33854  * - Temporal structure
33855  * - Fixed time periods
33856  * - States of the world
33857  *-------------------------------------------------------------------------------
33858   
33860   
33861  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
33863  *-------------------------------------------------------------------------------
33864  * Geographic dimension and mapping with countries
33865  *-------------------------------------------------------------------------------
33866   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
33869  *-------------------------------------------------------------------------------
33870  * Non-Cooperative Setup
33871  *
33872  * Each region is defined as an individual coalition.
33873  *
33874  *-------------------------------------------------------------------------------
33875   
33877   
33878  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
33880  *-------------------------------------------------------------------------------
33881  * Welfare
33882  *-------------------------------------------------------------------------------
33883   
33885   
33886  * Objective function - Welfare to be maximized
33887  equtility_c_southafrica..
33888      UTILITY =e=
33889   
33890  * Negishi SWF
33892   
33893  * Welfare functions based on CEBGE
33896                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
33897                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
33898                      ((sum(n$map_clt_n('c_southafrica',n),
33899                        (l(t,n) / sum(nn$map_clt_n('c_southafrica',nn), l(t,nn))) *
33900                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
33901                       )**(1 / (1 - gamma))
33902                      )**(1 - eta) ) +
33903                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
33904                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
33905                      ((sum(n$map_clt_n('c_southafrica',n),
33906                        (l(t,n) / sum(nn$map_clt_n('c_southafrica',nn), l(t,nn))) *
33907                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
33908                       )**(1 / (1 - gamma))
33909                      )**(1 - eta) )
33910                  )**(1/(1 - eta)) * 1e6
33913   
33914   
33915  ;
33916   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
33919  *-------------------------------------------------------------------------------
33920  * Economy
33921  * - Production and Consumption definition
33922  * - Top-level of the production function
33923  * Options:
33924  * --original_ssp=1 : original SSP population and GDP data
33925  *-------------------------------------------------------------------------------
33926   
33928   
33929  * Production
33930  eqq_y_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33931   
33932      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
33933                     ## Climate feedback on economy
33935                     ## Net cost of Primary and Secondary Energy Sources
33936                     - sum(fuel, COST_FUEL(fuel,t,n))
33937                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
33938                     - sum(cce, COST_EMI(cce,t,n))
33939                     ## Carbon tax
33940                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
33941                     ## Additionnal costs on gross product
33942                     - sum(ccy, COST_Y(ccy,t,n))
33943  ;
33944   
33945  * Consumption
33946  eqq_cc_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
33947      Q('cc',t,n) =e= Q('y',t,n)
33948                      ## Investments in goods g (final good, adaptation)
33949                      -sum(g, I(g,t,n))
33950                      ## Investments in r&d
33951                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
33952                      ## Investments in energy technlogies
33953                      -sum(jinv, I_EN(jinv,t,n))
33954                       ## Investments in grid infrastructures
33955                      - I_EN_GRID(t,n)
33956                      ## Investments in extraction sector
33957                      -sum(extract(f), I_OUT(f,t,n))
33958                      ## O&M for energy technlogies
33959                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
33960                      ## O&M for extraction
33961                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
33962                      ## Energy technology penalty costs
33963                      -sum(jpenalty(j), COST_EN(j,t,n))
33964  ;
33965   
33966  * Capital accumulation
33967  eqk_c_southafrica(g,t,tp1,n)$(map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
33968      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
33969   
33970  * Energy services
33971  eqq_fen_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33972      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
33973   
33974  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
33977  *-------------------------------------------------------------------------------
33978  * Energy sector
33979  *-------------------------------------------------------------------------------
33980   
33982   
33983  *-------------------------------------------------------------------------------
33984  * Production - Energy sector
33985  *-------------------------------------------------------------------------------
33986   
33987  eqq_en_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33988      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
33989   
33990  *-------------------------------------------------------------------------------
33991  * Production - Electrical sector
33992  *-------------------------------------------------------------------------------
33993   
33994  eqq_el_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33995      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
33996   
33997  eqq_el2_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33998      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
33999   
34000  eqq_elffren_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34001      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
34002  eqq_elff_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34003      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
34004   
34005  eqq_ces_el_c_southafrica(ices_el,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
34006      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
34007  ;
34008   
34009  *-------------------------------------------------------------------------------
34010  * Production - Non-electrical sector
34011  *-------------------------------------------------------------------------------
34012   
34013  eqq_nel_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34014      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
34015   
34016  eqq_nelog_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34017      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
34018  ;
34019  eqq_ces_nelgas_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34020      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
34021   
34022  *-------------------------------------------------------------------------------
34023  * PES and fuels
34024  *-------------------------------------------------------------------------------
34025   
34026  eqq_fuel_c_southafrica(fuel,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
34027      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
34028   
34029  *-------------------------------------------------------------------------------
34030  * Cost
34031  *-------------------------------------------------------------------------------
34032   
34033  * Net cost of Primary Energy Supplies
34034  eqcost_pes_c_southafrica(f,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
34035      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
34036                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
34037   
34038  * Net cost of Secondary Energy Supplies
34039  eqcost_ses_c_southafrica(s,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34040      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
34041   
34042   
34043  *-------------------------------------------------------------------------------
34044  * Market balances
34045  *-------------------------------------------------------------------------------
34046   
34047  eq_mkt_clearing_oil_c_southafrica(t,'c_southafrica')$(internal('oil'))..
34048      sum( n$(map_clt_n('c_southafrica',n) and trading_t('oil',t,n)),
34049          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
34050      ) =e= 0;
34051   
34052  *-------------------------------------------------------------------------------
34053  * New capital in the energy sector
34054  *-------------------------------------------------------------------------------
34055   
34056  * Electrical generation plants (new)
34057  eqk_en_c_southafrica(jinv,t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
34058      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
34059                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
34060   
34061  *-------------------------------------------------------------------------------
34062  * ENERGY
34063  *-------------------------------------------------------------------------------
34064   
34065  * Capacity limits in the electrical sector
34066  eqq_en_mu_c_southafrica(jel,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
34067      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
34068   
34069  * Efficiency of energy technology sector
34070  eqq_en_in_c_southafrica(jfed,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
34071      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
34072                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
34073   
34074  * Energy generation "tree"
34075  eqq_en_tree_c_southafrica(j,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
34076      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
34077   
34078  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
34081  *-------------------------------------------------------------------------------
34082  * Carbon Emissions
34083  * - Total CO2 emissions and CO2 Fossil fuel and Industry
34084  * - CO2 emission costs
34085  * - GHG permit market
34086  *-------------------------------------------------------------------------------
34087   
34089   
34090  * GHG emission cap
34091  eqq_emi_lim_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
34092      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
34093                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
34094   
34095  ***newcode
34096  eqq_emi_lim_USAc_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
34097  ***
34098   
34099  * Compute total and sectoral emissions
34100  eqq_emi_tree_c_southafrica(t,n,e)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
34101      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
34102   
34103  * Industrial CO2 emissions
34104  eqq_emi_co2ffi_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34105      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
34106                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
34107                              # Emissions from biomass
34108                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
34109                              # Emissions from fuel extraction
34110                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
34111                              # Captured emissions
34112                              sum(sink, Q_EMI(sink,t,n));
34113   
34114  * CO2 emission costs
34115  eqcost_emi_co2_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34116      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
34117   
34118  * Emission permit market clearing for internal market
34119  eq_mkt_clearing_nip_c_southafrica(c_mkt,t,'c_southafrica')$(internal(c_mkt))..
34120      sum(n$(map_clt_n('c_southafrica',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
34121   
34122  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
34125  *-------------------------------------------------------------------------------
34126  * Research & Development
34127  * Options:
34128  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
34129  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
34130  *-------------------------------------------------------------------------------
34131   
34133   
34134  * Knowledge stock accumulation
34135  eqk_rd_c_southafrica(rd,t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
34136                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
34137                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
34138                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
34139                                        SPILL(rd,t,n)**rd_coef(rd,'d');
34140   
34141  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
34142  eqspill_coop_c_southafrica(rd,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_southafrica'))..
34143          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
34144                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_southafrica',nn)), K_RD(rd,t,nn)) +
34145                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_southafrica',nn))), K_RD.l(rd,t,nn))
34146                            ) *
34147                            (
34148                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_southafrica',nn)), K_RD(rd,t,nn)) +
34149                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_southafrica',nn))), K_RD.l(rd,t,nn))
34150                              ) - K_RD(rd,t,n)
34151                            );
34152   
34153  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
34154  eqspill_lead_c_southafrica(rd,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_southafrica')) and leadrd(rd,n))..
34155                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
34156   
34157  * No-cooperation : a follower sees is negative effect on the quantity he can grab
34158  eqspill_foll_c_southafrica(rd,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_southafrica')) and (not leadrd(rd,n)))..
34159                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
34160   
34161  *- Only LbR (without learning by doing)
34162  eqmcost_inv_back_c_southafrica(jrd,t,tt,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
34163                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
34164                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
34165   
34166  *- LbR together with learning by doing ==> Two-factor learning curve
34167  eqmcost_inv_back_lbd_c_southafrica(jrd,t,tt,tfirst,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
34168                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
34169                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
34170                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
34171   
34172  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
34175  *-------------------------------------------------------------------------------
34176  * Default Climate Policy Implementation
34177  *
34178  * Options:
34179  *    --policy={bau (default),ctax}
34180  *        Implement a climate policy setting
34181  *  [ --scen= ]
34182  *        Policy variant.
34183  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
34184  *          * XXX for a fixed percentage/yr (e.g. 5) growth
34185  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
34186  *  [ --ctax_year=2020 ]
34187  *        Starting year of the carbon tax
34188  *  [ --ctax_initial=30 ]
34189  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
34190  *
34191  *-------------------------------------------------------------------------------
34193   
34194  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
34196  *-------------------------------------------------------------------------------
34197  * Energy efficiency
34198  *-------------------------------------------------------------------------------
34199   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
34202  *-------------------------------------------------------------------------------
34203  * Hydro Power
34204  *-------------------------------------------------------------------------------
34205   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
34208  *-------------------------------------------------------------------------------
34209  * System Integration:
34210  * - Capacity constraint
34211  * - Flexibility constraint
34212  * - Grid Investment
34213  * - Capacity growth constraint
34214  *-------------------------------------------------------------------------------
34215   
34217   
34218   
34219  * Renewable CES
34220   
34221  * Definition of the renewable CES
34222  eqq_elintren_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34223      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
34224   
34225  * Capacity constraint
34226   
34228  eqfirm_capacity_c_southafrica(t,n)$(map_clt_n('c_southafrica',n) and (not tfix(t)) and year(t) gt 2005)..
34229                   sum(jel_firm, K_EN(jel_firm,t,n))
34230                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
34231                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
34232                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
34233                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
34234                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
34235                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
34236                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
34237                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
34238                                       ) / yearly_hours
34239  ;
34241   
34242  * Flexibility constraint
34243  eqflex_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34244          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
34245                             ( Q_EN('el',t,n) -
34246                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
34247                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
34248                             ) * flex_coeff('load')
34249  ;
34250   
34251  * Grid
34252   
34253  ** Grid depreciation and investments
34254  eqk_en_grid_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
34255                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
34256                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
34257   
34258  ** Grid adjustment to power capacity
34259  eqk_en_grid_to_k_en_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34260                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
34261                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
34262                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
34263                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
34264                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
34265                                     ) / grid_cost +
34266                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
34267                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
34268                                      K_EN('elcsp',t,n);
34269  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
34270   
34271  * Capacity growth constraint
34272  eqcap_growth_c_southafrica(jinv,t,tp1,tp2,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
34273                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
34274                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
34275   
34276  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
34279  *-------------------------------------------------------------------------------
34280  * Nuclear power plants
34281  *-------------------------------------------------------------------------------
34282   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
34285  *-------------------------------------------------------------------------------
34286  * GHG module
34287  * - CH4 FFI + CH4 waste + CH4 open fires
34288  * - N2O FFI + N2O waste + N2O open fires
34289  *-------------------------------------------------------------------------------
34290   
34292   
34293  * CH4, N2O waste emissions
34294  eqq_emi_waste_c_southafrica(waste,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
34295                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
34296   
34297  * n2o FFI
34298  eqq_emi_n2o_ffi_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
34299    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
34300                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
34301                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
34302                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
34303                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
34304                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
34305                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
34306                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
34307                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
34308                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
34309                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
34310                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
34311                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
34312                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
34313                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
34314                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
34315                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
34316                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
34317                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
34318                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
34319                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
34320                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
34321                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
34322                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
34323                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
34324                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
34325                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
34326                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
34327                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
34328                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
34329                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
34330   
34331  * ch4 FFI
34332  eqq_emi_ch4_ffi_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
34333    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
34336  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
34337  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
34338                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
34339                             smax(tt$(year(tt) eq 2015),
34340                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
34343  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
34344  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
34345                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
34346   
34347  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
34350  *-------------------------------------------------------------------------------
34351  * F-gases
34352  * - LLF
34353  * - SLF
34354  *-------------------------------------------------------------------------------
34355   
34357   
34358  * F-gases emissions
34359  eqq_emi_fgases_c_southafrica(fgases,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
34360                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
34361   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
34364  *-------------------------------------------------------------------------------
34365  * Landuse [simplified version of the land-use model]
34366  *-------------------------------------------------------------------------------
34367   
34369   
34370  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
34371  eq_wbio_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34372      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
34373   
34375  * Cost of all woody biomass produced for advanced biofuels and woody biomass
34376  eqcost_pes_wbio_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34377      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
34379   
34380  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
34383  *-------------------------------------------------------------------------------
34384  * Bioenergy power plant
34385  *-------------------------------------------------------------------------------
34386   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
34389  *-------------------------------------------------------------------------------
34390  * Traditional Biofuels
34391  * - Requires the precedence of mod_landuse
34392  *-------------------------------------------------------------------------------
34393   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
34396  *-------------------------------------------------------------------------------
34397  * Advanced biofuel
34398  * - Require the precedence of mod_landuse
34399  *-------------------------------------------------------------------------------
34400   
34402   
34403  * Limitations for nel backstops
34404  eqq_en_lim_advbiofuel_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
34405               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
34406               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
34407   
34408  * Peculiarity of advbiofuel
34409  eqmcost_fuel_advbiofuel_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34410                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
34411   
34412  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
34415  *-------------------------------------------------------------------------------
34416  * Carbon Capture and Sequestration
34417  *-------------------------------------------------------------------------------
34418   
34420   
34421  eqq_emi_ccs_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34422                  Q_EMI('ccs_plant',t,n) =e=
34423                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
34424                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
34425  ;
34426   
34427  eqcost_emi_sinks_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34428                  COST_EMI('ccs_plant',t,n) =e=
34429                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
34430                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
34431  ;
34432   
34433  eq_stor_ccs_cum_c_southafrica(ccs_stor,tp1,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
34434                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
34435  ;
34436   
34437  eq_emi_stor_ccs_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34438                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
34439  ;
34440   
34441  eq_emi_leak_ccs_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34442                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
34443   
34444  *-------------------------------------------------------------------------------
34446   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
34448  *-------------------------------------------------------------------------------
34449  * Coal for non-electric sectors
34450  * - Coke Plants
34451  * - Industrial and Commercial combined-heat-and-power (CHP)
34452  * - Others
34453  *-------------------------------------------------------------------------------
34454   
34456   
34457  eqcost_en_nelcoal_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34458           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
34459                                          nelcoal_max_abat(t,n) *
34460                                          (nelcoal_cmac(n,'a') *
34461                                            Q_EN('nelcoalabat',t,n) /
34462                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
34463                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
34464                                              (exp(nelcoal_cmac(n,'c') *
34465                                                (Q_EN('nelcoalabat',t,n)/
34466                                                  (nelcoal_max_abat(t,n) *
34467                                                      nelcoal_baseline(t,n))
34468                                                  ) - 1 )
34469                                              )
34470                                          );
34471   
34472  eqq_ncoalabat_monotone_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
34473          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
34474   
34475  * ensure Q_EN is lower than K_EN for CCS as not in jel
34476  eqq_en_nelcoalccs_max_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34477          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
34478   
34479  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
34482  *-------------------------------------------------------------------------------
34483  * Wind energy module
34484  * - onshore and offshore
34485  *-------------------------------------------------------------------------------
34486   
34488   
34489  * Capacity limits in the wind onshore electrical sector
34490  eqq_en_mu_windon_c_southafrica(wind_dist,wind_class,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
34491      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
34492   
34493  * Capacity limits in the wind offshore electrical sector
34494  eqq_en_mu_windoff_c_southafrica(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
34495      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
34496   
34497  * Wind onshore electrical generation plants (new)
34498  eqk_en_windon_c_southafrica(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
34499      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
34500                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
34501   
34502  * Wind offshore electrical generation plants (new)
34503  eqk_en_windoff_c_southafrica(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
34504      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
34505                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
34506   
34507  * Total onshore wind energy production
34508  eqq_en_windon_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34509                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
34510   
34511  * Total offshore wind energy production
34512  eqq_en_windoff_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34513                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
34514   
34515  * Total onshore wind capacity
34516  eqk_en_windon_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34517                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
34518   
34519  * Total offshore wind capacity
34520  eqk_en_windoff_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34521                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
34522   
34523  * Total onshore wind investment
34524  eqi_en_windon_sum_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
34525                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
34526   
34527  * Total offshore wind investment
34528  eqi_en_windoff_sum_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
34529                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
34530   
34531  *-------------------------------------------------------------------------------
34533   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
34535  *-------------------------------------------------------------------------------
34536  * Solar Powerplants (PV and CSP) to the electrical system
34537  *-------------------------------------------------------------------------------
34538   
34539  *-------------------------------------------------------------------------------
34541   
34542   
34543  * Capacity limits in the pv electrical sector
34544  eqq_en_mu_pv_c_southafrica(solar_dist,solar_class,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
34545                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
34546   
34547  * Capacity limits in the csp electrical sector
34548  eqq_en_mu_csp_c_southafrica(solar_dist,solar_class,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
34549                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
34550   
34551  * PV electrical generation plants (new)
34552  eqk_en_pv_c_southafrica(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
34553                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
34554                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
34555   
34556  * CSP electrical generation plants (new)
34557  eqk_en_csp_c_southafrica(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
34558                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
34559                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
34560   
34561  * Total PV energy production
34562  eqq_en_pv_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34563                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
34564   
34565  * Total CSP energy production
34566  eqq_en_csp_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34567                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
34568   
34569  * Total PV capacity
34570  eqk_en_pv_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34571                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
34572   
34573  * Total CSP capacity
34574  eqk_en_csp_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34575                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
34576   
34577  * Total PV investment
34578  eqi_en_pv_sum_c_southafrica(t,tp1,n)$(map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
34579                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
34580   
34581  * Total CSP investment
34582  eqi_en_csp_sum_c_southafrica(t,tp1,n)$(map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
34583                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
34584   
34585  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
34586  eqk_en_solar_comp_c_southafrica(t,n,solar_dist)$(map_clt_n('c_southafrica',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
34587                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
34588                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
34589   
34590   
34591   
34592  *-------------------------------------------------------------------------------
34594   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
34596  *-------------------------------------------------------------------------------
34597  * Technology development scenarios
34598  *-------------------------------------------------------------------------------
34599   
34601   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
34603  *-------------------------------------------------------------------------------
34604  * Oil Extraction
34605  * Options:
34606  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
34607  *-------------------------------------------------------------------------------
34608   
34610   
34611  * Capacity
34612  eqoilcap_c_southafrica(t,tp1,n,oilg)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
34613      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
34614   
34615  * Production
34616  eqoilprod_c_southafrica(t,tp1,n,oilg)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
34617      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
34618   
34619  eqq_out_oil_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34620      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
34621   
34622  * Cumulative production
34623  eqcum_oil_c_southafrica(t,tp1,n,oilg)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
34624      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
34625   
34626  * Cost
34627  eqcost_oil_c_southafrica(t,tp1,n,oilg)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
34628      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
34629                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
34630                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
34631   
34632  * Investments
34633  eqi_oil_c_southafrica(t,tp1,n,oilg)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
34634      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
34635   
34636  * Total investment
34637  eqi_out_oil_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
34638      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
34639   
34640  * Emissions
34641  eqq_emi_out_oil_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34642      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
34643   
34644  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
34647  *-------------------------------------------------------------------------------
34648  * Uranium Resources
34649  *-------------------------------------------------------------------------------
34650   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
34653  *-------------------------------------------------------------------------------
34654  * Gas Resources
34655  *-------------------------------------------------------------------------------
34656   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
34659  *-------------------------------------------------------------------------------
34660  * Coal Resources
34661  *-------------------------------------------------------------------------------
34662   
34664   
34665   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
34667  *-------------------------------------------------------------------------------
34668  * Climate
34669  *
34670  * Represents the climate
34671  * - based on the DICE model equations
34672  * - Radiative forcing for non CO2 ghgs
34673  * - parameters calibrated to reproduce MAGICC6.4 default response
34674  *
34675  *  Options:
34676  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
34677  * - $setglobal cooperate_on_climate {'YES','NO'}
34678  * - 'YES'(default): Countries within a coalition act in cooperation
34679  *   'NO': Countries within a coalition act individually
34680  *
34681  *-------------------------------------------------------------------------------
34682   
34684   
34686   
34687  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
34690  *-------------------------------------------------------------------------------
34691  * Long-run Damages from Climate Change
34692  * - Economic impacts
34693  * - Adaptation
34694  *-------------------------------------------------------------------------------
34695   
34697   
34699   
34700  *-------------------------------------------------------------------------------
34702   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
34704  *-------------------------------------------------------------------------------
34705  * Light-duty Vehicles for Personal Transport
34706  *-------------------------------------------------------------------------------
34707   
34709   
34710  *** newcode
34711  eqq_inv_red_ban_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34712      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
34713   
34714  ***
34715  *- Number of light duty vehicles
34716  eqnb_veh_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34717      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
34718   
34719  *- Yearly energy demand of vehicles
34720  eqq_en_veh_c_southafrica(jveh,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34721      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
34722   
34723  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
34724  eqq_el_edv_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34725      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
34726   
34727  *- Investment cost for hybrid vehicles
34728  eqmcost_inv_hybrid_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
34729                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
34730   
34731  *- Investment cost for plug-in hybrid vehicles
34732  eqmcost_inv_plghybrid_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
34733                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
34734   
34735  *- Investment cost for electric drive vehicles
34736  eqmcost_inv_edv_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
34737                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
34738   
34739  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
34742  *-------------------------------------------------------------------------------
34743  * Road Freight Transport
34744  *-------------------------------------------------------------------------------
34746   
34747  *-  Number of freight vehicles
34748  eqnb_frtveh_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34749                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
34750   
34751  *-  Yearly fuel consumption of freight vehicles
34752  eqq_en_frtveh_c_southafrica(jfrt,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34753                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
34754   
34755  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
34756  eqq_el_frtedv_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34757                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
34758   
34759  *-  Investment cost for hbd_stfr vehicle
34760  eqmcost_inv_hbd_stfr_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
34761                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
34762   
34763  *-  Investment cost for plug-in hbd_stfr vehicle
34764  eqmcost_inv_plghbd_stfr_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
34765                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
34766   
34767  *-  Investment cost for electric drive vehicle
34768  eqmcost_inv_edv_stfr_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
34769                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
34770   
34771  *-------------------------------------------------------------------------------
34773   
34774   
34775   
34776   
34777   
34778   
34779  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
34781  *-------------------------------------------------------------------------------
34782  * Traditional Biomass
34783  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
34784  *  - require post_process to be launch before
34785  *-------------------------------------------------------------------------------
34786   
34788   
34789  * Optional modules
34790   
34791  * Policy modules
34792   
34793  * Calibration
34796   
34797   
34798  model witch_c_southafrica /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
34800  *-------------------------------------------------------------------------------
34801  * Call modules by order
34802  *-------------------------------------------------------------------------------
34806   
34807  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
34809  *-------------------------------------------------------------------------------
34810  * Algorithm
34811  *-------------------------------------------------------------------------------
34812   
34814   
34815  eqobj_c_southafrica
34816   
34817  *-------------------------------------------------------------------------------
34819   
34820  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
34822  *-------------------------------------------------------------------------------
34823  * Time
34824  * - Temporal structure
34825  * - Fixed time periods
34826  * - States of the world
34827  *-------------------------------------------------------------------------------
34828   
34830   
34831  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
34833  *-------------------------------------------------------------------------------
34834  * Geographic dimension and mapping with countries
34835  *-------------------------------------------------------------------------------
34836   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
34839  *-------------------------------------------------------------------------------
34840  * Non-Cooperative Setup
34841  *
34842  * Each region is defined as an individual coalition.
34843  *
34844  *-------------------------------------------------------------------------------
34845   
34847   
34848  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
34850  *-------------------------------------------------------------------------------
34851  * Welfare
34852  *-------------------------------------------------------------------------------
34853   
34855   
34856  equtility_c_southafrica
34857   
34858  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
34861  *-------------------------------------------------------------------------------
34862  * Economy
34863  * - Production and Consumption definition
34864  * - Top-level of the production function
34865  * Options:
34866  * --original_ssp=1 : original SSP population and GDP data
34867  *-------------------------------------------------------------------------------
34868   
34870   
34871  eqk_c_southafrica
34872  eqq_cc_c_southafrica
34873  eqq_fen_c_southafrica
34874  eqq_y_c_southafrica
34875   
34876  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
34879  *-------------------------------------------------------------------------------
34880  * Energy sector
34881  *-------------------------------------------------------------------------------
34882   
34884   
34885  eq_mkt_clearing_oil_c_southafrica
34886  eqcost_pes_c_southafrica
34887  eqcost_ses_c_southafrica
34888  eqk_en_c_southafrica
34889  eqq_ces_el_c_southafrica
34890  eqq_ces_nelgas_c_southafrica
34891  eqq_el2_c_southafrica
34892  eqq_el_c_southafrica
34893  eqq_elff_c_southafrica
34894  eqq_en_c_southafrica
34895  eqq_en_in_c_southafrica
34896  eqq_en_mu_c_southafrica
34897  eqq_en_tree_c_southafrica
34898  eqq_nel_c_southafrica
34899  eqq_nelog_c_southafrica
34900  eqq_fuel_c_southafrica
34901  eqq_elffren_c_southafrica
34902   
34903  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
34906  *-------------------------------------------------------------------------------
34907  * Carbon Emissions
34908  * - Total CO2 emissions and CO2 Fossil fuel and Industry
34909  * - CO2 emission costs
34910  * - GHG permit market
34911  *-------------------------------------------------------------------------------
34912   
34914   
34915  eqq_emi_lim_c_southafrica
34916  ***newcode
34917  eqq_emi_lim_USAc_southafrica
34918  ***
34919  eqq_emi_tree_c_southafrica
34920  eqq_emi_co2ffi_c_southafrica
34921   
34922  eqcost_emi_co2_c_southafrica
34923   
34924  eq_mkt_clearing_nip_c_southafrica
34925   
34926  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
34929  *-------------------------------------------------------------------------------
34930  * Research & Development
34931  * Options:
34932  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
34933  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
34934  *-------------------------------------------------------------------------------
34935   
34937   
34938  eqk_rd_c_southafrica
34939  eqspill_coop_c_southafrica
34940  eqspill_lead_c_southafrica
34941  eqspill_foll_c_southafrica
34942  eqmcost_inv_back_c_southafrica
34943  eqmcost_inv_back_lbd_c_southafrica
34944   
34945  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
34948  *-------------------------------------------------------------------------------
34949  * Default Climate Policy Implementation
34950  *
34951  * Options:
34952  *    --policy={bau (default),ctax}
34953  *        Implement a climate policy setting
34954  *  [ --scen= ]
34955  *        Policy variant.
34956  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
34957  *          * XXX for a fixed percentage/yr (e.g. 5) growth
34958  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
34959  *  [ --ctax_year=2020 ]
34960  *        Starting year of the carbon tax
34961  *  [ --ctax_initial=30 ]
34962  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
34963  *
34964  *-------------------------------------------------------------------------------
34966   
34967  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
34969  *-------------------------------------------------------------------------------
34970  * Energy efficiency
34971  *-------------------------------------------------------------------------------
34972   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
34975  *-------------------------------------------------------------------------------
34976  * Hydro Power
34977  *-------------------------------------------------------------------------------
34978   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
34981  *-------------------------------------------------------------------------------
34982  * System Integration:
34983  * - Capacity constraint
34984  * - Flexibility constraint
34985  * - Grid Investment
34986  * - Capacity growth constraint
34987  *-------------------------------------------------------------------------------
34988   
34990   
34991  eqq_elintren_c_southafrica
34992  eqflex_c_southafrica
34993  eqk_en_grid_c_southafrica
34994  eqk_en_grid_to_k_en_c_southafrica
34995  eqfirm_capacity_c_southafrica
34996  eqcap_growth_c_southafrica
34997   
34998  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
35001  *-------------------------------------------------------------------------------
35002  * Nuclear power plants
35003  *-------------------------------------------------------------------------------
35004   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
35007  *-------------------------------------------------------------------------------
35008  * GHG module
35009  * - CH4 FFI + CH4 waste + CH4 open fires
35010  * - N2O FFI + N2O waste + N2O open fires
35011  *-------------------------------------------------------------------------------
35012   
35014   
35015  eqq_emi_waste_c_southafrica
35016  eqq_emi_n2o_ffi_c_southafrica
35017  eqq_emi_ch4_ffi_c_southafrica
35018   
35019  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
35022  *-------------------------------------------------------------------------------
35023  * F-gases
35024  * - LLF
35025  * - SLF
35026  *-------------------------------------------------------------------------------
35027   
35029   
35030  eqq_emi_fgases_c_southafrica
35031   
35032  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
35035  *-------------------------------------------------------------------------------
35036  * Landuse [simplified version of the land-use model]
35037  *-------------------------------------------------------------------------------
35038   
35040   
35041  eq_wbio_c_southafrica
35042  eqcost_pes_wbio_c_southafrica
35043   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
35046  *-------------------------------------------------------------------------------
35047  * Bioenergy power plant
35048  *-------------------------------------------------------------------------------
35049   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
35052  *-------------------------------------------------------------------------------
35053  * Traditional Biofuels
35054  * - Requires the precedence of mod_landuse
35055  *-------------------------------------------------------------------------------
35056   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
35059  *-------------------------------------------------------------------------------
35060  * Advanced biofuel
35061  * - Require the precedence of mod_landuse
35062  *-------------------------------------------------------------------------------
35063   
35065   
35066  eqq_en_lim_advbiofuel_c_southafrica
35067  eqmcost_fuel_advbiofuel_c_southafrica
35068   
35069  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
35072  *-------------------------------------------------------------------------------
35073  * Carbon Capture and Sequestration
35074  *-------------------------------------------------------------------------------
35075   
35077   
35078  eqq_emi_ccs_c_southafrica
35079  eqcost_emi_sinks_c_southafrica
35080  eq_stor_ccs_cum_c_southafrica
35081  eq_emi_stor_ccs_c_southafrica
35082  eq_emi_leak_ccs_c_southafrica
35083   
35084  *-------------------------------------------------------------------------------
35086   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
35088  *-------------------------------------------------------------------------------
35089  * Coal for non-electric sectors
35090  * - Coke Plants
35091  * - Industrial and Commercial combined-heat-and-power (CHP)
35092  * - Others
35093  *-------------------------------------------------------------------------------
35094   
35096   
35097  eqcost_en_nelcoal_c_southafrica
35098  eqq_ncoalabat_monotone_c_southafrica
35099  eqq_en_nelcoalccs_max_c_southafrica
35100   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
35103  *-------------------------------------------------------------------------------
35104  * Wind energy module
35105  * - onshore and offshore
35106  *-------------------------------------------------------------------------------
35107   
35109   
35110  eqq_en_mu_windon_c_southafrica
35111  eqq_en_mu_windoff_c_southafrica
35112  eqk_en_windon_c_southafrica
35113  eqk_en_windoff_c_southafrica
35114  eqq_en_windon_sum_c_southafrica
35115  eqq_en_windoff_sum_c_southafrica
35116  eqk_en_windon_sum_c_southafrica
35117  eqk_en_windoff_sum_c_southafrica
35118  eqi_en_windon_sum_c_southafrica
35119  eqi_en_windoff_sum_c_southafrica
35120   
35122   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
35124  *-------------------------------------------------------------------------------
35125  * Solar Powerplants (PV and CSP) to the electrical system
35126  *-------------------------------------------------------------------------------
35127   
35128  *-------------------------------------------------------------------------------
35130   
35131  eqq_en_mu_pv_c_southafrica
35132  eqq_en_mu_csp_c_southafrica
35133  eqk_en_pv_c_southafrica
35134  eqk_en_csp_c_southafrica
35135  eqq_en_pv_sum_c_southafrica
35136  eqq_en_csp_sum_c_southafrica
35137  eqk_en_pv_sum_c_southafrica
35138  eqk_en_csp_sum_c_southafrica
35139  eqi_en_pv_sum_c_southafrica
35140  eqi_en_csp_sum_c_southafrica
35141  eqk_en_solar_comp_c_southafrica
35142   
35143  *-------------------------------------------------------------------------------
35145   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
35147  *-------------------------------------------------------------------------------
35148  * Technology development scenarios
35149  *-------------------------------------------------------------------------------
35150   
35152   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
35154  *-------------------------------------------------------------------------------
35155  * Oil Extraction
35156  * Options:
35157  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
35158  *-------------------------------------------------------------------------------
35159   
35161   
35162  eqoilcap_c_southafrica
35163  eqoilprod_c_southafrica
35164  eqq_out_oil_c_southafrica
35165  eqcum_oil_c_southafrica
35166  eqcost_oil_c_southafrica
35167  eqi_oil_c_southafrica
35168  eqi_out_oil_c_southafrica
35169  eqq_emi_out_oil_c_southafrica
35170   
35171  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
35174  *-------------------------------------------------------------------------------
35175  * Uranium Resources
35176  *-------------------------------------------------------------------------------
35177   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
35180  *-------------------------------------------------------------------------------
35181  * Gas Resources
35182  *-------------------------------------------------------------------------------
35183   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
35186  *-------------------------------------------------------------------------------
35187  * Coal Resources
35188  *-------------------------------------------------------------------------------
35189   
35191   
35192   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
35194  *-------------------------------------------------------------------------------
35195  * Climate
35196  *
35197  * Represents the climate
35198  * - based on the DICE model equations
35199  * - Radiative forcing for non CO2 ghgs
35200  * - parameters calibrated to reproduce MAGICC6.4 default response
35201  *
35202  *  Options:
35203  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
35204  * - $setglobal cooperate_on_climate {'YES','NO'}
35205  * - 'YES'(default): Countries within a coalition act in cooperation
35206  *   'NO': Countries within a coalition act individually
35207  *
35208  *-------------------------------------------------------------------------------
35209   
35211   
35213   
35214  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
35217  *-------------------------------------------------------------------------------
35218  * Long-run Damages from Climate Change
35219  * - Economic impacts
35220  * - Adaptation
35221  *-------------------------------------------------------------------------------
35222   
35224   
35226   
35227  *-------------------------------------------------------------------------------
35229   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
35231  *-------------------------------------------------------------------------------
35232  * Light-duty Vehicles for Personal Transport
35233  *-------------------------------------------------------------------------------
35234   
35236   
35237  eqnb_veh_c_southafrica
35238  eqq_en_veh_c_southafrica
35239  eqq_el_edv_c_southafrica
35240  eqmcost_inv_hybrid_c_southafrica
35241  eqmcost_inv_plghybrid_c_southafrica
35242  eqmcost_inv_edv_c_southafrica
35243  *** newcode
35244  eqq_inv_red_ban_c_southafrica
35245  ***
35246  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
35249  *-------------------------------------------------------------------------------
35250  * Road Freight Transport
35251  *-------------------------------------------------------------------------------
35253   
35254  eqnb_frtveh_c_southafrica
35255  eqq_en_frtveh_c_southafrica
35256  eqq_el_frtedv_c_southafrica
35257  eqmcost_inv_hbd_stfr_c_southafrica
35258  eqmcost_inv_plghbd_stfr_c_southafrica
35259  eqmcost_inv_edv_stfr_c_southafrica
35260   
35261  *-------------------------------------------------------------------------------
35263   
35264   
35265   
35266   
35267   
35268   
35269  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
35271  *-------------------------------------------------------------------------------
35272  * Traditional Biomass
35273  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
35274  *  - require post_process to be launch before
35275  *-------------------------------------------------------------------------------
35276   
35278   
35279  * Optional modules
35280   
35281  * Policy modules
35282   
35283  * Calibration
35286  /;
35287   
35288  witch_c_southafrica.optfile=1;   # the option file solvername.opt is to be used
35289  witch_c_southafrica.holdfixed=1; # treat fixed values as constant
35290  witch_c_southafrica.scaleopt=1;  # Use scaling for better gradients estimation
35291  witch_c_southafrica.solvelink=3; # Use parallel or sequential solving
35292   
35297   
35298  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
35300  *-------------------------------------------------------------------------------
35301  * Call modules by order
35302  *-------------------------------------------------------------------------------
35306   
35307  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
35309  *-------------------------------------------------------------------------------
35310  * Algorithm
35311  *-------------------------------------------------------------------------------
35312   
35314   
35315  eqobj_c_ssa
35316   
35317  *-------------------------------------------------------------------------------
35319   
35320  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
35322  *-------------------------------------------------------------------------------
35323  * Time
35324  * - Temporal structure
35325  * - Fixed time periods
35326  * - States of the world
35327  *-------------------------------------------------------------------------------
35328   
35330   
35331  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
35333  *-------------------------------------------------------------------------------
35334  * Geographic dimension and mapping with countries
35335  *-------------------------------------------------------------------------------
35336   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
35339  *-------------------------------------------------------------------------------
35340  * Non-Cooperative Setup
35341  *
35342  * Each region is defined as an individual coalition.
35343  *
35344  *-------------------------------------------------------------------------------
35345   
35347   
35348  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
35350  *-------------------------------------------------------------------------------
35351  * Welfare
35352  *-------------------------------------------------------------------------------
35353   
35355   
35356  equtility_c_ssa
35357   
35358  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
35361  *-------------------------------------------------------------------------------
35362  * Economy
35363  * - Production and Consumption definition
35364  * - Top-level of the production function
35365  * Options:
35366  * --original_ssp=1 : original SSP population and GDP data
35367  *-------------------------------------------------------------------------------
35368   
35370   
35371  eqk_c_ssa
35372  eqq_cc_c_ssa
35373  eqq_fen_c_ssa
35374  eqq_y_c_ssa
35375   
35376  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
35379  *-------------------------------------------------------------------------------
35380  * Energy sector
35381  *-------------------------------------------------------------------------------
35382   
35384   
35385  eq_mkt_clearing_oil_c_ssa
35386  eqcost_pes_c_ssa
35387  eqcost_ses_c_ssa
35388  eqk_en_c_ssa
35389  eqq_ces_el_c_ssa
35390  eqq_ces_nelgas_c_ssa
35391  eqq_el2_c_ssa
35392  eqq_el_c_ssa
35393  eqq_elff_c_ssa
35394  eqq_en_c_ssa
35395  eqq_en_in_c_ssa
35396  eqq_en_mu_c_ssa
35397  eqq_en_tree_c_ssa
35398  eqq_nel_c_ssa
35399  eqq_nelog_c_ssa
35400  eqq_fuel_c_ssa
35401  eqq_elffren_c_ssa
35402   
35403  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
35406  *-------------------------------------------------------------------------------
35407  * Carbon Emissions
35408  * - Total CO2 emissions and CO2 Fossil fuel and Industry
35409  * - CO2 emission costs
35410  * - GHG permit market
35411  *-------------------------------------------------------------------------------
35412   
35414   
35415  eqq_emi_lim_c_ssa
35416  ***newcode
35417  eqq_emi_lim_USAc_ssa
35418  ***
35419  eqq_emi_tree_c_ssa
35420  eqq_emi_co2ffi_c_ssa
35421   
35422  eqcost_emi_co2_c_ssa
35423   
35424  eq_mkt_clearing_nip_c_ssa
35425   
35426  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
35429  *-------------------------------------------------------------------------------
35430  * Research & Development
35431  * Options:
35432  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
35433  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
35434  *-------------------------------------------------------------------------------
35435   
35437   
35438  eqk_rd_c_ssa
35439  eqspill_coop_c_ssa
35440  eqspill_lead_c_ssa
35441  eqspill_foll_c_ssa
35442  eqmcost_inv_back_c_ssa
35443  eqmcost_inv_back_lbd_c_ssa
35444   
35445  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
35448  *-------------------------------------------------------------------------------
35449  * Default Climate Policy Implementation
35450  *
35451  * Options:
35452  *    --policy={bau (default),ctax}
35453  *        Implement a climate policy setting
35454  *  [ --scen= ]
35455  *        Policy variant.
35456  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
35457  *          * XXX for a fixed percentage/yr (e.g. 5) growth
35458  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
35459  *  [ --ctax_year=2020 ]
35460  *        Starting year of the carbon tax
35461  *  [ --ctax_initial=30 ]
35462  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
35463  *
35464  *-------------------------------------------------------------------------------
35466   
35467  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
35469  *-------------------------------------------------------------------------------
35470  * Energy efficiency
35471  *-------------------------------------------------------------------------------
35472   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
35475  *-------------------------------------------------------------------------------
35476  * Hydro Power
35477  *-------------------------------------------------------------------------------
35478   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
35481  *-------------------------------------------------------------------------------
35482  * System Integration:
35483  * - Capacity constraint
35484  * - Flexibility constraint
35485  * - Grid Investment
35486  * - Capacity growth constraint
35487  *-------------------------------------------------------------------------------
35488   
35490   
35491  eqq_elintren_c_ssa
35492  eqflex_c_ssa
35493  eqk_en_grid_c_ssa
35494  eqk_en_grid_to_k_en_c_ssa
35495  eqfirm_capacity_c_ssa
35496  eqcap_growth_c_ssa
35497   
35498  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
35501  *-------------------------------------------------------------------------------
35502  * Nuclear power plants
35503  *-------------------------------------------------------------------------------
35504   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
35507  *-------------------------------------------------------------------------------
35508  * GHG module
35509  * - CH4 FFI + CH4 waste + CH4 open fires
35510  * - N2O FFI + N2O waste + N2O open fires
35511  *-------------------------------------------------------------------------------
35512   
35514   
35515  eqq_emi_waste_c_ssa
35516  eqq_emi_n2o_ffi_c_ssa
35517  eqq_emi_ch4_ffi_c_ssa
35518   
35519  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
35522  *-------------------------------------------------------------------------------
35523  * F-gases
35524  * - LLF
35525  * - SLF
35526  *-------------------------------------------------------------------------------
35527   
35529   
35530  eqq_emi_fgases_c_ssa
35531   
35532  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
35535  *-------------------------------------------------------------------------------
35536  * Landuse [simplified version of the land-use model]
35537  *-------------------------------------------------------------------------------
35538   
35540   
35541  eq_wbio_c_ssa
35542  eqcost_pes_wbio_c_ssa
35543   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
35546  *-------------------------------------------------------------------------------
35547  * Bioenergy power plant
35548  *-------------------------------------------------------------------------------
35549   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
35552  *-------------------------------------------------------------------------------
35553  * Traditional Biofuels
35554  * - Requires the precedence of mod_landuse
35555  *-------------------------------------------------------------------------------
35556   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
35559  *-------------------------------------------------------------------------------
35560  * Advanced biofuel
35561  * - Require the precedence of mod_landuse
35562  *-------------------------------------------------------------------------------
35563   
35565   
35566  eqq_en_lim_advbiofuel_c_ssa
35567  eqmcost_fuel_advbiofuel_c_ssa
35568   
35569  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
35572  *-------------------------------------------------------------------------------
35573  * Carbon Capture and Sequestration
35574  *-------------------------------------------------------------------------------
35575   
35577   
35578  eqq_emi_ccs_c_ssa
35579  eqcost_emi_sinks_c_ssa
35580  eq_stor_ccs_cum_c_ssa
35581  eq_emi_stor_ccs_c_ssa
35582  eq_emi_leak_ccs_c_ssa
35583   
35584  *-------------------------------------------------------------------------------
35586   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
35588  *-------------------------------------------------------------------------------
35589  * Coal for non-electric sectors
35590  * - Coke Plants
35591  * - Industrial and Commercial combined-heat-and-power (CHP)
35592  * - Others
35593  *-------------------------------------------------------------------------------
35594   
35596   
35597  eqcost_en_nelcoal_c_ssa
35598  eqq_ncoalabat_monotone_c_ssa
35599  eqq_en_nelcoalccs_max_c_ssa
35600   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
35603  *-------------------------------------------------------------------------------
35604  * Wind energy module
35605  * - onshore and offshore
35606  *-------------------------------------------------------------------------------
35607   
35609   
35610  eqq_en_mu_windon_c_ssa
35611  eqq_en_mu_windoff_c_ssa
35612  eqk_en_windon_c_ssa
35613  eqk_en_windoff_c_ssa
35614  eqq_en_windon_sum_c_ssa
35615  eqq_en_windoff_sum_c_ssa
35616  eqk_en_windon_sum_c_ssa
35617  eqk_en_windoff_sum_c_ssa
35618  eqi_en_windon_sum_c_ssa
35619  eqi_en_windoff_sum_c_ssa
35620   
35622   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
35624  *-------------------------------------------------------------------------------
35625  * Solar Powerplants (PV and CSP) to the electrical system
35626  *-------------------------------------------------------------------------------
35627   
35628  *-------------------------------------------------------------------------------
35630   
35631  eqq_en_mu_pv_c_ssa
35632  eqq_en_mu_csp_c_ssa
35633  eqk_en_pv_c_ssa
35634  eqk_en_csp_c_ssa
35635  eqq_en_pv_sum_c_ssa
35636  eqq_en_csp_sum_c_ssa
35637  eqk_en_pv_sum_c_ssa
35638  eqk_en_csp_sum_c_ssa
35639  eqi_en_pv_sum_c_ssa
35640  eqi_en_csp_sum_c_ssa
35641  eqk_en_solar_comp_c_ssa
35642   
35643  *-------------------------------------------------------------------------------
35645   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
35647  *-------------------------------------------------------------------------------
35648  * Technology development scenarios
35649  *-------------------------------------------------------------------------------
35650   
35652   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
35654  *-------------------------------------------------------------------------------
35655  * Oil Extraction
35656  * Options:
35657  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
35658  *-------------------------------------------------------------------------------
35659   
35661   
35662  eqoilcap_c_ssa
35663  eqoilprod_c_ssa
35664  eqq_out_oil_c_ssa
35665  eqcum_oil_c_ssa
35666  eqcost_oil_c_ssa
35667  eqi_oil_c_ssa
35668  eqi_out_oil_c_ssa
35669  eqq_emi_out_oil_c_ssa
35670   
35671  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
35674  *-------------------------------------------------------------------------------
35675  * Uranium Resources
35676  *-------------------------------------------------------------------------------
35677   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
35680  *-------------------------------------------------------------------------------
35681  * Gas Resources
35682  *-------------------------------------------------------------------------------
35683   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
35686  *-------------------------------------------------------------------------------
35687  * Coal Resources
35688  *-------------------------------------------------------------------------------
35689   
35691   
35692   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
35694  *-------------------------------------------------------------------------------
35695  * Climate
35696  *
35697  * Represents the climate
35698  * - based on the DICE model equations
35699  * - Radiative forcing for non CO2 ghgs
35700  * - parameters calibrated to reproduce MAGICC6.4 default response
35701  *
35702  *  Options:
35703  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
35704  * - $setglobal cooperate_on_climate {'YES','NO'}
35705  * - 'YES'(default): Countries within a coalition act in cooperation
35706  *   'NO': Countries within a coalition act individually
35707  *
35708  *-------------------------------------------------------------------------------
35709   
35711   
35713   
35714  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
35717  *-------------------------------------------------------------------------------
35718  * Long-run Damages from Climate Change
35719  * - Economic impacts
35720  * - Adaptation
35721  *-------------------------------------------------------------------------------
35722   
35724   
35726   
35727  *-------------------------------------------------------------------------------
35729   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
35731  *-------------------------------------------------------------------------------
35732  * Light-duty Vehicles for Personal Transport
35733  *-------------------------------------------------------------------------------
35734   
35736   
35737  eqnb_veh_c_ssa
35738  eqq_en_veh_c_ssa
35739  eqq_el_edv_c_ssa
35740  eqmcost_inv_hybrid_c_ssa
35741  eqmcost_inv_plghybrid_c_ssa
35742  eqmcost_inv_edv_c_ssa
35743  *** newcode
35744  eqq_inv_red_ban_c_ssa
35745  ***
35746  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
35749  *-------------------------------------------------------------------------------
35750  * Road Freight Transport
35751  *-------------------------------------------------------------------------------
35753   
35754  eqnb_frtveh_c_ssa
35755  eqq_en_frtveh_c_ssa
35756  eqq_el_frtedv_c_ssa
35757  eqmcost_inv_hbd_stfr_c_ssa
35758  eqmcost_inv_plghbd_stfr_c_ssa
35759  eqmcost_inv_edv_stfr_c_ssa
35760   
35761  *-------------------------------------------------------------------------------
35763   
35764   
35765   
35766   
35767   
35768   
35769  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
35771  *-------------------------------------------------------------------------------
35772  * Traditional Biomass
35773  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
35774  *  - require post_process to be launch before
35775  *-------------------------------------------------------------------------------
35776   
35778   
35779  * Optional modules
35780   
35781  * Policy modules
35782   
35783  * Calibration
35786  ;
35787   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
35789  *-------------------------------------------------------------------------------
35790  * Call modules by order
35791  *-------------------------------------------------------------------------------
35795   
35796  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
35798  *-------------------------------------------------------------------------------
35799  * Algorithm
35800  *-------------------------------------------------------------------------------
35801   
35803   
35805  * Add the component of the (maximized) objective function as required by the ADMM algorithm
35806  eqobj_c_ssa..
35807      OBJADMM =e= UTILITY -
35808          sum(t, rho_admm('oil',t) / 2 *
35809              sum(n$(map_clt_n('c_ssa',n) and trading_t('oil',t,n)),
35810                  power(
35811                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
35812                      x_admm('oil',t,n) +
35813                      xavg_admm('oil',t) +
35814                      u_admm('oil', t)
35815                  ,2)
35816              )) -
35817          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
35818              sum(n$(map_clt_n('c_ssa',n) and trading_t(c_mkt,t,n)),
35819                  power(
35820                      Q_EMI(c_mkt,t,n) -
35821                      x_admm(c_mkt,t,n) +
35822                      xavg_admm(c_mkt,t) +
35823                      u_admm(c_mkt,t)
35824                  ,2)
35825              ))
35826      ;
35828   
35829  *-------------------------------------------------------------------------------
35831   
35832  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
35834  *-------------------------------------------------------------------------------
35835  * Time
35836  * - Temporal structure
35837  * - Fixed time periods
35838  * - States of the world
35839  *-------------------------------------------------------------------------------
35840   
35842   
35843  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
35845  *-------------------------------------------------------------------------------
35846  * Geographic dimension and mapping with countries
35847  *-------------------------------------------------------------------------------
35848   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
35851  *-------------------------------------------------------------------------------
35852  * Non-Cooperative Setup
35853  *
35854  * Each region is defined as an individual coalition.
35855  *
35856  *-------------------------------------------------------------------------------
35857   
35859   
35860  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
35862  *-------------------------------------------------------------------------------
35863  * Welfare
35864  *-------------------------------------------------------------------------------
35865   
35867   
35868  * Objective function - Welfare to be maximized
35869  equtility_c_ssa..
35870      UTILITY =e=
35871   
35872  * Negishi SWF
35874   
35875  * Welfare functions based on CEBGE
35878                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
35879                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
35880                      ((sum(n$map_clt_n('c_ssa',n),
35881                        (l(t,n) / sum(nn$map_clt_n('c_ssa',nn), l(t,nn))) *
35882                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
35883                       )**(1 / (1 - gamma))
35884                      )**(1 - eta) ) +
35885                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
35886                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
35887                      ((sum(n$map_clt_n('c_ssa',n),
35888                        (l(t,n) / sum(nn$map_clt_n('c_ssa',nn), l(t,nn))) *
35889                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
35890                       )**(1 / (1 - gamma))
35891                      )**(1 - eta) )
35892                  )**(1/(1 - eta)) * 1e6
35895   
35896   
35897  ;
35898   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
35901  *-------------------------------------------------------------------------------
35902  * Economy
35903  * - Production and Consumption definition
35904  * - Top-level of the production function
35905  * Options:
35906  * --original_ssp=1 : original SSP population and GDP data
35907  *-------------------------------------------------------------------------------
35908   
35910   
35911  * Production
35912  eqq_y_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35913   
35914      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
35915                     ## Climate feedback on economy
35917                     ## Net cost of Primary and Secondary Energy Sources
35918                     - sum(fuel, COST_FUEL(fuel,t,n))
35919                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
35920                     - sum(cce, COST_EMI(cce,t,n))
35921                     ## Carbon tax
35922                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
35923                     ## Additionnal costs on gross product
35924                     - sum(ccy, COST_Y(ccy,t,n))
35925  ;
35926   
35927  * Consumption
35928  eqq_cc_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
35929      Q('cc',t,n) =e= Q('y',t,n)
35930                      ## Investments in goods g (final good, adaptation)
35931                      -sum(g, I(g,t,n))
35932                      ## Investments in r&d
35933                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
35934                      ## Investments in energy technlogies
35935                      -sum(jinv, I_EN(jinv,t,n))
35936                       ## Investments in grid infrastructures
35937                      - I_EN_GRID(t,n)
35938                      ## Investments in extraction sector
35939                      -sum(extract(f), I_OUT(f,t,n))
35940                      ## O&M for energy technlogies
35941                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
35942                      ## O&M for extraction
35943                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
35944                      ## Energy technology penalty costs
35945                      -sum(jpenalty(j), COST_EN(j,t,n))
35946  ;
35947   
35948  * Capital accumulation
35949  eqk_c_ssa(g,t,tp1,n)$(map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
35950      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
35951   
35952  * Energy services
35953  eqq_fen_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35954      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
35955   
35956  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
35959  *-------------------------------------------------------------------------------
35960  * Energy sector
35961  *-------------------------------------------------------------------------------
35962   
35964   
35965  *-------------------------------------------------------------------------------
35966  * Production - Energy sector
35967  *-------------------------------------------------------------------------------
35968   
35969  eqq_en_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35970      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
35971   
35972  *-------------------------------------------------------------------------------
35973  * Production - Electrical sector
35974  *-------------------------------------------------------------------------------
35975   
35976  eqq_el_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35977      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
35978   
35979  eqq_el2_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35980      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
35981   
35982  eqq_elffren_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35983      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
35984  eqq_elff_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35985      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
35986   
35987  eqq_ces_el_c_ssa(ices_el,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
35988      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
35989  ;
35990   
35991  *-------------------------------------------------------------------------------
35992  * Production - Non-electrical sector
35993  *-------------------------------------------------------------------------------
35994   
35995  eqq_nel_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35996      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
35997   
35998  eqq_nelog_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35999      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
36000  ;
36001  eqq_ces_nelgas_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36002      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
36003   
36004  *-------------------------------------------------------------------------------
36005  * PES and fuels
36006  *-------------------------------------------------------------------------------
36007   
36008  eqq_fuel_c_ssa(fuel,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
36009      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
36010   
36011  *-------------------------------------------------------------------------------
36012  * Cost
36013  *-------------------------------------------------------------------------------
36014   
36015  * Net cost of Primary Energy Supplies
36016  eqcost_pes_c_ssa(f,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
36017      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
36018                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
36019   
36020  * Net cost of Secondary Energy Supplies
36021  eqcost_ses_c_ssa(s,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36022      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
36023   
36024   
36025  *-------------------------------------------------------------------------------
36026  * Market balances
36027  *-------------------------------------------------------------------------------
36028   
36029  eq_mkt_clearing_oil_c_ssa(t,'c_ssa')$(internal('oil'))..
36030      sum( n$(map_clt_n('c_ssa',n) and trading_t('oil',t,n)),
36031          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
36032      ) =e= 0;
36033   
36034  *-------------------------------------------------------------------------------
36035  * New capital in the energy sector
36036  *-------------------------------------------------------------------------------
36037   
36038  * Electrical generation plants (new)
36039  eqk_en_c_ssa(jinv,t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
36040      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
36041                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
36042   
36043  *-------------------------------------------------------------------------------
36044  * ENERGY
36045  *-------------------------------------------------------------------------------
36046   
36047  * Capacity limits in the electrical sector
36048  eqq_en_mu_c_ssa(jel,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
36049      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
36050   
36051  * Efficiency of energy technology sector
36052  eqq_en_in_c_ssa(jfed,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
36053      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
36054                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
36055   
36056  * Energy generation "tree"
36057  eqq_en_tree_c_ssa(j,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
36058      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
36059   
36060  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
36063  *-------------------------------------------------------------------------------
36064  * Carbon Emissions
36065  * - Total CO2 emissions and CO2 Fossil fuel and Industry
36066  * - CO2 emission costs
36067  * - GHG permit market
36068  *-------------------------------------------------------------------------------
36069   
36071   
36072  * GHG emission cap
36073  eqq_emi_lim_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
36074      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
36075                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
36076   
36077  ***newcode
36078  eqq_emi_lim_USAc_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
36079  ***
36080   
36081  * Compute total and sectoral emissions
36082  eqq_emi_tree_c_ssa(t,n,e)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
36083      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
36084   
36085  * Industrial CO2 emissions
36086  eqq_emi_co2ffi_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36087      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
36088                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
36089                              # Emissions from biomass
36090                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
36091                              # Emissions from fuel extraction
36092                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
36093                              # Captured emissions
36094                              sum(sink, Q_EMI(sink,t,n));
36095   
36096  * CO2 emission costs
36097  eqcost_emi_co2_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36098      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
36099   
36100  * Emission permit market clearing for internal market
36101  eq_mkt_clearing_nip_c_ssa(c_mkt,t,'c_ssa')$(internal(c_mkt))..
36102      sum(n$(map_clt_n('c_ssa',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
36103   
36104  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
36107  *-------------------------------------------------------------------------------
36108  * Research & Development
36109  * Options:
36110  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
36111  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
36112  *-------------------------------------------------------------------------------
36113   
36115   
36116  * Knowledge stock accumulation
36117  eqk_rd_c_ssa(rd,t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
36118                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
36119                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
36120                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
36121                                        SPILL(rd,t,n)**rd_coef(rd,'d');
36122   
36123  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
36124  eqspill_coop_c_ssa(rd,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_ssa'))..
36125          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
36126                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_ssa',nn)), K_RD(rd,t,nn)) +
36127                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_ssa',nn))), K_RD.l(rd,t,nn))
36128                            ) *
36129                            (
36130                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_ssa',nn)), K_RD(rd,t,nn)) +
36131                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_ssa',nn))), K_RD.l(rd,t,nn))
36132                              ) - K_RD(rd,t,n)
36133                            );
36134   
36135  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
36136  eqspill_lead_c_ssa(rd,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_ssa')) and leadrd(rd,n))..
36137                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
36138   
36139  * No-cooperation : a follower sees is negative effect on the quantity he can grab
36140  eqspill_foll_c_ssa(rd,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_ssa')) and (not leadrd(rd,n)))..
36141                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
36142   
36143  *- Only LbR (without learning by doing)
36144  eqmcost_inv_back_c_ssa(jrd,t,tt,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
36145                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
36146                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
36147   
36148  *- LbR together with learning by doing ==> Two-factor learning curve
36149  eqmcost_inv_back_lbd_c_ssa(jrd,t,tt,tfirst,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
36150                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
36151                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
36152                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
36153   
36154  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
36157  *-------------------------------------------------------------------------------
36158  * Default Climate Policy Implementation
36159  *
36160  * Options:
36161  *    --policy={bau (default),ctax}
36162  *        Implement a climate policy setting
36163  *  [ --scen= ]
36164  *        Policy variant.
36165  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
36166  *          * XXX for a fixed percentage/yr (e.g. 5) growth
36167  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
36168  *  [ --ctax_year=2020 ]
36169  *        Starting year of the carbon tax
36170  *  [ --ctax_initial=30 ]
36171  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
36172  *
36173  *-------------------------------------------------------------------------------
36175   
36176  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
36178  *-------------------------------------------------------------------------------
36179  * Energy efficiency
36180  *-------------------------------------------------------------------------------
36181   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
36184  *-------------------------------------------------------------------------------
36185  * Hydro Power
36186  *-------------------------------------------------------------------------------
36187   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
36190  *-------------------------------------------------------------------------------
36191  * System Integration:
36192  * - Capacity constraint
36193  * - Flexibility constraint
36194  * - Grid Investment
36195  * - Capacity growth constraint
36196  *-------------------------------------------------------------------------------
36197   
36199   
36200   
36201  * Renewable CES
36202   
36203  * Definition of the renewable CES
36204  eqq_elintren_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36205      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
36206   
36207  * Capacity constraint
36208   
36210  eqfirm_capacity_c_ssa(t,n)$(map_clt_n('c_ssa',n) and (not tfix(t)) and year(t) gt 2005)..
36211                   sum(jel_firm, K_EN(jel_firm,t,n))
36212                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
36213                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
36214                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
36215                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
36216                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
36217                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
36218                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
36219                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
36220                                       ) / yearly_hours
36221  ;
36223   
36224  * Flexibility constraint
36225  eqflex_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36226          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
36227                             ( Q_EN('el',t,n) -
36228                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
36229                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
36230                             ) * flex_coeff('load')
36231  ;
36232   
36233  * Grid
36234   
36235  ** Grid depreciation and investments
36236  eqk_en_grid_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
36237                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
36238                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
36239   
36240  ** Grid adjustment to power capacity
36241  eqk_en_grid_to_k_en_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36242                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
36243                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
36244                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
36245                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
36246                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
36247                                     ) / grid_cost +
36248                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
36249                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
36250                                      K_EN('elcsp',t,n);
36251  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
36252   
36253  * Capacity growth constraint
36254  eqcap_growth_c_ssa(jinv,t,tp1,tp2,n)$((map_clt_n('c_ssa',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
36255                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
36256                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
36257   
36258  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
36261  *-------------------------------------------------------------------------------
36262  * Nuclear power plants
36263  *-------------------------------------------------------------------------------
36264   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
36267  *-------------------------------------------------------------------------------
36268  * GHG module
36269  * - CH4 FFI + CH4 waste + CH4 open fires
36270  * - N2O FFI + N2O waste + N2O open fires
36271  *-------------------------------------------------------------------------------
36272   
36274   
36275  * CH4, N2O waste emissions
36276  eqq_emi_waste_c_ssa(waste,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
36277                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
36278   
36279  * n2o FFI
36280  eqq_emi_n2o_ffi_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
36281    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
36282                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
36283                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
36284                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
36285                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
36286                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
36287                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
36288                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
36289                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
36290                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
36291                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
36292                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
36293                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
36294                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
36295                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
36296                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
36297                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
36298                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
36299                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
36300                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
36301                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
36302                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
36303                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
36304                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
36305                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
36306                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
36307                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
36308                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
36309                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
36310                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
36311                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
36312   
36313  * ch4 FFI
36314  eqq_emi_ch4_ffi_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
36315    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
36318  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
36319  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
36320                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
36321                             smax(tt$(year(tt) eq 2015),
36322                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
36325  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
36326  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
36327                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
36328   
36329  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
36332  *-------------------------------------------------------------------------------
36333  * F-gases
36334  * - LLF
36335  * - SLF
36336  *-------------------------------------------------------------------------------
36337   
36339   
36340  * F-gases emissions
36341  eqq_emi_fgases_c_ssa(fgases,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
36342                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
36343   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
36346  *-------------------------------------------------------------------------------
36347  * Landuse [simplified version of the land-use model]
36348  *-------------------------------------------------------------------------------
36349   
36351   
36352  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
36353  eq_wbio_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36354      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
36355   
36357  * Cost of all woody biomass produced for advanced biofuels and woody biomass
36358  eqcost_pes_wbio_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36359      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
36361   
36362  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
36365  *-------------------------------------------------------------------------------
36366  * Bioenergy power plant
36367  *-------------------------------------------------------------------------------
36368   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
36371  *-------------------------------------------------------------------------------
36372  * Traditional Biofuels
36373  * - Requires the precedence of mod_landuse
36374  *-------------------------------------------------------------------------------
36375   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
36378  *-------------------------------------------------------------------------------
36379  * Advanced biofuel
36380  * - Require the precedence of mod_landuse
36381  *-------------------------------------------------------------------------------
36382   
36384   
36385  * Limitations for nel backstops
36386  eqq_en_lim_advbiofuel_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
36387               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
36388               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
36389   
36390  * Peculiarity of advbiofuel
36391  eqmcost_fuel_advbiofuel_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36392                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
36393   
36394  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
36397  *-------------------------------------------------------------------------------
36398  * Carbon Capture and Sequestration
36399  *-------------------------------------------------------------------------------
36400   
36402   
36403  eqq_emi_ccs_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36404                  Q_EMI('ccs_plant',t,n) =e=
36405                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
36406                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
36407  ;
36408   
36409  eqcost_emi_sinks_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36410                  COST_EMI('ccs_plant',t,n) =e=
36411                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
36412                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
36413  ;
36414   
36415  eq_stor_ccs_cum_c_ssa(ccs_stor,tp1,t,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
36416                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
36417  ;
36418   
36419  eq_emi_stor_ccs_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36420                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
36421  ;
36422   
36423  eq_emi_leak_ccs_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36424                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
36425   
36426  *-------------------------------------------------------------------------------
36428   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
36430  *-------------------------------------------------------------------------------
36431  * Coal for non-electric sectors
36432  * - Coke Plants
36433  * - Industrial and Commercial combined-heat-and-power (CHP)
36434  * - Others
36435  *-------------------------------------------------------------------------------
36436   
36438   
36439  eqcost_en_nelcoal_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36440           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
36441                                          nelcoal_max_abat(t,n) *
36442                                          (nelcoal_cmac(n,'a') *
36443                                            Q_EN('nelcoalabat',t,n) /
36444                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
36445                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
36446                                              (exp(nelcoal_cmac(n,'c') *
36447                                                (Q_EN('nelcoalabat',t,n)/
36448                                                  (nelcoal_max_abat(t,n) *
36449                                                      nelcoal_baseline(t,n))
36450                                                  ) - 1 )
36451                                              )
36452                                          );
36453   
36454  eqq_ncoalabat_monotone_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
36455          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
36456   
36457  * ensure Q_EN is lower than K_EN for CCS as not in jel
36458  eqq_en_nelcoalccs_max_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36459          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
36460   
36461  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
36464  *-------------------------------------------------------------------------------
36465  * Wind energy module
36466  * - onshore and offshore
36467  *-------------------------------------------------------------------------------
36468   
36470   
36471  * Capacity limits in the wind onshore electrical sector
36472  eqq_en_mu_windon_c_ssa(wind_dist,wind_class,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
36473      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
36474   
36475  * Capacity limits in the wind offshore electrical sector
36476  eqq_en_mu_windoff_c_ssa(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
36477      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
36478   
36479  * Wind onshore electrical generation plants (new)
36480  eqk_en_windon_c_ssa(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
36481      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
36482                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
36483   
36484  * Wind offshore electrical generation plants (new)
36485  eqk_en_windoff_c_ssa(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
36486      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
36487                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
36488   
36489  * Total onshore wind energy production
36490  eqq_en_windon_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36491                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
36492   
36493  * Total offshore wind energy production
36494  eqq_en_windoff_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36495                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
36496   
36497  * Total onshore wind capacity
36498  eqk_en_windon_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36499                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
36500   
36501  * Total offshore wind capacity
36502  eqk_en_windoff_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36503                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
36504   
36505  * Total onshore wind investment
36506  eqi_en_windon_sum_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
36507                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
36508   
36509  * Total offshore wind investment
36510  eqi_en_windoff_sum_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
36511                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
36512   
36513  *-------------------------------------------------------------------------------
36515   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
36517  *-------------------------------------------------------------------------------
36518  * Solar Powerplants (PV and CSP) to the electrical system
36519  *-------------------------------------------------------------------------------
36520   
36521  *-------------------------------------------------------------------------------
36523   
36524   
36525  * Capacity limits in the pv electrical sector
36526  eqq_en_mu_pv_c_ssa(solar_dist,solar_class,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
36527                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
36528   
36529  * Capacity limits in the csp electrical sector
36530  eqq_en_mu_csp_c_ssa(solar_dist,solar_class,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
36531                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
36532   
36533  * PV electrical generation plants (new)
36534  eqk_en_pv_c_ssa(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
36535                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
36536                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
36537   
36538  * CSP electrical generation plants (new)
36539  eqk_en_csp_c_ssa(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
36540                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
36541                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
36542   
36543  * Total PV energy production
36544  eqq_en_pv_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36545                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
36546   
36547  * Total CSP energy production
36548  eqq_en_csp_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36549                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
36550   
36551  * Total PV capacity
36552  eqk_en_pv_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36553                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
36554   
36555  * Total CSP capacity
36556  eqk_en_csp_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36557                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
36558   
36559  * Total PV investment
36560  eqi_en_pv_sum_c_ssa(t,tp1,n)$(map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
36561                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
36562   
36563  * Total CSP investment
36564  eqi_en_csp_sum_c_ssa(t,tp1,n)$(map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
36565                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
36566   
36567  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
36568  eqk_en_solar_comp_c_ssa(t,n,solar_dist)$(map_clt_n('c_ssa',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
36569                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
36570                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
36571   
36572   
36573   
36574  *-------------------------------------------------------------------------------
36576   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
36578  *-------------------------------------------------------------------------------
36579  * Technology development scenarios
36580  *-------------------------------------------------------------------------------
36581   
36583   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
36585  *-------------------------------------------------------------------------------
36586  * Oil Extraction
36587  * Options:
36588  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
36589  *-------------------------------------------------------------------------------
36590   
36592   
36593  * Capacity
36594  eqoilcap_c_ssa(t,tp1,n,oilg)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
36595      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
36596   
36597  * Production
36598  eqoilprod_c_ssa(t,tp1,n,oilg)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
36599      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
36600   
36601  eqq_out_oil_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36602      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
36603   
36604  * Cumulative production
36605  eqcum_oil_c_ssa(t,tp1,n,oilg)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
36606      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
36607   
36608  * Cost
36609  eqcost_oil_c_ssa(t,tp1,n,oilg)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
36610      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
36611                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
36612                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
36613   
36614  * Investments
36615  eqi_oil_c_ssa(t,tp1,n,oilg)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
36616      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
36617   
36618  * Total investment
36619  eqi_out_oil_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
36620      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
36621   
36622  * Emissions
36623  eqq_emi_out_oil_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36624      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
36625   
36626  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
36629  *-------------------------------------------------------------------------------
36630  * Uranium Resources
36631  *-------------------------------------------------------------------------------
36632   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
36635  *-------------------------------------------------------------------------------
36636  * Gas Resources
36637  *-------------------------------------------------------------------------------
36638   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
36641  *-------------------------------------------------------------------------------
36642  * Coal Resources
36643  *-------------------------------------------------------------------------------
36644   
36646   
36647   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
36649  *-------------------------------------------------------------------------------
36650  * Climate
36651  *
36652  * Represents the climate
36653  * - based on the DICE model equations
36654  * - Radiative forcing for non CO2 ghgs
36655  * - parameters calibrated to reproduce MAGICC6.4 default response
36656  *
36657  *  Options:
36658  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
36659  * - $setglobal cooperate_on_climate {'YES','NO'}
36660  * - 'YES'(default): Countries within a coalition act in cooperation
36661  *   'NO': Countries within a coalition act individually
36662  *
36663  *-------------------------------------------------------------------------------
36664   
36666   
36668   
36669  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
36672  *-------------------------------------------------------------------------------
36673  * Long-run Damages from Climate Change
36674  * - Economic impacts
36675  * - Adaptation
36676  *-------------------------------------------------------------------------------
36677   
36679   
36681   
36682  *-------------------------------------------------------------------------------
36684   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
36686  *-------------------------------------------------------------------------------
36687  * Light-duty Vehicles for Personal Transport
36688  *-------------------------------------------------------------------------------
36689   
36691   
36692  *** newcode
36693  eqq_inv_red_ban_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36694      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
36695   
36696  ***
36697  *- Number of light duty vehicles
36698  eqnb_veh_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36699      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
36700   
36701  *- Yearly energy demand of vehicles
36702  eqq_en_veh_c_ssa(jveh,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36703      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
36704   
36705  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
36706  eqq_el_edv_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36707      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
36708   
36709  *- Investment cost for hybrid vehicles
36710  eqmcost_inv_hybrid_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
36711                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
36712   
36713  *- Investment cost for plug-in hybrid vehicles
36714  eqmcost_inv_plghybrid_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
36715                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
36716   
36717  *- Investment cost for electric drive vehicles
36718  eqmcost_inv_edv_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
36719                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
36720   
36721  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
36724  *-------------------------------------------------------------------------------
36725  * Road Freight Transport
36726  *-------------------------------------------------------------------------------
36728   
36729  *-  Number of freight vehicles
36730  eqnb_frtveh_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36731                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
36732   
36733  *-  Yearly fuel consumption of freight vehicles
36734  eqq_en_frtveh_c_ssa(jfrt,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36735                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
36736   
36737  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
36738  eqq_el_frtedv_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36739                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
36740   
36741  *-  Investment cost for hbd_stfr vehicle
36742  eqmcost_inv_hbd_stfr_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
36743                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
36744   
36745  *-  Investment cost for plug-in hbd_stfr vehicle
36746  eqmcost_inv_plghbd_stfr_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
36747                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
36748   
36749  *-  Investment cost for electric drive vehicle
36750  eqmcost_inv_edv_stfr_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
36751                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
36752   
36753  *-------------------------------------------------------------------------------
36755   
36756   
36757   
36758   
36759   
36760   
36761  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
36763  *-------------------------------------------------------------------------------
36764  * Traditional Biomass
36765  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
36766  *  - require post_process to be launch before
36767  *-------------------------------------------------------------------------------
36768   
36770   
36771  * Optional modules
36772   
36773  * Policy modules
36774   
36775  * Calibration
36778   
36779   
36780  model witch_c_ssa /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
36782  *-------------------------------------------------------------------------------
36783  * Call modules by order
36784  *-------------------------------------------------------------------------------
36788   
36789  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
36791  *-------------------------------------------------------------------------------
36792  * Algorithm
36793  *-------------------------------------------------------------------------------
36794   
36796   
36797  eqobj_c_ssa
36798   
36799  *-------------------------------------------------------------------------------
36801   
36802  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
36804  *-------------------------------------------------------------------------------
36805  * Time
36806  * - Temporal structure
36807  * - Fixed time periods
36808  * - States of the world
36809  *-------------------------------------------------------------------------------
36810   
36812   
36813  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
36815  *-------------------------------------------------------------------------------
36816  * Geographic dimension and mapping with countries
36817  *-------------------------------------------------------------------------------
36818   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
36821  *-------------------------------------------------------------------------------
36822  * Non-Cooperative Setup
36823  *
36824  * Each region is defined as an individual coalition.
36825  *
36826  *-------------------------------------------------------------------------------
36827   
36829   
36830  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
36832  *-------------------------------------------------------------------------------
36833  * Welfare
36834  *-------------------------------------------------------------------------------
36835   
36837   
36838  equtility_c_ssa
36839   
36840  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
36843  *-------------------------------------------------------------------------------
36844  * Economy
36845  * - Production and Consumption definition
36846  * - Top-level of the production function
36847  * Options:
36848  * --original_ssp=1 : original SSP population and GDP data
36849  *-------------------------------------------------------------------------------
36850   
36852   
36853  eqk_c_ssa
36854  eqq_cc_c_ssa
36855  eqq_fen_c_ssa
36856  eqq_y_c_ssa
36857   
36858  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
36861  *-------------------------------------------------------------------------------
36862  * Energy sector
36863  *-------------------------------------------------------------------------------
36864   
36866   
36867  eq_mkt_clearing_oil_c_ssa
36868  eqcost_pes_c_ssa
36869  eqcost_ses_c_ssa
36870  eqk_en_c_ssa
36871  eqq_ces_el_c_ssa
36872  eqq_ces_nelgas_c_ssa
36873  eqq_el2_c_ssa
36874  eqq_el_c_ssa
36875  eqq_elff_c_ssa
36876  eqq_en_c_ssa
36877  eqq_en_in_c_ssa
36878  eqq_en_mu_c_ssa
36879  eqq_en_tree_c_ssa
36880  eqq_nel_c_ssa
36881  eqq_nelog_c_ssa
36882  eqq_fuel_c_ssa
36883  eqq_elffren_c_ssa
36884   
36885  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
36888  *-------------------------------------------------------------------------------
36889  * Carbon Emissions
36890  * - Total CO2 emissions and CO2 Fossil fuel and Industry
36891  * - CO2 emission costs
36892  * - GHG permit market
36893  *-------------------------------------------------------------------------------
36894   
36896   
36897  eqq_emi_lim_c_ssa
36898  ***newcode
36899  eqq_emi_lim_USAc_ssa
36900  ***
36901  eqq_emi_tree_c_ssa
36902  eqq_emi_co2ffi_c_ssa
36903   
36904  eqcost_emi_co2_c_ssa
36905   
36906  eq_mkt_clearing_nip_c_ssa
36907   
36908  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
36911  *-------------------------------------------------------------------------------
36912  * Research & Development
36913  * Options:
36914  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
36915  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
36916  *-------------------------------------------------------------------------------
36917   
36919   
36920  eqk_rd_c_ssa
36921  eqspill_coop_c_ssa
36922  eqspill_lead_c_ssa
36923  eqspill_foll_c_ssa
36924  eqmcost_inv_back_c_ssa
36925  eqmcost_inv_back_lbd_c_ssa
36926   
36927  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
36930  *-------------------------------------------------------------------------------
36931  * Default Climate Policy Implementation
36932  *
36933  * Options:
36934  *    --policy={bau (default),ctax}
36935  *        Implement a climate policy setting
36936  *  [ --scen= ]
36937  *        Policy variant.
36938  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
36939  *          * XXX for a fixed percentage/yr (e.g. 5) growth
36940  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
36941  *  [ --ctax_year=2020 ]
36942  *        Starting year of the carbon tax
36943  *  [ --ctax_initial=30 ]
36944  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
36945  *
36946  *-------------------------------------------------------------------------------
36948   
36949  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
36951  *-------------------------------------------------------------------------------
36952  * Energy efficiency
36953  *-------------------------------------------------------------------------------
36954   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
36957  *-------------------------------------------------------------------------------
36958  * Hydro Power
36959  *-------------------------------------------------------------------------------
36960   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
36963  *-------------------------------------------------------------------------------
36964  * System Integration:
36965  * - Capacity constraint
36966  * - Flexibility constraint
36967  * - Grid Investment
36968  * - Capacity growth constraint
36969  *-------------------------------------------------------------------------------
36970   
36972   
36973  eqq_elintren_c_ssa
36974  eqflex_c_ssa
36975  eqk_en_grid_c_ssa
36976  eqk_en_grid_to_k_en_c_ssa
36977  eqfirm_capacity_c_ssa
36978  eqcap_growth_c_ssa
36979   
36980  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
36983  *-------------------------------------------------------------------------------
36984  * Nuclear power plants
36985  *-------------------------------------------------------------------------------
36986   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
36989  *-------------------------------------------------------------------------------
36990  * GHG module
36991  * - CH4 FFI + CH4 waste + CH4 open fires
36992  * - N2O FFI + N2O waste + N2O open fires
36993  *-------------------------------------------------------------------------------
36994   
36996   
36997  eqq_emi_waste_c_ssa
36998  eqq_emi_n2o_ffi_c_ssa
36999  eqq_emi_ch4_ffi_c_ssa
37000   
37001  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
37004  *-------------------------------------------------------------------------------
37005  * F-gases
37006  * - LLF
37007  * - SLF
37008  *-------------------------------------------------------------------------------
37009   
37011   
37012  eqq_emi_fgases_c_ssa
37013   
37014  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
37017  *-------------------------------------------------------------------------------
37018  * Landuse [simplified version of the land-use model]
37019  *-------------------------------------------------------------------------------
37020   
37022   
37023  eq_wbio_c_ssa
37024  eqcost_pes_wbio_c_ssa
37025   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
37028  *-------------------------------------------------------------------------------
37029  * Bioenergy power plant
37030  *-------------------------------------------------------------------------------
37031   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
37034  *-------------------------------------------------------------------------------
37035  * Traditional Biofuels
37036  * - Requires the precedence of mod_landuse
37037  *-------------------------------------------------------------------------------
37038   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
37041  *-------------------------------------------------------------------------------
37042  * Advanced biofuel
37043  * - Require the precedence of mod_landuse
37044  *-------------------------------------------------------------------------------
37045   
37047   
37048  eqq_en_lim_advbiofuel_c_ssa
37049  eqmcost_fuel_advbiofuel_c_ssa
37050   
37051  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
37054  *-------------------------------------------------------------------------------
37055  * Carbon Capture and Sequestration
37056  *-------------------------------------------------------------------------------
37057   
37059   
37060  eqq_emi_ccs_c_ssa
37061  eqcost_emi_sinks_c_ssa
37062  eq_stor_ccs_cum_c_ssa
37063  eq_emi_stor_ccs_c_ssa
37064  eq_emi_leak_ccs_c_ssa
37065   
37066  *-------------------------------------------------------------------------------
37068   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
37070  *-------------------------------------------------------------------------------
37071  * Coal for non-electric sectors
37072  * - Coke Plants
37073  * - Industrial and Commercial combined-heat-and-power (CHP)
37074  * - Others
37075  *-------------------------------------------------------------------------------
37076   
37078   
37079  eqcost_en_nelcoal_c_ssa
37080  eqq_ncoalabat_monotone_c_ssa
37081  eqq_en_nelcoalccs_max_c_ssa
37082   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
37085  *-------------------------------------------------------------------------------
37086  * Wind energy module
37087  * - onshore and offshore
37088  *-------------------------------------------------------------------------------
37089   
37091   
37092  eqq_en_mu_windon_c_ssa
37093  eqq_en_mu_windoff_c_ssa
37094  eqk_en_windon_c_ssa
37095  eqk_en_windoff_c_ssa
37096  eqq_en_windon_sum_c_ssa
37097  eqq_en_windoff_sum_c_ssa
37098  eqk_en_windon_sum_c_ssa
37099  eqk_en_windoff_sum_c_ssa
37100  eqi_en_windon_sum_c_ssa
37101  eqi_en_windoff_sum_c_ssa
37102   
37104   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
37106  *-------------------------------------------------------------------------------
37107  * Solar Powerplants (PV and CSP) to the electrical system
37108  *-------------------------------------------------------------------------------
37109   
37110  *-------------------------------------------------------------------------------
37112   
37113  eqq_en_mu_pv_c_ssa
37114  eqq_en_mu_csp_c_ssa
37115  eqk_en_pv_c_ssa
37116  eqk_en_csp_c_ssa
37117  eqq_en_pv_sum_c_ssa
37118  eqq_en_csp_sum_c_ssa
37119  eqk_en_pv_sum_c_ssa
37120  eqk_en_csp_sum_c_ssa
37121  eqi_en_pv_sum_c_ssa
37122  eqi_en_csp_sum_c_ssa
37123  eqk_en_solar_comp_c_ssa
37124   
37125  *-------------------------------------------------------------------------------
37127   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
37129  *-------------------------------------------------------------------------------
37130  * Technology development scenarios
37131  *-------------------------------------------------------------------------------
37132   
37134   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
37136  *-------------------------------------------------------------------------------
37137  * Oil Extraction
37138  * Options:
37139  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
37140  *-------------------------------------------------------------------------------
37141   
37143   
37144  eqoilcap_c_ssa
37145  eqoilprod_c_ssa
37146  eqq_out_oil_c_ssa
37147  eqcum_oil_c_ssa
37148  eqcost_oil_c_ssa
37149  eqi_oil_c_ssa
37150  eqi_out_oil_c_ssa
37151  eqq_emi_out_oil_c_ssa
37152   
37153  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
37156  *-------------------------------------------------------------------------------
37157  * Uranium Resources
37158  *-------------------------------------------------------------------------------
37159   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
37162  *-------------------------------------------------------------------------------
37163  * Gas Resources
37164  *-------------------------------------------------------------------------------
37165   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
37168  *-------------------------------------------------------------------------------
37169  * Coal Resources
37170  *-------------------------------------------------------------------------------
37171   
37173   
37174   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
37176  *-------------------------------------------------------------------------------
37177  * Climate
37178  *
37179  * Represents the climate
37180  * - based on the DICE model equations
37181  * - Radiative forcing for non CO2 ghgs
37182  * - parameters calibrated to reproduce MAGICC6.4 default response
37183  *
37184  *  Options:
37185  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
37186  * - $setglobal cooperate_on_climate {'YES','NO'}
37187  * - 'YES'(default): Countries within a coalition act in cooperation
37188  *   'NO': Countries within a coalition act individually
37189  *
37190  *-------------------------------------------------------------------------------
37191   
37193   
37195   
37196  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
37199  *-------------------------------------------------------------------------------
37200  * Long-run Damages from Climate Change
37201  * - Economic impacts
37202  * - Adaptation
37203  *-------------------------------------------------------------------------------
37204   
37206   
37208   
37209  *-------------------------------------------------------------------------------
37211   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
37213  *-------------------------------------------------------------------------------
37214  * Light-duty Vehicles for Personal Transport
37215  *-------------------------------------------------------------------------------
37216   
37218   
37219  eqnb_veh_c_ssa
37220  eqq_en_veh_c_ssa
37221  eqq_el_edv_c_ssa
37222  eqmcost_inv_hybrid_c_ssa
37223  eqmcost_inv_plghybrid_c_ssa
37224  eqmcost_inv_edv_c_ssa
37225  *** newcode
37226  eqq_inv_red_ban_c_ssa
37227  ***
37228  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
37231  *-------------------------------------------------------------------------------
37232  * Road Freight Transport
37233  *-------------------------------------------------------------------------------
37235   
37236  eqnb_frtveh_c_ssa
37237  eqq_en_frtveh_c_ssa
37238  eqq_el_frtedv_c_ssa
37239  eqmcost_inv_hbd_stfr_c_ssa
37240  eqmcost_inv_plghbd_stfr_c_ssa
37241  eqmcost_inv_edv_stfr_c_ssa
37242   
37243  *-------------------------------------------------------------------------------
37245   
37246   
37247   
37248   
37249   
37250   
37251  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
37253  *-------------------------------------------------------------------------------
37254  * Traditional Biomass
37255  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
37256  *  - require post_process to be launch before
37257  *-------------------------------------------------------------------------------
37258   
37260   
37261  * Optional modules
37262   
37263  * Policy modules
37264   
37265  * Calibration
37268  /;
37269   
37270  witch_c_ssa.optfile=1;   # the option file solvername.opt is to be used
37271  witch_c_ssa.holdfixed=1; # treat fixed values as constant
37272  witch_c_ssa.scaleopt=1;  # Use scaling for better gradients estimation
37273  witch_c_ssa.solvelink=3; # Use parallel or sequential solving
37274   
37279   
37280  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
37282  *-------------------------------------------------------------------------------
37283  * Call modules by order
37284  *-------------------------------------------------------------------------------
37288   
37289  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
37291  *-------------------------------------------------------------------------------
37292  * Algorithm
37293  *-------------------------------------------------------------------------------
37294   
37296   
37297  eqobj_c_te
37298   
37299  *-------------------------------------------------------------------------------
37301   
37302  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
37304  *-------------------------------------------------------------------------------
37305  * Time
37306  * - Temporal structure
37307  * - Fixed time periods
37308  * - States of the world
37309  *-------------------------------------------------------------------------------
37310   
37312   
37313  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
37315  *-------------------------------------------------------------------------------
37316  * Geographic dimension and mapping with countries
37317  *-------------------------------------------------------------------------------
37318   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
37321  *-------------------------------------------------------------------------------
37322  * Non-Cooperative Setup
37323  *
37324  * Each region is defined as an individual coalition.
37325  *
37326  *-------------------------------------------------------------------------------
37327   
37329   
37330  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
37332  *-------------------------------------------------------------------------------
37333  * Welfare
37334  *-------------------------------------------------------------------------------
37335   
37337   
37338  equtility_c_te
37339   
37340  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
37343  *-------------------------------------------------------------------------------
37344  * Economy
37345  * - Production and Consumption definition
37346  * - Top-level of the production function
37347  * Options:
37348  * --original_ssp=1 : original SSP population and GDP data
37349  *-------------------------------------------------------------------------------
37350   
37352   
37353  eqk_c_te
37354  eqq_cc_c_te
37355  eqq_fen_c_te
37356  eqq_y_c_te
37357   
37358  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
37361  *-------------------------------------------------------------------------------
37362  * Energy sector
37363  *-------------------------------------------------------------------------------
37364   
37366   
37367  eq_mkt_clearing_oil_c_te
37368  eqcost_pes_c_te
37369  eqcost_ses_c_te
37370  eqk_en_c_te
37371  eqq_ces_el_c_te
37372  eqq_ces_nelgas_c_te
37373  eqq_el2_c_te
37374  eqq_el_c_te
37375  eqq_elff_c_te
37376  eqq_en_c_te
37377  eqq_en_in_c_te
37378  eqq_en_mu_c_te
37379  eqq_en_tree_c_te
37380  eqq_nel_c_te
37381  eqq_nelog_c_te
37382  eqq_fuel_c_te
37383  eqq_elffren_c_te
37384   
37385  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
37388  *-------------------------------------------------------------------------------
37389  * Carbon Emissions
37390  * - Total CO2 emissions and CO2 Fossil fuel and Industry
37391  * - CO2 emission costs
37392  * - GHG permit market
37393  *-------------------------------------------------------------------------------
37394   
37396   
37397  eqq_emi_lim_c_te
37398  ***newcode
37399  eqq_emi_lim_USAc_te
37400  ***
37401  eqq_emi_tree_c_te
37402  eqq_emi_co2ffi_c_te
37403   
37404  eqcost_emi_co2_c_te
37405   
37406  eq_mkt_clearing_nip_c_te
37407   
37408  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
37411  *-------------------------------------------------------------------------------
37412  * Research & Development
37413  * Options:
37414  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
37415  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
37416  *-------------------------------------------------------------------------------
37417   
37419   
37420  eqk_rd_c_te
37421  eqspill_coop_c_te
37422  eqspill_lead_c_te
37423  eqspill_foll_c_te
37424  eqmcost_inv_back_c_te
37425  eqmcost_inv_back_lbd_c_te
37426   
37427  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
37430  *-------------------------------------------------------------------------------
37431  * Default Climate Policy Implementation
37432  *
37433  * Options:
37434  *    --policy={bau (default),ctax}
37435  *        Implement a climate policy setting
37436  *  [ --scen= ]
37437  *        Policy variant.
37438  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
37439  *          * XXX for a fixed percentage/yr (e.g. 5) growth
37440  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
37441  *  [ --ctax_year=2020 ]
37442  *        Starting year of the carbon tax
37443  *  [ --ctax_initial=30 ]
37444  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
37445  *
37446  *-------------------------------------------------------------------------------
37448   
37449  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
37451  *-------------------------------------------------------------------------------
37452  * Energy efficiency
37453  *-------------------------------------------------------------------------------
37454   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
37457  *-------------------------------------------------------------------------------
37458  * Hydro Power
37459  *-------------------------------------------------------------------------------
37460   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
37463  *-------------------------------------------------------------------------------
37464  * System Integration:
37465  * - Capacity constraint
37466  * - Flexibility constraint
37467  * - Grid Investment
37468  * - Capacity growth constraint
37469  *-------------------------------------------------------------------------------
37470   
37472   
37473  eqq_elintren_c_te
37474  eqflex_c_te
37475  eqk_en_grid_c_te
37476  eqk_en_grid_to_k_en_c_te
37477  eqfirm_capacity_c_te
37478  eqcap_growth_c_te
37479   
37480  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
37483  *-------------------------------------------------------------------------------
37484  * Nuclear power plants
37485  *-------------------------------------------------------------------------------
37486   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
37489  *-------------------------------------------------------------------------------
37490  * GHG module
37491  * - CH4 FFI + CH4 waste + CH4 open fires
37492  * - N2O FFI + N2O waste + N2O open fires
37493  *-------------------------------------------------------------------------------
37494   
37496   
37497  eqq_emi_waste_c_te
37498  eqq_emi_n2o_ffi_c_te
37499  eqq_emi_ch4_ffi_c_te
37500   
37501  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
37504  *-------------------------------------------------------------------------------
37505  * F-gases
37506  * - LLF
37507  * - SLF
37508  *-------------------------------------------------------------------------------
37509   
37511   
37512  eqq_emi_fgases_c_te
37513   
37514  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
37517  *-------------------------------------------------------------------------------
37518  * Landuse [simplified version of the land-use model]
37519  *-------------------------------------------------------------------------------
37520   
37522   
37523  eq_wbio_c_te
37524  eqcost_pes_wbio_c_te
37525   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
37528  *-------------------------------------------------------------------------------
37529  * Bioenergy power plant
37530  *-------------------------------------------------------------------------------
37531   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
37534  *-------------------------------------------------------------------------------
37535  * Traditional Biofuels
37536  * - Requires the precedence of mod_landuse
37537  *-------------------------------------------------------------------------------
37538   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
37541  *-------------------------------------------------------------------------------
37542  * Advanced biofuel
37543  * - Require the precedence of mod_landuse
37544  *-------------------------------------------------------------------------------
37545   
37547   
37548  eqq_en_lim_advbiofuel_c_te
37549  eqmcost_fuel_advbiofuel_c_te
37550   
37551  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
37554  *-------------------------------------------------------------------------------
37555  * Carbon Capture and Sequestration
37556  *-------------------------------------------------------------------------------
37557   
37559   
37560  eqq_emi_ccs_c_te
37561  eqcost_emi_sinks_c_te
37562  eq_stor_ccs_cum_c_te
37563  eq_emi_stor_ccs_c_te
37564  eq_emi_leak_ccs_c_te
37565   
37566  *-------------------------------------------------------------------------------
37568   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
37570  *-------------------------------------------------------------------------------
37571  * Coal for non-electric sectors
37572  * - Coke Plants
37573  * - Industrial and Commercial combined-heat-and-power (CHP)
37574  * - Others
37575  *-------------------------------------------------------------------------------
37576   
37578   
37579  eqcost_en_nelcoal_c_te
37580  eqq_ncoalabat_monotone_c_te
37581  eqq_en_nelcoalccs_max_c_te
37582   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
37585  *-------------------------------------------------------------------------------
37586  * Wind energy module
37587  * - onshore and offshore
37588  *-------------------------------------------------------------------------------
37589   
37591   
37592  eqq_en_mu_windon_c_te
37593  eqq_en_mu_windoff_c_te
37594  eqk_en_windon_c_te
37595  eqk_en_windoff_c_te
37596  eqq_en_windon_sum_c_te
37597  eqq_en_windoff_sum_c_te
37598  eqk_en_windon_sum_c_te
37599  eqk_en_windoff_sum_c_te
37600  eqi_en_windon_sum_c_te
37601  eqi_en_windoff_sum_c_te
37602   
37604   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
37606  *-------------------------------------------------------------------------------
37607  * Solar Powerplants (PV and CSP) to the electrical system
37608  *-------------------------------------------------------------------------------
37609   
37610  *-------------------------------------------------------------------------------
37612   
37613  eqq_en_mu_pv_c_te
37614  eqq_en_mu_csp_c_te
37615  eqk_en_pv_c_te
37616  eqk_en_csp_c_te
37617  eqq_en_pv_sum_c_te
37618  eqq_en_csp_sum_c_te
37619  eqk_en_pv_sum_c_te
37620  eqk_en_csp_sum_c_te
37621  eqi_en_pv_sum_c_te
37622  eqi_en_csp_sum_c_te
37623  eqk_en_solar_comp_c_te
37624   
37625  *-------------------------------------------------------------------------------
37627   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
37629  *-------------------------------------------------------------------------------
37630  * Technology development scenarios
37631  *-------------------------------------------------------------------------------
37632   
37634   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
37636  *-------------------------------------------------------------------------------
37637  * Oil Extraction
37638  * Options:
37639  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
37640  *-------------------------------------------------------------------------------
37641   
37643   
37644  eqoilcap_c_te
37645  eqoilprod_c_te
37646  eqq_out_oil_c_te
37647  eqcum_oil_c_te
37648  eqcost_oil_c_te
37649  eqi_oil_c_te
37650  eqi_out_oil_c_te
37651  eqq_emi_out_oil_c_te
37652   
37653  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
37656  *-------------------------------------------------------------------------------
37657  * Uranium Resources
37658  *-------------------------------------------------------------------------------
37659   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
37662  *-------------------------------------------------------------------------------
37663  * Gas Resources
37664  *-------------------------------------------------------------------------------
37665   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
37668  *-------------------------------------------------------------------------------
37669  * Coal Resources
37670  *-------------------------------------------------------------------------------
37671   
37673   
37674   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
37676  *-------------------------------------------------------------------------------
37677  * Climate
37678  *
37679  * Represents the climate
37680  * - based on the DICE model equations
37681  * - Radiative forcing for non CO2 ghgs
37682  * - parameters calibrated to reproduce MAGICC6.4 default response
37683  *
37684  *  Options:
37685  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
37686  * - $setglobal cooperate_on_climate {'YES','NO'}
37687  * - 'YES'(default): Countries within a coalition act in cooperation
37688  *   'NO': Countries within a coalition act individually
37689  *
37690  *-------------------------------------------------------------------------------
37691   
37693   
37695   
37696  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
37699  *-------------------------------------------------------------------------------
37700  * Long-run Damages from Climate Change
37701  * - Economic impacts
37702  * - Adaptation
37703  *-------------------------------------------------------------------------------
37704   
37706   
37708   
37709  *-------------------------------------------------------------------------------
37711   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
37713  *-------------------------------------------------------------------------------
37714  * Light-duty Vehicles for Personal Transport
37715  *-------------------------------------------------------------------------------
37716   
37718   
37719  eqnb_veh_c_te
37720  eqq_en_veh_c_te
37721  eqq_el_edv_c_te
37722  eqmcost_inv_hybrid_c_te
37723  eqmcost_inv_plghybrid_c_te
37724  eqmcost_inv_edv_c_te
37725  *** newcode
37726  eqq_inv_red_ban_c_te
37727  ***
37728  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
37731  *-------------------------------------------------------------------------------
37732  * Road Freight Transport
37733  *-------------------------------------------------------------------------------
37735   
37736  eqnb_frtveh_c_te
37737  eqq_en_frtveh_c_te
37738  eqq_el_frtedv_c_te
37739  eqmcost_inv_hbd_stfr_c_te
37740  eqmcost_inv_plghbd_stfr_c_te
37741  eqmcost_inv_edv_stfr_c_te
37742   
37743  *-------------------------------------------------------------------------------
37745   
37746   
37747   
37748   
37749   
37750   
37751  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
37753  *-------------------------------------------------------------------------------
37754  * Traditional Biomass
37755  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
37756  *  - require post_process to be launch before
37757  *-------------------------------------------------------------------------------
37758   
37760   
37761  * Optional modules
37762   
37763  * Policy modules
37764   
37765  * Calibration
37768  ;
37769   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
37771  *-------------------------------------------------------------------------------
37772  * Call modules by order
37773  *-------------------------------------------------------------------------------
37777   
37778  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
37780  *-------------------------------------------------------------------------------
37781  * Algorithm
37782  *-------------------------------------------------------------------------------
37783   
37785   
37787  * Add the component of the (maximized) objective function as required by the ADMM algorithm
37788  eqobj_c_te..
37789      OBJADMM =e= UTILITY -
37790          sum(t, rho_admm('oil',t) / 2 *
37791              sum(n$(map_clt_n('c_te',n) and trading_t('oil',t,n)),
37792                  power(
37793                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
37794                      x_admm('oil',t,n) +
37795                      xavg_admm('oil',t) +
37796                      u_admm('oil', t)
37797                  ,2)
37798              )) -
37799          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
37800              sum(n$(map_clt_n('c_te',n) and trading_t(c_mkt,t,n)),
37801                  power(
37802                      Q_EMI(c_mkt,t,n) -
37803                      x_admm(c_mkt,t,n) +
37804                      xavg_admm(c_mkt,t) +
37805                      u_admm(c_mkt,t)
37806                  ,2)
37807              ))
37808      ;
37810   
37811  *-------------------------------------------------------------------------------
37813   
37814  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
37816  *-------------------------------------------------------------------------------
37817  * Time
37818  * - Temporal structure
37819  * - Fixed time periods
37820  * - States of the world
37821  *-------------------------------------------------------------------------------
37822   
37824   
37825  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
37827  *-------------------------------------------------------------------------------
37828  * Geographic dimension and mapping with countries
37829  *-------------------------------------------------------------------------------
37830   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
37833  *-------------------------------------------------------------------------------
37834  * Non-Cooperative Setup
37835  *
37836  * Each region is defined as an individual coalition.
37837  *
37838  *-------------------------------------------------------------------------------
37839   
37841   
37842  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
37844  *-------------------------------------------------------------------------------
37845  * Welfare
37846  *-------------------------------------------------------------------------------
37847   
37849   
37850  * Objective function - Welfare to be maximized
37851  equtility_c_te..
37852      UTILITY =e=
37853   
37854  * Negishi SWF
37856   
37857  * Welfare functions based on CEBGE
37860                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
37861                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
37862                      ((sum(n$map_clt_n('c_te',n),
37863                        (l(t,n) / sum(nn$map_clt_n('c_te',nn), l(t,nn))) *
37864                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
37865                       )**(1 / (1 - gamma))
37866                      )**(1 - eta) ) +
37867                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
37868                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
37869                      ((sum(n$map_clt_n('c_te',n),
37870                        (l(t,n) / sum(nn$map_clt_n('c_te',nn), l(t,nn))) *
37871                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
37872                       )**(1 / (1 - gamma))
37873                      )**(1 - eta) )
37874                  )**(1/(1 - eta)) * 1e6
37877   
37878   
37879  ;
37880   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
37883  *-------------------------------------------------------------------------------
37884  * Economy
37885  * - Production and Consumption definition
37886  * - Top-level of the production function
37887  * Options:
37888  * --original_ssp=1 : original SSP population and GDP data
37889  *-------------------------------------------------------------------------------
37890   
37892   
37893  * Production
37894  eqq_y_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37895   
37896      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
37897                     ## Climate feedback on economy
37899                     ## Net cost of Primary and Secondary Energy Sources
37900                     - sum(fuel, COST_FUEL(fuel,t,n))
37901                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
37902                     - sum(cce, COST_EMI(cce,t,n))
37903                     ## Carbon tax
37904                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
37905                     ## Additionnal costs on gross product
37906                     - sum(ccy, COST_Y(ccy,t,n))
37907  ;
37908   
37909  * Consumption
37910  eqq_cc_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
37911      Q('cc',t,n) =e= Q('y',t,n)
37912                      ## Investments in goods g (final good, adaptation)
37913                      -sum(g, I(g,t,n))
37914                      ## Investments in r&d
37915                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
37916                      ## Investments in energy technlogies
37917                      -sum(jinv, I_EN(jinv,t,n))
37918                       ## Investments in grid infrastructures
37919                      - I_EN_GRID(t,n)
37920                      ## Investments in extraction sector
37921                      -sum(extract(f), I_OUT(f,t,n))
37922                      ## O&M for energy technlogies
37923                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
37924                      ## O&M for extraction
37925                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
37926                      ## Energy technology penalty costs
37927                      -sum(jpenalty(j), COST_EN(j,t,n))
37928  ;
37929   
37930  * Capital accumulation
37931  eqk_c_te(g,t,tp1,n)$(map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
37932      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
37933   
37934  * Energy services
37935  eqq_fen_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37936      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
37937   
37938  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
37941  *-------------------------------------------------------------------------------
37942  * Energy sector
37943  *-------------------------------------------------------------------------------
37944   
37946   
37947  *-------------------------------------------------------------------------------
37948  * Production - Energy sector
37949  *-------------------------------------------------------------------------------
37950   
37951  eqq_en_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37952      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
37953   
37954  *-------------------------------------------------------------------------------
37955  * Production - Electrical sector
37956  *-------------------------------------------------------------------------------
37957   
37958  eqq_el_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37959      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
37960   
37961  eqq_el2_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37962      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
37963   
37964  eqq_elffren_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37965      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
37966  eqq_elff_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37967      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
37968   
37969  eqq_ces_el_c_te(ices_el,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
37970      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
37971  ;
37972   
37973  *-------------------------------------------------------------------------------
37974  * Production - Non-electrical sector
37975  *-------------------------------------------------------------------------------
37976   
37977  eqq_nel_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37978      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
37979   
37980  eqq_nelog_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37981      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
37982  ;
37983  eqq_ces_nelgas_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37984      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
37985   
37986  *-------------------------------------------------------------------------------
37987  * PES and fuels
37988  *-------------------------------------------------------------------------------
37989   
37990  eqq_fuel_c_te(fuel,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
37991      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
37992   
37993  *-------------------------------------------------------------------------------
37994  * Cost
37995  *-------------------------------------------------------------------------------
37996   
37997  * Net cost of Primary Energy Supplies
37998  eqcost_pes_c_te(f,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
37999      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
38000                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
38001   
38002  * Net cost of Secondary Energy Supplies
38003  eqcost_ses_c_te(s,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38004      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
38005   
38006   
38007  *-------------------------------------------------------------------------------
38008  * Market balances
38009  *-------------------------------------------------------------------------------
38010   
38011  eq_mkt_clearing_oil_c_te(t,'c_te')$(internal('oil'))..
38012      sum( n$(map_clt_n('c_te',n) and trading_t('oil',t,n)),
38013          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
38014      ) =e= 0;
38015   
38016  *-------------------------------------------------------------------------------
38017  * New capital in the energy sector
38018  *-------------------------------------------------------------------------------
38019   
38020  * Electrical generation plants (new)
38021  eqk_en_c_te(jinv,t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
38022      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
38023                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
38024   
38025  *-------------------------------------------------------------------------------
38026  * ENERGY
38027  *-------------------------------------------------------------------------------
38028   
38029  * Capacity limits in the electrical sector
38030  eqq_en_mu_c_te(jel,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
38031      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
38032   
38033  * Efficiency of energy technology sector
38034  eqq_en_in_c_te(jfed,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
38035      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
38036                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
38037   
38038  * Energy generation "tree"
38039  eqq_en_tree_c_te(j,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
38040      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
38041   
38042  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
38045  *-------------------------------------------------------------------------------
38046  * Carbon Emissions
38047  * - Total CO2 emissions and CO2 Fossil fuel and Industry
38048  * - CO2 emission costs
38049  * - GHG permit market
38050  *-------------------------------------------------------------------------------
38051   
38053   
38054  * GHG emission cap
38055  eqq_emi_lim_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
38056      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
38057                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
38058   
38059  ***newcode
38060  eqq_emi_lim_USAc_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
38061  ***
38062   
38063  * Compute total and sectoral emissions
38064  eqq_emi_tree_c_te(t,n,e)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
38065      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
38066   
38067  * Industrial CO2 emissions
38068  eqq_emi_co2ffi_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38069      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
38070                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
38071                              # Emissions from biomass
38072                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
38073                              # Emissions from fuel extraction
38074                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
38075                              # Captured emissions
38076                              sum(sink, Q_EMI(sink,t,n));
38077   
38078  * CO2 emission costs
38079  eqcost_emi_co2_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38080      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
38081   
38082  * Emission permit market clearing for internal market
38083  eq_mkt_clearing_nip_c_te(c_mkt,t,'c_te')$(internal(c_mkt))..
38084      sum(n$(map_clt_n('c_te',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
38085   
38086  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
38089  *-------------------------------------------------------------------------------
38090  * Research & Development
38091  * Options:
38092  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
38093  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
38094  *-------------------------------------------------------------------------------
38095   
38097   
38098  * Knowledge stock accumulation
38099  eqk_rd_c_te(rd,t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
38100                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
38101                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
38102                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
38103                                        SPILL(rd,t,n)**rd_coef(rd,'d');
38104   
38105  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
38106  eqspill_coop_c_te(rd,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_te'))..
38107          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
38108                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_te',nn)), K_RD(rd,t,nn)) +
38109                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_te',nn))), K_RD.l(rd,t,nn))
38110                            ) *
38111                            (
38112                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_te',nn)), K_RD(rd,t,nn)) +
38113                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_te',nn))), K_RD.l(rd,t,nn))
38114                              ) - K_RD(rd,t,n)
38115                            );
38116   
38117  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
38118  eqspill_lead_c_te(rd,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_te')) and leadrd(rd,n))..
38119                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
38120   
38121  * No-cooperation : a follower sees is negative effect on the quantity he can grab
38122  eqspill_foll_c_te(rd,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_te')) and (not leadrd(rd,n)))..
38123                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
38124   
38125  *- Only LbR (without learning by doing)
38126  eqmcost_inv_back_c_te(jrd,t,tt,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
38127                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
38128                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
38129   
38130  *- LbR together with learning by doing ==> Two-factor learning curve
38131  eqmcost_inv_back_lbd_c_te(jrd,t,tt,tfirst,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
38132                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
38133                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
38134                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
38135   
38136  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
38139  *-------------------------------------------------------------------------------
38140  * Default Climate Policy Implementation
38141  *
38142  * Options:
38143  *    --policy={bau (default),ctax}
38144  *        Implement a climate policy setting
38145  *  [ --scen= ]
38146  *        Policy variant.
38147  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
38148  *          * XXX for a fixed percentage/yr (e.g. 5) growth
38149  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
38150  *  [ --ctax_year=2020 ]
38151  *        Starting year of the carbon tax
38152  *  [ --ctax_initial=30 ]
38153  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
38154  *
38155  *-------------------------------------------------------------------------------
38157   
38158  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
38160  *-------------------------------------------------------------------------------
38161  * Energy efficiency
38162  *-------------------------------------------------------------------------------
38163   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
38166  *-------------------------------------------------------------------------------
38167  * Hydro Power
38168  *-------------------------------------------------------------------------------
38169   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
38172  *-------------------------------------------------------------------------------
38173  * System Integration:
38174  * - Capacity constraint
38175  * - Flexibility constraint
38176  * - Grid Investment
38177  * - Capacity growth constraint
38178  *-------------------------------------------------------------------------------
38179   
38181   
38182   
38183  * Renewable CES
38184   
38185  * Definition of the renewable CES
38186  eqq_elintren_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38187      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
38188   
38189  * Capacity constraint
38190   
38192  eqfirm_capacity_c_te(t,n)$(map_clt_n('c_te',n) and (not tfix(t)) and year(t) gt 2005)..
38193                   sum(jel_firm, K_EN(jel_firm,t,n))
38194                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
38195                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
38196                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
38197                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
38198                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
38199                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
38200                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
38201                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
38202                                       ) / yearly_hours
38203  ;
38205   
38206  * Flexibility constraint
38207  eqflex_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38208          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
38209                             ( Q_EN('el',t,n) -
38210                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
38211                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
38212                             ) * flex_coeff('load')
38213  ;
38214   
38215  * Grid
38216   
38217  ** Grid depreciation and investments
38218  eqk_en_grid_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
38219                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
38220                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
38221   
38222  ** Grid adjustment to power capacity
38223  eqk_en_grid_to_k_en_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38224                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
38225                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
38226                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
38227                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
38228                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
38229                                     ) / grid_cost +
38230                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
38231                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
38232                                      K_EN('elcsp',t,n);
38233  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
38234   
38235  * Capacity growth constraint
38236  eqcap_growth_c_te(jinv,t,tp1,tp2,n)$((map_clt_n('c_te',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
38237                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
38238                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
38239   
38240  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
38243  *-------------------------------------------------------------------------------
38244  * Nuclear power plants
38245  *-------------------------------------------------------------------------------
38246   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
38249  *-------------------------------------------------------------------------------
38250  * GHG module
38251  * - CH4 FFI + CH4 waste + CH4 open fires
38252  * - N2O FFI + N2O waste + N2O open fires
38253  *-------------------------------------------------------------------------------
38254   
38256   
38257  * CH4, N2O waste emissions
38258  eqq_emi_waste_c_te(waste,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
38259                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
38260   
38261  * n2o FFI
38262  eqq_emi_n2o_ffi_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
38263    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
38264                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
38265                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
38266                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
38267                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
38268                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
38269                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
38270                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
38271                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
38272                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
38273                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
38274                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
38275                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
38276                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
38277                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
38278                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
38279                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
38280                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
38281                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
38282                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
38283                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
38284                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
38285                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
38286                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
38287                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
38288                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
38289                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
38290                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
38291                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
38292                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
38293                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
38294   
38295  * ch4 FFI
38296  eqq_emi_ch4_ffi_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
38297    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
38300  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
38301  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
38302                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
38303                             smax(tt$(year(tt) eq 2015),
38304                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
38307  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
38308  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
38309                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
38310   
38311  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
38314  *-------------------------------------------------------------------------------
38315  * F-gases
38316  * - LLF
38317  * - SLF
38318  *-------------------------------------------------------------------------------
38319   
38321   
38322  * F-gases emissions
38323  eqq_emi_fgases_c_te(fgases,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
38324                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
38325   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
38328  *-------------------------------------------------------------------------------
38329  * Landuse [simplified version of the land-use model]
38330  *-------------------------------------------------------------------------------
38331   
38333   
38334  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
38335  eq_wbio_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38336      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
38337   
38339  * Cost of all woody biomass produced for advanced biofuels and woody biomass
38340  eqcost_pes_wbio_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38341      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
38343   
38344  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
38347  *-------------------------------------------------------------------------------
38348  * Bioenergy power plant
38349  *-------------------------------------------------------------------------------
38350   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
38353  *-------------------------------------------------------------------------------
38354  * Traditional Biofuels
38355  * - Requires the precedence of mod_landuse
38356  *-------------------------------------------------------------------------------
38357   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
38360  *-------------------------------------------------------------------------------
38361  * Advanced biofuel
38362  * - Require the precedence of mod_landuse
38363  *-------------------------------------------------------------------------------
38364   
38366   
38367  * Limitations for nel backstops
38368  eqq_en_lim_advbiofuel_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
38369               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
38370               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
38371   
38372  * Peculiarity of advbiofuel
38373  eqmcost_fuel_advbiofuel_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38374                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
38375   
38376  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
38379  *-------------------------------------------------------------------------------
38380  * Carbon Capture and Sequestration
38381  *-------------------------------------------------------------------------------
38382   
38384   
38385  eqq_emi_ccs_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38386                  Q_EMI('ccs_plant',t,n) =e=
38387                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
38388                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
38389  ;
38390   
38391  eqcost_emi_sinks_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38392                  COST_EMI('ccs_plant',t,n) =e=
38393                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
38394                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
38395  ;
38396   
38397  eq_stor_ccs_cum_c_te(ccs_stor,tp1,t,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
38398                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
38399  ;
38400   
38401  eq_emi_stor_ccs_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38402                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
38403  ;
38404   
38405  eq_emi_leak_ccs_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38406                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
38407   
38408  *-------------------------------------------------------------------------------
38410   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
38412  *-------------------------------------------------------------------------------
38413  * Coal for non-electric sectors
38414  * - Coke Plants
38415  * - Industrial and Commercial combined-heat-and-power (CHP)
38416  * - Others
38417  *-------------------------------------------------------------------------------
38418   
38420   
38421  eqcost_en_nelcoal_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38422           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
38423                                          nelcoal_max_abat(t,n) *
38424                                          (nelcoal_cmac(n,'a') *
38425                                            Q_EN('nelcoalabat',t,n) /
38426                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
38427                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
38428                                              (exp(nelcoal_cmac(n,'c') *
38429                                                (Q_EN('nelcoalabat',t,n)/
38430                                                  (nelcoal_max_abat(t,n) *
38431                                                      nelcoal_baseline(t,n))
38432                                                  ) - 1 )
38433                                              )
38434                                          );
38435   
38436  eqq_ncoalabat_monotone_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
38437          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
38438   
38439  * ensure Q_EN is lower than K_EN for CCS as not in jel
38440  eqq_en_nelcoalccs_max_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38441          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
38442   
38443  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
38446  *-------------------------------------------------------------------------------
38447  * Wind energy module
38448  * - onshore and offshore
38449  *-------------------------------------------------------------------------------
38450   
38452   
38453  * Capacity limits in the wind onshore electrical sector
38454  eqq_en_mu_windon_c_te(wind_dist,wind_class,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
38455      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
38456   
38457  * Capacity limits in the wind offshore electrical sector
38458  eqq_en_mu_windoff_c_te(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
38459      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
38460   
38461  * Wind onshore electrical generation plants (new)
38462  eqk_en_windon_c_te(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
38463      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
38464                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
38465   
38466  * Wind offshore electrical generation plants (new)
38467  eqk_en_windoff_c_te(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
38468      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
38469                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
38470   
38471  * Total onshore wind energy production
38472  eqq_en_windon_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38473                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
38474   
38475  * Total offshore wind energy production
38476  eqq_en_windoff_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38477                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
38478   
38479  * Total onshore wind capacity
38480  eqk_en_windon_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38481                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
38482   
38483  * Total offshore wind capacity
38484  eqk_en_windoff_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38485                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
38486   
38487  * Total onshore wind investment
38488  eqi_en_windon_sum_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
38489                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
38490   
38491  * Total offshore wind investment
38492  eqi_en_windoff_sum_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
38493                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
38494   
38495  *-------------------------------------------------------------------------------
38497   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
38499  *-------------------------------------------------------------------------------
38500  * Solar Powerplants (PV and CSP) to the electrical system
38501  *-------------------------------------------------------------------------------
38502   
38503  *-------------------------------------------------------------------------------
38505   
38506   
38507  * Capacity limits in the pv electrical sector
38508  eqq_en_mu_pv_c_te(solar_dist,solar_class,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
38509                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
38510   
38511  * Capacity limits in the csp electrical sector
38512  eqq_en_mu_csp_c_te(solar_dist,solar_class,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
38513                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
38514   
38515  * PV electrical generation plants (new)
38516  eqk_en_pv_c_te(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
38517                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
38518                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
38519   
38520  * CSP electrical generation plants (new)
38521  eqk_en_csp_c_te(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
38522                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
38523                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
38524   
38525  * Total PV energy production
38526  eqq_en_pv_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38527                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
38528   
38529  * Total CSP energy production
38530  eqq_en_csp_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38531                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
38532   
38533  * Total PV capacity
38534  eqk_en_pv_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38535                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
38536   
38537  * Total CSP capacity
38538  eqk_en_csp_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38539                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
38540   
38541  * Total PV investment
38542  eqi_en_pv_sum_c_te(t,tp1,n)$(map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
38543                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
38544   
38545  * Total CSP investment
38546  eqi_en_csp_sum_c_te(t,tp1,n)$(map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
38547                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
38548   
38549  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
38550  eqk_en_solar_comp_c_te(t,n,solar_dist)$(map_clt_n('c_te',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
38551                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
38552                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
38553   
38554   
38555   
38556  *-------------------------------------------------------------------------------
38558   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
38560  *-------------------------------------------------------------------------------
38561  * Technology development scenarios
38562  *-------------------------------------------------------------------------------
38563   
38565   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
38567  *-------------------------------------------------------------------------------
38568  * Oil Extraction
38569  * Options:
38570  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
38571  *-------------------------------------------------------------------------------
38572   
38574   
38575  * Capacity
38576  eqoilcap_c_te(t,tp1,n,oilg)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
38577      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
38578   
38579  * Production
38580  eqoilprod_c_te(t,tp1,n,oilg)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
38581      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
38582   
38583  eqq_out_oil_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38584      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
38585   
38586  * Cumulative production
38587  eqcum_oil_c_te(t,tp1,n,oilg)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
38588      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
38589   
38590  * Cost
38591  eqcost_oil_c_te(t,tp1,n,oilg)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
38592      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
38593                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
38594                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
38595   
38596  * Investments
38597  eqi_oil_c_te(t,tp1,n,oilg)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
38598      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
38599   
38600  * Total investment
38601  eqi_out_oil_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
38602      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
38603   
38604  * Emissions
38605  eqq_emi_out_oil_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38606      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
38607   
38608  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
38611  *-------------------------------------------------------------------------------
38612  * Uranium Resources
38613  *-------------------------------------------------------------------------------
38614   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
38617  *-------------------------------------------------------------------------------
38618  * Gas Resources
38619  *-------------------------------------------------------------------------------
38620   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
38623  *-------------------------------------------------------------------------------
38624  * Coal Resources
38625  *-------------------------------------------------------------------------------
38626   
38628   
38629   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
38631  *-------------------------------------------------------------------------------
38632  * Climate
38633  *
38634  * Represents the climate
38635  * - based on the DICE model equations
38636  * - Radiative forcing for non CO2 ghgs
38637  * - parameters calibrated to reproduce MAGICC6.4 default response
38638  *
38639  *  Options:
38640  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
38641  * - $setglobal cooperate_on_climate {'YES','NO'}
38642  * - 'YES'(default): Countries within a coalition act in cooperation
38643  *   'NO': Countries within a coalition act individually
38644  *
38645  *-------------------------------------------------------------------------------
38646   
38648   
38650   
38651  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
38654  *-------------------------------------------------------------------------------
38655  * Long-run Damages from Climate Change
38656  * - Economic impacts
38657  * - Adaptation
38658  *-------------------------------------------------------------------------------
38659   
38661   
38663   
38664  *-------------------------------------------------------------------------------
38666   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
38668  *-------------------------------------------------------------------------------
38669  * Light-duty Vehicles for Personal Transport
38670  *-------------------------------------------------------------------------------
38671   
38673   
38674  *** newcode
38675  eqq_inv_red_ban_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38676      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
38677   
38678  ***
38679  *- Number of light duty vehicles
38680  eqnb_veh_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38681      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
38682   
38683  *- Yearly energy demand of vehicles
38684  eqq_en_veh_c_te(jveh,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38685      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
38686   
38687  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
38688  eqq_el_edv_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38689      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
38690   
38691  *- Investment cost for hybrid vehicles
38692  eqmcost_inv_hybrid_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
38693                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
38694   
38695  *- Investment cost for plug-in hybrid vehicles
38696  eqmcost_inv_plghybrid_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
38697                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
38698   
38699  *- Investment cost for electric drive vehicles
38700  eqmcost_inv_edv_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
38701                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
38702   
38703  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
38706  *-------------------------------------------------------------------------------
38707  * Road Freight Transport
38708  *-------------------------------------------------------------------------------
38710   
38711  *-  Number of freight vehicles
38712  eqnb_frtveh_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38713                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
38714   
38715  *-  Yearly fuel consumption of freight vehicles
38716  eqq_en_frtveh_c_te(jfrt,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38717                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
38718   
38719  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
38720  eqq_el_frtedv_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38721                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
38722   
38723  *-  Investment cost for hbd_stfr vehicle
38724  eqmcost_inv_hbd_stfr_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
38725                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
38726   
38727  *-  Investment cost for plug-in hbd_stfr vehicle
38728  eqmcost_inv_plghbd_stfr_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
38729                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
38730   
38731  *-  Investment cost for electric drive vehicle
38732  eqmcost_inv_edv_stfr_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
38733                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
38734   
38735  *-------------------------------------------------------------------------------
38737   
38738   
38739   
38740   
38741   
38742   
38743  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
38745  *-------------------------------------------------------------------------------
38746  * Traditional Biomass
38747  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
38748  *  - require post_process to be launch before
38749  *-------------------------------------------------------------------------------
38750   
38752   
38753  * Optional modules
38754   
38755  * Policy modules
38756   
38757  * Calibration
38760   
38761   
38762  model witch_c_te /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
38764  *-------------------------------------------------------------------------------
38765  * Call modules by order
38766  *-------------------------------------------------------------------------------
38770   
38771  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
38773  *-------------------------------------------------------------------------------
38774  * Algorithm
38775  *-------------------------------------------------------------------------------
38776   
38778   
38779  eqobj_c_te
38780   
38781  *-------------------------------------------------------------------------------
38783   
38784  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
38786  *-------------------------------------------------------------------------------
38787  * Time
38788  * - Temporal structure
38789  * - Fixed time periods
38790  * - States of the world
38791  *-------------------------------------------------------------------------------
38792   
38794   
38795  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
38797  *-------------------------------------------------------------------------------
38798  * Geographic dimension and mapping with countries
38799  *-------------------------------------------------------------------------------
38800   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
38803  *-------------------------------------------------------------------------------
38804  * Non-Cooperative Setup
38805  *
38806  * Each region is defined as an individual coalition.
38807  *
38808  *-------------------------------------------------------------------------------
38809   
38811   
38812  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
38814  *-------------------------------------------------------------------------------
38815  * Welfare
38816  *-------------------------------------------------------------------------------
38817   
38819   
38820  equtility_c_te
38821   
38822  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
38825  *-------------------------------------------------------------------------------
38826  * Economy
38827  * - Production and Consumption definition
38828  * - Top-level of the production function
38829  * Options:
38830  * --original_ssp=1 : original SSP population and GDP data
38831  *-------------------------------------------------------------------------------
38832   
38834   
38835  eqk_c_te
38836  eqq_cc_c_te
38837  eqq_fen_c_te
38838  eqq_y_c_te
38839   
38840  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
38843  *-------------------------------------------------------------------------------
38844  * Energy sector
38845  *-------------------------------------------------------------------------------
38846   
38848   
38849  eq_mkt_clearing_oil_c_te
38850  eqcost_pes_c_te
38851  eqcost_ses_c_te
38852  eqk_en_c_te
38853  eqq_ces_el_c_te
38854  eqq_ces_nelgas_c_te
38855  eqq_el2_c_te
38856  eqq_el_c_te
38857  eqq_elff_c_te
38858  eqq_en_c_te
38859  eqq_en_in_c_te
38860  eqq_en_mu_c_te
38861  eqq_en_tree_c_te
38862  eqq_nel_c_te
38863  eqq_nelog_c_te
38864  eqq_fuel_c_te
38865  eqq_elffren_c_te
38866   
38867  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
38870  *-------------------------------------------------------------------------------
38871  * Carbon Emissions
38872  * - Total CO2 emissions and CO2 Fossil fuel and Industry
38873  * - CO2 emission costs
38874  * - GHG permit market
38875  *-------------------------------------------------------------------------------
38876   
38878   
38879  eqq_emi_lim_c_te
38880  ***newcode
38881  eqq_emi_lim_USAc_te
38882  ***
38883  eqq_emi_tree_c_te
38884  eqq_emi_co2ffi_c_te
38885   
38886  eqcost_emi_co2_c_te
38887   
38888  eq_mkt_clearing_nip_c_te
38889   
38890  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
38893  *-------------------------------------------------------------------------------
38894  * Research & Development
38895  * Options:
38896  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
38897  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
38898  *-------------------------------------------------------------------------------
38899   
38901   
38902  eqk_rd_c_te
38903  eqspill_coop_c_te
38904  eqspill_lead_c_te
38905  eqspill_foll_c_te
38906  eqmcost_inv_back_c_te
38907  eqmcost_inv_back_lbd_c_te
38908   
38909  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
38912  *-------------------------------------------------------------------------------
38913  * Default Climate Policy Implementation
38914  *
38915  * Options:
38916  *    --policy={bau (default),ctax}
38917  *        Implement a climate policy setting
38918  *  [ --scen= ]
38919  *        Policy variant.
38920  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
38921  *          * XXX for a fixed percentage/yr (e.g. 5) growth
38922  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
38923  *  [ --ctax_year=2020 ]
38924  *        Starting year of the carbon tax
38925  *  [ --ctax_initial=30 ]
38926  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
38927  *
38928  *-------------------------------------------------------------------------------
38930   
38931  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
38933  *-------------------------------------------------------------------------------
38934  * Energy efficiency
38935  *-------------------------------------------------------------------------------
38936   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
38939  *-------------------------------------------------------------------------------
38940  * Hydro Power
38941  *-------------------------------------------------------------------------------
38942   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
38945  *-------------------------------------------------------------------------------
38946  * System Integration:
38947  * - Capacity constraint
38948  * - Flexibility constraint
38949  * - Grid Investment
38950  * - Capacity growth constraint
38951  *-------------------------------------------------------------------------------
38952   
38954   
38955  eqq_elintren_c_te
38956  eqflex_c_te
38957  eqk_en_grid_c_te
38958  eqk_en_grid_to_k_en_c_te
38959  eqfirm_capacity_c_te
38960  eqcap_growth_c_te
38961   
38962  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
38965  *-------------------------------------------------------------------------------
38966  * Nuclear power plants
38967  *-------------------------------------------------------------------------------
38968   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
38971  *-------------------------------------------------------------------------------
38972  * GHG module
38973  * - CH4 FFI + CH4 waste + CH4 open fires
38974  * - N2O FFI + N2O waste + N2O open fires
38975  *-------------------------------------------------------------------------------
38976   
38978   
38979  eqq_emi_waste_c_te
38980  eqq_emi_n2o_ffi_c_te
38981  eqq_emi_ch4_ffi_c_te
38982   
38983  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
38986  *-------------------------------------------------------------------------------
38987  * F-gases
38988  * - LLF
38989  * - SLF
38990  *-------------------------------------------------------------------------------
38991   
38993   
38994  eqq_emi_fgases_c_te
38995   
38996  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
38999  *-------------------------------------------------------------------------------
39000  * Landuse [simplified version of the land-use model]
39001  *-------------------------------------------------------------------------------
39002   
39004   
39005  eq_wbio_c_te
39006  eqcost_pes_wbio_c_te
39007   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
39010  *-------------------------------------------------------------------------------
39011  * Bioenergy power plant
39012  *-------------------------------------------------------------------------------
39013   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
39016  *-------------------------------------------------------------------------------
39017  * Traditional Biofuels
39018  * - Requires the precedence of mod_landuse
39019  *-------------------------------------------------------------------------------
39020   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
39023  *-------------------------------------------------------------------------------
39024  * Advanced biofuel
39025  * - Require the precedence of mod_landuse
39026  *-------------------------------------------------------------------------------
39027   
39029   
39030  eqq_en_lim_advbiofuel_c_te
39031  eqmcost_fuel_advbiofuel_c_te
39032   
39033  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
39036  *-------------------------------------------------------------------------------
39037  * Carbon Capture and Sequestration
39038  *-------------------------------------------------------------------------------
39039   
39041   
39042  eqq_emi_ccs_c_te
39043  eqcost_emi_sinks_c_te
39044  eq_stor_ccs_cum_c_te
39045  eq_emi_stor_ccs_c_te
39046  eq_emi_leak_ccs_c_te
39047   
39048  *-------------------------------------------------------------------------------
39050   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
39052  *-------------------------------------------------------------------------------
39053  * Coal for non-electric sectors
39054  * - Coke Plants
39055  * - Industrial and Commercial combined-heat-and-power (CHP)
39056  * - Others
39057  *-------------------------------------------------------------------------------
39058   
39060   
39061  eqcost_en_nelcoal_c_te
39062  eqq_ncoalabat_monotone_c_te
39063  eqq_en_nelcoalccs_max_c_te
39064   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
39067  *-------------------------------------------------------------------------------
39068  * Wind energy module
39069  * - onshore and offshore
39070  *-------------------------------------------------------------------------------
39071   
39073   
39074  eqq_en_mu_windon_c_te
39075  eqq_en_mu_windoff_c_te
39076  eqk_en_windon_c_te
39077  eqk_en_windoff_c_te
39078  eqq_en_windon_sum_c_te
39079  eqq_en_windoff_sum_c_te
39080  eqk_en_windon_sum_c_te
39081  eqk_en_windoff_sum_c_te
39082  eqi_en_windon_sum_c_te
39083  eqi_en_windoff_sum_c_te
39084   
39086   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
39088  *-------------------------------------------------------------------------------
39089  * Solar Powerplants (PV and CSP) to the electrical system
39090  *-------------------------------------------------------------------------------
39091   
39092  *-------------------------------------------------------------------------------
39094   
39095  eqq_en_mu_pv_c_te
39096  eqq_en_mu_csp_c_te
39097  eqk_en_pv_c_te
39098  eqk_en_csp_c_te
39099  eqq_en_pv_sum_c_te
39100  eqq_en_csp_sum_c_te
39101  eqk_en_pv_sum_c_te
39102  eqk_en_csp_sum_c_te
39103  eqi_en_pv_sum_c_te
39104  eqi_en_csp_sum_c_te
39105  eqk_en_solar_comp_c_te
39106   
39107  *-------------------------------------------------------------------------------
39109   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
39111  *-------------------------------------------------------------------------------
39112  * Technology development scenarios
39113  *-------------------------------------------------------------------------------
39114   
39116   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
39118  *-------------------------------------------------------------------------------
39119  * Oil Extraction
39120  * Options:
39121  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
39122  *-------------------------------------------------------------------------------
39123   
39125   
39126  eqoilcap_c_te
39127  eqoilprod_c_te
39128  eqq_out_oil_c_te
39129  eqcum_oil_c_te
39130  eqcost_oil_c_te
39131  eqi_oil_c_te
39132  eqi_out_oil_c_te
39133  eqq_emi_out_oil_c_te
39134   
39135  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
39138  *-------------------------------------------------------------------------------
39139  * Uranium Resources
39140  *-------------------------------------------------------------------------------
39141   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
39144  *-------------------------------------------------------------------------------
39145  * Gas Resources
39146  *-------------------------------------------------------------------------------
39147   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
39150  *-------------------------------------------------------------------------------
39151  * Coal Resources
39152  *-------------------------------------------------------------------------------
39153   
39155   
39156   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
39158  *-------------------------------------------------------------------------------
39159  * Climate
39160  *
39161  * Represents the climate
39162  * - based on the DICE model equations
39163  * - Radiative forcing for non CO2 ghgs
39164  * - parameters calibrated to reproduce MAGICC6.4 default response
39165  *
39166  *  Options:
39167  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
39168  * - $setglobal cooperate_on_climate {'YES','NO'}
39169  * - 'YES'(default): Countries within a coalition act in cooperation
39170  *   'NO': Countries within a coalition act individually
39171  *
39172  *-------------------------------------------------------------------------------
39173   
39175   
39177   
39178  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
39181  *-------------------------------------------------------------------------------
39182  * Long-run Damages from Climate Change
39183  * - Economic impacts
39184  * - Adaptation
39185  *-------------------------------------------------------------------------------
39186   
39188   
39190   
39191  *-------------------------------------------------------------------------------
39193   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
39195  *-------------------------------------------------------------------------------
39196  * Light-duty Vehicles for Personal Transport
39197  *-------------------------------------------------------------------------------
39198   
39200   
39201  eqnb_veh_c_te
39202  eqq_en_veh_c_te
39203  eqq_el_edv_c_te
39204  eqmcost_inv_hybrid_c_te
39205  eqmcost_inv_plghybrid_c_te
39206  eqmcost_inv_edv_c_te
39207  *** newcode
39208  eqq_inv_red_ban_c_te
39209  ***
39210  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
39213  *-------------------------------------------------------------------------------
39214  * Road Freight Transport
39215  *-------------------------------------------------------------------------------
39217   
39218  eqnb_frtveh_c_te
39219  eqq_en_frtveh_c_te
39220  eqq_el_frtedv_c_te
39221  eqmcost_inv_hbd_stfr_c_te
39222  eqmcost_inv_plghbd_stfr_c_te
39223  eqmcost_inv_edv_stfr_c_te
39224   
39225  *-------------------------------------------------------------------------------
39227   
39228   
39229   
39230   
39231   
39232   
39233  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
39235  *-------------------------------------------------------------------------------
39236  * Traditional Biomass
39237  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
39238  *  - require post_process to be launch before
39239  *-------------------------------------------------------------------------------
39240   
39242   
39243  * Optional modules
39244   
39245  * Policy modules
39246   
39247  * Calibration
39250  /;
39251   
39252  witch_c_te.optfile=1;   # the option file solvername.opt is to be used
39253  witch_c_te.holdfixed=1; # treat fixed values as constant
39254  witch_c_te.scaleopt=1;  # Use scaling for better gradients estimation
39255  witch_c_te.solvelink=3; # Use parallel or sequential solving
39256   
39261   
39262  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
39264  *-------------------------------------------------------------------------------
39265  * Call modules by order
39266  *-------------------------------------------------------------------------------
39270   
39271  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
39273  *-------------------------------------------------------------------------------
39274  * Algorithm
39275  *-------------------------------------------------------------------------------
39276   
39278   
39279  eqobj_c_usa
39280   
39281  *-------------------------------------------------------------------------------
39283   
39284  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
39286  *-------------------------------------------------------------------------------
39287  * Time
39288  * - Temporal structure
39289  * - Fixed time periods
39290  * - States of the world
39291  *-------------------------------------------------------------------------------
39292   
39294   
39295  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
39297  *-------------------------------------------------------------------------------
39298  * Geographic dimension and mapping with countries
39299  *-------------------------------------------------------------------------------
39300   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
39303  *-------------------------------------------------------------------------------
39304  * Non-Cooperative Setup
39305  *
39306  * Each region is defined as an individual coalition.
39307  *
39308  *-------------------------------------------------------------------------------
39309   
39311   
39312  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
39314  *-------------------------------------------------------------------------------
39315  * Welfare
39316  *-------------------------------------------------------------------------------
39317   
39319   
39320  equtility_c_usa
39321   
39322  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
39325  *-------------------------------------------------------------------------------
39326  * Economy
39327  * - Production and Consumption definition
39328  * - Top-level of the production function
39329  * Options:
39330  * --original_ssp=1 : original SSP population and GDP data
39331  *-------------------------------------------------------------------------------
39332   
39334   
39335  eqk_c_usa
39336  eqq_cc_c_usa
39337  eqq_fen_c_usa
39338  eqq_y_c_usa
39339   
39340  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
39343  *-------------------------------------------------------------------------------
39344  * Energy sector
39345  *-------------------------------------------------------------------------------
39346   
39348   
39349  eq_mkt_clearing_oil_c_usa
39350  eqcost_pes_c_usa
39351  eqcost_ses_c_usa
39352  eqk_en_c_usa
39353  eqq_ces_el_c_usa
39354  eqq_ces_nelgas_c_usa
39355  eqq_el2_c_usa
39356  eqq_el_c_usa
39357  eqq_elff_c_usa
39358  eqq_en_c_usa
39359  eqq_en_in_c_usa
39360  eqq_en_mu_c_usa
39361  eqq_en_tree_c_usa
39362  eqq_nel_c_usa
39363  eqq_nelog_c_usa
39364  eqq_fuel_c_usa
39365  eqq_elffren_c_usa
39366   
39367  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
39370  *-------------------------------------------------------------------------------
39371  * Carbon Emissions
39372  * - Total CO2 emissions and CO2 Fossil fuel and Industry
39373  * - CO2 emission costs
39374  * - GHG permit market
39375  *-------------------------------------------------------------------------------
39376   
39378   
39379  eqq_emi_lim_c_usa
39380  ***newcode
39381  eqq_emi_lim_USAc_usa
39382  ***
39383  eqq_emi_tree_c_usa
39384  eqq_emi_co2ffi_c_usa
39385   
39386  eqcost_emi_co2_c_usa
39387   
39388  eq_mkt_clearing_nip_c_usa
39389   
39390  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
39393  *-------------------------------------------------------------------------------
39394  * Research & Development
39395  * Options:
39396  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
39397  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
39398  *-------------------------------------------------------------------------------
39399   
39401   
39402  eqk_rd_c_usa
39403  eqspill_coop_c_usa
39404  eqspill_lead_c_usa
39405  eqspill_foll_c_usa
39406  eqmcost_inv_back_c_usa
39407  eqmcost_inv_back_lbd_c_usa
39408   
39409  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
39412  *-------------------------------------------------------------------------------
39413  * Default Climate Policy Implementation
39414  *
39415  * Options:
39416  *    --policy={bau (default),ctax}
39417  *        Implement a climate policy setting
39418  *  [ --scen= ]
39419  *        Policy variant.
39420  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
39421  *          * XXX for a fixed percentage/yr (e.g. 5) growth
39422  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
39423  *  [ --ctax_year=2020 ]
39424  *        Starting year of the carbon tax
39425  *  [ --ctax_initial=30 ]
39426  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
39427  *
39428  *-------------------------------------------------------------------------------
39430   
39431  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
39433  *-------------------------------------------------------------------------------
39434  * Energy efficiency
39435  *-------------------------------------------------------------------------------
39436   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
39439  *-------------------------------------------------------------------------------
39440  * Hydro Power
39441  *-------------------------------------------------------------------------------
39442   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
39445  *-------------------------------------------------------------------------------
39446  * System Integration:
39447  * - Capacity constraint
39448  * - Flexibility constraint
39449  * - Grid Investment
39450  * - Capacity growth constraint
39451  *-------------------------------------------------------------------------------
39452   
39454   
39455  eqq_elintren_c_usa
39456  eqflex_c_usa
39457  eqk_en_grid_c_usa
39458  eqk_en_grid_to_k_en_c_usa
39459  eqfirm_capacity_c_usa
39460  eqcap_growth_c_usa
39461   
39462  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
39465  *-------------------------------------------------------------------------------
39466  * Nuclear power plants
39467  *-------------------------------------------------------------------------------
39468   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
39471  *-------------------------------------------------------------------------------
39472  * GHG module
39473  * - CH4 FFI + CH4 waste + CH4 open fires
39474  * - N2O FFI + N2O waste + N2O open fires
39475  *-------------------------------------------------------------------------------
39476   
39478   
39479  eqq_emi_waste_c_usa
39480  eqq_emi_n2o_ffi_c_usa
39481  eqq_emi_ch4_ffi_c_usa
39482   
39483  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
39486  *-------------------------------------------------------------------------------
39487  * F-gases
39488  * - LLF
39489  * - SLF
39490  *-------------------------------------------------------------------------------
39491   
39493   
39494  eqq_emi_fgases_c_usa
39495   
39496  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
39499  *-------------------------------------------------------------------------------
39500  * Landuse [simplified version of the land-use model]
39501  *-------------------------------------------------------------------------------
39502   
39504   
39505  eq_wbio_c_usa
39506  eqcost_pes_wbio_c_usa
39507   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
39510  *-------------------------------------------------------------------------------
39511  * Bioenergy power plant
39512  *-------------------------------------------------------------------------------
39513   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
39516  *-------------------------------------------------------------------------------
39517  * Traditional Biofuels
39518  * - Requires the precedence of mod_landuse
39519  *-------------------------------------------------------------------------------
39520   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
39523  *-------------------------------------------------------------------------------
39524  * Advanced biofuel
39525  * - Require the precedence of mod_landuse
39526  *-------------------------------------------------------------------------------
39527   
39529   
39530  eqq_en_lim_advbiofuel_c_usa
39531  eqmcost_fuel_advbiofuel_c_usa
39532   
39533  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
39536  *-------------------------------------------------------------------------------
39537  * Carbon Capture and Sequestration
39538  *-------------------------------------------------------------------------------
39539   
39541   
39542  eqq_emi_ccs_c_usa
39543  eqcost_emi_sinks_c_usa
39544  eq_stor_ccs_cum_c_usa
39545  eq_emi_stor_ccs_c_usa
39546  eq_emi_leak_ccs_c_usa
39547   
39548  *-------------------------------------------------------------------------------
39550   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
39552  *-------------------------------------------------------------------------------
39553  * Coal for non-electric sectors
39554  * - Coke Plants
39555  * - Industrial and Commercial combined-heat-and-power (CHP)
39556  * - Others
39557  *-------------------------------------------------------------------------------
39558   
39560   
39561  eqcost_en_nelcoal_c_usa
39562  eqq_ncoalabat_monotone_c_usa
39563  eqq_en_nelcoalccs_max_c_usa
39564   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
39567  *-------------------------------------------------------------------------------
39568  * Wind energy module
39569  * - onshore and offshore
39570  *-------------------------------------------------------------------------------
39571   
39573   
39574  eqq_en_mu_windon_c_usa
39575  eqq_en_mu_windoff_c_usa
39576  eqk_en_windon_c_usa
39577  eqk_en_windoff_c_usa
39578  eqq_en_windon_sum_c_usa
39579  eqq_en_windoff_sum_c_usa
39580  eqk_en_windon_sum_c_usa
39581  eqk_en_windoff_sum_c_usa
39582  eqi_en_windon_sum_c_usa
39583  eqi_en_windoff_sum_c_usa
39584   
39586   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
39588  *-------------------------------------------------------------------------------
39589  * Solar Powerplants (PV and CSP) to the electrical system
39590  *-------------------------------------------------------------------------------
39591   
39592  *-------------------------------------------------------------------------------
39594   
39595  eqq_en_mu_pv_c_usa
39596  eqq_en_mu_csp_c_usa
39597  eqk_en_pv_c_usa
39598  eqk_en_csp_c_usa
39599  eqq_en_pv_sum_c_usa
39600  eqq_en_csp_sum_c_usa
39601  eqk_en_pv_sum_c_usa
39602  eqk_en_csp_sum_c_usa
39603  eqi_en_pv_sum_c_usa
39604  eqi_en_csp_sum_c_usa
39605  eqk_en_solar_comp_c_usa
39606   
39607  *-------------------------------------------------------------------------------
39609   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
39611  *-------------------------------------------------------------------------------
39612  * Technology development scenarios
39613  *-------------------------------------------------------------------------------
39614   
39616   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
39618  *-------------------------------------------------------------------------------
39619  * Oil Extraction
39620  * Options:
39621  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
39622  *-------------------------------------------------------------------------------
39623   
39625   
39626  eqoilcap_c_usa
39627  eqoilprod_c_usa
39628  eqq_out_oil_c_usa
39629  eqcum_oil_c_usa
39630  eqcost_oil_c_usa
39631  eqi_oil_c_usa
39632  eqi_out_oil_c_usa
39633  eqq_emi_out_oil_c_usa
39634   
39635  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
39638  *-------------------------------------------------------------------------------
39639  * Uranium Resources
39640  *-------------------------------------------------------------------------------
39641   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
39644  *-------------------------------------------------------------------------------
39645  * Gas Resources
39646  *-------------------------------------------------------------------------------
39647   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
39650  *-------------------------------------------------------------------------------
39651  * Coal Resources
39652  *-------------------------------------------------------------------------------
39653   
39655   
39656   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
39658  *-------------------------------------------------------------------------------
39659  * Climate
39660  *
39661  * Represents the climate
39662  * - based on the DICE model equations
39663  * - Radiative forcing for non CO2 ghgs
39664  * - parameters calibrated to reproduce MAGICC6.4 default response
39665  *
39666  *  Options:
39667  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
39668  * - $setglobal cooperate_on_climate {'YES','NO'}
39669  * - 'YES'(default): Countries within a coalition act in cooperation
39670  *   'NO': Countries within a coalition act individually
39671  *
39672  *-------------------------------------------------------------------------------
39673   
39675   
39677   
39678  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
39681  *-------------------------------------------------------------------------------
39682  * Long-run Damages from Climate Change
39683  * - Economic impacts
39684  * - Adaptation
39685  *-------------------------------------------------------------------------------
39686   
39688   
39690   
39691  *-------------------------------------------------------------------------------
39693   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
39695  *-------------------------------------------------------------------------------
39696  * Light-duty Vehicles for Personal Transport
39697  *-------------------------------------------------------------------------------
39698   
39700   
39701  eqnb_veh_c_usa
39702  eqq_en_veh_c_usa
39703  eqq_el_edv_c_usa
39704  eqmcost_inv_hybrid_c_usa
39705  eqmcost_inv_plghybrid_c_usa
39706  eqmcost_inv_edv_c_usa
39707  *** newcode
39708  eqq_inv_red_ban_c_usa
39709  ***
39710  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
39713  *-------------------------------------------------------------------------------
39714  * Road Freight Transport
39715  *-------------------------------------------------------------------------------
39717   
39718  eqnb_frtveh_c_usa
39719  eqq_en_frtveh_c_usa
39720  eqq_el_frtedv_c_usa
39721  eqmcost_inv_hbd_stfr_c_usa
39722  eqmcost_inv_plghbd_stfr_c_usa
39723  eqmcost_inv_edv_stfr_c_usa
39724   
39725  *-------------------------------------------------------------------------------
39727   
39728   
39729   
39730   
39731   
39732   
39733  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
39735  *-------------------------------------------------------------------------------
39736  * Traditional Biomass
39737  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
39738  *  - require post_process to be launch before
39739  *-------------------------------------------------------------------------------
39740   
39742   
39743  * Optional modules
39744   
39745  * Policy modules
39746   
39747  * Calibration
39750  ;
39751   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
39753  *-------------------------------------------------------------------------------
39754  * Call modules by order
39755  *-------------------------------------------------------------------------------
39759   
39760  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
39762  *-------------------------------------------------------------------------------
39763  * Algorithm
39764  *-------------------------------------------------------------------------------
39765   
39767   
39769  * Add the component of the (maximized) objective function as required by the ADMM algorithm
39770  eqobj_c_usa..
39771      OBJADMM =e= UTILITY -
39772          sum(t, rho_admm('oil',t) / 2 *
39773              sum(n$(map_clt_n('c_usa',n) and trading_t('oil',t,n)),
39774                  power(
39775                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
39776                      x_admm('oil',t,n) +
39777                      xavg_admm('oil',t) +
39778                      u_admm('oil', t)
39779                  ,2)
39780              )) -
39781          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
39782              sum(n$(map_clt_n('c_usa',n) and trading_t(c_mkt,t,n)),
39783                  power(
39784                      Q_EMI(c_mkt,t,n) -
39785                      x_admm(c_mkt,t,n) +
39786                      xavg_admm(c_mkt,t) +
39787                      u_admm(c_mkt,t)
39788                  ,2)
39789              ))
39790      ;
39792   
39793  *-------------------------------------------------------------------------------
39795   
39796  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
39798  *-------------------------------------------------------------------------------
39799  * Time
39800  * - Temporal structure
39801  * - Fixed time periods
39802  * - States of the world
39803  *-------------------------------------------------------------------------------
39804   
39806   
39807  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
39809  *-------------------------------------------------------------------------------
39810  * Geographic dimension and mapping with countries
39811  *-------------------------------------------------------------------------------
39812   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
39815  *-------------------------------------------------------------------------------
39816  * Non-Cooperative Setup
39817  *
39818  * Each region is defined as an individual coalition.
39819  *
39820  *-------------------------------------------------------------------------------
39821   
39823   
39824  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
39826  *-------------------------------------------------------------------------------
39827  * Welfare
39828  *-------------------------------------------------------------------------------
39829   
39831   
39832  * Objective function - Welfare to be maximized
39833  equtility_c_usa..
39834      UTILITY =e=
39835   
39836  * Negishi SWF
39838   
39839  * Welfare functions based on CEBGE
39842                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
39843                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
39844                      ((sum(n$map_clt_n('c_usa',n),
39845                        (l(t,n) / sum(nn$map_clt_n('c_usa',nn), l(t,nn))) *
39846                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
39847                       )**(1 / (1 - gamma))
39848                      )**(1 - eta) ) +
39849                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
39850                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
39851                      ((sum(n$map_clt_n('c_usa',n),
39852                        (l(t,n) / sum(nn$map_clt_n('c_usa',nn), l(t,nn))) *
39853                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
39854                       )**(1 / (1 - gamma))
39855                      )**(1 - eta) )
39856                  )**(1/(1 - eta)) * 1e6
39859   
39860   
39861  ;
39862   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
39865  *-------------------------------------------------------------------------------
39866  * Economy
39867  * - Production and Consumption definition
39868  * - Top-level of the production function
39869  * Options:
39870  * --original_ssp=1 : original SSP population and GDP data
39871  *-------------------------------------------------------------------------------
39872   
39874   
39875  * Production
39876  eqq_y_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39877   
39878      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
39879                     ## Climate feedback on economy
39881                     ## Net cost of Primary and Secondary Energy Sources
39882                     - sum(fuel, COST_FUEL(fuel,t,n))
39883                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
39884                     - sum(cce, COST_EMI(cce,t,n))
39885                     ## Carbon tax
39886                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
39887                     ## Additionnal costs on gross product
39888                     - sum(ccy, COST_Y(ccy,t,n))
39889  ;
39890   
39891  * Consumption
39892  eqq_cc_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
39893      Q('cc',t,n) =e= Q('y',t,n)
39894                      ## Investments in goods g (final good, adaptation)
39895                      -sum(g, I(g,t,n))
39896                      ## Investments in r&d
39897                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
39898                      ## Investments in energy technlogies
39899                      -sum(jinv, I_EN(jinv,t,n))
39900                       ## Investments in grid infrastructures
39901                      - I_EN_GRID(t,n)
39902                      ## Investments in extraction sector
39903                      -sum(extract(f), I_OUT(f,t,n))
39904                      ## O&M for energy technlogies
39905                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
39906                      ## O&M for extraction
39907                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
39908                      ## Energy technology penalty costs
39909                      -sum(jpenalty(j), COST_EN(j,t,n))
39910  ;
39911   
39912  * Capital accumulation
39913  eqk_c_usa(g,t,tp1,n)$(map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
39914      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
39915   
39916  * Energy services
39917  eqq_fen_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39918      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
39919   
39920  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
39923  *-------------------------------------------------------------------------------
39924  * Energy sector
39925  *-------------------------------------------------------------------------------
39926   
39928   
39929  *-------------------------------------------------------------------------------
39930  * Production - Energy sector
39931  *-------------------------------------------------------------------------------
39932   
39933  eqq_en_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39934      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
39935   
39936  *-------------------------------------------------------------------------------
39937  * Production - Electrical sector
39938  *-------------------------------------------------------------------------------
39939   
39940  eqq_el_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39941      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
39942   
39943  eqq_el2_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39944      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
39945   
39946  eqq_elffren_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39947      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
39948  eqq_elff_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39949      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
39950   
39951  eqq_ces_el_c_usa(ices_el,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
39952      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
39953  ;
39954   
39955  *-------------------------------------------------------------------------------
39956  * Production - Non-electrical sector
39957  *-------------------------------------------------------------------------------
39958   
39959  eqq_nel_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39960      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
39961   
39962  eqq_nelog_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39963      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
39964  ;
39965  eqq_ces_nelgas_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39966      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
39967   
39968  *-------------------------------------------------------------------------------
39969  * PES and fuels
39970  *-------------------------------------------------------------------------------
39971   
39972  eqq_fuel_c_usa(fuel,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
39973      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
39974   
39975  *-------------------------------------------------------------------------------
39976  * Cost
39977  *-------------------------------------------------------------------------------
39978   
39979  * Net cost of Primary Energy Supplies
39980  eqcost_pes_c_usa(f,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
39981      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
39982                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
39983   
39984  * Net cost of Secondary Energy Supplies
39985  eqcost_ses_c_usa(s,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39986      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
39987   
39988   
39989  *-------------------------------------------------------------------------------
39990  * Market balances
39991  *-------------------------------------------------------------------------------
39992   
39993  eq_mkt_clearing_oil_c_usa(t,'c_usa')$(internal('oil'))..
39994      sum( n$(map_clt_n('c_usa',n) and trading_t('oil',t,n)),
39995          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
39996      ) =e= 0;
39997   
39998  *-------------------------------------------------------------------------------
39999  * New capital in the energy sector
40000  *-------------------------------------------------------------------------------
40001   
40002  * Electrical generation plants (new)
40003  eqk_en_c_usa(jinv,t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
40004      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
40005                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
40006   
40007  *-------------------------------------------------------------------------------
40008  * ENERGY
40009  *-------------------------------------------------------------------------------
40010   
40011  * Capacity limits in the electrical sector
40012  eqq_en_mu_c_usa(jel,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
40013      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
40014   
40015  * Efficiency of energy technology sector
40016  eqq_en_in_c_usa(jfed,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
40017      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
40018                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
40019   
40020  * Energy generation "tree"
40021  eqq_en_tree_c_usa(j,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
40022      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
40023   
40024  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
40027  *-------------------------------------------------------------------------------
40028  * Carbon Emissions
40029  * - Total CO2 emissions and CO2 Fossil fuel and Industry
40030  * - CO2 emission costs
40031  * - GHG permit market
40032  *-------------------------------------------------------------------------------
40033   
40035   
40036  * GHG emission cap
40037  eqq_emi_lim_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
40038      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
40039                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
40040   
40041  ***newcode
40042  eqq_emi_lim_USAc_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n)).. sum(e_cap(e), Q_EMI(e,t,'usa'))$(year(t) ge 2050) =e= 0.001;
40043  ***
40044   
40045  * Compute total and sectoral emissions
40046  eqq_emi_tree_c_usa(t,n,e)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
40047      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
40048   
40049  * Industrial CO2 emissions
40050  eqq_emi_co2ffi_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40051      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
40052                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
40053                              # Emissions from biomass
40054                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
40055                              # Emissions from fuel extraction
40056                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
40057                              # Captured emissions
40058                              sum(sink, Q_EMI(sink,t,n));
40059   
40060  * CO2 emission costs
40061  eqcost_emi_co2_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40062      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
40063   
40064  * Emission permit market clearing for internal market
40065  eq_mkt_clearing_nip_c_usa(c_mkt,t,'c_usa')$(internal(c_mkt))..
40066      sum(n$(map_clt_n('c_usa',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
40067   
40068  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
40071  *-------------------------------------------------------------------------------
40072  * Research & Development
40073  * Options:
40074  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
40075  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
40076  *-------------------------------------------------------------------------------
40077   
40079   
40080  * Knowledge stock accumulation
40081  eqk_rd_c_usa(rd,t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
40082                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
40083                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
40084                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
40085                                        SPILL(rd,t,n)**rd_coef(rd,'d');
40086   
40087  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
40088  eqspill_coop_c_usa(rd,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_usa'))..
40089          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
40090                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_usa',nn)), K_RD(rd,t,nn)) +
40091                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_usa',nn))), K_RD.l(rd,t,nn))
40092                            ) *
40093                            (
40094                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_usa',nn)), K_RD(rd,t,nn)) +
40095                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_usa',nn))), K_RD.l(rd,t,nn))
40096                              ) - K_RD(rd,t,n)
40097                            );
40098   
40099  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
40100  eqspill_lead_c_usa(rd,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_usa')) and leadrd(rd,n))..
40101                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
40102   
40103  * No-cooperation : a follower sees is negative effect on the quantity he can grab
40104  eqspill_foll_c_usa(rd,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_usa')) and (not leadrd(rd,n)))..
40105                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
40106   
40107  *- Only LbR (without learning by doing)
40108  eqmcost_inv_back_c_usa(jrd,t,tt,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
40109                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
40110                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
40111   
40112  *- LbR together with learning by doing ==> Two-factor learning curve
40113  eqmcost_inv_back_lbd_c_usa(jrd,t,tt,tfirst,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
40114                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
40115                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
40116                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
40117   
40118  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
40121  *-------------------------------------------------------------------------------
40122  * Default Climate Policy Implementation
40123  *
40124  * Options:
40125  *    --policy={bau (default),ctax}
40126  *        Implement a climate policy setting
40127  *  [ --scen= ]
40128  *        Policy variant.
40129  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
40130  *          * XXX for a fixed percentage/yr (e.g. 5) growth
40131  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
40132  *  [ --ctax_year=2020 ]
40133  *        Starting year of the carbon tax
40134  *  [ --ctax_initial=30 ]
40135  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
40136  *
40137  *-------------------------------------------------------------------------------
40139   
40140  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
40142  *-------------------------------------------------------------------------------
40143  * Energy efficiency
40144  *-------------------------------------------------------------------------------
40145   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
40148  *-------------------------------------------------------------------------------
40149  * Hydro Power
40150  *-------------------------------------------------------------------------------
40151   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
40154  *-------------------------------------------------------------------------------
40155  * System Integration:
40156  * - Capacity constraint
40157  * - Flexibility constraint
40158  * - Grid Investment
40159  * - Capacity growth constraint
40160  *-------------------------------------------------------------------------------
40161   
40163   
40164   
40165  * Renewable CES
40166   
40167  * Definition of the renewable CES
40168  eqq_elintren_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40169      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
40170   
40171  * Capacity constraint
40172   
40174  eqfirm_capacity_c_usa(t,n)$(map_clt_n('c_usa',n) and (not tfix(t)) and year(t) gt 2005)..
40175                   sum(jel_firm, K_EN(jel_firm,t,n))
40176                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
40177                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
40178                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
40179                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
40180                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
40181                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
40182                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
40183                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
40184                                       ) / yearly_hours
40185  ;
40187   
40188  * Flexibility constraint
40189  eqflex_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40190          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
40191                             ( Q_EN('el',t,n) -
40192                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
40193                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
40194                             ) * flex_coeff('load')
40195  ;
40196   
40197  * Grid
40198   
40199  ** Grid depreciation and investments
40200  eqk_en_grid_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
40201                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
40202                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
40203   
40204  ** Grid adjustment to power capacity
40205  eqk_en_grid_to_k_en_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40206                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
40207                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
40208                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
40209                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
40210                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
40211                                     ) / grid_cost +
40212                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
40213                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
40214                                      K_EN('elcsp',t,n);
40215  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
40216   
40217  * Capacity growth constraint
40218  eqcap_growth_c_usa(jinv,t,tp1,tp2,n)$((map_clt_n('c_usa',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
40219                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
40220                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
40221   
40222  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
40225  *-------------------------------------------------------------------------------
40226  * Nuclear power plants
40227  *-------------------------------------------------------------------------------
40228   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
40231  *-------------------------------------------------------------------------------
40232  * GHG module
40233  * - CH4 FFI + CH4 waste + CH4 open fires
40234  * - N2O FFI + N2O waste + N2O open fires
40235  *-------------------------------------------------------------------------------
40236   
40238   
40239  * CH4, N2O waste emissions
40240  eqq_emi_waste_c_usa(waste,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
40241                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
40242   
40243  * n2o FFI
40244  eqq_emi_n2o_ffi_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
40245    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
40246                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
40247                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
40248                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
40249                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
40250                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
40251                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
40252                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
40253                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
40254                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
40255                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
40256                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
40257                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
40258                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
40259                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
40260                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
40261                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
40262                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
40263                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
40264                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
40265                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
40266                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
40267                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
40268                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
40269                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
40270                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
40271                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
40272                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
40273                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
40274                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
40275                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
40276   
40277  * ch4 FFI
40278  eqq_emi_ch4_ffi_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
40279    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
40282  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
40283  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
40284                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
40285                             smax(tt$(year(tt) eq 2015),
40286                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
40289  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
40290  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
40291                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
40292   
40293  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
40296  *-------------------------------------------------------------------------------
40297  * F-gases
40298  * - LLF
40299  * - SLF
40300  *-------------------------------------------------------------------------------
40301   
40303   
40304  * F-gases emissions
40305  eqq_emi_fgases_c_usa(fgases,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
40306                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
40307   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
40310  *-------------------------------------------------------------------------------
40311  * Landuse [simplified version of the land-use model]
40312  *-------------------------------------------------------------------------------
40313   
40315   
40316  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
40317  eq_wbio_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40318      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
40319   
40321  * Cost of all woody biomass produced for advanced biofuels and woody biomass
40322  eqcost_pes_wbio_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40323      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
40325   
40326  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
40329  *-------------------------------------------------------------------------------
40330  * Bioenergy power plant
40331  *-------------------------------------------------------------------------------
40332   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
40335  *-------------------------------------------------------------------------------
40336  * Traditional Biofuels
40337  * - Requires the precedence of mod_landuse
40338  *-------------------------------------------------------------------------------
40339   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
40342  *-------------------------------------------------------------------------------
40343  * Advanced biofuel
40344  * - Require the precedence of mod_landuse
40345  *-------------------------------------------------------------------------------
40346   
40348   
40349  * Limitations for nel backstops
40350  eqq_en_lim_advbiofuel_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
40351               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
40352               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
40353   
40354  * Peculiarity of advbiofuel
40355  eqmcost_fuel_advbiofuel_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40356                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
40357   
40358  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
40361  *-------------------------------------------------------------------------------
40362  * Carbon Capture and Sequestration
40363  *-------------------------------------------------------------------------------
40364   
40366   
40367  eqq_emi_ccs_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40368                  Q_EMI('ccs_plant',t,n) =e=
40369                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
40370                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
40371  ;
40372   
40373  eqcost_emi_sinks_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40374                  COST_EMI('ccs_plant',t,n) =e=
40375                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
40376                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
40377  ;
40378   
40379  eq_stor_ccs_cum_c_usa(ccs_stor,tp1,t,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
40380                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
40381  ;
40382   
40383  eq_emi_stor_ccs_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40384                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
40385  ;
40386   
40387  eq_emi_leak_ccs_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40388                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
40389   
40390  *-------------------------------------------------------------------------------
40392   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
40394  *-------------------------------------------------------------------------------
40395  * Coal for non-electric sectors
40396  * - Coke Plants
40397  * - Industrial and Commercial combined-heat-and-power (CHP)
40398  * - Others
40399  *-------------------------------------------------------------------------------
40400   
40402   
40403  eqcost_en_nelcoal_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40404           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
40405                                          nelcoal_max_abat(t,n) *
40406                                          (nelcoal_cmac(n,'a') *
40407                                            Q_EN('nelcoalabat',t,n) /
40408                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
40409                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
40410                                              (exp(nelcoal_cmac(n,'c') *
40411                                                (Q_EN('nelcoalabat',t,n)/
40412                                                  (nelcoal_max_abat(t,n) *
40413                                                      nelcoal_baseline(t,n))
40414                                                  ) - 1 )
40415                                              )
40416                                          );
40417   
40418  eqq_ncoalabat_monotone_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
40419          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
40420   
40421  * ensure Q_EN is lower than K_EN for CCS as not in jel
40422  eqq_en_nelcoalccs_max_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40423          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
40424   
40425  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
40428  *-------------------------------------------------------------------------------
40429  * Wind energy module
40430  * - onshore and offshore
40431  *-------------------------------------------------------------------------------
40432   
40434   
40435  * Capacity limits in the wind onshore electrical sector
40436  eqq_en_mu_windon_c_usa(wind_dist,wind_class,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
40437      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
40438   
40439  * Capacity limits in the wind offshore electrical sector
40440  eqq_en_mu_windoff_c_usa(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
40441      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
40442   
40443  * Wind onshore electrical generation plants (new)
40444  eqk_en_windon_c_usa(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
40445      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
40446                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
40447   
40448  * Wind offshore electrical generation plants (new)
40449  eqk_en_windoff_c_usa(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
40450      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
40451                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
40452   
40453  * Total onshore wind energy production
40454  eqq_en_windon_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40455                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
40456   
40457  * Total offshore wind energy production
40458  eqq_en_windoff_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40459                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
40460   
40461  * Total onshore wind capacity
40462  eqk_en_windon_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40463                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
40464   
40465  * Total offshore wind capacity
40466  eqk_en_windoff_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40467                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
40468   
40469  * Total onshore wind investment
40470  eqi_en_windon_sum_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
40471                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
40472   
40473  * Total offshore wind investment
40474  eqi_en_windoff_sum_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
40475                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
40476   
40477  *-------------------------------------------------------------------------------
40479   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
40481  *-------------------------------------------------------------------------------
40482  * Solar Powerplants (PV and CSP) to the electrical system
40483  *-------------------------------------------------------------------------------
40484   
40485  *-------------------------------------------------------------------------------
40487   
40488   
40489  * Capacity limits in the pv electrical sector
40490  eqq_en_mu_pv_c_usa(solar_dist,solar_class,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
40491                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
40492   
40493  * Capacity limits in the csp electrical sector
40494  eqq_en_mu_csp_c_usa(solar_dist,solar_class,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
40495                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
40496   
40497  * PV electrical generation plants (new)
40498  eqk_en_pv_c_usa(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
40499                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
40500                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
40501   
40502  * CSP electrical generation plants (new)
40503  eqk_en_csp_c_usa(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
40504                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
40505                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
40506   
40507  * Total PV energy production
40508  eqq_en_pv_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40509                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
40510   
40511  * Total CSP energy production
40512  eqq_en_csp_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40513                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
40514   
40515  * Total PV capacity
40516  eqk_en_pv_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40517                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
40518   
40519  * Total CSP capacity
40520  eqk_en_csp_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40521                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
40522   
40523  * Total PV investment
40524  eqi_en_pv_sum_c_usa(t,tp1,n)$(map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
40525                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
40526   
40527  * Total CSP investment
40528  eqi_en_csp_sum_c_usa(t,tp1,n)$(map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
40529                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
40530   
40531  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
40532  eqk_en_solar_comp_c_usa(t,n,solar_dist)$(map_clt_n('c_usa',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
40533                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
40534                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
40535   
40536   
40537   
40538  *-------------------------------------------------------------------------------
40540   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
40542  *-------------------------------------------------------------------------------
40543  * Technology development scenarios
40544  *-------------------------------------------------------------------------------
40545   
40547   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
40549  *-------------------------------------------------------------------------------
40550  * Oil Extraction
40551  * Options:
40552  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
40553  *-------------------------------------------------------------------------------
40554   
40556   
40557  * Capacity
40558  eqoilcap_c_usa(t,tp1,n,oilg)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
40559      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
40560   
40561  * Production
40562  eqoilprod_c_usa(t,tp1,n,oilg)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
40563      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
40564   
40565  eqq_out_oil_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40566      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
40567   
40568  * Cumulative production
40569  eqcum_oil_c_usa(t,tp1,n,oilg)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
40570      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
40571   
40572  * Cost
40573  eqcost_oil_c_usa(t,tp1,n,oilg)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
40574      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
40575                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
40576                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
40577   
40578  * Investments
40579  eqi_oil_c_usa(t,tp1,n,oilg)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
40580      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
40581   
40582  * Total investment
40583  eqi_out_oil_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
40584      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
40585   
40586  * Emissions
40587  eqq_emi_out_oil_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40588      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
40589   
40590  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
40593  *-------------------------------------------------------------------------------
40594  * Uranium Resources
40595  *-------------------------------------------------------------------------------
40596   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
40599  *-------------------------------------------------------------------------------
40600  * Gas Resources
40601  *-------------------------------------------------------------------------------
40602   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
40605  *-------------------------------------------------------------------------------
40606  * Coal Resources
40607  *-------------------------------------------------------------------------------
40608   
40610   
40611   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
40613  *-------------------------------------------------------------------------------
40614  * Climate
40615  *
40616  * Represents the climate
40617  * - based on the DICE model equations
40618  * - Radiative forcing for non CO2 ghgs
40619  * - parameters calibrated to reproduce MAGICC6.4 default response
40620  *
40621  *  Options:
40622  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
40623  * - $setglobal cooperate_on_climate {'YES','NO'}
40624  * - 'YES'(default): Countries within a coalition act in cooperation
40625  *   'NO': Countries within a coalition act individually
40626  *
40627  *-------------------------------------------------------------------------------
40628   
40630   
40632   
40633  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
40636  *-------------------------------------------------------------------------------
40637  * Long-run Damages from Climate Change
40638  * - Economic impacts
40639  * - Adaptation
40640  *-------------------------------------------------------------------------------
40641   
40643   
40645   
40646  *-------------------------------------------------------------------------------
40648   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
40650  *-------------------------------------------------------------------------------
40651  * Light-duty Vehicles for Personal Transport
40652  *-------------------------------------------------------------------------------
40653   
40655   
40656  *** newcode
40657  eqq_inv_red_ban_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40658      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
40659   
40660  ***
40661  *- Number of light duty vehicles
40662  eqnb_veh_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40663      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
40664   
40665  *- Yearly energy demand of vehicles
40666  eqq_en_veh_c_usa(jveh,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40667      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
40668   
40669  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
40670  eqq_el_edv_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40671      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
40672   
40673  *- Investment cost for hybrid vehicles
40674  eqmcost_inv_hybrid_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
40675                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
40676   
40677  *- Investment cost for plug-in hybrid vehicles
40678  eqmcost_inv_plghybrid_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
40679                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
40680   
40681  *- Investment cost for electric drive vehicles
40682  eqmcost_inv_edv_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
40683                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
40684   
40685  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
40688  *-------------------------------------------------------------------------------
40689  * Road Freight Transport
40690  *-------------------------------------------------------------------------------
40692   
40693  *-  Number of freight vehicles
40694  eqnb_frtveh_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40695                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
40696   
40697  *-  Yearly fuel consumption of freight vehicles
40698  eqq_en_frtveh_c_usa(jfrt,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40699                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
40700   
40701  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
40702  eqq_el_frtedv_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40703                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
40704   
40705  *-  Investment cost for hbd_stfr vehicle
40706  eqmcost_inv_hbd_stfr_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
40707                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
40708   
40709  *-  Investment cost for plug-in hbd_stfr vehicle
40710  eqmcost_inv_plghbd_stfr_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
40711                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
40712   
40713  *-  Investment cost for electric drive vehicle
40714  eqmcost_inv_edv_stfr_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
40715                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
40716   
40717  *-------------------------------------------------------------------------------
40719   
40720   
40721   
40722   
40723   
40724   
40725  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
40727  *-------------------------------------------------------------------------------
40728  * Traditional Biomass
40729  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
40730  *  - require post_process to be launch before
40731  *-------------------------------------------------------------------------------
40732   
40734   
40735  * Optional modules
40736   
40737  * Policy modules
40738   
40739  * Calibration
40742   
40743   
40744  model witch_c_usa /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
40746  *-------------------------------------------------------------------------------
40747  * Call modules by order
40748  *-------------------------------------------------------------------------------
40752   
40753  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
40755  *-------------------------------------------------------------------------------
40756  * Algorithm
40757  *-------------------------------------------------------------------------------
40758   
40760   
40761  eqobj_c_usa
40762   
40763  *-------------------------------------------------------------------------------
40765   
40766  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
40768  *-------------------------------------------------------------------------------
40769  * Time
40770  * - Temporal structure
40771  * - Fixed time periods
40772  * - States of the world
40773  *-------------------------------------------------------------------------------
40774   
40776   
40777  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
40779  *-------------------------------------------------------------------------------
40780  * Geographic dimension and mapping with countries
40781  *-------------------------------------------------------------------------------
40782   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
40785  *-------------------------------------------------------------------------------
40786  * Non-Cooperative Setup
40787  *
40788  * Each region is defined as an individual coalition.
40789  *
40790  *-------------------------------------------------------------------------------
40791   
40793   
40794  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
40796  *-------------------------------------------------------------------------------
40797  * Welfare
40798  *-------------------------------------------------------------------------------
40799   
40801   
40802  equtility_c_usa
40803   
40804  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
40807  *-------------------------------------------------------------------------------
40808  * Economy
40809  * - Production and Consumption definition
40810  * - Top-level of the production function
40811  * Options:
40812  * --original_ssp=1 : original SSP population and GDP data
40813  *-------------------------------------------------------------------------------
40814   
40816   
40817  eqk_c_usa
40818  eqq_cc_c_usa
40819  eqq_fen_c_usa
40820  eqq_y_c_usa
40821   
40822  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
40825  *-------------------------------------------------------------------------------
40826  * Energy sector
40827  *-------------------------------------------------------------------------------
40828   
40830   
40831  eq_mkt_clearing_oil_c_usa
40832  eqcost_pes_c_usa
40833  eqcost_ses_c_usa
40834  eqk_en_c_usa
40835  eqq_ces_el_c_usa
40836  eqq_ces_nelgas_c_usa
40837  eqq_el2_c_usa
40838  eqq_el_c_usa
40839  eqq_elff_c_usa
40840  eqq_en_c_usa
40841  eqq_en_in_c_usa
40842  eqq_en_mu_c_usa
40843  eqq_en_tree_c_usa
40844  eqq_nel_c_usa
40845  eqq_nelog_c_usa
40846  eqq_fuel_c_usa
40847  eqq_elffren_c_usa
40848   
40849  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
40852  *-------------------------------------------------------------------------------
40853  * Carbon Emissions
40854  * - Total CO2 emissions and CO2 Fossil fuel and Industry
40855  * - CO2 emission costs
40856  * - GHG permit market
40857  *-------------------------------------------------------------------------------
40858   
40860   
40861  eqq_emi_lim_c_usa
40862  ***newcode
40863  eqq_emi_lim_USAc_usa
40864  ***
40865  eqq_emi_tree_c_usa
40866  eqq_emi_co2ffi_c_usa
40867   
40868  eqcost_emi_co2_c_usa
40869   
40870  eq_mkt_clearing_nip_c_usa
40871   
40872  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
40875  *-------------------------------------------------------------------------------
40876  * Research & Development
40877  * Options:
40878  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
40879  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
40880  *-------------------------------------------------------------------------------
40881   
40883   
40884  eqk_rd_c_usa
40885  eqspill_coop_c_usa
40886  eqspill_lead_c_usa
40887  eqspill_foll_c_usa
40888  eqmcost_inv_back_c_usa
40889  eqmcost_inv_back_lbd_c_usa
40890   
40891  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
40894  *-------------------------------------------------------------------------------
40895  * Default Climate Policy Implementation
40896  *
40897  * Options:
40898  *    --policy={bau (default),ctax}
40899  *        Implement a climate policy setting
40900  *  [ --scen= ]
40901  *        Policy variant.
40902  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
40903  *          * XXX for a fixed percentage/yr (e.g. 5) growth
40904  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
40905  *  [ --ctax_year=2020 ]
40906  *        Starting year of the carbon tax
40907  *  [ --ctax_initial=30 ]
40908  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
40909  *
40910  *-------------------------------------------------------------------------------
40912   
40913  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
40915  *-------------------------------------------------------------------------------
40916  * Energy efficiency
40917  *-------------------------------------------------------------------------------
40918   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
40921  *-------------------------------------------------------------------------------
40922  * Hydro Power
40923  *-------------------------------------------------------------------------------
40924   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
40927  *-------------------------------------------------------------------------------
40928  * System Integration:
40929  * - Capacity constraint
40930  * - Flexibility constraint
40931  * - Grid Investment
40932  * - Capacity growth constraint
40933  *-------------------------------------------------------------------------------
40934   
40936   
40937  eqq_elintren_c_usa
40938  eqflex_c_usa
40939  eqk_en_grid_c_usa
40940  eqk_en_grid_to_k_en_c_usa
40941  eqfirm_capacity_c_usa
40942  eqcap_growth_c_usa
40943   
40944  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
40947  *-------------------------------------------------------------------------------
40948  * Nuclear power plants
40949  *-------------------------------------------------------------------------------
40950   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
40953  *-------------------------------------------------------------------------------
40954  * GHG module
40955  * - CH4 FFI + CH4 waste + CH4 open fires
40956  * - N2O FFI + N2O waste + N2O open fires
40957  *-------------------------------------------------------------------------------
40958   
40960   
40961  eqq_emi_waste_c_usa
40962  eqq_emi_n2o_ffi_c_usa
40963  eqq_emi_ch4_ffi_c_usa
40964   
40965  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
40968  *-------------------------------------------------------------------------------
40969  * F-gases
40970  * - LLF
40971  * - SLF
40972  *-------------------------------------------------------------------------------
40973   
40975   
40976  eqq_emi_fgases_c_usa
40977   
40978  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
40981  *-------------------------------------------------------------------------------
40982  * Landuse [simplified version of the land-use model]
40983  *-------------------------------------------------------------------------------
40984   
40986   
40987  eq_wbio_c_usa
40988  eqcost_pes_wbio_c_usa
40989   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
40992  *-------------------------------------------------------------------------------
40993  * Bioenergy power plant
40994  *-------------------------------------------------------------------------------
40995   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
40998  *-------------------------------------------------------------------------------
40999  * Traditional Biofuels
41000  * - Requires the precedence of mod_landuse
41001  *-------------------------------------------------------------------------------
41002   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
41005  *-------------------------------------------------------------------------------
41006  * Advanced biofuel
41007  * - Require the precedence of mod_landuse
41008  *-------------------------------------------------------------------------------
41009   
41011   
41012  eqq_en_lim_advbiofuel_c_usa
41013  eqmcost_fuel_advbiofuel_c_usa
41014   
41015  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
41018  *-------------------------------------------------------------------------------
41019  * Carbon Capture and Sequestration
41020  *-------------------------------------------------------------------------------
41021   
41023   
41024  eqq_emi_ccs_c_usa
41025  eqcost_emi_sinks_c_usa
41026  eq_stor_ccs_cum_c_usa
41027  eq_emi_stor_ccs_c_usa
41028  eq_emi_leak_ccs_c_usa
41029   
41030  *-------------------------------------------------------------------------------
41032   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
41034  *-------------------------------------------------------------------------------
41035  * Coal for non-electric sectors
41036  * - Coke Plants
41037  * - Industrial and Commercial combined-heat-and-power (CHP)
41038  * - Others
41039  *-------------------------------------------------------------------------------
41040   
41042   
41043  eqcost_en_nelcoal_c_usa
41044  eqq_ncoalabat_monotone_c_usa
41045  eqq_en_nelcoalccs_max_c_usa
41046   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
41049  *-------------------------------------------------------------------------------
41050  * Wind energy module
41051  * - onshore and offshore
41052  *-------------------------------------------------------------------------------
41053   
41055   
41056  eqq_en_mu_windon_c_usa
41057  eqq_en_mu_windoff_c_usa
41058  eqk_en_windon_c_usa
41059  eqk_en_windoff_c_usa
41060  eqq_en_windon_sum_c_usa
41061  eqq_en_windoff_sum_c_usa
41062  eqk_en_windon_sum_c_usa
41063  eqk_en_windoff_sum_c_usa
41064  eqi_en_windon_sum_c_usa
41065  eqi_en_windoff_sum_c_usa
41066   
41068   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
41070  *-------------------------------------------------------------------------------
41071  * Solar Powerplants (PV and CSP) to the electrical system
41072  *-------------------------------------------------------------------------------
41073   
41074  *-------------------------------------------------------------------------------
41076   
41077  eqq_en_mu_pv_c_usa
41078  eqq_en_mu_csp_c_usa
41079  eqk_en_pv_c_usa
41080  eqk_en_csp_c_usa
41081  eqq_en_pv_sum_c_usa
41082  eqq_en_csp_sum_c_usa
41083  eqk_en_pv_sum_c_usa
41084  eqk_en_csp_sum_c_usa
41085  eqi_en_pv_sum_c_usa
41086  eqi_en_csp_sum_c_usa
41087  eqk_en_solar_comp_c_usa
41088   
41089  *-------------------------------------------------------------------------------
41091   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
41093  *-------------------------------------------------------------------------------
41094  * Technology development scenarios
41095  *-------------------------------------------------------------------------------
41096   
41098   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
41100  *-------------------------------------------------------------------------------
41101  * Oil Extraction
41102  * Options:
41103  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
41104  *-------------------------------------------------------------------------------
41105   
41107   
41108  eqoilcap_c_usa
41109  eqoilprod_c_usa
41110  eqq_out_oil_c_usa
41111  eqcum_oil_c_usa
41112  eqcost_oil_c_usa
41113  eqi_oil_c_usa
41114  eqi_out_oil_c_usa
41115  eqq_emi_out_oil_c_usa
41116   
41117  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
41120  *-------------------------------------------------------------------------------
41121  * Uranium Resources
41122  *-------------------------------------------------------------------------------
41123   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
41126  *-------------------------------------------------------------------------------
41127  * Gas Resources
41128  *-------------------------------------------------------------------------------
41129   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
41132  *-------------------------------------------------------------------------------
41133  * Coal Resources
41134  *-------------------------------------------------------------------------------
41135   
41137   
41138   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
41140  *-------------------------------------------------------------------------------
41141  * Climate
41142  *
41143  * Represents the climate
41144  * - based on the DICE model equations
41145  * - Radiative forcing for non CO2 ghgs
41146  * - parameters calibrated to reproduce MAGICC6.4 default response
41147  *
41148  *  Options:
41149  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
41150  * - $setglobal cooperate_on_climate {'YES','NO'}
41151  * - 'YES'(default): Countries within a coalition act in cooperation
41152  *   'NO': Countries within a coalition act individually
41153  *
41154  *-------------------------------------------------------------------------------
41155   
41157   
41159   
41160  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
41163  *-------------------------------------------------------------------------------
41164  * Long-run Damages from Climate Change
41165  * - Economic impacts
41166  * - Adaptation
41167  *-------------------------------------------------------------------------------
41168   
41170   
41172   
41173  *-------------------------------------------------------------------------------
41175   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
41177  *-------------------------------------------------------------------------------
41178  * Light-duty Vehicles for Personal Transport
41179  *-------------------------------------------------------------------------------
41180   
41182   
41183  eqnb_veh_c_usa
41184  eqq_en_veh_c_usa
41185  eqq_el_edv_c_usa
41186  eqmcost_inv_hybrid_c_usa
41187  eqmcost_inv_plghybrid_c_usa
41188  eqmcost_inv_edv_c_usa
41189  *** newcode
41190  eqq_inv_red_ban_c_usa
41191  ***
41192  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
41195  *-------------------------------------------------------------------------------
41196  * Road Freight Transport
41197  *-------------------------------------------------------------------------------
41199   
41200  eqnb_frtveh_c_usa
41201  eqq_en_frtveh_c_usa
41202  eqq_el_frtedv_c_usa
41203  eqmcost_inv_hbd_stfr_c_usa
41204  eqmcost_inv_plghbd_stfr_c_usa
41205  eqmcost_inv_edv_stfr_c_usa
41206   
41207  *-------------------------------------------------------------------------------
41209   
41210   
41211   
41212   
41213   
41214   
41215  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
41217  *-------------------------------------------------------------------------------
41218  * Traditional Biomass
41219  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
41220  *  - require post_process to be launch before
41221  *-------------------------------------------------------------------------------
41222   
41224   
41225  * Optional modules
41226   
41227  * Policy modules
41228   
41229  * Calibration
41232  /;
41233   
41234  witch_c_usa.optfile=1;   # the option file solvername.opt is to be used
41235  witch_c_usa.holdfixed=1; # treat fixed values as constant
41236  witch_c_usa.scaleopt=1;  # Use scaling for better gradients estimation
41237  witch_c_usa.solvelink=3; # Use parallel or sequential solving
41238   
41243   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\forsameclt.gms
41245  $macro forsameclt(action,clt) \
41248    if(sameas(&clt,'c_brazil'), &action(c_brazil)); \
41253    if(sameas(&clt,'c_canada'), &action(c_canada)); \
41258    if(sameas(&clt,'c_china'), &action(c_china)); \
41263    if(sameas(&clt,'c_europe'), &action(c_europe)); \
41268    if(sameas(&clt,'c_india'), &action(c_india)); \
41273    if(sameas(&clt,'c_indonesia'), &action(c_indonesia)); \
41278    if(sameas(&clt,'c_jpnkor'), &action(c_jpnkor)); \
41283    if(sameas(&clt,'c_laca'), &action(c_laca)); \
41288    if(sameas(&clt,'c_mena'), &action(c_mena)); \
41293    if(sameas(&clt,'c_mexico'), &action(c_mexico)); \
41298    if(sameas(&clt,'c_oceania'), &action(c_oceania)); \
41303    if(sameas(&clt,'c_sasia'), &action(c_sasia)); \
41308    if(sameas(&clt,'c_seasia'), &action(c_seasia)); \
41313    if(sameas(&clt,'c_southafrica'), &action(c_southafrica)); \
41318    if(sameas(&clt,'c_ssa'), &action(c_ssa)); \
41323    if(sameas(&clt,'c_te'), &action(c_te)); \
41328    if(sameas(&clt,'c_usa'), &action(c_usa)); \
41333  ;
41334   
41335  *-------------------------------------------------------------------------------
41336  * Main loop
41337  *-------------------------------------------------------------------------------
41338   
41339  stop_run = 0;
41340  count_run = 1;
41341  loop(to_run(run)$(stop_run eq 0),
41342   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
41344  *-------------------------------------------------------------------------------
41345  * Report model progress
41346  *-------------------------------------------------------------------------------
41347   
41349   
41351   
41352  put errdat;
41353  * Horizontal separator with run text
41354  put '>' run.tl:3 ;
41355  put ' ----';
41356  loop(ierr,
41357      put '---------';
41358  );
41359  loop(timeiterrep,
41360      put '----------';
41361  );
41362  put /;
41363  putclose errdat;
41364   
41366   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
41368  *-------------------------------------------------------------------------------
41369  * Call modules by order
41370  *-------------------------------------------------------------------------------
41374   
41375  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
41377  *-------------------------------------------------------------------------------
41378  * Algorithm
41379  *-------------------------------------------------------------------------------
41380   
41382   
41383  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
41385  *-------------------------------------------------------------------------------
41386  * Time
41387  * - Temporal structure
41388  * - Fixed time periods
41389  * - States of the world
41390  *-------------------------------------------------------------------------------
41391   
41393   
41394  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
41396  *-------------------------------------------------------------------------------
41397  * Geographic dimension and mapping with countries
41398  *-------------------------------------------------------------------------------
41399   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
41402  *-------------------------------------------------------------------------------
41403  * Non-Cooperative Setup
41404  *
41405  * Each region is defined as an individual coalition.
41406  *
41407  *-------------------------------------------------------------------------------
41408   
41410   
41411  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
41413  *-------------------------------------------------------------------------------
41414  * Welfare
41415  *-------------------------------------------------------------------------------
41416   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
41419  *-------------------------------------------------------------------------------
41420  * Economy
41421  * - Production and Consumption definition
41422  * - Top-level of the production function
41423  * Options:
41424  * --original_ssp=1 : original SSP population and GDP data
41425  *-------------------------------------------------------------------------------
41426   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
41429  *-------------------------------------------------------------------------------
41430  * Energy sector
41431  *-------------------------------------------------------------------------------
41432   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
41435  *-------------------------------------------------------------------------------
41436  * Carbon Emissions
41437  * - Total CO2 emissions and CO2 Fossil fuel and Industry
41438  * - CO2 emission costs
41439  * - GHG permit market
41440  *-------------------------------------------------------------------------------
41441   
41443   
41444  Q_EMI.up(c_mkt,t,n)$((not tfix(t)) and (trading_t(c_mkt,t,n))) = 15;
41445  Q_EMI.lo(c_mkt,t,n)$((not tfix(t)) and (trading_t(c_mkt,t,n))) = -15;
41446  Q_EMI.fx(c_mkt,t,n)$((not tfix(t)) and (not trading_t(c_mkt,t,n))) = 0;
41447   
41448  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
41451  *-------------------------------------------------------------------------------
41452  * Research & Development
41453  * Options:
41454  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
41455  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
41456  *-------------------------------------------------------------------------------
41457   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
41460  *-------------------------------------------------------------------------------
41461  * Default Climate Policy Implementation
41462  *
41463  * Options:
41464  *    --policy={bau (default),ctax}
41465  *        Implement a climate policy setting
41466  *  [ --scen= ]
41467  *        Policy variant.
41468  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
41469  *          * XXX for a fixed percentage/yr (e.g. 5) growth
41470  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
41471  *  [ --ctax_year=2020 ]
41472  *        Starting year of the carbon tax
41473  *  [ --ctax_initial=30 ]
41474  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
41475  *
41476  *-------------------------------------------------------------------------------
41478   
41479  internal_clt(c_mkt,clt)$(internal(c_mkt) and (sum((t,n)$(map_clt_n(clt,n) and trading_t(c_mkt,t,n)),1) ge 1)) = yes;
41480  internal_clt(f_mkt,clt)$(internal(f_mkt) and (sum((t,n)$(map_clt_n(clt,n) and trading_t(f_mkt,t,n)),1) ge 1)) = yes;
41481   
41482  trading_t(c_mkt,t,n) = yes$(trading_t(c_mkt,t,n) and (not tfix(t)));
41483   
41484  * By default no trading -> no cap, if t_cap was not set
41485  if(card(t_cap) eq 0,
41486    t_cap(t,n) = yes$(sum(c_mkt$trading_t(c_mkt,t,n),1));
41487  );
41488   
41490   
41491  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
41493  *-------------------------------------------------------------------------------
41494  * Energy efficiency
41495  *-------------------------------------------------------------------------------
41496   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
41499  *-------------------------------------------------------------------------------
41500  * Hydro Power
41501  *-------------------------------------------------------------------------------
41502   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
41505  *-------------------------------------------------------------------------------
41506  * System Integration:
41507  * - Capacity constraint
41508  * - Flexibility constraint
41509  * - Grid Investment
41510  * - Capacity growth constraint
41511  *-------------------------------------------------------------------------------
41512   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
41515  *-------------------------------------------------------------------------------
41516  * Nuclear power plants
41517  *-------------------------------------------------------------------------------
41518   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
41521  *-------------------------------------------------------------------------------
41522  * GHG module
41523  * - CH4 FFI + CH4 waste + CH4 open fires
41524  * - N2O FFI + N2O waste + N2O open fires
41525  *-------------------------------------------------------------------------------
41526   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
41529  *-------------------------------------------------------------------------------
41530  * F-gases
41531  * - LLF
41532  * - SLF
41533  *-------------------------------------------------------------------------------
41534   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
41537  *-------------------------------------------------------------------------------
41538  * Landuse [simplified version of the land-use model]
41539  *-------------------------------------------------------------------------------
41540   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
41543  *-------------------------------------------------------------------------------
41544  * Bioenergy power plant
41545  *-------------------------------------------------------------------------------
41546   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
41549  *-------------------------------------------------------------------------------
41550  * Traditional Biofuels
41551  * - Requires the precedence of mod_landuse
41552  *-------------------------------------------------------------------------------
41553   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
41556  *-------------------------------------------------------------------------------
41557  * Advanced biofuel
41558  * - Require the precedence of mod_landuse
41559  *-------------------------------------------------------------------------------
41560   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
41563  *-------------------------------------------------------------------------------
41564  * Carbon Capture and Sequestration
41565  *-------------------------------------------------------------------------------
41566   
41568   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
41570  *-------------------------------------------------------------------------------
41571  * Coal for non-electric sectors
41572  * - Coke Plants
41573  * - Industrial and Commercial combined-heat-and-power (CHP)
41574  * - Others
41575  *-------------------------------------------------------------------------------
41576   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
41579  *-------------------------------------------------------------------------------
41580  * Wind energy module
41581  * - onshore and offshore
41582  *-------------------------------------------------------------------------------
41583   
41585   
41586  wcum(jreal_wind,tfirst) = sum(n,K_EN.l(jreal_wind,tfirst,n));
41587   
41588  *-------------------------------------------------------------------------------
41590   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
41592  *-------------------------------------------------------------------------------
41593  * Solar Powerplants (PV and CSP) to the electrical system
41594  *-------------------------------------------------------------------------------
41595   
41596  *-------------------------------------------------------------------------------
41598   
41599  wcum(jreal_solar,tfirst) = sum(n,K_EN.l(jreal_solar,tfirst,n));
41600   
41601  *-------------------------------------------------------------------------------
41603   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
41605  *-------------------------------------------------------------------------------
41606  * Technology development scenarios
41607  *-------------------------------------------------------------------------------
41608   
41610   
41611  if(tech_scen('nuclear')= low,
41612  MCOST_INV.fx('elnuclear_new',t,n)$((not tfix(t)) and (year(t) ge 2015)) = mcost_inv0('elnuclear_new',n)*(1+tech_cost_var)**(tlen(t)*(tperiod(t)-2));
41613  );
41614   
41615  if(tech_scen('nuclear')= high_oecd,
41616  MCOST_INV.fx('elnuclear_new',t,oecd)$((not tfix(t)) and (year(t) ge 2015)) = mcost_inv0('elnuclear_new',oecd)*(1-tech_cost_var)**(tlen(t)*(tperiod(t)-2));
41617  );
41618   
41619  if(tech_scen('nuclear')= high_non_oecd,
41620  MCOST_INV.fx('elnuclear_new',t,non_oecd)$((not tfix(t)) and (year(t) ge 2015)) = mcost_inv0('elnuclear_new',non_oecd)*(1-tech_cost_var)**(tlen(t)*(tperiod(t)-2));
41621  );
41622   
41623  * Additional SSP specificities
41624  * For SSP5, disable nelback
41626   
41627  * For SSP5, disable Energy RnD
41629   
41631   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
41633  *-------------------------------------------------------------------------------
41634  * Oil Extraction
41635  * Options:
41636  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
41637  *-------------------------------------------------------------------------------
41638   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
41641  *-------------------------------------------------------------------------------
41642  * Uranium Resources
41643  *-------------------------------------------------------------------------------
41644   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
41647  *-------------------------------------------------------------------------------
41648  * Gas Resources
41649  *-------------------------------------------------------------------------------
41650   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
41653  *-------------------------------------------------------------------------------
41654  * Coal Resources
41655  *-------------------------------------------------------------------------------
41656   
41658   
41659   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
41661  *-------------------------------------------------------------------------------
41662  * Climate
41663  *
41664  * Represents the climate
41665  * - based on the DICE model equations
41666  * - Radiative forcing for non CO2 ghgs
41667  * - parameters calibrated to reproduce MAGICC6.4 default response
41668  *
41669  *  Options:
41670  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
41671  * - $setglobal cooperate_on_climate {'YES','NO'}
41672  * - 'YES'(default): Countries within a coalition act in cooperation
41673  *   'NO': Countries within a coalition act individually
41674  *
41675  *-------------------------------------------------------------------------------
41676   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
41679  *-------------------------------------------------------------------------------
41680  * Long-run Damages from Climate Change
41681  * - Economic impacts
41682  * - Adaptation
41683  *-------------------------------------------------------------------------------
41684   
41686   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
41688  *-------------------------------------------------------------------------------
41689  * Light-duty Vehicles for Personal Transport
41690  *-------------------------------------------------------------------------------
41691   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
41694  *-------------------------------------------------------------------------------
41695  * Road Freight Transport
41696  *-------------------------------------------------------------------------------
41698   
41699   
41700   
41701   
41702   
41703   
41704  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
41706  *-------------------------------------------------------------------------------
41707  * Traditional Biomass
41708  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
41709  *  - require post_process to be launch before
41710  *-------------------------------------------------------------------------------
41711   
41713   
41714  * Optional modules
41715   
41716  * Policy modules
41717   
41718  * Calibration
41721   
41722  *-------------------------------------------------------------------------------
41723  * Nash loop
41724  *-------------------------------------------------------------------------------
41725   
41726  stop_nash = 0;
41727  loop(siter$((stop_nash eq 0) or (ord(siter) le 1)),
41728   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
41730  *-------------------------------------------------------------------------------
41731  * Call modules by order
41732  *-------------------------------------------------------------------------------
41736   
41737  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
41739  *-------------------------------------------------------------------------------
41740  * Algorithm
41741  *-------------------------------------------------------------------------------
41742   
41744   
41745  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
41747  *-------------------------------------------------------------------------------
41748  * Time
41749  * - Temporal structure
41750  * - Fixed time periods
41751  * - States of the world
41752  *-------------------------------------------------------------------------------
41753   
41755   
41756  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
41758  *-------------------------------------------------------------------------------
41759  * Geographic dimension and mapping with countries
41760  *-------------------------------------------------------------------------------
41761   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
41764  *-------------------------------------------------------------------------------
41765  * Non-Cooperative Setup
41766  *
41767  * Each region is defined as an individual coalition.
41768  *
41769  *-------------------------------------------------------------------------------
41770   
41772   
41773  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
41775  *-------------------------------------------------------------------------------
41776  * Welfare
41777  *-------------------------------------------------------------------------------
41778   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
41781  *-------------------------------------------------------------------------------
41782  * Economy
41783  * - Production and Consumption definition
41784  * - Top-level of the production function
41785  * Options:
41786  * --original_ssp=1 : original SSP population and GDP data
41787  *-------------------------------------------------------------------------------
41788   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
41791  *-------------------------------------------------------------------------------
41792  * Energy sector
41793  *-------------------------------------------------------------------------------
41794   
41796   
41797  * World cumulative fuel demand
41798  loop((tnofirst(t),tm1)$pre(tm1,t),
41799      wcum(f,t) = wcum(f,tm1) + tlen(t) * sum(n, Q_FUEL.l(f,tm1,n) * 1e-6);
41800  );
41801   
41802  tpes(t,n) = sum(f, Q_FUEL.l(f,t,n)) + Q_EN.l('elhydro',t,n) + Q_EN.l('elwind',t,n) + Q_EN.l('elsolar',t,n);
41803   
41804  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
41807  *-------------------------------------------------------------------------------
41808  * Carbon Emissions
41809  * - Total CO2 emissions and CO2 Fossil fuel and Industry
41810  * - CO2 emission costs
41811  * - GHG permit market
41812  *-------------------------------------------------------------------------------
41813   
41815   
41816  loop(c_mkt,
41817  carbonprice(t,n)$trading_t(c_mkt,t,n) = CPRICE.l(c_mkt,t);
41818  );
41819  carbonprice(t,n)$(ctax('co2',t,n)) = ctax('co2',t,n);
41820   
41821  * Accounting for electrification in the transport sector
41822  * Reference for default carbon efficiency rate: Fajardy and Daggash (2017)
41823  emi_bio_harv(t) = 0.25 * (1 -
41824                     sum((n,ices_el), QEL_OUT.l('edv',ices_el,t,n) + QEL_OUT.l('edvfr',ices_el,t,n)) /
41825                     (sum((f,n,jfed)$(csi(f,jfed,t,n) and (jveh(jfed) or jfrt(jfed))),
41826                        Q_IN.l(f,jfed,t,n)) +
41827                        sum((n,ices_el), QEL_OUT.l('edv',ices_el,t,n) +
41828                                         QEL_OUT.l('edvfr',ices_el,t,n))
41829                      ))**2;
41830   
41831  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
41834  *-------------------------------------------------------------------------------
41835  * Research & Development
41836  * Options:
41837  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
41838  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
41839  *-------------------------------------------------------------------------------
41840   
41842   
41843  wkrd0(rd) = sum(n$leadrd(rd,n), krd0(rd,n)) / sum(n$leadrd(rd,n), 1);
41844   
41846   
41847  *- updating externalities
41848  krd_lead(rd,t) = sum(n$leadrd(rd,n), K_RD.l(rd,t,n));
41849  krd_oth_lead_krd(rd,t,n)$leadrd(rd,n) = krd_lead(rd,t) - K_RD.l(rd,t,n);
41850   
41851  *-initialisation of the SPILL variable
41852  if(ord(siter) eq 1,
41853  SPILL.l(rd,t,n)$((not tfix(t)) and (leadrd(rd,n))) = K_RD.l(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD.l(rd,t,n))*krd_oth_lead_krd(rd,t,n);
41854  SPILL.l(rd,t,n)$((not tfix(t)) and (not leadrd(rd,n))) = K_RD.l(rd,t,n) /krd_lead(rd,t)*(krd_lead(rd,t)-K_RD.l(rd,t,n));
41855  );
41856   
41857  wlspill_k_rd(rd,t,n) = smax(nn, K_RD.l(rd,t,nn)) - K_RD.l(rd,t,n);
41858   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
41861  *-------------------------------------------------------------------------------
41862  * Default Climate Policy Implementation
41863  *
41864  * Options:
41865  *    --policy={bau (default),ctax}
41866  *        Implement a climate policy setting
41867  *  [ --scen= ]
41868  *        Policy variant.
41869  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
41870  *          * XXX for a fixed percentage/yr (e.g. 5) growth
41871  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
41872  *  [ --ctax_year=2020 ]
41873  *        Starting year of the carbon tax
41874  *  [ --ctax_initial=30 ]
41875  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
41876  *
41877  *-------------------------------------------------------------------------------
41879   
41880  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
41882  *-------------------------------------------------------------------------------
41883  * Energy efficiency
41884  *-------------------------------------------------------------------------------
41885   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
41888  *-------------------------------------------------------------------------------
41889  * Hydro Power
41890  *-------------------------------------------------------------------------------
41891   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
41894  *-------------------------------------------------------------------------------
41895  * System Integration:
41896  * - Capacity constraint
41897  * - Flexibility constraint
41898  * - Grid Investment
41899  * - Capacity growth constraint
41900  *-------------------------------------------------------------------------------
41901   
41903   
41904  * If
41905  * - K_EN.lo is not -infinity
41906  * - K_EN(t) and K_EN(t+1) are fixed
41907  * - a mkt_growth_rate is set
41908  * then make sure that the minimum additional capacity in t+1 is compatible with
41909  * with the necessary capacity to go from K_EN(t) to K_EN(t+1). If this is not the case,
41910  * disable the mkt growth constraint, assuming that the K_EN.lo/fx override
41911  * the mkt growth assumptions.
41912  loop((jinv,n,t,tp1,tp2)$(mkt_growth_rate(jinv,tp2,n) and
41913      (K_EN.lo(jinv,tp2,n) gt 0) and
41914      (K_EN.lo(jinv,tp1,n) eq K_EN.up(jinv,tp1,n)) and
41915      (K_EN.lo(jinv,t,n) eq K_EN.up(jinv,t,n)) and
41916      pre(t,tp1) and pre(tp1,tp2)),
41917      jtn_incompatible_with_mkt_growth_cap(jinv,tp1,n) = yes$(((K_EN.lo(jinv,tp2,n)-K_EN.lo(jinv,tp1,n)*(1-delta_en(jinv,tp2,n))**tlen(tp1))/tlen(tp1)) ge
41918          (((K_EN.lo(jinv,tp1,n)-K_EN.lo(jinv,t,n)*(1-delta_en(jinv,tp1,n))**tlen(t))/tlen(t))*(1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3)
41919          );
41920      mkt_growth_rate(jinv,tp1,n)$jtn_incompatible_with_mkt_growth_cap(jinv,tp1,n) = 0;
41921  );
41922   
41923  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
41926  *-------------------------------------------------------------------------------
41927  * Nuclear power plants
41928  *-------------------------------------------------------------------------------
41929   
41931   
41932  if(sum((tt,n)$tfirst(tt),Q_EN.l('elnuclear',tt,n)) gt 0,
41933      wastemgm(t,n) =  cwaste_reg('alpha',n) *
41934                       ( sum(nn, Q_EN.l('elnuclear',t,nn)) /
41935                         sum((tt,nn)$tfirst(tt),Q_EN.l('elnuclear',tt,nn))
41936                       )**cwaste_reg('rho',n);
41937  );
41938  oem(jreal,t,n)$(map_j('elnuclear',jreal)) = oem0(jreal,n) + wastemgm(t,n);
41939   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
41942  *-------------------------------------------------------------------------------
41943  * GHG module
41944  * - CH4 FFI + CH4 waste + CH4 open fires
41945  * - N2O FFI + N2O waste + N2O open fires
41946  *-------------------------------------------------------------------------------
41947   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
41950  *-------------------------------------------------------------------------------
41951  * F-gases
41952  * - LLF
41953  * - SLF
41954  *-------------------------------------------------------------------------------
41955   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
41958  *-------------------------------------------------------------------------------
41959  * Landuse [simplified version of the land-use model]
41960  *-------------------------------------------------------------------------------
41961   
41963   
41964  MCOST_FUEL.fx('wbio',t,n)$(not tfix(t)) = div0(COST_FUEL.l('wbio',t,n),Q_FUEL.l('wbio',t,n));
41965   
41966  * Set the price of co2lu emissions according to the applied policy
41967  loop(c_mkt,
41968  cluprice(t_lu,n)$trading_t(c_mkt,t_lu,n) = CPRICE.l(c_mkt,t_lu);
41969  );
41970  cluprice(t_lu,n)$(ctax('co2',t_lu,n)) = ctax('co2',t_lu,n);
41971  cluprice(t_lu,n)$(nocluprice(t_lu,n)) = 0; # force LU non pricing
41972   
41973  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
41976  *-------------------------------------------------------------------------------
41977  * Bioenergy power plant
41978  *-------------------------------------------------------------------------------
41979   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
41982  *-------------------------------------------------------------------------------
41983  * Traditional Biofuels
41984  * - Requires the precedence of mod_landuse
41985  *-------------------------------------------------------------------------------
41986   
41988   
41989  * If more world demand than world production potential, adjust bounds
41990  loop(t$(not tfix(t) and year(t)<=2100),
41991  if( sum(n, Q_FUEL.l('trbiofuel',t,n)) > sum(n,trbiofuel_max(n)) ,
41992   
41993  else
41994   
41995  Q_FUEL.up('trbiofuel',t,n) = sum(nn,trbiofuel_max(nn));
41996   
41997  );
41998  );
41999   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
42002  *-------------------------------------------------------------------------------
42003  * Advanced biofuel
42004  * - Require the precedence of mod_landuse
42005  *-------------------------------------------------------------------------------
42006   
42008   
42009  loop((t,tp1)$pre(t,tp1),
42010    wcum('nelback',tp1) = wcum('nelback',t) + tlen(t) * sum(n, Q_FUEL.l('advbiofuel',t,n));
42011  );
42012   
42013  Q_FUEL.up('advbiofuel',t,n)$(not tfix(t)) = Q_FUEL.up('wbio',t,n);
42014   
42015  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
42018  *-------------------------------------------------------------------------------
42019  * Carbon Capture and Sequestration
42020  *-------------------------------------------------------------------------------
42021   
42023   
42024  MCOST_EMI.fx('ccs',t,n) = div0(COST_EMI.l('ccs',t,n), Q_EMI.l('ccs',t,n));
42025  MCOST_EMI.fx('ccs_plant',t,n) = div0(COST_EMI.l('ccs_plant',t,n), Q_EMI.l('ccs_plant',t,n));
42026   
42027  * World capital in CCS plant
42028  wcum(jlccs,tfirst) = sum(n,K_EN.l(jlccs,tfirst,n));
42029  loop((tnofirst(t),tm1)$pre(tm1,t),
42030  wcum(jlccs,t) = wcum(jlccs,tm1) + tlen(tm1) * sum(n, I_EN.l(jlccs,tm1,n) / MCOST_INV.l(jlccs,tm1,n));
42031  );
42032   
42033  ccs_wcum_spill(jlccs,t)=sum(jllccs, ccs_spill_factor(jlccs,jllccs)*(wcum(jllccs,t)));
42034   
42035  MCOST_INV.fx(jlccs,t,n)$(ccs_wcum_spill(jlccs,t) gt ccs_wcum0(jlccs)) = max(ccs_floor_cost(jlccs,n), mcost_inv0(jlccs,n) * (ccs_wcum_spill(jlccs,t)/ccs_wcum0(jlccs))**(-ccs_learn(jlccs,t)));
42036   
42037  *-------------------------------------------------------------------------------
42039   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
42041  *-------------------------------------------------------------------------------
42042  * Coal for non-electric sectors
42043  * - Coke Plants
42044  * - Industrial and Commercial combined-heat-and-power (CHP)
42045  * - Others
42046  *-------------------------------------------------------------------------------
42047   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
42050  *-------------------------------------------------------------------------------
42051  * Wind energy module
42052  * - onshore and offshore
42053  *-------------------------------------------------------------------------------
42054   
42056   
42057  loop((tnofirst(t),tm1)$pre(tm1,t),
42058  wcum(jinv_wind,t) = wcum(jinv_wind,tm1) + tlen(t) * sum(n, I_EN.l(jinv_wind,tm1,n) / MCOST_INV.l(jinv_wind,tm1,n));
42059  );
42060   
42061  MCOST_INV.fx('elwindon',t,n)$(not tfix(t) and year(t) le 2020) = mcost_inv_valid_wind('elwindon',t,n);
42062  MCOST_INV_WINDOFF.fx(wind_depth,t,n)$(not tfix(t) and year(t) le 2020) = mcost_inv_valid_wind('elwindoff',t,n) * windoff_costinv(wind_depth);
42063   
42064  MCOST_INV.fx('elwindon',t,n)$(not tfix(t) and year(t) gt 2020) = max(floor_cost('elwindon'),
42065                                             (smax(tt$(year(tt) eq 2020), MCOST_INV.l('elwindon',tt,n))) *
42066                                             ((wcum('elwindon',t) + wind_spill_wcum * (wcum('elwindoff',t))) /
42067                                              ((smax(tt$(year(tt) eq 2020), wcum('elwindon',tt))) + wind_spill_wcum * ((smax(tt$(year(tt) eq 2020), wcum('elwindoff',tt))))))**rd_coef('elwindon','lbd'));
42068  MCOST_INV_WINDOFF.fx(wind_depth,t,n)$(not tfix(t) and year(t) gt 2020) = max(floor_cost('elwindoff'),
42069                                             (smax(tt$(year(tt) eq 2020), MCOST_INV_WINDOFF.l(wind_depth,tt,n))) *
42070                                             ((wcum('elwindoff',t) + wind_spill_wcum*(wcum('elwindon',t))) /
42071                                              ((smax(tt$(year(tt) eq 2020), wcum('elwindoff',tt))) + wind_spill_wcum * ((smax(tt$(year(tt) eq 2020), wcum('elwindon',tt))))))**rd_coef('elwindoff','lbd'));
42072   
42073  MCOST_INV.fx('elwindoff',t,n)$((not tfix(t)) and (K_EN.l('elwindoff',t,n) ne 0)) = sum(wind_depth,MCOST_INV_WINDOFF.l(wind_depth,t,n) * sum((wind_dist,wind_class),K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n))) / K_EN.l('elwindoff',t,n);
42074  MCOST_INV.fx('elwindoff',t,n)$((not tfix(t)) and (K_EN.l('elwindoff',t,n) eq 0)) = smin(wind_depth,MCOST_INV_WINDOFF.l(wind_depth,t,n));
42075   
42076  *-------------------------------------------------------------------------------
42078   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
42080  *-------------------------------------------------------------------------------
42081  * Solar Powerplants (PV and CSP) to the electrical system
42082  *-------------------------------------------------------------------------------
42083   
42084  *-------------------------------------------------------------------------------
42086   
42087  * World cumulative capacities of solar plants
42088  loop((tnofirst(t),tm1)$pre(tm1,t),
42089    wcum(jinv_solar,t) = wcum(jinv_solar,tm1) + tlen(t) * sum(n, I_EN.l(jinv_solar,tm1,n) / MCOST_INV.l(jinv_solar,tm1,n));
42090  );
42091   
42092  * Investment costs of solar plants
42093  MCOST_INV.fx(jreal_solar,t,n)$(not tfix(t) and year(t) le 2020) = mcost_inv_valid_solar(jreal_solar,t,n);
42094  MCOST_INV.fx(jreal_solar,t,n)$(not tfix(t) and year(t) gt 2020) = max(floor_cost(jreal_solar),
42095                                                    (smax(tt$(year(tt) eq 2020), mcost_inv_valid_solar(jreal_solar,tt,n))) *
42096                                                    (wcum(jreal_solar,t) / (smax(tt$(year(tt) eq 2020), wcum(jreal_solar,tt))))**rd_coef(jreal_solar,'lbd'));
42097   
42098  *-------------------------------------------------------------------------------
42100   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
42102  *-------------------------------------------------------------------------------
42103  * Technology development scenarios
42104  *-------------------------------------------------------------------------------
42105   
42107   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
42109  *-------------------------------------------------------------------------------
42110  * Oil Extraction
42111  * Options:
42112  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
42113  *-------------------------------------------------------------------------------
42114   
42116   
42117  MCOST_FUEL.fx('oil',t,n)$(not tfix(t)) = max(sum(tfirst, FPRICE.l('oil',tfirst))*0.1, FPRICE.l('oil',t) + p_mkup('oil',t,n));
42118   
42119  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
42122  *-------------------------------------------------------------------------------
42123  * Uranium Resources
42124  *-------------------------------------------------------------------------------
42125   
42127   
42128  FPRICE.l('uranium',t)$(not tfix(t)) = cexs('uranium','scl') *
42129                          (cexs('uranium','a') +
42130                           cexs('uranium','c') *
42131                           (wcum('uranium',t) /
42132                              (cexs('uranium','fast') * res('uranium',t))
42133                           )**2
42134                          ) + cexs('uranium','extra');
42135   
42136  MCOST_FUEL.fx('uranium',t,n)$(not tfix(t)) = FPRICE.l('uranium',t) + p_mkup('uranium',t,n);
42137   
42138  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
42141  *-------------------------------------------------------------------------------
42142  * Gas Resources
42143  *-------------------------------------------------------------------------------
42144   
42146   
42147  FPRICE.l('gas',t)$(not tfix(t)) = max((smax(tt$(year(tt) eq 2005), FPRICE.l('gas',tt))), sum(polydeg$(cgas(polydeg,'M')), (cgas(polydeg,'M'))*((wcum('gas',t) - cexs('gas','cum0')))**(ord(polydeg)-1)));
42148   
42149  * Calculate cumulative production (by means of polynomial functions)
42150  cum_prodpp('gas',t,n) = max(0, trade_scale_gas('M') *
42151                                 sum(polydeg$(trade_poly_gas(polydeg,'M',N)), (trade_poly_gas(polydeg,'M',N))*(FPRICE.l('gas',t)/(twh2ej/1000))**(ord(polydeg)-1))
42152                             );
42153   
42154  * Ensure cumulative production in 2005 = 0
42155  cum_prodpp('gas',t,n)$(tfirst(t))= 0;
42156   
42157   
42158  * This is to avoid negative production (cumulative production declining)
42159  loop((t,tp1)$(pre(t,tp1)),
42160    cum_prodpp('gas',tp1,n)=max(cum_prodpp('gas',t,n)+1e-5*tlen(t), cum_prodpp('gas',tp1,n) )
42161  );
42162   
42163  ** Calculate annual production
42164  loop((t,tp1)$(pre(t,tp1)),
42165    prodpp('gas',t,n) = (cum_prodpp('gas',tp1,n) - cum_prodpp('gas',t,n))/tlen(t)
42166  );
42167   
42168  prodpp('gas',t,n)$(year(t) > 2100) = sum(nn,Q_FUEL.l('gas',t,nn)) * (smax(tt$(year(tt) eq 2100), (prodpp('gas',tt,n)/sum(nn,prodpp('gas',tt,nn)))));
42169   
42171  Q_OUT.fx('gas',t,n)$(not tfix(t)) = prodpp('gas',t,n);
42173   
42174  MCOST_FUEL.fx('gas',t,n)$(not tfix(t)) = FPRICE.l('gas',t) + p_mkup('gas',t,n);
42175   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
42178  *-------------------------------------------------------------------------------
42179  * Coal Resources
42180  *-------------------------------------------------------------------------------
42181   
42183   
42184  FPRICE.l('coal',t)$(not tfix(t)) = max((smax(tt$(year(tt) eq 2005), FPRICE.l('coal',tt))), sum(polydeg$(ccoal(polydeg,'M')), (ccoal(polydeg,'M'))*((wcum('coal',t) - cexs('coal','cum0')))**(ord(polydeg)-1)));
42185   
42186  * Calculate cumulative production (by means of polynomial functions)
42187  cum_prodpp('coal',t,n) = max(0, trade_scale_coal('M') *
42188                                  sum(polydeg$(trade_poly_coal(polydeg,'M',N)), (trade_poly_coal(polydeg,'M',N))*(FPRICE.l('coal',t)/(twh2ej/1000))**(ord(polydeg)-1))
42189                              );
42190   
42191  * Ensure cumulative production in 2005 = 0
42192  cum_prodpp('coal',t,n)$(tfirst(t))= 0;
42193   
42194   
42195  * This is to avoid negative production (cumulative production declining)
42196  loop((t,tp1)$(pre(t,tp1)),
42197    cum_prodpp('coal',tp1,n)=max(cum_prodpp('coal',t,n)+1e-5*tlen(t), cum_prodpp('coal',tp1,n) )
42198  );
42199   
42200  ** Calculate annual production
42201  loop((t,tp1)$(pre(t,tp1)),
42202    prodpp('coal',t,n) = (cum_prodpp('coal',tp1,n) - cum_prodpp('coal',t,n))/tlen(t)
42203  );
42204   
42205  prodpp('coal',t,n)$(year(t) > 2100) = sum(nn,Q_FUEL.l('coal',t,nn)) * (smax(tt$(year(tt) eq 2100), (prodpp('coal',tt,n)/sum(nn,prodpp('coal',tt,nn)))));
42206   
42208  Q_OUT.fx('coal',t,n)$(not tfix(t)) = prodpp('coal',t,n);
42210   
42211  MCOST_FUEL.fx('coal',t,n)$(not tfix(t)) = FPRICE.l('coal',t) + p_mkup('coal',t,n);
42212   
42213  *-------------------------------------------------------------------------------
42215   
42216   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
42218  *-------------------------------------------------------------------------------
42219  * Climate
42220  *
42221  * Represents the climate
42222  * - based on the DICE model equations
42223  * - Radiative forcing for non CO2 ghgs
42224  * - parameters calibrated to reproduce MAGICC6.4 default response
42225  *
42226  *  Options:
42227  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
42228  * - $setglobal cooperate_on_climate {'YES','NO'}
42229  * - 'YES'(default): Countries within a coalition act in cooperation
42230  *   'NO': Countries within a coalition act individually
42231  *
42232  *-------------------------------------------------------------------------------
42233   
42235   
42236  wemi(ghg(e),t) = sum(n, Q_EMI.l(e,t,n)) / wemi2qemi(e) + sum((n,ee)$(map_e_bunk(e,ee)), W_EMI.l(ee,t,n)) / card(n);
42237   
42238  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
42241  *-------------------------------------------------------------------------------
42242  * Long-run Damages from Climate Change
42243  * - Economic impacts
42244  * - Adaptation
42245  *-------------------------------------------------------------------------------
42246   
42248   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
42250  *-------------------------------------------------------------------------------
42251  * Light-duty Vehicles for Personal Transport
42252  *-------------------------------------------------------------------------------
42253   
42255   
42256  loop((t,tp1)$(pre(t,tp1)),
42257             wcum('battery',tp1) = sum(n,(div0(I_EN.l('hybrid',t,n),MCOST_INV.l('hybrid',t,n)) +
42258                                          div0(I_EN.l('plg_hybrid',t,n),MCOST_INV.l('plg_hybrid',t,n)) +
42259                                          div0(I_EN.l('edv',t,n),MCOST_INV.l('edv',t,n)) +
42260                                          div0(I_EN.l('hbd_stfr',t,n),MCOST_INV.l('hbd_stfr',t,n)) +
42261                                          div0(I_EN.l('plg_hbd_stfr',t,n),MCOST_INV.l('plg_hbd_stfr',t,n)) +
42262                                          div0(I_EN.l('edv_stfr',t,n),MCOST_INV.l('edv_stfr',t,n))) * tlen(t)) +
42263                                          wcum('battery',t)
42264  );
42265   
42267   
42268   
42269  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
42272  *-------------------------------------------------------------------------------
42273  * Road Freight Transport
42274  *-------------------------------------------------------------------------------
42276   
42277   
42278   
42279   
42280   
42281   
42282  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
42284  *-------------------------------------------------------------------------------
42285  * Traditional Biomass
42286  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
42287  *  - require post_process to be launch before
42288  *-------------------------------------------------------------------------------
42289   
42291   
42292  MCOST_FUEL.fx('trbiomass',t,n)$(not tfix(t)) = FPRICE.l('trbiomass',t) + p_mkup('trbiomass',t,n);
42293   
42295   
42296  trbio_ctr('phi',n)$trbio_countries(n)  = sum(tfirst,(neltrbiomass0(tfirst,n)/tpes(tfirst,n))/ min(1,trbio_ctr('beta',n)*log(mer2ppp(tfirst,n)*1e6*Q.l('y',tfirst,n)/l(tfirst,n))+trbio_ctr('alpha',n)));
42297  trbio_gdp_fun(t,n) = trbio_ctr('phi',n)*(1- min(1,trbio_ctr('beta',n)*log(mer2ppp(t,n)*1e6*Q.l('y',t,n)/l(t,n))+trbio_ctr('alpha',n)));
42298  scale_trbiomass(n)$trbio_countries(n)  = q0('neltrbiomass',n) / ((tpes(tfirst,n) - q0('neltrbiomass',n))*trbio_gdp_fun(tfirst,n)/(1-trbio_gdp_fun(tfirst,n)));
42299   
42300  Q_FUEL.fx('trbiomass',t,n)$((not tfix(t)) and tfirst(t)) = q0('neltrbiomass',n);
42301  Q_FUEL.fx('trbiomass',t,n)$((not tfix(t)) and (tnofirst(t) and trbio_countries(n))) = scale_trbiomass(n) * (tpes(t,n)-Q_FUEL.l('trbiomass',t,n))*trbio_gdp_fun(t,n)/(1-trbio_gdp_fun(t,n));
42302  Q_IN.fx('trbiomass','neltrbiomass',t,n)$(not tfix(t)) = Q_FUEL.l('trbiomass',t,n);
42303  Q_EN.fx('neltrbiomass',t,n)$(not tfix(t))             = Q_FUEL.l('trbiomass',t,n);
42304   
42305  * Safeguard against bad behavior, usually when a startgdx has wrong values.
42306  loop((t,n)$(Q_FUEL.lo('trbiomass',t,n)<0),
42307          Q_IN.fx('trbiomass','neltrbiomass',t,n)$(not tfix(t)) = neltrbiomass0(t,n);
42308          Q_FUEL.fx('trbiomass',t,n)$(not tfix(t))              = neltrbiomass0(t,n);
42309          Q_EN.fx('neltrbiomass',t,n)$(not tfix(t))             = neltrbiomass0(t,n);
42310  );
42311   
42313   
42315   
42316  * Optional modules
42317   
42318  * Policy modules
42319   
42320  * Calibration
42323   
42325   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
42327  *-------------------------------------------------------------------------------
42328  * Convergence algorithm
42329  *-------------------------------------------------------------------------------
42331   
42332  *-------------------------------------------------------------------------------
42334   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
42336  *-------------------------------------------------------------------------------
42337  * ADMM algorithm
42338  *-------------------------------------------------------------------------------
42340   
42341  *-------------------------------------------------------------------------------
42343   
42344  t_admm(mkt,t) = yes$(sum(n$trading_t(mkt,t,n),1) gt 0);
42345   
42346  if(ord(siter) eq 1,
42347      z_admm(mkt,t,n)$(t_admm(mkt,t)) = 0;
42348      u_admm(mkt,t)$(t_admm(mkt,t) and sum(f_mkt$sameas(f_mkt,mkt),1)) = sum(f_mkt$(sameas(f_mkt,mkt)), FPRICE.l(f_mkt,t))/rho_admm(mkt,t);
42349      u_admm(mkt,t)$(t_admm(mkt,t) and sum(c_mkt$sameas(c_mkt,mkt),1)) = sum(c_mkt$(sameas(c_mkt,mkt)), CPRICE.l(c_mkt,t))/rho_admm(mkt,t);
42350      x_admm(mkt,t,n)$(trading_t(mkt,t,n) and sum(f_mkt$sameas(f_mkt,mkt),1)) = sum(f$(sameas(f,mkt)), (Q_FUEL.l(f,t,n) - Q_OUT.l(f,t,n)));
42351      x_admm(mkt,t,n)$(trading_t(mkt,t,n) and sum(c_mkt$sameas(c_mkt,mkt),1)) = sum(e$(sameas(e,mkt)), (Q_EMI.l(e,t,n)));
42352      xavg_admm(mkt,t)$(t_admm(mkt,t)) = (sum(n$trading_t(mkt,t,n),x_admm(mkt,t,n)))/(sum(n$trading_t(mkt,t,n),1));
42353  );
42354   
42355  *-------------------------------------------------------------------------------
42357   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\solve.gms
42359  *-------------------------------------------------------------------------------
42360  * Interface with the CONOPT Solver
42361  *-------------------------------------------------------------------------------
42363   
42364  *-------------------------------------------------------------------------------
42365  * Save old state
42366  *-------------------------------------------------------------------------------
42367   
42368  LAST_I.l('fg',t,n)           = I.l('fg',t,n);
42369  LAST_I_EN.l(jinv,t,n)        = I_EN.l(jinv,t,n);
42370  LAST_I_RD.l(rd,t,n)          = I_RD.l(rd,t,n);
42371  LAST_I_OUT.l(extract(f),t,n) = I_OUT.l(f,t,n);
42372  LAST_COST_FUEL.l(f,t,n)      = COST_FUEL.l(f,t,n);
42373   
42374  *-------------------------------------------------------------------------------
42375  * Solver macro
42376  *-------------------------------------------------------------------------------
42378  $macro launchsolve(clt) \
42379  solve witch_&clt maximizing OBJADMM using nlp; \
42380  if((witch_&clt.solvelink eq 6) or (witch_&clt.solvelink eq 3), \
42381    remh('&clt') = witch_&clt.handle; \
42382  else savereport(&clt); \
42383    checkforproblems('&clt'));
42384   
42385  *-------------------------------------------------------------------------------
42386  * Initialization solver parameters
42387  *-------------------------------------------------------------------------------
42388  option nlp      = conopt;
42389  option dnlp     = conopt;
42390  option cns      = conopt;
42391  option iterlim  = 1e8;
42392  option reslim   = 1e7;
42393  option decimals = 8; # default number of decimal to be printed
42394  option sysout   = off; # Do not incorporate solver output into LST
42395  option limcol   = 0;  # number of cases displayed in LST per var
42396  option limrow   = 0;  # number of cases displayed in LST per equ
42399  timer            = timeelapsed;
42400  solrep(clt,irep) = na;
42401  remh(clt)        = 0;
42402  cproblem(clt)    = no;
42403   
42404  *-------------------------------------------------------------------------------
42405  * Check if everything is OK
42406  *-------------------------------------------------------------------------------
42407   
42408  abort$(execerror gt 0) 'Please check execution errors!';
42409   
42410  *-------------------------------------------------------------------------------
42411  * Launch a solver for each coalition
42412  *-------------------------------------------------------------------------------
42413   
42416   solve witch_c_brazil maximizing OBJADMM using nlp; if((witch_c_brazil.solvelink eq 6) or (witch_c_brazil.solvelink eq 3), remh('c_brazil') = witch_c_brazil.handle; else solrep('c_brazil','objval')=witch_c_brazil.objval;solrep('c_brazil','solvestat')=witch_c_brazil.solvestat;solrep('c_brazil','modelstat')=witch_c_brazil.modelstat;solrep('c_brazil','iterusd')=witch_c_brazil.iterusd;solrep('c_brazil','resusd')=witch_c_brazil.resusd;solrep('c_brazil','numvar')=witch_c_brazil.numvar;solrep('c_brazil','numequ')=witch_c_brazil.numequ;solrep('c_brazil','numnz')=witch_c_brazil.numnz;solrep('c_brazil','numvarproj')=witch_c_brazil.numvarproj;solrep('c_brazil','numinfes')=witch_c_brazil.numinfes;solrep('c_brazil','numnopt')=witch_c_brazil.numnopt;solrep('c_brazil','domusd')=witch_c_brazil.domusd;;  if((solrep('c_brazil','solvestat') ne 1) or (solrep('c_brazil','modelstat') ne 2), cproblem('c_brazil') = yes; else cproblem('c_brazil') = no;));
42421   solve witch_c_canada maximizing OBJADMM using nlp; if((witch_c_canada.solvelink eq 6) or (witch_c_canada.solvelink eq 3), remh('c_canada') = witch_c_canada.handle; else solrep('c_canada','objval')=witch_c_canada.objval;solrep('c_canada','solvestat')=witch_c_canada.solvestat;solrep('c_canada','modelstat')=witch_c_canada.modelstat;solrep('c_canada','iterusd')=witch_c_canada.iterusd;solrep('c_canada','resusd')=witch_c_canada.resusd;solrep('c_canada','numvar')=witch_c_canada.numvar;solrep('c_canada','numequ')=witch_c_canada.numequ;solrep('c_canada','numnz')=witch_c_canada.numnz;solrep('c_canada','numvarproj')=witch_c_canada.numvarproj;solrep('c_canada','numinfes')=witch_c_canada.numinfes;solrep('c_canada','numnopt')=witch_c_canada.numnopt;solrep('c_canada','domusd')=witch_c_canada.domusd;;  if((solrep('c_canada','solvestat') ne 1) or (solrep('c_canada','modelstat') ne 2), cproblem('c_canada') = yes; else cproblem('c_canada') = no;));
42426   solve witch_c_china maximizing OBJADMM using nlp; if((witch_c_china.solvelink eq 6) or (witch_c_china.solvelink eq 3), remh('c_china') = witch_c_china.handle; else solrep('c_china','objval')=witch_c_china.objval;solrep('c_china','solvestat')=witch_c_china.solvestat;solrep('c_china','modelstat')=witch_c_china.modelstat;solrep('c_china','iterusd')=witch_c_china.iterusd;solrep('c_china','resusd')=witch_c_china.resusd;solrep('c_china','numvar')=witch_c_china.numvar;solrep('c_china','numequ')=witch_c_china.numequ;solrep('c_china','numnz')=witch_c_china.numnz;solrep('c_china','numvarproj')=witch_c_china.numvarproj;solrep('c_china','numinfes')=witch_c_china.numinfes;solrep('c_china','numnopt')=witch_c_china.numnopt;solrep('c_china','domusd')=witch_c_china.domusd;;  if((solrep('c_china','solvestat') ne 1) or (solrep('c_china','modelstat') ne 2), cproblem('c_china') = yes; else cproblem('c_china') = no;));
42431   solve witch_c_europe maximizing OBJADMM using nlp; if((witch_c_europe.solvelink eq 6) or (witch_c_europe.solvelink eq 3), remh('c_europe') = witch_c_europe.handle; else solrep('c_europe','objval')=witch_c_europe.objval;solrep('c_europe','solvestat')=witch_c_europe.solvestat;solrep('c_europe','modelstat')=witch_c_europe.modelstat;solrep('c_europe','iterusd')=witch_c_europe.iterusd;solrep('c_europe','resusd')=witch_c_europe.resusd;solrep('c_europe','numvar')=witch_c_europe.numvar;solrep('c_europe','numequ')=witch_c_europe.numequ;solrep('c_europe','numnz')=witch_c_europe.numnz;solrep('c_europe','numvarproj')=witch_c_europe.numvarproj;solrep('c_europe','numinfes')=witch_c_europe.numinfes;solrep('c_europe','numnopt')=witch_c_europe.numnopt;solrep('c_europe','domusd')=witch_c_europe.domusd;;  if((solrep('c_europe','solvestat') ne 1) or (solrep('c_europe','modelstat') ne 2), cproblem('c_europe') = yes; else cproblem('c_europe') = no;));
42436   solve witch_c_india maximizing OBJADMM using nlp; if((witch_c_india.solvelink eq 6) or (witch_c_india.solvelink eq 3), remh('c_india') = witch_c_india.handle; else solrep('c_india','objval')=witch_c_india.objval;solrep('c_india','solvestat')=witch_c_india.solvestat;solrep('c_india','modelstat')=witch_c_india.modelstat;solrep('c_india','iterusd')=witch_c_india.iterusd;solrep('c_india','resusd')=witch_c_india.resusd;solrep('c_india','numvar')=witch_c_india.numvar;solrep('c_india','numequ')=witch_c_india.numequ;solrep('c_india','numnz')=witch_c_india.numnz;solrep('c_india','numvarproj')=witch_c_india.numvarproj;solrep('c_india','numinfes')=witch_c_india.numinfes;solrep('c_india','numnopt')=witch_c_india.numnopt;solrep('c_india','domusd')=witch_c_india.domusd;;  if((solrep('c_india','solvestat') ne 1) or (solrep('c_india','modelstat') ne 2), cproblem('c_india') = yes; else cproblem('c_india') = no;));
42441   solve witch_c_indonesia maximizing OBJADMM using nlp; if((witch_c_indonesia.solvelink eq 6) or (witch_c_indonesia.solvelink eq 3), remh('c_indonesia') = witch_c_indonesia.handle; else solrep('c_indonesia','objval')=witch_c_indonesia.objval;solrep('c_indonesia','solvestat')=witch_c_indonesia.solvestat;solrep('c_indonesia','modelstat')=witch_c_indonesia.modelstat;solrep('c_indonesia','iterusd')=witch_c_indonesia.iterusd;solrep('c_indonesia','resusd')=witch_c_indonesia.resusd;solrep('c_indonesia','numvar')=witch_c_indonesia.numvar;solrep('c_indonesia','numequ')=witch_c_indonesia.numequ;solrep('c_indonesia','numnz')=witch_c_indonesia.numnz;solrep('c_indonesia','numvarproj')=witch_c_indonesia.numvarproj;solrep('c_indonesia','numinfes')=witch_c_indonesia.numinfes;solrep('c_indonesia','numnopt')=witch_c_indonesia.numnopt;solrep('c_indonesia','domusd')=witch_c_indonesia.domusd;;  if((solrep('c_indonesia','solvestat') ne 1) or (solrep('c_indonesia','modelstat') ne 2), cproblem('c_indonesia') = yes; else cproblem('c_indonesia') = no;));
42446   solve witch_c_jpnkor maximizing OBJADMM using nlp; if((witch_c_jpnkor.solvelink eq 6) or (witch_c_jpnkor.solvelink eq 3), remh('c_jpnkor') = witch_c_jpnkor.handle; else solrep('c_jpnkor','objval')=witch_c_jpnkor.objval;solrep('c_jpnkor','solvestat')=witch_c_jpnkor.solvestat;solrep('c_jpnkor','modelstat')=witch_c_jpnkor.modelstat;solrep('c_jpnkor','iterusd')=witch_c_jpnkor.iterusd;solrep('c_jpnkor','resusd')=witch_c_jpnkor.resusd;solrep('c_jpnkor','numvar')=witch_c_jpnkor.numvar;solrep('c_jpnkor','numequ')=witch_c_jpnkor.numequ;solrep('c_jpnkor','numnz')=witch_c_jpnkor.numnz;solrep('c_jpnkor','numvarproj')=witch_c_jpnkor.numvarproj;solrep('c_jpnkor','numinfes')=witch_c_jpnkor.numinfes;solrep('c_jpnkor','numnopt')=witch_c_jpnkor.numnopt;solrep('c_jpnkor','domusd')=witch_c_jpnkor.domusd;;  if((solrep('c_jpnkor','solvestat') ne 1) or (solrep('c_jpnkor','modelstat') ne 2), cproblem('c_jpnkor') = yes; else cproblem('c_jpnkor') = no;));
42451   solve witch_c_laca maximizing OBJADMM using nlp; if((witch_c_laca.solvelink eq 6) or (witch_c_laca.solvelink eq 3), remh('c_laca') = witch_c_laca.handle; else solrep('c_laca','objval')=witch_c_laca.objval;solrep('c_laca','solvestat')=witch_c_laca.solvestat;solrep('c_laca','modelstat')=witch_c_laca.modelstat;solrep('c_laca','iterusd')=witch_c_laca.iterusd;solrep('c_laca','resusd')=witch_c_laca.resusd;solrep('c_laca','numvar')=witch_c_laca.numvar;solrep('c_laca','numequ')=witch_c_laca.numequ;solrep('c_laca','numnz')=witch_c_laca.numnz;solrep('c_laca','numvarproj')=witch_c_laca.numvarproj;solrep('c_laca','numinfes')=witch_c_laca.numinfes;solrep('c_laca','numnopt')=witch_c_laca.numnopt;solrep('c_laca','domusd')=witch_c_laca.domusd;;  if((solrep('c_laca','solvestat') ne 1) or (solrep('c_laca','modelstat') ne 2), cproblem('c_laca') = yes; else cproblem('c_laca') = no;));
42456   solve witch_c_mena maximizing OBJADMM using nlp; if((witch_c_mena.solvelink eq 6) or (witch_c_mena.solvelink eq 3), remh('c_mena') = witch_c_mena.handle; else solrep('c_mena','objval')=witch_c_mena.objval;solrep('c_mena','solvestat')=witch_c_mena.solvestat;solrep('c_mena','modelstat')=witch_c_mena.modelstat;solrep('c_mena','iterusd')=witch_c_mena.iterusd;solrep('c_mena','resusd')=witch_c_mena.resusd;solrep('c_mena','numvar')=witch_c_mena.numvar;solrep('c_mena','numequ')=witch_c_mena.numequ;solrep('c_mena','numnz')=witch_c_mena.numnz;solrep('c_mena','numvarproj')=witch_c_mena.numvarproj;solrep('c_mena','numinfes')=witch_c_mena.numinfes;solrep('c_mena','numnopt')=witch_c_mena.numnopt;solrep('c_mena','domusd')=witch_c_mena.domusd;;  if((solrep('c_mena','solvestat') ne 1) or (solrep('c_mena','modelstat') ne 2), cproblem('c_mena') = yes; else cproblem('c_mena') = no;));
42461   solve witch_c_mexico maximizing OBJADMM using nlp; if((witch_c_mexico.solvelink eq 6) or (witch_c_mexico.solvelink eq 3), remh('c_mexico') = witch_c_mexico.handle; else solrep('c_mexico','objval')=witch_c_mexico.objval;solrep('c_mexico','solvestat')=witch_c_mexico.solvestat;solrep('c_mexico','modelstat')=witch_c_mexico.modelstat;solrep('c_mexico','iterusd')=witch_c_mexico.iterusd;solrep('c_mexico','resusd')=witch_c_mexico.resusd;solrep('c_mexico','numvar')=witch_c_mexico.numvar;solrep('c_mexico','numequ')=witch_c_mexico.numequ;solrep('c_mexico','numnz')=witch_c_mexico.numnz;solrep('c_mexico','numvarproj')=witch_c_mexico.numvarproj;solrep('c_mexico','numinfes')=witch_c_mexico.numinfes;solrep('c_mexico','numnopt')=witch_c_mexico.numnopt;solrep('c_mexico','domusd')=witch_c_mexico.domusd;;  if((solrep('c_mexico','solvestat') ne 1) or (solrep('c_mexico','modelstat') ne 2), cproblem('c_mexico') = yes; else cproblem('c_mexico') = no;));
42466   solve witch_c_oceania maximizing OBJADMM using nlp; if((witch_c_oceania.solvelink eq 6) or (witch_c_oceania.solvelink eq 3), remh('c_oceania') = witch_c_oceania.handle; else solrep('c_oceania','objval')=witch_c_oceania.objval;solrep('c_oceania','solvestat')=witch_c_oceania.solvestat;solrep('c_oceania','modelstat')=witch_c_oceania.modelstat;solrep('c_oceania','iterusd')=witch_c_oceania.iterusd;solrep('c_oceania','resusd')=witch_c_oceania.resusd;solrep('c_oceania','numvar')=witch_c_oceania.numvar;solrep('c_oceania','numequ')=witch_c_oceania.numequ;solrep('c_oceania','numnz')=witch_c_oceania.numnz;solrep('c_oceania','numvarproj')=witch_c_oceania.numvarproj;solrep('c_oceania','numinfes')=witch_c_oceania.numinfes;solrep('c_oceania','numnopt')=witch_c_oceania.numnopt;solrep('c_oceania','domusd')=witch_c_oceania.domusd;;  if((solrep('c_oceania','solvestat') ne 1) or (solrep('c_oceania','modelstat') ne 2), cproblem('c_oceania') = yes; else cproblem('c_oceania') = no;));
42471   solve witch_c_sasia maximizing OBJADMM using nlp; if((witch_c_sasia.solvelink eq 6) or (witch_c_sasia.solvelink eq 3), remh('c_sasia') = witch_c_sasia.handle; else solrep('c_sasia','objval')=witch_c_sasia.objval;solrep('c_sasia','solvestat')=witch_c_sasia.solvestat;solrep('c_sasia','modelstat')=witch_c_sasia.modelstat;solrep('c_sasia','iterusd')=witch_c_sasia.iterusd;solrep('c_sasia','resusd')=witch_c_sasia.resusd;solrep('c_sasia','numvar')=witch_c_sasia.numvar;solrep('c_sasia','numequ')=witch_c_sasia.numequ;solrep('c_sasia','numnz')=witch_c_sasia.numnz;solrep('c_sasia','numvarproj')=witch_c_sasia.numvarproj;solrep('c_sasia','numinfes')=witch_c_sasia.numinfes;solrep('c_sasia','numnopt')=witch_c_sasia.numnopt;solrep('c_sasia','domusd')=witch_c_sasia.domusd;;  if((solrep('c_sasia','solvestat') ne 1) or (solrep('c_sasia','modelstat') ne 2), cproblem('c_sasia') = yes; else cproblem('c_sasia') = no;));
42476   solve witch_c_seasia maximizing OBJADMM using nlp; if((witch_c_seasia.solvelink eq 6) or (witch_c_seasia.solvelink eq 3), remh('c_seasia') = witch_c_seasia.handle; else solrep('c_seasia','objval')=witch_c_seasia.objval;solrep('c_seasia','solvestat')=witch_c_seasia.solvestat;solrep('c_seasia','modelstat')=witch_c_seasia.modelstat;solrep('c_seasia','iterusd')=witch_c_seasia.iterusd;solrep('c_seasia','resusd')=witch_c_seasia.resusd;solrep('c_seasia','numvar')=witch_c_seasia.numvar;solrep('c_seasia','numequ')=witch_c_seasia.numequ;solrep('c_seasia','numnz')=witch_c_seasia.numnz;solrep('c_seasia','numvarproj')=witch_c_seasia.numvarproj;solrep('c_seasia','numinfes')=witch_c_seasia.numinfes;solrep('c_seasia','numnopt')=witch_c_seasia.numnopt;solrep('c_seasia','domusd')=witch_c_seasia.domusd;;  if((solrep('c_seasia','solvestat') ne 1) or (solrep('c_seasia','modelstat') ne 2), cproblem('c_seasia') = yes; else cproblem('c_seasia') = no;));
42481   solve witch_c_southafrica maximizing OBJADMM using nlp; if((witch_c_southafrica.solvelink eq 6) or (witch_c_southafrica.solvelink eq 3), remh('c_southafrica') = witch_c_southafrica.handle; else solrep('c_southafrica','objval')=witch_c_southafrica.objval;solrep('c_southafrica','solvestat')=witch_c_southafrica.solvestat;solrep('c_southafrica','modelstat')=witch_c_southafrica.modelstat;solrep('c_southafrica','iterusd')=witch_c_southafrica.iterusd;solrep('c_southafrica','resusd')=witch_c_southafrica.resusd;solrep('c_southafrica','numvar')=witch_c_southafrica.numvar;solrep('c_southafrica','numequ')=witch_c_southafrica.numequ;solrep('c_southafrica','numnz')=witch_c_southafrica.numnz;solrep('c_southafrica','numvarproj')=witch_c_southafrica.numvarproj;solrep('c_southafrica','numinfes')=witch_c_southafrica.numinfes;solrep('c_southafrica','numnopt')=witch_c_southafrica.numnopt;solrep('c_southafrica','domusd')=witch_c_southafrica.domusd;;  if((solrep('c_southafrica','solvestat') ne 1) or (solrep('c_southafrica','modelstat') ne 2), cproblem('c_southafrica') = yes; else cproblem('c_southafrica') = no;));
42486   solve witch_c_ssa maximizing OBJADMM using nlp; if((witch_c_ssa.solvelink eq 6) or (witch_c_ssa.solvelink eq 3), remh('c_ssa') = witch_c_ssa.handle; else solrep('c_ssa','objval')=witch_c_ssa.objval;solrep('c_ssa','solvestat')=witch_c_ssa.solvestat;solrep('c_ssa','modelstat')=witch_c_ssa.modelstat;solrep('c_ssa','iterusd')=witch_c_ssa.iterusd;solrep('c_ssa','resusd')=witch_c_ssa.resusd;solrep('c_ssa','numvar')=witch_c_ssa.numvar;solrep('c_ssa','numequ')=witch_c_ssa.numequ;solrep('c_ssa','numnz')=witch_c_ssa.numnz;solrep('c_ssa','numvarproj')=witch_c_ssa.numvarproj;solrep('c_ssa','numinfes')=witch_c_ssa.numinfes;solrep('c_ssa','numnopt')=witch_c_ssa.numnopt;solrep('c_ssa','domusd')=witch_c_ssa.domusd;;  if((solrep('c_ssa','solvestat') ne 1) or (solrep('c_ssa','modelstat') ne 2), cproblem('c_ssa') = yes; else cproblem('c_ssa') = no;));
42491   solve witch_c_te maximizing OBJADMM using nlp; if((witch_c_te.solvelink eq 6) or (witch_c_te.solvelink eq 3), remh('c_te') = witch_c_te.handle; else solrep('c_te','objval')=witch_c_te.objval;solrep('c_te','solvestat')=witch_c_te.solvestat;solrep('c_te','modelstat')=witch_c_te.modelstat;solrep('c_te','iterusd')=witch_c_te.iterusd;solrep('c_te','resusd')=witch_c_te.resusd;solrep('c_te','numvar')=witch_c_te.numvar;solrep('c_te','numequ')=witch_c_te.numequ;solrep('c_te','numnz')=witch_c_te.numnz;solrep('c_te','numvarproj')=witch_c_te.numvarproj;solrep('c_te','numinfes')=witch_c_te.numinfes;solrep('c_te','numnopt')=witch_c_te.numnopt;solrep('c_te','domusd')=witch_c_te.domusd;;  if((solrep('c_te','solvestat') ne 1) or (solrep('c_te','modelstat') ne 2), cproblem('c_te') = yes; else cproblem('c_te') = no;));
42496   solve witch_c_usa maximizing OBJADMM using nlp; if((witch_c_usa.solvelink eq 6) or (witch_c_usa.solvelink eq 3), remh('c_usa') = witch_c_usa.handle; else solrep('c_usa','objval')=witch_c_usa.objval;solrep('c_usa','solvestat')=witch_c_usa.solvestat;solrep('c_usa','modelstat')=witch_c_usa.modelstat;solrep('c_usa','iterusd')=witch_c_usa.iterusd;solrep('c_usa','resusd')=witch_c_usa.resusd;solrep('c_usa','numvar')=witch_c_usa.numvar;solrep('c_usa','numequ')=witch_c_usa.numequ;solrep('c_usa','numnz')=witch_c_usa.numnz;solrep('c_usa','numvarproj')=witch_c_usa.numvarproj;solrep('c_usa','numinfes')=witch_c_usa.numinfes;solrep('c_usa','numnopt')=witch_c_usa.numnopt;solrep('c_usa','domusd')=witch_c_usa.domusd;;  if((solrep('c_usa','solvestat') ne 1) or (solrep('c_usa','modelstat') ne 2), cproblem('c_usa') = yes; else cproblem('c_usa') = no;));
42501   
42502  *-------------------------------------------------------------------------------
42503  * Retrieve solution in parallel model
42504  *-------------------------------------------------------------------------------
42505  repeat
42506      rcjob = readyCollect(remh);
42507      display$rcjob rcjob;
42508      abort$(rcjob>1)  'Problem waiting for model';
42509      loop(clt$handlecollect(remh(clt)),
42510          solrep(clt,'status') = handlestatus(remh(clt));
42511           if(sameas(clt,'c_brazil'), solrep('c_brazil','objval')=witch_c_brazil.objval;solrep('c_brazil','solvestat')=witch_c_brazil.solvestat;solrep('c_brazil','modelstat')=witch_c_brazil.modelstat;solrep('c_brazil','iterusd')=witch_c_brazil.iterusd;solrep('c_brazil','resusd')=witch_c_brazil.resusd;solrep('c_brazil','numvar')=witch_c_brazil.numvar;solrep('c_brazil','numequ')=witch_c_brazil.numequ;solrep('c_brazil','numnz')=witch_c_brazil.numnz;solrep('c_brazil','numvarproj')=witch_c_brazil.numvarproj;solrep('c_brazil','numinfes')=witch_c_brazil.numinfes;solrep('c_brazil','numnopt')=witch_c_brazil.numnopt;solrep('c_brazil','domusd')=witch_c_brazil.domusd;); if(sameas(clt,'c_canada'), solrep('c_canada','objval')=witch_c_canada.objval;solrep('c_canada','solvestat')=witch_c_canada.solvestat;solrep('c_canada','modelstat')=witch_c_canada.modelstat;solrep('c_canada','iterusd')=witch_c_canada.iterusd;solrep('c_canada','resusd')=witch_c_canada.resusd;solrep('c_canada','numvar')=witch_c_canada.numvar;solrep('c_canada','numequ')=witch_c_canada.numequ;solrep('c_canada','numnz')=witch_c_canada.numnz;solrep('c_canada','numvarproj')=witch_c_canada.numvarproj;solrep('c_canada','numinfes')=witch_c_canada.numinfes;solrep('c_canada','numnopt')=witch_c_canada.numnopt;solrep('c_canada','domusd')=witch_c_canada.domusd;); if(sameas(clt,'c_china'), solrep('c_china','objval')=witch_c_china.objval;solrep('c_china','solvestat')=witch_c_china.solvestat;solrep('c_china','modelstat')=witch_c_china.modelstat;solrep('c_china','iterusd')=witch_c_china.iterusd;solrep('c_china','resusd')=witch_c_china.resusd;solrep('c_china','numvar')=witch_c_china.numvar;solrep('c_china','numequ')=witch_c_china.numequ;solrep('c_china','numnz')=witch_c_china.numnz;solrep('c_china','numvarproj')=witch_c_china.numvarproj;solrep('c_china','numinfes')=witch_c_china.numinfes;solrep('c_china','numnopt')=witch_c_china.numnopt;solrep('c_china','domusd')=witch_c_china.domusd;); if(sameas(clt,'c_europe'), solrep('c_europe','objval')=witch_c_europe.objval;solrep('c_europe','solvestat')=witch_c_europe.solvestat;solrep('c_europe','modelstat')=witch_c_europe.modelstat;solrep('c_europe','iterusd')=witch_c_europe.iterusd;solrep('c_europe','resusd')=witch_c_europe.resusd;solrep('c_europe','numvar')=witch_c_europe.numvar;solrep('c_europe','numequ')=witch_c_europe.numequ;solrep('c_europe','numnz')=witch_c_europe.numnz;solrep('c_europe','numvarproj')=witch_c_europe.numvarproj;solrep('c_europe','numinfes')=witch_c_europe.numinfes;solrep('c_europe','numnopt')=witch_c_europe.numnopt;solrep('c_europe','domusd')=witch_c_europe.domusd;); if(sameas(clt,'c_india'), solrep('c_india','objval')=witch_c_india.objval;solrep('c_india','solvestat')=witch_c_india.solvestat;solrep('c_india','modelstat')=witch_c_india.modelstat;solrep('c_india','iterusd')=witch_c_india.iterusd;solrep('c_india','resusd')=witch_c_india.resusd;solrep('c_india','numvar')=witch_c_india.numvar;solrep('c_india','numequ')=witch_c_india.numequ;solrep('c_india','numnz')=witch_c_india.numnz;solrep('c_india','numvarproj')=witch_c_india.numvarproj;solrep('c_india','numinfes')=witch_c_india.numinfes;solrep('c_india','numnopt')=witch_c_india.numnopt;solrep('c_india','domusd')=witch_c_india.domusd;); if(sameas(clt,'c_indonesia'), solrep('c_indonesia','objval')=witch_c_indonesia.objval;solrep('c_indonesia','solvestat')=witch_c_indonesia.solvestat;solrep('c_indonesia','modelstat')=witch_c_indonesia.modelstat;solrep('c_indonesia','iterusd')=witch_c_indonesia.iterusd;solrep('c_indonesia','resusd')=witch_c_indonesia.resusd;solrep('c_indonesia','numvar')=witch_c_indonesia.numvar;solrep('c_indonesia','numequ')=witch_c_indonesia.numequ;solrep('c_indonesia','numnz')=witch_c_indonesia.numnz;solrep('c_indonesia','numvarproj')=witch_c_indonesia.numvarproj;solrep('c_indonesia','numinfes')=witch_c_indonesia.numinfes;solrep('c_indonesia','numnopt')=witch_c_indonesia.numnopt;solrep('c_indonesia','domusd')=witch_c_indonesia.domusd;); if(sameas(clt,'c_jpnkor'), solrep('c_jpnkor','objval')=witch_c_jpnkor.objval;solrep('c_jpnkor','solvestat')=witch_c_jpnkor.solvestat;solrep('c_jpnkor','modelstat')=witch_c_jpnkor.modelstat;solrep('c_jpnkor','iterusd')=witch_c_jpnkor.iterusd;solrep('c_jpnkor','resusd')=witch_c_jpnkor.resusd;solrep('c_jpnkor','numvar')=witch_c_jpnkor.numvar;solrep('c_jpnkor','numequ')=witch_c_jpnkor.numequ;solrep('c_jpnkor','numnz')=witch_c_jpnkor.numnz;solrep('c_jpnkor','numvarproj')=witch_c_jpnkor.numvarproj;solrep('c_jpnkor','numinfes')=witch_c_jpnkor.numinfes;solrep('c_jpnkor','numnopt')=witch_c_jpnkor.numnopt;solrep('c_jpnkor','domusd')=witch_c_jpnkor.domusd;); if(sameas(clt,'c_laca'), solrep('c_laca','objval')=witch_c_laca.objval;solrep('c_laca','solvestat')=witch_c_laca.solvestat;solrep('c_laca','modelstat')=witch_c_laca.modelstat;solrep('c_laca','iterusd')=witch_c_laca.iterusd;solrep('c_laca','resusd')=witch_c_laca.resusd;solrep('c_laca','numvar')=witch_c_laca.numvar;solrep('c_laca','numequ')=witch_c_laca.numequ;solrep('c_laca','numnz')=witch_c_laca.numnz;solrep('c_laca','numvarproj')=witch_c_laca.numvarproj;solrep('c_laca','numinfes')=witch_c_laca.numinfes;solrep('c_laca','numnopt')=witch_c_laca.numnopt;solrep('c_laca','domusd')=witch_c_laca.domusd;); if(sameas(clt,'c_mena'), solrep('c_mena','objval')=witch_c_mena.objval;solrep('c_mena','solvestat')=witch_c_mena.solvestat;solrep('c_mena','modelstat')=witch_c_mena.modelstat;solrep('c_mena','iterusd')=witch_c_mena.iterusd;solrep('c_mena','resusd')=witch_c_mena.resusd;solrep('c_mena','numvar')=witch_c_mena.numvar;solrep('c_mena','numequ')=witch_c_mena.numequ;solrep('c_mena','numnz')=witch_c_mena.numnz;solrep('c_mena','numvarproj')=witch_c_mena.numvarproj;solrep('c_mena','numinfes')=witch_c_mena.numinfes;solrep('c_mena','numnopt')=witch_c_mena.numnopt;solrep('c_mena','domusd')=witch_c_mena.domusd;); if(sameas(clt,'c_mexico'), solrep('c_mexico','objval')=witch_c_mexico.objval;solrep('c_mexico','solvestat')=witch_c_mexico.solvestat;solrep('c_mexico','modelstat')=witch_c_mexico.modelstat;solrep('c_mexico','iterusd')=witch_c_mexico.iterusd;solrep('c_mexico','resusd')=witch_c_mexico.resusd;solrep('c_mexico','numvar')=witch_c_mexico.numvar;solrep('c_mexico','numequ')=witch_c_mexico.numequ;solrep('c_mexico','numnz')=witch_c_mexico.numnz;solrep('c_mexico','numvarproj')=witch_c_mexico.numvarproj;solrep('c_mexico','numinfes')=witch_c_mexico.numinfes;solrep('c_mexico','numnopt')=witch_c_mexico.numnopt;solrep('c_mexico','domusd')=witch_c_mexico.domusd;); if(sameas(clt,'c_oceania'), solrep('c_oceania','objval')=witch_c_oceania.objval;solrep('c_oceania','solvestat')=witch_c_oceania.solvestat;solrep('c_oceania','modelstat')=witch_c_oceania.modelstat;solrep('c_oceania','iterusd')=witch_c_oceania.iterusd;solrep('c_oceania','resusd')=witch_c_oceania.resusd;solrep('c_oceania','numvar')=witch_c_oceania.numvar;solrep('c_oceania','numequ')=witch_c_oceania.numequ;solrep('c_oceania','numnz')=witch_c_oceania.numnz;solrep('c_oceania','numvarproj')=witch_c_oceania.numvarproj;solrep('c_oceania','numinfes')=witch_c_oceania.numinfes;solrep('c_oceania','numnopt')=witch_c_oceania.numnopt;solrep('c_oceania','domusd')=witch_c_oceania.domusd;); if(sameas(clt,'c_sasia'), solrep('c_sasia','objval')=witch_c_sasia.objval;solrep('c_sasia','solvestat')=witch_c_sasia.solvestat;solrep('c_sasia','modelstat')=witch_c_sasia.modelstat;solrep('c_sasia','iterusd')=witch_c_sasia.iterusd;solrep('c_sasia','resusd')=witch_c_sasia.resusd;solrep('c_sasia','numvar')=witch_c_sasia.numvar;solrep('c_sasia','numequ')=witch_c_sasia.numequ;solrep('c_sasia','numnz')=witch_c_sasia.numnz;solrep('c_sasia','numvarproj')=witch_c_sasia.numvarproj;solrep('c_sasia','numinfes')=witch_c_sasia.numinfes;solrep('c_sasia','numnopt')=witch_c_sasia.numnopt;solrep('c_sasia','domusd')=witch_c_sasia.domusd;); if(sameas(clt,'c_seasia'), solrep('c_seasia','objval')=witch_c_seasia.objval;solrep('c_seasia','solvestat')=witch_c_seasia.solvestat;solrep('c_seasia','modelstat')=witch_c_seasia.modelstat;solrep('c_seasia','iterusd')=witch_c_seasia.iterusd;solrep('c_seasia','resusd')=witch_c_seasia.resusd;solrep('c_seasia','numvar')=witch_c_seasia.numvar;solrep('c_seasia','numequ')=witch_c_seasia.numequ;solrep('c_seasia','numnz')=witch_c_seasia.numnz;solrep('c_seasia','numvarproj')=witch_c_seasia.numvarproj;solrep('c_seasia','numinfes')=witch_c_seasia.numinfes;solrep('c_seasia','numnopt')=witch_c_seasia.numnopt;solrep('c_seasia','domusd')=witch_c_seasia.domusd;); if(sameas(clt,'c_southafrica'), solrep('c_southafrica','objval')=witch_c_southafrica.objval;solrep('c_southafrica','solvestat')=witch_c_southafrica.solvestat;solrep('c_southafrica','modelstat')=witch_c_southafrica.modelstat;solrep('c_southafrica','iterusd')=witch_c_southafrica.iterusd;solrep('c_southafrica','resusd')=witch_c_southafrica.resusd;solrep('c_southafrica','numvar')=witch_c_southafrica.numvar;solrep('c_southafrica','numequ')=witch_c_southafrica.numequ;solrep('c_southafrica','numnz')=witch_c_southafrica.numnz;solrep('c_southafrica','numvarproj')=witch_c_southafrica.numvarproj;solrep('c_southafrica','numinfes')=witch_c_southafrica.numinfes;solrep('c_southafrica','numnopt')=witch_c_southafrica.numnopt;solrep('c_southafrica','domusd')=witch_c_southafrica.domusd;); if(sameas(clt,'c_ssa'), solrep('c_ssa','objval')=witch_c_ssa.objval;solrep('c_ssa','solvestat')=witch_c_ssa.solvestat;solrep('c_ssa','modelstat')=witch_c_ssa.modelstat;solrep('c_ssa','iterusd')=witch_c_ssa.iterusd;solrep('c_ssa','resusd')=witch_c_ssa.resusd;solrep('c_ssa','numvar')=witch_c_ssa.numvar;solrep('c_ssa','numequ')=witch_c_ssa.numequ;solrep('c_ssa','numnz')=witch_c_ssa.numnz;solrep('c_ssa','numvarproj')=witch_c_ssa.numvarproj;solrep('c_ssa','numinfes')=witch_c_ssa.numinfes;solrep('c_ssa','numnopt')=witch_c_ssa.numnopt;solrep('c_ssa','domusd')=witch_c_ssa.domusd;); if(sameas(clt,'c_te'), solrep('c_te','objval')=witch_c_te.objval;solrep('c_te','solvestat')=witch_c_te.solvestat;solrep('c_te','modelstat')=witch_c_te.modelstat;solrep('c_te','iterusd')=witch_c_te.iterusd;solrep('c_te','resusd')=witch_c_te.resusd;solrep('c_te','numvar')=witch_c_te.numvar;solrep('c_te','numequ')=witch_c_te.numequ;solrep('c_te','numnz')=witch_c_te.numnz;solrep('c_te','numvarproj')=witch_c_te.numvarproj;solrep('c_te','numinfes')=witch_c_te.numinfes;solrep('c_te','numnopt')=witch_c_te.numnopt;solrep('c_te','domusd')=witch_c_te.domusd;); if(sameas(clt,'c_usa'), solrep('c_usa','objval')=witch_c_usa.objval;solrep('c_usa','solvestat')=witch_c_usa.solvestat;solrep('c_usa','modelstat')=witch_c_usa.modelstat;solrep('c_usa','iterusd')=witch_c_usa.iterusd;solrep('c_usa','resusd')=witch_c_usa.resusd;solrep('c_usa','numvar')=witch_c_usa.numvar;solrep('c_usa','numequ')=witch_c_usa.numequ;solrep('c_usa','numnz')=witch_c_usa.numnz;solrep('c_usa','numvarproj')=witch_c_usa.numvarproj;solrep('c_usa','numinfes')=witch_c_usa.numinfes;solrep('c_usa','numnopt')=witch_c_usa.numnopt;solrep('c_usa','domusd')=witch_c_usa.domusd;); ;;
42512          abort$handledelete(remh(clt)) 'ERROR: problem deleting handles' ;
42513          remh(clt)=0;
42514           if((solrep(clt,'solvestat') ne 1) or (solrep(clt,'modelstat') ne 2), cproblem(clt) = yes; else cproblem(clt) = no;);
42515      );
42516  until ((card(remh) eq 0) or ((timeelapsed-timer) gt 1e7));
42517   
42518  if(card(remh) gt 0,
42519    display 'TIME OUT: 1e7 seconds elapsed and not all solves are complete';
42520    cproblem(clt)$(remh(clt)) = yes;
42521  );
42522   
42523  *-------------------------------------------------------------------------------
42524  * Rerun individual problem in case of infeasibility
42525  *-------------------------------------------------------------------------------
42526   
42528   
42529  $macro seqsolve(clt) \
42530    witch_&clt.solvelink = 0; \
42531    launchsolve(&clt); \
42532    witch_&clt.solvelink = 3;
42533   
42534  * rerun models solved with errors
42535  if(card(cproblem) gt 0,
42536    loop(retry$((card(cproblem) gt 0) and (ord(retry) le 2) ),
42537        cproblem2(clt) = yes$cproblem(clt);
42538        loop(cproblem2(clt),
42539             if(sameas(clt,'c_brazil'),  witch_c_brazil.solvelink = 0;  solve witch_c_brazil maximizing OBJADMM using nlp; if((witch_c_brazil.solvelink eq 6) or (witch_c_brazil.solvelink eq 3), remh('c_brazil') = witch_c_brazil.handle; else solrep('c_brazil','objval')=witch_c_brazil.objval;solrep('c_brazil','solvestat')=witch_c_brazil.solvestat;solrep('c_brazil','modelstat')=witch_c_brazil.modelstat;solrep('c_brazil','iterusd')=witch_c_brazil.iterusd;solrep('c_brazil','resusd')=witch_c_brazil.resusd;solrep('c_brazil','numvar')=witch_c_brazil.numvar;solrep('c_brazil','numequ')=witch_c_brazil.numequ;solrep('c_brazil','numnz')=witch_c_brazil.numnz;solrep('c_brazil','numvarproj')=witch_c_brazil.numvarproj;solrep('c_brazil','numinfes')=witch_c_brazil.numinfes;solrep('c_brazil','numnopt')=witch_c_brazil.numnopt;solrep('c_brazil','domusd')=witch_c_brazil.domusd;;  if((solrep('c_brazil','solvestat') ne 1) or (solrep('c_brazil','modelstat') ne 2), cproblem('c_brazil') = yes; else cproblem('c_brazil') = no;));; witch_c_brazil.solvelink = 3;); if(sameas(clt,'c_canada'),  witch_c_canada.solvelink = 0;  solve witch_c_canada maximizing OBJADMM using nlp; if((witch_c_canada.solvelink eq 6) or (witch_c_canada.solvelink eq 3), remh('c_canada') = witch_c_canada.handle; else solrep('c_canada','objval')=witch_c_canada.objval;solrep('c_canada','solvestat')=witch_c_canada.solvestat;solrep('c_canada','modelstat')=witch_c_canada.modelstat;solrep('c_canada','iterusd')=witch_c_canada.iterusd;solrep('c_canada','resusd')=witch_c_canada.resusd;solrep('c_canada','numvar')=witch_c_canada.numvar;solrep('c_canada','numequ')=witch_c_canada.numequ;solrep('c_canada','numnz')=witch_c_canada.numnz;solrep('c_canada','numvarproj')=witch_c_canada.numvarproj;solrep('c_canada','numinfes')=witch_c_canada.numinfes;solrep('c_canada','numnopt')=witch_c_canada.numnopt;solrep('c_canada','domusd')=witch_c_canada.domusd;;  if((solrep('c_canada','solvestat') ne 1) or (solrep('c_canada','modelstat') ne 2), cproblem('c_canada') = yes; else cproblem('c_canada') = no;));; witch_c_canada.solvelink = 3;); if(sameas(clt,'c_china'),  witch_c_china.solvelink = 0;  solve witch_c_china maximizing OBJADMM using nlp; if((witch_c_china.solvelink eq 6) or (witch_c_china.solvelink eq 3), remh('c_china') = witch_c_china.handle; else solrep('c_china','objval')=witch_c_china.objval;solrep('c_china','solvestat')=witch_c_china.solvestat;solrep('c_china','modelstat')=witch_c_china.modelstat;solrep('c_china','iterusd')=witch_c_china.iterusd;solrep('c_china','resusd')=witch_c_china.resusd;solrep('c_china','numvar')=witch_c_china.numvar;solrep('c_china','numequ')=witch_c_china.numequ;solrep('c_china','numnz')=witch_c_china.numnz;solrep('c_china','numvarproj')=witch_c_china.numvarproj;solrep('c_china','numinfes')=witch_c_china.numinfes;solrep('c_china','numnopt')=witch_c_china.numnopt;solrep('c_china','domusd')=witch_c_china.domusd;;  if((solrep('c_china','solvestat') ne 1) or (solrep('c_china','modelstat') ne 2), cproblem('c_china') = yes; else cproblem('c_china') = no;));; witch_c_china.solvelink = 3;); if(sameas(clt,'c_europe'),  witch_c_europe.solvelink = 0;  solve witch_c_europe maximizing OBJADMM using nlp; if((witch_c_europe.solvelink eq 6) or (witch_c_europe.solvelink eq 3), remh('c_europe') = witch_c_europe.handle; else solrep('c_europe','objval')=witch_c_europe.objval;solrep('c_europe','solvestat')=witch_c_europe.solvestat;solrep('c_europe','modelstat')=witch_c_europe.modelstat;solrep('c_europe','iterusd')=witch_c_europe.iterusd;solrep('c_europe','resusd')=witch_c_europe.resusd;solrep('c_europe','numvar')=witch_c_europe.numvar;solrep('c_europe','numequ')=witch_c_europe.numequ;solrep('c_europe','numnz')=witch_c_europe.numnz;solrep('c_europe','numvarproj')=witch_c_europe.numvarproj;solrep('c_europe','numinfes')=witch_c_europe.numinfes;solrep('c_europe','numnopt')=witch_c_europe.numnopt;solrep('c_europe','domusd')=witch_c_europe.domusd;;  if((solrep('c_europe','solvestat') ne 1) or (solrep('c_europe','modelstat') ne 2), cproblem('c_europe') = yes; else cproblem('c_europe') = no;));; witch_c_europe.solvelink = 3;); if(sameas(clt,'c_india'),  witch_c_india.solvelink = 0;  solve witch_c_india maximizing OBJADMM using nlp; if((witch_c_india.solvelink eq 6) or (witch_c_india.solvelink eq 3), remh('c_india') = witch_c_india.handle; else solrep('c_india','objval')=witch_c_india.objval;solrep('c_india','solvestat')=witch_c_india.solvestat;solrep('c_india','modelstat')=witch_c_india.modelstat;solrep('c_india','iterusd')=witch_c_india.iterusd;solrep('c_india','resusd')=witch_c_india.resusd;solrep('c_india','numvar')=witch_c_india.numvar;solrep('c_india','numequ')=witch_c_india.numequ;solrep('c_india','numnz')=witch_c_india.numnz;solrep('c_india','numvarproj')=witch_c_india.numvarproj;solrep('c_india','numinfes')=witch_c_india.numinfes;solrep('c_india','numnopt')=witch_c_india.numnopt;solrep('c_india','domusd')=witch_c_india.domusd;;  if((solrep('c_india','solvestat') ne 1) or (solrep('c_india','modelstat') ne 2), cproblem('c_india') = yes; else cproblem('c_india') = no;));; witch_c_india.solvelink = 3;); if(sameas(clt,'c_indonesia'),  witch_c_indonesia.solvelink = 0;  solve witch_c_indonesia maximizing OBJADMM using nlp; if((witch_c_indonesia.solvelink eq 6) or (witch_c_indonesia.solvelink eq 3), remh('c_indonesia') = witch_c_indonesia.handle; else solrep('c_indonesia','objval')=witch_c_indonesia.objval;solrep('c_indonesia','solvestat')=witch_c_indonesia.solvestat;solrep('c_indonesia','modelstat')=witch_c_indonesia.modelstat;solrep('c_indonesia','iterusd')=witch_c_indonesia.iterusd;solrep('c_indonesia','resusd')=witch_c_indonesia.resusd;solrep('c_indonesia','numvar')=witch_c_indonesia.numvar;solrep('c_indonesia','numequ')=witch_c_indonesia.numequ;solrep('c_indonesia','numnz')=witch_c_indonesia.numnz;solrep('c_indonesia','numvarproj')=witch_c_indonesia.numvarproj;solrep('c_indonesia','numinfes')=witch_c_indonesia.numinfes;solrep('c_indonesia','numnopt')=witch_c_indonesia.numnopt;solrep('c_indonesia','domusd')=witch_c_indonesia.domusd;;  if((solrep('c_indonesia','solvestat') ne 1) or (solrep('c_indonesia','modelstat') ne 2), cproblem('c_indonesia') = yes; else cproblem('c_indonesia') = no;));; witch_c_indonesia.solvelink = 3;); if(sameas(clt,'c_jpnkor'),  witch_c_jpnkor.solvelink = 0;  solve witch_c_jpnkor maximizing OBJADMM using nlp; if((witch_c_jpnkor.solvelink eq 6) or (witch_c_jpnkor.solvelink eq 3), remh('c_jpnkor') = witch_c_jpnkor.handle; else solrep('c_jpnkor','objval')=witch_c_jpnkor.objval;solrep('c_jpnkor','solvestat')=witch_c_jpnkor.solvestat;solrep('c_jpnkor','modelstat')=witch_c_jpnkor.modelstat;solrep('c_jpnkor','iterusd')=witch_c_jpnkor.iterusd;solrep('c_jpnkor','resusd')=witch_c_jpnkor.resusd;solrep('c_jpnkor','numvar')=witch_c_jpnkor.numvar;solrep('c_jpnkor','numequ')=witch_c_jpnkor.numequ;solrep('c_jpnkor','numnz')=witch_c_jpnkor.numnz;solrep('c_jpnkor','numvarproj')=witch_c_jpnkor.numvarproj;solrep('c_jpnkor','numinfes')=witch_c_jpnkor.numinfes;solrep('c_jpnkor','numnopt')=witch_c_jpnkor.numnopt;solrep('c_jpnkor','domusd')=witch_c_jpnkor.domusd;;  if((solrep('c_jpnkor','solvestat') ne 1) or (solrep('c_jpnkor','modelstat') ne 2), cproblem('c_jpnkor') = yes; else cproblem('c_jpnkor') = no;));; witch_c_jpnkor.solvelink = 3;); if(sameas(clt,'c_laca'),  witch_c_laca.solvelink = 0;  solve witch_c_laca maximizing OBJADMM using nlp; if((witch_c_laca.solvelink eq 6) or (witch_c_laca.solvelink eq 3), remh('c_laca') = witch_c_laca.handle; else solrep('c_laca','objval')=witch_c_laca.objval;solrep('c_laca','solvestat')=witch_c_laca.solvestat;solrep('c_laca','modelstat')=witch_c_laca.modelstat;solrep('c_laca','iterusd')=witch_c_laca.iterusd;solrep('c_laca','resusd')=witch_c_laca.resusd;solrep('c_laca','numvar')=witch_c_laca.numvar;solrep('c_laca','numequ')=witch_c_laca.numequ;solrep('c_laca','numnz')=witch_c_laca.numnz;solrep('c_laca','numvarproj')=witch_c_laca.numvarproj;solrep('c_laca','numinfes')=witch_c_laca.numinfes;solrep('c_laca','numnopt')=witch_c_laca.numnopt;solrep('c_laca','domusd')=witch_c_laca.domusd;;  if((solrep('c_laca','solvestat') ne 1) or (solrep('c_laca','modelstat') ne 2), cproblem('c_laca') = yes; else cproblem('c_laca') = no;));; witch_c_laca.solvelink = 3;); if(sameas(clt,'c_mena'),  witch_c_mena.solvelink = 0;  solve witch_c_mena maximizing OBJADMM using nlp; if((witch_c_mena.solvelink eq 6) or (witch_c_mena.solvelink eq 3), remh('c_mena') = witch_c_mena.handle; else solrep('c_mena','objval')=witch_c_mena.objval;solrep('c_mena','solvestat')=witch_c_mena.solvestat;solrep('c_mena','modelstat')=witch_c_mena.modelstat;solrep('c_mena','iterusd')=witch_c_mena.iterusd;solrep('c_mena','resusd')=witch_c_mena.resusd;solrep('c_mena','numvar')=witch_c_mena.numvar;solrep('c_mena','numequ')=witch_c_mena.numequ;solrep('c_mena','numnz')=witch_c_mena.numnz;solrep('c_mena','numvarproj')=witch_c_mena.numvarproj;solrep('c_mena','numinfes')=witch_c_mena.numinfes;solrep('c_mena','numnopt')=witch_c_mena.numnopt;solrep('c_mena','domusd')=witch_c_mena.domusd;;  if((solrep('c_mena','solvestat') ne 1) or (solrep('c_mena','modelstat') ne 2), cproblem('c_mena') = yes; else cproblem('c_mena') = no;));; witch_c_mena.solvelink = 3;); if(sameas(clt,'c_mexico'),  witch_c_mexico.solvelink = 0;  solve witch_c_mexico maximizing OBJADMM using nlp; if((witch_c_mexico.solvelink eq 6) or (witch_c_mexico.solvelink eq 3), remh('c_mexico') = witch_c_mexico.handle; else solrep('c_mexico','objval')=witch_c_mexico.objval;solrep('c_mexico','solvestat')=witch_c_mexico.solvestat;solrep('c_mexico','modelstat')=witch_c_mexico.modelstat;solrep('c_mexico','iterusd')=witch_c_mexico.iterusd;solrep('c_mexico','resusd')=witch_c_mexico.resusd;solrep('c_mexico','numvar')=witch_c_mexico.numvar;solrep('c_mexico','numequ')=witch_c_mexico.numequ;solrep('c_mexico','numnz')=witch_c_mexico.numnz;solrep('c_mexico','numvarproj')=witch_c_mexico.numvarproj;solrep('c_mexico','numinfes')=witch_c_mexico.numinfes;solrep('c_mexico','numnopt')=witch_c_mexico.numnopt;solrep('c_mexico','domusd')=witch_c_mexico.domusd;;  if((solrep('c_mexico','solvestat') ne 1) or (solrep('c_mexico','modelstat') ne 2), cproblem('c_mexico') = yes; else cproblem('c_mexico') = no;));; witch_c_mexico.solvelink = 3;); if(sameas(clt,'c_oceania'),  witch_c_oceania.solvelink = 0;  solve witch_c_oceania maximizing OBJADMM using nlp; if((witch_c_oceania.solvelink eq 6) or (witch_c_oceania.solvelink eq 3), remh('c_oceania') = witch_c_oceania.handle; else solrep('c_oceania','objval')=witch_c_oceania.objval;solrep('c_oceania','solvestat')=witch_c_oceania.solvestat;solrep('c_oceania','modelstat')=witch_c_oceania.modelstat;solrep('c_oceania','iterusd')=witch_c_oceania.iterusd;solrep('c_oceania','resusd')=witch_c_oceania.resusd;solrep('c_oceania','numvar')=witch_c_oceania.numvar;solrep('c_oceania','numequ')=witch_c_oceania.numequ;solrep('c_oceania','numnz')=witch_c_oceania.numnz;solrep('c_oceania','numvarproj')=witch_c_oceania.numvarproj;solrep('c_oceania','numinfes')=witch_c_oceania.numinfes;solrep('c_oceania','numnopt')=witch_c_oceania.numnopt;solrep('c_oceania','domusd')=witch_c_oceania.domusd;;  if((solrep('c_oceania','solvestat') ne 1) or (solrep('c_oceania','modelstat') ne 2), cproblem('c_oceania') = yes; else cproblem('c_oceania') = no;));; witch_c_oceania.solvelink = 3;); if(sameas(clt,'c_sasia'),  witch_c_sasia.solvelink = 0;  solve witch_c_sasia maximizing OBJADMM using nlp; if((witch_c_sasia.solvelink eq 6) or (witch_c_sasia.solvelink eq 3), remh('c_sasia') = witch_c_sasia.handle; else solrep('c_sasia','objval')=witch_c_sasia.objval;solrep('c_sasia','solvestat')=witch_c_sasia.solvestat;solrep('c_sasia','modelstat')=witch_c_sasia.modelstat;solrep('c_sasia','iterusd')=witch_c_sasia.iterusd;solrep('c_sasia','resusd')=witch_c_sasia.resusd;solrep('c_sasia','numvar')=witch_c_sasia.numvar;solrep('c_sasia','numequ')=witch_c_sasia.numequ;solrep('c_sasia','numnz')=witch_c_sasia.numnz;solrep('c_sasia','numvarproj')=witch_c_sasia.numvarproj;solrep('c_sasia','numinfes')=witch_c_sasia.numinfes;solrep('c_sasia','numnopt')=witch_c_sasia.numnopt;solrep('c_sasia','domusd')=witch_c_sasia.domusd;;  if((solrep('c_sasia','solvestat') ne 1) or (solrep('c_sasia','modelstat') ne 2), cproblem('c_sasia') = yes; else cproblem('c_sasia') = no;));; witch_c_sasia.solvelink = 3;); if(sameas(clt,'c_seasia'),  witch_c_seasia.solvelink = 0;  solve witch_c_seasia maximizing OBJADMM using nlp; if((witch_c_seasia.solvelink eq 6) or (witch_c_seasia.solvelink eq 3), remh('c_seasia') = witch_c_seasia.handle; else solrep('c_seasia','objval')=witch_c_seasia.objval;solrep('c_seasia','solvestat')=witch_c_seasia.solvestat;solrep('c_seasia','modelstat')=witch_c_seasia.modelstat;solrep('c_seasia','iterusd')=witch_c_seasia.iterusd;solrep('c_seasia','resusd')=witch_c_seasia.resusd;solrep('c_seasia','numvar')=witch_c_seasia.numvar;solrep('c_seasia','numequ')=witch_c_seasia.numequ;solrep('c_seasia','numnz')=witch_c_seasia.numnz;solrep('c_seasia','numvarproj')=witch_c_seasia.numvarproj;solrep('c_seasia','numinfes')=witch_c_seasia.numinfes;solrep('c_seasia','numnopt')=witch_c_seasia.numnopt;solrep('c_seasia','domusd')=witch_c_seasia.domusd;;  if((solrep('c_seasia','solvestat') ne 1) or (solrep('c_seasia','modelstat') ne 2), cproblem('c_seasia') = yes; else cproblem('c_seasia') = no;));; witch_c_seasia.solvelink = 3;); if(sameas(clt,'c_southafrica'),  witch_c_southafrica.solvelink = 0;  solve witch_c_southafrica maximizing OBJADMM using nlp; if((witch_c_southafrica.solvelink eq 6) or (witch_c_southafrica.solvelink eq 3), remh('c_southafrica') = witch_c_southafrica.handle; else solrep('c_southafrica','objval')=witch_c_southafrica.objval;solrep('c_southafrica','solvestat')=witch_c_southafrica.solvestat;solrep('c_southafrica','modelstat')=witch_c_southafrica.modelstat;solrep('c_southafrica','iterusd')=witch_c_southafrica.iterusd;solrep('c_southafrica','resusd')=witch_c_southafrica.resusd;solrep('c_southafrica','numvar')=witch_c_southafrica.numvar;solrep('c_southafrica','numequ')=witch_c_southafrica.numequ;solrep('c_southafrica','numnz')=witch_c_southafrica.numnz;solrep('c_southafrica','numvarproj')=witch_c_southafrica.numvarproj;solrep('c_southafrica','numinfes')=witch_c_southafrica.numinfes;solrep('c_southafrica','numnopt')=witch_c_southafrica.numnopt;solrep('c_southafrica','domusd')=witch_c_southafrica.domusd;;  if((solrep('c_southafrica','solvestat') ne 1) or (solrep('c_southafrica','modelstat') ne 2), cproblem('c_southafrica') = yes; else cproblem('c_southafrica') = no;));; witch_c_southafrica.solvelink = 3;); if(sameas(clt,'c_ssa'),  witch_c_ssa.solvelink = 0;  solve witch_c_ssa maximizing OBJADMM using nlp; if((witch_c_ssa.solvelink eq 6) or (witch_c_ssa.solvelink eq 3), remh('c_ssa') = witch_c_ssa.handle; else solrep('c_ssa','objval')=witch_c_ssa.objval;solrep('c_ssa','solvestat')=witch_c_ssa.solvestat;solrep('c_ssa','modelstat')=witch_c_ssa.modelstat;solrep('c_ssa','iterusd')=witch_c_ssa.iterusd;solrep('c_ssa','resusd')=witch_c_ssa.resusd;solrep('c_ssa','numvar')=witch_c_ssa.numvar;solrep('c_ssa','numequ')=witch_c_ssa.numequ;solrep('c_ssa','numnz')=witch_c_ssa.numnz;solrep('c_ssa','numvarproj')=witch_c_ssa.numvarproj;solrep('c_ssa','numinfes')=witch_c_ssa.numinfes;solrep('c_ssa','numnopt')=witch_c_ssa.numnopt;solrep('c_ssa','domusd')=witch_c_ssa.domusd;;  if((solrep('c_ssa','solvestat') ne 1) or (solrep('c_ssa','modelstat') ne 2), cproblem('c_ssa') = yes; else cproblem('c_ssa') = no;));; witch_c_ssa.solvelink = 3;); if(sameas(clt,'c_te'),  witch_c_te.solvelink = 0;  solve witch_c_te maximizing OBJADMM using nlp; if((witch_c_te.solvelink eq 6) or (witch_c_te.solvelink eq 3), remh('c_te') = witch_c_te.handle; else solrep('c_te','objval')=witch_c_te.objval;solrep('c_te','solvestat')=witch_c_te.solvestat;solrep('c_te','modelstat')=witch_c_te.modelstat;solrep('c_te','iterusd')=witch_c_te.iterusd;solrep('c_te','resusd')=witch_c_te.resusd;solrep('c_te','numvar')=witch_c_te.numvar;solrep('c_te','numequ')=witch_c_te.numequ;solrep('c_te','numnz')=witch_c_te.numnz;solrep('c_te','numvarproj')=witch_c_te.numvarproj;solrep('c_te','numinfes')=witch_c_te.numinfes;solrep('c_te','numnopt')=witch_c_te.numnopt;solrep('c_te','domusd')=witch_c_te.domusd;;  if((solrep('c_te','solvestat') ne 1) or (solrep('c_te','modelstat') ne 2), cproblem('c_te') = yes; else cproblem('c_te') = no;));; witch_c_te.solvelink = 3;); if(sameas(clt,'c_usa'),  witch_c_usa.solvelink = 0;  solve witch_c_usa maximizing OBJADMM using nlp; if((witch_c_usa.solvelink eq 6) or (witch_c_usa.solvelink eq 3), remh('c_usa') = witch_c_usa.handle; else solrep('c_usa','objval')=witch_c_usa.objval;solrep('c_usa','solvestat')=witch_c_usa.solvestat;solrep('c_usa','modelstat')=witch_c_usa.modelstat;solrep('c_usa','iterusd')=witch_c_usa.iterusd;solrep('c_usa','resusd')=witch_c_usa.resusd;solrep('c_usa','numvar')=witch_c_usa.numvar;solrep('c_usa','numequ')=witch_c_usa.numequ;solrep('c_usa','numnz')=witch_c_usa.numnz;solrep('c_usa','numvarproj')=witch_c_usa.numvarproj;solrep('c_usa','numinfes')=witch_c_usa.numinfes;solrep('c_usa','numnopt')=witch_c_usa.numnopt;solrep('c_usa','domusd')=witch_c_usa.domusd;;  if((solrep('c_usa','solvestat') ne 1) or (solrep('c_usa','modelstat') ne 2), cproblem('c_usa') = yes; else cproblem('c_usa') = no;));; witch_c_usa.solvelink = 3;); ;;
42540        );
42541    );
42542  );
42543   
42544  * Store model status
42545  * optimal: optimal (code=1) or locally optimal (code=2)
42546  * feasible: locally optimal (code=2) or feasible solution excluding discrete variables (code=7)
42547  all_optimal(run,siter)   = yes$(sum(clt,solrep(clt,'modelstat')) le sum(clt,2));
42548  all_feasible(run,siter)  = yes$(sum(clt$((solrep(clt,'modelstat') eq 2) or (solrep(clt,'modelstat') eq 7)),1) eq card(clt));
42549  nb_clt_infes(run,siter) = sum(clt$(solrep(clt,'modelstat') eq 4  or solrep(clt,'modelstat') eq 5  or solrep(clt,'modelstat') eq 6),1);
42550  nb_clt_noopt(run,siter) = sum(clt$(solrep(clt,'modelstat') eq 7),1);
42551  nb_tot_infes(run,siter) = sum(clt,solrep(clt,'numinfes'));
42552   
42554   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\compute_marginal.gms
42556  *-------------------------------------------------------------------------------
42557  * Retrive Marginal Values for the convergence algorithm
42558  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
42560  *-------------------------------------------------------------------------------
42561  * Extract the marginal value from equation
42562  * Usage:
42563  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
42564  *-------------------------------------------------------------------------------
42565   
42573  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_brazil') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_brazil.m(t,clt);
42583  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_canada') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_canada.m(t,clt);
42593  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_china') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_china.m(t,clt);
42603  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_europe') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_europe.m(t,clt);
42613  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_india') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_india.m(t,clt);
42623  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_indonesia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_indonesia.m(t,clt);
42633  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_jpnkor') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_jpnkor.m(t,clt);
42643  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_laca') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_laca.m(t,clt);
42653  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_mena') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_mena.m(t,clt);
42663  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_mexico') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_mexico.m(t,clt);
42673  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_oceania') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_oceania.m(t,clt);
42683  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_sasia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_sasia.m(t,clt);
42693  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_seasia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_seasia.m(t,clt);
42703  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_southafrica') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_southafrica.m(t,clt);
42713  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_ssa') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_ssa.m(t,clt);
42723  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_te') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_te.m(t,clt);
42733  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_usa') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_usa.m(t,clt);
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
42742  *-------------------------------------------------------------------------------
42743  * Extract the marginal value from equation
42744  * Usage:
42745  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
42746  *-------------------------------------------------------------------------------
42747   
42755  m_eqq_cc(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_brazil.m(t,tp1,n);
42765  m_eqq_cc(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_canada.m(t,tp1,n);
42775  m_eqq_cc(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_china.m(t,tp1,n);
42785  m_eqq_cc(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_europe.m(t,tp1,n);
42795  m_eqq_cc(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_india.m(t,tp1,n);
42805  m_eqq_cc(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_indonesia.m(t,tp1,n);
42815  m_eqq_cc(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_jpnkor.m(t,tp1,n);
42825  m_eqq_cc(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_laca.m(t,tp1,n);
42835  m_eqq_cc(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_mena.m(t,tp1,n);
42845  m_eqq_cc(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_mexico.m(t,tp1,n);
42855  m_eqq_cc(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_oceania.m(t,tp1,n);
42865  m_eqq_cc(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_sasia.m(t,tp1,n);
42875  m_eqq_cc(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_seasia.m(t,tp1,n);
42885  m_eqq_cc(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_southafrica.m(t,tp1,n);
42895  m_eqq_cc(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_ssa.m(t,tp1,n);
42905  m_eqq_cc(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_te.m(t,tp1,n);
42915  m_eqq_cc(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_usa.m(t,tp1,n);
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
42924  *-------------------------------------------------------------------------------
42925  * Extract the marginal value from equation
42926  * Usage:
42927  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
42928  *-------------------------------------------------------------------------------
42929   
42937  m_eqq_emi_lim(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_brazil.m(t,n);
42947  m_eqq_emi_lim(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_canada.m(t,n);
42957  m_eqq_emi_lim(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_china.m(t,n);
42967  m_eqq_emi_lim(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_europe.m(t,n);
42977  m_eqq_emi_lim(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_india.m(t,n);
42987  m_eqq_emi_lim(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_indonesia.m(t,n);
42997  m_eqq_emi_lim(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_jpnkor.m(t,n);
43007  m_eqq_emi_lim(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_laca.m(t,n);
43017  m_eqq_emi_lim(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_mena.m(t,n);
43027  m_eqq_emi_lim(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_mexico.m(t,n);
43037  m_eqq_emi_lim(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_oceania.m(t,n);
43047  m_eqq_emi_lim(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_sasia.m(t,n);
43057  m_eqq_emi_lim(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_seasia.m(t,n);
43067  m_eqq_emi_lim(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_southafrica.m(t,n);
43077  m_eqq_emi_lim(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_ssa.m(t,n);
43087  m_eqq_emi_lim(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_te.m(t,n);
43097  m_eqq_emi_lim(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_usa.m(t,n);
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
43106  *-------------------------------------------------------------------------------
43107  * Extract the marginal value from equation
43108  * Usage:
43109  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
43110  *-------------------------------------------------------------------------------
43111   
43119  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_brazil.m(t,n,e);
43129  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_canada.m(t,n,e);
43139  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_china.m(t,n,e);
43149  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_europe.m(t,n,e);
43159  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_india.m(t,n,e);
43169  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_indonesia.m(t,n,e);
43179  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_jpnkor.m(t,n,e);
43189  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_laca.m(t,n,e);
43199  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_mena.m(t,n,e);
43209  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_mexico.m(t,n,e);
43219  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_oceania.m(t,n,e);
43229  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_sasia.m(t,n,e);
43239  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_seasia.m(t,n,e);
43249  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_southafrica.m(t,n,e);
43259  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_ssa.m(t,n,e);
43269  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_te.m(t,n,e);
43279  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_usa.m(t,n,e);
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
43288  *-------------------------------------------------------------------------------
43289  * Extract the marginal value from equation
43290  * Usage:
43291  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
43292  *-------------------------------------------------------------------------------
43293   
43301  m_eqq_y(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_brazil.m(t,n);
43311  m_eqq_y(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_canada.m(t,n);
43321  m_eqq_y(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_china.m(t,n);
43331  m_eqq_y(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_europe.m(t,n);
43341  m_eqq_y(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_india.m(t,n);
43351  m_eqq_y(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_indonesia.m(t,n);
43361  m_eqq_y(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_jpnkor.m(t,n);
43371  m_eqq_y(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_laca.m(t,n);
43381  m_eqq_y(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_mena.m(t,n);
43391  m_eqq_y(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_mexico.m(t,n);
43401  m_eqq_y(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_oceania.m(t,n);
43411  m_eqq_y(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_sasia.m(t,n);
43421  m_eqq_y(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_seasia.m(t,n);
43431  m_eqq_y(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_southafrica.m(t,n);
43441  m_eqq_y(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_ssa.m(t,n);
43451  m_eqq_y(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_te.m(t,n);
43461  m_eqq_y(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_usa.m(t,n);
43469   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
43471  *-------------------------------------------------------------------------------
43472  * Convergence algorithm
43473  *-------------------------------------------------------------------------------
43475   
43476  *-------------------------------------------------------------------------------
43478   
43479  * delta price is equal to the dual of the market clearing equation
43480  * Oil Market
43481  if(internal('oil'),
43482   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
43484  *-------------------------------------------------------------------------------
43485  * Extract the marginal value from equation
43486  * Usage:
43487  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
43488  *-------------------------------------------------------------------------------
43489   
43497  m_eqq_cc(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_brazil.m(t,tp1,n);
43507  m_eqq_cc(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_canada.m(t,tp1,n);
43517  m_eqq_cc(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_china.m(t,tp1,n);
43527  m_eqq_cc(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_europe.m(t,tp1,n);
43537  m_eqq_cc(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_india.m(t,tp1,n);
43547  m_eqq_cc(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_indonesia.m(t,tp1,n);
43557  m_eqq_cc(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_jpnkor.m(t,tp1,n);
43567  m_eqq_cc(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_laca.m(t,tp1,n);
43577  m_eqq_cc(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_mena.m(t,tp1,n);
43587  m_eqq_cc(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_mexico.m(t,tp1,n);
43597  m_eqq_cc(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_oceania.m(t,tp1,n);
43607  m_eqq_cc(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_sasia.m(t,tp1,n);
43617  m_eqq_cc(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_seasia.m(t,tp1,n);
43627  m_eqq_cc(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_southafrica.m(t,tp1,n);
43637  m_eqq_cc(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_ssa.m(t,tp1,n);
43647  m_eqq_cc(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_te.m(t,tp1,n);
43657  m_eqq_cc(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_usa.m(t,tp1,n);
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
43666  *-------------------------------------------------------------------------------
43667  * Extract the marginal value from equation
43668  * Usage:
43669  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
43670  *-------------------------------------------------------------------------------
43671   
43679  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_brazil') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_brazil.m(t,clt);
43689  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_canada') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_canada.m(t,clt);
43699  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_china') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_china.m(t,clt);
43709  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_europe') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_europe.m(t,clt);
43719  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_india') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_india.m(t,clt);
43729  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_indonesia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_indonesia.m(t,clt);
43739  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_jpnkor') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_jpnkor.m(t,clt);
43749  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_laca') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_laca.m(t,clt);
43759  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_mena') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_mena.m(t,clt);
43769  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_mexico') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_mexico.m(t,clt);
43779  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_oceania') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_oceania.m(t,clt);
43789  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_sasia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_sasia.m(t,clt);
43799  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_seasia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_seasia.m(t,clt);
43809  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_southafrica') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_southafrica.m(t,clt);
43819  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_ssa') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_ssa.m(t,clt);
43829  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_te') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_te.m(t,clt);
43839  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_usa') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_usa.m(t,clt);
43847   
43848  m_consumption(t,clt) = sum((n,tp1)$(map_clt_n(clt,n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))),m_eqq_cc(t,tp1,n))/sum(n$map_clt_n(clt,n),1);
43849  delta_price(run,siter,'oil',t)$(not tfix(t)) = (sum(clt$internal_clt('oil',clt),m_eq_mkt_clearing_oil(t,clt)/m_consumption(t,clt)))$(smin(clt$internal_clt('oil',clt),m_consumption(t,clt)) gt eps);
43850   
43851  );
43852  * Permit Markets
43853  loop(c_mkt$internal(c_mkt),
43854   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
43856  *-------------------------------------------------------------------------------
43857  * Extract the marginal value from equation
43858  * Usage:
43859  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
43860  *-------------------------------------------------------------------------------
43861   
43869  m_eqq_cc(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_brazil.m(t,tp1,n);
43879  m_eqq_cc(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_canada.m(t,tp1,n);
43889  m_eqq_cc(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_china.m(t,tp1,n);
43899  m_eqq_cc(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_europe.m(t,tp1,n);
43909  m_eqq_cc(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_india.m(t,tp1,n);
43919  m_eqq_cc(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_indonesia.m(t,tp1,n);
43929  m_eqq_cc(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_jpnkor.m(t,tp1,n);
43939  m_eqq_cc(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_laca.m(t,tp1,n);
43949  m_eqq_cc(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_mena.m(t,tp1,n);
43959  m_eqq_cc(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_mexico.m(t,tp1,n);
43969  m_eqq_cc(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_oceania.m(t,tp1,n);
43979  m_eqq_cc(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_sasia.m(t,tp1,n);
43989  m_eqq_cc(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_seasia.m(t,tp1,n);
43999  m_eqq_cc(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_southafrica.m(t,tp1,n);
44009  m_eqq_cc(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_ssa.m(t,tp1,n);
44019  m_eqq_cc(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_te.m(t,tp1,n);
44029  m_eqq_cc(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_usa.m(t,tp1,n);
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
44038  *-------------------------------------------------------------------------------
44039  * Extract the marginal value from equation
44040  * Usage:
44041  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
44042  *-------------------------------------------------------------------------------
44043   
44051  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_brazil') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_brazil.m(c_mkt,t,clt);
44061  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_canada') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_canada.m(c_mkt,t,clt);
44071  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_china') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_china.m(c_mkt,t,clt);
44081  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_europe') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_europe.m(c_mkt,t,clt);
44091  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_india') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_india.m(c_mkt,t,clt);
44101  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_indonesia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_indonesia.m(c_mkt,t,clt);
44111  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_jpnkor') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_jpnkor.m(c_mkt,t,clt);
44121  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_laca') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_laca.m(c_mkt,t,clt);
44131  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_mena') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_mena.m(c_mkt,t,clt);
44141  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_mexico') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_mexico.m(c_mkt,t,clt);
44151  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_oceania') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_oceania.m(c_mkt,t,clt);
44161  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_sasia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_sasia.m(c_mkt,t,clt);
44171  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_seasia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_seasia.m(c_mkt,t,clt);
44181  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_southafrica') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_southafrica.m(c_mkt,t,clt);
44191  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_ssa') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_ssa.m(c_mkt,t,clt);
44201  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_te') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_te.m(c_mkt,t,clt);
44211  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_usa') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_usa.m(c_mkt,t,clt);
44219   
44220  m_consumption(t,clt) = sum((n,tp1)$(map_clt_n(clt,n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))),m_eqq_cc(t,tp1,n))/sum(n$map_clt_n(clt,n),1);
44221  delta_price(run,siter,c_mkt,t)$(not tfix(t)) = (sum(clt$internal_clt(c_mkt,clt),m_eq_mkt_clearing_nip(c_mkt,t,clt)/m_consumption(t,clt)))$(smin(clt$internal_clt(c_mkt,clt),m_consumption(t,clt)) gt eps);
44222   
44223  );
44224   
44225  *-------------------------------------------------------------------------------
44227   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
44229  *-------------------------------------------------------------------------------
44230  * ADMM algorithm
44231  *-------------------------------------------------------------------------------
44233   
44234  *-------------------------------------------------------------------------------
44236   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
44238  *-------------------------------------------------------------------------------
44239  * Convergence algorithm
44240  *-------------------------------------------------------------------------------
44242   
44243  *-------------------------------------------------------------------------------
44245   
44246  loop((t,n),
44247    if(sum(clt$(map_clt_n(clt,n) and negishi_coop(clt,n)),1) eq 0,
44248      w_negishi(t,n) = 1;
44249    else
44250      w_negishi(t,n) = ((Q.l('CC',t,n)/l(t,n))**(eta)) / sum((nn,clt)$(map_clt_n(clt,n) and map_clt_n(clt,nn)),(Q.l('cc',t,nn)/l(t,nn))**(eta))
44251    )
44252  );
44253  w_negishi_iter(run,siter+1,t,n) = w_negishi(t,n);
44254   
44255  *-------------------------------------------------------------------------------
44257   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
44259  *-------------------------------------------------------------------------------
44260  * ADMM algorithm
44261  *-------------------------------------------------------------------------------
44263   
44264  *-------------------------------------------------------------------------------
44266   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
44268  *-------------------------------------------------------------------------------
44269  * Convergence algorithm
44270  *-------------------------------------------------------------------------------
44272   
44273  *-------------------------------------------------------------------------------
44275   
44276  * Relative variation in investments
44277  * expressed in terms of [% of current total investment].
44278  allerr(run,siter,'inv') = 100 * sum((t,n)$(tcheck(t)),
44279                                abs(I.l('fg',t,n)-LAST_I.l('fg',t,n)) +
44280                                sum(jinv, abs(I_EN.l(jinv,t,n)-LAST_I_EN.l(jinv,t,n))) +
44281                                sum(rd, abs(I_RD.l(rd,t,n)-LAST_I_RD.l(rd,t,n))) +
44282                                sum(extract(f), abs(I_OUT.l(f,t,n)-LAST_I_OUT.l(f,t,n)))
44283                                ) /
44284                              sum((t,n)$(tcheck(t)),
44285                                I.l('fg',t,n) +
44286                                sum(rd,I_RD.l(rd,t,n)) * rd_crowd_out +
44287                                sum(jinv, I_EN.l(jinv,t,n)) +
44288                                sum(extract(f), I_OUT.l(f,t,n))
44289                                );
44290   
44291  * Variation in COST_FUEL
44292  * expressed in terms of [% of total level of consumption].
44293  allerr(run,siter,'pes') = 100 * sum((t,f,n)$(tcheck(t)), abs(COST_FUEL.l(f,t,n)-LAST_COST_FUEL.l(f,t,n))) / sum((t,n)$(tcheck(t)),Q.l('CC',t,n));
44294   
44295  * External markets [market between coalitions]
44296  * Variation in cost of oil
44297  * expressed in terms of [% of total level of consumption].
44298  errtrade('oil',tcheck(t)) = sum(n$trading_t('oil',t,n), Q_FUEL.l('oil',t,n) - Q_OUT.l('oil',t,n));
44299  allerr(run,siter,'oil')$(external('oil')) = 100 * sum(tcheck(t)$(sum(n$(trading_t('oil',t,n)),1)>0),
44300                                                   abs(errtrade('oil',t)) * FPRICE.l('oil',t)
44301                                                   ) / (sum((tcheck(t),n)$(trading_t('oil',t,n)),Q.l('CC',t,n)) + 1e-5);
44302   
44303  * Variation in cost of nip
44304  * expressed in terms of [% of total level of consumption].
44305  errtrade(c_mkt,tcheck(t)) = sum(n$trading_t(c_mkt,t,n), Q_EMI.l(c_mkt,t,n));
44306  allerr(run,siter,c_mkt)$(external(c_mkt)) = 100 * sum(tcheck(t)$(sum(n$(trading_t(c_mkt,t,n)),1)>0),
44307                                                   abs(errtrade(c_mkt,t)) * CPRICE.l(c_mkt,t)
44308                                                   ) / (sum((tcheck(t),n)$(trading_t(c_mkt,t,n)),Q.l('CC',t,n)) + 1e-5);
44309   
44310  * Internal markets [market within coalition]
44311  * Price variation
44312  * expressed in terms of [% of world price].
44313  allerr(run,siter,c_mkt)$(internal(c_mkt)) = 100 * sum(tcheck(t)$(sum(n$(trading_t(c_mkt,t,n)),1)>0), div0(abs(delta_price(run,siter,c_mkt,t)),CPRICE.l(c_mkt,t)));
44314  allerr(run,siter,f_mkt)$(internal(f_mkt)) = 100 * sum(tcheck(t)$(sum(n$(trading_t(f_mkt,t,n)),1)>0), div0(abs(delta_price(run,siter,f_mkt,t)),FPRICE.l(f_mkt,t)));
44315   
44316  * Excess permits of CO2
44317  * expressed in terms of [% of total of allowed emission].
44318  if(sum((c_mkt,t,n)$trading_t(c_mkt,t,n),1),
44319    allerr(run,siter, 'co2') = 100 * sum((tcheck(t),c_mkt), abs(errtrade(c_mkt,t))) /
44320                                 sum((tcheck(t),n,c_mkt)$trading_t(c_mkt,t,n),emi_cap(t,n))
44321  );
44322   
44323  * Relative variation in Negishi weigths
44324  * expressed in terms of [% of last seen value].
44325  allerr(run,siter,'wgt') = 100 * sum((tcheck(t), n)$w_negishi_iter(run,siter+1, t, n), abs(w_negishi_iter(run,siter+1, t, n) - w_negishi_iter(run,siter, t, n)) / w_negishi_iter(run,siter+1, t, n));
44326   
44327  *-------------------------------------------------------------------------------
44329   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
44331  *-------------------------------------------------------------------------------
44332  * ADMM algorithm
44333  *-------------------------------------------------------------------------------
44335   
44336  *-------------------------------------------------------------------------------
44338   
44339  allerr_admm(run,siter,'oil',t)$(external('oil') and tcheck(t) and (sum(n$(trading_t('oil',t,n)),1)>0)) = 100 *
44340                                                      abs(errtrade('oil',t)) * FPRICE.l('oil',t) /
44341                                                      (sum(n$trading_t('oil',t,n),Q.l('CC',t,n)) + 1e-5);
44342   
44343  allerr_admm(run,siter,c_mkt,tcheck(t))$(external('oil') and (sum(n$(trading_t(c_mkt,t,n)),1)>0)) = 100 *
44344                                                      abs(errtrade(c_mkt,t)) * CPRICE.l(c_mkt,t) /
44345                                                      (sum(n$trading_t(c_mkt,t,n),Q.l('CC',t,n)) + 1e-5);
44346   
44347  *-------------------------------------------------------------------------------
44349   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
44351  *-------------------------------------------------------------------------------
44352  * Convergence algorithm
44353  *-------------------------------------------------------------------------------
44355   
44356  *-------------------------------------------------------------------------------
44358   
44359  price_iter(run,siter,f_mkt, t) = FPRICE.l(f_mkt, t);
44360  price_iter(run,siter,c_mkt, t) = CPRICE.l(c_mkt, t);
44361   
44362  * External markets [market between coalitions]
44363  mprofit(run,siter, 'oil', t,n)$(trading_t('oil', t, n)) = -(Q_FUEL.l('oil',t,n) - Q_OUT.l('oil',t,n)) * FPRICE.l('oil',t);
44364  mprofit(run,siter, c_mkt, t,n)$(trading_t(c_mkt, t, n)) = -Q_EMI.l(c_mkt,t,n) * CPRICE.l(c_mkt,t);
44365   
44366  mbalance(run,siter, 'oil', t) = sum(n$trading_t('oil',t,n), Q_FUEL.l('oil',t,n) - Q_OUT.l('oil',t,n));
44367  mbalance(run,siter, c_mkt, t) = sum(n$trading_t(c_mkt,t,n), Q_EMI.l(c_mkt,t,n));
44368   
44369  price_eq(run,siter, c_mkt, t)$(external(c_mkt) and all_optimal(run,siter) and (sum(n$trading_t(c_mkt,t,n),1) gt 0) ) = CPRICE.l(c_mkt,t) * sum(n$trading_t(c_mkt,t,n), Q.l('CC',t,n) - mprofit(run,siter,c_mkt,t,n))/sum(n$trading_t(c_mkt,t,n), Q.l('CC',t,n));
44370  price_eq(run,siter, f_mkt, t)$(external(f_mkt) and all_optimal(run,siter) and (sum(n$trading_t(f_mkt,t,n),1) gt 0) ) = FPRICE.l(f_mkt,t) * sum(n$trading_t(f_mkt,t,n), Q.l('CC',t,n) - mprofit(run,siter,f_mkt,t,n))/sum(n$trading_t(f_mkt,t,n), Q.l('CC',t,n));
44371   
44372  *-------------------------------------------------------------------------------
44374   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
44376  *-------------------------------------------------------------------------------
44377  * ADMM algorithm
44378  *-------------------------------------------------------------------------------
44380   
44381  *-------------------------------------------------------------------------------
44383   
44384  * Follow http://stanford.edu/~boyd/papers/pdf/admm_distr_stats.pdf (pp.56-60)
44385  loop((mkt)$(external(mkt) and (sum((t,n)$trading_t(mkt,t,n),1) gt 0)),
44386      x_admmiter(siter,mkt,t,n)$trading_t(mkt,t,n) = x_admm(mkt,t,n);
44387      x_admm(mkt,t,n)$(trading_t(mkt,t,n) and sum(f_mkt$sameas(f_mkt,mkt),1)) = sum(f$(sameas(f,mkt)), (Q_FUEL.l(f,t,n) - Q_OUT.l(f,t,n)));
44388      x_admm(mkt,t,n)$(trading_t(mkt,t,n) and sum(c_mkt$sameas(c_mkt,mkt),1)) = sum(e$(sameas(e,mkt)), (Q_EMI.l(e,t,n)));
44389      u_admmiter(siter,mkt,t)$(t_admm(mkt,t)) = u_admm(mkt,t);
44390      xavg_admmiter(siter,mkt,t)$(t_admm(mkt,t)) = xavg_admm(mkt,t);
44391      xavg_admm(mkt,t)$(t_admm(mkt,t)) = sum(n$trading_t(mkt,t,n), x_admm(mkt,t,n))/sum(n$trading_t(mkt,t,n), 1);
44392      u_admm(mkt,t)$(t_admm(mkt,t)) = u_admm(mkt,t) + xavg_admm(mkt,t);
44393      z_admmiter(siter,mkt,t,n)$trading_t(mkt,t,n) = z_admm(mkt,t,n);
44394      z_admm(mkt,t,n)$trading_t(mkt,t,n) = u_admmiter(siter,mkt,t) - u_admm(mkt,t) + x_admm(mkt,t,n);
44395      r_admm(siter,mkt) = sum((t,n)$(trading_t(mkt,t,n) and tcheck(t)), power(u_admm(mkt,t) - u_admmiter(siter,mkt,t), 2));
44396      rrel_admm(siter,mkt) = div0(
44397          r_admm(siter,mkt), max(
44398              sum((t,n)$(trading_t(mkt,t,n) and tcheck(t)), power(x_admm(mkt,t,n), 2)),
44399              sum((t,n)$(trading_t(mkt,t,n) and tcheck(t)), power(u_admm(mkt,t), 2))
44400          ));
44401      s_admm(siter,mkt) = sum((t,n)$(trading_t(mkt,t,n) and tcheck(t)), power(rho_admm(mkt,t)*(z_admm(mkt,t,n) - z_admmiter(siter,mkt,t,n)), 2));
44402      srel_admm(siter,mkt) = div0(
44403          sum((t,n)$(trading_t(mkt,t,n) and tcheck(t)), power((z_admm(mkt,t,n) - z_admmiter(siter,mkt,t,n)), 2)),
44404          sum((t,n)$(trading_t(mkt,t,n) and tcheck(t)), power(u_admm(mkt,t), 2))
44405          );
44406      do_price_eq(run,siter,mkt,t) = yes$(t_admm(mkt,t));
44407      if(ord(siter) eq 1,
44408          delta_price_off(t)$sum(f_mkt$sameas(f_mkt,mkt),1) = sum(f_mkt$(sameas(f_mkt,mkt)), FPRICE.l(f_mkt,t));
44409          delta_price_off(t)$sum(c_mkt$sameas(c_mkt,mkt),1) = sum(c_mkt$(sameas(c_mkt,mkt)), CPRICE.l(c_mkt,t));
44410      else
44411          delta_price_off(t) = price_iter(run,siter,mkt,t);
44412      );
44413      delta_price(run,siter,mkt,t)$(t_admm(mkt,t)) = max(u_admm(mkt,t)*rho_admm(mkt,t), sum(tfirst, 0.1*delta_price_off(tfirst))) - delta_price_off(t);
44414      allrho_admm(run,siter,mkt,t) = rho_admm(mkt,t);
44415  * See https://arxiv.org/pdf/1704.06209.pdf
44417      admm_tau(siter,mkt) = 2;
44419      if(rrel_admm(siter,mkt) gt admm_mu*srel_admm(siter,mkt)*csi_admm(mkt),
44420          rho_admm(mkt,t) = admm_tau(siter,mkt)*rho_admm(mkt,t);
44421      elseif srel_admm(siter,mkt)*csi_admm(mkt) gt admm_mu*rrel_admm(siter,mkt),
44422          rho_admm(mkt,t) = 1/admm_tau(siter,mkt)*rho_admm(mkt,t);
44423      );
44424      u_admm(mkt,t)$(t_admm(mkt,t)) = allrho_admm(run,siter,mkt,t)/rho_admm(mkt,t)*u_admm(mkt,t);
44425      z_admm(mkt,t,n)$trading_t(mkt,t,n) = allrho_admm(run,siter,mkt,t)/rho_admm(mkt,t)*u_admmiter(siter,mkt,t) - u_admm(mkt,t) + x_admm(mkt,t,n);
44426  );
44427   
44429   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
44431  *-------------------------------------------------------------------------------
44432  * Convergence algorithm
44433  *-------------------------------------------------------------------------------
44435   
44436  *-------------------------------------------------------------------------------
44438   
44439  * Update fuel price
44440  loop(f_mkt,
44441    if ( (ord(siter) eq 1) and external(f_mkt),
44442      FPRICE.l(f_mkt,t)$(do_price_eq(run,siter,f_mkt,t) and (not tfix(t))) = FPRICE.l(f_mkt,t) + delta_price(run,siter,f_mkt,t);
44443      FPRICE.l(f_mkt,t)$((not do_price_eq(run,siter,f_mkt,t)) and (not tfix(t)))= price_iter(run,siter,f_mkt,t)+sign(mbalance(run,siter,f_mkt,t))*0.05*price_iter(run,siter,f_mkt,t);
44444      trust_region(run,siter,f_mkt,t)$(not tfix(t)) = abs(0.05 * price_iter(run,siter,f_mkt,t));
44445    else
44446      FPRICE.l(f_mkt,t)$(not tfix(t)) = price_iter(run,siter,f_mkt,t) + delta_price(run,siter,f_mkt,t);
44447    );
44448    FPRICE.l(f_mkt,t)$((sum(n$trading_t(f_mkt,t,n),1) eq 0) and (not tfix(t))) = 0;
44449    price_iter(run,siter+1,f_mkt,t) = FPRICE.l(f_mkt,t);
44450  );
44451   
44452  * Update permit price
44453  loop(c_mkt,
44454    if ( (ord(siter) eq 1) and external(c_mkt),
44455      CPRICE.l(c_mkt,t)$(do_price_eq(run,siter,c_mkt,t) and (not tfix(t))) = CPRICE.l(c_mkt,t) + delta_price(run,siter,c_mkt,t);
44456      CPRICE.l(c_mkt,t)$((not do_price_eq(run,siter,c_mkt,t)) and (not tfix(t)))= price_iter(run,siter,c_mkt,t)+sign(mbalance(run,siter,c_mkt,t))*0.05*price_iter(run,siter,c_mkt,t);
44457      trust_region(run,siter,c_mkt,t)$(not tfix(t)) = abs(0.05 * price_iter(run,siter,c_mkt,t));
44458    else
44459      CPRICE.l(c_mkt,t)$(not tfix(t)) = price_iter(run,siter,c_mkt,t) + delta_price(run,siter,c_mkt,t);
44460    );
44461    CPRICE.l(c_mkt,t)$((sum(n$trading_t(c_mkt,t,n),1) eq 0) and (not tfix(t))) = 0;
44462    price_iter(run,siter+1,c_mkt,t) = CPRICE.l(c_mkt,t);
44463  );
44464   
44466   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
44468  *-------------------------------------------------------------------------------
44469  * ADMM algorithm
44470  *-------------------------------------------------------------------------------
44472   
44473  *-------------------------------------------------------------------------------
44475   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
44477  *-------------------------------------------------------------------------------
44478  * Call modules by order
44479  *-------------------------------------------------------------------------------
44483   
44484  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
44486  *-------------------------------------------------------------------------------
44487  * Algorithm
44488  *-------------------------------------------------------------------------------
44489   
44491   
44492  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
44494  *-------------------------------------------------------------------------------
44495  * Time
44496  * - Temporal structure
44497  * - Fixed time periods
44498  * - States of the world
44499  *-------------------------------------------------------------------------------
44500   
44502   
44503  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
44505  *-------------------------------------------------------------------------------
44506  * Geographic dimension and mapping with countries
44507  *-------------------------------------------------------------------------------
44508   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
44511  *-------------------------------------------------------------------------------
44512  * Non-Cooperative Setup
44513  *
44514  * Each region is defined as an individual coalition.
44515  *
44516  *-------------------------------------------------------------------------------
44517   
44519   
44520  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
44522  *-------------------------------------------------------------------------------
44523  * Welfare
44524  *-------------------------------------------------------------------------------
44525   
44527   
44528  * CEBGE global for tn welfare function and gamma
44529  utility_cebge_global =
44530    (sum(t$(year(t) le yeoh), PROB.l(t) * stpf(t) /
44531             (sum(tt$(year(tt) le yeoh), PROB.l(tt) * stpf(tt))) *
44532             (sum(n, l(t,n) / sum(nn, l(t,nn)) *
44533             (Q.l('CC',t,n) / l(t,n))**(1 - gamma)))**(1 / (1 - gamma))**(1 - eta)
44534          ))**(1 / (1 - eta)) /
44535    ((sum(t$(year(t) le yeoh), sum(n, l(t,n)) * PROB.l(t) * stpf(t) * (1 + 0.00)**((1 - eta) * (year(t) - 2005))) /
44536     (sum(t$(year(t) le yeoh), sum(n, l(t,n)) * PROB.l(t) * stpf(t))))**(1 / (1 - eta))
44537    ) * 1e6;
44538   
44539  * Utility per region (based on Utilitarian CEBGE_g0 welfare function, eta throughout all three dimensions)
44540  utility_cebge_regional(n) =
44541    (sum(t$(year(t) le yeoh), PROB.l(t) * stpf(t) * l(t,n) * ((Q.l('CC',t,n) / l(t,n))**(1 - eta))) /
44542            (sum(tt$(year(tt) le yeoh), l(tt,n) * PROB.l(tt) * stpf(tt)))
44543    )**(1 / (1 - eta)) * 1e6;
44544   
44545  * Policy costs based on CEBGE
44546  utility_cebge_pc_global = utility_cebge_global /
44547    ((sum(t$(year(t) le yeoh), PROB.l(t) * stpf(t) /
44548             (sum(tt$(year(tt) le yeoh),PROB.l(tt) * stpf(tt))) *
44549             (sum(n, l(t,n) / sum(nn, l(t,nn)) *
44550             (BAU_Q.l('CC',t,n) / l(t,n))**(1 - gamma)))**(1 / (1 - gamma))**(1 - eta))
44551    )**(1 / (1 - eta)) /
44552    ((sum(t$(year(t) le yeoh), sum(n,l(t,n)) * PROB.l(t) * stpf(t) * (1 + 0.00)**((1 - eta) * (year(t) - 2005))) /
44553      (sum(t$(year(t) le yeoh), sum(n, l(t,n)) * PROB.l(t) * stpf(t))))**(1 / (1 - eta))
44554    ) * 1e6) - 1;
44555   
44556  utility_cebge_pc_regional(n) = utility_cebge_regional(n) /
44557    (( sum(t$(year(t) le yeoh),PROB.l(t)*stpf(t)*l(t,n)*((BAU_Q.l('CC',t,n)/l(t,n))**(1-eta))) /
44558      (sum(tt$(year(tt) le yeoh), l(tt,n)*PROB.l(tt)*stpf(tt))) )**(1/(1-eta)) * 1e6
44559    ) - 1;
44560   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
44563  *-------------------------------------------------------------------------------
44564  * Economy
44565  * - Production and Consumption definition
44566  * - Top-level of the production function
44567  * Options:
44568  * --original_ssp=1 : original SSP population and GDP data
44569  *-------------------------------------------------------------------------------
44570   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
44573  *-------------------------------------------------------------------------------
44574  * Energy sector
44575  *-------------------------------------------------------------------------------
44576   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
44579  *-------------------------------------------------------------------------------
44580  * Carbon Emissions
44581  * - Total CO2 emissions and CO2 Fossil fuel and Industry
44582  * - CO2 emission costs
44583  * - GHG permit market
44584  *-------------------------------------------------------------------------------
44585   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
44588  *-------------------------------------------------------------------------------
44589  * Research & Development
44590  * Options:
44591  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
44592  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
44593  *-------------------------------------------------------------------------------
44594   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
44597  *-------------------------------------------------------------------------------
44598  * Default Climate Policy Implementation
44599  *
44600  * Options:
44601  *    --policy={bau (default),ctax}
44602  *        Implement a climate policy setting
44603  *  [ --scen= ]
44604  *        Policy variant.
44605  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
44606  *          * XXX for a fixed percentage/yr (e.g. 5) growth
44607  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
44608  *  [ --ctax_year=2020 ]
44609  *        Starting year of the carbon tax
44610  *  [ --ctax_initial=30 ]
44611  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
44612  *
44613  *-------------------------------------------------------------------------------
44615   
44616  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
44618  *-------------------------------------------------------------------------------
44619  * Energy efficiency
44620  *-------------------------------------------------------------------------------
44621   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
44624  *-------------------------------------------------------------------------------
44625  * Hydro Power
44626  *-------------------------------------------------------------------------------
44627   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
44630  *-------------------------------------------------------------------------------
44631  * System Integration:
44632  * - Capacity constraint
44633  * - Flexibility constraint
44634  * - Grid Investment
44635  * - Capacity growth constraint
44636  *-------------------------------------------------------------------------------
44637   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
44640  *-------------------------------------------------------------------------------
44641  * Nuclear power plants
44642  *-------------------------------------------------------------------------------
44643   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
44646  *-------------------------------------------------------------------------------
44647  * GHG module
44648  * - CH4 FFI + CH4 waste + CH4 open fires
44649  * - N2O FFI + N2O waste + N2O open fires
44650  *-------------------------------------------------------------------------------
44651   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
44654  *-------------------------------------------------------------------------------
44655  * F-gases
44656  * - LLF
44657  * - SLF
44658  *-------------------------------------------------------------------------------
44659   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
44662  *-------------------------------------------------------------------------------
44663  * Landuse [simplified version of the land-use model]
44664  *-------------------------------------------------------------------------------
44665   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
44668  *-------------------------------------------------------------------------------
44669  * Bioenergy power plant
44670  *-------------------------------------------------------------------------------
44671   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
44674  *-------------------------------------------------------------------------------
44675  * Traditional Biofuels
44676  * - Requires the precedence of mod_landuse
44677  *-------------------------------------------------------------------------------
44678   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
44681  *-------------------------------------------------------------------------------
44682  * Advanced biofuel
44683  * - Require the precedence of mod_landuse
44684  *-------------------------------------------------------------------------------
44685   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
44688  *-------------------------------------------------------------------------------
44689  * Carbon Capture and Sequestration
44690  *-------------------------------------------------------------------------------
44691   
44693   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
44695  *-------------------------------------------------------------------------------
44696  * Coal for non-electric sectors
44697  * - Coke Plants
44698  * - Industrial and Commercial combined-heat-and-power (CHP)
44699  * - Others
44700  *-------------------------------------------------------------------------------
44701   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
44704  *-------------------------------------------------------------------------------
44705  * Wind energy module
44706  * - onshore and offshore
44707  *-------------------------------------------------------------------------------
44708   
44710   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
44712  *-------------------------------------------------------------------------------
44713  * Solar Powerplants (PV and CSP) to the electrical system
44714  *-------------------------------------------------------------------------------
44715   
44716  *-------------------------------------------------------------------------------
44718   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
44720  *-------------------------------------------------------------------------------
44721  * Technology development scenarios
44722  *-------------------------------------------------------------------------------
44723   
44725   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
44727  *-------------------------------------------------------------------------------
44728  * Oil Extraction
44729  * Options:
44730  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
44731  *-------------------------------------------------------------------------------
44732   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
44735  *-------------------------------------------------------------------------------
44736  * Uranium Resources
44737  *-------------------------------------------------------------------------------
44738   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
44741  *-------------------------------------------------------------------------------
44742  * Gas Resources
44743  *-------------------------------------------------------------------------------
44744   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
44747  *-------------------------------------------------------------------------------
44748  * Coal Resources
44749  *-------------------------------------------------------------------------------
44750   
44752   
44753   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
44755  *-------------------------------------------------------------------------------
44756  * Climate
44757  *
44758  * Represents the climate
44759  * - based on the DICE model equations
44760  * - Radiative forcing for non CO2 ghgs
44761  * - parameters calibrated to reproduce MAGICC6.4 default response
44762  *
44763  *  Options:
44764  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
44765  * - $setglobal cooperate_on_climate {'YES','NO'}
44766  * - 'YES'(default): Countries within a coalition act in cooperation
44767  *   'NO': Countries within a coalition act individually
44768  *
44769  *-------------------------------------------------------------------------------
44770   
44772   
44773  wemi(ghg(e),t) = sum(n, Q_EMI.l(e,t,n)) / wemi2qemi(e) + sum((n,ee)$(map_e_bunk(e,ee)), W_EMI.l(ee,t,n)) / card(n);
44774   
44776   
44777  W_EMI.l(ghg,t,n)$(not tfix(t)) = wemi(ghg,t);
44778   
44779  loop((t,tp1)$(pre(t,tp1)),
44780   
44781  WCUM_EMI.l('co2',m,tp1,n)$(not tfix(tp1)) = sum(mm, cmphi(mm,m) * WCUM_EMI.l('co2',mm,t,n)) +
44782                              ( tlen(t) * wemi('co2',t) )$( sameas(m,'atm') );
44783   
44784  WCUM_EMI.l(oghg,'atm',tp1,n)$(not tfix(tp1)) = WCUM_EMI.l(oghg,'atm',t,n)*cmdec1(oghg)**tlen(t)
44785                                   +cmdec2(oghg)*(wemi(oghg,t) +wemi(oghg,tp1))/2
44786                                   +(1-cmdec1(oghg)**tlen(t))*wcum_emi_eq(oghg);
44787  );
44788   
44789   
44790  RF.l('co2',t,n)$(not tfix(t)) = rfc('co2','alpha')*(log(WCUM_EMI.l('co2','atm',t,n))- log(rfc('co2','beta')));
44791   
44792  RF.l(oghg,t,n)$(not tfix(t)) = rfc(oghg,'inter')*rfc(oghg,'fac')*((rfc(oghg,'stm')*WCUM_EMI.l(oghg,'atm',t,n))**rfc(oghg,'ex')
44793                                          -(rfc(oghg,'stm')*emi_preind(oghg))**rfc(oghg,'ex'));
44794   
44795  TRF.l(t,n)$(not tfix(t)) = sum(ghg,RF.l(ghg,t,n)) + rfaerosols(t)
44797                  ;
44798   
44799  loop((t,tp1)$pre(t,tp1),
44800  TEMP.l('atm',tp1,n)$(not tfix(tp1)) = TEMP.l('atm',t,n) +
44801                                             tempc('sigma1') *
44802                                              (TRF.l(t,n) -
44803                                               tempc('lambda') * TEMP.l('atm',t,n) -
44804                                               tempc('sigma2') * (TEMP.l('atm',t,n) - TEMP.l('low',t,n)));
44805   
44806  TEMP.l('low',tp1,n)$(not tfix(tp1)) = TEMP.l('low',t,n) + tempc('heat_ocean') * (TEMP.l('atm',t,n) - TEMP.l('low',t,n));
44807  );
44808   
44810   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
44813  *-------------------------------------------------------------------------------
44814  * Long-run Damages from Climate Change
44815  * - Economic impacts
44816  * - Adaptation
44817  *-------------------------------------------------------------------------------
44818   
44820   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
44822  *-------------------------------------------------------------------------------
44823  * Light-duty Vehicles for Personal Transport
44824  *-------------------------------------------------------------------------------
44825   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
44828  *-------------------------------------------------------------------------------
44829  * Road Freight Transport
44830  *-------------------------------------------------------------------------------
44832   
44833   
44834   
44835   
44836   
44837   
44838  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
44840  *-------------------------------------------------------------------------------
44841  * Traditional Biomass
44842  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
44843  *  - require post_process to be launch before
44844  *-------------------------------------------------------------------------------
44845   
44847   
44848  * Optional modules
44849   
44850  * Policy modules
44851   
44852  * Calibration
44855   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
44857  *-------------------------------------------------------------------------------
44858  * Report model progress
44859  *-------------------------------------------------------------------------------
44860   
44862   
44864   
44865  * Get information
44866  infoiter('infes')     = sum(clt$((solrep(clt,'modelstat') eq 4) or (solrep(clt,'modelstat') eq 5) or (solrep(clt,'modelstat') eq 6)), 1);
44867  infoiter('nonopt')    = sum(clt$((solrep(clt,'modelstat') eq 7)), 1);
44868  infoiter('itertime')  = (timeelapsed-timer);
44869  infoiter('tottime')   = timeelapsed;
44870  allinfoiter(run,siter,iterrep) = infoiter(iterrep);
44871   
44872  put errdat;
44873  errdat.ap=1;
44874   
44875  put ord(siter):<4:0
44876  put ' ';
44877  put all_optimal(run,siter):1:0;
44878  if(nb_clt_noopt(run,siter) eq 0,
44879    put '0';
44880  );
44881  if(nb_clt_noopt(run,siter) ge 1 and nb_clt_noopt(run,siter) le 9,
44882    put nb_clt_noopt(run,siter):1:0;
44883  );
44884  if(nb_clt_noopt(run,siter) gt 9,
44885    put 'X';
44886  );
44887  if(nb_clt_infes(run,siter) eq 0,
44888    put '0';
44889  );
44890  if(nb_clt_infes(run,siter) ge 1 and nb_clt_infes(run,siter) le 9,
44891    put nb_clt_infes(run,siter):1:0;
44892  );
44893  if(nb_clt_infes(run,siter) gt 9,
44894    put 'X';
44895  );
44896  if(nb_tot_infes(run,siter) eq 0,
44897    put '0';
44898  );
44899  if(nb_tot_infes(run,siter) ge 1 and nb_tot_infes(run,siter) lt 9.8e+9,
44900    put log10(nb_tot_infes(run,siter)):1:0;
44901  );
44902  if(nb_tot_infes(run,siter) ge 9.8e+9,
44903    put 'X';
44904  );
44905  loop(ierr,
44906    put allerr(run,siter,ierr):9:3;
44907  );
44908  loop(iterrep$timeiterrep(iterrep),
44909      put ' ';
44910      # hours
44911      if(floor(allinfoiter(run,siter,iterrep)/3600)>0,
44912        put (floor(allinfoiter(run,siter,iterrep)/3600)):3:0, ':';
44913      else
44914        put '  0:';
44915      );
44916      # minutes
44917      if(floor(mod(allinfoiter(run,siter,iterrep),3600)/60)>0,
44918        if(floor(mod(allinfoiter(run,siter,iterrep),3600)/60)>9,
44919          put (floor(mod(allinfoiter(run,siter,iterrep),3600)/60)):2:0, ':';
44920        else
44921          put '0' (floor(mod(allinfoiter(run,siter,iterrep),3600)/60)):1:0, ':';
44922      );
44923      else
44924        put '00:';
44925      );
44926      # seconds
44927      if(floor(mod(allinfoiter(run,siter,iterrep),60))>9,
44928          put (floor(mod(allinfoiter(run,siter,iterrep),60))):2:0;
44929        else
44930          put '0' (floor(mod(allinfoiter(run,siter,iterrep),60))):1:0;
44931      );
44932  );
44933  put /;
44934  putclose errdat;
44935   
44937   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
44939  *-------------------------------------------------------------------------------
44940  * Report model progress
44941  *-------------------------------------------------------------------------------
44942   
44944   
44946   
44947  * write temp gdx
44948  execute_unload 'C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\all_data_temp_eqq_emi_lim_usa_1e-3.gdx';
44949   
44950  * write iter gdx
44952   
44954   
44955  * Stop if all converged
44956  if( (sum(ierr, 1$(allerr(run,siter,ierr) le errtol(ierr))) eq (card(ierr))) and all_optimal(run,siter),
44957    stop_nash = 1;
44958  );
44959   
44960  * End of nash loop
44961  );
44962   
44963  loop(siter$(ord(siter) eq card(siter)),
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
44965  *-------------------------------------------------------------------------------
44966  * Call modules by order
44967  *-------------------------------------------------------------------------------
44971   
44972  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
44974  *-------------------------------------------------------------------------------
44975  * Algorithm
44976  *-------------------------------------------------------------------------------
44977   
44979   
44980  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
44982  *-------------------------------------------------------------------------------
44983  * Time
44984  * - Temporal structure
44985  * - Fixed time periods
44986  * - States of the world
44987  *-------------------------------------------------------------------------------
44988   
44990   
44991  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
44993  *-------------------------------------------------------------------------------
44994  * Geographic dimension and mapping with countries
44995  *-------------------------------------------------------------------------------
44996   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
44999  *-------------------------------------------------------------------------------
45000  * Non-Cooperative Setup
45001  *
45002  * Each region is defined as an individual coalition.
45003  *
45004  *-------------------------------------------------------------------------------
45005   
45007   
45008  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
45010  *-------------------------------------------------------------------------------
45011  * Welfare
45012  *-------------------------------------------------------------------------------
45013   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
45016  *-------------------------------------------------------------------------------
45017  * Economy
45018  * - Production and Consumption definition
45019  * - Top-level of the production function
45020  * Options:
45021  * --original_ssp=1 : original SSP population and GDP data
45022  *-------------------------------------------------------------------------------
45023   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
45026  *-------------------------------------------------------------------------------
45027  * Energy sector
45028  *-------------------------------------------------------------------------------
45029   
45031   
45032  * World cumulative fuel demand
45033  loop((tnofirst(t),tm1)$pre(tm1,t),
45034      wcum(f,t) = wcum(f,tm1) + tlen(t) * sum(n, Q_FUEL.l(f,tm1,n) * 1e-6);
45035  );
45036   
45037  tpes(t,n) = sum(f, Q_FUEL.l(f,t,n)) + Q_EN.l('elhydro',t,n) + Q_EN.l('elwind',t,n) + Q_EN.l('elsolar',t,n);
45038   
45039  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
45042  *-------------------------------------------------------------------------------
45043  * Carbon Emissions
45044  * - Total CO2 emissions and CO2 Fossil fuel and Industry
45045  * - CO2 emission costs
45046  * - GHG permit market
45047  *-------------------------------------------------------------------------------
45048   
45050   
45051  loop(c_mkt,
45052  carbonprice(t,n)$trading_t(c_mkt,t,n) = CPRICE.l(c_mkt,t);
45053  );
45054  carbonprice(t,n)$(ctax('co2',t,n)) = ctax('co2',t,n);
45055   
45056  * Accounting for electrification in the transport sector
45057  * Reference for default carbon efficiency rate: Fajardy and Daggash (2017)
45058  emi_bio_harv(t) = 0.25 * (1 -
45059                     sum((n,ices_el), QEL_OUT.l('edv',ices_el,t,n) + QEL_OUT.l('edvfr',ices_el,t,n)) /
45060                     (sum((f,n,jfed)$(csi(f,jfed,t,n) and (jveh(jfed) or jfrt(jfed))),
45061                        Q_IN.l(f,jfed,t,n)) +
45062                        sum((n,ices_el), QEL_OUT.l('edv',ices_el,t,n) +
45063                                         QEL_OUT.l('edvfr',ices_el,t,n))
45064                      ))**2;
45065   
45066  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
45069  *-------------------------------------------------------------------------------
45070  * Research & Development
45071  * Options:
45072  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
45073  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
45074  *-------------------------------------------------------------------------------
45075   
45077   
45078  wkrd0(rd) = sum(n$leadrd(rd,n), krd0(rd,n)) / sum(n$leadrd(rd,n), 1);
45079   
45081   
45082  *- updating externalities
45083  krd_lead(rd,t) = sum(n$leadrd(rd,n), K_RD.l(rd,t,n));
45084  krd_oth_lead_krd(rd,t,n)$leadrd(rd,n) = krd_lead(rd,t) - K_RD.l(rd,t,n);
45085   
45086  *-initialisation of the SPILL variable
45087  if(ord(siter) eq 1,
45088  SPILL.l(rd,t,n)$((not tfix(t)) and (leadrd(rd,n))) = K_RD.l(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD.l(rd,t,n))*krd_oth_lead_krd(rd,t,n);
45089  SPILL.l(rd,t,n)$((not tfix(t)) and (not leadrd(rd,n))) = K_RD.l(rd,t,n) /krd_lead(rd,t)*(krd_lead(rd,t)-K_RD.l(rd,t,n));
45090  );
45091   
45092  wlspill_k_rd(rd,t,n) = smax(nn, K_RD.l(rd,t,nn)) - K_RD.l(rd,t,n);
45093   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
45096  *-------------------------------------------------------------------------------
45097  * Default Climate Policy Implementation
45098  *
45099  * Options:
45100  *    --policy={bau (default),ctax}
45101  *        Implement a climate policy setting
45102  *  [ --scen= ]
45103  *        Policy variant.
45104  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
45105  *          * XXX for a fixed percentage/yr (e.g. 5) growth
45106  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
45107  *  [ --ctax_year=2020 ]
45108  *        Starting year of the carbon tax
45109  *  [ --ctax_initial=30 ]
45110  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
45111  *
45112  *-------------------------------------------------------------------------------
45114   
45115  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
45117  *-------------------------------------------------------------------------------
45118  * Energy efficiency
45119  *-------------------------------------------------------------------------------
45120   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
45123  *-------------------------------------------------------------------------------
45124  * Hydro Power
45125  *-------------------------------------------------------------------------------
45126   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
45129  *-------------------------------------------------------------------------------
45130  * System Integration:
45131  * - Capacity constraint
45132  * - Flexibility constraint
45133  * - Grid Investment
45134  * - Capacity growth constraint
45135  *-------------------------------------------------------------------------------
45136   
45138   
45139  * If
45140  * - K_EN.lo is not -infinity
45141  * - K_EN(t) and K_EN(t+1) are fixed
45142  * - a mkt_growth_rate is set
45143  * then make sure that the minimum additional capacity in t+1 is compatible with
45144  * with the necessary capacity to go from K_EN(t) to K_EN(t+1). If this is not the case,
45145  * disable the mkt growth constraint, assuming that the K_EN.lo/fx override
45146  * the mkt growth assumptions.
45147  loop((jinv,n,t,tp1,tp2)$(mkt_growth_rate(jinv,tp2,n) and
45148      (K_EN.lo(jinv,tp2,n) gt 0) and
45149      (K_EN.lo(jinv,tp1,n) eq K_EN.up(jinv,tp1,n)) and
45150      (K_EN.lo(jinv,t,n) eq K_EN.up(jinv,t,n)) and
45151      pre(t,tp1) and pre(tp1,tp2)),
45152      jtn_incompatible_with_mkt_growth_cap(jinv,tp1,n) = yes$(((K_EN.lo(jinv,tp2,n)-K_EN.lo(jinv,tp1,n)*(1-delta_en(jinv,tp2,n))**tlen(tp1))/tlen(tp1)) ge
45153          (((K_EN.lo(jinv,tp1,n)-K_EN.lo(jinv,t,n)*(1-delta_en(jinv,tp1,n))**tlen(t))/tlen(t))*(1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3)
45154          );
45155      mkt_growth_rate(jinv,tp1,n)$jtn_incompatible_with_mkt_growth_cap(jinv,tp1,n) = 0;
45156  );
45157   
45158  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
45161  *-------------------------------------------------------------------------------
45162  * Nuclear power plants
45163  *-------------------------------------------------------------------------------
45164   
45166   
45167  if(sum((tt,n)$tfirst(tt),Q_EN.l('elnuclear',tt,n)) gt 0,
45168      wastemgm(t,n) =  cwaste_reg('alpha',n) *
45169                       ( sum(nn, Q_EN.l('elnuclear',t,nn)) /
45170                         sum((tt,nn)$tfirst(tt),Q_EN.l('elnuclear',tt,nn))
45171                       )**cwaste_reg('rho',n);
45172  );
45173  oem(jreal,t,n)$(map_j('elnuclear',jreal)) = oem0(jreal,n) + wastemgm(t,n);
45174   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
45177  *-------------------------------------------------------------------------------
45178  * GHG module
45179  * - CH4 FFI + CH4 waste + CH4 open fires
45180  * - N2O FFI + N2O waste + N2O open fires
45181  *-------------------------------------------------------------------------------
45182   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
45185  *-------------------------------------------------------------------------------
45186  * F-gases
45187  * - LLF
45188  * - SLF
45189  *-------------------------------------------------------------------------------
45190   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
45193  *-------------------------------------------------------------------------------
45194  * Landuse [simplified version of the land-use model]
45195  *-------------------------------------------------------------------------------
45196   
45198   
45199  MCOST_FUEL.fx('wbio',t,n)$(not tfix(t)) = div0(COST_FUEL.l('wbio',t,n),Q_FUEL.l('wbio',t,n));
45200   
45201  * Set the price of co2lu emissions according to the applied policy
45202  loop(c_mkt,
45203  cluprice(t_lu,n)$trading_t(c_mkt,t_lu,n) = CPRICE.l(c_mkt,t_lu);
45204  );
45205  cluprice(t_lu,n)$(ctax('co2',t_lu,n)) = ctax('co2',t_lu,n);
45206  cluprice(t_lu,n)$(nocluprice(t_lu,n)) = 0; # force LU non pricing
45207   
45208  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
45211  *-------------------------------------------------------------------------------
45212  * Bioenergy power plant
45213  *-------------------------------------------------------------------------------
45214   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
45217  *-------------------------------------------------------------------------------
45218  * Traditional Biofuels
45219  * - Requires the precedence of mod_landuse
45220  *-------------------------------------------------------------------------------
45221   
45223   
45224  * If more world demand than world production potential, adjust bounds
45225  loop(t$(not tfix(t) and year(t)<=2100),
45226  if( sum(n, Q_FUEL.l('trbiofuel',t,n)) > sum(n,trbiofuel_max(n)) ,
45227   
45228  else
45229   
45230  Q_FUEL.up('trbiofuel',t,n) = sum(nn,trbiofuel_max(nn));
45231   
45232  );
45233  );
45234   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
45237  *-------------------------------------------------------------------------------
45238  * Advanced biofuel
45239  * - Require the precedence of mod_landuse
45240  *-------------------------------------------------------------------------------
45241   
45243   
45244  loop((t,tp1)$pre(t,tp1),
45245    wcum('nelback',tp1) = wcum('nelback',t) + tlen(t) * sum(n, Q_FUEL.l('advbiofuel',t,n));
45246  );
45247   
45248  Q_FUEL.up('advbiofuel',t,n)$(not tfix(t)) = Q_FUEL.up('wbio',t,n);
45249   
45250  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
45253  *-------------------------------------------------------------------------------
45254  * Carbon Capture and Sequestration
45255  *-------------------------------------------------------------------------------
45256   
45258   
45259  MCOST_EMI.fx('ccs',t,n) = div0(COST_EMI.l('ccs',t,n), Q_EMI.l('ccs',t,n));
45260  MCOST_EMI.fx('ccs_plant',t,n) = div0(COST_EMI.l('ccs_plant',t,n), Q_EMI.l('ccs_plant',t,n));
45261   
45262  * World capital in CCS plant
45263  wcum(jlccs,tfirst) = sum(n,K_EN.l(jlccs,tfirst,n));
45264  loop((tnofirst(t),tm1)$pre(tm1,t),
45265  wcum(jlccs,t) = wcum(jlccs,tm1) + tlen(tm1) * sum(n, I_EN.l(jlccs,tm1,n) / MCOST_INV.l(jlccs,tm1,n));
45266  );
45267   
45268  ccs_wcum_spill(jlccs,t)=sum(jllccs, ccs_spill_factor(jlccs,jllccs)*(wcum(jllccs,t)));
45269   
45270  MCOST_INV.fx(jlccs,t,n)$(ccs_wcum_spill(jlccs,t) gt ccs_wcum0(jlccs)) = max(ccs_floor_cost(jlccs,n), mcost_inv0(jlccs,n) * (ccs_wcum_spill(jlccs,t)/ccs_wcum0(jlccs))**(-ccs_learn(jlccs,t)));
45271   
45272  *-------------------------------------------------------------------------------
45274   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
45276  *-------------------------------------------------------------------------------
45277  * Coal for non-electric sectors
45278  * - Coke Plants
45279  * - Industrial and Commercial combined-heat-and-power (CHP)
45280  * - Others
45281  *-------------------------------------------------------------------------------
45282   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
45285  *-------------------------------------------------------------------------------
45286  * Wind energy module
45287  * - onshore and offshore
45288  *-------------------------------------------------------------------------------
45289   
45291   
45292  loop((tnofirst(t),tm1)$pre(tm1,t),
45293  wcum(jinv_wind,t) = wcum(jinv_wind,tm1) + tlen(t) * sum(n, I_EN.l(jinv_wind,tm1,n) / MCOST_INV.l(jinv_wind,tm1,n));
45294  );
45295   
45296  MCOST_INV.fx('elwindon',t,n)$(not tfix(t) and year(t) le 2020) = mcost_inv_valid_wind('elwindon',t,n);
45297  MCOST_INV_WINDOFF.fx(wind_depth,t,n)$(not tfix(t) and year(t) le 2020) = mcost_inv_valid_wind('elwindoff',t,n) * windoff_costinv(wind_depth);
45298   
45299  MCOST_INV.fx('elwindon',t,n)$(not tfix(t) and year(t) gt 2020) = max(floor_cost('elwindon'),
45300                                             (smax(tt$(year(tt) eq 2020), MCOST_INV.l('elwindon',tt,n))) *
45301                                             ((wcum('elwindon',t) + wind_spill_wcum * (wcum('elwindoff',t))) /
45302                                              ((smax(tt$(year(tt) eq 2020), wcum('elwindon',tt))) + wind_spill_wcum * ((smax(tt$(year(tt) eq 2020), wcum('elwindoff',tt))))))**rd_coef('elwindon','lbd'));
45303  MCOST_INV_WINDOFF.fx(wind_depth,t,n)$(not tfix(t) and year(t) gt 2020) = max(floor_cost('elwindoff'),
45304                                             (smax(tt$(year(tt) eq 2020), MCOST_INV_WINDOFF.l(wind_depth,tt,n))) *
45305                                             ((wcum('elwindoff',t) + wind_spill_wcum*(wcum('elwindon',t))) /
45306                                              ((smax(tt$(year(tt) eq 2020), wcum('elwindoff',tt))) + wind_spill_wcum * ((smax(tt$(year(tt) eq 2020), wcum('elwindon',tt))))))**rd_coef('elwindoff','lbd'));
45307   
45308  MCOST_INV.fx('elwindoff',t,n)$((not tfix(t)) and (K_EN.l('elwindoff',t,n) ne 0)) = sum(wind_depth,MCOST_INV_WINDOFF.l(wind_depth,t,n) * sum((wind_dist,wind_class),K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n))) / K_EN.l('elwindoff',t,n);
45309  MCOST_INV.fx('elwindoff',t,n)$((not tfix(t)) and (K_EN.l('elwindoff',t,n) eq 0)) = smin(wind_depth,MCOST_INV_WINDOFF.l(wind_depth,t,n));
45310   
45311  *-------------------------------------------------------------------------------
45313   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
45315  *-------------------------------------------------------------------------------
45316  * Solar Powerplants (PV and CSP) to the electrical system
45317  *-------------------------------------------------------------------------------
45318   
45319  *-------------------------------------------------------------------------------
45321   
45322  * World cumulative capacities of solar plants
45323  loop((tnofirst(t),tm1)$pre(tm1,t),
45324    wcum(jinv_solar,t) = wcum(jinv_solar,tm1) + tlen(t) * sum(n, I_EN.l(jinv_solar,tm1,n) / MCOST_INV.l(jinv_solar,tm1,n));
45325  );
45326   
45327  * Investment costs of solar plants
45328  MCOST_INV.fx(jreal_solar,t,n)$(not tfix(t) and year(t) le 2020) = mcost_inv_valid_solar(jreal_solar,t,n);
45329  MCOST_INV.fx(jreal_solar,t,n)$(not tfix(t) and year(t) gt 2020) = max(floor_cost(jreal_solar),
45330                                                    (smax(tt$(year(tt) eq 2020), mcost_inv_valid_solar(jreal_solar,tt,n))) *
45331                                                    (wcum(jreal_solar,t) / (smax(tt$(year(tt) eq 2020), wcum(jreal_solar,tt))))**rd_coef(jreal_solar,'lbd'));
45332   
45333  *-------------------------------------------------------------------------------
45335   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
45337  *-------------------------------------------------------------------------------
45338  * Technology development scenarios
45339  *-------------------------------------------------------------------------------
45340   
45342   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
45344  *-------------------------------------------------------------------------------
45345  * Oil Extraction
45346  * Options:
45347  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
45348  *-------------------------------------------------------------------------------
45349   
45351   
45352  MCOST_FUEL.fx('oil',t,n)$(not tfix(t)) = max(sum(tfirst, FPRICE.l('oil',tfirst))*0.1, FPRICE.l('oil',t) + p_mkup('oil',t,n));
45353   
45354  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
45357  *-------------------------------------------------------------------------------
45358  * Uranium Resources
45359  *-------------------------------------------------------------------------------
45360   
45362   
45363  FPRICE.l('uranium',t)$(not tfix(t)) = cexs('uranium','scl') *
45364                          (cexs('uranium','a') +
45365                           cexs('uranium','c') *
45366                           (wcum('uranium',t) /
45367                              (cexs('uranium','fast') * res('uranium',t))
45368                           )**2
45369                          ) + cexs('uranium','extra');
45370   
45371  MCOST_FUEL.fx('uranium',t,n)$(not tfix(t)) = FPRICE.l('uranium',t) + p_mkup('uranium',t,n);
45372   
45373  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
45376  *-------------------------------------------------------------------------------
45377  * Gas Resources
45378  *-------------------------------------------------------------------------------
45379   
45381   
45382  FPRICE.l('gas',t)$(not tfix(t)) = max((smax(tt$(year(tt) eq 2005), FPRICE.l('gas',tt))), sum(polydeg$(cgas(polydeg,'M')), (cgas(polydeg,'M'))*((wcum('gas',t) - cexs('gas','cum0')))**(ord(polydeg)-1)));
45383   
45384  * Calculate cumulative production (by means of polynomial functions)
45385  cum_prodpp('gas',t,n) = max(0, trade_scale_gas('M') *
45386                                 sum(polydeg$(trade_poly_gas(polydeg,'M',N)), (trade_poly_gas(polydeg,'M',N))*(FPRICE.l('gas',t)/(twh2ej/1000))**(ord(polydeg)-1))
45387                             );
45388   
45389  * Ensure cumulative production in 2005 = 0
45390  cum_prodpp('gas',t,n)$(tfirst(t))= 0;
45391   
45392   
45393  * This is to avoid negative production (cumulative production declining)
45394  loop((t,tp1)$(pre(t,tp1)),
45395    cum_prodpp('gas',tp1,n)=max(cum_prodpp('gas',t,n)+1e-5*tlen(t), cum_prodpp('gas',tp1,n) )
45396  );
45397   
45398  ** Calculate annual production
45399  loop((t,tp1)$(pre(t,tp1)),
45400    prodpp('gas',t,n) = (cum_prodpp('gas',tp1,n) - cum_prodpp('gas',t,n))/tlen(t)
45401  );
45402   
45403  prodpp('gas',t,n)$(year(t) > 2100) = sum(nn,Q_FUEL.l('gas',t,nn)) * (smax(tt$(year(tt) eq 2100), (prodpp('gas',tt,n)/sum(nn,prodpp('gas',tt,nn)))));
45404   
45406  Q_OUT.fx('gas',t,n)$(not tfix(t)) = prodpp('gas',t,n);
45408   
45409  MCOST_FUEL.fx('gas',t,n)$(not tfix(t)) = FPRICE.l('gas',t) + p_mkup('gas',t,n);
45410   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
45413  *-------------------------------------------------------------------------------
45414  * Coal Resources
45415  *-------------------------------------------------------------------------------
45416   
45418   
45419  FPRICE.l('coal',t)$(not tfix(t)) = max((smax(tt$(year(tt) eq 2005), FPRICE.l('coal',tt))), sum(polydeg$(ccoal(polydeg,'M')), (ccoal(polydeg,'M'))*((wcum('coal',t) - cexs('coal','cum0')))**(ord(polydeg)-1)));
45420   
45421  * Calculate cumulative production (by means of polynomial functions)
45422  cum_prodpp('coal',t,n) = max(0, trade_scale_coal('M') *
45423                                  sum(polydeg$(trade_poly_coal(polydeg,'M',N)), (trade_poly_coal(polydeg,'M',N))*(FPRICE.l('coal',t)/(twh2ej/1000))**(ord(polydeg)-1))
45424                              );
45425   
45426  * Ensure cumulative production in 2005 = 0
45427  cum_prodpp('coal',t,n)$(tfirst(t))= 0;
45428   
45429   
45430  * This is to avoid negative production (cumulative production declining)
45431  loop((t,tp1)$(pre(t,tp1)),
45432    cum_prodpp('coal',tp1,n)=max(cum_prodpp('coal',t,n)+1e-5*tlen(t), cum_prodpp('coal',tp1,n) )
45433  );
45434   
45435  ** Calculate annual production
45436  loop((t,tp1)$(pre(t,tp1)),
45437    prodpp('coal',t,n) = (cum_prodpp('coal',tp1,n) - cum_prodpp('coal',t,n))/tlen(t)
45438  );
45439   
45440  prodpp('coal',t,n)$(year(t) > 2100) = sum(nn,Q_FUEL.l('coal',t,nn)) * (smax(tt$(year(tt) eq 2100), (prodpp('coal',tt,n)/sum(nn,prodpp('coal',tt,nn)))));
45441   
45443  Q_OUT.fx('coal',t,n)$(not tfix(t)) = prodpp('coal',t,n);
45445   
45446  MCOST_FUEL.fx('coal',t,n)$(not tfix(t)) = FPRICE.l('coal',t) + p_mkup('coal',t,n);
45447   
45448  *-------------------------------------------------------------------------------
45450   
45451   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
45453  *-------------------------------------------------------------------------------
45454  * Climate
45455  *
45456  * Represents the climate
45457  * - based on the DICE model equations
45458  * - Radiative forcing for non CO2 ghgs
45459  * - parameters calibrated to reproduce MAGICC6.4 default response
45460  *
45461  *  Options:
45462  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
45463  * - $setglobal cooperate_on_climate {'YES','NO'}
45464  * - 'YES'(default): Countries within a coalition act in cooperation
45465  *   'NO': Countries within a coalition act individually
45466  *
45467  *-------------------------------------------------------------------------------
45468   
45470   
45471  wemi(ghg(e),t) = sum(n, Q_EMI.l(e,t,n)) / wemi2qemi(e) + sum((n,ee)$(map_e_bunk(e,ee)), W_EMI.l(ee,t,n)) / card(n);
45472   
45473  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
45476  *-------------------------------------------------------------------------------
45477  * Long-run Damages from Climate Change
45478  * - Economic impacts
45479  * - Adaptation
45480  *-------------------------------------------------------------------------------
45481   
45483   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
45485  *-------------------------------------------------------------------------------
45486  * Light-duty Vehicles for Personal Transport
45487  *-------------------------------------------------------------------------------
45488   
45490   
45491  loop((t,tp1)$(pre(t,tp1)),
45492             wcum('battery',tp1) = sum(n,(div0(I_EN.l('hybrid',t,n),MCOST_INV.l('hybrid',t,n)) +
45493                                          div0(I_EN.l('plg_hybrid',t,n),MCOST_INV.l('plg_hybrid',t,n)) +
45494                                          div0(I_EN.l('edv',t,n),MCOST_INV.l('edv',t,n)) +
45495                                          div0(I_EN.l('hbd_stfr',t,n),MCOST_INV.l('hbd_stfr',t,n)) +
45496                                          div0(I_EN.l('plg_hbd_stfr',t,n),MCOST_INV.l('plg_hbd_stfr',t,n)) +
45497                                          div0(I_EN.l('edv_stfr',t,n),MCOST_INV.l('edv_stfr',t,n))) * tlen(t)) +
45498                                          wcum('battery',t)
45499  );
45500   
45502   
45503   
45504  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
45507  *-------------------------------------------------------------------------------
45508  * Road Freight Transport
45509  *-------------------------------------------------------------------------------
45511   
45512   
45513   
45514   
45515   
45516   
45517  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
45519  *-------------------------------------------------------------------------------
45520  * Traditional Biomass
45521  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
45522  *  - require post_process to be launch before
45523  *-------------------------------------------------------------------------------
45524   
45526   
45527  MCOST_FUEL.fx('trbiomass',t,n)$(not tfix(t)) = FPRICE.l('trbiomass',t) + p_mkup('trbiomass',t,n);
45528   
45530   
45531  trbio_ctr('phi',n)$trbio_countries(n)  = sum(tfirst,(neltrbiomass0(tfirst,n)/tpes(tfirst,n))/ min(1,trbio_ctr('beta',n)*log(mer2ppp(tfirst,n)*1e6*Q.l('y',tfirst,n)/l(tfirst,n))+trbio_ctr('alpha',n)));
45532  trbio_gdp_fun(t,n) = trbio_ctr('phi',n)*(1- min(1,trbio_ctr('beta',n)*log(mer2ppp(t,n)*1e6*Q.l('y',t,n)/l(t,n))+trbio_ctr('alpha',n)));
45533  scale_trbiomass(n)$trbio_countries(n)  = q0('neltrbiomass',n) / ((tpes(tfirst,n) - q0('neltrbiomass',n))*trbio_gdp_fun(tfirst,n)/(1-trbio_gdp_fun(tfirst,n)));
45534   
45535  Q_FUEL.fx('trbiomass',t,n)$((not tfix(t)) and tfirst(t)) = q0('neltrbiomass',n);
45536  Q_FUEL.fx('trbiomass',t,n)$((not tfix(t)) and (tnofirst(t) and trbio_countries(n))) = scale_trbiomass(n) * (tpes(t,n)-Q_FUEL.l('trbiomass',t,n))*trbio_gdp_fun(t,n)/(1-trbio_gdp_fun(t,n));
45537  Q_IN.fx('trbiomass','neltrbiomass',t,n)$(not tfix(t)) = Q_FUEL.l('trbiomass',t,n);
45538  Q_EN.fx('neltrbiomass',t,n)$(not tfix(t))             = Q_FUEL.l('trbiomass',t,n);
45539   
45540  * Safeguard against bad behavior, usually when a startgdx has wrong values.
45541  loop((t,n)$(Q_FUEL.lo('trbiomass',t,n)<0),
45542          Q_IN.fx('trbiomass','neltrbiomass',t,n)$(not tfix(t)) = neltrbiomass0(t,n);
45543          Q_FUEL.fx('trbiomass',t,n)$(not tfix(t))              = neltrbiomass0(t,n);
45544          Q_EN.fx('neltrbiomass',t,n)$(not tfix(t))             = neltrbiomass0(t,n);
45545  );
45546   
45548   
45550   
45551  * Optional modules
45552   
45553  * Policy modules
45554   
45555  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
45560  *-------------------------------------------------------------------------------
45561  * Call modules by order
45562  *-------------------------------------------------------------------------------
45566   
45567  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
45569  *-------------------------------------------------------------------------------
45570  * Algorithm
45571  *-------------------------------------------------------------------------------
45572   
45574   
45575  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
45577  *-------------------------------------------------------------------------------
45578  * Time
45579  * - Temporal structure
45580  * - Fixed time periods
45581  * - States of the world
45582  *-------------------------------------------------------------------------------
45583   
45585   
45586  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
45588  *-------------------------------------------------------------------------------
45589  * Geographic dimension and mapping with countries
45590  *-------------------------------------------------------------------------------
45591   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
45594  *-------------------------------------------------------------------------------
45595  * Non-Cooperative Setup
45596  *
45597  * Each region is defined as an individual coalition.
45598  *
45599  *-------------------------------------------------------------------------------
45600   
45602   
45603  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
45605  *-------------------------------------------------------------------------------
45606  * Welfare
45607  *-------------------------------------------------------------------------------
45608   
45610   
45611  * CEBGE global for tn welfare function and gamma
45612  utility_cebge_global =
45613    (sum(t$(year(t) le yeoh), PROB.l(t) * stpf(t) /
45614             (sum(tt$(year(tt) le yeoh), PROB.l(tt) * stpf(tt))) *
45615             (sum(n, l(t,n) / sum(nn, l(t,nn)) *
45616             (Q.l('CC',t,n) / l(t,n))**(1 - gamma)))**(1 / (1 - gamma))**(1 - eta)
45617          ))**(1 / (1 - eta)) /
45618    ((sum(t$(year(t) le yeoh), sum(n, l(t,n)) * PROB.l(t) * stpf(t) * (1 + 0.00)**((1 - eta) * (year(t) - 2005))) /
45619     (sum(t$(year(t) le yeoh), sum(n, l(t,n)) * PROB.l(t) * stpf(t))))**(1 / (1 - eta))
45620    ) * 1e6;
45621   
45622  * Utility per region (based on Utilitarian CEBGE_g0 welfare function, eta throughout all three dimensions)
45623  utility_cebge_regional(n) =
45624    (sum(t$(year(t) le yeoh), PROB.l(t) * stpf(t) * l(t,n) * ((Q.l('CC',t,n) / l(t,n))**(1 - eta))) /
45625            (sum(tt$(year(tt) le yeoh), l(tt,n) * PROB.l(tt) * stpf(tt)))
45626    )**(1 / (1 - eta)) * 1e6;
45627   
45628  * Policy costs based on CEBGE
45629  utility_cebge_pc_global = utility_cebge_global /
45630    ((sum(t$(year(t) le yeoh), PROB.l(t) * stpf(t) /
45631             (sum(tt$(year(tt) le yeoh),PROB.l(tt) * stpf(tt))) *
45632             (sum(n, l(t,n) / sum(nn, l(t,nn)) *
45633             (BAU_Q.l('CC',t,n) / l(t,n))**(1 - gamma)))**(1 / (1 - gamma))**(1 - eta))
45634    )**(1 / (1 - eta)) /
45635    ((sum(t$(year(t) le yeoh), sum(n,l(t,n)) * PROB.l(t) * stpf(t) * (1 + 0.00)**((1 - eta) * (year(t) - 2005))) /
45636      (sum(t$(year(t) le yeoh), sum(n, l(t,n)) * PROB.l(t) * stpf(t))))**(1 / (1 - eta))
45637    ) * 1e6) - 1;
45638   
45639  utility_cebge_pc_regional(n) = utility_cebge_regional(n) /
45640    (( sum(t$(year(t) le yeoh),PROB.l(t)*stpf(t)*l(t,n)*((BAU_Q.l('CC',t,n)/l(t,n))**(1-eta))) /
45641      (sum(tt$(year(tt) le yeoh), l(tt,n)*PROB.l(tt)*stpf(tt))) )**(1/(1-eta)) * 1e6
45642    ) - 1;
45643   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
45646  *-------------------------------------------------------------------------------
45647  * Economy
45648  * - Production and Consumption definition
45649  * - Top-level of the production function
45650  * Options:
45651  * --original_ssp=1 : original SSP population and GDP data
45652  *-------------------------------------------------------------------------------
45653   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
45656  *-------------------------------------------------------------------------------
45657  * Energy sector
45658  *-------------------------------------------------------------------------------
45659   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
45662  *-------------------------------------------------------------------------------
45663  * Carbon Emissions
45664  * - Total CO2 emissions and CO2 Fossil fuel and Industry
45665  * - CO2 emission costs
45666  * - GHG permit market
45667  *-------------------------------------------------------------------------------
45668   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
45671  *-------------------------------------------------------------------------------
45672  * Research & Development
45673  * Options:
45674  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
45675  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
45676  *-------------------------------------------------------------------------------
45677   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
45680  *-------------------------------------------------------------------------------
45681  * Default Climate Policy Implementation
45682  *
45683  * Options:
45684  *    --policy={bau (default),ctax}
45685  *        Implement a climate policy setting
45686  *  [ --scen= ]
45687  *        Policy variant.
45688  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
45689  *          * XXX for a fixed percentage/yr (e.g. 5) growth
45690  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
45691  *  [ --ctax_year=2020 ]
45692  *        Starting year of the carbon tax
45693  *  [ --ctax_initial=30 ]
45694  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
45695  *
45696  *-------------------------------------------------------------------------------
45698   
45699  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
45701  *-------------------------------------------------------------------------------
45702  * Energy efficiency
45703  *-------------------------------------------------------------------------------
45704   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
45707  *-------------------------------------------------------------------------------
45708  * Hydro Power
45709  *-------------------------------------------------------------------------------
45710   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
45713  *-------------------------------------------------------------------------------
45714  * System Integration:
45715  * - Capacity constraint
45716  * - Flexibility constraint
45717  * - Grid Investment
45718  * - Capacity growth constraint
45719  *-------------------------------------------------------------------------------
45720   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
45723  *-------------------------------------------------------------------------------
45724  * Nuclear power plants
45725  *-------------------------------------------------------------------------------
45726   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
45729  *-------------------------------------------------------------------------------
45730  * GHG module
45731  * - CH4 FFI + CH4 waste + CH4 open fires
45732  * - N2O FFI + N2O waste + N2O open fires
45733  *-------------------------------------------------------------------------------
45734   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
45737  *-------------------------------------------------------------------------------
45738  * F-gases
45739  * - LLF
45740  * - SLF
45741  *-------------------------------------------------------------------------------
45742   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
45745  *-------------------------------------------------------------------------------
45746  * Landuse [simplified version of the land-use model]
45747  *-------------------------------------------------------------------------------
45748   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
45751  *-------------------------------------------------------------------------------
45752  * Bioenergy power plant
45753  *-------------------------------------------------------------------------------
45754   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
45757  *-------------------------------------------------------------------------------
45758  * Traditional Biofuels
45759  * - Requires the precedence of mod_landuse
45760  *-------------------------------------------------------------------------------
45761   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
45764  *-------------------------------------------------------------------------------
45765  * Advanced biofuel
45766  * - Require the precedence of mod_landuse
45767  *-------------------------------------------------------------------------------
45768   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
45771  *-------------------------------------------------------------------------------
45772  * Carbon Capture and Sequestration
45773  *-------------------------------------------------------------------------------
45774   
45776   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
45778  *-------------------------------------------------------------------------------
45779  * Coal for non-electric sectors
45780  * - Coke Plants
45781  * - Industrial and Commercial combined-heat-and-power (CHP)
45782  * - Others
45783  *-------------------------------------------------------------------------------
45784   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
45787  *-------------------------------------------------------------------------------
45788  * Wind energy module
45789  * - onshore and offshore
45790  *-------------------------------------------------------------------------------
45791   
45793   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
45795  *-------------------------------------------------------------------------------
45796  * Solar Powerplants (PV and CSP) to the electrical system
45797  *-------------------------------------------------------------------------------
45798   
45799  *-------------------------------------------------------------------------------
45801   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
45803  *-------------------------------------------------------------------------------
45804  * Technology development scenarios
45805  *-------------------------------------------------------------------------------
45806   
45808   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
45810  *-------------------------------------------------------------------------------
45811  * Oil Extraction
45812  * Options:
45813  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
45814  *-------------------------------------------------------------------------------
45815   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
45818  *-------------------------------------------------------------------------------
45819  * Uranium Resources
45820  *-------------------------------------------------------------------------------
45821   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
45824  *-------------------------------------------------------------------------------
45825  * Gas Resources
45826  *-------------------------------------------------------------------------------
45827   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
45830  *-------------------------------------------------------------------------------
45831  * Coal Resources
45832  *-------------------------------------------------------------------------------
45833   
45835   
45836   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
45838  *-------------------------------------------------------------------------------
45839  * Climate
45840  *
45841  * Represents the climate
45842  * - based on the DICE model equations
45843  * - Radiative forcing for non CO2 ghgs
45844  * - parameters calibrated to reproduce MAGICC6.4 default response
45845  *
45846  *  Options:
45847  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
45848  * - $setglobal cooperate_on_climate {'YES','NO'}
45849  * - 'YES'(default): Countries within a coalition act in cooperation
45850  *   'NO': Countries within a coalition act individually
45851  *
45852  *-------------------------------------------------------------------------------
45853   
45855   
45856  wemi(ghg(e),t) = sum(n, Q_EMI.l(e,t,n)) / wemi2qemi(e) + sum((n,ee)$(map_e_bunk(e,ee)), W_EMI.l(ee,t,n)) / card(n);
45857   
45859   
45860  W_EMI.l(ghg,t,n)$(not tfix(t)) = wemi(ghg,t);
45861   
45862  loop((t,tp1)$(pre(t,tp1)),
45863   
45864  WCUM_EMI.l('co2',m,tp1,n)$(not tfix(tp1)) = sum(mm, cmphi(mm,m) * WCUM_EMI.l('co2',mm,t,n)) +
45865                              ( tlen(t) * wemi('co2',t) )$( sameas(m,'atm') );
45866   
45867  WCUM_EMI.l(oghg,'atm',tp1,n)$(not tfix(tp1)) = WCUM_EMI.l(oghg,'atm',t,n)*cmdec1(oghg)**tlen(t)
45868                                   +cmdec2(oghg)*(wemi(oghg,t) +wemi(oghg,tp1))/2
45869                                   +(1-cmdec1(oghg)**tlen(t))*wcum_emi_eq(oghg);
45870  );
45871   
45872   
45873  RF.l('co2',t,n)$(not tfix(t)) = rfc('co2','alpha')*(log(WCUM_EMI.l('co2','atm',t,n))- log(rfc('co2','beta')));
45874   
45875  RF.l(oghg,t,n)$(not tfix(t)) = rfc(oghg,'inter')*rfc(oghg,'fac')*((rfc(oghg,'stm')*WCUM_EMI.l(oghg,'atm',t,n))**rfc(oghg,'ex')
45876                                          -(rfc(oghg,'stm')*emi_preind(oghg))**rfc(oghg,'ex'));
45877   
45878  TRF.l(t,n)$(not tfix(t)) = sum(ghg,RF.l(ghg,t,n)) + rfaerosols(t)
45880                  ;
45881   
45882  loop((t,tp1)$pre(t,tp1),
45883  TEMP.l('atm',tp1,n)$(not tfix(tp1)) = TEMP.l('atm',t,n) +
45884                                             tempc('sigma1') *
45885                                              (TRF.l(t,n) -
45886                                               tempc('lambda') * TEMP.l('atm',t,n) -
45887                                               tempc('sigma2') * (TEMP.l('atm',t,n) - TEMP.l('low',t,n)));
45888   
45889  TEMP.l('low',tp1,n)$(not tfix(tp1)) = TEMP.l('low',t,n) + tempc('heat_ocean') * (TEMP.l('atm',t,n) - TEMP.l('low',t,n));
45890  );
45891   
45893   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
45896  *-------------------------------------------------------------------------------
45897  * Long-run Damages from Climate Change
45898  * - Economic impacts
45899  * - Adaptation
45900  *-------------------------------------------------------------------------------
45901   
45903   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
45905  *-------------------------------------------------------------------------------
45906  * Light-duty Vehicles for Personal Transport
45907  *-------------------------------------------------------------------------------
45908   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
45911  *-------------------------------------------------------------------------------
45912  * Road Freight Transport
45913  *-------------------------------------------------------------------------------
45915   
45916   
45917   
45918   
45919   
45920   
45921  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
45923  *-------------------------------------------------------------------------------
45924  * Traditional Biomass
45925  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
45926  *  - require post_process to be launch before
45927  *-------------------------------------------------------------------------------
45928   
45930   
45931  * Optional modules
45932   
45933  * Policy modules
45934   
45935  * Calibration
45938  );
45939   
45940  loop(siter$((stop_nash eq 0) and (ord(siter) eq card(siter))),
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
45942  *-------------------------------------------------------------------------------
45943  * Report model progress
45944  *-------------------------------------------------------------------------------
45945   
45947   
45949   
45950  put errdat;
45951  * Horizontal separator
45952  put '----';
45953  put '-----';
45954  loop(ierr,
45955  put '---------';
45956  );
45957  loop(timeiterrep,
45958  put '----------';
45959  );
45960  put /;
45961  put '> reach max_iter!';
45962  put /;
45963  putclose errdat;
45964   
45966  );
45967   
45968  if(stop_nash eq 1,
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
45970  *-------------------------------------------------------------------------------
45971  * Report model progress
45972  *-------------------------------------------------------------------------------
45973   
45975   
45977   
45978  put errdat;
45979  * Horizontal separator
45980  put '----';
45981  put '-----';
45982  loop(ierr,
45983  put '---------';
45984  );
45985  loop(timeiterrep,
45986  put '----------';
45987  );
45988  put /;
45989  put '> Convergence criteria met!';
45990  put /;
45991  putclose errdat;
45992   
45994  );
45995   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
45997  *-------------------------------------------------------------------------------
45998  * Call modules by order
45999  *-------------------------------------------------------------------------------
46003   
46004  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
46006  *-------------------------------------------------------------------------------
46007  * Algorithm
46008  *-------------------------------------------------------------------------------
46009   
46011   
46012  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
46014  *-------------------------------------------------------------------------------
46015  * Time
46016  * - Temporal structure
46017  * - Fixed time periods
46018  * - States of the world
46019  *-------------------------------------------------------------------------------
46020   
46022   
46023  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
46025  *-------------------------------------------------------------------------------
46026  * Geographic dimension and mapping with countries
46027  *-------------------------------------------------------------------------------
46028   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
46031  *-------------------------------------------------------------------------------
46032  * Non-Cooperative Setup
46033  *
46034  * Each region is defined as an individual coalition.
46035  *
46036  *-------------------------------------------------------------------------------
46037   
46039   
46040  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
46042  *-------------------------------------------------------------------------------
46043  * Welfare
46044  *-------------------------------------------------------------------------------
46045   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
46048  *-------------------------------------------------------------------------------
46049  * Economy
46050  * - Production and Consumption definition
46051  * - Top-level of the production function
46052  * Options:
46053  * --original_ssp=1 : original SSP population and GDP data
46054  *-------------------------------------------------------------------------------
46055   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
46058  *-------------------------------------------------------------------------------
46059  * Energy sector
46060  *-------------------------------------------------------------------------------
46061   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
46064  *-------------------------------------------------------------------------------
46065  * Carbon Emissions
46066  * - Total CO2 emissions and CO2 Fossil fuel and Industry
46067  * - CO2 emission costs
46068  * - GHG permit market
46069  *-------------------------------------------------------------------------------
46070   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
46073  *-------------------------------------------------------------------------------
46074  * Research & Development
46075  * Options:
46076  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
46077  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
46078  *-------------------------------------------------------------------------------
46079   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
46082  *-------------------------------------------------------------------------------
46083  * Default Climate Policy Implementation
46084  *
46085  * Options:
46086  *    --policy={bau (default),ctax}
46087  *        Implement a climate policy setting
46088  *  [ --scen= ]
46089  *        Policy variant.
46090  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
46091  *          * XXX for a fixed percentage/yr (e.g. 5) growth
46092  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
46093  *  [ --ctax_year=2020 ]
46094  *        Starting year of the carbon tax
46095  *  [ --ctax_initial=30 ]
46096  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
46097  *
46098  *-------------------------------------------------------------------------------
46100   
46101  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
46103  *-------------------------------------------------------------------------------
46104  * Energy efficiency
46105  *-------------------------------------------------------------------------------
46106   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
46109  *-------------------------------------------------------------------------------
46110  * Hydro Power
46111  *-------------------------------------------------------------------------------
46112   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
46115  *-------------------------------------------------------------------------------
46116  * System Integration:
46117  * - Capacity constraint
46118  * - Flexibility constraint
46119  * - Grid Investment
46120  * - Capacity growth constraint
46121  *-------------------------------------------------------------------------------
46122   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
46125  *-------------------------------------------------------------------------------
46126  * Nuclear power plants
46127  *-------------------------------------------------------------------------------
46128   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
46131  *-------------------------------------------------------------------------------
46132  * GHG module
46133  * - CH4 FFI + CH4 waste + CH4 open fires
46134  * - N2O FFI + N2O waste + N2O open fires
46135  *-------------------------------------------------------------------------------
46136   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
46139  *-------------------------------------------------------------------------------
46140  * F-gases
46141  * - LLF
46142  * - SLF
46143  *-------------------------------------------------------------------------------
46144   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
46147  *-------------------------------------------------------------------------------
46148  * Landuse [simplified version of the land-use model]
46149  *-------------------------------------------------------------------------------
46150   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
46153  *-------------------------------------------------------------------------------
46154  * Bioenergy power plant
46155  *-------------------------------------------------------------------------------
46156   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
46159  *-------------------------------------------------------------------------------
46160  * Traditional Biofuels
46161  * - Requires the precedence of mod_landuse
46162  *-------------------------------------------------------------------------------
46163   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
46166  *-------------------------------------------------------------------------------
46167  * Advanced biofuel
46168  * - Require the precedence of mod_landuse
46169  *-------------------------------------------------------------------------------
46170   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
46173  *-------------------------------------------------------------------------------
46174  * Carbon Capture and Sequestration
46175  *-------------------------------------------------------------------------------
46176   
46178   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
46180  *-------------------------------------------------------------------------------
46181  * Coal for non-electric sectors
46182  * - Coke Plants
46183  * - Industrial and Commercial combined-heat-and-power (CHP)
46184  * - Others
46185  *-------------------------------------------------------------------------------
46186   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
46189  *-------------------------------------------------------------------------------
46190  * Wind energy module
46191  * - onshore and offshore
46192  *-------------------------------------------------------------------------------
46193   
46195   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
46197  *-------------------------------------------------------------------------------
46198  * Solar Powerplants (PV and CSP) to the electrical system
46199  *-------------------------------------------------------------------------------
46200   
46201  *-------------------------------------------------------------------------------
46203   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
46205  *-------------------------------------------------------------------------------
46206  * Technology development scenarios
46207  *-------------------------------------------------------------------------------
46208   
46210   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
46212  *-------------------------------------------------------------------------------
46213  * Oil Extraction
46214  * Options:
46215  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
46216  *-------------------------------------------------------------------------------
46217   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
46220  *-------------------------------------------------------------------------------
46221  * Uranium Resources
46222  *-------------------------------------------------------------------------------
46223   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
46226  *-------------------------------------------------------------------------------
46227  * Gas Resources
46228  *-------------------------------------------------------------------------------
46229   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
46232  *-------------------------------------------------------------------------------
46233  * Coal Resources
46234  *-------------------------------------------------------------------------------
46235   
46237   
46238   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
46240  *-------------------------------------------------------------------------------
46241  * Climate
46242  *
46243  * Represents the climate
46244  * - based on the DICE model equations
46245  * - Radiative forcing for non CO2 ghgs
46246  * - parameters calibrated to reproduce MAGICC6.4 default response
46247  *
46248  *  Options:
46249  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
46250  * - $setglobal cooperate_on_climate {'YES','NO'}
46251  * - 'YES'(default): Countries within a coalition act in cooperation
46252  *   'NO': Countries within a coalition act individually
46253  *
46254  *-------------------------------------------------------------------------------
46255   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
46258  *-------------------------------------------------------------------------------
46259  * Long-run Damages from Climate Change
46260  * - Economic impacts
46261  * - Adaptation
46262  *-------------------------------------------------------------------------------
46263   
46265   
46266  OMEGA.l(t,n)$(not tfix(t)) = 1;
46267   
46269   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
46271  *-------------------------------------------------------------------------------
46272  * Light-duty Vehicles for Personal Transport
46273  *-------------------------------------------------------------------------------
46274   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
46277  *-------------------------------------------------------------------------------
46278  * Road Freight Transport
46279  *-------------------------------------------------------------------------------
46281   
46282   
46283   
46284   
46285   
46286   
46287  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
46289  *-------------------------------------------------------------------------------
46290  * Traditional Biomass
46291  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
46292  *  - require post_process to be launch before
46293  *-------------------------------------------------------------------------------
46294   
46296   
46297  * Optional modules
46298   
46299  * Policy modules
46300   
46301  * Calibration
46304   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
46306  *-------------------------------------------------------------------------------
46307  * Report model progress
46308  *-------------------------------------------------------------------------------
46309   
46311   
46313   
46314  * End of run loop
46315  count_run = count_run + 1;
46316  );
46317   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
46319  *-------------------------------------------------------------------------------
46320  * Report model progress
46321  *-------------------------------------------------------------------------------
46322   
46324   
46326   
46327  put errdat;
46328  * Horizontal separator
46329  put '====';
46330  put '=====';
46331  loop(ierr,
46332  put '=========';
46333  );
46334  loop(timeiterrep,
46335  put '==========';
46336  );
46337  put /;
46338  putclose errdat;
46339   
46341   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
46343  *-------------------------------------------------------------------------------
46344  * Call modules by order
46345  *-------------------------------------------------------------------------------
46349   
46350  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
46352  *-------------------------------------------------------------------------------
46353  * Algorithm
46354  *-------------------------------------------------------------------------------
46355   
46357   
46358  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
46360  *-------------------------------------------------------------------------------
46361  * Time
46362  * - Temporal structure
46363  * - Fixed time periods
46364  * - States of the world
46365  *-------------------------------------------------------------------------------
46366   
46368   
46369  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
46371  *-------------------------------------------------------------------------------
46372  * Geographic dimension and mapping with countries
46373  *-------------------------------------------------------------------------------
46374   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
46377  *-------------------------------------------------------------------------------
46378  * Non-Cooperative Setup
46379  *
46380  * Each region is defined as an individual coalition.
46381  *
46382  *-------------------------------------------------------------------------------
46383   
46385   
46386  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
46388  *-------------------------------------------------------------------------------
46389  * Welfare
46390  *-------------------------------------------------------------------------------
46391   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
46394  *-------------------------------------------------------------------------------
46395  * Economy
46396  * - Production and Consumption definition
46397  * - Top-level of the production function
46398  * Options:
46399  * --original_ssp=1 : original SSP population and GDP data
46400  *-------------------------------------------------------------------------------
46401   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
46404  *-------------------------------------------------------------------------------
46405  * Energy sector
46406  *-------------------------------------------------------------------------------
46407   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
46410  *-------------------------------------------------------------------------------
46411  * Carbon Emissions
46412  * - Total CO2 emissions and CO2 Fossil fuel and Industry
46413  * - CO2 emission costs
46414  * - GHG permit market
46415  *-------------------------------------------------------------------------------
46416   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
46419  *-------------------------------------------------------------------------------
46420  * Research & Development
46421  * Options:
46422  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
46423  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
46424  *-------------------------------------------------------------------------------
46425   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
46428  *-------------------------------------------------------------------------------
46429  * Default Climate Policy Implementation
46430  *
46431  * Options:
46432  *    --policy={bau (default),ctax}
46433  *        Implement a climate policy setting
46434  *  [ --scen= ]
46435  *        Policy variant.
46436  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
46437  *          * XXX for a fixed percentage/yr (e.g. 5) growth
46438  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
46439  *  [ --ctax_year=2020 ]
46440  *        Starting year of the carbon tax
46441  *  [ --ctax_initial=30 ]
46442  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
46443  *
46444  *-------------------------------------------------------------------------------
46446   
46447  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
46449  *-------------------------------------------------------------------------------
46450  * Energy efficiency
46451  *-------------------------------------------------------------------------------
46452   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
46455  *-------------------------------------------------------------------------------
46456  * Hydro Power
46457  *-------------------------------------------------------------------------------
46458   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
46461  *-------------------------------------------------------------------------------
46462  * System Integration:
46463  * - Capacity constraint
46464  * - Flexibility constraint
46465  * - Grid Investment
46466  * - Capacity growth constraint
46467  *-------------------------------------------------------------------------------
46468   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
46471  *-------------------------------------------------------------------------------
46472  * Nuclear power plants
46473  *-------------------------------------------------------------------------------
46474   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
46477  *-------------------------------------------------------------------------------
46478  * GHG module
46479  * - CH4 FFI + CH4 waste + CH4 open fires
46480  * - N2O FFI + N2O waste + N2O open fires
46481  *-------------------------------------------------------------------------------
46482   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
46485  *-------------------------------------------------------------------------------
46486  * F-gases
46487  * - LLF
46488  * - SLF
46489  *-------------------------------------------------------------------------------
46490   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
46493  *-------------------------------------------------------------------------------
46494  * Landuse [simplified version of the land-use model]
46495  *-------------------------------------------------------------------------------
46496   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
46499  *-------------------------------------------------------------------------------
46500  * Bioenergy power plant
46501  *-------------------------------------------------------------------------------
46502   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
46505  *-------------------------------------------------------------------------------
46506  * Traditional Biofuels
46507  * - Requires the precedence of mod_landuse
46508  *-------------------------------------------------------------------------------
46509   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
46512  *-------------------------------------------------------------------------------
46513  * Advanced biofuel
46514  * - Require the precedence of mod_landuse
46515  *-------------------------------------------------------------------------------
46516   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
46519  *-------------------------------------------------------------------------------
46520  * Carbon Capture and Sequestration
46521  *-------------------------------------------------------------------------------
46522   
46524   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
46526  *-------------------------------------------------------------------------------
46527  * Coal for non-electric sectors
46528  * - Coke Plants
46529  * - Industrial and Commercial combined-heat-and-power (CHP)
46530  * - Others
46531  *-------------------------------------------------------------------------------
46532   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
46535  *-------------------------------------------------------------------------------
46536  * Wind energy module
46537  * - onshore and offshore
46538  *-------------------------------------------------------------------------------
46539   
46541   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
46543  *-------------------------------------------------------------------------------
46544  * Solar Powerplants (PV and CSP) to the electrical system
46545  *-------------------------------------------------------------------------------
46546   
46547  *-------------------------------------------------------------------------------
46549   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
46551  *-------------------------------------------------------------------------------
46552  * Technology development scenarios
46553  *-------------------------------------------------------------------------------
46554   
46556   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
46558  *-------------------------------------------------------------------------------
46559  * Oil Extraction
46560  * Options:
46561  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
46562  *-------------------------------------------------------------------------------
46563   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
46566  *-------------------------------------------------------------------------------
46567  * Uranium Resources
46568  *-------------------------------------------------------------------------------
46569   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
46572  *-------------------------------------------------------------------------------
46573  * Gas Resources
46574  *-------------------------------------------------------------------------------
46575   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
46578  *-------------------------------------------------------------------------------
46579  * Coal Resources
46580  *-------------------------------------------------------------------------------
46581   
46583   
46584   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
46586  *-------------------------------------------------------------------------------
46587  * Climate
46588  *
46589  * Represents the climate
46590  * - based on the DICE model equations
46591  * - Radiative forcing for non CO2 ghgs
46592  * - parameters calibrated to reproduce MAGICC6.4 default response
46593  *
46594  *  Options:
46595  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
46596  * - $setglobal cooperate_on_climate {'YES','NO'}
46597  * - 'YES'(default): Countries within a coalition act in cooperation
46598  *   'NO': Countries within a coalition act individually
46599  *
46600  *-------------------------------------------------------------------------------
46601   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
46604  *-------------------------------------------------------------------------------
46605  * Long-run Damages from Climate Change
46606  * - Economic impacts
46607  * - Adaptation
46608  *-------------------------------------------------------------------------------
46609   
46611   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
46613  *-------------------------------------------------------------------------------
46614  * Light-duty Vehicles for Personal Transport
46615  *-------------------------------------------------------------------------------
46616   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
46619  *-------------------------------------------------------------------------------
46620  * Road Freight Transport
46621  *-------------------------------------------------------------------------------
46623   
46624   
46625   
46626   
46627   
46628   
46629  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
46631  *-------------------------------------------------------------------------------
46632  * Traditional Biomass
46633  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
46634  *  - require post_process to be launch before
46635  *-------------------------------------------------------------------------------
46636   
46638   
46639  * Optional modules
46640   
46641  * Policy modules
46642   
46643  * Calibration
46646   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
46648  *-------------------------------------------------------------------------------
46649  * Call modules by order
46650  *-------------------------------------------------------------------------------
46654   
46655  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
46657  *-------------------------------------------------------------------------------
46658  * Algorithm
46659  *-------------------------------------------------------------------------------
46660   
46662   
46663  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
46665  *-------------------------------------------------------------------------------
46666  * Time
46667  * - Temporal structure
46668  * - Fixed time periods
46669  * - States of the world
46670  *-------------------------------------------------------------------------------
46671   
46673   
46674  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
46676  *-------------------------------------------------------------------------------
46677  * Geographic dimension and mapping with countries
46678  *-------------------------------------------------------------------------------
46679   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
46682  *-------------------------------------------------------------------------------
46683  * Non-Cooperative Setup
46684  *
46685  * Each region is defined as an individual coalition.
46686  *
46687  *-------------------------------------------------------------------------------
46688   
46690   
46691  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
46693  *-------------------------------------------------------------------------------
46694  * Welfare
46695  *-------------------------------------------------------------------------------
46696   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
46699  *-------------------------------------------------------------------------------
46700  * Economy
46701  * - Production and Consumption definition
46702  * - Top-level of the production function
46703  * Options:
46704  * --original_ssp=1 : original SSP population and GDP data
46705  *-------------------------------------------------------------------------------
46706   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
46709  *-------------------------------------------------------------------------------
46710  * Energy sector
46711  *-------------------------------------------------------------------------------
46712   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
46715  *-------------------------------------------------------------------------------
46716  * Carbon Emissions
46717  * - Total CO2 emissions and CO2 Fossil fuel and Industry
46718  * - CO2 emission costs
46719  * - GHG permit market
46720  *-------------------------------------------------------------------------------
46721   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
46724  *-------------------------------------------------------------------------------
46725  * Research & Development
46726  * Options:
46727  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
46728  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
46729  *-------------------------------------------------------------------------------
46730   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
46733  *-------------------------------------------------------------------------------
46734  * Default Climate Policy Implementation
46735  *
46736  * Options:
46737  *    --policy={bau (default),ctax}
46738  *        Implement a climate policy setting
46739  *  [ --scen= ]
46740  *        Policy variant.
46741  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
46742  *          * XXX for a fixed percentage/yr (e.g. 5) growth
46743  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
46744  *  [ --ctax_year=2020 ]
46745  *        Starting year of the carbon tax
46746  *  [ --ctax_initial=30 ]
46747  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
46748  *
46749  *-------------------------------------------------------------------------------
46751   
46752  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
46754  *-------------------------------------------------------------------------------
46755  * Energy efficiency
46756  *-------------------------------------------------------------------------------
46757   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
46760  *-------------------------------------------------------------------------------
46761  * Hydro Power
46762  *-------------------------------------------------------------------------------
46763   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
46766  *-------------------------------------------------------------------------------
46767  * System Integration:
46768  * - Capacity constraint
46769  * - Flexibility constraint
46770  * - Grid Investment
46771  * - Capacity growth constraint
46772  *-------------------------------------------------------------------------------
46773   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
46776  *-------------------------------------------------------------------------------
46777  * Nuclear power plants
46778  *-------------------------------------------------------------------------------
46779   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
46782  *-------------------------------------------------------------------------------
46783  * GHG module
46784  * - CH4 FFI + CH4 waste + CH4 open fires
46785  * - N2O FFI + N2O waste + N2O open fires
46786  *-------------------------------------------------------------------------------
46787   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
46790  *-------------------------------------------------------------------------------
46791  * F-gases
46792  * - LLF
46793  * - SLF
46794  *-------------------------------------------------------------------------------
46795   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
46798  *-------------------------------------------------------------------------------
46799  * Landuse [simplified version of the land-use model]
46800  *-------------------------------------------------------------------------------
46801   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
46804  *-------------------------------------------------------------------------------
46805  * Bioenergy power plant
46806  *-------------------------------------------------------------------------------
46807   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
46810  *-------------------------------------------------------------------------------
46811  * Traditional Biofuels
46812  * - Requires the precedence of mod_landuse
46813  *-------------------------------------------------------------------------------
46814   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
46817  *-------------------------------------------------------------------------------
46818  * Advanced biofuel
46819  * - Require the precedence of mod_landuse
46820  *-------------------------------------------------------------------------------
46821   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
46824  *-------------------------------------------------------------------------------
46825  * Carbon Capture and Sequestration
46826  *-------------------------------------------------------------------------------
46827   
46829   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
46831  *-------------------------------------------------------------------------------
46832  * Coal for non-electric sectors
46833  * - Coke Plants
46834  * - Industrial and Commercial combined-heat-and-power (CHP)
46835  * - Others
46836  *-------------------------------------------------------------------------------
46837   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
46840  *-------------------------------------------------------------------------------
46841  * Wind energy module
46842  * - onshore and offshore
46843  *-------------------------------------------------------------------------------
46844   
46846   
46847  parameter k_en_windon_norm(wind_dist,wind_class,t,n);
46848  parameter k_en_windoff_norm(wind_dist,wind_depth,wind_class,t,n);
46849  parameter k_en_wind_norm_sum(jel_wind,t,n);
46850  parameter wind_mu_marginal(jel_wind,t,n);
46851   
46852  k_en_windon_norm(wind_dist,wind_class,t,n) = K_EN_WINDON.l(wind_dist,wind_class,t,n) / K_EN_WINDON.up(wind_dist,wind_class,t,n);
46853  k_en_windoff_norm(wind_dist,wind_depth,wind_class,t,n) = K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n) / K_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n);
46854  k_en_wind_norm_sum('elwindon',t,n) = sum(wind_class, k_en_windon_norm('near',wind_class,t,n));
46855  k_en_wind_norm_sum('elwindoff',t,n) = sum(wind_class, k_en_windoff_norm('near','shallow',wind_class,t,n));
46856  loop(wind_class,
46857      wind_mu_marginal(jel_wind,t,n)$(k_en_wind_norm_sum(jel_wind,t,n) gt (ord(wind_class)-1)) = sum(wind_class2$(ord(wind_class2) eq (card(wind_class)-ord(wind_class)+1)), wind_mu(wind_class2));
46858  );
46859   
46860  wind_mu_marginal(jel_wind,tfirst,n) = smax(tt$(year(tt) eq 2010),wind_mu_marginal(jel_wind,tt,n));
46861   
46862  *-------------------------------------------------------------------------------
46864   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
46866  *-------------------------------------------------------------------------------
46867  * Solar Powerplants (PV and CSP) to the electrical system
46868  *-------------------------------------------------------------------------------
46869   
46870  *-------------------------------------------------------------------------------
46872   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
46874  *-------------------------------------------------------------------------------
46875  * Technology development scenarios
46876  *-------------------------------------------------------------------------------
46877   
46879   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
46881  *-------------------------------------------------------------------------------
46882  * Oil Extraction
46883  * Options:
46884  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
46885  *-------------------------------------------------------------------------------
46886   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
46889  *-------------------------------------------------------------------------------
46890  * Uranium Resources
46891  *-------------------------------------------------------------------------------
46892   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
46895  *-------------------------------------------------------------------------------
46896  * Gas Resources
46897  *-------------------------------------------------------------------------------
46898   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
46901  *-------------------------------------------------------------------------------
46902  * Coal Resources
46903  *-------------------------------------------------------------------------------
46904   
46906   
46907   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
46909  *-------------------------------------------------------------------------------
46910  * Climate
46911  *
46912  * Represents the climate
46913  * - based on the DICE model equations
46914  * - Radiative forcing for non CO2 ghgs
46915  * - parameters calibrated to reproduce MAGICC6.4 default response
46916  *
46917  *  Options:
46918  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
46919  * - $setglobal cooperate_on_climate {'YES','NO'}
46920  * - 'YES'(default): Countries within a coalition act in cooperation
46921  *   'NO': Countries within a coalition act individually
46922  *
46923  *-------------------------------------------------------------------------------
46924   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
46927  *-------------------------------------------------------------------------------
46928  * Long-run Damages from Climate Change
46929  * - Economic impacts
46930  * - Adaptation
46931  *-------------------------------------------------------------------------------
46932   
46934   
46935  parameter resdam(t,n) 'Residual damage [T$]';
46936  resdam(t, n) = Q.l('y', t, n) * (OMEGA.l(t, n) - 1);
46937   
46938  parameter grossdam(t,n) 'Gross damage [T$]';
46939  grossdam(t,n) = Q.l('y', t, n) * ((comega_neg('climcost',n, 'deg1') + comega_pos('climcost',n, 'deg1')) * TEMP.l('atm', t, n) +
46940                                  (comega_neg('climcost',n, 'deg2') + comega_pos('climcost',n, 'deg2')) * TEMP.l('atm', t, n) ** comega_neg('climcost',n,'deg3') +
46941                                  (comega_neg('climcost',n, 'deg4') + comega_pos('climcost',n, 'deg4'))
46942                                 );
46943   
46944  parameter dam_rep(t,n,*) 'Damages in terms of OMEGA approx %GDP loss' ;
46946   
46948   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
46950  *-------------------------------------------------------------------------------
46951  * Light-duty Vehicles for Personal Transport
46952  *-------------------------------------------------------------------------------
46953   
46955   
46956  parameter transp_world_ldv_fleet(jveh,t);
46957  parameter transp_ldv_ice_feeding(fuel,jfedveh,t,n);
46958  parameter transp_world_ldv_ice_feeding(fuel,jfedveh,t);
46959  parameter transp_ldv_biofuel_feed_share(jfedveh,t,n);
46960  parameter co2_transport(t,n);
46961   
46962  transp_world_ldv_fleet(jveh,t) = sum(n, K_EN.l(jveh,t,n));
46963  transp_ldv_ice_feeding(fuel,jfedveh,t,n) = Q_IN.l(fuel,jfedveh,t,n);
46964  transp_world_ldv_ice_feeding(fuel,jfedveh,t) = sum(n, Q_IN.l(fuel,jfedveh,t,n));
46965  transp_ldv_biofuel_feed_share(jfedveh,t,n) = (Q_IN.l('trbiofuel',jfedveh,t,n)+Q_IN.l('advbiofuel',jfedveh,t,n))/(Q_IN.l('oil',jfedveh,t,n)+Q_IN.l('trbiofuel',jfedveh,t,n)+Q_IN.l('advbiofuel',jfedveh,t,n));
46966   
46967  co2_transport(t,n) = sum((fuel,jfed)$(csi(fuel,jfed,t,n) and (jveh(jfed) or jfrt(jfed))),Q_IN.l(fuel,jfed,t,n)*emi_st(fuel)*emi_sys('co2ffi',t,n));
46968   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
46971  *-------------------------------------------------------------------------------
46972  * Road Freight Transport
46973  *-------------------------------------------------------------------------------
46975   
46976   
46977   
46978   
46979   
46980   
46981  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
46983  *-------------------------------------------------------------------------------
46984  * Traditional Biomass
46985  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
46986  *  - require post_process to be launch before
46987  *-------------------------------------------------------------------------------
46988   
46990   
46991  * Optional modules
46992   
46993  * Policy modules
46994   
46995  * Calibration
46998   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\post\gdx.gms
47000  *-------------------------------------------------------------------------------
47001  * Write output GDX
47002  *-------------------------------------------------------------------------------
47003   
47004  execute_unload 'C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\results_eqq_emi_lim_usa_1e-3.gdx'
47005   
47006  * item list
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\algoitemlist.txt
47008  all_feasible
47009  all_optimal
47010  nb_clt_infes
47011  nb_clt_noopt
47012  nb_tot_infes
47013  allerr
47014  allinfoiter
47015  delta_price
47016  errtrade
47017  infoiter
47018  irep
47019  iterrep
47020  m_consumption
47021  mbalance
47022  mprofit
47023  price_iter
47024  solrep
47025  tcheck
47026  timer
47027  trust_region
47028   
47029  * equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\post\gdx_eql.gms
47031  *-------------------------------------------------------------------------------
47032  * post_gdx_eql.gms
47033  *
47034  * Get list of equations from all coalitions for outputs
47035  *-------------------------------------------------------------------------------
47036   
47039   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
47041  *-------------------------------------------------------------------------------
47042  * Call modules by order
47043  *-------------------------------------------------------------------------------
47047   
47048  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
47050  *-------------------------------------------------------------------------------
47051  * Algorithm
47052  *-------------------------------------------------------------------------------
47053   
47055   
47056  eqobj_c_brazil
47057   
47058  *-------------------------------------------------------------------------------
47060   
47061  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
47063  *-------------------------------------------------------------------------------
47064  * Time
47065  * - Temporal structure
47066  * - Fixed time periods
47067  * - States of the world
47068  *-------------------------------------------------------------------------------
47069   
47071   
47072  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
47074  *-------------------------------------------------------------------------------
47075  * Geographic dimension and mapping with countries
47076  *-------------------------------------------------------------------------------
47077   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
47080  *-------------------------------------------------------------------------------
47081  * Non-Cooperative Setup
47082  *
47083  * Each region is defined as an individual coalition.
47084  *
47085  *-------------------------------------------------------------------------------
47086   
47088   
47089  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
47091  *-------------------------------------------------------------------------------
47092  * Welfare
47093  *-------------------------------------------------------------------------------
47094   
47096   
47097  equtility_c_brazil
47098   
47099  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
47102  *-------------------------------------------------------------------------------
47103  * Economy
47104  * - Production and Consumption definition
47105  * - Top-level of the production function
47106  * Options:
47107  * --original_ssp=1 : original SSP population and GDP data
47108  *-------------------------------------------------------------------------------
47109   
47111   
47112  eqk_c_brazil
47113  eqq_cc_c_brazil
47114  eqq_fen_c_brazil
47115  eqq_y_c_brazil
47116   
47117  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
47120  *-------------------------------------------------------------------------------
47121  * Energy sector
47122  *-------------------------------------------------------------------------------
47123   
47125   
47126  eq_mkt_clearing_oil_c_brazil
47127  eqcost_pes_c_brazil
47128  eqcost_ses_c_brazil
47129  eqk_en_c_brazil
47130  eqq_ces_el_c_brazil
47131  eqq_ces_nelgas_c_brazil
47132  eqq_el2_c_brazil
47133  eqq_el_c_brazil
47134  eqq_elff_c_brazil
47135  eqq_en_c_brazil
47136  eqq_en_in_c_brazil
47137  eqq_en_mu_c_brazil
47138  eqq_en_tree_c_brazil
47139  eqq_nel_c_brazil
47140  eqq_nelog_c_brazil
47141  eqq_fuel_c_brazil
47142  eqq_elffren_c_brazil
47143   
47144  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
47147  *-------------------------------------------------------------------------------
47148  * Carbon Emissions
47149  * - Total CO2 emissions and CO2 Fossil fuel and Industry
47150  * - CO2 emission costs
47151  * - GHG permit market
47152  *-------------------------------------------------------------------------------
47153   
47155   
47156  eqq_emi_lim_c_brazil
47157  ***newcode
47158  eqq_emi_lim_USAc_brazil
47159  ***
47160  eqq_emi_tree_c_brazil
47161  eqq_emi_co2ffi_c_brazil
47162   
47163  eqcost_emi_co2_c_brazil
47164   
47165  eq_mkt_clearing_nip_c_brazil
47166   
47167  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
47170  *-------------------------------------------------------------------------------
47171  * Research & Development
47172  * Options:
47173  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
47174  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
47175  *-------------------------------------------------------------------------------
47176   
47178   
47179  eqk_rd_c_brazil
47180  eqspill_coop_c_brazil
47181  eqspill_lead_c_brazil
47182  eqspill_foll_c_brazil
47183  eqmcost_inv_back_c_brazil
47184  eqmcost_inv_back_lbd_c_brazil
47185   
47186  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
47189  *-------------------------------------------------------------------------------
47190  * Default Climate Policy Implementation
47191  *
47192  * Options:
47193  *    --policy={bau (default),ctax}
47194  *        Implement a climate policy setting
47195  *  [ --scen= ]
47196  *        Policy variant.
47197  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
47198  *          * XXX for a fixed percentage/yr (e.g. 5) growth
47199  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
47200  *  [ --ctax_year=2020 ]
47201  *        Starting year of the carbon tax
47202  *  [ --ctax_initial=30 ]
47203  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
47204  *
47205  *-------------------------------------------------------------------------------
47207   
47208  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
47210  *-------------------------------------------------------------------------------
47211  * Energy efficiency
47212  *-------------------------------------------------------------------------------
47213   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
47216  *-------------------------------------------------------------------------------
47217  * Hydro Power
47218  *-------------------------------------------------------------------------------
47219   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
47222  *-------------------------------------------------------------------------------
47223  * System Integration:
47224  * - Capacity constraint
47225  * - Flexibility constraint
47226  * - Grid Investment
47227  * - Capacity growth constraint
47228  *-------------------------------------------------------------------------------
47229   
47231   
47232  eqq_elintren_c_brazil
47233  eqflex_c_brazil
47234  eqk_en_grid_c_brazil
47235  eqk_en_grid_to_k_en_c_brazil
47236  eqfirm_capacity_c_brazil
47237  eqcap_growth_c_brazil
47238   
47239  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
47242  *-------------------------------------------------------------------------------
47243  * Nuclear power plants
47244  *-------------------------------------------------------------------------------
47245   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
47248  *-------------------------------------------------------------------------------
47249  * GHG module
47250  * - CH4 FFI + CH4 waste + CH4 open fires
47251  * - N2O FFI + N2O waste + N2O open fires
47252  *-------------------------------------------------------------------------------
47253   
47255   
47256  eqq_emi_waste_c_brazil
47257  eqq_emi_n2o_ffi_c_brazil
47258  eqq_emi_ch4_ffi_c_brazil
47259   
47260  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
47263  *-------------------------------------------------------------------------------
47264  * F-gases
47265  * - LLF
47266  * - SLF
47267  *-------------------------------------------------------------------------------
47268   
47270   
47271  eqq_emi_fgases_c_brazil
47272   
47273  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
47276  *-------------------------------------------------------------------------------
47277  * Landuse [simplified version of the land-use model]
47278  *-------------------------------------------------------------------------------
47279   
47281   
47282  eq_wbio_c_brazil
47283  eqcost_pes_wbio_c_brazil
47284   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
47287  *-------------------------------------------------------------------------------
47288  * Bioenergy power plant
47289  *-------------------------------------------------------------------------------
47290   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
47293  *-------------------------------------------------------------------------------
47294  * Traditional Biofuels
47295  * - Requires the precedence of mod_landuse
47296  *-------------------------------------------------------------------------------
47297   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
47300  *-------------------------------------------------------------------------------
47301  * Advanced biofuel
47302  * - Require the precedence of mod_landuse
47303  *-------------------------------------------------------------------------------
47304   
47306   
47307  eqq_en_lim_advbiofuel_c_brazil
47308  eqmcost_fuel_advbiofuel_c_brazil
47309   
47310  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
47313  *-------------------------------------------------------------------------------
47314  * Carbon Capture and Sequestration
47315  *-------------------------------------------------------------------------------
47316   
47318   
47319  eqq_emi_ccs_c_brazil
47320  eqcost_emi_sinks_c_brazil
47321  eq_stor_ccs_cum_c_brazil
47322  eq_emi_stor_ccs_c_brazil
47323  eq_emi_leak_ccs_c_brazil
47324   
47325  *-------------------------------------------------------------------------------
47327   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
47329  *-------------------------------------------------------------------------------
47330  * Coal for non-electric sectors
47331  * - Coke Plants
47332  * - Industrial and Commercial combined-heat-and-power (CHP)
47333  * - Others
47334  *-------------------------------------------------------------------------------
47335   
47337   
47338  eqcost_en_nelcoal_c_brazil
47339  eqq_ncoalabat_monotone_c_brazil
47340  eqq_en_nelcoalccs_max_c_brazil
47341   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
47344  *-------------------------------------------------------------------------------
47345  * Wind energy module
47346  * - onshore and offshore
47347  *-------------------------------------------------------------------------------
47348   
47350   
47351  eqq_en_mu_windon_c_brazil
47352  eqq_en_mu_windoff_c_brazil
47353  eqk_en_windon_c_brazil
47354  eqk_en_windoff_c_brazil
47355  eqq_en_windon_sum_c_brazil
47356  eqq_en_windoff_sum_c_brazil
47357  eqk_en_windon_sum_c_brazil
47358  eqk_en_windoff_sum_c_brazil
47359  eqi_en_windon_sum_c_brazil
47360  eqi_en_windoff_sum_c_brazil
47361   
47363   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
47365  *-------------------------------------------------------------------------------
47366  * Solar Powerplants (PV and CSP) to the electrical system
47367  *-------------------------------------------------------------------------------
47368   
47369  *-------------------------------------------------------------------------------
47371   
47372  eqq_en_mu_pv_c_brazil
47373  eqq_en_mu_csp_c_brazil
47374  eqk_en_pv_c_brazil
47375  eqk_en_csp_c_brazil
47376  eqq_en_pv_sum_c_brazil
47377  eqq_en_csp_sum_c_brazil
47378  eqk_en_pv_sum_c_brazil
47379  eqk_en_csp_sum_c_brazil
47380  eqi_en_pv_sum_c_brazil
47381  eqi_en_csp_sum_c_brazil
47382  eqk_en_solar_comp_c_brazil
47383   
47384  *-------------------------------------------------------------------------------
47386   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
47388  *-------------------------------------------------------------------------------
47389  * Technology development scenarios
47390  *-------------------------------------------------------------------------------
47391   
47393   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
47395  *-------------------------------------------------------------------------------
47396  * Oil Extraction
47397  * Options:
47398  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
47399  *-------------------------------------------------------------------------------
47400   
47402   
47403  eqoilcap_c_brazil
47404  eqoilprod_c_brazil
47405  eqq_out_oil_c_brazil
47406  eqcum_oil_c_brazil
47407  eqcost_oil_c_brazil
47408  eqi_oil_c_brazil
47409  eqi_out_oil_c_brazil
47410  eqq_emi_out_oil_c_brazil
47411   
47412  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
47415  *-------------------------------------------------------------------------------
47416  * Uranium Resources
47417  *-------------------------------------------------------------------------------
47418   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
47421  *-------------------------------------------------------------------------------
47422  * Gas Resources
47423  *-------------------------------------------------------------------------------
47424   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
47427  *-------------------------------------------------------------------------------
47428  * Coal Resources
47429  *-------------------------------------------------------------------------------
47430   
47432   
47433   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
47435  *-------------------------------------------------------------------------------
47436  * Climate
47437  *
47438  * Represents the climate
47439  * - based on the DICE model equations
47440  * - Radiative forcing for non CO2 ghgs
47441  * - parameters calibrated to reproduce MAGICC6.4 default response
47442  *
47443  *  Options:
47444  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
47445  * - $setglobal cooperate_on_climate {'YES','NO'}
47446  * - 'YES'(default): Countries within a coalition act in cooperation
47447  *   'NO': Countries within a coalition act individually
47448  *
47449  *-------------------------------------------------------------------------------
47450   
47452   
47454   
47455  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
47458  *-------------------------------------------------------------------------------
47459  * Long-run Damages from Climate Change
47460  * - Economic impacts
47461  * - Adaptation
47462  *-------------------------------------------------------------------------------
47463   
47465   
47467   
47468  *-------------------------------------------------------------------------------
47470   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
47472  *-------------------------------------------------------------------------------
47473  * Light-duty Vehicles for Personal Transport
47474  *-------------------------------------------------------------------------------
47475   
47477   
47478  eqnb_veh_c_brazil
47479  eqq_en_veh_c_brazil
47480  eqq_el_edv_c_brazil
47481  eqmcost_inv_hybrid_c_brazil
47482  eqmcost_inv_plghybrid_c_brazil
47483  eqmcost_inv_edv_c_brazil
47484  *** newcode
47485  eqq_inv_red_ban_c_brazil
47486  ***
47487  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
47490  *-------------------------------------------------------------------------------
47491  * Road Freight Transport
47492  *-------------------------------------------------------------------------------
47494   
47495  eqnb_frtveh_c_brazil
47496  eqq_en_frtveh_c_brazil
47497  eqq_el_frtedv_c_brazil
47498  eqmcost_inv_hbd_stfr_c_brazil
47499  eqmcost_inv_plghbd_stfr_c_brazil
47500  eqmcost_inv_edv_stfr_c_brazil
47501   
47502  *-------------------------------------------------------------------------------
47504   
47505   
47506   
47507   
47508   
47509   
47510  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
47512  *-------------------------------------------------------------------------------
47513  * Traditional Biomass
47514  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
47515  *  - require post_process to be launch before
47516  *-------------------------------------------------------------------------------
47517   
47519   
47520  * Optional modules
47521   
47522  * Policy modules
47523   
47524  * Calibration
47527   
47532   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
47534  *-------------------------------------------------------------------------------
47535  * Call modules by order
47536  *-------------------------------------------------------------------------------
47540   
47541  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
47543  *-------------------------------------------------------------------------------
47544  * Algorithm
47545  *-------------------------------------------------------------------------------
47546   
47548   
47549  eqobj_c_canada
47550   
47551  *-------------------------------------------------------------------------------
47553   
47554  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
47556  *-------------------------------------------------------------------------------
47557  * Time
47558  * - Temporal structure
47559  * - Fixed time periods
47560  * - States of the world
47561  *-------------------------------------------------------------------------------
47562   
47564   
47565  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
47567  *-------------------------------------------------------------------------------
47568  * Geographic dimension and mapping with countries
47569  *-------------------------------------------------------------------------------
47570   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
47573  *-------------------------------------------------------------------------------
47574  * Non-Cooperative Setup
47575  *
47576  * Each region is defined as an individual coalition.
47577  *
47578  *-------------------------------------------------------------------------------
47579   
47581   
47582  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
47584  *-------------------------------------------------------------------------------
47585  * Welfare
47586  *-------------------------------------------------------------------------------
47587   
47589   
47590  equtility_c_canada
47591   
47592  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
47595  *-------------------------------------------------------------------------------
47596  * Economy
47597  * - Production and Consumption definition
47598  * - Top-level of the production function
47599  * Options:
47600  * --original_ssp=1 : original SSP population and GDP data
47601  *-------------------------------------------------------------------------------
47602   
47604   
47605  eqk_c_canada
47606  eqq_cc_c_canada
47607  eqq_fen_c_canada
47608  eqq_y_c_canada
47609   
47610  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
47613  *-------------------------------------------------------------------------------
47614  * Energy sector
47615  *-------------------------------------------------------------------------------
47616   
47618   
47619  eq_mkt_clearing_oil_c_canada
47620  eqcost_pes_c_canada
47621  eqcost_ses_c_canada
47622  eqk_en_c_canada
47623  eqq_ces_el_c_canada
47624  eqq_ces_nelgas_c_canada
47625  eqq_el2_c_canada
47626  eqq_el_c_canada
47627  eqq_elff_c_canada
47628  eqq_en_c_canada
47629  eqq_en_in_c_canada
47630  eqq_en_mu_c_canada
47631  eqq_en_tree_c_canada
47632  eqq_nel_c_canada
47633  eqq_nelog_c_canada
47634  eqq_fuel_c_canada
47635  eqq_elffren_c_canada
47636   
47637  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
47640  *-------------------------------------------------------------------------------
47641  * Carbon Emissions
47642  * - Total CO2 emissions and CO2 Fossil fuel and Industry
47643  * - CO2 emission costs
47644  * - GHG permit market
47645  *-------------------------------------------------------------------------------
47646   
47648   
47649  eqq_emi_lim_c_canada
47650  ***newcode
47651  eqq_emi_lim_USAc_canada
47652  ***
47653  eqq_emi_tree_c_canada
47654  eqq_emi_co2ffi_c_canada
47655   
47656  eqcost_emi_co2_c_canada
47657   
47658  eq_mkt_clearing_nip_c_canada
47659   
47660  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
47663  *-------------------------------------------------------------------------------
47664  * Research & Development
47665  * Options:
47666  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
47667  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
47668  *-------------------------------------------------------------------------------
47669   
47671   
47672  eqk_rd_c_canada
47673  eqspill_coop_c_canada
47674  eqspill_lead_c_canada
47675  eqspill_foll_c_canada
47676  eqmcost_inv_back_c_canada
47677  eqmcost_inv_back_lbd_c_canada
47678   
47679  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
47682  *-------------------------------------------------------------------------------
47683  * Default Climate Policy Implementation
47684  *
47685  * Options:
47686  *    --policy={bau (default),ctax}
47687  *        Implement a climate policy setting
47688  *  [ --scen= ]
47689  *        Policy variant.
47690  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
47691  *          * XXX for a fixed percentage/yr (e.g. 5) growth
47692  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
47693  *  [ --ctax_year=2020 ]
47694  *        Starting year of the carbon tax
47695  *  [ --ctax_initial=30 ]
47696  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
47697  *
47698  *-------------------------------------------------------------------------------
47700   
47701  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
47703  *-------------------------------------------------------------------------------
47704  * Energy efficiency
47705  *-------------------------------------------------------------------------------
47706   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
47709  *-------------------------------------------------------------------------------
47710  * Hydro Power
47711  *-------------------------------------------------------------------------------
47712   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
47715  *-------------------------------------------------------------------------------
47716  * System Integration:
47717  * - Capacity constraint
47718  * - Flexibility constraint
47719  * - Grid Investment
47720  * - Capacity growth constraint
47721  *-------------------------------------------------------------------------------
47722   
47724   
47725  eqq_elintren_c_canada
47726  eqflex_c_canada
47727  eqk_en_grid_c_canada
47728  eqk_en_grid_to_k_en_c_canada
47729  eqfirm_capacity_c_canada
47730  eqcap_growth_c_canada
47731   
47732  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
47735  *-------------------------------------------------------------------------------
47736  * Nuclear power plants
47737  *-------------------------------------------------------------------------------
47738   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
47741  *-------------------------------------------------------------------------------
47742  * GHG module
47743  * - CH4 FFI + CH4 waste + CH4 open fires
47744  * - N2O FFI + N2O waste + N2O open fires
47745  *-------------------------------------------------------------------------------
47746   
47748   
47749  eqq_emi_waste_c_canada
47750  eqq_emi_n2o_ffi_c_canada
47751  eqq_emi_ch4_ffi_c_canada
47752   
47753  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
47756  *-------------------------------------------------------------------------------
47757  * F-gases
47758  * - LLF
47759  * - SLF
47760  *-------------------------------------------------------------------------------
47761   
47763   
47764  eqq_emi_fgases_c_canada
47765   
47766  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
47769  *-------------------------------------------------------------------------------
47770  * Landuse [simplified version of the land-use model]
47771  *-------------------------------------------------------------------------------
47772   
47774   
47775  eq_wbio_c_canada
47776  eqcost_pes_wbio_c_canada
47777   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
47780  *-------------------------------------------------------------------------------
47781  * Bioenergy power plant
47782  *-------------------------------------------------------------------------------
47783   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
47786  *-------------------------------------------------------------------------------
47787  * Traditional Biofuels
47788  * - Requires the precedence of mod_landuse
47789  *-------------------------------------------------------------------------------
47790   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
47793  *-------------------------------------------------------------------------------
47794  * Advanced biofuel
47795  * - Require the precedence of mod_landuse
47796  *-------------------------------------------------------------------------------
47797   
47799   
47800  eqq_en_lim_advbiofuel_c_canada
47801  eqmcost_fuel_advbiofuel_c_canada
47802   
47803  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
47806  *-------------------------------------------------------------------------------
47807  * Carbon Capture and Sequestration
47808  *-------------------------------------------------------------------------------
47809   
47811   
47812  eqq_emi_ccs_c_canada
47813  eqcost_emi_sinks_c_canada
47814  eq_stor_ccs_cum_c_canada
47815  eq_emi_stor_ccs_c_canada
47816  eq_emi_leak_ccs_c_canada
47817   
47818  *-------------------------------------------------------------------------------
47820   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
47822  *-------------------------------------------------------------------------------
47823  * Coal for non-electric sectors
47824  * - Coke Plants
47825  * - Industrial and Commercial combined-heat-and-power (CHP)
47826  * - Others
47827  *-------------------------------------------------------------------------------
47828   
47830   
47831  eqcost_en_nelcoal_c_canada
47832  eqq_ncoalabat_monotone_c_canada
47833  eqq_en_nelcoalccs_max_c_canada
47834   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
47837  *-------------------------------------------------------------------------------
47838  * Wind energy module
47839  * - onshore and offshore
47840  *-------------------------------------------------------------------------------
47841   
47843   
47844  eqq_en_mu_windon_c_canada
47845  eqq_en_mu_windoff_c_canada
47846  eqk_en_windon_c_canada
47847  eqk_en_windoff_c_canada
47848  eqq_en_windon_sum_c_canada
47849  eqq_en_windoff_sum_c_canada
47850  eqk_en_windon_sum_c_canada
47851  eqk_en_windoff_sum_c_canada
47852  eqi_en_windon_sum_c_canada
47853  eqi_en_windoff_sum_c_canada
47854   
47856   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
47858  *-------------------------------------------------------------------------------
47859  * Solar Powerplants (PV and CSP) to the electrical system
47860  *-------------------------------------------------------------------------------
47861   
47862  *-------------------------------------------------------------------------------
47864   
47865  eqq_en_mu_pv_c_canada
47866  eqq_en_mu_csp_c_canada
47867  eqk_en_pv_c_canada
47868  eqk_en_csp_c_canada
47869  eqq_en_pv_sum_c_canada
47870  eqq_en_csp_sum_c_canada
47871  eqk_en_pv_sum_c_canada
47872  eqk_en_csp_sum_c_canada
47873  eqi_en_pv_sum_c_canada
47874  eqi_en_csp_sum_c_canada
47875  eqk_en_solar_comp_c_canada
47876   
47877  *-------------------------------------------------------------------------------
47879   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
47881  *-------------------------------------------------------------------------------
47882  * Technology development scenarios
47883  *-------------------------------------------------------------------------------
47884   
47886   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
47888  *-------------------------------------------------------------------------------
47889  * Oil Extraction
47890  * Options:
47891  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
47892  *-------------------------------------------------------------------------------
47893   
47895   
47896  eqoilcap_c_canada
47897  eqoilprod_c_canada
47898  eqq_out_oil_c_canada
47899  eqcum_oil_c_canada
47900  eqcost_oil_c_canada
47901  eqi_oil_c_canada
47902  eqi_out_oil_c_canada
47903  eqq_emi_out_oil_c_canada
47904   
47905  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
47908  *-------------------------------------------------------------------------------
47909  * Uranium Resources
47910  *-------------------------------------------------------------------------------
47911   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
47914  *-------------------------------------------------------------------------------
47915  * Gas Resources
47916  *-------------------------------------------------------------------------------
47917   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
47920  *-------------------------------------------------------------------------------
47921  * Coal Resources
47922  *-------------------------------------------------------------------------------
47923   
47925   
47926   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
47928  *-------------------------------------------------------------------------------
47929  * Climate
47930  *
47931  * Represents the climate
47932  * - based on the DICE model equations
47933  * - Radiative forcing for non CO2 ghgs
47934  * - parameters calibrated to reproduce MAGICC6.4 default response
47935  *
47936  *  Options:
47937  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
47938  * - $setglobal cooperate_on_climate {'YES','NO'}
47939  * - 'YES'(default): Countries within a coalition act in cooperation
47940  *   'NO': Countries within a coalition act individually
47941  *
47942  *-------------------------------------------------------------------------------
47943   
47945   
47947   
47948  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
47951  *-------------------------------------------------------------------------------
47952  * Long-run Damages from Climate Change
47953  * - Economic impacts
47954  * - Adaptation
47955  *-------------------------------------------------------------------------------
47956   
47958   
47960   
47961  *-------------------------------------------------------------------------------
47963   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
47965  *-------------------------------------------------------------------------------
47966  * Light-duty Vehicles for Personal Transport
47967  *-------------------------------------------------------------------------------
47968   
47970   
47971  eqnb_veh_c_canada
47972  eqq_en_veh_c_canada
47973  eqq_el_edv_c_canada
47974  eqmcost_inv_hybrid_c_canada
47975  eqmcost_inv_plghybrid_c_canada
47976  eqmcost_inv_edv_c_canada
47977  *** newcode
47978  eqq_inv_red_ban_c_canada
47979  ***
47980  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
47983  *-------------------------------------------------------------------------------
47984  * Road Freight Transport
47985  *-------------------------------------------------------------------------------
47987   
47988  eqnb_frtveh_c_canada
47989  eqq_en_frtveh_c_canada
47990  eqq_el_frtedv_c_canada
47991  eqmcost_inv_hbd_stfr_c_canada
47992  eqmcost_inv_plghbd_stfr_c_canada
47993  eqmcost_inv_edv_stfr_c_canada
47994   
47995  *-------------------------------------------------------------------------------
47997   
47998   
47999   
48000   
48001   
48002   
48003  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
48005  *-------------------------------------------------------------------------------
48006  * Traditional Biomass
48007  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
48008  *  - require post_process to be launch before
48009  *-------------------------------------------------------------------------------
48010   
48012   
48013  * Optional modules
48014   
48015  * Policy modules
48016   
48017  * Calibration
48020   
48025   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
48027  *-------------------------------------------------------------------------------
48028  * Call modules by order
48029  *-------------------------------------------------------------------------------
48033   
48034  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
48036  *-------------------------------------------------------------------------------
48037  * Algorithm
48038  *-------------------------------------------------------------------------------
48039   
48041   
48042  eqobj_c_china
48043   
48044  *-------------------------------------------------------------------------------
48046   
48047  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
48049  *-------------------------------------------------------------------------------
48050  * Time
48051  * - Temporal structure
48052  * - Fixed time periods
48053  * - States of the world
48054  *-------------------------------------------------------------------------------
48055   
48057   
48058  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
48060  *-------------------------------------------------------------------------------
48061  * Geographic dimension and mapping with countries
48062  *-------------------------------------------------------------------------------
48063   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
48066  *-------------------------------------------------------------------------------
48067  * Non-Cooperative Setup
48068  *
48069  * Each region is defined as an individual coalition.
48070  *
48071  *-------------------------------------------------------------------------------
48072   
48074   
48075  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
48077  *-------------------------------------------------------------------------------
48078  * Welfare
48079  *-------------------------------------------------------------------------------
48080   
48082   
48083  equtility_c_china
48084   
48085  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
48088  *-------------------------------------------------------------------------------
48089  * Economy
48090  * - Production and Consumption definition
48091  * - Top-level of the production function
48092  * Options:
48093  * --original_ssp=1 : original SSP population and GDP data
48094  *-------------------------------------------------------------------------------
48095   
48097   
48098  eqk_c_china
48099  eqq_cc_c_china
48100  eqq_fen_c_china
48101  eqq_y_c_china
48102   
48103  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
48106  *-------------------------------------------------------------------------------
48107  * Energy sector
48108  *-------------------------------------------------------------------------------
48109   
48111   
48112  eq_mkt_clearing_oil_c_china
48113  eqcost_pes_c_china
48114  eqcost_ses_c_china
48115  eqk_en_c_china
48116  eqq_ces_el_c_china
48117  eqq_ces_nelgas_c_china
48118  eqq_el2_c_china
48119  eqq_el_c_china
48120  eqq_elff_c_china
48121  eqq_en_c_china
48122  eqq_en_in_c_china
48123  eqq_en_mu_c_china
48124  eqq_en_tree_c_china
48125  eqq_nel_c_china
48126  eqq_nelog_c_china
48127  eqq_fuel_c_china
48128  eqq_elffren_c_china
48129   
48130  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
48133  *-------------------------------------------------------------------------------
48134  * Carbon Emissions
48135  * - Total CO2 emissions and CO2 Fossil fuel and Industry
48136  * - CO2 emission costs
48137  * - GHG permit market
48138  *-------------------------------------------------------------------------------
48139   
48141   
48142  eqq_emi_lim_c_china
48143  ***newcode
48144  eqq_emi_lim_USAc_china
48145  ***
48146  eqq_emi_tree_c_china
48147  eqq_emi_co2ffi_c_china
48148   
48149  eqcost_emi_co2_c_china
48150   
48151  eq_mkt_clearing_nip_c_china
48152   
48153  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
48156  *-------------------------------------------------------------------------------
48157  * Research & Development
48158  * Options:
48159  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
48160  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
48161  *-------------------------------------------------------------------------------
48162   
48164   
48165  eqk_rd_c_china
48166  eqspill_coop_c_china
48167  eqspill_lead_c_china
48168  eqspill_foll_c_china
48169  eqmcost_inv_back_c_china
48170  eqmcost_inv_back_lbd_c_china
48171   
48172  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
48175  *-------------------------------------------------------------------------------
48176  * Default Climate Policy Implementation
48177  *
48178  * Options:
48179  *    --policy={bau (default),ctax}
48180  *        Implement a climate policy setting
48181  *  [ --scen= ]
48182  *        Policy variant.
48183  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
48184  *          * XXX for a fixed percentage/yr (e.g. 5) growth
48185  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
48186  *  [ --ctax_year=2020 ]
48187  *        Starting year of the carbon tax
48188  *  [ --ctax_initial=30 ]
48189  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
48190  *
48191  *-------------------------------------------------------------------------------
48193   
48194  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
48196  *-------------------------------------------------------------------------------
48197  * Energy efficiency
48198  *-------------------------------------------------------------------------------
48199   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
48202  *-------------------------------------------------------------------------------
48203  * Hydro Power
48204  *-------------------------------------------------------------------------------
48205   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
48208  *-------------------------------------------------------------------------------
48209  * System Integration:
48210  * - Capacity constraint
48211  * - Flexibility constraint
48212  * - Grid Investment
48213  * - Capacity growth constraint
48214  *-------------------------------------------------------------------------------
48215   
48217   
48218  eqq_elintren_c_china
48219  eqflex_c_china
48220  eqk_en_grid_c_china
48221  eqk_en_grid_to_k_en_c_china
48222  eqfirm_capacity_c_china
48223  eqcap_growth_c_china
48224   
48225  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
48228  *-------------------------------------------------------------------------------
48229  * Nuclear power plants
48230  *-------------------------------------------------------------------------------
48231   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
48234  *-------------------------------------------------------------------------------
48235  * GHG module
48236  * - CH4 FFI + CH4 waste + CH4 open fires
48237  * - N2O FFI + N2O waste + N2O open fires
48238  *-------------------------------------------------------------------------------
48239   
48241   
48242  eqq_emi_waste_c_china
48243  eqq_emi_n2o_ffi_c_china
48244  eqq_emi_ch4_ffi_c_china
48245   
48246  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
48249  *-------------------------------------------------------------------------------
48250  * F-gases
48251  * - LLF
48252  * - SLF
48253  *-------------------------------------------------------------------------------
48254   
48256   
48257  eqq_emi_fgases_c_china
48258   
48259  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
48262  *-------------------------------------------------------------------------------
48263  * Landuse [simplified version of the land-use model]
48264  *-------------------------------------------------------------------------------
48265   
48267   
48268  eq_wbio_c_china
48269  eqcost_pes_wbio_c_china
48270   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
48273  *-------------------------------------------------------------------------------
48274  * Bioenergy power plant
48275  *-------------------------------------------------------------------------------
48276   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
48279  *-------------------------------------------------------------------------------
48280  * Traditional Biofuels
48281  * - Requires the precedence of mod_landuse
48282  *-------------------------------------------------------------------------------
48283   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
48286  *-------------------------------------------------------------------------------
48287  * Advanced biofuel
48288  * - Require the precedence of mod_landuse
48289  *-------------------------------------------------------------------------------
48290   
48292   
48293  eqq_en_lim_advbiofuel_c_china
48294  eqmcost_fuel_advbiofuel_c_china
48295   
48296  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
48299  *-------------------------------------------------------------------------------
48300  * Carbon Capture and Sequestration
48301  *-------------------------------------------------------------------------------
48302   
48304   
48305  eqq_emi_ccs_c_china
48306  eqcost_emi_sinks_c_china
48307  eq_stor_ccs_cum_c_china
48308  eq_emi_stor_ccs_c_china
48309  eq_emi_leak_ccs_c_china
48310   
48311  *-------------------------------------------------------------------------------
48313   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
48315  *-------------------------------------------------------------------------------
48316  * Coal for non-electric sectors
48317  * - Coke Plants
48318  * - Industrial and Commercial combined-heat-and-power (CHP)
48319  * - Others
48320  *-------------------------------------------------------------------------------
48321   
48323   
48324  eqcost_en_nelcoal_c_china
48325  eqq_ncoalabat_monotone_c_china
48326  eqq_en_nelcoalccs_max_c_china
48327   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
48330  *-------------------------------------------------------------------------------
48331  * Wind energy module
48332  * - onshore and offshore
48333  *-------------------------------------------------------------------------------
48334   
48336   
48337  eqq_en_mu_windon_c_china
48338  eqq_en_mu_windoff_c_china
48339  eqk_en_windon_c_china
48340  eqk_en_windoff_c_china
48341  eqq_en_windon_sum_c_china
48342  eqq_en_windoff_sum_c_china
48343  eqk_en_windon_sum_c_china
48344  eqk_en_windoff_sum_c_china
48345  eqi_en_windon_sum_c_china
48346  eqi_en_windoff_sum_c_china
48347   
48349   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
48351  *-------------------------------------------------------------------------------
48352  * Solar Powerplants (PV and CSP) to the electrical system
48353  *-------------------------------------------------------------------------------
48354   
48355  *-------------------------------------------------------------------------------
48357   
48358  eqq_en_mu_pv_c_china
48359  eqq_en_mu_csp_c_china
48360  eqk_en_pv_c_china
48361  eqk_en_csp_c_china
48362  eqq_en_pv_sum_c_china
48363  eqq_en_csp_sum_c_china
48364  eqk_en_pv_sum_c_china
48365  eqk_en_csp_sum_c_china
48366  eqi_en_pv_sum_c_china
48367  eqi_en_csp_sum_c_china
48368  eqk_en_solar_comp_c_china
48369   
48370  *-------------------------------------------------------------------------------
48372   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
48374  *-------------------------------------------------------------------------------
48375  * Technology development scenarios
48376  *-------------------------------------------------------------------------------
48377   
48379   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
48381  *-------------------------------------------------------------------------------
48382  * Oil Extraction
48383  * Options:
48384  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
48385  *-------------------------------------------------------------------------------
48386   
48388   
48389  eqoilcap_c_china
48390  eqoilprod_c_china
48391  eqq_out_oil_c_china
48392  eqcum_oil_c_china
48393  eqcost_oil_c_china
48394  eqi_oil_c_china
48395  eqi_out_oil_c_china
48396  eqq_emi_out_oil_c_china
48397   
48398  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
48401  *-------------------------------------------------------------------------------
48402  * Uranium Resources
48403  *-------------------------------------------------------------------------------
48404   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
48407  *-------------------------------------------------------------------------------
48408  * Gas Resources
48409  *-------------------------------------------------------------------------------
48410   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
48413  *-------------------------------------------------------------------------------
48414  * Coal Resources
48415  *-------------------------------------------------------------------------------
48416   
48418   
48419   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
48421  *-------------------------------------------------------------------------------
48422  * Climate
48423  *
48424  * Represents the climate
48425  * - based on the DICE model equations
48426  * - Radiative forcing for non CO2 ghgs
48427  * - parameters calibrated to reproduce MAGICC6.4 default response
48428  *
48429  *  Options:
48430  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
48431  * - $setglobal cooperate_on_climate {'YES','NO'}
48432  * - 'YES'(default): Countries within a coalition act in cooperation
48433  *   'NO': Countries within a coalition act individually
48434  *
48435  *-------------------------------------------------------------------------------
48436   
48438   
48440   
48441  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
48444  *-------------------------------------------------------------------------------
48445  * Long-run Damages from Climate Change
48446  * - Economic impacts
48447  * - Adaptation
48448  *-------------------------------------------------------------------------------
48449   
48451   
48453   
48454  *-------------------------------------------------------------------------------
48456   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
48458  *-------------------------------------------------------------------------------
48459  * Light-duty Vehicles for Personal Transport
48460  *-------------------------------------------------------------------------------
48461   
48463   
48464  eqnb_veh_c_china
48465  eqq_en_veh_c_china
48466  eqq_el_edv_c_china
48467  eqmcost_inv_hybrid_c_china
48468  eqmcost_inv_plghybrid_c_china
48469  eqmcost_inv_edv_c_china
48470  *** newcode
48471  eqq_inv_red_ban_c_china
48472  ***
48473  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
48476  *-------------------------------------------------------------------------------
48477  * Road Freight Transport
48478  *-------------------------------------------------------------------------------
48480   
48481  eqnb_frtveh_c_china
48482  eqq_en_frtveh_c_china
48483  eqq_el_frtedv_c_china
48484  eqmcost_inv_hbd_stfr_c_china
48485  eqmcost_inv_plghbd_stfr_c_china
48486  eqmcost_inv_edv_stfr_c_china
48487   
48488  *-------------------------------------------------------------------------------
48490   
48491   
48492   
48493   
48494   
48495   
48496  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
48498  *-------------------------------------------------------------------------------
48499  * Traditional Biomass
48500  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
48501  *  - require post_process to be launch before
48502  *-------------------------------------------------------------------------------
48503   
48505   
48506  * Optional modules
48507   
48508  * Policy modules
48509   
48510  * Calibration
48513   
48518   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
48520  *-------------------------------------------------------------------------------
48521  * Call modules by order
48522  *-------------------------------------------------------------------------------
48526   
48527  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
48529  *-------------------------------------------------------------------------------
48530  * Algorithm
48531  *-------------------------------------------------------------------------------
48532   
48534   
48535  eqobj_c_europe
48536   
48537  *-------------------------------------------------------------------------------
48539   
48540  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
48542  *-------------------------------------------------------------------------------
48543  * Time
48544  * - Temporal structure
48545  * - Fixed time periods
48546  * - States of the world
48547  *-------------------------------------------------------------------------------
48548   
48550   
48551  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
48553  *-------------------------------------------------------------------------------
48554  * Geographic dimension and mapping with countries
48555  *-------------------------------------------------------------------------------
48556   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
48559  *-------------------------------------------------------------------------------
48560  * Non-Cooperative Setup
48561  *
48562  * Each region is defined as an individual coalition.
48563  *
48564  *-------------------------------------------------------------------------------
48565   
48567   
48568  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
48570  *-------------------------------------------------------------------------------
48571  * Welfare
48572  *-------------------------------------------------------------------------------
48573   
48575   
48576  equtility_c_europe
48577   
48578  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
48581  *-------------------------------------------------------------------------------
48582  * Economy
48583  * - Production and Consumption definition
48584  * - Top-level of the production function
48585  * Options:
48586  * --original_ssp=1 : original SSP population and GDP data
48587  *-------------------------------------------------------------------------------
48588   
48590   
48591  eqk_c_europe
48592  eqq_cc_c_europe
48593  eqq_fen_c_europe
48594  eqq_y_c_europe
48595   
48596  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
48599  *-------------------------------------------------------------------------------
48600  * Energy sector
48601  *-------------------------------------------------------------------------------
48602   
48604   
48605  eq_mkt_clearing_oil_c_europe
48606  eqcost_pes_c_europe
48607  eqcost_ses_c_europe
48608  eqk_en_c_europe
48609  eqq_ces_el_c_europe
48610  eqq_ces_nelgas_c_europe
48611  eqq_el2_c_europe
48612  eqq_el_c_europe
48613  eqq_elff_c_europe
48614  eqq_en_c_europe
48615  eqq_en_in_c_europe
48616  eqq_en_mu_c_europe
48617  eqq_en_tree_c_europe
48618  eqq_nel_c_europe
48619  eqq_nelog_c_europe
48620  eqq_fuel_c_europe
48621  eqq_elffren_c_europe
48622   
48623  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
48626  *-------------------------------------------------------------------------------
48627  * Carbon Emissions
48628  * - Total CO2 emissions and CO2 Fossil fuel and Industry
48629  * - CO2 emission costs
48630  * - GHG permit market
48631  *-------------------------------------------------------------------------------
48632   
48634   
48635  eqq_emi_lim_c_europe
48636  ***newcode
48637  eqq_emi_lim_USAc_europe
48638  ***
48639  eqq_emi_tree_c_europe
48640  eqq_emi_co2ffi_c_europe
48641   
48642  eqcost_emi_co2_c_europe
48643   
48644  eq_mkt_clearing_nip_c_europe
48645   
48646  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
48649  *-------------------------------------------------------------------------------
48650  * Research & Development
48651  * Options:
48652  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
48653  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
48654  *-------------------------------------------------------------------------------
48655   
48657   
48658  eqk_rd_c_europe
48659  eqspill_coop_c_europe
48660  eqspill_lead_c_europe
48661  eqspill_foll_c_europe
48662  eqmcost_inv_back_c_europe
48663  eqmcost_inv_back_lbd_c_europe
48664   
48665  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
48668  *-------------------------------------------------------------------------------
48669  * Default Climate Policy Implementation
48670  *
48671  * Options:
48672  *    --policy={bau (default),ctax}
48673  *        Implement a climate policy setting
48674  *  [ --scen= ]
48675  *        Policy variant.
48676  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
48677  *          * XXX for a fixed percentage/yr (e.g. 5) growth
48678  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
48679  *  [ --ctax_year=2020 ]
48680  *        Starting year of the carbon tax
48681  *  [ --ctax_initial=30 ]
48682  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
48683  *
48684  *-------------------------------------------------------------------------------
48686   
48687  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
48689  *-------------------------------------------------------------------------------
48690  * Energy efficiency
48691  *-------------------------------------------------------------------------------
48692   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
48695  *-------------------------------------------------------------------------------
48696  * Hydro Power
48697  *-------------------------------------------------------------------------------
48698   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
48701  *-------------------------------------------------------------------------------
48702  * System Integration:
48703  * - Capacity constraint
48704  * - Flexibility constraint
48705  * - Grid Investment
48706  * - Capacity growth constraint
48707  *-------------------------------------------------------------------------------
48708   
48710   
48711  eqq_elintren_c_europe
48712  eqflex_c_europe
48713  eqk_en_grid_c_europe
48714  eqk_en_grid_to_k_en_c_europe
48715  eqfirm_capacity_c_europe
48716  eqcap_growth_c_europe
48717   
48718  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
48721  *-------------------------------------------------------------------------------
48722  * Nuclear power plants
48723  *-------------------------------------------------------------------------------
48724   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
48727  *-------------------------------------------------------------------------------
48728  * GHG module
48729  * - CH4 FFI + CH4 waste + CH4 open fires
48730  * - N2O FFI + N2O waste + N2O open fires
48731  *-------------------------------------------------------------------------------
48732   
48734   
48735  eqq_emi_waste_c_europe
48736  eqq_emi_n2o_ffi_c_europe
48737  eqq_emi_ch4_ffi_c_europe
48738   
48739  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
48742  *-------------------------------------------------------------------------------
48743  * F-gases
48744  * - LLF
48745  * - SLF
48746  *-------------------------------------------------------------------------------
48747   
48749   
48750  eqq_emi_fgases_c_europe
48751   
48752  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
48755  *-------------------------------------------------------------------------------
48756  * Landuse [simplified version of the land-use model]
48757  *-------------------------------------------------------------------------------
48758   
48760   
48761  eq_wbio_c_europe
48762  eqcost_pes_wbio_c_europe
48763   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
48766  *-------------------------------------------------------------------------------
48767  * Bioenergy power plant
48768  *-------------------------------------------------------------------------------
48769   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
48772  *-------------------------------------------------------------------------------
48773  * Traditional Biofuels
48774  * - Requires the precedence of mod_landuse
48775  *-------------------------------------------------------------------------------
48776   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
48779  *-------------------------------------------------------------------------------
48780  * Advanced biofuel
48781  * - Require the precedence of mod_landuse
48782  *-------------------------------------------------------------------------------
48783   
48785   
48786  eqq_en_lim_advbiofuel_c_europe
48787  eqmcost_fuel_advbiofuel_c_europe
48788   
48789  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
48792  *-------------------------------------------------------------------------------
48793  * Carbon Capture and Sequestration
48794  *-------------------------------------------------------------------------------
48795   
48797   
48798  eqq_emi_ccs_c_europe
48799  eqcost_emi_sinks_c_europe
48800  eq_stor_ccs_cum_c_europe
48801  eq_emi_stor_ccs_c_europe
48802  eq_emi_leak_ccs_c_europe
48803   
48804  *-------------------------------------------------------------------------------
48806   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
48808  *-------------------------------------------------------------------------------
48809  * Coal for non-electric sectors
48810  * - Coke Plants
48811  * - Industrial and Commercial combined-heat-and-power (CHP)
48812  * - Others
48813  *-------------------------------------------------------------------------------
48814   
48816   
48817  eqcost_en_nelcoal_c_europe
48818  eqq_ncoalabat_monotone_c_europe
48819  eqq_en_nelcoalccs_max_c_europe
48820   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
48823  *-------------------------------------------------------------------------------
48824  * Wind energy module
48825  * - onshore and offshore
48826  *-------------------------------------------------------------------------------
48827   
48829   
48830  eqq_en_mu_windon_c_europe
48831  eqq_en_mu_windoff_c_europe
48832  eqk_en_windon_c_europe
48833  eqk_en_windoff_c_europe
48834  eqq_en_windon_sum_c_europe
48835  eqq_en_windoff_sum_c_europe
48836  eqk_en_windon_sum_c_europe
48837  eqk_en_windoff_sum_c_europe
48838  eqi_en_windon_sum_c_europe
48839  eqi_en_windoff_sum_c_europe
48840   
48842   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
48844  *-------------------------------------------------------------------------------
48845  * Solar Powerplants (PV and CSP) to the electrical system
48846  *-------------------------------------------------------------------------------
48847   
48848  *-------------------------------------------------------------------------------
48850   
48851  eqq_en_mu_pv_c_europe
48852  eqq_en_mu_csp_c_europe
48853  eqk_en_pv_c_europe
48854  eqk_en_csp_c_europe
48855  eqq_en_pv_sum_c_europe
48856  eqq_en_csp_sum_c_europe
48857  eqk_en_pv_sum_c_europe
48858  eqk_en_csp_sum_c_europe
48859  eqi_en_pv_sum_c_europe
48860  eqi_en_csp_sum_c_europe
48861  eqk_en_solar_comp_c_europe
48862   
48863  *-------------------------------------------------------------------------------
48865   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
48867  *-------------------------------------------------------------------------------
48868  * Technology development scenarios
48869  *-------------------------------------------------------------------------------
48870   
48872   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
48874  *-------------------------------------------------------------------------------
48875  * Oil Extraction
48876  * Options:
48877  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
48878  *-------------------------------------------------------------------------------
48879   
48881   
48882  eqoilcap_c_europe
48883  eqoilprod_c_europe
48884  eqq_out_oil_c_europe
48885  eqcum_oil_c_europe
48886  eqcost_oil_c_europe
48887  eqi_oil_c_europe
48888  eqi_out_oil_c_europe
48889  eqq_emi_out_oil_c_europe
48890   
48891  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
48894  *-------------------------------------------------------------------------------
48895  * Uranium Resources
48896  *-------------------------------------------------------------------------------
48897   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
48900  *-------------------------------------------------------------------------------
48901  * Gas Resources
48902  *-------------------------------------------------------------------------------
48903   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
48906  *-------------------------------------------------------------------------------
48907  * Coal Resources
48908  *-------------------------------------------------------------------------------
48909   
48911   
48912   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
48914  *-------------------------------------------------------------------------------
48915  * Climate
48916  *
48917  * Represents the climate
48918  * - based on the DICE model equations
48919  * - Radiative forcing for non CO2 ghgs
48920  * - parameters calibrated to reproduce MAGICC6.4 default response
48921  *
48922  *  Options:
48923  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
48924  * - $setglobal cooperate_on_climate {'YES','NO'}
48925  * - 'YES'(default): Countries within a coalition act in cooperation
48926  *   'NO': Countries within a coalition act individually
48927  *
48928  *-------------------------------------------------------------------------------
48929   
48931   
48933   
48934  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
48937  *-------------------------------------------------------------------------------
48938  * Long-run Damages from Climate Change
48939  * - Economic impacts
48940  * - Adaptation
48941  *-------------------------------------------------------------------------------
48942   
48944   
48946   
48947  *-------------------------------------------------------------------------------
48949   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
48951  *-------------------------------------------------------------------------------
48952  * Light-duty Vehicles for Personal Transport
48953  *-------------------------------------------------------------------------------
48954   
48956   
48957  eqnb_veh_c_europe
48958  eqq_en_veh_c_europe
48959  eqq_el_edv_c_europe
48960  eqmcost_inv_hybrid_c_europe
48961  eqmcost_inv_plghybrid_c_europe
48962  eqmcost_inv_edv_c_europe
48963  *** newcode
48964  eqq_inv_red_ban_c_europe
48965  ***
48966  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
48969  *-------------------------------------------------------------------------------
48970  * Road Freight Transport
48971  *-------------------------------------------------------------------------------
48973   
48974  eqnb_frtveh_c_europe
48975  eqq_en_frtveh_c_europe
48976  eqq_el_frtedv_c_europe
48977  eqmcost_inv_hbd_stfr_c_europe
48978  eqmcost_inv_plghbd_stfr_c_europe
48979  eqmcost_inv_edv_stfr_c_europe
48980   
48981  *-------------------------------------------------------------------------------
48983   
48984   
48985   
48986   
48987   
48988   
48989  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
48991  *-------------------------------------------------------------------------------
48992  * Traditional Biomass
48993  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
48994  *  - require post_process to be launch before
48995  *-------------------------------------------------------------------------------
48996   
48998   
48999  * Optional modules
49000   
49001  * Policy modules
49002   
49003  * Calibration
49006   
49011   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
49013  *-------------------------------------------------------------------------------
49014  * Call modules by order
49015  *-------------------------------------------------------------------------------
49019   
49020  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
49022  *-------------------------------------------------------------------------------
49023  * Algorithm
49024  *-------------------------------------------------------------------------------
49025   
49027   
49028  eqobj_c_india
49029   
49030  *-------------------------------------------------------------------------------
49032   
49033  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
49035  *-------------------------------------------------------------------------------
49036  * Time
49037  * - Temporal structure
49038  * - Fixed time periods
49039  * - States of the world
49040  *-------------------------------------------------------------------------------
49041   
49043   
49044  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
49046  *-------------------------------------------------------------------------------
49047  * Geographic dimension and mapping with countries
49048  *-------------------------------------------------------------------------------
49049   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
49052  *-------------------------------------------------------------------------------
49053  * Non-Cooperative Setup
49054  *
49055  * Each region is defined as an individual coalition.
49056  *
49057  *-------------------------------------------------------------------------------
49058   
49060   
49061  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
49063  *-------------------------------------------------------------------------------
49064  * Welfare
49065  *-------------------------------------------------------------------------------
49066   
49068   
49069  equtility_c_india
49070   
49071  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
49074  *-------------------------------------------------------------------------------
49075  * Economy
49076  * - Production and Consumption definition
49077  * - Top-level of the production function
49078  * Options:
49079  * --original_ssp=1 : original SSP population and GDP data
49080  *-------------------------------------------------------------------------------
49081   
49083   
49084  eqk_c_india
49085  eqq_cc_c_india
49086  eqq_fen_c_india
49087  eqq_y_c_india
49088   
49089  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
49092  *-------------------------------------------------------------------------------
49093  * Energy sector
49094  *-------------------------------------------------------------------------------
49095   
49097   
49098  eq_mkt_clearing_oil_c_india
49099  eqcost_pes_c_india
49100  eqcost_ses_c_india
49101  eqk_en_c_india
49102  eqq_ces_el_c_india
49103  eqq_ces_nelgas_c_india
49104  eqq_el2_c_india
49105  eqq_el_c_india
49106  eqq_elff_c_india
49107  eqq_en_c_india
49108  eqq_en_in_c_india
49109  eqq_en_mu_c_india
49110  eqq_en_tree_c_india
49111  eqq_nel_c_india
49112  eqq_nelog_c_india
49113  eqq_fuel_c_india
49114  eqq_elffren_c_india
49115   
49116  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
49119  *-------------------------------------------------------------------------------
49120  * Carbon Emissions
49121  * - Total CO2 emissions and CO2 Fossil fuel and Industry
49122  * - CO2 emission costs
49123  * - GHG permit market
49124  *-------------------------------------------------------------------------------
49125   
49127   
49128  eqq_emi_lim_c_india
49129  ***newcode
49130  eqq_emi_lim_USAc_india
49131  ***
49132  eqq_emi_tree_c_india
49133  eqq_emi_co2ffi_c_india
49134   
49135  eqcost_emi_co2_c_india
49136   
49137  eq_mkt_clearing_nip_c_india
49138   
49139  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
49142  *-------------------------------------------------------------------------------
49143  * Research & Development
49144  * Options:
49145  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
49146  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
49147  *-------------------------------------------------------------------------------
49148   
49150   
49151  eqk_rd_c_india
49152  eqspill_coop_c_india
49153  eqspill_lead_c_india
49154  eqspill_foll_c_india
49155  eqmcost_inv_back_c_india
49156  eqmcost_inv_back_lbd_c_india
49157   
49158  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
49161  *-------------------------------------------------------------------------------
49162  * Default Climate Policy Implementation
49163  *
49164  * Options:
49165  *    --policy={bau (default),ctax}
49166  *        Implement a climate policy setting
49167  *  [ --scen= ]
49168  *        Policy variant.
49169  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
49170  *          * XXX for a fixed percentage/yr (e.g. 5) growth
49171  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
49172  *  [ --ctax_year=2020 ]
49173  *        Starting year of the carbon tax
49174  *  [ --ctax_initial=30 ]
49175  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
49176  *
49177  *-------------------------------------------------------------------------------
49179   
49180  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
49182  *-------------------------------------------------------------------------------
49183  * Energy efficiency
49184  *-------------------------------------------------------------------------------
49185   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
49188  *-------------------------------------------------------------------------------
49189  * Hydro Power
49190  *-------------------------------------------------------------------------------
49191   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
49194  *-------------------------------------------------------------------------------
49195  * System Integration:
49196  * - Capacity constraint
49197  * - Flexibility constraint
49198  * - Grid Investment
49199  * - Capacity growth constraint
49200  *-------------------------------------------------------------------------------
49201   
49203   
49204  eqq_elintren_c_india
49205  eqflex_c_india
49206  eqk_en_grid_c_india
49207  eqk_en_grid_to_k_en_c_india
49208  eqfirm_capacity_c_india
49209  eqcap_growth_c_india
49210   
49211  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
49214  *-------------------------------------------------------------------------------
49215  * Nuclear power plants
49216  *-------------------------------------------------------------------------------
49217   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
49220  *-------------------------------------------------------------------------------
49221  * GHG module
49222  * - CH4 FFI + CH4 waste + CH4 open fires
49223  * - N2O FFI + N2O waste + N2O open fires
49224  *-------------------------------------------------------------------------------
49225   
49227   
49228  eqq_emi_waste_c_india
49229  eqq_emi_n2o_ffi_c_india
49230  eqq_emi_ch4_ffi_c_india
49231   
49232  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
49235  *-------------------------------------------------------------------------------
49236  * F-gases
49237  * - LLF
49238  * - SLF
49239  *-------------------------------------------------------------------------------
49240   
49242   
49243  eqq_emi_fgases_c_india
49244   
49245  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
49248  *-------------------------------------------------------------------------------
49249  * Landuse [simplified version of the land-use model]
49250  *-------------------------------------------------------------------------------
49251   
49253   
49254  eq_wbio_c_india
49255  eqcost_pes_wbio_c_india
49256   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
49259  *-------------------------------------------------------------------------------
49260  * Bioenergy power plant
49261  *-------------------------------------------------------------------------------
49262   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
49265  *-------------------------------------------------------------------------------
49266  * Traditional Biofuels
49267  * - Requires the precedence of mod_landuse
49268  *-------------------------------------------------------------------------------
49269   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
49272  *-------------------------------------------------------------------------------
49273  * Advanced biofuel
49274  * - Require the precedence of mod_landuse
49275  *-------------------------------------------------------------------------------
49276   
49278   
49279  eqq_en_lim_advbiofuel_c_india
49280  eqmcost_fuel_advbiofuel_c_india
49281   
49282  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
49285  *-------------------------------------------------------------------------------
49286  * Carbon Capture and Sequestration
49287  *-------------------------------------------------------------------------------
49288   
49290   
49291  eqq_emi_ccs_c_india
49292  eqcost_emi_sinks_c_india
49293  eq_stor_ccs_cum_c_india
49294  eq_emi_stor_ccs_c_india
49295  eq_emi_leak_ccs_c_india
49296   
49297  *-------------------------------------------------------------------------------
49299   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
49301  *-------------------------------------------------------------------------------
49302  * Coal for non-electric sectors
49303  * - Coke Plants
49304  * - Industrial and Commercial combined-heat-and-power (CHP)
49305  * - Others
49306  *-------------------------------------------------------------------------------
49307   
49309   
49310  eqcost_en_nelcoal_c_india
49311  eqq_ncoalabat_monotone_c_india
49312  eqq_en_nelcoalccs_max_c_india
49313   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
49316  *-------------------------------------------------------------------------------
49317  * Wind energy module
49318  * - onshore and offshore
49319  *-------------------------------------------------------------------------------
49320   
49322   
49323  eqq_en_mu_windon_c_india
49324  eqq_en_mu_windoff_c_india
49325  eqk_en_windon_c_india
49326  eqk_en_windoff_c_india
49327  eqq_en_windon_sum_c_india
49328  eqq_en_windoff_sum_c_india
49329  eqk_en_windon_sum_c_india
49330  eqk_en_windoff_sum_c_india
49331  eqi_en_windon_sum_c_india
49332  eqi_en_windoff_sum_c_india
49333   
49335   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
49337  *-------------------------------------------------------------------------------
49338  * Solar Powerplants (PV and CSP) to the electrical system
49339  *-------------------------------------------------------------------------------
49340   
49341  *-------------------------------------------------------------------------------
49343   
49344  eqq_en_mu_pv_c_india
49345  eqq_en_mu_csp_c_india
49346  eqk_en_pv_c_india
49347  eqk_en_csp_c_india
49348  eqq_en_pv_sum_c_india
49349  eqq_en_csp_sum_c_india
49350  eqk_en_pv_sum_c_india
49351  eqk_en_csp_sum_c_india
49352  eqi_en_pv_sum_c_india
49353  eqi_en_csp_sum_c_india
49354  eqk_en_solar_comp_c_india
49355   
49356  *-------------------------------------------------------------------------------
49358   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
49360  *-------------------------------------------------------------------------------
49361  * Technology development scenarios
49362  *-------------------------------------------------------------------------------
49363   
49365   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
49367  *-------------------------------------------------------------------------------
49368  * Oil Extraction
49369  * Options:
49370  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
49371  *-------------------------------------------------------------------------------
49372   
49374   
49375  eqoilcap_c_india
49376  eqoilprod_c_india
49377  eqq_out_oil_c_india
49378  eqcum_oil_c_india
49379  eqcost_oil_c_india
49380  eqi_oil_c_india
49381  eqi_out_oil_c_india
49382  eqq_emi_out_oil_c_india
49383   
49384  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
49387  *-------------------------------------------------------------------------------
49388  * Uranium Resources
49389  *-------------------------------------------------------------------------------
49390   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
49393  *-------------------------------------------------------------------------------
49394  * Gas Resources
49395  *-------------------------------------------------------------------------------
49396   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
49399  *-------------------------------------------------------------------------------
49400  * Coal Resources
49401  *-------------------------------------------------------------------------------
49402   
49404   
49405   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
49407  *-------------------------------------------------------------------------------
49408  * Climate
49409  *
49410  * Represents the climate
49411  * - based on the DICE model equations
49412  * - Radiative forcing for non CO2 ghgs
49413  * - parameters calibrated to reproduce MAGICC6.4 default response
49414  *
49415  *  Options:
49416  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
49417  * - $setglobal cooperate_on_climate {'YES','NO'}
49418  * - 'YES'(default): Countries within a coalition act in cooperation
49419  *   'NO': Countries within a coalition act individually
49420  *
49421  *-------------------------------------------------------------------------------
49422   
49424   
49426   
49427  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
49430  *-------------------------------------------------------------------------------
49431  * Long-run Damages from Climate Change
49432  * - Economic impacts
49433  * - Adaptation
49434  *-------------------------------------------------------------------------------
49435   
49437   
49439   
49440  *-------------------------------------------------------------------------------
49442   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
49444  *-------------------------------------------------------------------------------
49445  * Light-duty Vehicles for Personal Transport
49446  *-------------------------------------------------------------------------------
49447   
49449   
49450  eqnb_veh_c_india
49451  eqq_en_veh_c_india
49452  eqq_el_edv_c_india
49453  eqmcost_inv_hybrid_c_india
49454  eqmcost_inv_plghybrid_c_india
49455  eqmcost_inv_edv_c_india
49456  *** newcode
49457  eqq_inv_red_ban_c_india
49458  ***
49459  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
49462  *-------------------------------------------------------------------------------
49463  * Road Freight Transport
49464  *-------------------------------------------------------------------------------
49466   
49467  eqnb_frtveh_c_india
49468  eqq_en_frtveh_c_india
49469  eqq_el_frtedv_c_india
49470  eqmcost_inv_hbd_stfr_c_india
49471  eqmcost_inv_plghbd_stfr_c_india
49472  eqmcost_inv_edv_stfr_c_india
49473   
49474  *-------------------------------------------------------------------------------
49476   
49477   
49478   
49479   
49480   
49481   
49482  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
49484  *-------------------------------------------------------------------------------
49485  * Traditional Biomass
49486  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
49487  *  - require post_process to be launch before
49488  *-------------------------------------------------------------------------------
49489   
49491   
49492  * Optional modules
49493   
49494  * Policy modules
49495   
49496  * Calibration
49499   
49504   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
49506  *-------------------------------------------------------------------------------
49507  * Call modules by order
49508  *-------------------------------------------------------------------------------
49512   
49513  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
49515  *-------------------------------------------------------------------------------
49516  * Algorithm
49517  *-------------------------------------------------------------------------------
49518   
49520   
49521  eqobj_c_indonesia
49522   
49523  *-------------------------------------------------------------------------------
49525   
49526  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
49528  *-------------------------------------------------------------------------------
49529  * Time
49530  * - Temporal structure
49531  * - Fixed time periods
49532  * - States of the world
49533  *-------------------------------------------------------------------------------
49534   
49536   
49537  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
49539  *-------------------------------------------------------------------------------
49540  * Geographic dimension and mapping with countries
49541  *-------------------------------------------------------------------------------
49542   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
49545  *-------------------------------------------------------------------------------
49546  * Non-Cooperative Setup
49547  *
49548  * Each region is defined as an individual coalition.
49549  *
49550  *-------------------------------------------------------------------------------
49551   
49553   
49554  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
49556  *-------------------------------------------------------------------------------
49557  * Welfare
49558  *-------------------------------------------------------------------------------
49559   
49561   
49562  equtility_c_indonesia
49563   
49564  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
49567  *-------------------------------------------------------------------------------
49568  * Economy
49569  * - Production and Consumption definition
49570  * - Top-level of the production function
49571  * Options:
49572  * --original_ssp=1 : original SSP population and GDP data
49573  *-------------------------------------------------------------------------------
49574   
49576   
49577  eqk_c_indonesia
49578  eqq_cc_c_indonesia
49579  eqq_fen_c_indonesia
49580  eqq_y_c_indonesia
49581   
49582  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
49585  *-------------------------------------------------------------------------------
49586  * Energy sector
49587  *-------------------------------------------------------------------------------
49588   
49590   
49591  eq_mkt_clearing_oil_c_indonesia
49592  eqcost_pes_c_indonesia
49593  eqcost_ses_c_indonesia
49594  eqk_en_c_indonesia
49595  eqq_ces_el_c_indonesia
49596  eqq_ces_nelgas_c_indonesia
49597  eqq_el2_c_indonesia
49598  eqq_el_c_indonesia
49599  eqq_elff_c_indonesia
49600  eqq_en_c_indonesia
49601  eqq_en_in_c_indonesia
49602  eqq_en_mu_c_indonesia
49603  eqq_en_tree_c_indonesia
49604  eqq_nel_c_indonesia
49605  eqq_nelog_c_indonesia
49606  eqq_fuel_c_indonesia
49607  eqq_elffren_c_indonesia
49608   
49609  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
49612  *-------------------------------------------------------------------------------
49613  * Carbon Emissions
49614  * - Total CO2 emissions and CO2 Fossil fuel and Industry
49615  * - CO2 emission costs
49616  * - GHG permit market
49617  *-------------------------------------------------------------------------------
49618   
49620   
49621  eqq_emi_lim_c_indonesia
49622  ***newcode
49623  eqq_emi_lim_USAc_indonesia
49624  ***
49625  eqq_emi_tree_c_indonesia
49626  eqq_emi_co2ffi_c_indonesia
49627   
49628  eqcost_emi_co2_c_indonesia
49629   
49630  eq_mkt_clearing_nip_c_indonesia
49631   
49632  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
49635  *-------------------------------------------------------------------------------
49636  * Research & Development
49637  * Options:
49638  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
49639  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
49640  *-------------------------------------------------------------------------------
49641   
49643   
49644  eqk_rd_c_indonesia
49645  eqspill_coop_c_indonesia
49646  eqspill_lead_c_indonesia
49647  eqspill_foll_c_indonesia
49648  eqmcost_inv_back_c_indonesia
49649  eqmcost_inv_back_lbd_c_indonesia
49650   
49651  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
49654  *-------------------------------------------------------------------------------
49655  * Default Climate Policy Implementation
49656  *
49657  * Options:
49658  *    --policy={bau (default),ctax}
49659  *        Implement a climate policy setting
49660  *  [ --scen= ]
49661  *        Policy variant.
49662  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
49663  *          * XXX for a fixed percentage/yr (e.g. 5) growth
49664  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
49665  *  [ --ctax_year=2020 ]
49666  *        Starting year of the carbon tax
49667  *  [ --ctax_initial=30 ]
49668  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
49669  *
49670  *-------------------------------------------------------------------------------
49672   
49673  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
49675  *-------------------------------------------------------------------------------
49676  * Energy efficiency
49677  *-------------------------------------------------------------------------------
49678   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
49681  *-------------------------------------------------------------------------------
49682  * Hydro Power
49683  *-------------------------------------------------------------------------------
49684   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
49687  *-------------------------------------------------------------------------------
49688  * System Integration:
49689  * - Capacity constraint
49690  * - Flexibility constraint
49691  * - Grid Investment
49692  * - Capacity growth constraint
49693  *-------------------------------------------------------------------------------
49694   
49696   
49697  eqq_elintren_c_indonesia
49698  eqflex_c_indonesia
49699  eqk_en_grid_c_indonesia
49700  eqk_en_grid_to_k_en_c_indonesia
49701  eqfirm_capacity_c_indonesia
49702  eqcap_growth_c_indonesia
49703   
49704  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
49707  *-------------------------------------------------------------------------------
49708  * Nuclear power plants
49709  *-------------------------------------------------------------------------------
49710   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
49713  *-------------------------------------------------------------------------------
49714  * GHG module
49715  * - CH4 FFI + CH4 waste + CH4 open fires
49716  * - N2O FFI + N2O waste + N2O open fires
49717  *-------------------------------------------------------------------------------
49718   
49720   
49721  eqq_emi_waste_c_indonesia
49722  eqq_emi_n2o_ffi_c_indonesia
49723  eqq_emi_ch4_ffi_c_indonesia
49724   
49725  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
49728  *-------------------------------------------------------------------------------
49729  * F-gases
49730  * - LLF
49731  * - SLF
49732  *-------------------------------------------------------------------------------
49733   
49735   
49736  eqq_emi_fgases_c_indonesia
49737   
49738  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
49741  *-------------------------------------------------------------------------------
49742  * Landuse [simplified version of the land-use model]
49743  *-------------------------------------------------------------------------------
49744   
49746   
49747  eq_wbio_c_indonesia
49748  eqcost_pes_wbio_c_indonesia
49749   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
49752  *-------------------------------------------------------------------------------
49753  * Bioenergy power plant
49754  *-------------------------------------------------------------------------------
49755   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
49758  *-------------------------------------------------------------------------------
49759  * Traditional Biofuels
49760  * - Requires the precedence of mod_landuse
49761  *-------------------------------------------------------------------------------
49762   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
49765  *-------------------------------------------------------------------------------
49766  * Advanced biofuel
49767  * - Require the precedence of mod_landuse
49768  *-------------------------------------------------------------------------------
49769   
49771   
49772  eqq_en_lim_advbiofuel_c_indonesia
49773  eqmcost_fuel_advbiofuel_c_indonesia
49774   
49775  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
49778  *-------------------------------------------------------------------------------
49779  * Carbon Capture and Sequestration
49780  *-------------------------------------------------------------------------------
49781   
49783   
49784  eqq_emi_ccs_c_indonesia
49785  eqcost_emi_sinks_c_indonesia
49786  eq_stor_ccs_cum_c_indonesia
49787  eq_emi_stor_ccs_c_indonesia
49788  eq_emi_leak_ccs_c_indonesia
49789   
49790  *-------------------------------------------------------------------------------
49792   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
49794  *-------------------------------------------------------------------------------
49795  * Coal for non-electric sectors
49796  * - Coke Plants
49797  * - Industrial and Commercial combined-heat-and-power (CHP)
49798  * - Others
49799  *-------------------------------------------------------------------------------
49800   
49802   
49803  eqcost_en_nelcoal_c_indonesia
49804  eqq_ncoalabat_monotone_c_indonesia
49805  eqq_en_nelcoalccs_max_c_indonesia
49806   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
49809  *-------------------------------------------------------------------------------
49810  * Wind energy module
49811  * - onshore and offshore
49812  *-------------------------------------------------------------------------------
49813   
49815   
49816  eqq_en_mu_windon_c_indonesia
49817  eqq_en_mu_windoff_c_indonesia
49818  eqk_en_windon_c_indonesia
49819  eqk_en_windoff_c_indonesia
49820  eqq_en_windon_sum_c_indonesia
49821  eqq_en_windoff_sum_c_indonesia
49822  eqk_en_windon_sum_c_indonesia
49823  eqk_en_windoff_sum_c_indonesia
49824  eqi_en_windon_sum_c_indonesia
49825  eqi_en_windoff_sum_c_indonesia
49826   
49828   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
49830  *-------------------------------------------------------------------------------
49831  * Solar Powerplants (PV and CSP) to the electrical system
49832  *-------------------------------------------------------------------------------
49833   
49834  *-------------------------------------------------------------------------------
49836   
49837  eqq_en_mu_pv_c_indonesia
49838  eqq_en_mu_csp_c_indonesia
49839  eqk_en_pv_c_indonesia
49840  eqk_en_csp_c_indonesia
49841  eqq_en_pv_sum_c_indonesia
49842  eqq_en_csp_sum_c_indonesia
49843  eqk_en_pv_sum_c_indonesia
49844  eqk_en_csp_sum_c_indonesia
49845  eqi_en_pv_sum_c_indonesia
49846  eqi_en_csp_sum_c_indonesia
49847  eqk_en_solar_comp_c_indonesia
49848   
49849  *-------------------------------------------------------------------------------
49851   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
49853  *-------------------------------------------------------------------------------
49854  * Technology development scenarios
49855  *-------------------------------------------------------------------------------
49856   
49858   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
49860  *-------------------------------------------------------------------------------
49861  * Oil Extraction
49862  * Options:
49863  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
49864  *-------------------------------------------------------------------------------
49865   
49867   
49868  eqoilcap_c_indonesia
49869  eqoilprod_c_indonesia
49870  eqq_out_oil_c_indonesia
49871  eqcum_oil_c_indonesia
49872  eqcost_oil_c_indonesia
49873  eqi_oil_c_indonesia
49874  eqi_out_oil_c_indonesia
49875  eqq_emi_out_oil_c_indonesia
49876   
49877  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
49880  *-------------------------------------------------------------------------------
49881  * Uranium Resources
49882  *-------------------------------------------------------------------------------
49883   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
49886  *-------------------------------------------------------------------------------
49887  * Gas Resources
49888  *-------------------------------------------------------------------------------
49889   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
49892  *-------------------------------------------------------------------------------
49893  * Coal Resources
49894  *-------------------------------------------------------------------------------
49895   
49897   
49898   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
49900  *-------------------------------------------------------------------------------
49901  * Climate
49902  *
49903  * Represents the climate
49904  * - based on the DICE model equations
49905  * - Radiative forcing for non CO2 ghgs
49906  * - parameters calibrated to reproduce MAGICC6.4 default response
49907  *
49908  *  Options:
49909  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
49910  * - $setglobal cooperate_on_climate {'YES','NO'}
49911  * - 'YES'(default): Countries within a coalition act in cooperation
49912  *   'NO': Countries within a coalition act individually
49913  *
49914  *-------------------------------------------------------------------------------
49915   
49917   
49919   
49920  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
49923  *-------------------------------------------------------------------------------
49924  * Long-run Damages from Climate Change
49925  * - Economic impacts
49926  * - Adaptation
49927  *-------------------------------------------------------------------------------
49928   
49930   
49932   
49933  *-------------------------------------------------------------------------------
49935   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
49937  *-------------------------------------------------------------------------------
49938  * Light-duty Vehicles for Personal Transport
49939  *-------------------------------------------------------------------------------
49940   
49942   
49943  eqnb_veh_c_indonesia
49944  eqq_en_veh_c_indonesia
49945  eqq_el_edv_c_indonesia
49946  eqmcost_inv_hybrid_c_indonesia
49947  eqmcost_inv_plghybrid_c_indonesia
49948  eqmcost_inv_edv_c_indonesia
49949  *** newcode
49950  eqq_inv_red_ban_c_indonesia
49951  ***
49952  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
49955  *-------------------------------------------------------------------------------
49956  * Road Freight Transport
49957  *-------------------------------------------------------------------------------
49959   
49960  eqnb_frtveh_c_indonesia
49961  eqq_en_frtveh_c_indonesia
49962  eqq_el_frtedv_c_indonesia
49963  eqmcost_inv_hbd_stfr_c_indonesia
49964  eqmcost_inv_plghbd_stfr_c_indonesia
49965  eqmcost_inv_edv_stfr_c_indonesia
49966   
49967  *-------------------------------------------------------------------------------
49969   
49970   
49971   
49972   
49973   
49974   
49975  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
49977  *-------------------------------------------------------------------------------
49978  * Traditional Biomass
49979  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
49980  *  - require post_process to be launch before
49981  *-------------------------------------------------------------------------------
49982   
49984   
49985  * Optional modules
49986   
49987  * Policy modules
49988   
49989  * Calibration
49992   
49997   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
49999  *-------------------------------------------------------------------------------
50000  * Call modules by order
50001  *-------------------------------------------------------------------------------
50005   
50006  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
50008  *-------------------------------------------------------------------------------
50009  * Algorithm
50010  *-------------------------------------------------------------------------------
50011   
50013   
50014  eqobj_c_jpnkor
50015   
50016  *-------------------------------------------------------------------------------
50018   
50019  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
50021  *-------------------------------------------------------------------------------
50022  * Time
50023  * - Temporal structure
50024  * - Fixed time periods
50025  * - States of the world
50026  *-------------------------------------------------------------------------------
50027   
50029   
50030  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
50032  *-------------------------------------------------------------------------------
50033  * Geographic dimension and mapping with countries
50034  *-------------------------------------------------------------------------------
50035   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
50038  *-------------------------------------------------------------------------------
50039  * Non-Cooperative Setup
50040  *
50041  * Each region is defined as an individual coalition.
50042  *
50043  *-------------------------------------------------------------------------------
50044   
50046   
50047  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
50049  *-------------------------------------------------------------------------------
50050  * Welfare
50051  *-------------------------------------------------------------------------------
50052   
50054   
50055  equtility_c_jpnkor
50056   
50057  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
50060  *-------------------------------------------------------------------------------
50061  * Economy
50062  * - Production and Consumption definition
50063  * - Top-level of the production function
50064  * Options:
50065  * --original_ssp=1 : original SSP population and GDP data
50066  *-------------------------------------------------------------------------------
50067   
50069   
50070  eqk_c_jpnkor
50071  eqq_cc_c_jpnkor
50072  eqq_fen_c_jpnkor
50073  eqq_y_c_jpnkor
50074   
50075  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
50078  *-------------------------------------------------------------------------------
50079  * Energy sector
50080  *-------------------------------------------------------------------------------
50081   
50083   
50084  eq_mkt_clearing_oil_c_jpnkor
50085  eqcost_pes_c_jpnkor
50086  eqcost_ses_c_jpnkor
50087  eqk_en_c_jpnkor
50088  eqq_ces_el_c_jpnkor
50089  eqq_ces_nelgas_c_jpnkor
50090  eqq_el2_c_jpnkor
50091  eqq_el_c_jpnkor
50092  eqq_elff_c_jpnkor
50093  eqq_en_c_jpnkor
50094  eqq_en_in_c_jpnkor
50095  eqq_en_mu_c_jpnkor
50096  eqq_en_tree_c_jpnkor
50097  eqq_nel_c_jpnkor
50098  eqq_nelog_c_jpnkor
50099  eqq_fuel_c_jpnkor
50100  eqq_elffren_c_jpnkor
50101   
50102  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
50105  *-------------------------------------------------------------------------------
50106  * Carbon Emissions
50107  * - Total CO2 emissions and CO2 Fossil fuel and Industry
50108  * - CO2 emission costs
50109  * - GHG permit market
50110  *-------------------------------------------------------------------------------
50111   
50113   
50114  eqq_emi_lim_c_jpnkor
50115  ***newcode
50116  eqq_emi_lim_USAc_jpnkor
50117  ***
50118  eqq_emi_tree_c_jpnkor
50119  eqq_emi_co2ffi_c_jpnkor
50120   
50121  eqcost_emi_co2_c_jpnkor
50122   
50123  eq_mkt_clearing_nip_c_jpnkor
50124   
50125  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
50128  *-------------------------------------------------------------------------------
50129  * Research & Development
50130  * Options:
50131  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
50132  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
50133  *-------------------------------------------------------------------------------
50134   
50136   
50137  eqk_rd_c_jpnkor
50138  eqspill_coop_c_jpnkor
50139  eqspill_lead_c_jpnkor
50140  eqspill_foll_c_jpnkor
50141  eqmcost_inv_back_c_jpnkor
50142  eqmcost_inv_back_lbd_c_jpnkor
50143   
50144  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
50147  *-------------------------------------------------------------------------------
50148  * Default Climate Policy Implementation
50149  *
50150  * Options:
50151  *    --policy={bau (default),ctax}
50152  *        Implement a climate policy setting
50153  *  [ --scen= ]
50154  *        Policy variant.
50155  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
50156  *          * XXX for a fixed percentage/yr (e.g. 5) growth
50157  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
50158  *  [ --ctax_year=2020 ]
50159  *        Starting year of the carbon tax
50160  *  [ --ctax_initial=30 ]
50161  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
50162  *
50163  *-------------------------------------------------------------------------------
50165   
50166  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
50168  *-------------------------------------------------------------------------------
50169  * Energy efficiency
50170  *-------------------------------------------------------------------------------
50171   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
50174  *-------------------------------------------------------------------------------
50175  * Hydro Power
50176  *-------------------------------------------------------------------------------
50177   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
50180  *-------------------------------------------------------------------------------
50181  * System Integration:
50182  * - Capacity constraint
50183  * - Flexibility constraint
50184  * - Grid Investment
50185  * - Capacity growth constraint
50186  *-------------------------------------------------------------------------------
50187   
50189   
50190  eqq_elintren_c_jpnkor
50191  eqflex_c_jpnkor
50192  eqk_en_grid_c_jpnkor
50193  eqk_en_grid_to_k_en_c_jpnkor
50194  eqfirm_capacity_c_jpnkor
50195  eqcap_growth_c_jpnkor
50196   
50197  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
50200  *-------------------------------------------------------------------------------
50201  * Nuclear power plants
50202  *-------------------------------------------------------------------------------
50203   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
50206  *-------------------------------------------------------------------------------
50207  * GHG module
50208  * - CH4 FFI + CH4 waste + CH4 open fires
50209  * - N2O FFI + N2O waste + N2O open fires
50210  *-------------------------------------------------------------------------------
50211   
50213   
50214  eqq_emi_waste_c_jpnkor
50215  eqq_emi_n2o_ffi_c_jpnkor
50216  eqq_emi_ch4_ffi_c_jpnkor
50217   
50218  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
50221  *-------------------------------------------------------------------------------
50222  * F-gases
50223  * - LLF
50224  * - SLF
50225  *-------------------------------------------------------------------------------
50226   
50228   
50229  eqq_emi_fgases_c_jpnkor
50230   
50231  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
50234  *-------------------------------------------------------------------------------
50235  * Landuse [simplified version of the land-use model]
50236  *-------------------------------------------------------------------------------
50237   
50239   
50240  eq_wbio_c_jpnkor
50241  eqcost_pes_wbio_c_jpnkor
50242   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
50245  *-------------------------------------------------------------------------------
50246  * Bioenergy power plant
50247  *-------------------------------------------------------------------------------
50248   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
50251  *-------------------------------------------------------------------------------
50252  * Traditional Biofuels
50253  * - Requires the precedence of mod_landuse
50254  *-------------------------------------------------------------------------------
50255   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
50258  *-------------------------------------------------------------------------------
50259  * Advanced biofuel
50260  * - Require the precedence of mod_landuse
50261  *-------------------------------------------------------------------------------
50262   
50264   
50265  eqq_en_lim_advbiofuel_c_jpnkor
50266  eqmcost_fuel_advbiofuel_c_jpnkor
50267   
50268  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
50271  *-------------------------------------------------------------------------------
50272  * Carbon Capture and Sequestration
50273  *-------------------------------------------------------------------------------
50274   
50276   
50277  eqq_emi_ccs_c_jpnkor
50278  eqcost_emi_sinks_c_jpnkor
50279  eq_stor_ccs_cum_c_jpnkor
50280  eq_emi_stor_ccs_c_jpnkor
50281  eq_emi_leak_ccs_c_jpnkor
50282   
50283  *-------------------------------------------------------------------------------
50285   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
50287  *-------------------------------------------------------------------------------
50288  * Coal for non-electric sectors
50289  * - Coke Plants
50290  * - Industrial and Commercial combined-heat-and-power (CHP)
50291  * - Others
50292  *-------------------------------------------------------------------------------
50293   
50295   
50296  eqcost_en_nelcoal_c_jpnkor
50297  eqq_ncoalabat_monotone_c_jpnkor
50298  eqq_en_nelcoalccs_max_c_jpnkor
50299   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
50302  *-------------------------------------------------------------------------------
50303  * Wind energy module
50304  * - onshore and offshore
50305  *-------------------------------------------------------------------------------
50306   
50308   
50309  eqq_en_mu_windon_c_jpnkor
50310  eqq_en_mu_windoff_c_jpnkor
50311  eqk_en_windon_c_jpnkor
50312  eqk_en_windoff_c_jpnkor
50313  eqq_en_windon_sum_c_jpnkor
50314  eqq_en_windoff_sum_c_jpnkor
50315  eqk_en_windon_sum_c_jpnkor
50316  eqk_en_windoff_sum_c_jpnkor
50317  eqi_en_windon_sum_c_jpnkor
50318  eqi_en_windoff_sum_c_jpnkor
50319   
50321   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
50323  *-------------------------------------------------------------------------------
50324  * Solar Powerplants (PV and CSP) to the electrical system
50325  *-------------------------------------------------------------------------------
50326   
50327  *-------------------------------------------------------------------------------
50329   
50330  eqq_en_mu_pv_c_jpnkor
50331  eqq_en_mu_csp_c_jpnkor
50332  eqk_en_pv_c_jpnkor
50333  eqk_en_csp_c_jpnkor
50334  eqq_en_pv_sum_c_jpnkor
50335  eqq_en_csp_sum_c_jpnkor
50336  eqk_en_pv_sum_c_jpnkor
50337  eqk_en_csp_sum_c_jpnkor
50338  eqi_en_pv_sum_c_jpnkor
50339  eqi_en_csp_sum_c_jpnkor
50340  eqk_en_solar_comp_c_jpnkor
50341   
50342  *-------------------------------------------------------------------------------
50344   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
50346  *-------------------------------------------------------------------------------
50347  * Technology development scenarios
50348  *-------------------------------------------------------------------------------
50349   
50351   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
50353  *-------------------------------------------------------------------------------
50354  * Oil Extraction
50355  * Options:
50356  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
50357  *-------------------------------------------------------------------------------
50358   
50360   
50361  eqoilcap_c_jpnkor
50362  eqoilprod_c_jpnkor
50363  eqq_out_oil_c_jpnkor
50364  eqcum_oil_c_jpnkor
50365  eqcost_oil_c_jpnkor
50366  eqi_oil_c_jpnkor
50367  eqi_out_oil_c_jpnkor
50368  eqq_emi_out_oil_c_jpnkor
50369   
50370  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
50373  *-------------------------------------------------------------------------------
50374  * Uranium Resources
50375  *-------------------------------------------------------------------------------
50376   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
50379  *-------------------------------------------------------------------------------
50380  * Gas Resources
50381  *-------------------------------------------------------------------------------
50382   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
50385  *-------------------------------------------------------------------------------
50386  * Coal Resources
50387  *-------------------------------------------------------------------------------
50388   
50390   
50391   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
50393  *-------------------------------------------------------------------------------
50394  * Climate
50395  *
50396  * Represents the climate
50397  * - based on the DICE model equations
50398  * - Radiative forcing for non CO2 ghgs
50399  * - parameters calibrated to reproduce MAGICC6.4 default response
50400  *
50401  *  Options:
50402  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
50403  * - $setglobal cooperate_on_climate {'YES','NO'}
50404  * - 'YES'(default): Countries within a coalition act in cooperation
50405  *   'NO': Countries within a coalition act individually
50406  *
50407  *-------------------------------------------------------------------------------
50408   
50410   
50412   
50413  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
50416  *-------------------------------------------------------------------------------
50417  * Long-run Damages from Climate Change
50418  * - Economic impacts
50419  * - Adaptation
50420  *-------------------------------------------------------------------------------
50421   
50423   
50425   
50426  *-------------------------------------------------------------------------------
50428   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
50430  *-------------------------------------------------------------------------------
50431  * Light-duty Vehicles for Personal Transport
50432  *-------------------------------------------------------------------------------
50433   
50435   
50436  eqnb_veh_c_jpnkor
50437  eqq_en_veh_c_jpnkor
50438  eqq_el_edv_c_jpnkor
50439  eqmcost_inv_hybrid_c_jpnkor
50440  eqmcost_inv_plghybrid_c_jpnkor
50441  eqmcost_inv_edv_c_jpnkor
50442  *** newcode
50443  eqq_inv_red_ban_c_jpnkor
50444  ***
50445  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
50448  *-------------------------------------------------------------------------------
50449  * Road Freight Transport
50450  *-------------------------------------------------------------------------------
50452   
50453  eqnb_frtveh_c_jpnkor
50454  eqq_en_frtveh_c_jpnkor
50455  eqq_el_frtedv_c_jpnkor
50456  eqmcost_inv_hbd_stfr_c_jpnkor
50457  eqmcost_inv_plghbd_stfr_c_jpnkor
50458  eqmcost_inv_edv_stfr_c_jpnkor
50459   
50460  *-------------------------------------------------------------------------------
50462   
50463   
50464   
50465   
50466   
50467   
50468  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
50470  *-------------------------------------------------------------------------------
50471  * Traditional Biomass
50472  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
50473  *  - require post_process to be launch before
50474  *-------------------------------------------------------------------------------
50475   
50477   
50478  * Optional modules
50479   
50480  * Policy modules
50481   
50482  * Calibration
50485   
50490   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
50492  *-------------------------------------------------------------------------------
50493  * Call modules by order
50494  *-------------------------------------------------------------------------------
50498   
50499  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
50501  *-------------------------------------------------------------------------------
50502  * Algorithm
50503  *-------------------------------------------------------------------------------
50504   
50506   
50507  eqobj_c_laca
50508   
50509  *-------------------------------------------------------------------------------
50511   
50512  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
50514  *-------------------------------------------------------------------------------
50515  * Time
50516  * - Temporal structure
50517  * - Fixed time periods
50518  * - States of the world
50519  *-------------------------------------------------------------------------------
50520   
50522   
50523  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
50525  *-------------------------------------------------------------------------------
50526  * Geographic dimension and mapping with countries
50527  *-------------------------------------------------------------------------------
50528   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
50531  *-------------------------------------------------------------------------------
50532  * Non-Cooperative Setup
50533  *
50534  * Each region is defined as an individual coalition.
50535  *
50536  *-------------------------------------------------------------------------------
50537   
50539   
50540  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
50542  *-------------------------------------------------------------------------------
50543  * Welfare
50544  *-------------------------------------------------------------------------------
50545   
50547   
50548  equtility_c_laca
50549   
50550  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
50553  *-------------------------------------------------------------------------------
50554  * Economy
50555  * - Production and Consumption definition
50556  * - Top-level of the production function
50557  * Options:
50558  * --original_ssp=1 : original SSP population and GDP data
50559  *-------------------------------------------------------------------------------
50560   
50562   
50563  eqk_c_laca
50564  eqq_cc_c_laca
50565  eqq_fen_c_laca
50566  eqq_y_c_laca
50567   
50568  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
50571  *-------------------------------------------------------------------------------
50572  * Energy sector
50573  *-------------------------------------------------------------------------------
50574   
50576   
50577  eq_mkt_clearing_oil_c_laca
50578  eqcost_pes_c_laca
50579  eqcost_ses_c_laca
50580  eqk_en_c_laca
50581  eqq_ces_el_c_laca
50582  eqq_ces_nelgas_c_laca
50583  eqq_el2_c_laca
50584  eqq_el_c_laca
50585  eqq_elff_c_laca
50586  eqq_en_c_laca
50587  eqq_en_in_c_laca
50588  eqq_en_mu_c_laca
50589  eqq_en_tree_c_laca
50590  eqq_nel_c_laca
50591  eqq_nelog_c_laca
50592  eqq_fuel_c_laca
50593  eqq_elffren_c_laca
50594   
50595  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
50598  *-------------------------------------------------------------------------------
50599  * Carbon Emissions
50600  * - Total CO2 emissions and CO2 Fossil fuel and Industry
50601  * - CO2 emission costs
50602  * - GHG permit market
50603  *-------------------------------------------------------------------------------
50604   
50606   
50607  eqq_emi_lim_c_laca
50608  ***newcode
50609  eqq_emi_lim_USAc_laca
50610  ***
50611  eqq_emi_tree_c_laca
50612  eqq_emi_co2ffi_c_laca
50613   
50614  eqcost_emi_co2_c_laca
50615   
50616  eq_mkt_clearing_nip_c_laca
50617   
50618  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
50621  *-------------------------------------------------------------------------------
50622  * Research & Development
50623  * Options:
50624  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
50625  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
50626  *-------------------------------------------------------------------------------
50627   
50629   
50630  eqk_rd_c_laca
50631  eqspill_coop_c_laca
50632  eqspill_lead_c_laca
50633  eqspill_foll_c_laca
50634  eqmcost_inv_back_c_laca
50635  eqmcost_inv_back_lbd_c_laca
50636   
50637  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
50640  *-------------------------------------------------------------------------------
50641  * Default Climate Policy Implementation
50642  *
50643  * Options:
50644  *    --policy={bau (default),ctax}
50645  *        Implement a climate policy setting
50646  *  [ --scen= ]
50647  *        Policy variant.
50648  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
50649  *          * XXX for a fixed percentage/yr (e.g. 5) growth
50650  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
50651  *  [ --ctax_year=2020 ]
50652  *        Starting year of the carbon tax
50653  *  [ --ctax_initial=30 ]
50654  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
50655  *
50656  *-------------------------------------------------------------------------------
50658   
50659  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
50661  *-------------------------------------------------------------------------------
50662  * Energy efficiency
50663  *-------------------------------------------------------------------------------
50664   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
50667  *-------------------------------------------------------------------------------
50668  * Hydro Power
50669  *-------------------------------------------------------------------------------
50670   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
50673  *-------------------------------------------------------------------------------
50674  * System Integration:
50675  * - Capacity constraint
50676  * - Flexibility constraint
50677  * - Grid Investment
50678  * - Capacity growth constraint
50679  *-------------------------------------------------------------------------------
50680   
50682   
50683  eqq_elintren_c_laca
50684  eqflex_c_laca
50685  eqk_en_grid_c_laca
50686  eqk_en_grid_to_k_en_c_laca
50687  eqfirm_capacity_c_laca
50688  eqcap_growth_c_laca
50689   
50690  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
50693  *-------------------------------------------------------------------------------
50694  * Nuclear power plants
50695  *-------------------------------------------------------------------------------
50696   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
50699  *-------------------------------------------------------------------------------
50700  * GHG module
50701  * - CH4 FFI + CH4 waste + CH4 open fires
50702  * - N2O FFI + N2O waste + N2O open fires
50703  *-------------------------------------------------------------------------------
50704   
50706   
50707  eqq_emi_waste_c_laca
50708  eqq_emi_n2o_ffi_c_laca
50709  eqq_emi_ch4_ffi_c_laca
50710   
50711  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
50714  *-------------------------------------------------------------------------------
50715  * F-gases
50716  * - LLF
50717  * - SLF
50718  *-------------------------------------------------------------------------------
50719   
50721   
50722  eqq_emi_fgases_c_laca
50723   
50724  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
50727  *-------------------------------------------------------------------------------
50728  * Landuse [simplified version of the land-use model]
50729  *-------------------------------------------------------------------------------
50730   
50732   
50733  eq_wbio_c_laca
50734  eqcost_pes_wbio_c_laca
50735   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
50738  *-------------------------------------------------------------------------------
50739  * Bioenergy power plant
50740  *-------------------------------------------------------------------------------
50741   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
50744  *-------------------------------------------------------------------------------
50745  * Traditional Biofuels
50746  * - Requires the precedence of mod_landuse
50747  *-------------------------------------------------------------------------------
50748   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
50751  *-------------------------------------------------------------------------------
50752  * Advanced biofuel
50753  * - Require the precedence of mod_landuse
50754  *-------------------------------------------------------------------------------
50755   
50757   
50758  eqq_en_lim_advbiofuel_c_laca
50759  eqmcost_fuel_advbiofuel_c_laca
50760   
50761  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
50764  *-------------------------------------------------------------------------------
50765  * Carbon Capture and Sequestration
50766  *-------------------------------------------------------------------------------
50767   
50769   
50770  eqq_emi_ccs_c_laca
50771  eqcost_emi_sinks_c_laca
50772  eq_stor_ccs_cum_c_laca
50773  eq_emi_stor_ccs_c_laca
50774  eq_emi_leak_ccs_c_laca
50775   
50776  *-------------------------------------------------------------------------------
50778   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
50780  *-------------------------------------------------------------------------------
50781  * Coal for non-electric sectors
50782  * - Coke Plants
50783  * - Industrial and Commercial combined-heat-and-power (CHP)
50784  * - Others
50785  *-------------------------------------------------------------------------------
50786   
50788   
50789  eqcost_en_nelcoal_c_laca
50790  eqq_ncoalabat_monotone_c_laca
50791  eqq_en_nelcoalccs_max_c_laca
50792   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
50795  *-------------------------------------------------------------------------------
50796  * Wind energy module
50797  * - onshore and offshore
50798  *-------------------------------------------------------------------------------
50799   
50801   
50802  eqq_en_mu_windon_c_laca
50803  eqq_en_mu_windoff_c_laca
50804  eqk_en_windon_c_laca
50805  eqk_en_windoff_c_laca
50806  eqq_en_windon_sum_c_laca
50807  eqq_en_windoff_sum_c_laca
50808  eqk_en_windon_sum_c_laca
50809  eqk_en_windoff_sum_c_laca
50810  eqi_en_windon_sum_c_laca
50811  eqi_en_windoff_sum_c_laca
50812   
50814   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
50816  *-------------------------------------------------------------------------------
50817  * Solar Powerplants (PV and CSP) to the electrical system
50818  *-------------------------------------------------------------------------------
50819   
50820  *-------------------------------------------------------------------------------
50822   
50823  eqq_en_mu_pv_c_laca
50824  eqq_en_mu_csp_c_laca
50825  eqk_en_pv_c_laca
50826  eqk_en_csp_c_laca
50827  eqq_en_pv_sum_c_laca
50828  eqq_en_csp_sum_c_laca
50829  eqk_en_pv_sum_c_laca
50830  eqk_en_csp_sum_c_laca
50831  eqi_en_pv_sum_c_laca
50832  eqi_en_csp_sum_c_laca
50833  eqk_en_solar_comp_c_laca
50834   
50835  *-------------------------------------------------------------------------------
50837   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
50839  *-------------------------------------------------------------------------------
50840  * Technology development scenarios
50841  *-------------------------------------------------------------------------------
50842   
50844   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
50846  *-------------------------------------------------------------------------------
50847  * Oil Extraction
50848  * Options:
50849  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
50850  *-------------------------------------------------------------------------------
50851   
50853   
50854  eqoilcap_c_laca
50855  eqoilprod_c_laca
50856  eqq_out_oil_c_laca
50857  eqcum_oil_c_laca
50858  eqcost_oil_c_laca
50859  eqi_oil_c_laca
50860  eqi_out_oil_c_laca
50861  eqq_emi_out_oil_c_laca
50862   
50863  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
50866  *-------------------------------------------------------------------------------
50867  * Uranium Resources
50868  *-------------------------------------------------------------------------------
50869   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
50872  *-------------------------------------------------------------------------------
50873  * Gas Resources
50874  *-------------------------------------------------------------------------------
50875   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
50878  *-------------------------------------------------------------------------------
50879  * Coal Resources
50880  *-------------------------------------------------------------------------------
50881   
50883   
50884   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
50886  *-------------------------------------------------------------------------------
50887  * Climate
50888  *
50889  * Represents the climate
50890  * - based on the DICE model equations
50891  * - Radiative forcing for non CO2 ghgs
50892  * - parameters calibrated to reproduce MAGICC6.4 default response
50893  *
50894  *  Options:
50895  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
50896  * - $setglobal cooperate_on_climate {'YES','NO'}
50897  * - 'YES'(default): Countries within a coalition act in cooperation
50898  *   'NO': Countries within a coalition act individually
50899  *
50900  *-------------------------------------------------------------------------------
50901   
50903   
50905   
50906  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
50909  *-------------------------------------------------------------------------------
50910  * Long-run Damages from Climate Change
50911  * - Economic impacts
50912  * - Adaptation
50913  *-------------------------------------------------------------------------------
50914   
50916   
50918   
50919  *-------------------------------------------------------------------------------
50921   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
50923  *-------------------------------------------------------------------------------
50924  * Light-duty Vehicles for Personal Transport
50925  *-------------------------------------------------------------------------------
50926   
50928   
50929  eqnb_veh_c_laca
50930  eqq_en_veh_c_laca
50931  eqq_el_edv_c_laca
50932  eqmcost_inv_hybrid_c_laca
50933  eqmcost_inv_plghybrid_c_laca
50934  eqmcost_inv_edv_c_laca
50935  *** newcode
50936  eqq_inv_red_ban_c_laca
50937  ***
50938  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
50941  *-------------------------------------------------------------------------------
50942  * Road Freight Transport
50943  *-------------------------------------------------------------------------------
50945   
50946  eqnb_frtveh_c_laca
50947  eqq_en_frtveh_c_laca
50948  eqq_el_frtedv_c_laca
50949  eqmcost_inv_hbd_stfr_c_laca
50950  eqmcost_inv_plghbd_stfr_c_laca
50951  eqmcost_inv_edv_stfr_c_laca
50952   
50953  *-------------------------------------------------------------------------------
50955   
50956   
50957   
50958   
50959   
50960   
50961  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
50963  *-------------------------------------------------------------------------------
50964  * Traditional Biomass
50965  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
50966  *  - require post_process to be launch before
50967  *-------------------------------------------------------------------------------
50968   
50970   
50971  * Optional modules
50972   
50973  * Policy modules
50974   
50975  * Calibration
50978   
50983   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
50985  *-------------------------------------------------------------------------------
50986  * Call modules by order
50987  *-------------------------------------------------------------------------------
50991   
50992  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
50994  *-------------------------------------------------------------------------------
50995  * Algorithm
50996  *-------------------------------------------------------------------------------
50997   
50999   
51000  eqobj_c_mena
51001   
51002  *-------------------------------------------------------------------------------
51004   
51005  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
51007  *-------------------------------------------------------------------------------
51008  * Time
51009  * - Temporal structure
51010  * - Fixed time periods
51011  * - States of the world
51012  *-------------------------------------------------------------------------------
51013   
51015   
51016  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
51018  *-------------------------------------------------------------------------------
51019  * Geographic dimension and mapping with countries
51020  *-------------------------------------------------------------------------------
51021   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
51024  *-------------------------------------------------------------------------------
51025  * Non-Cooperative Setup
51026  *
51027  * Each region is defined as an individual coalition.
51028  *
51029  *-------------------------------------------------------------------------------
51030   
51032   
51033  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
51035  *-------------------------------------------------------------------------------
51036  * Welfare
51037  *-------------------------------------------------------------------------------
51038   
51040   
51041  equtility_c_mena
51042   
51043  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
51046  *-------------------------------------------------------------------------------
51047  * Economy
51048  * - Production and Consumption definition
51049  * - Top-level of the production function
51050  * Options:
51051  * --original_ssp=1 : original SSP population and GDP data
51052  *-------------------------------------------------------------------------------
51053   
51055   
51056  eqk_c_mena
51057  eqq_cc_c_mena
51058  eqq_fen_c_mena
51059  eqq_y_c_mena
51060   
51061  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
51064  *-------------------------------------------------------------------------------
51065  * Energy sector
51066  *-------------------------------------------------------------------------------
51067   
51069   
51070  eq_mkt_clearing_oil_c_mena
51071  eqcost_pes_c_mena
51072  eqcost_ses_c_mena
51073  eqk_en_c_mena
51074  eqq_ces_el_c_mena
51075  eqq_ces_nelgas_c_mena
51076  eqq_el2_c_mena
51077  eqq_el_c_mena
51078  eqq_elff_c_mena
51079  eqq_en_c_mena
51080  eqq_en_in_c_mena
51081  eqq_en_mu_c_mena
51082  eqq_en_tree_c_mena
51083  eqq_nel_c_mena
51084  eqq_nelog_c_mena
51085  eqq_fuel_c_mena
51086  eqq_elffren_c_mena
51087   
51088  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
51091  *-------------------------------------------------------------------------------
51092  * Carbon Emissions
51093  * - Total CO2 emissions and CO2 Fossil fuel and Industry
51094  * - CO2 emission costs
51095  * - GHG permit market
51096  *-------------------------------------------------------------------------------
51097   
51099   
51100  eqq_emi_lim_c_mena
51101  ***newcode
51102  eqq_emi_lim_USAc_mena
51103  ***
51104  eqq_emi_tree_c_mena
51105  eqq_emi_co2ffi_c_mena
51106   
51107  eqcost_emi_co2_c_mena
51108   
51109  eq_mkt_clearing_nip_c_mena
51110   
51111  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
51114  *-------------------------------------------------------------------------------
51115  * Research & Development
51116  * Options:
51117  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
51118  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
51119  *-------------------------------------------------------------------------------
51120   
51122   
51123  eqk_rd_c_mena
51124  eqspill_coop_c_mena
51125  eqspill_lead_c_mena
51126  eqspill_foll_c_mena
51127  eqmcost_inv_back_c_mena
51128  eqmcost_inv_back_lbd_c_mena
51129   
51130  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
51133  *-------------------------------------------------------------------------------
51134  * Default Climate Policy Implementation
51135  *
51136  * Options:
51137  *    --policy={bau (default),ctax}
51138  *        Implement a climate policy setting
51139  *  [ --scen= ]
51140  *        Policy variant.
51141  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
51142  *          * XXX for a fixed percentage/yr (e.g. 5) growth
51143  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
51144  *  [ --ctax_year=2020 ]
51145  *        Starting year of the carbon tax
51146  *  [ --ctax_initial=30 ]
51147  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
51148  *
51149  *-------------------------------------------------------------------------------
51151   
51152  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
51154  *-------------------------------------------------------------------------------
51155  * Energy efficiency
51156  *-------------------------------------------------------------------------------
51157   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
51160  *-------------------------------------------------------------------------------
51161  * Hydro Power
51162  *-------------------------------------------------------------------------------
51163   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
51166  *-------------------------------------------------------------------------------
51167  * System Integration:
51168  * - Capacity constraint
51169  * - Flexibility constraint
51170  * - Grid Investment
51171  * - Capacity growth constraint
51172  *-------------------------------------------------------------------------------
51173   
51175   
51176  eqq_elintren_c_mena
51177  eqflex_c_mena
51178  eqk_en_grid_c_mena
51179  eqk_en_grid_to_k_en_c_mena
51180  eqfirm_capacity_c_mena
51181  eqcap_growth_c_mena
51182   
51183  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
51186  *-------------------------------------------------------------------------------
51187  * Nuclear power plants
51188  *-------------------------------------------------------------------------------
51189   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
51192  *-------------------------------------------------------------------------------
51193  * GHG module
51194  * - CH4 FFI + CH4 waste + CH4 open fires
51195  * - N2O FFI + N2O waste + N2O open fires
51196  *-------------------------------------------------------------------------------
51197   
51199   
51200  eqq_emi_waste_c_mena
51201  eqq_emi_n2o_ffi_c_mena
51202  eqq_emi_ch4_ffi_c_mena
51203   
51204  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
51207  *-------------------------------------------------------------------------------
51208  * F-gases
51209  * - LLF
51210  * - SLF
51211  *-------------------------------------------------------------------------------
51212   
51214   
51215  eqq_emi_fgases_c_mena
51216   
51217  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
51220  *-------------------------------------------------------------------------------
51221  * Landuse [simplified version of the land-use model]
51222  *-------------------------------------------------------------------------------
51223   
51225   
51226  eq_wbio_c_mena
51227  eqcost_pes_wbio_c_mena
51228   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
51231  *-------------------------------------------------------------------------------
51232  * Bioenergy power plant
51233  *-------------------------------------------------------------------------------
51234   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
51237  *-------------------------------------------------------------------------------
51238  * Traditional Biofuels
51239  * - Requires the precedence of mod_landuse
51240  *-------------------------------------------------------------------------------
51241   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
51244  *-------------------------------------------------------------------------------
51245  * Advanced biofuel
51246  * - Require the precedence of mod_landuse
51247  *-------------------------------------------------------------------------------
51248   
51250   
51251  eqq_en_lim_advbiofuel_c_mena
51252  eqmcost_fuel_advbiofuel_c_mena
51253   
51254  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
51257  *-------------------------------------------------------------------------------
51258  * Carbon Capture and Sequestration
51259  *-------------------------------------------------------------------------------
51260   
51262   
51263  eqq_emi_ccs_c_mena
51264  eqcost_emi_sinks_c_mena
51265  eq_stor_ccs_cum_c_mena
51266  eq_emi_stor_ccs_c_mena
51267  eq_emi_leak_ccs_c_mena
51268   
51269  *-------------------------------------------------------------------------------
51271   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
51273  *-------------------------------------------------------------------------------
51274  * Coal for non-electric sectors
51275  * - Coke Plants
51276  * - Industrial and Commercial combined-heat-and-power (CHP)
51277  * - Others
51278  *-------------------------------------------------------------------------------
51279   
51281   
51282  eqcost_en_nelcoal_c_mena
51283  eqq_ncoalabat_monotone_c_mena
51284  eqq_en_nelcoalccs_max_c_mena
51285   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
51288  *-------------------------------------------------------------------------------
51289  * Wind energy module
51290  * - onshore and offshore
51291  *-------------------------------------------------------------------------------
51292   
51294   
51295  eqq_en_mu_windon_c_mena
51296  eqq_en_mu_windoff_c_mena
51297  eqk_en_windon_c_mena
51298  eqk_en_windoff_c_mena
51299  eqq_en_windon_sum_c_mena
51300  eqq_en_windoff_sum_c_mena
51301  eqk_en_windon_sum_c_mena
51302  eqk_en_windoff_sum_c_mena
51303  eqi_en_windon_sum_c_mena
51304  eqi_en_windoff_sum_c_mena
51305   
51307   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
51309  *-------------------------------------------------------------------------------
51310  * Solar Powerplants (PV and CSP) to the electrical system
51311  *-------------------------------------------------------------------------------
51312   
51313  *-------------------------------------------------------------------------------
51315   
51316  eqq_en_mu_pv_c_mena
51317  eqq_en_mu_csp_c_mena
51318  eqk_en_pv_c_mena
51319  eqk_en_csp_c_mena
51320  eqq_en_pv_sum_c_mena
51321  eqq_en_csp_sum_c_mena
51322  eqk_en_pv_sum_c_mena
51323  eqk_en_csp_sum_c_mena
51324  eqi_en_pv_sum_c_mena
51325  eqi_en_csp_sum_c_mena
51326  eqk_en_solar_comp_c_mena
51327   
51328  *-------------------------------------------------------------------------------
51330   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
51332  *-------------------------------------------------------------------------------
51333  * Technology development scenarios
51334  *-------------------------------------------------------------------------------
51335   
51337   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
51339  *-------------------------------------------------------------------------------
51340  * Oil Extraction
51341  * Options:
51342  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
51343  *-------------------------------------------------------------------------------
51344   
51346   
51347  eqoilcap_c_mena
51348  eqoilprod_c_mena
51349  eqq_out_oil_c_mena
51350  eqcum_oil_c_mena
51351  eqcost_oil_c_mena
51352  eqi_oil_c_mena
51353  eqi_out_oil_c_mena
51354  eqq_emi_out_oil_c_mena
51355   
51356  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
51359  *-------------------------------------------------------------------------------
51360  * Uranium Resources
51361  *-------------------------------------------------------------------------------
51362   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
51365  *-------------------------------------------------------------------------------
51366  * Gas Resources
51367  *-------------------------------------------------------------------------------
51368   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
51371  *-------------------------------------------------------------------------------
51372  * Coal Resources
51373  *-------------------------------------------------------------------------------
51374   
51376   
51377   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
51379  *-------------------------------------------------------------------------------
51380  * Climate
51381  *
51382  * Represents the climate
51383  * - based on the DICE model equations
51384  * - Radiative forcing for non CO2 ghgs
51385  * - parameters calibrated to reproduce MAGICC6.4 default response
51386  *
51387  *  Options:
51388  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
51389  * - $setglobal cooperate_on_climate {'YES','NO'}
51390  * - 'YES'(default): Countries within a coalition act in cooperation
51391  *   'NO': Countries within a coalition act individually
51392  *
51393  *-------------------------------------------------------------------------------
51394   
51396   
51398   
51399  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
51402  *-------------------------------------------------------------------------------
51403  * Long-run Damages from Climate Change
51404  * - Economic impacts
51405  * - Adaptation
51406  *-------------------------------------------------------------------------------
51407   
51409   
51411   
51412  *-------------------------------------------------------------------------------
51414   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
51416  *-------------------------------------------------------------------------------
51417  * Light-duty Vehicles for Personal Transport
51418  *-------------------------------------------------------------------------------
51419   
51421   
51422  eqnb_veh_c_mena
51423  eqq_en_veh_c_mena
51424  eqq_el_edv_c_mena
51425  eqmcost_inv_hybrid_c_mena
51426  eqmcost_inv_plghybrid_c_mena
51427  eqmcost_inv_edv_c_mena
51428  *** newcode
51429  eqq_inv_red_ban_c_mena
51430  ***
51431  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
51434  *-------------------------------------------------------------------------------
51435  * Road Freight Transport
51436  *-------------------------------------------------------------------------------
51438   
51439  eqnb_frtveh_c_mena
51440  eqq_en_frtveh_c_mena
51441  eqq_el_frtedv_c_mena
51442  eqmcost_inv_hbd_stfr_c_mena
51443  eqmcost_inv_plghbd_stfr_c_mena
51444  eqmcost_inv_edv_stfr_c_mena
51445   
51446  *-------------------------------------------------------------------------------
51448   
51449   
51450   
51451   
51452   
51453   
51454  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
51456  *-------------------------------------------------------------------------------
51457  * Traditional Biomass
51458  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
51459  *  - require post_process to be launch before
51460  *-------------------------------------------------------------------------------
51461   
51463   
51464  * Optional modules
51465   
51466  * Policy modules
51467   
51468  * Calibration
51471   
51476   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
51478  *-------------------------------------------------------------------------------
51479  * Call modules by order
51480  *-------------------------------------------------------------------------------
51484   
51485  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
51487  *-------------------------------------------------------------------------------
51488  * Algorithm
51489  *-------------------------------------------------------------------------------
51490   
51492   
51493  eqobj_c_mexico
51494   
51495  *-------------------------------------------------------------------------------
51497   
51498  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
51500  *-------------------------------------------------------------------------------
51501  * Time
51502  * - Temporal structure
51503  * - Fixed time periods
51504  * - States of the world
51505  *-------------------------------------------------------------------------------
51506   
51508   
51509  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
51511  *-------------------------------------------------------------------------------
51512  * Geographic dimension and mapping with countries
51513  *-------------------------------------------------------------------------------
51514   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
51517  *-------------------------------------------------------------------------------
51518  * Non-Cooperative Setup
51519  *
51520  * Each region is defined as an individual coalition.
51521  *
51522  *-------------------------------------------------------------------------------
51523   
51525   
51526  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
51528  *-------------------------------------------------------------------------------
51529  * Welfare
51530  *-------------------------------------------------------------------------------
51531   
51533   
51534  equtility_c_mexico
51535   
51536  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
51539  *-------------------------------------------------------------------------------
51540  * Economy
51541  * - Production and Consumption definition
51542  * - Top-level of the production function
51543  * Options:
51544  * --original_ssp=1 : original SSP population and GDP data
51545  *-------------------------------------------------------------------------------
51546   
51548   
51549  eqk_c_mexico
51550  eqq_cc_c_mexico
51551  eqq_fen_c_mexico
51552  eqq_y_c_mexico
51553   
51554  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
51557  *-------------------------------------------------------------------------------
51558  * Energy sector
51559  *-------------------------------------------------------------------------------
51560   
51562   
51563  eq_mkt_clearing_oil_c_mexico
51564  eqcost_pes_c_mexico
51565  eqcost_ses_c_mexico
51566  eqk_en_c_mexico
51567  eqq_ces_el_c_mexico
51568  eqq_ces_nelgas_c_mexico
51569  eqq_el2_c_mexico
51570  eqq_el_c_mexico
51571  eqq_elff_c_mexico
51572  eqq_en_c_mexico
51573  eqq_en_in_c_mexico
51574  eqq_en_mu_c_mexico
51575  eqq_en_tree_c_mexico
51576  eqq_nel_c_mexico
51577  eqq_nelog_c_mexico
51578  eqq_fuel_c_mexico
51579  eqq_elffren_c_mexico
51580   
51581  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
51584  *-------------------------------------------------------------------------------
51585  * Carbon Emissions
51586  * - Total CO2 emissions and CO2 Fossil fuel and Industry
51587  * - CO2 emission costs
51588  * - GHG permit market
51589  *-------------------------------------------------------------------------------
51590   
51592   
51593  eqq_emi_lim_c_mexico
51594  ***newcode
51595  eqq_emi_lim_USAc_mexico
51596  ***
51597  eqq_emi_tree_c_mexico
51598  eqq_emi_co2ffi_c_mexico
51599   
51600  eqcost_emi_co2_c_mexico
51601   
51602  eq_mkt_clearing_nip_c_mexico
51603   
51604  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
51607  *-------------------------------------------------------------------------------
51608  * Research & Development
51609  * Options:
51610  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
51611  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
51612  *-------------------------------------------------------------------------------
51613   
51615   
51616  eqk_rd_c_mexico
51617  eqspill_coop_c_mexico
51618  eqspill_lead_c_mexico
51619  eqspill_foll_c_mexico
51620  eqmcost_inv_back_c_mexico
51621  eqmcost_inv_back_lbd_c_mexico
51622   
51623  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
51626  *-------------------------------------------------------------------------------
51627  * Default Climate Policy Implementation
51628  *
51629  * Options:
51630  *    --policy={bau (default),ctax}
51631  *        Implement a climate policy setting
51632  *  [ --scen= ]
51633  *        Policy variant.
51634  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
51635  *          * XXX for a fixed percentage/yr (e.g. 5) growth
51636  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
51637  *  [ --ctax_year=2020 ]
51638  *        Starting year of the carbon tax
51639  *  [ --ctax_initial=30 ]
51640  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
51641  *
51642  *-------------------------------------------------------------------------------
51644   
51645  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
51647  *-------------------------------------------------------------------------------
51648  * Energy efficiency
51649  *-------------------------------------------------------------------------------
51650   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
51653  *-------------------------------------------------------------------------------
51654  * Hydro Power
51655  *-------------------------------------------------------------------------------
51656   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
51659  *-------------------------------------------------------------------------------
51660  * System Integration:
51661  * - Capacity constraint
51662  * - Flexibility constraint
51663  * - Grid Investment
51664  * - Capacity growth constraint
51665  *-------------------------------------------------------------------------------
51666   
51668   
51669  eqq_elintren_c_mexico
51670  eqflex_c_mexico
51671  eqk_en_grid_c_mexico
51672  eqk_en_grid_to_k_en_c_mexico
51673  eqfirm_capacity_c_mexico
51674  eqcap_growth_c_mexico
51675   
51676  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
51679  *-------------------------------------------------------------------------------
51680  * Nuclear power plants
51681  *-------------------------------------------------------------------------------
51682   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
51685  *-------------------------------------------------------------------------------
51686  * GHG module
51687  * - CH4 FFI + CH4 waste + CH4 open fires
51688  * - N2O FFI + N2O waste + N2O open fires
51689  *-------------------------------------------------------------------------------
51690   
51692   
51693  eqq_emi_waste_c_mexico
51694  eqq_emi_n2o_ffi_c_mexico
51695  eqq_emi_ch4_ffi_c_mexico
51696   
51697  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
51700  *-------------------------------------------------------------------------------
51701  * F-gases
51702  * - LLF
51703  * - SLF
51704  *-------------------------------------------------------------------------------
51705   
51707   
51708  eqq_emi_fgases_c_mexico
51709   
51710  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
51713  *-------------------------------------------------------------------------------
51714  * Landuse [simplified version of the land-use model]
51715  *-------------------------------------------------------------------------------
51716   
51718   
51719  eq_wbio_c_mexico
51720  eqcost_pes_wbio_c_mexico
51721   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
51724  *-------------------------------------------------------------------------------
51725  * Bioenergy power plant
51726  *-------------------------------------------------------------------------------
51727   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
51730  *-------------------------------------------------------------------------------
51731  * Traditional Biofuels
51732  * - Requires the precedence of mod_landuse
51733  *-------------------------------------------------------------------------------
51734   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
51737  *-------------------------------------------------------------------------------
51738  * Advanced biofuel
51739  * - Require the precedence of mod_landuse
51740  *-------------------------------------------------------------------------------
51741   
51743   
51744  eqq_en_lim_advbiofuel_c_mexico
51745  eqmcost_fuel_advbiofuel_c_mexico
51746   
51747  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
51750  *-------------------------------------------------------------------------------
51751  * Carbon Capture and Sequestration
51752  *-------------------------------------------------------------------------------
51753   
51755   
51756  eqq_emi_ccs_c_mexico
51757  eqcost_emi_sinks_c_mexico
51758  eq_stor_ccs_cum_c_mexico
51759  eq_emi_stor_ccs_c_mexico
51760  eq_emi_leak_ccs_c_mexico
51761   
51762  *-------------------------------------------------------------------------------
51764   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
51766  *-------------------------------------------------------------------------------
51767  * Coal for non-electric sectors
51768  * - Coke Plants
51769  * - Industrial and Commercial combined-heat-and-power (CHP)
51770  * - Others
51771  *-------------------------------------------------------------------------------
51772   
51774   
51775  eqcost_en_nelcoal_c_mexico
51776  eqq_ncoalabat_monotone_c_mexico
51777  eqq_en_nelcoalccs_max_c_mexico
51778   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
51781  *-------------------------------------------------------------------------------
51782  * Wind energy module
51783  * - onshore and offshore
51784  *-------------------------------------------------------------------------------
51785   
51787   
51788  eqq_en_mu_windon_c_mexico
51789  eqq_en_mu_windoff_c_mexico
51790  eqk_en_windon_c_mexico
51791  eqk_en_windoff_c_mexico
51792  eqq_en_windon_sum_c_mexico
51793  eqq_en_windoff_sum_c_mexico
51794  eqk_en_windon_sum_c_mexico
51795  eqk_en_windoff_sum_c_mexico
51796  eqi_en_windon_sum_c_mexico
51797  eqi_en_windoff_sum_c_mexico
51798   
51800   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
51802  *-------------------------------------------------------------------------------
51803  * Solar Powerplants (PV and CSP) to the electrical system
51804  *-------------------------------------------------------------------------------
51805   
51806  *-------------------------------------------------------------------------------
51808   
51809  eqq_en_mu_pv_c_mexico
51810  eqq_en_mu_csp_c_mexico
51811  eqk_en_pv_c_mexico
51812  eqk_en_csp_c_mexico
51813  eqq_en_pv_sum_c_mexico
51814  eqq_en_csp_sum_c_mexico
51815  eqk_en_pv_sum_c_mexico
51816  eqk_en_csp_sum_c_mexico
51817  eqi_en_pv_sum_c_mexico
51818  eqi_en_csp_sum_c_mexico
51819  eqk_en_solar_comp_c_mexico
51820   
51821  *-------------------------------------------------------------------------------
51823   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
51825  *-------------------------------------------------------------------------------
51826  * Technology development scenarios
51827  *-------------------------------------------------------------------------------
51828   
51830   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
51832  *-------------------------------------------------------------------------------
51833  * Oil Extraction
51834  * Options:
51835  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
51836  *-------------------------------------------------------------------------------
51837   
51839   
51840  eqoilcap_c_mexico
51841  eqoilprod_c_mexico
51842  eqq_out_oil_c_mexico
51843  eqcum_oil_c_mexico
51844  eqcost_oil_c_mexico
51845  eqi_oil_c_mexico
51846  eqi_out_oil_c_mexico
51847  eqq_emi_out_oil_c_mexico
51848   
51849  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
51852  *-------------------------------------------------------------------------------
51853  * Uranium Resources
51854  *-------------------------------------------------------------------------------
51855   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
51858  *-------------------------------------------------------------------------------
51859  * Gas Resources
51860  *-------------------------------------------------------------------------------
51861   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
51864  *-------------------------------------------------------------------------------
51865  * Coal Resources
51866  *-------------------------------------------------------------------------------
51867   
51869   
51870   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
51872  *-------------------------------------------------------------------------------
51873  * Climate
51874  *
51875  * Represents the climate
51876  * - based on the DICE model equations
51877  * - Radiative forcing for non CO2 ghgs
51878  * - parameters calibrated to reproduce MAGICC6.4 default response
51879  *
51880  *  Options:
51881  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
51882  * - $setglobal cooperate_on_climate {'YES','NO'}
51883  * - 'YES'(default): Countries within a coalition act in cooperation
51884  *   'NO': Countries within a coalition act individually
51885  *
51886  *-------------------------------------------------------------------------------
51887   
51889   
51891   
51892  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
51895  *-------------------------------------------------------------------------------
51896  * Long-run Damages from Climate Change
51897  * - Economic impacts
51898  * - Adaptation
51899  *-------------------------------------------------------------------------------
51900   
51902   
51904   
51905  *-------------------------------------------------------------------------------
51907   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
51909  *-------------------------------------------------------------------------------
51910  * Light-duty Vehicles for Personal Transport
51911  *-------------------------------------------------------------------------------
51912   
51914   
51915  eqnb_veh_c_mexico
51916  eqq_en_veh_c_mexico
51917  eqq_el_edv_c_mexico
51918  eqmcost_inv_hybrid_c_mexico
51919  eqmcost_inv_plghybrid_c_mexico
51920  eqmcost_inv_edv_c_mexico
51921  *** newcode
51922  eqq_inv_red_ban_c_mexico
51923  ***
51924  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
51927  *-------------------------------------------------------------------------------
51928  * Road Freight Transport
51929  *-------------------------------------------------------------------------------
51931   
51932  eqnb_frtveh_c_mexico
51933  eqq_en_frtveh_c_mexico
51934  eqq_el_frtedv_c_mexico
51935  eqmcost_inv_hbd_stfr_c_mexico
51936  eqmcost_inv_plghbd_stfr_c_mexico
51937  eqmcost_inv_edv_stfr_c_mexico
51938   
51939  *-------------------------------------------------------------------------------
51941   
51942   
51943   
51944   
51945   
51946   
51947  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
51949  *-------------------------------------------------------------------------------
51950  * Traditional Biomass
51951  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
51952  *  - require post_process to be launch before
51953  *-------------------------------------------------------------------------------
51954   
51956   
51957  * Optional modules
51958   
51959  * Policy modules
51960   
51961  * Calibration
51964   
51969   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
51971  *-------------------------------------------------------------------------------
51972  * Call modules by order
51973  *-------------------------------------------------------------------------------
51977   
51978  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
51980  *-------------------------------------------------------------------------------
51981  * Algorithm
51982  *-------------------------------------------------------------------------------
51983   
51985   
51986  eqobj_c_oceania
51987   
51988  *-------------------------------------------------------------------------------
51990   
51991  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
51993  *-------------------------------------------------------------------------------
51994  * Time
51995  * - Temporal structure
51996  * - Fixed time periods
51997  * - States of the world
51998  *-------------------------------------------------------------------------------
51999   
52001   
52002  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
52004  *-------------------------------------------------------------------------------
52005  * Geographic dimension and mapping with countries
52006  *-------------------------------------------------------------------------------
52007   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
52010  *-------------------------------------------------------------------------------
52011  * Non-Cooperative Setup
52012  *
52013  * Each region is defined as an individual coalition.
52014  *
52015  *-------------------------------------------------------------------------------
52016   
52018   
52019  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
52021  *-------------------------------------------------------------------------------
52022  * Welfare
52023  *-------------------------------------------------------------------------------
52024   
52026   
52027  equtility_c_oceania
52028   
52029  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
52032  *-------------------------------------------------------------------------------
52033  * Economy
52034  * - Production and Consumption definition
52035  * - Top-level of the production function
52036  * Options:
52037  * --original_ssp=1 : original SSP population and GDP data
52038  *-------------------------------------------------------------------------------
52039   
52041   
52042  eqk_c_oceania
52043  eqq_cc_c_oceania
52044  eqq_fen_c_oceania
52045  eqq_y_c_oceania
52046   
52047  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
52050  *-------------------------------------------------------------------------------
52051  * Energy sector
52052  *-------------------------------------------------------------------------------
52053   
52055   
52056  eq_mkt_clearing_oil_c_oceania
52057  eqcost_pes_c_oceania
52058  eqcost_ses_c_oceania
52059  eqk_en_c_oceania
52060  eqq_ces_el_c_oceania
52061  eqq_ces_nelgas_c_oceania
52062  eqq_el2_c_oceania
52063  eqq_el_c_oceania
52064  eqq_elff_c_oceania
52065  eqq_en_c_oceania
52066  eqq_en_in_c_oceania
52067  eqq_en_mu_c_oceania
52068  eqq_en_tree_c_oceania
52069  eqq_nel_c_oceania
52070  eqq_nelog_c_oceania
52071  eqq_fuel_c_oceania
52072  eqq_elffren_c_oceania
52073   
52074  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
52077  *-------------------------------------------------------------------------------
52078  * Carbon Emissions
52079  * - Total CO2 emissions and CO2 Fossil fuel and Industry
52080  * - CO2 emission costs
52081  * - GHG permit market
52082  *-------------------------------------------------------------------------------
52083   
52085   
52086  eqq_emi_lim_c_oceania
52087  ***newcode
52088  eqq_emi_lim_USAc_oceania
52089  ***
52090  eqq_emi_tree_c_oceania
52091  eqq_emi_co2ffi_c_oceania
52092   
52093  eqcost_emi_co2_c_oceania
52094   
52095  eq_mkt_clearing_nip_c_oceania
52096   
52097  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
52100  *-------------------------------------------------------------------------------
52101  * Research & Development
52102  * Options:
52103  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
52104  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
52105  *-------------------------------------------------------------------------------
52106   
52108   
52109  eqk_rd_c_oceania
52110  eqspill_coop_c_oceania
52111  eqspill_lead_c_oceania
52112  eqspill_foll_c_oceania
52113  eqmcost_inv_back_c_oceania
52114  eqmcost_inv_back_lbd_c_oceania
52115   
52116  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
52119  *-------------------------------------------------------------------------------
52120  * Default Climate Policy Implementation
52121  *
52122  * Options:
52123  *    --policy={bau (default),ctax}
52124  *        Implement a climate policy setting
52125  *  [ --scen= ]
52126  *        Policy variant.
52127  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
52128  *          * XXX for a fixed percentage/yr (e.g. 5) growth
52129  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
52130  *  [ --ctax_year=2020 ]
52131  *        Starting year of the carbon tax
52132  *  [ --ctax_initial=30 ]
52133  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
52134  *
52135  *-------------------------------------------------------------------------------
52137   
52138  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
52140  *-------------------------------------------------------------------------------
52141  * Energy efficiency
52142  *-------------------------------------------------------------------------------
52143   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
52146  *-------------------------------------------------------------------------------
52147  * Hydro Power
52148  *-------------------------------------------------------------------------------
52149   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
52152  *-------------------------------------------------------------------------------
52153  * System Integration:
52154  * - Capacity constraint
52155  * - Flexibility constraint
52156  * - Grid Investment
52157  * - Capacity growth constraint
52158  *-------------------------------------------------------------------------------
52159   
52161   
52162  eqq_elintren_c_oceania
52163  eqflex_c_oceania
52164  eqk_en_grid_c_oceania
52165  eqk_en_grid_to_k_en_c_oceania
52166  eqfirm_capacity_c_oceania
52167  eqcap_growth_c_oceania
52168   
52169  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
52172  *-------------------------------------------------------------------------------
52173  * Nuclear power plants
52174  *-------------------------------------------------------------------------------
52175   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
52178  *-------------------------------------------------------------------------------
52179  * GHG module
52180  * - CH4 FFI + CH4 waste + CH4 open fires
52181  * - N2O FFI + N2O waste + N2O open fires
52182  *-------------------------------------------------------------------------------
52183   
52185   
52186  eqq_emi_waste_c_oceania
52187  eqq_emi_n2o_ffi_c_oceania
52188  eqq_emi_ch4_ffi_c_oceania
52189   
52190  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
52193  *-------------------------------------------------------------------------------
52194  * F-gases
52195  * - LLF
52196  * - SLF
52197  *-------------------------------------------------------------------------------
52198   
52200   
52201  eqq_emi_fgases_c_oceania
52202   
52203  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
52206  *-------------------------------------------------------------------------------
52207  * Landuse [simplified version of the land-use model]
52208  *-------------------------------------------------------------------------------
52209   
52211   
52212  eq_wbio_c_oceania
52213  eqcost_pes_wbio_c_oceania
52214   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
52217  *-------------------------------------------------------------------------------
52218  * Bioenergy power plant
52219  *-------------------------------------------------------------------------------
52220   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
52223  *-------------------------------------------------------------------------------
52224  * Traditional Biofuels
52225  * - Requires the precedence of mod_landuse
52226  *-------------------------------------------------------------------------------
52227   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
52230  *-------------------------------------------------------------------------------
52231  * Advanced biofuel
52232  * - Require the precedence of mod_landuse
52233  *-------------------------------------------------------------------------------
52234   
52236   
52237  eqq_en_lim_advbiofuel_c_oceania
52238  eqmcost_fuel_advbiofuel_c_oceania
52239   
52240  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
52243  *-------------------------------------------------------------------------------
52244  * Carbon Capture and Sequestration
52245  *-------------------------------------------------------------------------------
52246   
52248   
52249  eqq_emi_ccs_c_oceania
52250  eqcost_emi_sinks_c_oceania
52251  eq_stor_ccs_cum_c_oceania
52252  eq_emi_stor_ccs_c_oceania
52253  eq_emi_leak_ccs_c_oceania
52254   
52255  *-------------------------------------------------------------------------------
52257   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
52259  *-------------------------------------------------------------------------------
52260  * Coal for non-electric sectors
52261  * - Coke Plants
52262  * - Industrial and Commercial combined-heat-and-power (CHP)
52263  * - Others
52264  *-------------------------------------------------------------------------------
52265   
52267   
52268  eqcost_en_nelcoal_c_oceania
52269  eqq_ncoalabat_monotone_c_oceania
52270  eqq_en_nelcoalccs_max_c_oceania
52271   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
52274  *-------------------------------------------------------------------------------
52275  * Wind energy module
52276  * - onshore and offshore
52277  *-------------------------------------------------------------------------------
52278   
52280   
52281  eqq_en_mu_windon_c_oceania
52282  eqq_en_mu_windoff_c_oceania
52283  eqk_en_windon_c_oceania
52284  eqk_en_windoff_c_oceania
52285  eqq_en_windon_sum_c_oceania
52286  eqq_en_windoff_sum_c_oceania
52287  eqk_en_windon_sum_c_oceania
52288  eqk_en_windoff_sum_c_oceania
52289  eqi_en_windon_sum_c_oceania
52290  eqi_en_windoff_sum_c_oceania
52291   
52293   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
52295  *-------------------------------------------------------------------------------
52296  * Solar Powerplants (PV and CSP) to the electrical system
52297  *-------------------------------------------------------------------------------
52298   
52299  *-------------------------------------------------------------------------------
52301   
52302  eqq_en_mu_pv_c_oceania
52303  eqq_en_mu_csp_c_oceania
52304  eqk_en_pv_c_oceania
52305  eqk_en_csp_c_oceania
52306  eqq_en_pv_sum_c_oceania
52307  eqq_en_csp_sum_c_oceania
52308  eqk_en_pv_sum_c_oceania
52309  eqk_en_csp_sum_c_oceania
52310  eqi_en_pv_sum_c_oceania
52311  eqi_en_csp_sum_c_oceania
52312  eqk_en_solar_comp_c_oceania
52313   
52314  *-------------------------------------------------------------------------------
52316   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
52318  *-------------------------------------------------------------------------------
52319  * Technology development scenarios
52320  *-------------------------------------------------------------------------------
52321   
52323   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
52325  *-------------------------------------------------------------------------------
52326  * Oil Extraction
52327  * Options:
52328  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
52329  *-------------------------------------------------------------------------------
52330   
52332   
52333  eqoilcap_c_oceania
52334  eqoilprod_c_oceania
52335  eqq_out_oil_c_oceania
52336  eqcum_oil_c_oceania
52337  eqcost_oil_c_oceania
52338  eqi_oil_c_oceania
52339  eqi_out_oil_c_oceania
52340  eqq_emi_out_oil_c_oceania
52341   
52342  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
52345  *-------------------------------------------------------------------------------
52346  * Uranium Resources
52347  *-------------------------------------------------------------------------------
52348   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
52351  *-------------------------------------------------------------------------------
52352  * Gas Resources
52353  *-------------------------------------------------------------------------------
52354   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
52357  *-------------------------------------------------------------------------------
52358  * Coal Resources
52359  *-------------------------------------------------------------------------------
52360   
52362   
52363   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
52365  *-------------------------------------------------------------------------------
52366  * Climate
52367  *
52368  * Represents the climate
52369  * - based on the DICE model equations
52370  * - Radiative forcing for non CO2 ghgs
52371  * - parameters calibrated to reproduce MAGICC6.4 default response
52372  *
52373  *  Options:
52374  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
52375  * - $setglobal cooperate_on_climate {'YES','NO'}
52376  * - 'YES'(default): Countries within a coalition act in cooperation
52377  *   'NO': Countries within a coalition act individually
52378  *
52379  *-------------------------------------------------------------------------------
52380   
52382   
52384   
52385  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
52388  *-------------------------------------------------------------------------------
52389  * Long-run Damages from Climate Change
52390  * - Economic impacts
52391  * - Adaptation
52392  *-------------------------------------------------------------------------------
52393   
52395   
52397   
52398  *-------------------------------------------------------------------------------
52400   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
52402  *-------------------------------------------------------------------------------
52403  * Light-duty Vehicles for Personal Transport
52404  *-------------------------------------------------------------------------------
52405   
52407   
52408  eqnb_veh_c_oceania
52409  eqq_en_veh_c_oceania
52410  eqq_el_edv_c_oceania
52411  eqmcost_inv_hybrid_c_oceania
52412  eqmcost_inv_plghybrid_c_oceania
52413  eqmcost_inv_edv_c_oceania
52414  *** newcode
52415  eqq_inv_red_ban_c_oceania
52416  ***
52417  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
52420  *-------------------------------------------------------------------------------
52421  * Road Freight Transport
52422  *-------------------------------------------------------------------------------
52424   
52425  eqnb_frtveh_c_oceania
52426  eqq_en_frtveh_c_oceania
52427  eqq_el_frtedv_c_oceania
52428  eqmcost_inv_hbd_stfr_c_oceania
52429  eqmcost_inv_plghbd_stfr_c_oceania
52430  eqmcost_inv_edv_stfr_c_oceania
52431   
52432  *-------------------------------------------------------------------------------
52434   
52435   
52436   
52437   
52438   
52439   
52440  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
52442  *-------------------------------------------------------------------------------
52443  * Traditional Biomass
52444  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
52445  *  - require post_process to be launch before
52446  *-------------------------------------------------------------------------------
52447   
52449   
52450  * Optional modules
52451   
52452  * Policy modules
52453   
52454  * Calibration
52457   
52462   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
52464  *-------------------------------------------------------------------------------
52465  * Call modules by order
52466  *-------------------------------------------------------------------------------
52470   
52471  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
52473  *-------------------------------------------------------------------------------
52474  * Algorithm
52475  *-------------------------------------------------------------------------------
52476   
52478   
52479  eqobj_c_sasia
52480   
52481  *-------------------------------------------------------------------------------
52483   
52484  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
52486  *-------------------------------------------------------------------------------
52487  * Time
52488  * - Temporal structure
52489  * - Fixed time periods
52490  * - States of the world
52491  *-------------------------------------------------------------------------------
52492   
52494   
52495  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
52497  *-------------------------------------------------------------------------------
52498  * Geographic dimension and mapping with countries
52499  *-------------------------------------------------------------------------------
52500   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
52503  *-------------------------------------------------------------------------------
52504  * Non-Cooperative Setup
52505  *
52506  * Each region is defined as an individual coalition.
52507  *
52508  *-------------------------------------------------------------------------------
52509   
52511   
52512  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
52514  *-------------------------------------------------------------------------------
52515  * Welfare
52516  *-------------------------------------------------------------------------------
52517   
52519   
52520  equtility_c_sasia
52521   
52522  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
52525  *-------------------------------------------------------------------------------
52526  * Economy
52527  * - Production and Consumption definition
52528  * - Top-level of the production function
52529  * Options:
52530  * --original_ssp=1 : original SSP population and GDP data
52531  *-------------------------------------------------------------------------------
52532   
52534   
52535  eqk_c_sasia
52536  eqq_cc_c_sasia
52537  eqq_fen_c_sasia
52538  eqq_y_c_sasia
52539   
52540  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
52543  *-------------------------------------------------------------------------------
52544  * Energy sector
52545  *-------------------------------------------------------------------------------
52546   
52548   
52549  eq_mkt_clearing_oil_c_sasia
52550  eqcost_pes_c_sasia
52551  eqcost_ses_c_sasia
52552  eqk_en_c_sasia
52553  eqq_ces_el_c_sasia
52554  eqq_ces_nelgas_c_sasia
52555  eqq_el2_c_sasia
52556  eqq_el_c_sasia
52557  eqq_elff_c_sasia
52558  eqq_en_c_sasia
52559  eqq_en_in_c_sasia
52560  eqq_en_mu_c_sasia
52561  eqq_en_tree_c_sasia
52562  eqq_nel_c_sasia
52563  eqq_nelog_c_sasia
52564  eqq_fuel_c_sasia
52565  eqq_elffren_c_sasia
52566   
52567  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
52570  *-------------------------------------------------------------------------------
52571  * Carbon Emissions
52572  * - Total CO2 emissions and CO2 Fossil fuel and Industry
52573  * - CO2 emission costs
52574  * - GHG permit market
52575  *-------------------------------------------------------------------------------
52576   
52578   
52579  eqq_emi_lim_c_sasia
52580  ***newcode
52581  eqq_emi_lim_USAc_sasia
52582  ***
52583  eqq_emi_tree_c_sasia
52584  eqq_emi_co2ffi_c_sasia
52585   
52586  eqcost_emi_co2_c_sasia
52587   
52588  eq_mkt_clearing_nip_c_sasia
52589   
52590  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
52593  *-------------------------------------------------------------------------------
52594  * Research & Development
52595  * Options:
52596  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
52597  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
52598  *-------------------------------------------------------------------------------
52599   
52601   
52602  eqk_rd_c_sasia
52603  eqspill_coop_c_sasia
52604  eqspill_lead_c_sasia
52605  eqspill_foll_c_sasia
52606  eqmcost_inv_back_c_sasia
52607  eqmcost_inv_back_lbd_c_sasia
52608   
52609  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
52612  *-------------------------------------------------------------------------------
52613  * Default Climate Policy Implementation
52614  *
52615  * Options:
52616  *    --policy={bau (default),ctax}
52617  *        Implement a climate policy setting
52618  *  [ --scen= ]
52619  *        Policy variant.
52620  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
52621  *          * XXX for a fixed percentage/yr (e.g. 5) growth
52622  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
52623  *  [ --ctax_year=2020 ]
52624  *        Starting year of the carbon tax
52625  *  [ --ctax_initial=30 ]
52626  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
52627  *
52628  *-------------------------------------------------------------------------------
52630   
52631  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
52633  *-------------------------------------------------------------------------------
52634  * Energy efficiency
52635  *-------------------------------------------------------------------------------
52636   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
52639  *-------------------------------------------------------------------------------
52640  * Hydro Power
52641  *-------------------------------------------------------------------------------
52642   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
52645  *-------------------------------------------------------------------------------
52646  * System Integration:
52647  * - Capacity constraint
52648  * - Flexibility constraint
52649  * - Grid Investment
52650  * - Capacity growth constraint
52651  *-------------------------------------------------------------------------------
52652   
52654   
52655  eqq_elintren_c_sasia
52656  eqflex_c_sasia
52657  eqk_en_grid_c_sasia
52658  eqk_en_grid_to_k_en_c_sasia
52659  eqfirm_capacity_c_sasia
52660  eqcap_growth_c_sasia
52661   
52662  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
52665  *-------------------------------------------------------------------------------
52666  * Nuclear power plants
52667  *-------------------------------------------------------------------------------
52668   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
52671  *-------------------------------------------------------------------------------
52672  * GHG module
52673  * - CH4 FFI + CH4 waste + CH4 open fires
52674  * - N2O FFI + N2O waste + N2O open fires
52675  *-------------------------------------------------------------------------------
52676   
52678   
52679  eqq_emi_waste_c_sasia
52680  eqq_emi_n2o_ffi_c_sasia
52681  eqq_emi_ch4_ffi_c_sasia
52682   
52683  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
52686  *-------------------------------------------------------------------------------
52687  * F-gases
52688  * - LLF
52689  * - SLF
52690  *-------------------------------------------------------------------------------
52691   
52693   
52694  eqq_emi_fgases_c_sasia
52695   
52696  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
52699  *-------------------------------------------------------------------------------
52700  * Landuse [simplified version of the land-use model]
52701  *-------------------------------------------------------------------------------
52702   
52704   
52705  eq_wbio_c_sasia
52706  eqcost_pes_wbio_c_sasia
52707   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
52710  *-------------------------------------------------------------------------------
52711  * Bioenergy power plant
52712  *-------------------------------------------------------------------------------
52713   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
52716  *-------------------------------------------------------------------------------
52717  * Traditional Biofuels
52718  * - Requires the precedence of mod_landuse
52719  *-------------------------------------------------------------------------------
52720   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
52723  *-------------------------------------------------------------------------------
52724  * Advanced biofuel
52725  * - Require the precedence of mod_landuse
52726  *-------------------------------------------------------------------------------
52727   
52729   
52730  eqq_en_lim_advbiofuel_c_sasia
52731  eqmcost_fuel_advbiofuel_c_sasia
52732   
52733  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
52736  *-------------------------------------------------------------------------------
52737  * Carbon Capture and Sequestration
52738  *-------------------------------------------------------------------------------
52739   
52741   
52742  eqq_emi_ccs_c_sasia
52743  eqcost_emi_sinks_c_sasia
52744  eq_stor_ccs_cum_c_sasia
52745  eq_emi_stor_ccs_c_sasia
52746  eq_emi_leak_ccs_c_sasia
52747   
52748  *-------------------------------------------------------------------------------
52750   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
52752  *-------------------------------------------------------------------------------
52753  * Coal for non-electric sectors
52754  * - Coke Plants
52755  * - Industrial and Commercial combined-heat-and-power (CHP)
52756  * - Others
52757  *-------------------------------------------------------------------------------
52758   
52760   
52761  eqcost_en_nelcoal_c_sasia
52762  eqq_ncoalabat_monotone_c_sasia
52763  eqq_en_nelcoalccs_max_c_sasia
52764   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
52767  *-------------------------------------------------------------------------------
52768  * Wind energy module
52769  * - onshore and offshore
52770  *-------------------------------------------------------------------------------
52771   
52773   
52774  eqq_en_mu_windon_c_sasia
52775  eqq_en_mu_windoff_c_sasia
52776  eqk_en_windon_c_sasia
52777  eqk_en_windoff_c_sasia
52778  eqq_en_windon_sum_c_sasia
52779  eqq_en_windoff_sum_c_sasia
52780  eqk_en_windon_sum_c_sasia
52781  eqk_en_windoff_sum_c_sasia
52782  eqi_en_windon_sum_c_sasia
52783  eqi_en_windoff_sum_c_sasia
52784   
52786   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
52788  *-------------------------------------------------------------------------------
52789  * Solar Powerplants (PV and CSP) to the electrical system
52790  *-------------------------------------------------------------------------------
52791   
52792  *-------------------------------------------------------------------------------
52794   
52795  eqq_en_mu_pv_c_sasia
52796  eqq_en_mu_csp_c_sasia
52797  eqk_en_pv_c_sasia
52798  eqk_en_csp_c_sasia
52799  eqq_en_pv_sum_c_sasia
52800  eqq_en_csp_sum_c_sasia
52801  eqk_en_pv_sum_c_sasia
52802  eqk_en_csp_sum_c_sasia
52803  eqi_en_pv_sum_c_sasia
52804  eqi_en_csp_sum_c_sasia
52805  eqk_en_solar_comp_c_sasia
52806   
52807  *-------------------------------------------------------------------------------
52809   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
52811  *-------------------------------------------------------------------------------
52812  * Technology development scenarios
52813  *-------------------------------------------------------------------------------
52814   
52816   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
52818  *-------------------------------------------------------------------------------
52819  * Oil Extraction
52820  * Options:
52821  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
52822  *-------------------------------------------------------------------------------
52823   
52825   
52826  eqoilcap_c_sasia
52827  eqoilprod_c_sasia
52828  eqq_out_oil_c_sasia
52829  eqcum_oil_c_sasia
52830  eqcost_oil_c_sasia
52831  eqi_oil_c_sasia
52832  eqi_out_oil_c_sasia
52833  eqq_emi_out_oil_c_sasia
52834   
52835  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
52838  *-------------------------------------------------------------------------------
52839  * Uranium Resources
52840  *-------------------------------------------------------------------------------
52841   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
52844  *-------------------------------------------------------------------------------
52845  * Gas Resources
52846  *-------------------------------------------------------------------------------
52847   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
52850  *-------------------------------------------------------------------------------
52851  * Coal Resources
52852  *-------------------------------------------------------------------------------
52853   
52855   
52856   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
52858  *-------------------------------------------------------------------------------
52859  * Climate
52860  *
52861  * Represents the climate
52862  * - based on the DICE model equations
52863  * - Radiative forcing for non CO2 ghgs
52864  * - parameters calibrated to reproduce MAGICC6.4 default response
52865  *
52866  *  Options:
52867  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
52868  * - $setglobal cooperate_on_climate {'YES','NO'}
52869  * - 'YES'(default): Countries within a coalition act in cooperation
52870  *   'NO': Countries within a coalition act individually
52871  *
52872  *-------------------------------------------------------------------------------
52873   
52875   
52877   
52878  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
52881  *-------------------------------------------------------------------------------
52882  * Long-run Damages from Climate Change
52883  * - Economic impacts
52884  * - Adaptation
52885  *-------------------------------------------------------------------------------
52886   
52888   
52890   
52891  *-------------------------------------------------------------------------------
52893   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
52895  *-------------------------------------------------------------------------------
52896  * Light-duty Vehicles for Personal Transport
52897  *-------------------------------------------------------------------------------
52898   
52900   
52901  eqnb_veh_c_sasia
52902  eqq_en_veh_c_sasia
52903  eqq_el_edv_c_sasia
52904  eqmcost_inv_hybrid_c_sasia
52905  eqmcost_inv_plghybrid_c_sasia
52906  eqmcost_inv_edv_c_sasia
52907  *** newcode
52908  eqq_inv_red_ban_c_sasia
52909  ***
52910  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
52913  *-------------------------------------------------------------------------------
52914  * Road Freight Transport
52915  *-------------------------------------------------------------------------------
52917   
52918  eqnb_frtveh_c_sasia
52919  eqq_en_frtveh_c_sasia
52920  eqq_el_frtedv_c_sasia
52921  eqmcost_inv_hbd_stfr_c_sasia
52922  eqmcost_inv_plghbd_stfr_c_sasia
52923  eqmcost_inv_edv_stfr_c_sasia
52924   
52925  *-------------------------------------------------------------------------------
52927   
52928   
52929   
52930   
52931   
52932   
52933  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
52935  *-------------------------------------------------------------------------------
52936  * Traditional Biomass
52937  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
52938  *  - require post_process to be launch before
52939  *-------------------------------------------------------------------------------
52940   
52942   
52943  * Optional modules
52944   
52945  * Policy modules
52946   
52947  * Calibration
52950   
52955   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
52957  *-------------------------------------------------------------------------------
52958  * Call modules by order
52959  *-------------------------------------------------------------------------------
52963   
52964  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
52966  *-------------------------------------------------------------------------------
52967  * Algorithm
52968  *-------------------------------------------------------------------------------
52969   
52971   
52972  eqobj_c_seasia
52973   
52974  *-------------------------------------------------------------------------------
52976   
52977  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
52979  *-------------------------------------------------------------------------------
52980  * Time
52981  * - Temporal structure
52982  * - Fixed time periods
52983  * - States of the world
52984  *-------------------------------------------------------------------------------
52985   
52987   
52988  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
52990  *-------------------------------------------------------------------------------
52991  * Geographic dimension and mapping with countries
52992  *-------------------------------------------------------------------------------
52993   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
52996  *-------------------------------------------------------------------------------
52997  * Non-Cooperative Setup
52998  *
52999  * Each region is defined as an individual coalition.
53000  *
53001  *-------------------------------------------------------------------------------
53002   
53004   
53005  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
53007  *-------------------------------------------------------------------------------
53008  * Welfare
53009  *-------------------------------------------------------------------------------
53010   
53012   
53013  equtility_c_seasia
53014   
53015  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
53018  *-------------------------------------------------------------------------------
53019  * Economy
53020  * - Production and Consumption definition
53021  * - Top-level of the production function
53022  * Options:
53023  * --original_ssp=1 : original SSP population and GDP data
53024  *-------------------------------------------------------------------------------
53025   
53027   
53028  eqk_c_seasia
53029  eqq_cc_c_seasia
53030  eqq_fen_c_seasia
53031  eqq_y_c_seasia
53032   
53033  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
53036  *-------------------------------------------------------------------------------
53037  * Energy sector
53038  *-------------------------------------------------------------------------------
53039   
53041   
53042  eq_mkt_clearing_oil_c_seasia
53043  eqcost_pes_c_seasia
53044  eqcost_ses_c_seasia
53045  eqk_en_c_seasia
53046  eqq_ces_el_c_seasia
53047  eqq_ces_nelgas_c_seasia
53048  eqq_el2_c_seasia
53049  eqq_el_c_seasia
53050  eqq_elff_c_seasia
53051  eqq_en_c_seasia
53052  eqq_en_in_c_seasia
53053  eqq_en_mu_c_seasia
53054  eqq_en_tree_c_seasia
53055  eqq_nel_c_seasia
53056  eqq_nelog_c_seasia
53057  eqq_fuel_c_seasia
53058  eqq_elffren_c_seasia
53059   
53060  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
53063  *-------------------------------------------------------------------------------
53064  * Carbon Emissions
53065  * - Total CO2 emissions and CO2 Fossil fuel and Industry
53066  * - CO2 emission costs
53067  * - GHG permit market
53068  *-------------------------------------------------------------------------------
53069   
53071   
53072  eqq_emi_lim_c_seasia
53073  ***newcode
53074  eqq_emi_lim_USAc_seasia
53075  ***
53076  eqq_emi_tree_c_seasia
53077  eqq_emi_co2ffi_c_seasia
53078   
53079  eqcost_emi_co2_c_seasia
53080   
53081  eq_mkt_clearing_nip_c_seasia
53082   
53083  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
53086  *-------------------------------------------------------------------------------
53087  * Research & Development
53088  * Options:
53089  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
53090  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
53091  *-------------------------------------------------------------------------------
53092   
53094   
53095  eqk_rd_c_seasia
53096  eqspill_coop_c_seasia
53097  eqspill_lead_c_seasia
53098  eqspill_foll_c_seasia
53099  eqmcost_inv_back_c_seasia
53100  eqmcost_inv_back_lbd_c_seasia
53101   
53102  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
53105  *-------------------------------------------------------------------------------
53106  * Default Climate Policy Implementation
53107  *
53108  * Options:
53109  *    --policy={bau (default),ctax}
53110  *        Implement a climate policy setting
53111  *  [ --scen= ]
53112  *        Policy variant.
53113  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
53114  *          * XXX for a fixed percentage/yr (e.g. 5) growth
53115  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
53116  *  [ --ctax_year=2020 ]
53117  *        Starting year of the carbon tax
53118  *  [ --ctax_initial=30 ]
53119  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
53120  *
53121  *-------------------------------------------------------------------------------
53123   
53124  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
53126  *-------------------------------------------------------------------------------
53127  * Energy efficiency
53128  *-------------------------------------------------------------------------------
53129   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
53132  *-------------------------------------------------------------------------------
53133  * Hydro Power
53134  *-------------------------------------------------------------------------------
53135   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
53138  *-------------------------------------------------------------------------------
53139  * System Integration:
53140  * - Capacity constraint
53141  * - Flexibility constraint
53142  * - Grid Investment
53143  * - Capacity growth constraint
53144  *-------------------------------------------------------------------------------
53145   
53147   
53148  eqq_elintren_c_seasia
53149  eqflex_c_seasia
53150  eqk_en_grid_c_seasia
53151  eqk_en_grid_to_k_en_c_seasia
53152  eqfirm_capacity_c_seasia
53153  eqcap_growth_c_seasia
53154   
53155  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
53158  *-------------------------------------------------------------------------------
53159  * Nuclear power plants
53160  *-------------------------------------------------------------------------------
53161   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
53164  *-------------------------------------------------------------------------------
53165  * GHG module
53166  * - CH4 FFI + CH4 waste + CH4 open fires
53167  * - N2O FFI + N2O waste + N2O open fires
53168  *-------------------------------------------------------------------------------
53169   
53171   
53172  eqq_emi_waste_c_seasia
53173  eqq_emi_n2o_ffi_c_seasia
53174  eqq_emi_ch4_ffi_c_seasia
53175   
53176  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
53179  *-------------------------------------------------------------------------------
53180  * F-gases
53181  * - LLF
53182  * - SLF
53183  *-------------------------------------------------------------------------------
53184   
53186   
53187  eqq_emi_fgases_c_seasia
53188   
53189  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
53192  *-------------------------------------------------------------------------------
53193  * Landuse [simplified version of the land-use model]
53194  *-------------------------------------------------------------------------------
53195   
53197   
53198  eq_wbio_c_seasia
53199  eqcost_pes_wbio_c_seasia
53200   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
53203  *-------------------------------------------------------------------------------
53204  * Bioenergy power plant
53205  *-------------------------------------------------------------------------------
53206   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
53209  *-------------------------------------------------------------------------------
53210  * Traditional Biofuels
53211  * - Requires the precedence of mod_landuse
53212  *-------------------------------------------------------------------------------
53213   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
53216  *-------------------------------------------------------------------------------
53217  * Advanced biofuel
53218  * - Require the precedence of mod_landuse
53219  *-------------------------------------------------------------------------------
53220   
53222   
53223  eqq_en_lim_advbiofuel_c_seasia
53224  eqmcost_fuel_advbiofuel_c_seasia
53225   
53226  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
53229  *-------------------------------------------------------------------------------
53230  * Carbon Capture and Sequestration
53231  *-------------------------------------------------------------------------------
53232   
53234   
53235  eqq_emi_ccs_c_seasia
53236  eqcost_emi_sinks_c_seasia
53237  eq_stor_ccs_cum_c_seasia
53238  eq_emi_stor_ccs_c_seasia
53239  eq_emi_leak_ccs_c_seasia
53240   
53241  *-------------------------------------------------------------------------------
53243   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
53245  *-------------------------------------------------------------------------------
53246  * Coal for non-electric sectors
53247  * - Coke Plants
53248  * - Industrial and Commercial combined-heat-and-power (CHP)
53249  * - Others
53250  *-------------------------------------------------------------------------------
53251   
53253   
53254  eqcost_en_nelcoal_c_seasia
53255  eqq_ncoalabat_monotone_c_seasia
53256  eqq_en_nelcoalccs_max_c_seasia
53257   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
53260  *-------------------------------------------------------------------------------
53261  * Wind energy module
53262  * - onshore and offshore
53263  *-------------------------------------------------------------------------------
53264   
53266   
53267  eqq_en_mu_windon_c_seasia
53268  eqq_en_mu_windoff_c_seasia
53269  eqk_en_windon_c_seasia
53270  eqk_en_windoff_c_seasia
53271  eqq_en_windon_sum_c_seasia
53272  eqq_en_windoff_sum_c_seasia
53273  eqk_en_windon_sum_c_seasia
53274  eqk_en_windoff_sum_c_seasia
53275  eqi_en_windon_sum_c_seasia
53276  eqi_en_windoff_sum_c_seasia
53277   
53279   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
53281  *-------------------------------------------------------------------------------
53282  * Solar Powerplants (PV and CSP) to the electrical system
53283  *-------------------------------------------------------------------------------
53284   
53285  *-------------------------------------------------------------------------------
53287   
53288  eqq_en_mu_pv_c_seasia
53289  eqq_en_mu_csp_c_seasia
53290  eqk_en_pv_c_seasia
53291  eqk_en_csp_c_seasia
53292  eqq_en_pv_sum_c_seasia
53293  eqq_en_csp_sum_c_seasia
53294  eqk_en_pv_sum_c_seasia
53295  eqk_en_csp_sum_c_seasia
53296  eqi_en_pv_sum_c_seasia
53297  eqi_en_csp_sum_c_seasia
53298  eqk_en_solar_comp_c_seasia
53299   
53300  *-------------------------------------------------------------------------------
53302   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
53304  *-------------------------------------------------------------------------------
53305  * Technology development scenarios
53306  *-------------------------------------------------------------------------------
53307   
53309   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
53311  *-------------------------------------------------------------------------------
53312  * Oil Extraction
53313  * Options:
53314  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
53315  *-------------------------------------------------------------------------------
53316   
53318   
53319  eqoilcap_c_seasia
53320  eqoilprod_c_seasia
53321  eqq_out_oil_c_seasia
53322  eqcum_oil_c_seasia
53323  eqcost_oil_c_seasia
53324  eqi_oil_c_seasia
53325  eqi_out_oil_c_seasia
53326  eqq_emi_out_oil_c_seasia
53327   
53328  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
53331  *-------------------------------------------------------------------------------
53332  * Uranium Resources
53333  *-------------------------------------------------------------------------------
53334   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
53337  *-------------------------------------------------------------------------------
53338  * Gas Resources
53339  *-------------------------------------------------------------------------------
53340   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
53343  *-------------------------------------------------------------------------------
53344  * Coal Resources
53345  *-------------------------------------------------------------------------------
53346   
53348   
53349   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
53351  *-------------------------------------------------------------------------------
53352  * Climate
53353  *
53354  * Represents the climate
53355  * - based on the DICE model equations
53356  * - Radiative forcing for non CO2 ghgs
53357  * - parameters calibrated to reproduce MAGICC6.4 default response
53358  *
53359  *  Options:
53360  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
53361  * - $setglobal cooperate_on_climate {'YES','NO'}
53362  * - 'YES'(default): Countries within a coalition act in cooperation
53363  *   'NO': Countries within a coalition act individually
53364  *
53365  *-------------------------------------------------------------------------------
53366   
53368   
53370   
53371  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
53374  *-------------------------------------------------------------------------------
53375  * Long-run Damages from Climate Change
53376  * - Economic impacts
53377  * - Adaptation
53378  *-------------------------------------------------------------------------------
53379   
53381   
53383   
53384  *-------------------------------------------------------------------------------
53386   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
53388  *-------------------------------------------------------------------------------
53389  * Light-duty Vehicles for Personal Transport
53390  *-------------------------------------------------------------------------------
53391   
53393   
53394  eqnb_veh_c_seasia
53395  eqq_en_veh_c_seasia
53396  eqq_el_edv_c_seasia
53397  eqmcost_inv_hybrid_c_seasia
53398  eqmcost_inv_plghybrid_c_seasia
53399  eqmcost_inv_edv_c_seasia
53400  *** newcode
53401  eqq_inv_red_ban_c_seasia
53402  ***
53403  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
53406  *-------------------------------------------------------------------------------
53407  * Road Freight Transport
53408  *-------------------------------------------------------------------------------
53410   
53411  eqnb_frtveh_c_seasia
53412  eqq_en_frtveh_c_seasia
53413  eqq_el_frtedv_c_seasia
53414  eqmcost_inv_hbd_stfr_c_seasia
53415  eqmcost_inv_plghbd_stfr_c_seasia
53416  eqmcost_inv_edv_stfr_c_seasia
53417   
53418  *-------------------------------------------------------------------------------
53420   
53421   
53422   
53423   
53424   
53425   
53426  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
53428  *-------------------------------------------------------------------------------
53429  * Traditional Biomass
53430  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
53431  *  - require post_process to be launch before
53432  *-------------------------------------------------------------------------------
53433   
53435   
53436  * Optional modules
53437   
53438  * Policy modules
53439   
53440  * Calibration
53443   
53448   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
53450  *-------------------------------------------------------------------------------
53451  * Call modules by order
53452  *-------------------------------------------------------------------------------
53456   
53457  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
53459  *-------------------------------------------------------------------------------
53460  * Algorithm
53461  *-------------------------------------------------------------------------------
53462   
53464   
53465  eqobj_c_southafrica
53466   
53467  *-------------------------------------------------------------------------------
53469   
53470  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
53472  *-------------------------------------------------------------------------------
53473  * Time
53474  * - Temporal structure
53475  * - Fixed time periods
53476  * - States of the world
53477  *-------------------------------------------------------------------------------
53478   
53480   
53481  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
53483  *-------------------------------------------------------------------------------
53484  * Geographic dimension and mapping with countries
53485  *-------------------------------------------------------------------------------
53486   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
53489  *-------------------------------------------------------------------------------
53490  * Non-Cooperative Setup
53491  *
53492  * Each region is defined as an individual coalition.
53493  *
53494  *-------------------------------------------------------------------------------
53495   
53497   
53498  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
53500  *-------------------------------------------------------------------------------
53501  * Welfare
53502  *-------------------------------------------------------------------------------
53503   
53505   
53506  equtility_c_southafrica
53507   
53508  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
53511  *-------------------------------------------------------------------------------
53512  * Economy
53513  * - Production and Consumption definition
53514  * - Top-level of the production function
53515  * Options:
53516  * --original_ssp=1 : original SSP population and GDP data
53517  *-------------------------------------------------------------------------------
53518   
53520   
53521  eqk_c_southafrica
53522  eqq_cc_c_southafrica
53523  eqq_fen_c_southafrica
53524  eqq_y_c_southafrica
53525   
53526  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
53529  *-------------------------------------------------------------------------------
53530  * Energy sector
53531  *-------------------------------------------------------------------------------
53532   
53534   
53535  eq_mkt_clearing_oil_c_southafrica
53536  eqcost_pes_c_southafrica
53537  eqcost_ses_c_southafrica
53538  eqk_en_c_southafrica
53539  eqq_ces_el_c_southafrica
53540  eqq_ces_nelgas_c_southafrica
53541  eqq_el2_c_southafrica
53542  eqq_el_c_southafrica
53543  eqq_elff_c_southafrica
53544  eqq_en_c_southafrica
53545  eqq_en_in_c_southafrica
53546  eqq_en_mu_c_southafrica
53547  eqq_en_tree_c_southafrica
53548  eqq_nel_c_southafrica
53549  eqq_nelog_c_southafrica
53550  eqq_fuel_c_southafrica
53551  eqq_elffren_c_southafrica
53552   
53553  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
53556  *-------------------------------------------------------------------------------
53557  * Carbon Emissions
53558  * - Total CO2 emissions and CO2 Fossil fuel and Industry
53559  * - CO2 emission costs
53560  * - GHG permit market
53561  *-------------------------------------------------------------------------------
53562   
53564   
53565  eqq_emi_lim_c_southafrica
53566  ***newcode
53567  eqq_emi_lim_USAc_southafrica
53568  ***
53569  eqq_emi_tree_c_southafrica
53570  eqq_emi_co2ffi_c_southafrica
53571   
53572  eqcost_emi_co2_c_southafrica
53573   
53574  eq_mkt_clearing_nip_c_southafrica
53575   
53576  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
53579  *-------------------------------------------------------------------------------
53580  * Research & Development
53581  * Options:
53582  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
53583  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
53584  *-------------------------------------------------------------------------------
53585   
53587   
53588  eqk_rd_c_southafrica
53589  eqspill_coop_c_southafrica
53590  eqspill_lead_c_southafrica
53591  eqspill_foll_c_southafrica
53592  eqmcost_inv_back_c_southafrica
53593  eqmcost_inv_back_lbd_c_southafrica
53594   
53595  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
53598  *-------------------------------------------------------------------------------
53599  * Default Climate Policy Implementation
53600  *
53601  * Options:
53602  *    --policy={bau (default),ctax}
53603  *        Implement a climate policy setting
53604  *  [ --scen= ]
53605  *        Policy variant.
53606  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
53607  *          * XXX for a fixed percentage/yr (e.g. 5) growth
53608  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
53609  *  [ --ctax_year=2020 ]
53610  *        Starting year of the carbon tax
53611  *  [ --ctax_initial=30 ]
53612  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
53613  *
53614  *-------------------------------------------------------------------------------
53616   
53617  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
53619  *-------------------------------------------------------------------------------
53620  * Energy efficiency
53621  *-------------------------------------------------------------------------------
53622   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
53625  *-------------------------------------------------------------------------------
53626  * Hydro Power
53627  *-------------------------------------------------------------------------------
53628   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
53631  *-------------------------------------------------------------------------------
53632  * System Integration:
53633  * - Capacity constraint
53634  * - Flexibility constraint
53635  * - Grid Investment
53636  * - Capacity growth constraint
53637  *-------------------------------------------------------------------------------
53638   
53640   
53641  eqq_elintren_c_southafrica
53642  eqflex_c_southafrica
53643  eqk_en_grid_c_southafrica
53644  eqk_en_grid_to_k_en_c_southafrica
53645  eqfirm_capacity_c_southafrica
53646  eqcap_growth_c_southafrica
53647   
53648  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
53651  *-------------------------------------------------------------------------------
53652  * Nuclear power plants
53653  *-------------------------------------------------------------------------------
53654   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
53657  *-------------------------------------------------------------------------------
53658  * GHG module
53659  * - CH4 FFI + CH4 waste + CH4 open fires
53660  * - N2O FFI + N2O waste + N2O open fires
53661  *-------------------------------------------------------------------------------
53662   
53664   
53665  eqq_emi_waste_c_southafrica
53666  eqq_emi_n2o_ffi_c_southafrica
53667  eqq_emi_ch4_ffi_c_southafrica
53668   
53669  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
53672  *-------------------------------------------------------------------------------
53673  * F-gases
53674  * - LLF
53675  * - SLF
53676  *-------------------------------------------------------------------------------
53677   
53679   
53680  eqq_emi_fgases_c_southafrica
53681   
53682  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
53685  *-------------------------------------------------------------------------------
53686  * Landuse [simplified version of the land-use model]
53687  *-------------------------------------------------------------------------------
53688   
53690   
53691  eq_wbio_c_southafrica
53692  eqcost_pes_wbio_c_southafrica
53693   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
53696  *-------------------------------------------------------------------------------
53697  * Bioenergy power plant
53698  *-------------------------------------------------------------------------------
53699   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
53702  *-------------------------------------------------------------------------------
53703  * Traditional Biofuels
53704  * - Requires the precedence of mod_landuse
53705  *-------------------------------------------------------------------------------
53706   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
53709  *-------------------------------------------------------------------------------
53710  * Advanced biofuel
53711  * - Require the precedence of mod_landuse
53712  *-------------------------------------------------------------------------------
53713   
53715   
53716  eqq_en_lim_advbiofuel_c_southafrica
53717  eqmcost_fuel_advbiofuel_c_southafrica
53718   
53719  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
53722  *-------------------------------------------------------------------------------
53723  * Carbon Capture and Sequestration
53724  *-------------------------------------------------------------------------------
53725   
53727   
53728  eqq_emi_ccs_c_southafrica
53729  eqcost_emi_sinks_c_southafrica
53730  eq_stor_ccs_cum_c_southafrica
53731  eq_emi_stor_ccs_c_southafrica
53732  eq_emi_leak_ccs_c_southafrica
53733   
53734  *-------------------------------------------------------------------------------
53736   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
53738  *-------------------------------------------------------------------------------
53739  * Coal for non-electric sectors
53740  * - Coke Plants
53741  * - Industrial and Commercial combined-heat-and-power (CHP)
53742  * - Others
53743  *-------------------------------------------------------------------------------
53744   
53746   
53747  eqcost_en_nelcoal_c_southafrica
53748  eqq_ncoalabat_monotone_c_southafrica
53749  eqq_en_nelcoalccs_max_c_southafrica
53750   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
53753  *-------------------------------------------------------------------------------
53754  * Wind energy module
53755  * - onshore and offshore
53756  *-------------------------------------------------------------------------------
53757   
53759   
53760  eqq_en_mu_windon_c_southafrica
53761  eqq_en_mu_windoff_c_southafrica
53762  eqk_en_windon_c_southafrica
53763  eqk_en_windoff_c_southafrica
53764  eqq_en_windon_sum_c_southafrica
53765  eqq_en_windoff_sum_c_southafrica
53766  eqk_en_windon_sum_c_southafrica
53767  eqk_en_windoff_sum_c_southafrica
53768  eqi_en_windon_sum_c_southafrica
53769  eqi_en_windoff_sum_c_southafrica
53770   
53772   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
53774  *-------------------------------------------------------------------------------
53775  * Solar Powerplants (PV and CSP) to the electrical system
53776  *-------------------------------------------------------------------------------
53777   
53778  *-------------------------------------------------------------------------------
53780   
53781  eqq_en_mu_pv_c_southafrica
53782  eqq_en_mu_csp_c_southafrica
53783  eqk_en_pv_c_southafrica
53784  eqk_en_csp_c_southafrica
53785  eqq_en_pv_sum_c_southafrica
53786  eqq_en_csp_sum_c_southafrica
53787  eqk_en_pv_sum_c_southafrica
53788  eqk_en_csp_sum_c_southafrica
53789  eqi_en_pv_sum_c_southafrica
53790  eqi_en_csp_sum_c_southafrica
53791  eqk_en_solar_comp_c_southafrica
53792   
53793  *-------------------------------------------------------------------------------
53795   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
53797  *-------------------------------------------------------------------------------
53798  * Technology development scenarios
53799  *-------------------------------------------------------------------------------
53800   
53802   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
53804  *-------------------------------------------------------------------------------
53805  * Oil Extraction
53806  * Options:
53807  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
53808  *-------------------------------------------------------------------------------
53809   
53811   
53812  eqoilcap_c_southafrica
53813  eqoilprod_c_southafrica
53814  eqq_out_oil_c_southafrica
53815  eqcum_oil_c_southafrica
53816  eqcost_oil_c_southafrica
53817  eqi_oil_c_southafrica
53818  eqi_out_oil_c_southafrica
53819  eqq_emi_out_oil_c_southafrica
53820   
53821  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
53824  *-------------------------------------------------------------------------------
53825  * Uranium Resources
53826  *-------------------------------------------------------------------------------
53827   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
53830  *-------------------------------------------------------------------------------
53831  * Gas Resources
53832  *-------------------------------------------------------------------------------
53833   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
53836  *-------------------------------------------------------------------------------
53837  * Coal Resources
53838  *-------------------------------------------------------------------------------
53839   
53841   
53842   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
53844  *-------------------------------------------------------------------------------
53845  * Climate
53846  *
53847  * Represents the climate
53848  * - based on the DICE model equations
53849  * - Radiative forcing for non CO2 ghgs
53850  * - parameters calibrated to reproduce MAGICC6.4 default response
53851  *
53852  *  Options:
53853  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
53854  * - $setglobal cooperate_on_climate {'YES','NO'}
53855  * - 'YES'(default): Countries within a coalition act in cooperation
53856  *   'NO': Countries within a coalition act individually
53857  *
53858  *-------------------------------------------------------------------------------
53859   
53861   
53863   
53864  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
53867  *-------------------------------------------------------------------------------
53868  * Long-run Damages from Climate Change
53869  * - Economic impacts
53870  * - Adaptation
53871  *-------------------------------------------------------------------------------
53872   
53874   
53876   
53877  *-------------------------------------------------------------------------------
53879   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
53881  *-------------------------------------------------------------------------------
53882  * Light-duty Vehicles for Personal Transport
53883  *-------------------------------------------------------------------------------
53884   
53886   
53887  eqnb_veh_c_southafrica
53888  eqq_en_veh_c_southafrica
53889  eqq_el_edv_c_southafrica
53890  eqmcost_inv_hybrid_c_southafrica
53891  eqmcost_inv_plghybrid_c_southafrica
53892  eqmcost_inv_edv_c_southafrica
53893  *** newcode
53894  eqq_inv_red_ban_c_southafrica
53895  ***
53896  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
53899  *-------------------------------------------------------------------------------
53900  * Road Freight Transport
53901  *-------------------------------------------------------------------------------
53903   
53904  eqnb_frtveh_c_southafrica
53905  eqq_en_frtveh_c_southafrica
53906  eqq_el_frtedv_c_southafrica
53907  eqmcost_inv_hbd_stfr_c_southafrica
53908  eqmcost_inv_plghbd_stfr_c_southafrica
53909  eqmcost_inv_edv_stfr_c_southafrica
53910   
53911  *-------------------------------------------------------------------------------
53913   
53914   
53915   
53916   
53917   
53918   
53919  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
53921  *-------------------------------------------------------------------------------
53922  * Traditional Biomass
53923  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
53924  *  - require post_process to be launch before
53925  *-------------------------------------------------------------------------------
53926   
53928   
53929  * Optional modules
53930   
53931  * Policy modules
53932   
53933  * Calibration
53936   
53941   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
53943  *-------------------------------------------------------------------------------
53944  * Call modules by order
53945  *-------------------------------------------------------------------------------
53949   
53950  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
53952  *-------------------------------------------------------------------------------
53953  * Algorithm
53954  *-------------------------------------------------------------------------------
53955   
53957   
53958  eqobj_c_ssa
53959   
53960  *-------------------------------------------------------------------------------
53962   
53963  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
53965  *-------------------------------------------------------------------------------
53966  * Time
53967  * - Temporal structure
53968  * - Fixed time periods
53969  * - States of the world
53970  *-------------------------------------------------------------------------------
53971   
53973   
53974  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
53976  *-------------------------------------------------------------------------------
53977  * Geographic dimension and mapping with countries
53978  *-------------------------------------------------------------------------------
53979   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
53982  *-------------------------------------------------------------------------------
53983  * Non-Cooperative Setup
53984  *
53985  * Each region is defined as an individual coalition.
53986  *
53987  *-------------------------------------------------------------------------------
53988   
53990   
53991  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
53993  *-------------------------------------------------------------------------------
53994  * Welfare
53995  *-------------------------------------------------------------------------------
53996   
53998   
53999  equtility_c_ssa
54000   
54001  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
54004  *-------------------------------------------------------------------------------
54005  * Economy
54006  * - Production and Consumption definition
54007  * - Top-level of the production function
54008  * Options:
54009  * --original_ssp=1 : original SSP population and GDP data
54010  *-------------------------------------------------------------------------------
54011   
54013   
54014  eqk_c_ssa
54015  eqq_cc_c_ssa
54016  eqq_fen_c_ssa
54017  eqq_y_c_ssa
54018   
54019  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
54022  *-------------------------------------------------------------------------------
54023  * Energy sector
54024  *-------------------------------------------------------------------------------
54025   
54027   
54028  eq_mkt_clearing_oil_c_ssa
54029  eqcost_pes_c_ssa
54030  eqcost_ses_c_ssa
54031  eqk_en_c_ssa
54032  eqq_ces_el_c_ssa
54033  eqq_ces_nelgas_c_ssa
54034  eqq_el2_c_ssa
54035  eqq_el_c_ssa
54036  eqq_elff_c_ssa
54037  eqq_en_c_ssa
54038  eqq_en_in_c_ssa
54039  eqq_en_mu_c_ssa
54040  eqq_en_tree_c_ssa
54041  eqq_nel_c_ssa
54042  eqq_nelog_c_ssa
54043  eqq_fuel_c_ssa
54044  eqq_elffren_c_ssa
54045   
54046  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
54049  *-------------------------------------------------------------------------------
54050  * Carbon Emissions
54051  * - Total CO2 emissions and CO2 Fossil fuel and Industry
54052  * - CO2 emission costs
54053  * - GHG permit market
54054  *-------------------------------------------------------------------------------
54055   
54057   
54058  eqq_emi_lim_c_ssa
54059  ***newcode
54060  eqq_emi_lim_USAc_ssa
54061  ***
54062  eqq_emi_tree_c_ssa
54063  eqq_emi_co2ffi_c_ssa
54064   
54065  eqcost_emi_co2_c_ssa
54066   
54067  eq_mkt_clearing_nip_c_ssa
54068   
54069  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
54072  *-------------------------------------------------------------------------------
54073  * Research & Development
54074  * Options:
54075  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
54076  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
54077  *-------------------------------------------------------------------------------
54078   
54080   
54081  eqk_rd_c_ssa
54082  eqspill_coop_c_ssa
54083  eqspill_lead_c_ssa
54084  eqspill_foll_c_ssa
54085  eqmcost_inv_back_c_ssa
54086  eqmcost_inv_back_lbd_c_ssa
54087   
54088  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
54091  *-------------------------------------------------------------------------------
54092  * Default Climate Policy Implementation
54093  *
54094  * Options:
54095  *    --policy={bau (default),ctax}
54096  *        Implement a climate policy setting
54097  *  [ --scen= ]
54098  *        Policy variant.
54099  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
54100  *          * XXX for a fixed percentage/yr (e.g. 5) growth
54101  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
54102  *  [ --ctax_year=2020 ]
54103  *        Starting year of the carbon tax
54104  *  [ --ctax_initial=30 ]
54105  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
54106  *
54107  *-------------------------------------------------------------------------------
54109   
54110  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
54112  *-------------------------------------------------------------------------------
54113  * Energy efficiency
54114  *-------------------------------------------------------------------------------
54115   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
54118  *-------------------------------------------------------------------------------
54119  * Hydro Power
54120  *-------------------------------------------------------------------------------
54121   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
54124  *-------------------------------------------------------------------------------
54125  * System Integration:
54126  * - Capacity constraint
54127  * - Flexibility constraint
54128  * - Grid Investment
54129  * - Capacity growth constraint
54130  *-------------------------------------------------------------------------------
54131   
54133   
54134  eqq_elintren_c_ssa
54135  eqflex_c_ssa
54136  eqk_en_grid_c_ssa
54137  eqk_en_grid_to_k_en_c_ssa
54138  eqfirm_capacity_c_ssa
54139  eqcap_growth_c_ssa
54140   
54141  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
54144  *-------------------------------------------------------------------------------
54145  * Nuclear power plants
54146  *-------------------------------------------------------------------------------
54147   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
54150  *-------------------------------------------------------------------------------
54151  * GHG module
54152  * - CH4 FFI + CH4 waste + CH4 open fires
54153  * - N2O FFI + N2O waste + N2O open fires
54154  *-------------------------------------------------------------------------------
54155   
54157   
54158  eqq_emi_waste_c_ssa
54159  eqq_emi_n2o_ffi_c_ssa
54160  eqq_emi_ch4_ffi_c_ssa
54161   
54162  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
54165  *-------------------------------------------------------------------------------
54166  * F-gases
54167  * - LLF
54168  * - SLF
54169  *-------------------------------------------------------------------------------
54170   
54172   
54173  eqq_emi_fgases_c_ssa
54174   
54175  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
54178  *-------------------------------------------------------------------------------
54179  * Landuse [simplified version of the land-use model]
54180  *-------------------------------------------------------------------------------
54181   
54183   
54184  eq_wbio_c_ssa
54185  eqcost_pes_wbio_c_ssa
54186   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
54189  *-------------------------------------------------------------------------------
54190  * Bioenergy power plant
54191  *-------------------------------------------------------------------------------
54192   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
54195  *-------------------------------------------------------------------------------
54196  * Traditional Biofuels
54197  * - Requires the precedence of mod_landuse
54198  *-------------------------------------------------------------------------------
54199   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
54202  *-------------------------------------------------------------------------------
54203  * Advanced biofuel
54204  * - Require the precedence of mod_landuse
54205  *-------------------------------------------------------------------------------
54206   
54208   
54209  eqq_en_lim_advbiofuel_c_ssa
54210  eqmcost_fuel_advbiofuel_c_ssa
54211   
54212  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
54215  *-------------------------------------------------------------------------------
54216  * Carbon Capture and Sequestration
54217  *-------------------------------------------------------------------------------
54218   
54220   
54221  eqq_emi_ccs_c_ssa
54222  eqcost_emi_sinks_c_ssa
54223  eq_stor_ccs_cum_c_ssa
54224  eq_emi_stor_ccs_c_ssa
54225  eq_emi_leak_ccs_c_ssa
54226   
54227  *-------------------------------------------------------------------------------
54229   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
54231  *-------------------------------------------------------------------------------
54232  * Coal for non-electric sectors
54233  * - Coke Plants
54234  * - Industrial and Commercial combined-heat-and-power (CHP)
54235  * - Others
54236  *-------------------------------------------------------------------------------
54237   
54239   
54240  eqcost_en_nelcoal_c_ssa
54241  eqq_ncoalabat_monotone_c_ssa
54242  eqq_en_nelcoalccs_max_c_ssa
54243   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
54246  *-------------------------------------------------------------------------------
54247  * Wind energy module
54248  * - onshore and offshore
54249  *-------------------------------------------------------------------------------
54250   
54252   
54253  eqq_en_mu_windon_c_ssa
54254  eqq_en_mu_windoff_c_ssa
54255  eqk_en_windon_c_ssa
54256  eqk_en_windoff_c_ssa
54257  eqq_en_windon_sum_c_ssa
54258  eqq_en_windoff_sum_c_ssa
54259  eqk_en_windon_sum_c_ssa
54260  eqk_en_windoff_sum_c_ssa
54261  eqi_en_windon_sum_c_ssa
54262  eqi_en_windoff_sum_c_ssa
54263   
54265   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
54267  *-------------------------------------------------------------------------------
54268  * Solar Powerplants (PV and CSP) to the electrical system
54269  *-------------------------------------------------------------------------------
54270   
54271  *-------------------------------------------------------------------------------
54273   
54274  eqq_en_mu_pv_c_ssa
54275  eqq_en_mu_csp_c_ssa
54276  eqk_en_pv_c_ssa
54277  eqk_en_csp_c_ssa
54278  eqq_en_pv_sum_c_ssa
54279  eqq_en_csp_sum_c_ssa
54280  eqk_en_pv_sum_c_ssa
54281  eqk_en_csp_sum_c_ssa
54282  eqi_en_pv_sum_c_ssa
54283  eqi_en_csp_sum_c_ssa
54284  eqk_en_solar_comp_c_ssa
54285   
54286  *-------------------------------------------------------------------------------
54288   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
54290  *-------------------------------------------------------------------------------
54291  * Technology development scenarios
54292  *-------------------------------------------------------------------------------
54293   
54295   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
54297  *-------------------------------------------------------------------------------
54298  * Oil Extraction
54299  * Options:
54300  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
54301  *-------------------------------------------------------------------------------
54302   
54304   
54305  eqoilcap_c_ssa
54306  eqoilprod_c_ssa
54307  eqq_out_oil_c_ssa
54308  eqcum_oil_c_ssa
54309  eqcost_oil_c_ssa
54310  eqi_oil_c_ssa
54311  eqi_out_oil_c_ssa
54312  eqq_emi_out_oil_c_ssa
54313   
54314  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
54317  *-------------------------------------------------------------------------------
54318  * Uranium Resources
54319  *-------------------------------------------------------------------------------
54320   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
54323  *-------------------------------------------------------------------------------
54324  * Gas Resources
54325  *-------------------------------------------------------------------------------
54326   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
54329  *-------------------------------------------------------------------------------
54330  * Coal Resources
54331  *-------------------------------------------------------------------------------
54332   
54334   
54335   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
54337  *-------------------------------------------------------------------------------
54338  * Climate
54339  *
54340  * Represents the climate
54341  * - based on the DICE model equations
54342  * - Radiative forcing for non CO2 ghgs
54343  * - parameters calibrated to reproduce MAGICC6.4 default response
54344  *
54345  *  Options:
54346  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
54347  * - $setglobal cooperate_on_climate {'YES','NO'}
54348  * - 'YES'(default): Countries within a coalition act in cooperation
54349  *   'NO': Countries within a coalition act individually
54350  *
54351  *-------------------------------------------------------------------------------
54352   
54354   
54356   
54357  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
54360  *-------------------------------------------------------------------------------
54361  * Long-run Damages from Climate Change
54362  * - Economic impacts
54363  * - Adaptation
54364  *-------------------------------------------------------------------------------
54365   
54367   
54369   
54370  *-------------------------------------------------------------------------------
54372   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
54374  *-------------------------------------------------------------------------------
54375  * Light-duty Vehicles for Personal Transport
54376  *-------------------------------------------------------------------------------
54377   
54379   
54380  eqnb_veh_c_ssa
54381  eqq_en_veh_c_ssa
54382  eqq_el_edv_c_ssa
54383  eqmcost_inv_hybrid_c_ssa
54384  eqmcost_inv_plghybrid_c_ssa
54385  eqmcost_inv_edv_c_ssa
54386  *** newcode
54387  eqq_inv_red_ban_c_ssa
54388  ***
54389  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
54392  *-------------------------------------------------------------------------------
54393  * Road Freight Transport
54394  *-------------------------------------------------------------------------------
54396   
54397  eqnb_frtveh_c_ssa
54398  eqq_en_frtveh_c_ssa
54399  eqq_el_frtedv_c_ssa
54400  eqmcost_inv_hbd_stfr_c_ssa
54401  eqmcost_inv_plghbd_stfr_c_ssa
54402  eqmcost_inv_edv_stfr_c_ssa
54403   
54404  *-------------------------------------------------------------------------------
54406   
54407   
54408   
54409   
54410   
54411   
54412  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
54414  *-------------------------------------------------------------------------------
54415  * Traditional Biomass
54416  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
54417  *  - require post_process to be launch before
54418  *-------------------------------------------------------------------------------
54419   
54421   
54422  * Optional modules
54423   
54424  * Policy modules
54425   
54426  * Calibration
54429   
54434   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
54436  *-------------------------------------------------------------------------------
54437  * Call modules by order
54438  *-------------------------------------------------------------------------------
54442   
54443  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
54445  *-------------------------------------------------------------------------------
54446  * Algorithm
54447  *-------------------------------------------------------------------------------
54448   
54450   
54451  eqobj_c_te
54452   
54453  *-------------------------------------------------------------------------------
54455   
54456  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
54458  *-------------------------------------------------------------------------------
54459  * Time
54460  * - Temporal structure
54461  * - Fixed time periods
54462  * - States of the world
54463  *-------------------------------------------------------------------------------
54464   
54466   
54467  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
54469  *-------------------------------------------------------------------------------
54470  * Geographic dimension and mapping with countries
54471  *-------------------------------------------------------------------------------
54472   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
54475  *-------------------------------------------------------------------------------
54476  * Non-Cooperative Setup
54477  *
54478  * Each region is defined as an individual coalition.
54479  *
54480  *-------------------------------------------------------------------------------
54481   
54483   
54484  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
54486  *-------------------------------------------------------------------------------
54487  * Welfare
54488  *-------------------------------------------------------------------------------
54489   
54491   
54492  equtility_c_te
54493   
54494  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
54497  *-------------------------------------------------------------------------------
54498  * Economy
54499  * - Production and Consumption definition
54500  * - Top-level of the production function
54501  * Options:
54502  * --original_ssp=1 : original SSP population and GDP data
54503  *-------------------------------------------------------------------------------
54504   
54506   
54507  eqk_c_te
54508  eqq_cc_c_te
54509  eqq_fen_c_te
54510  eqq_y_c_te
54511   
54512  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
54515  *-------------------------------------------------------------------------------
54516  * Energy sector
54517  *-------------------------------------------------------------------------------
54518   
54520   
54521  eq_mkt_clearing_oil_c_te
54522  eqcost_pes_c_te
54523  eqcost_ses_c_te
54524  eqk_en_c_te
54525  eqq_ces_el_c_te
54526  eqq_ces_nelgas_c_te
54527  eqq_el2_c_te
54528  eqq_el_c_te
54529  eqq_elff_c_te
54530  eqq_en_c_te
54531  eqq_en_in_c_te
54532  eqq_en_mu_c_te
54533  eqq_en_tree_c_te
54534  eqq_nel_c_te
54535  eqq_nelog_c_te
54536  eqq_fuel_c_te
54537  eqq_elffren_c_te
54538   
54539  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
54542  *-------------------------------------------------------------------------------
54543  * Carbon Emissions
54544  * - Total CO2 emissions and CO2 Fossil fuel and Industry
54545  * - CO2 emission costs
54546  * - GHG permit market
54547  *-------------------------------------------------------------------------------
54548   
54550   
54551  eqq_emi_lim_c_te
54552  ***newcode
54553  eqq_emi_lim_USAc_te
54554  ***
54555  eqq_emi_tree_c_te
54556  eqq_emi_co2ffi_c_te
54557   
54558  eqcost_emi_co2_c_te
54559   
54560  eq_mkt_clearing_nip_c_te
54561   
54562  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
54565  *-------------------------------------------------------------------------------
54566  * Research & Development
54567  * Options:
54568  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
54569  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
54570  *-------------------------------------------------------------------------------
54571   
54573   
54574  eqk_rd_c_te
54575  eqspill_coop_c_te
54576  eqspill_lead_c_te
54577  eqspill_foll_c_te
54578  eqmcost_inv_back_c_te
54579  eqmcost_inv_back_lbd_c_te
54580   
54581  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
54584  *-------------------------------------------------------------------------------
54585  * Default Climate Policy Implementation
54586  *
54587  * Options:
54588  *    --policy={bau (default),ctax}
54589  *        Implement a climate policy setting
54590  *  [ --scen= ]
54591  *        Policy variant.
54592  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
54593  *          * XXX for a fixed percentage/yr (e.g. 5) growth
54594  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
54595  *  [ --ctax_year=2020 ]
54596  *        Starting year of the carbon tax
54597  *  [ --ctax_initial=30 ]
54598  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
54599  *
54600  *-------------------------------------------------------------------------------
54602   
54603  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
54605  *-------------------------------------------------------------------------------
54606  * Energy efficiency
54607  *-------------------------------------------------------------------------------
54608   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
54611  *-------------------------------------------------------------------------------
54612  * Hydro Power
54613  *-------------------------------------------------------------------------------
54614   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
54617  *-------------------------------------------------------------------------------
54618  * System Integration:
54619  * - Capacity constraint
54620  * - Flexibility constraint
54621  * - Grid Investment
54622  * - Capacity growth constraint
54623  *-------------------------------------------------------------------------------
54624   
54626   
54627  eqq_elintren_c_te
54628  eqflex_c_te
54629  eqk_en_grid_c_te
54630  eqk_en_grid_to_k_en_c_te
54631  eqfirm_capacity_c_te
54632  eqcap_growth_c_te
54633   
54634  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
54637  *-------------------------------------------------------------------------------
54638  * Nuclear power plants
54639  *-------------------------------------------------------------------------------
54640   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
54643  *-------------------------------------------------------------------------------
54644  * GHG module
54645  * - CH4 FFI + CH4 waste + CH4 open fires
54646  * - N2O FFI + N2O waste + N2O open fires
54647  *-------------------------------------------------------------------------------
54648   
54650   
54651  eqq_emi_waste_c_te
54652  eqq_emi_n2o_ffi_c_te
54653  eqq_emi_ch4_ffi_c_te
54654   
54655  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
54658  *-------------------------------------------------------------------------------
54659  * F-gases
54660  * - LLF
54661  * - SLF
54662  *-------------------------------------------------------------------------------
54663   
54665   
54666  eqq_emi_fgases_c_te
54667   
54668  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
54671  *-------------------------------------------------------------------------------
54672  * Landuse [simplified version of the land-use model]
54673  *-------------------------------------------------------------------------------
54674   
54676   
54677  eq_wbio_c_te
54678  eqcost_pes_wbio_c_te
54679   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
54682  *-------------------------------------------------------------------------------
54683  * Bioenergy power plant
54684  *-------------------------------------------------------------------------------
54685   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
54688  *-------------------------------------------------------------------------------
54689  * Traditional Biofuels
54690  * - Requires the precedence of mod_landuse
54691  *-------------------------------------------------------------------------------
54692   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
54695  *-------------------------------------------------------------------------------
54696  * Advanced biofuel
54697  * - Require the precedence of mod_landuse
54698  *-------------------------------------------------------------------------------
54699   
54701   
54702  eqq_en_lim_advbiofuel_c_te
54703  eqmcost_fuel_advbiofuel_c_te
54704   
54705  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
54708  *-------------------------------------------------------------------------------
54709  * Carbon Capture and Sequestration
54710  *-------------------------------------------------------------------------------
54711   
54713   
54714  eqq_emi_ccs_c_te
54715  eqcost_emi_sinks_c_te
54716  eq_stor_ccs_cum_c_te
54717  eq_emi_stor_ccs_c_te
54718  eq_emi_leak_ccs_c_te
54719   
54720  *-------------------------------------------------------------------------------
54722   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
54724  *-------------------------------------------------------------------------------
54725  * Coal for non-electric sectors
54726  * - Coke Plants
54727  * - Industrial and Commercial combined-heat-and-power (CHP)
54728  * - Others
54729  *-------------------------------------------------------------------------------
54730   
54732   
54733  eqcost_en_nelcoal_c_te
54734  eqq_ncoalabat_monotone_c_te
54735  eqq_en_nelcoalccs_max_c_te
54736   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
54739  *-------------------------------------------------------------------------------
54740  * Wind energy module
54741  * - onshore and offshore
54742  *-------------------------------------------------------------------------------
54743   
54745   
54746  eqq_en_mu_windon_c_te
54747  eqq_en_mu_windoff_c_te
54748  eqk_en_windon_c_te
54749  eqk_en_windoff_c_te
54750  eqq_en_windon_sum_c_te
54751  eqq_en_windoff_sum_c_te
54752  eqk_en_windon_sum_c_te
54753  eqk_en_windoff_sum_c_te
54754  eqi_en_windon_sum_c_te
54755  eqi_en_windoff_sum_c_te
54756   
54758   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
54760  *-------------------------------------------------------------------------------
54761  * Solar Powerplants (PV and CSP) to the electrical system
54762  *-------------------------------------------------------------------------------
54763   
54764  *-------------------------------------------------------------------------------
54766   
54767  eqq_en_mu_pv_c_te
54768  eqq_en_mu_csp_c_te
54769  eqk_en_pv_c_te
54770  eqk_en_csp_c_te
54771  eqq_en_pv_sum_c_te
54772  eqq_en_csp_sum_c_te
54773  eqk_en_pv_sum_c_te
54774  eqk_en_csp_sum_c_te
54775  eqi_en_pv_sum_c_te
54776  eqi_en_csp_sum_c_te
54777  eqk_en_solar_comp_c_te
54778   
54779  *-------------------------------------------------------------------------------
54781   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
54783  *-------------------------------------------------------------------------------
54784  * Technology development scenarios
54785  *-------------------------------------------------------------------------------
54786   
54788   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
54790  *-------------------------------------------------------------------------------
54791  * Oil Extraction
54792  * Options:
54793  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
54794  *-------------------------------------------------------------------------------
54795   
54797   
54798  eqoilcap_c_te
54799  eqoilprod_c_te
54800  eqq_out_oil_c_te
54801  eqcum_oil_c_te
54802  eqcost_oil_c_te
54803  eqi_oil_c_te
54804  eqi_out_oil_c_te
54805  eqq_emi_out_oil_c_te
54806   
54807  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
54810  *-------------------------------------------------------------------------------
54811  * Uranium Resources
54812  *-------------------------------------------------------------------------------
54813   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
54816  *-------------------------------------------------------------------------------
54817  * Gas Resources
54818  *-------------------------------------------------------------------------------
54819   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
54822  *-------------------------------------------------------------------------------
54823  * Coal Resources
54824  *-------------------------------------------------------------------------------
54825   
54827   
54828   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
54830  *-------------------------------------------------------------------------------
54831  * Climate
54832  *
54833  * Represents the climate
54834  * - based on the DICE model equations
54835  * - Radiative forcing for non CO2 ghgs
54836  * - parameters calibrated to reproduce MAGICC6.4 default response
54837  *
54838  *  Options:
54839  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
54840  * - $setglobal cooperate_on_climate {'YES','NO'}
54841  * - 'YES'(default): Countries within a coalition act in cooperation
54842  *   'NO': Countries within a coalition act individually
54843  *
54844  *-------------------------------------------------------------------------------
54845   
54847   
54849   
54850  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
54853  *-------------------------------------------------------------------------------
54854  * Long-run Damages from Climate Change
54855  * - Economic impacts
54856  * - Adaptation
54857  *-------------------------------------------------------------------------------
54858   
54860   
54862   
54863  *-------------------------------------------------------------------------------
54865   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
54867  *-------------------------------------------------------------------------------
54868  * Light-duty Vehicles for Personal Transport
54869  *-------------------------------------------------------------------------------
54870   
54872   
54873  eqnb_veh_c_te
54874  eqq_en_veh_c_te
54875  eqq_el_edv_c_te
54876  eqmcost_inv_hybrid_c_te
54877  eqmcost_inv_plghybrid_c_te
54878  eqmcost_inv_edv_c_te
54879  *** newcode
54880  eqq_inv_red_ban_c_te
54881  ***
54882  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
54885  *-------------------------------------------------------------------------------
54886  * Road Freight Transport
54887  *-------------------------------------------------------------------------------
54889   
54890  eqnb_frtveh_c_te
54891  eqq_en_frtveh_c_te
54892  eqq_el_frtedv_c_te
54893  eqmcost_inv_hbd_stfr_c_te
54894  eqmcost_inv_plghbd_stfr_c_te
54895  eqmcost_inv_edv_stfr_c_te
54896   
54897  *-------------------------------------------------------------------------------
54899   
54900   
54901   
54902   
54903   
54904   
54905  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
54907  *-------------------------------------------------------------------------------
54908  * Traditional Biomass
54909  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
54910  *  - require post_process to be launch before
54911  *-------------------------------------------------------------------------------
54912   
54914   
54915  * Optional modules
54916   
54917  * Policy modules
54918   
54919  * Calibration
54922   
54927   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
54929  *-------------------------------------------------------------------------------
54930  * Call modules by order
54931  *-------------------------------------------------------------------------------
54935   
54936  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
54938  *-------------------------------------------------------------------------------
54939  * Algorithm
54940  *-------------------------------------------------------------------------------
54941   
54943   
54944  eqobj_c_usa
54945   
54946  *-------------------------------------------------------------------------------
54948   
54949  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
54951  *-------------------------------------------------------------------------------
54952  * Time
54953  * - Temporal structure
54954  * - Fixed time periods
54955  * - States of the world
54956  *-------------------------------------------------------------------------------
54957   
54959   
54960  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
54962  *-------------------------------------------------------------------------------
54963  * Geographic dimension and mapping with countries
54964  *-------------------------------------------------------------------------------
54965   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
54968  *-------------------------------------------------------------------------------
54969  * Non-Cooperative Setup
54970  *
54971  * Each region is defined as an individual coalition.
54972  *
54973  *-------------------------------------------------------------------------------
54974   
54976   
54977  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
54979  *-------------------------------------------------------------------------------
54980  * Welfare
54981  *-------------------------------------------------------------------------------
54982   
54984   
54985  equtility_c_usa
54986   
54987  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
54990  *-------------------------------------------------------------------------------
54991  * Economy
54992  * - Production and Consumption definition
54993  * - Top-level of the production function
54994  * Options:
54995  * --original_ssp=1 : original SSP population and GDP data
54996  *-------------------------------------------------------------------------------
54997   
54999   
55000  eqk_c_usa
55001  eqq_cc_c_usa
55002  eqq_fen_c_usa
55003  eqq_y_c_usa
55004   
55005  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
55008  *-------------------------------------------------------------------------------
55009  * Energy sector
55010  *-------------------------------------------------------------------------------
55011   
55013   
55014  eq_mkt_clearing_oil_c_usa
55015  eqcost_pes_c_usa
55016  eqcost_ses_c_usa
55017  eqk_en_c_usa
55018  eqq_ces_el_c_usa
55019  eqq_ces_nelgas_c_usa
55020  eqq_el2_c_usa
55021  eqq_el_c_usa
55022  eqq_elff_c_usa
55023  eqq_en_c_usa
55024  eqq_en_in_c_usa
55025  eqq_en_mu_c_usa
55026  eqq_en_tree_c_usa
55027  eqq_nel_c_usa
55028  eqq_nelog_c_usa
55029  eqq_fuel_c_usa
55030  eqq_elffren_c_usa
55031   
55032  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
55035  *-------------------------------------------------------------------------------
55036  * Carbon Emissions
55037  * - Total CO2 emissions and CO2 Fossil fuel and Industry
55038  * - CO2 emission costs
55039  * - GHG permit market
55040  *-------------------------------------------------------------------------------
55041   
55043   
55044  eqq_emi_lim_c_usa
55045  ***newcode
55046  eqq_emi_lim_USAc_usa
55047  ***
55048  eqq_emi_tree_c_usa
55049  eqq_emi_co2ffi_c_usa
55050   
55051  eqcost_emi_co2_c_usa
55052   
55053  eq_mkt_clearing_nip_c_usa
55054   
55055  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
55058  *-------------------------------------------------------------------------------
55059  * Research & Development
55060  * Options:
55061  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
55062  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
55063  *-------------------------------------------------------------------------------
55064   
55066   
55067  eqk_rd_c_usa
55068  eqspill_coop_c_usa
55069  eqspill_lead_c_usa
55070  eqspill_foll_c_usa
55071  eqmcost_inv_back_c_usa
55072  eqmcost_inv_back_lbd_c_usa
55073   
55074  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
55077  *-------------------------------------------------------------------------------
55078  * Default Climate Policy Implementation
55079  *
55080  * Options:
55081  *    --policy={bau (default),ctax}
55082  *        Implement a climate policy setting
55083  *  [ --scen= ]
55084  *        Policy variant.
55085  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
55086  *          * XXX for a fixed percentage/yr (e.g. 5) growth
55087  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
55088  *  [ --ctax_year=2020 ]
55089  *        Starting year of the carbon tax
55090  *  [ --ctax_initial=30 ]
55091  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
55092  *
55093  *-------------------------------------------------------------------------------
55095   
55096  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
55098  *-------------------------------------------------------------------------------
55099  * Energy efficiency
55100  *-------------------------------------------------------------------------------
55101   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
55104  *-------------------------------------------------------------------------------
55105  * Hydro Power
55106  *-------------------------------------------------------------------------------
55107   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
55110  *-------------------------------------------------------------------------------
55111  * System Integration:
55112  * - Capacity constraint
55113  * - Flexibility constraint
55114  * - Grid Investment
55115  * - Capacity growth constraint
55116  *-------------------------------------------------------------------------------
55117   
55119   
55120  eqq_elintren_c_usa
55121  eqflex_c_usa
55122  eqk_en_grid_c_usa
55123  eqk_en_grid_to_k_en_c_usa
55124  eqfirm_capacity_c_usa
55125  eqcap_growth_c_usa
55126   
55127  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
55130  *-------------------------------------------------------------------------------
55131  * Nuclear power plants
55132  *-------------------------------------------------------------------------------
55133   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
55136  *-------------------------------------------------------------------------------
55137  * GHG module
55138  * - CH4 FFI + CH4 waste + CH4 open fires
55139  * - N2O FFI + N2O waste + N2O open fires
55140  *-------------------------------------------------------------------------------
55141   
55143   
55144  eqq_emi_waste_c_usa
55145  eqq_emi_n2o_ffi_c_usa
55146  eqq_emi_ch4_ffi_c_usa
55147   
55148  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
55151  *-------------------------------------------------------------------------------
55152  * F-gases
55153  * - LLF
55154  * - SLF
55155  *-------------------------------------------------------------------------------
55156   
55158   
55159  eqq_emi_fgases_c_usa
55160   
55161  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
55164  *-------------------------------------------------------------------------------
55165  * Landuse [simplified version of the land-use model]
55166  *-------------------------------------------------------------------------------
55167   
55169   
55170  eq_wbio_c_usa
55171  eqcost_pes_wbio_c_usa
55172   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
55175  *-------------------------------------------------------------------------------
55176  * Bioenergy power plant
55177  *-------------------------------------------------------------------------------
55178   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
55181  *-------------------------------------------------------------------------------
55182  * Traditional Biofuels
55183  * - Requires the precedence of mod_landuse
55184  *-------------------------------------------------------------------------------
55185   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
55188  *-------------------------------------------------------------------------------
55189  * Advanced biofuel
55190  * - Require the precedence of mod_landuse
55191  *-------------------------------------------------------------------------------
55192   
55194   
55195  eqq_en_lim_advbiofuel_c_usa
55196  eqmcost_fuel_advbiofuel_c_usa
55197   
55198  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
55201  *-------------------------------------------------------------------------------
55202  * Carbon Capture and Sequestration
55203  *-------------------------------------------------------------------------------
55204   
55206   
55207  eqq_emi_ccs_c_usa
55208  eqcost_emi_sinks_c_usa
55209  eq_stor_ccs_cum_c_usa
55210  eq_emi_stor_ccs_c_usa
55211  eq_emi_leak_ccs_c_usa
55212   
55213  *-------------------------------------------------------------------------------
55215   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
55217  *-------------------------------------------------------------------------------
55218  * Coal for non-electric sectors
55219  * - Coke Plants
55220  * - Industrial and Commercial combined-heat-and-power (CHP)
55221  * - Others
55222  *-------------------------------------------------------------------------------
55223   
55225   
55226  eqcost_en_nelcoal_c_usa
55227  eqq_ncoalabat_monotone_c_usa
55228  eqq_en_nelcoalccs_max_c_usa
55229   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
55232  *-------------------------------------------------------------------------------
55233  * Wind energy module
55234  * - onshore and offshore
55235  *-------------------------------------------------------------------------------
55236   
55238   
55239  eqq_en_mu_windon_c_usa
55240  eqq_en_mu_windoff_c_usa
55241  eqk_en_windon_c_usa
55242  eqk_en_windoff_c_usa
55243  eqq_en_windon_sum_c_usa
55244  eqq_en_windoff_sum_c_usa
55245  eqk_en_windon_sum_c_usa
55246  eqk_en_windoff_sum_c_usa
55247  eqi_en_windon_sum_c_usa
55248  eqi_en_windoff_sum_c_usa
55249   
55251   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
55253  *-------------------------------------------------------------------------------
55254  * Solar Powerplants (PV and CSP) to the electrical system
55255  *-------------------------------------------------------------------------------
55256   
55257  *-------------------------------------------------------------------------------
55259   
55260  eqq_en_mu_pv_c_usa
55261  eqq_en_mu_csp_c_usa
55262  eqk_en_pv_c_usa
55263  eqk_en_csp_c_usa
55264  eqq_en_pv_sum_c_usa
55265  eqq_en_csp_sum_c_usa
55266  eqk_en_pv_sum_c_usa
55267  eqk_en_csp_sum_c_usa
55268  eqi_en_pv_sum_c_usa
55269  eqi_en_csp_sum_c_usa
55270  eqk_en_solar_comp_c_usa
55271   
55272  *-------------------------------------------------------------------------------
55274   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
55276  *-------------------------------------------------------------------------------
55277  * Technology development scenarios
55278  *-------------------------------------------------------------------------------
55279   
55281   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
55283  *-------------------------------------------------------------------------------
55284  * Oil Extraction
55285  * Options:
55286  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
55287  *-------------------------------------------------------------------------------
55288   
55290   
55291  eqoilcap_c_usa
55292  eqoilprod_c_usa
55293  eqq_out_oil_c_usa
55294  eqcum_oil_c_usa
55295  eqcost_oil_c_usa
55296  eqi_oil_c_usa
55297  eqi_out_oil_c_usa
55298  eqq_emi_out_oil_c_usa
55299   
55300  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
55303  *-------------------------------------------------------------------------------
55304  * Uranium Resources
55305  *-------------------------------------------------------------------------------
55306   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
55309  *-------------------------------------------------------------------------------
55310  * Gas Resources
55311  *-------------------------------------------------------------------------------
55312   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
55315  *-------------------------------------------------------------------------------
55316  * Coal Resources
55317  *-------------------------------------------------------------------------------
55318   
55320   
55321   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
55323  *-------------------------------------------------------------------------------
55324  * Climate
55325  *
55326  * Represents the climate
55327  * - based on the DICE model equations
55328  * - Radiative forcing for non CO2 ghgs
55329  * - parameters calibrated to reproduce MAGICC6.4 default response
55330  *
55331  *  Options:
55332  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
55333  * - $setglobal cooperate_on_climate {'YES','NO'}
55334  * - 'YES'(default): Countries within a coalition act in cooperation
55335  *   'NO': Countries within a coalition act individually
55336  *
55337  *-------------------------------------------------------------------------------
55338   
55340   
55342   
55343  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
55346  *-------------------------------------------------------------------------------
55347  * Long-run Damages from Climate Change
55348  * - Economic impacts
55349  * - Adaptation
55350  *-------------------------------------------------------------------------------
55351   
55353   
55355   
55356  *-------------------------------------------------------------------------------
55358   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
55360  *-------------------------------------------------------------------------------
55361  * Light-duty Vehicles for Personal Transport
55362  *-------------------------------------------------------------------------------
55363   
55365   
55366  eqnb_veh_c_usa
55367  eqq_en_veh_c_usa
55368  eqq_el_edv_c_usa
55369  eqmcost_inv_hybrid_c_usa
55370  eqmcost_inv_plghybrid_c_usa
55371  eqmcost_inv_edv_c_usa
55372  *** newcode
55373  eqq_inv_red_ban_c_usa
55374  ***
55375  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
55378  *-------------------------------------------------------------------------------
55379  * Road Freight Transport
55380  *-------------------------------------------------------------------------------
55382   
55383  eqnb_frtveh_c_usa
55384  eqq_en_frtveh_c_usa
55385  eqq_el_frtedv_c_usa
55386  eqmcost_inv_hbd_stfr_c_usa
55387  eqmcost_inv_plghbd_stfr_c_usa
55388  eqmcost_inv_edv_stfr_c_usa
55389   
55390  *-------------------------------------------------------------------------------
55392   
55393   
55394   
55395   
55396   
55397   
55398  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
55400  *-------------------------------------------------------------------------------
55401  * Traditional Biomass
55402  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
55403  *  - require post_process to be launch before
55404  *-------------------------------------------------------------------------------
55405   
55407   
55408  * Optional modules
55409   
55410  * Policy modules
55411   
55412  * Calibration
55415   
55420   
55421  * declared items
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
55423  *-------------------------------------------------------------------------------
55424  * Call modules by order
55425  *-------------------------------------------------------------------------------
55429   
55430  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
55432  *-------------------------------------------------------------------------------
55433  * Algorithm
55434  *-------------------------------------------------------------------------------
55435   
55437   
55438  * Sets
55439  ierr
55440  siter
55441  conf
55442   
55443  * Parameters
55444  errtol
55445  stop_nash
55446  stop_run
55447   
55449   
55450  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
55452  *-------------------------------------------------------------------------------
55453  * Time
55454  * - Temporal structure
55455  * - Fixed time periods
55456  * - States of the world
55457  *-------------------------------------------------------------------------------
55458   
55460   
55461  t
55462  tfix
55463  tlen
55464  tfirst
55465  tlast
55466  tperiod
55467  year
55468  yeoh
55469  pre
55470   
55472   
55473  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
55475  *-------------------------------------------------------------------------------
55476  * Geographic dimension and mapping with countries
55477  *-------------------------------------------------------------------------------
55478   
55480   
55481  * Sets
55482  n
55483  oecd
55484  non_oecd
55485   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
55488  *-------------------------------------------------------------------------------
55489  * Non-Cooperative Setup
55490  *
55491  * Each region is defined as an individual coalition.
55492  *
55493  *-------------------------------------------------------------------------------
55494   
55496   
55497  * Sets
55498  clt
55499  map_clt_n
55500   
55502   
55503  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
55505  *-------------------------------------------------------------------------------
55506  * Welfare
55507  *-------------------------------------------------------------------------------
55508   
55510   
55511  * Sets
55512  negishi_coop
55513   
55514  * Parameters
55515  eta
55516  gamma
55517  srtp
55518  stpf
55519  utility_cebge_global
55520  utility_cebge_pc_global
55521  utility_cebge_pc_regional
55522  utility_cebge_regional
55523  w_negishi
55524   
55525  * Variables
55526  UTILITY
55527  PROB
55528   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
55531  *-------------------------------------------------------------------------------
55532  * Economy
55533  * - Production and Consumption definition
55534  * - Top-level of the production function
55535  * Options:
55536  * --original_ssp=1 : original SSP population and GDP data
55537  *-------------------------------------------------------------------------------
55538   
55540   
55541  * Sets
55542  g
55543  iq
55544   
55545  * Parameters
55546  alpha
55547  delta
55548  delta0
55549  l
55550  mer2ppp
55551  m_eqq_y
55552  ppp2mer
55553  q0
55554  rho
55555  tfpn
55556  tfpy
55557  ykali
55558  gdppc_kali
55559   
55560  * Variables
55561  I
55562  K
55563  Q
55564  BAU_Q
55565  COST_Y
55566   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
55569  *-------------------------------------------------------------------------------
55570  * Energy sector
55571  *-------------------------------------------------------------------------------
55572   
55574   
55575  * Sets
55576  extract
55577  fuel
55578  f
55579  s
55580  f_mkt
55581  ices_el
55582  j
55583  j_to_scale
55584  jel
55585  jel_own_mu
55586  jel_ren
55587  jfed
55588  jinv
55589  jinv_own_k
55590  jinv_to_scale
55591  jmcost_inv
55592  jnel
55593  jnel_ren
55594  jold
55595  jpenalty
55596  jreal
55597  jreal_to_scale
55598  map_ices_el
55599  map_j
55600   
55601  * Parameters
55602  cexs
55603  csi
55604  csi0
55605  cum_prodpp
55606  delta_en
55607  delta_en0
55608  delta_lcost
55609  lifetime
55610  k_en0
55611  localpll
55612  mcost_inv0
55613  mu
55614  mu0
55615  oem
55616  oem0
55617  p_mkup
55618  p_mkup0
55619  prodpp
55620  twh2ej
55621  wcum
55622  tpes
55623  noeloil
55624   
55625  * Variables
55626  COST_EN
55627  COST_FUEL
55628  FPRICE
55629  I_EN
55630  K_EN
55631  MCOST_FUEL
55632  MCOST_INV
55633  QEL_OUT
55634  QNEL_OUT
55635  Q_EN
55636  Q_FUEL
55637  Q_IN
55638   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
55641  *-------------------------------------------------------------------------------
55642  * Carbon Emissions
55643  * - Total CO2 emissions and CO2 Fossil fuel and Industry
55644  * - CO2 emission costs
55645  * - GHG permit market
55646  *-------------------------------------------------------------------------------
55647   
55649   
55650  * Sets
55651  cce
55652  e
55653  ghg
55654  sink
55655  c_mkt
55656  map_e
55657   
55658  * Parameters
55659  c2co2
55660  carbonprice
55661  emi_bio_harv
55662  emi_cap
55663  emi_st
55664   
55665  * Variables
55666  BAU_Q_EMI
55667  COST_EMI
55668  CPRICE
55669  Q_EMI
55670   
55671  * Summary parameters
55672  m_eqq_emi_lim
55673  m_eqq_emi_tree
55674   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
55677  *-------------------------------------------------------------------------------
55678  * Research & Development
55679  * Options:
55680  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
55681  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
55682  *-------------------------------------------------------------------------------
55683   
55685   
55686  * Sets
55687  jrd
55688  jrd_lbd
55689  leadrd
55690  rd
55691  rd_cooperation
55692  rd_tgap
55693   
55694  * Parameters
55695  rd_coef
55696  rd_delta
55697  krd0
55698  rd_crowd_out
55699  krd_lead
55700  krd_oth_lead_krd
55701  wkrd0
55702  wlspill_k_rd
55703   
55704  * Variables
55705  I_RD
55706  K_RD
55707  SPILL
55708   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
55711  *-------------------------------------------------------------------------------
55712  * Default Climate Policy Implementation
55713  *
55714  * Options:
55715  *    --policy={bau (default),ctax}
55716  *        Implement a climate policy setting
55717  *  [ --scen= ]
55718  *        Policy variant.
55719  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
55720  *          * XXX for a fixed percentage/yr (e.g. 5) growth
55721  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
55722  *  [ --ctax_year=2020 ]
55723  *        Starting year of the carbon tax
55724  *  [ --ctax_initial=30 ]
55725  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
55726  *
55727  *-------------------------------------------------------------------------------
55729   
55730  run
55731  to_run
55732   
55733  internal
55734  internal_clt
55735  trading_t
55736  t_cap
55737   
55738  ctax
55739   
55741   
55742  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
55744  *-------------------------------------------------------------------------------
55745  * Energy efficiency
55746  *-------------------------------------------------------------------------------
55747   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
55750  *-------------------------------------------------------------------------------
55751  * Hydro Power
55752  *-------------------------------------------------------------------------------
55753   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
55756  *-------------------------------------------------------------------------------
55757  * System Integration:
55758  * - Capacity constraint
55759  * - Flexibility constraint
55760  * - Grid Investment
55761  * - Capacity growth constraint
55762  *-------------------------------------------------------------------------------
55763   
55765   
55766  * Sets
55767  jel_firm
55768  jel_stdgrid
55769  jintren
55770  jtn_incompatible_with_mkt_growth_cap
55771   
55772  * Parameters
55773  cv_coeff
55774  cv_exp
55775  el_free_cap
55776  flex_coeff
55777  grid_coeff
55778  grid_cost
55779  grid_delta
55780  peak_load_fraction
55781  mkt_growth_rate
55782   
55783  * Variables
55784  Q_EL_FLEX
55785  K_EN_GRID
55786  I_EN_GRID
55787   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
55790  *-------------------------------------------------------------------------------
55791  * Nuclear power plants
55792  *-------------------------------------------------------------------------------
55793   
55795   
55796  * Parameters
55797  cwaste
55798  cwaste_reg
55799  wastemgm
55800  twh2tonU
55801   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
55804  *-------------------------------------------------------------------------------
55805  * GHG module
55806  * - CH4 FFI + CH4 waste + CH4 open fires
55807  * - N2O FFI + N2O waste + N2O open fires
55808  *-------------------------------------------------------------------------------
55809   
55811   
55812  waste_emi_alpha
55813  waste_emi_beta
55814  emi_fac
55815  emi_ffac
55816   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
55819  *-------------------------------------------------------------------------------
55820  * F-gases
55821  * - LLF
55822  * - SLF
55823  *-------------------------------------------------------------------------------
55824   
55826   
55827  fgases
55828  fgases_baseline
55829   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
55832  *-------------------------------------------------------------------------------
55833  * Landuse [simplified version of the land-use model]
55834  *-------------------------------------------------------------------------------
55835   
55837   
55838  * Sets
55839  t_lu
55840   
55841  * Parameters
55842  cluprice
55843  q_emi_valid_lu
55844   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
55847  *-------------------------------------------------------------------------------
55848  * Bioenergy power plant
55849  *-------------------------------------------------------------------------------
55850   
55852   
55853  * Parameters
55854  elpb_capacity
55855   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
55858  *-------------------------------------------------------------------------------
55859  * Traditional Biofuels
55860  * - Requires the precedence of mod_landuse
55861  *-------------------------------------------------------------------------------
55862   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
55865  *-------------------------------------------------------------------------------
55866  * Advanced biofuel
55867  * - Require the precedence of mod_landuse
55868  *-------------------------------------------------------------------------------
55869   
55871   
55872  * Parameters
55873  alp_nelback
55874  q_en0_back
55875   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
55878  *-------------------------------------------------------------------------------
55879  * Carbon Capture and Sequestration
55880  *-------------------------------------------------------------------------------
55881   
55883   
55884  * Sets
55885  jccs
55886  jlccs
55887   
55888  * Parameters
55889  ccs_capture_eff
55890  ccs_emi_capt
55891  ccs_leak_rate
55892  ccs_learn
55893  ccs_stor_cap_max
55894  ccs_stor_cap_og_onoff
55895  ccs_stor_cost
55896  ccs_stor_dist_avg
55897  ccs_wcum0
55898  ccs_wcum_spill
55899   
55900  * Variables
55901  CUM_Q_CCS
55902  MCOST_EMI
55903  Q_CCS
55904   
55906   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
55908  *-------------------------------------------------------------------------------
55909  * Coal for non-electric sectors
55910  * - Coke Plants
55911  * - Industrial and Commercial combined-heat-and-power (CHP)
55912  * - Others
55913  *-------------------------------------------------------------------------------
55914   
55916   
55917  * Parameters
55918  nelcoal_cmac
55919  nelcoal_share_ccs
55920  nelcoal_max_abat
55921   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
55924  *-------------------------------------------------------------------------------
55925  * Wind energy module
55926  * - onshore and offshore
55927  *-------------------------------------------------------------------------------
55928   
55930   
55931  * Sets
55932  jel_wind
55933  jinv_wind
55934  jreal_wind
55935  wind_class
55936  wind_depth
55937  wind_dist
55938  wind_type
55939   
55940  * Parameters
55941  k_en0_windon
55942  k_en_wind_norm_sum
55943  k_en_windoff_norm
55944  k_en_windon_norm
55945  wind_mu
55946  wind_mu_marginal
55947  oem_wind
55948  cap_factor
55949  wind_spill_wcum
55950  yearly_hours
55951  windoff_pot
55952  windon_pot
55953   
55954  * Variables
55955  I_EN_WINDOFF
55956  I_EN_WINDON
55957  K_EN_WINDOFF
55958  K_EN_WINDON
55959  MCOST_INV_WINDOFF
55960  Q_EN_WINDOFF
55961  Q_EN_WINDON
55962   
55964   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
55966  *-------------------------------------------------------------------------------
55967  * Solar Powerplants (PV and CSP) to the electrical system
55968  *-------------------------------------------------------------------------------
55969   
55970  *-------------------------------------------------------------------------------
55972   
55973  * Sets
55974  jel_solar
55975  jinv_solar
55976  jreal_solar
55977  solar_dist
55978  solar_class
55979   
55980  * Parameters
55981  pv_pot
55982  csp_pot
55983  solar_mu
55984  inst_area
55985  inst_density
55986  k_en0_pv
55987  k_en0_csp
55988  oem_pv
55989  oem_csp
55990   
55991  * Variables
55992  I_EN_PV
55993  I_EN_CSP
55994  K_EN_PV
55995  K_EN_CSP
55996  Q_EN_PV
55997  Q_EN_CSP
55998   
56000   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
56002  *-------------------------------------------------------------------------------
56003  * Technology development scenarios
56004  *-------------------------------------------------------------------------------
56005   
56007   
56008  * Parameters
56009  tech_scen
56010  tech_cost_var
56011   
56013   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
56015  *-------------------------------------------------------------------------------
56016  * Oil Extraction
56017  * Options:
56018  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
56019  *-------------------------------------------------------------------------------
56020   
56022   
56023  * Sets
56024  map_oilgrade
56025  oilg
56026  valid_oilg
56027   
56028  * Parameters
56029  delta_oilg
56030  oil_emi_st
56031  oil_esp_capacity
56032  oem_ex
56033  oil_capacity
56034  oil_cost
56035  oil_cost_grade
56036  oil_cum
56037  oil_cum_grade
56038  oil_emi_st_grade
56039  oil_reserve
56040   
56041  * Variables
56042  ADDOILCAP
56043  COST_OIL
56044  CUM_OIL
56045  I_OIL
56046  I_OUT
56047  OILCAP
56048  OILPROD
56049  Q_EMI_OUT
56050  Q_OUT
56051   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
56054  *-------------------------------------------------------------------------------
56055  * Uranium Resources
56056  *-------------------------------------------------------------------------------
56057   
56059   
56060  resgr
56061  res
56062   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
56065  *-------------------------------------------------------------------------------
56066  * Gas Resources
56067  *-------------------------------------------------------------------------------
56068   
56070   
56071  trade_poly_gas
56072  trade_scale_gas
56073   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
56076  *-------------------------------------------------------------------------------
56077  * Coal Resources
56078  *-------------------------------------------------------------------------------
56079   
56081   
56082  trade_poly_coal
56083  trade_scale_coal
56084   
56086   
56087   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
56089  *-------------------------------------------------------------------------------
56090  * Climate
56091  *
56092  * Represents the climate
56093  * - based on the DICE model equations
56094  * - Radiative forcing for non CO2 ghgs
56095  * - parameters calibrated to reproduce MAGICC6.4 default response
56096  *
56097  *  Options:
56098  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
56099  * - $setglobal cooperate_on_climate {'YES','NO'}
56100  * - 'YES'(default): Countries within a coalition act in cooperation
56101  *   'NO': Countries within a coalition act individually
56102  *
56103  *-------------------------------------------------------------------------------
56104   
56106   
56107  * Sets
56108  m
56109  oghg
56110   
56111  * Parameters
56112  cmdec1
56113  cmdec2
56114  cmphi
56115  emi_gwp
56116  emi_preind
56117  rfaerosols
56118  rfc
56119  temp0
56120  tempc
56121  wcum_emi0
56122  wcum_emi_eq
56123  wemi
56124  wemi2qemi
56125   
56126  * Variables
56127  RF
56128  TEMP
56129  TRF
56130  W_EMI
56131  WCUM_EMI
56132   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
56135  *-------------------------------------------------------------------------------
56136  * Long-run Damages from Climate Change
56137  * - Economic impacts
56138  * - Adaptation
56139  *-------------------------------------------------------------------------------
56140   
56142   
56143  * Parameters
56144  ces_ada
56145  comega_neg
56146  comega_pos
56147  k_edu0
56148  k_h0
56149  owa
56150   
56151  * Variables
56152  OMEGA
56153   
56154  * Report parameters
56155  resdam
56156  grossdam
56157  dam_rep
56158   
56160   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
56162  *-------------------------------------------------------------------------------
56163  * Light-duty Vehicles for Personal Transport
56164  *-------------------------------------------------------------------------------
56165   
56167   
56168  * Sets
56169  jveh
56170  jveh_inv
56171  jveh_invfix
56172   
56173  * Parameters
56174  *** newcode
56175  battery_cost_new
56176   
56177  ai
56178  battery_cost
56179  biofuel_2005_2010
56180  biofuel_2013
56181  coeff_ldv
56182  disutility_costs_ldv
56183  elec_plg
56184  elec_plg_2005
56185  fuel_cons
56186  fuel_cons_2005
56187  fueleff_rate
56188  gdppc
56189  growth_func_ldv
56190  inv_constraint_ldv
56191  inv_cost_veh
56192  k_veh_2005_2015
56193  km_demand_ldv
56194  km_demand_pv_deviation_ldv
56195  km_demand_pv_ldv
56196  krd_lo_coeff
56197  ldv_pthc
56198  ldv_total
56199  load_factor_ldv
56200  max_biofuel_feed_share
56201  oem_veh
56202  oge
56203  reg_discount_veh
56204  service_demand_ldv
56205  size_battery
56206  trad_biofuel_lim
56207  transp_ldv_biofuel_feed_share
56208  transp_ldv_ice_feeding
56209  transp_world_ldv_fleet
56210  transp_world_ldv_ice_feeding
56211  travel_intensity
56212  travel_intensity_2005
56213  co2_transport
56214  size_ice
56215  size_elmotor
56216  ice_cost
56217  tank_cost
56218  charger_cost
56219  glider_manufacture_cost
56220   
56221  ELMOTOR_COST
56222   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
56225  *-------------------------------------------------------------------------------
56226  * Road Freight Transport
56227  *-------------------------------------------------------------------------------
56229   
56230  * Sets
56231  jfrt
56232  jfrt_inv
56233   
56234  * Parameters
56235  disutility_costs_stfr
56236  elec_plg_stfr
56237  elec_plghbd_stfr_2005
56238  fuel_cons_stfr
56239  fuel_cons_stfr_2005
56240  fueleff_rate_stfr
56241  growth_func_stfr
56242  inv_cost_frt
56243  km_demand_pv_stfr
56244  km_demand_stfr
56245  load_factor_stfr
56246  oem_frt
56247  service_demand_stfr
56248  size_battery_freight
56249  stfr_total
56250   
56252   
56253   
56254   
56255   
56256   
56257   
56258  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
56260  *-------------------------------------------------------------------------------
56261  * Traditional Biomass
56262  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
56263  *  - require post_process to be launch before
56264  *-------------------------------------------------------------------------------
56265   
56267   
56268  * Parameters
56269  trbio_ctr
56270  trbio_gdp_fun
56271  neltrbiomass0
56272  scale_trbiomass
56273   
56275   
56276  * Optional modules
56277   
56278  * Policy modules
56279   
56280  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
56284  *-------------------------------------------------------------------------------
56285  * Call modules by order
56286  *-------------------------------------------------------------------------------
56290   
56291  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
56293  *-------------------------------------------------------------------------------
56294  * Algorithm
56295  *-------------------------------------------------------------------------------
56296   
56298   
56299  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
56301  *-------------------------------------------------------------------------------
56302  * Time
56303  * - Temporal structure
56304  * - Fixed time periods
56305  * - States of the world
56306  *-------------------------------------------------------------------------------
56307   
56309   
56310  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
56312  *-------------------------------------------------------------------------------
56313  * Geographic dimension and mapping with countries
56314  *-------------------------------------------------------------------------------
56315   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
56318  *-------------------------------------------------------------------------------
56319  * Non-Cooperative Setup
56320  *
56321  * Each region is defined as an individual coalition.
56322  *
56323  *-------------------------------------------------------------------------------
56324   
56326   
56327  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
56329  *-------------------------------------------------------------------------------
56330  * Welfare
56331  *-------------------------------------------------------------------------------
56332   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
56335  *-------------------------------------------------------------------------------
56336  * Economy
56337  * - Production and Consumption definition
56338  * - Top-level of the production function
56339  * Options:
56340  * --original_ssp=1 : original SSP population and GDP data
56341  *-------------------------------------------------------------------------------
56342   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
56345  *-------------------------------------------------------------------------------
56346  * Energy sector
56347  *-------------------------------------------------------------------------------
56348   
56350   
56351  mu
56352  csi
56353   
56354  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
56357  *-------------------------------------------------------------------------------
56358  * Carbon Emissions
56359  * - Total CO2 emissions and CO2 Fossil fuel and Industry
56360  * - CO2 emission costs
56361  * - GHG permit market
56362  *-------------------------------------------------------------------------------
56363   
56365   
56366  emi_sys
56367   
56368  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
56371  *-------------------------------------------------------------------------------
56372  * Research & Development
56373  * Options:
56374  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
56375  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
56376  *-------------------------------------------------------------------------------
56377   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
56380  *-------------------------------------------------------------------------------
56381  * Default Climate Policy Implementation
56382  *
56383  * Options:
56384  *    --policy={bau (default),ctax}
56385  *        Implement a climate policy setting
56386  *  [ --scen= ]
56387  *        Policy variant.
56388  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
56389  *          * XXX for a fixed percentage/yr (e.g. 5) growth
56390  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
56391  *  [ --ctax_year=2020 ]
56392  *        Starting year of the carbon tax
56393  *  [ --ctax_initial=30 ]
56394  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
56395  *
56396  *-------------------------------------------------------------------------------
56398   
56399  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
56401  *-------------------------------------------------------------------------------
56402  * Energy efficiency
56403  *-------------------------------------------------------------------------------
56404   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
56407  *-------------------------------------------------------------------------------
56408  * Hydro Power
56409  *-------------------------------------------------------------------------------
56410   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
56413  *-------------------------------------------------------------------------------
56414  * System Integration:
56415  * - Capacity constraint
56416  * - Flexibility constraint
56417  * - Grid Investment
56418  * - Capacity growth constraint
56419  *-------------------------------------------------------------------------------
56420   
56422   
56423  firm_coeff
56424   
56425  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
56428  *-------------------------------------------------------------------------------
56429  * Nuclear power plants
56430  *-------------------------------------------------------------------------------
56431   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
56434  *-------------------------------------------------------------------------------
56435  * GHG module
56436  * - CH4 FFI + CH4 waste + CH4 open fires
56437  * - N2O FFI + N2O waste + N2O open fires
56438  *-------------------------------------------------------------------------------
56439   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
56442  *-------------------------------------------------------------------------------
56443  * F-gases
56444  * - LLF
56445  * - SLF
56446  *-------------------------------------------------------------------------------
56447   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
56450  *-------------------------------------------------------------------------------
56451  * Landuse [simplified version of the land-use model]
56452  *-------------------------------------------------------------------------------
56453   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
56456  *-------------------------------------------------------------------------------
56457  * Bioenergy power plant
56458  *-------------------------------------------------------------------------------
56459   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
56462  *-------------------------------------------------------------------------------
56463  * Traditional Biofuels
56464  * - Requires the precedence of mod_landuse
56465  *-------------------------------------------------------------------------------
56466   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
56469  *-------------------------------------------------------------------------------
56470  * Advanced biofuel
56471  * - Require the precedence of mod_landuse
56472  *-------------------------------------------------------------------------------
56473   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
56476  *-------------------------------------------------------------------------------
56477  * Carbon Capture and Sequestration
56478  *-------------------------------------------------------------------------------
56479   
56481   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
56483  *-------------------------------------------------------------------------------
56484  * Coal for non-electric sectors
56485  * - Coke Plants
56486  * - Industrial and Commercial combined-heat-and-power (CHP)
56487  * - Others
56488  *-------------------------------------------------------------------------------
56489   
56491   
56492  nelcoal_baseline
56493   
56494  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
56497  *-------------------------------------------------------------------------------
56498  * Wind energy module
56499  * - onshore and offshore
56500  *-------------------------------------------------------------------------------
56501   
56503   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
56505  *-------------------------------------------------------------------------------
56506  * Solar Powerplants (PV and CSP) to the electrical system
56507  *-------------------------------------------------------------------------------
56508   
56509  *-------------------------------------------------------------------------------
56511   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
56513  *-------------------------------------------------------------------------------
56514  * Technology development scenarios
56515  *-------------------------------------------------------------------------------
56516   
56518   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
56520  *-------------------------------------------------------------------------------
56521  * Oil Extraction
56522  * Options:
56523  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
56524  *-------------------------------------------------------------------------------
56525   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
56528  *-------------------------------------------------------------------------------
56529  * Uranium Resources
56530  *-------------------------------------------------------------------------------
56531   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
56534  *-------------------------------------------------------------------------------
56535  * Gas Resources
56536  *-------------------------------------------------------------------------------
56537   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
56540  *-------------------------------------------------------------------------------
56541  * Coal Resources
56542  *-------------------------------------------------------------------------------
56543   
56545   
56546   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
56548  *-------------------------------------------------------------------------------
56549  * Climate
56550  *
56551  * Represents the climate
56552  * - based on the DICE model equations
56553  * - Radiative forcing for non CO2 ghgs
56554  * - parameters calibrated to reproduce MAGICC6.4 default response
56555  *
56556  *  Options:
56557  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
56558  * - $setglobal cooperate_on_climate {'YES','NO'}
56559  * - 'YES'(default): Countries within a coalition act in cooperation
56560  *   'NO': Countries within a coalition act individually
56561  *
56562  *-------------------------------------------------------------------------------
56563   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
56566  *-------------------------------------------------------------------------------
56567  * Long-run Damages from Climate Change
56568  * - Economic impacts
56569  * - Adaptation
56570  *-------------------------------------------------------------------------------
56571   
56573   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
56575  *-------------------------------------------------------------------------------
56576  * Light-duty Vehicles for Personal Transport
56577  *-------------------------------------------------------------------------------
56578   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
56581  *-------------------------------------------------------------------------------
56582  * Road Freight Transport
56583  *-------------------------------------------------------------------------------
56585   
56586   
56587   
56588   
56589   
56590   
56591  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
56593  *-------------------------------------------------------------------------------
56594  * Traditional Biomass
56595  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
56596  *  - require post_process to be launch before
56597  *-------------------------------------------------------------------------------
56598   
56600   
56601  * Optional modules
56602   
56603  * Policy modules
56604   
56605  * Calibration
56608   
56609  ;
56610   
56612   
---- Begin of Active File List
Level Type         Line  Filename
---------------------------------
    0 INPUT         147  C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\run_witch.gms
---- End of Active File List

---- Begin of Compile-time Variable List
Level SetVal                          Type       Text
-----------------------------------------------------
    0 nameout                         SCOPED     eqq_emi_lim_usa_1e-3
    0 verbose                         SCOPED     1
    0 n                               GLOBAL     witch17
    0 datapathext                     GLOBAL     witch17
    0 datapath                        GLOBAL     data_witch17/
    0 baseline                        GLOBAL     ssp2
    0 policy                          GLOBAL     bau
    0 cooperation                     GLOBAL     noncoop
    0 startgdx                        GLOBAL     data_witch17/results_ssp2_calib
    0 baugdx                          GLOBAL     data_witch17/results_ssp2_calib
    0 nameout                         GLOBAL     ssp2_bau
    0 outgdx                          GLOBAL     results_eqq_emi_lim_usa_1e-3
    0 calibgdx                        GLOBAL     data_witch17/data_calib
    0 tfpgdx                          GLOBAL     data_witch17/data_tfp_ssp2
    0 resdir                          GLOBAL     C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\
    0 algo                            GLOBAL     admm
    0 converged_if_all                GLOBAL     optimal
    0 max_iter                        GLOBAL     999
    0 min_iter                        GLOBAL     1
    0 sleep_factor                    GLOBAL     0.1
    0 max_soltime                     GLOBAL     1e7
    0 max_soliter                     GLOBAL     1e8
    0 pb_type                         GLOBAL     nlp
    0 pb_obj                          GLOBAL     OBJADMM
    0 admm_rho_oil                    GLOBAL     3e-9
    0 admm_rho_nip                    GLOBAL     2e0
    0 nmapping                        GLOBAL     witch17
    0 coalitions                      GLOBAL     c_brazil c_canada c_china c_europe c_india c_indonesia c_jpnkor c_laca c_mena c_mexico c_oceania c_sasia c_seasia c_southafrica c_ssa c_te c_usa
    0 cooperate_on_climate            GLOBAL     YES
    0 parallel                        GLOBAL     true
    0 utilitarian                     GLOBAL     
    0 gamma                           GLOBAL     0
    0 eta                             GLOBAL     0.66
    0 srtp                            GLOBAL     1
    0 capacity_constraint             GLOBAL     low
    0 ghgbaseline                     GLOBAL     ssp2
    0 fgasesbaseline                  GLOBAL     ssp2
    0 lubaseline                      GLOBAL     ssp2
    0 leak_input                      GLOBAL     0
    0 ccs_stor_cost                   GLOBAL     best
    0 ccs_stor_cap_max                GLOBAL     best
    0 nelcoal_basegr                  GLOBAL     (-1)
    0 solar_classes                   GLOBAL     full
    0 fossil_oil                      GLOBAL     M
    0 fossil_gas                      GLOBAL     M
    0 fossil_coal                     GLOBAL     M
    0 adap_efficiency                 GLOBAL     ssp2
    0 damcost                         GLOBAL     climcost
    0 tra_baseline                    GLOBAL     ssp2
    0 welfare_order                   GLOBAL     tn
    0 slow_iter                       GLOBAL     50
    0 slow_criteria                   GLOBAL     0.0009
    0 max_retry                       GLOBAL     10
    0 holdfixed                       GLOBAL     1
    0 solvergrid                      GLOBAL     file
    0 solvelink                       GLOBAL     3
    0 solver                          GLOBAL     conopt
    0 conopt_tolerance                GLOBAL     12
    0 admm_mu                         GLOBAL     5
    0 admm_tau                        GLOBAL     2
    0 admm_tau_max                    GLOBAL     10
    0 admm_csi_exp_oil                GLOBAL     0
    0 admm_csi_exp_nip                GLOBAL     0
    0 rerun                           GLOBAL     2
OS environment GDXCOMPRESS=1
---- End of Compile-time Variable List

---- Begin of Macro List
$macro valuein(takeyear,expr)  (smax(tt$(year(tt) eq &takeyear), &expr))
$macro poly(x,coeff)  sum(polydeg$(coeff), (coeff)*(x)**(ord(polydeg)-1))
$macro cast(expression,ss,sd)  sum(&ss$(sameas(&ss,&sd)), &expression)
$macro xiny(small,big)  sum(&big$sameas(&big,&small),1)
$macro sumjchild(x,jset,anode)  sum(j$map_j(&anode,j), cast(&x,&jset,j))
$macro savereport(reg)  solrep('&reg','objval')=witch_&reg.objval;solrep('&reg','solvestat')=witch_&reg.solvestat;solrep('&reg','modelstat')=witch_&reg.modelstat;solrep('&reg','iterusd')=witch_&reg.iterusd;solrep('&reg','resusd')=witch_&reg.resusd;solrep('&reg','numvar')=witch_&reg.numvar;solrep('&reg','numequ')=witch_&reg.numequ;solrep('&reg','numnz')=witch_&reg.numnz;solrep('&reg','numvarproj')=witch_&reg.numvarproj;solrep('&reg','numinfes')=witch_&reg.numinfes;solrep('&reg','numnopt')=witch_&reg.numnopt;solrep('&reg','domusd')=witch_&reg.domusd;
$macro last_iter(numiter)  ((ord(ssiter) le ord(siter)) and (ord(ssiter) ge (ord(siter) - (&numiter - 1))))
$macro loadvar(var,setdep,default)   prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', &var; if(execerror gt prevexecerrors, &var.l&&setdep = &default; execerror = prevexecerrors; last_load_went_wrong=1)
$macro loadvarbnd(var,setdep,default,bndlo,bndup)   loadvar(var,setdep,default); &var.lo&&setdep = &bndlo; &var.up&&setdep = &bndup; &var.l&&setdep$(&var.l&&setdep<&bndlo) = &bndlo; &var.l&&setdep$(&var.l&&setdep>&bndup) = &bndup;
$macro loadvarbndcond(var,setdep,cond,default,bndlo,bndup)   loadvar(var,'&&setdep$(&&cond)',default); &var.lo&&setdep$(&&cond) = &bndlo; &var.up&&setdep$(&&cond) = &bndup; &var.l&&setdep$((&&cond) and (&var.l&&setdep<&bndlo)) = &bndlo; &var.l&&setdep$((&&cond) and (&var.l&&setdep>&bndup)) = &bndup;
$macro load_from_ssp(par,idx,ssp,suxfile)   parameter ssp_&par(*,&&idx); execute_loaddc 'data_witch17/data_&suxfile' ssp_&par; &par(&&idx) = ssp_&par('&ssp',&&idx);
$macro putlog(msg)   put output; put_utility 'log' / &msg; putclose output;
$macro loadpar(par,setdep,default)   prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', &par; if(execerror gt prevexecerrors, &par&&setdep = &default; execerror = prevexecerrors; last_load_went_wrong=1)
$macro mapn(clt)  map_clt_n(&clt,n)
$macro mapnn(clt)  map_clt_n(&clt,nn)
$macro mapn_th(clt)  (map_clt_n(&clt,n) and (not tfix(t)) and (year(t) le yeoh))
$macro mapn_th1(clt)  (map_clt_n(&clt,n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))
$macro mapn_th2(clt)  (map_clt_n(&clt,n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh))
$macro mapn_th1_last(clt)  (map_clt_n(&clt,n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))
$macro time_th1_last  (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))
$macro cooprd  (sum(clt$(map_clt_n(clt,n) and rd_cooperation(rd,clt)),1) eq 1)
$macro nocooprd  (sum(clt$(map_clt_n(clt,n) and rd_cooperation(rd,clt)),1) ne 1)
$macro depreciation_rate(tech)  1 - exp( 1 / ( - lifetime(&tech,n) + (0.01/2) * lifetime(&tech,n)**2) )
$macro cobb(out,fac1id,fac1exp,fac2id,fac2exp)   q0(&out,n)*( (&fac1exp/q0(&fac1id,n))**(alpha(&fac1id,n))* (&fac2exp/q0(&fac2id,n))**(alpha(&fac2id,n)) )
$macro ces(out,fac1id,fac1exp,fac2id,fac2exp)   q0(&out,n)*( alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))**rho(&out,t)+ alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n))**rho(&out,t) )**(1/rho(&out,t))
$macro ces3(out,fac1id,fac1exp,fac2id,fac2exp,fac3id,fac3exp)   q0(&out,n)*( alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))**rho(&out,t)+ alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n))**rho(&out,t)+ alpha(&fac3id,n)*(&fac3exp/q0(&fac3id,n))**rho(&out,t) )**(1/rho(&out,t))
$macro lin(out,fac1id,fac1exp,fac2id,fac2exp)   q0(&out,n)*( alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))+ alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n)) )
$macro lin3(out,fac1id,fac1exp,fac2id,fac2exp,fac3id,fac3exp)   q0(&out,n)*( alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))+ alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n))+ alpha(&fac3id,n)*(&fac3exp/q0(&fac3id,n)) )
$macro savereport_with_loadhandle(clt)   witch_&clt.handle = remh('&clt'); execute_loadhandle witch_&clt; savereport(&clt)
$macro checkforproblems(clt)   if((solrep(&clt,'solvestat') ne 1) or (solrep(&clt,'modelstat') ne 2), cproblem(&clt) = yes; else cproblem(&clt) = no;)
$macro freezevar(name,idx)   &name.fx&&idx = &name.l&&idx;
$macro nullvar(name,idx)   &name.fx&&idx = 0;
$macro loadfix(name,idx,type)   &type FIX&name&&idx; execute_load '%fixgdx%.gdx',FIX&name=&name;
$macro tfixvar(name,idx)   loadfix(name,idx,variable) &name.fx&&idx$tfix(t) = FIX&name.l&&idx; &name.l&&idx$tfix(t) = FIX&name.l&&idx;
$macro tfix1var(name,idx)   loadfix(name,idx,variable) loop((t,tfix(tp1))$pre(t,tp1), &name.fx&&idx = FIX&name.l&&idx; &name.l&&idx = FIX&name.l&&idx; );
$macro tfixpar(name,idx)   loadfix(name,idx,parameter) &name&&idx$tfix(t) = FIX&name&&idx;
$macro sum_oilg(expr)  (sum(oilgg$map_oilgrade(oilg,oilgg), &expr))
$macro trbio_ratio(t)   min(1,trbio_ctr('beta',n)*log(mer2ppp(&t,n)*1e6*Q.l('y',&t,n)/l(&t,n))+trbio_ctr('alpha',n))
$macro forsameclt(action,clt)   if(sameas(&clt,'c_brazil'), &action(c_brazil)); if(sameas(&clt,'c_canada'), &action(c_canada)); if(sameas(&clt,'c_china'), &action(c_china)); if(sameas(&clt,'c_europe'), &action(c_europe)); if(sameas(&clt,'c_india'), &action(c_india)); if(sameas(&clt,'c_indonesia'), &action(c_indonesia)); if(sameas(&clt,'c_jpnkor'), &action(c_jpnkor)); if(sameas(&clt,'c_laca'), &action(c_laca)); if(sameas(&clt,'c_mena'), &action(c_mena)); if(sameas(&clt,'c_mexico'), &action(c_mexico)); if(sameas(&clt,'c_oceania'), &action(c_oceania)); if(sameas(&clt,'c_sasia'), &action(c_sasia)); if(sameas(&clt,'c_seasia'), &action(c_seasia)); if(sameas(&clt,'c_southafrica'), &action(c_southafrica)); if(sameas(&clt,'c_ssa'), &action(c_ssa)); if(sameas(&clt,'c_te'), &action(c_te)); if(sameas(&clt,'c_usa'), &action(c_usa)); ;
$macro launchsolve(clt)   solve witch_&clt maximizing OBJADMM using nlp; if((witch_&clt.solvelink eq 6) or (witch_&clt.solvelink eq 3), remh('&clt') = witch_&clt.handle; else savereport(&clt); checkforproblems('&clt'));
$macro seqsolve(clt)   witch_&clt.solvelink = 0; launchsolve(&clt); witch_&clt.solvelink = 3;
---- End of Macro List
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 2
WITCH 5.2.0
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\run_witch.gms
     2       28 IF EXIST       1      28  C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\n.inc
     3       77 IF EXIST       1      94  C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_calib.gdx
     4      106 BATINCLUDE     1     127  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
     5      115 BATINCLUDE     4       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
     6      167 BATINCLUDE     4      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
     7      194 BATINCLUDE     4      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
     8      201 INCLUDE        7       7  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\regions.conf
     9      206 BATINCLUDE     4      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
    10      217 INCLUDE        9      11  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\noncoop.conf
    11      230 BATINCLUDE     4      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
    12      246 BATINCLUDE     4      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
    13      256 BATINCLUDE     4      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
    14      262 BATINCLUDE     4      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
    15      271 BATINCLUDE     4      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
    16      280 BATINCLUDE     4      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
    17      307 BATINCLUDE     4      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
    18      313 BATINCLUDE     4      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
    19      319 BATINCLUDE     4      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
    20      336 BATINCLUDE     4      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
    21      342 BATINCLUDE     4      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
    22      360 BATINCLUDE     4      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
    23      377 BATINCLUDE     4      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
    24      392 BATINCLUDE     4      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
    25      398 BATINCLUDE     4      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
    26      405 BATINCLUDE     4      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
    27      412 BATINCLUDE     4      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
    28      430 BATINCLUDE     4      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
    29      448 BATINCLUDE     4      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
    30      456 BATINCLUDE     4      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
    31      470 BATINCLUDE     4      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
    32      477 BATINCLUDE     4      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
    33      495 BATINCLUDE     4      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
    34      504 BATINCLUDE     4      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
    35      521 BATINCLUDE     4      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
    36      541 BATINCLUDE     4      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
    37      564 BATINCLUDE     4      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
    38      590 BATINCLUDE     4      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
    39      602 BATINCLUDE     4      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
    40      614 BATINCLUDE     4      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
    41      630 INCLUDE        1     128  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\macros.gms
    42      809 BATINCLUDE     1     129  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
    43      818 BATINCLUDE    42       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
    44      854 BATINCLUDE    42      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
    45      884 INCLUDE       44      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\time.inc
    46     1552 BATINCLUDE    42      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
    47     1560 INCLUDE       46      13  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\n.inc
    48     1580 INCLUDE       46      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\regions.inc
    49     2100 BATINCLUDE    42      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
    50     2110 INCLUDE       49      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\noncoop.inc
    51     2158 BATINCLUDE    42      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
    52     2172 BATINCLUDE    42      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
    53     2215 BATINCLUDE    42      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
    54     2352 BATINCLUDE    42      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
    55     2399 BATINCLUDE    42      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
    56     2424 BATINCLUDE    42      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
    57     2468 BATINCLUDE    42      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
    58     2482 BATINCLUDE    42      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
    59     2515 BATINCLUDE    42      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
    60     2545 BATINCLUDE    42      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
    61     2607 BATINCLUDE    42      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
    62     2647 BATINCLUDE    42      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
    63     2713 BATINCLUDE    42      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
    64     2752 BATINCLUDE    42      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
    65     2823 BATINCLUDE    42      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
    66     2847 BATINCLUDE    42      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
    67     2879 BATINCLUDE    42      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
    68     2989 BATINCLUDE    42      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
    69     3015 BATINCLUDE    42      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
    70     3063 BATINCLUDE    42      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
    71     3122 BATINCLUDE    42      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
    72     3147 BATINCLUDE    42      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
    73     3185 BATINCLUDE    42      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
    74     3191 BATINCLUDE    42      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
    75     3206 BATINCLUDE    42      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
    76     3223 BATINCLUDE    42      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
    77     3275 BATINCLUDE    42      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
    78     3298 BATINCLUDE    42      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
    79     3357 BATINCLUDE    42      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
    80     3413 BATINCLUDE    42      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
    81     3449 BATINCLUDE     1     130  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
    82     3458 BATINCLUDE    81       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
    83     3489 BATINCLUDE    81      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
    84     3506 BATINCLUDE    81      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
    85     3512 BATINCLUDE    81      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
    86     3523 BATINCLUDE    81      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
    87     3542 BATINCLUDE    81      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
    88     3560 GDXIN         87      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_calib.gdx
    89     3578 GDXIN         87      69  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
    90     3606 GDXIN         87      97  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_baseline.gdx
    91     3618 GDXIN         87     109  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_tfp_ssp2.gdx
    92     3627 BATINCLUDE    81      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
    93     3648 GDXIN         92     152  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_calib.gdx
    94     3653 GDXIN         92     157  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
    95     3660 GDXIN         92     164  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_core_energy.gdx
    96     3713 BATINCLUDE    81      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
    97     3723 GDXIN         96      48  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_core_emissions.gdx
    98     3732 GDXIN         96      57  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
    99     3750 BATINCLUDE    81      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   100     3790 BATINCLUDE    81      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   101     3816 BATINCLUDE    81      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   102     3831 BATINCLUDE    81      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   103     3838 GDXIN        102      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_hydropower.gdx
   104     3845 BATINCLUDE    81      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   105     3927 GDXIN        104     109  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_systint.gdx
   106     3958 BATINCLUDE    81      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   107     3965 GDXIN        106      63  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_nuclear.gdx
   108     3982 BATINCLUDE    81      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   109     3991 GDXIN        108      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
   110     3999 GDXIN        108      59  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_ghg.gdx
   111     4032 BATINCLUDE    81      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   112     4053 BATINCLUDE    81      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   113     4060 GDXIN        112      49  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_landuse.gdx
   114     4070 GDXIN        112      59  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
   115     4088 BATINCLUDE    81      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   116     4095 GDXIN        115      72  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_elbio.gdx
   117     4102 BATINCLUDE    81      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   118     4110 GDXIN        117      25  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_trbiofuel.gdx
   119     4121 BATINCLUDE    81      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   120     4150 BATINCLUDE    81      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   121     4157 GDXIN        120     121  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_ccs.gdx
   122     4230 BATINCLUDE    81      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   123     4245 GDXIN        122      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_nelcoal.gdx
   124     4258 BATINCLUDE    81      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   125     4271 GDXIN        124      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_wind.gdx
   126     4296 GDXIN        124      78  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
   127     4334 BATINCLUDE    81      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   128     4342 GDXIN        127      71  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_solar.gdx
   129     4387 GDXIN        127     116  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
   130     4409 BATINCLUDE    81      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   131     4429 BATINCLUDE    81      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   132     4438 GDXIN        131      60  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_oil.gdx
   133     4463 GDXIN        131      85  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
   134     4472 BATINCLUDE    81      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   135     4478 BATINCLUDE    81      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   136     4485 GDXIN        135      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_gas.gdx
   137     4500 BATINCLUDE    81      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   138     4507 GDXIN        137      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_coal.gdx
   139     4527 BATINCLUDE    81      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   140     4546 GDXIN        139      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_climate.gdx
   141     4589 BATINCLUDE    81      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   142     4599 GDXIN        141      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_damage.gdx
   143     4635 BATINCLUDE    81      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   144     4642 GDXIN        143      66  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_transport.gdx
   145     4814 GDXIN        143     283  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_battery.gdx
   146     4822 BATINCLUDE    81      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   147     4828 GDXIN        146      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_transport_freight.gdx
   148     4899 BATINCLUDE    81      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   149     4908 GDXIN        148      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_trbiomass.gdx
   150     4936 BATINCLUDE     1     131  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   151     4945 BATINCLUDE   150       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   152     4953 BATINCLUDE   150      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   153     4964 BATINCLUDE   150      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   154     4970 BATINCLUDE   150      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   155     4981 BATINCLUDE   150      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   156     4987 BATINCLUDE   150      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   157     4997 BATINCLUDE   150      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   158     5007 GDXIN        157     221  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_tfp_ssp2.gdx
   159     5023 GDXIN        157     237  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_tfp_ssp2.gdx
   160     5037 BATINCLUDE   150      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   161     5051 BATINCLUDE   150      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   162     5060 BATINCLUDE   150      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   163     5081 BATINCLUDE   150      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   164     5087 BATINCLUDE   150      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   165     5093 BATINCLUDE   150      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   166     5108 BATINCLUDE   150      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   167     5114 BATINCLUDE   150      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   168     5122 BATINCLUDE   150      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   169     5130 BATINCLUDE   150      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   170     5136 BATINCLUDE   150      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   171     5142 BATINCLUDE   150      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   172     5149 BATINCLUDE   150      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   173     5156 BATINCLUDE   150      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   174     5163 BATINCLUDE   150      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   175     5177 BATINCLUDE   150      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   176     5185 BATINCLUDE   150      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   177     5193 BATINCLUDE   150      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   178     5200 BATINCLUDE   150      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   179     5208 BATINCLUDE   150      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   180     5214 BATINCLUDE   150      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   181     5220 BATINCLUDE   150      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   182     5228 BATINCLUDE   150      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   183     5246 BATINCLUDE   150      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   184     5255 BATINCLUDE   150      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   185     5261 BATINCLUDE   150      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   186     5273 BATINCLUDE   150      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   187     5289 BATINCLUDE     1     132  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   188     5298 BATINCLUDE   187       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   189     5312 BATINCLUDE   187      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   190     5323 BATINCLUDE   187      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   191     5329 BATINCLUDE   187      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   192     5340 BATINCLUDE   187      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   193     5358 BATINCLUDE   187      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   194     5374 BATINCLUDE   187      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   195     5403 BATINCLUDE   187      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   196     5412 BATINCLUDE   187      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   197     5440 BATINCLUDE   187      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   198     5461 BATINCLUDE   187      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   199     5471 BATINCLUDE   187      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   200     5477 BATINCLUDE   187      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   201     5487 BATINCLUDE   187      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   202     5493 BATINCLUDE   187      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   203     5507 BATINCLUDE   187      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   204     5515 BATINCLUDE   187      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   205     5521 BATINCLUDE   187      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   206     5527 BATINCLUDE   187      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   207     5534 BATINCLUDE   187      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   208     5541 BATINCLUDE   187      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   209     5576 BATINCLUDE   187      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   210     5595 BATINCLUDE   187      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   211     5621 BATINCLUDE   187      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   212     5646 BATINCLUDE   187      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   213     5706 BATINCLUDE   187      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   214     5736 BATINCLUDE   187      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   215     5755 BATINCLUDE   187      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   216     5761 BATINCLUDE   187      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   217     5776 BATINCLUDE   187      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   218     5800 BATINCLUDE   187      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   219     5816 BATINCLUDE   187      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   220     5885 BATINCLUDE   187      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   221     5924 BATINCLUDE   187      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   222     5946 BATINCLUDE     1     133  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   223     5955 BATINCLUDE   222       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   224     5968 BATINCLUDE   222      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   225     5986 BATINCLUDE   222      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   226     5992 BATINCLUDE   222      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   227     6003 BATINCLUDE   222      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   228     6014 BATINCLUDE   222      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   229     6050 BATINCLUDE   222      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   230     6148 BATINCLUDE   222      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   231     6187 BATINCLUDE   222      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   232     6218 BATINCLUDE   222      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   233     6239 BATINCLUDE   222      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   234     6245 BATINCLUDE   222      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   235     6272 BATINCLUDE   222      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   236     6296 BATINCLUDE   222      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   237     6317 BATINCLUDE   222      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   238     6341 BATINCLUDE   222      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   239     6358 BATINCLUDE   222      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   240     6387 BATINCLUDE   222      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   241     6404 BATINCLUDE   222      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   242     6420 BATINCLUDE   222      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   243     6448 BATINCLUDE   222      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   244     6478 BATINCLUDE   222      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   245     6515 BATINCLUDE   222      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   246     6570 BATINCLUDE   222      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   247     6627 BATINCLUDE   222      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   248     6634 BATINCLUDE   222      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   249     6689 BATINCLUDE   222      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   250     6695 BATINCLUDE   222      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   251     6707 BATINCLUDE   222      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   252     6721 BATINCLUDE   222      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   253     6760 BATINCLUDE   222      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   254     6784 BATINCLUDE   222      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   255     6862 BATINCLUDE   222      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   256     6894 BATINCLUDE   222      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   257     6915 BATINCLUDE     1     134  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   258     6924 BATINCLUDE   257       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   259     6937 BATINCLUDE   257      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   260     6948 BATINCLUDE   257      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   261     6954 BATINCLUDE   257      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   262     6965 BATINCLUDE   257      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   263     6971 BATINCLUDE   257      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   264     6981 BATINCLUDE   257      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   265     6987 BATINCLUDE   257      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   266     6996 BATINCLUDE   257      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   267     7005 BATINCLUDE   257      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   268     7053 BATINCLUDE   257      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   269     7059 BATINCLUDE   257      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   270     7065 BATINCLUDE   257      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   271     7075 BATINCLUDE   257      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   272     7081 BATINCLUDE   257      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   273     7089 BATINCLUDE   257      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   274     7097 BATINCLUDE   257      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   275     7108 BATINCLUDE   257      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   276     7114 BATINCLUDE   257      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   277     7121 BATINCLUDE   257      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   278     7128 BATINCLUDE   257      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   279     7135 BATINCLUDE   257      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   280     7144 BATINCLUDE   257      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   281     7152 BATINCLUDE   257      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   282     7160 BATINCLUDE   257      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   283     7167 BATINCLUDE   257      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   284     7175 BATINCLUDE   257      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   285     7181 BATINCLUDE   257      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   286     7187 BATINCLUDE   257      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   287     7195 BATINCLUDE   257      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   288     7213 BATINCLUDE   257      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   289     7222 BATINCLUDE   257      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   290     7228 BATINCLUDE   257      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   291     7246 BATINCLUDE   257      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   292     7266 INCLUDE        1     139  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algorithm.gms
   293     7275 BATINCLUDE   292       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\solve.gms
   294     7339 BATINCLUDE   292      11  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
   295     7424 BATINCLUDE   294     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
   296     7469 BATINCLUDE   292      13  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
   297     7542 BATINCLUDE   292      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\model.gms
   298     7551 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   299     7560 BATINCLUDE   298       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   300     7573 BATINCLUDE   298      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   301     7584 BATINCLUDE   298      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   302     7590 BATINCLUDE   298      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   303     7601 BATINCLUDE   298      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   304     7612 BATINCLUDE   298      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   305     7630 BATINCLUDE   298      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   306     7657 BATINCLUDE   298      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   307     7680 BATINCLUDE   298      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   308     7699 BATINCLUDE   298      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   309     7720 BATINCLUDE   298      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   310     7726 BATINCLUDE   298      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   311     7732 BATINCLUDE   298      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   312     7752 BATINCLUDE   298      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   313     7758 BATINCLUDE   298      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   314     7773 BATINCLUDE   298      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   315     7786 BATINCLUDE   298      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   316     7797 BATINCLUDE   298      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   317     7803 BATINCLUDE   298      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   318     7810 BATINCLUDE   298      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   319     7823 BATINCLUDE   298      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   320     7839 BATINCLUDE   298      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   321     7854 BATINCLUDE   298      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   322     7875 BATINCLUDE   298      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   323     7898 BATINCLUDE   298      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   324     7905 BATINCLUDE   298      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   325     7925 BATINCLUDE   298      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   326     7931 BATINCLUDE   298      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   327     7937 BATINCLUDE   298      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   328     7945 BATINCLUDE   298      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   329     7968 BATINCLUDE   298      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   330     7982 BATINCLUDE   298      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   331     8000 BATINCLUDE   298      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   332     8022 BATINCLUDE   298      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   333     8040 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   334     8049 BATINCLUDE   333       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   335     8085 BATINCLUDE   333      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   336     8096 BATINCLUDE   333      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   337     8102 BATINCLUDE   333      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   338     8113 BATINCLUDE   333      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   339     8152 BATINCLUDE   333      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   340     8210 BATINCLUDE   333      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   341     8314 BATINCLUDE   333      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   342     8358 BATINCLUDE   333      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   343     8408 BATINCLUDE   333      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   344     8429 BATINCLUDE   333      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   345     8435 BATINCLUDE   333      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   346     8441 BATINCLUDE   333      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   347     8512 BATINCLUDE   333      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   348     8518 BATINCLUDE   333      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   349     8583 BATINCLUDE   333      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   350     8597 BATINCLUDE   333      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   351     8616 BATINCLUDE   333      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   352     8622 BATINCLUDE   333      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   353     8629 BATINCLUDE   333      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   354     8648 BATINCLUDE   333      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   355     8681 BATINCLUDE   333      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   356     8715 BATINCLUDE   333      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   357     8768 BATINCLUDE   333      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   358     8829 BATINCLUDE   333      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   359     8836 BATINCLUDE   333      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   360     8880 BATINCLUDE   333      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   361     8886 BATINCLUDE   333      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   362     8892 BATINCLUDE   333      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   363     8900 BATINCLUDE   333      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   364     8923 BATINCLUDE   333      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   365     8937 BATINCLUDE   333      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   366     8975 BATINCLUDE   333      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   367     9014 BATINCLUDE   333      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   368     9033 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   369     9042 BATINCLUDE   368       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   370     9055 BATINCLUDE   368      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   371     9066 BATINCLUDE   368      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   372     9072 BATINCLUDE   368      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   373     9083 BATINCLUDE   368      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   374     9094 BATINCLUDE   368      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   375     9112 BATINCLUDE   368      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   376     9139 BATINCLUDE   368      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   377     9162 BATINCLUDE   368      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   378     9181 BATINCLUDE   368      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   379     9202 BATINCLUDE   368      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   380     9208 BATINCLUDE   368      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   381     9214 BATINCLUDE   368      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   382     9234 BATINCLUDE   368      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   383     9240 BATINCLUDE   368      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   384     9255 BATINCLUDE   368      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   385     9268 BATINCLUDE   368      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   386     9279 BATINCLUDE   368      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   387     9285 BATINCLUDE   368      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   388     9292 BATINCLUDE   368      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   389     9305 BATINCLUDE   368      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   390     9321 BATINCLUDE   368      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   391     9336 BATINCLUDE   368      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   392     9357 BATINCLUDE   368      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   393     9380 BATINCLUDE   368      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   394     9387 BATINCLUDE   368      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   395     9407 BATINCLUDE   368      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   396     9413 BATINCLUDE   368      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   397     9419 BATINCLUDE   368      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   398     9427 BATINCLUDE   368      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   399     9450 BATINCLUDE   368      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   400     9464 BATINCLUDE   368      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   401     9482 BATINCLUDE   368      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   402     9504 BATINCLUDE   368      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   403     9533 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   404     9542 BATINCLUDE   403       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   405     9555 BATINCLUDE   403      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   406     9566 BATINCLUDE   403      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   407     9572 BATINCLUDE   403      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   408     9583 BATINCLUDE   403      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   409     9594 BATINCLUDE   403      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   410     9612 BATINCLUDE   403      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   411     9639 BATINCLUDE   403      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   412     9662 BATINCLUDE   403      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   413     9681 BATINCLUDE   403      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   414     9702 BATINCLUDE   403      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   415     9708 BATINCLUDE   403      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   416     9714 BATINCLUDE   403      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   417     9734 BATINCLUDE   403      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   418     9740 BATINCLUDE   403      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   419     9755 BATINCLUDE   403      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   420     9768 BATINCLUDE   403      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   421     9779 BATINCLUDE   403      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   422     9785 BATINCLUDE   403      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   423     9792 BATINCLUDE   403      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   424     9805 BATINCLUDE   403      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   425     9821 BATINCLUDE   403      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   426     9836 BATINCLUDE   403      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   427     9857 BATINCLUDE   403      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   428     9880 BATINCLUDE   403      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   429     9887 BATINCLUDE   403      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   430     9907 BATINCLUDE   403      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   431     9913 BATINCLUDE   403      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   432     9919 BATINCLUDE   403      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   433     9927 BATINCLUDE   403      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   434     9950 BATINCLUDE   403      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   435     9964 BATINCLUDE   403      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   436     9982 BATINCLUDE   403      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   437    10004 BATINCLUDE   403      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   438    10022 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   439    10031 BATINCLUDE   438       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   440    10067 BATINCLUDE   438      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   441    10078 BATINCLUDE   438      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   442    10084 BATINCLUDE   438      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   443    10095 BATINCLUDE   438      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   444    10134 BATINCLUDE   438      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   445    10192 BATINCLUDE   438      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   446    10296 BATINCLUDE   438      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   447    10340 BATINCLUDE   438      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   448    10390 BATINCLUDE   438      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   449    10411 BATINCLUDE   438      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   450    10417 BATINCLUDE   438      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   451    10423 BATINCLUDE   438      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   452    10494 BATINCLUDE   438      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   453    10500 BATINCLUDE   438      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   454    10565 BATINCLUDE   438      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   455    10579 BATINCLUDE   438      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   456    10598 BATINCLUDE   438      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   457    10604 BATINCLUDE   438      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   458    10611 BATINCLUDE   438      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   459    10630 BATINCLUDE   438      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   460    10663 BATINCLUDE   438      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   461    10697 BATINCLUDE   438      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   462    10750 BATINCLUDE   438      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   463    10811 BATINCLUDE   438      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   464    10818 BATINCLUDE   438      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   465    10862 BATINCLUDE   438      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   466    10868 BATINCLUDE   438      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   467    10874 BATINCLUDE   438      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   468    10882 BATINCLUDE   438      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   469    10905 BATINCLUDE   438      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   470    10919 BATINCLUDE   438      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   471    10957 BATINCLUDE   438      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   472    10996 BATINCLUDE   438      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   473    11015 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   474    11024 BATINCLUDE   473       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   475    11037 BATINCLUDE   473      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   476    11048 BATINCLUDE   473      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   477    11054 BATINCLUDE   473      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   478    11065 BATINCLUDE   473      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   479    11076 BATINCLUDE   473      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   480    11094 BATINCLUDE   473      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   481    11121 BATINCLUDE   473      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   482    11144 BATINCLUDE   473      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   483    11163 BATINCLUDE   473      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   484    11184 BATINCLUDE   473      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   485    11190 BATINCLUDE   473      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   486    11196 BATINCLUDE   473      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   487    11216 BATINCLUDE   473      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   488    11222 BATINCLUDE   473      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   489    11237 BATINCLUDE   473      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   490    11250 BATINCLUDE   473      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   491    11261 BATINCLUDE   473      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   492    11267 BATINCLUDE   473      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   493    11274 BATINCLUDE   473      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   494    11287 BATINCLUDE   473      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   495    11303 BATINCLUDE   473      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   496    11318 BATINCLUDE   473      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   497    11339 BATINCLUDE   473      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   498    11362 BATINCLUDE   473      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   499    11369 BATINCLUDE   473      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   500    11389 BATINCLUDE   473      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   501    11395 BATINCLUDE   473      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   502    11401 BATINCLUDE   473      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   503    11409 BATINCLUDE   473      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   504    11432 BATINCLUDE   473      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   505    11446 BATINCLUDE   473      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   506    11464 BATINCLUDE   473      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   507    11486 BATINCLUDE   473      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   508    11515 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   509    11524 BATINCLUDE   508       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   510    11537 BATINCLUDE   508      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   511    11548 BATINCLUDE   508      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   512    11554 BATINCLUDE   508      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   513    11565 BATINCLUDE   508      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   514    11576 BATINCLUDE   508      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   515    11594 BATINCLUDE   508      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   516    11621 BATINCLUDE   508      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   517    11644 BATINCLUDE   508      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   518    11663 BATINCLUDE   508      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   519    11684 BATINCLUDE   508      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   520    11690 BATINCLUDE   508      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   521    11696 BATINCLUDE   508      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   522    11716 BATINCLUDE   508      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   523    11722 BATINCLUDE   508      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   524    11737 BATINCLUDE   508      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   525    11750 BATINCLUDE   508      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   526    11761 BATINCLUDE   508      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   527    11767 BATINCLUDE   508      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   528    11774 BATINCLUDE   508      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   529    11787 BATINCLUDE   508      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   530    11803 BATINCLUDE   508      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   531    11818 BATINCLUDE   508      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   532    11839 BATINCLUDE   508      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   533    11862 BATINCLUDE   508      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   534    11869 BATINCLUDE   508      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   535    11889 BATINCLUDE   508      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   536    11895 BATINCLUDE   508      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   537    11901 BATINCLUDE   508      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   538    11909 BATINCLUDE   508      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   539    11932 BATINCLUDE   508      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   540    11946 BATINCLUDE   508      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   541    11964 BATINCLUDE   508      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   542    11986 BATINCLUDE   508      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   543    12004 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   544    12013 BATINCLUDE   543       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   545    12049 BATINCLUDE   543      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   546    12060 BATINCLUDE   543      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   547    12066 BATINCLUDE   543      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   548    12077 BATINCLUDE   543      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   549    12116 BATINCLUDE   543      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   550    12174 BATINCLUDE   543      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   551    12278 BATINCLUDE   543      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   552    12322 BATINCLUDE   543      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   553    12372 BATINCLUDE   543      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   554    12393 BATINCLUDE   543      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   555    12399 BATINCLUDE   543      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   556    12405 BATINCLUDE   543      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   557    12476 BATINCLUDE   543      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   558    12482 BATINCLUDE   543      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   559    12547 BATINCLUDE   543      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   560    12561 BATINCLUDE   543      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   561    12580 BATINCLUDE   543      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   562    12586 BATINCLUDE   543      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   563    12593 BATINCLUDE   543      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   564    12612 BATINCLUDE   543      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   565    12645 BATINCLUDE   543      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   566    12679 BATINCLUDE   543      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   567    12732 BATINCLUDE   543      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   568    12793 BATINCLUDE   543      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   569    12800 BATINCLUDE   543      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   570    12844 BATINCLUDE   543      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   571    12850 BATINCLUDE   543      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   572    12856 BATINCLUDE   543      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   573    12864 BATINCLUDE   543      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   574    12887 BATINCLUDE   543      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   575    12901 BATINCLUDE   543      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   576    12939 BATINCLUDE   543      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   577    12978 BATINCLUDE   543      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   578    12997 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   579    13006 BATINCLUDE   578       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   580    13019 BATINCLUDE   578      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   581    13030 BATINCLUDE   578      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   582    13036 BATINCLUDE   578      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   583    13047 BATINCLUDE   578      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   584    13058 BATINCLUDE   578      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   585    13076 BATINCLUDE   578      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   586    13103 BATINCLUDE   578      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   587    13126 BATINCLUDE   578      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   588    13145 BATINCLUDE   578      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   589    13166 BATINCLUDE   578      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   590    13172 BATINCLUDE   578      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   591    13178 BATINCLUDE   578      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   592    13198 BATINCLUDE   578      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   593    13204 BATINCLUDE   578      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   594    13219 BATINCLUDE   578      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   595    13232 BATINCLUDE   578      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   596    13243 BATINCLUDE   578      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   597    13249 BATINCLUDE   578      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   598    13256 BATINCLUDE   578      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   599    13269 BATINCLUDE   578      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   600    13285 BATINCLUDE   578      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   601    13300 BATINCLUDE   578      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   602    13321 BATINCLUDE   578      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   603    13344 BATINCLUDE   578      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   604    13351 BATINCLUDE   578      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   605    13371 BATINCLUDE   578      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   606    13377 BATINCLUDE   578      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   607    13383 BATINCLUDE   578      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   608    13391 BATINCLUDE   578      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   609    13414 BATINCLUDE   578      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   610    13428 BATINCLUDE   578      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   611    13446 BATINCLUDE   578      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   612    13468 BATINCLUDE   578      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   613    13497 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   614    13506 BATINCLUDE   613       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   615    13519 BATINCLUDE   613      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   616    13530 BATINCLUDE   613      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   617    13536 BATINCLUDE   613      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   618    13547 BATINCLUDE   613      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   619    13558 BATINCLUDE   613      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   620    13576 BATINCLUDE   613      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   621    13603 BATINCLUDE   613      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   622    13626 BATINCLUDE   613      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   623    13645 BATINCLUDE   613      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   624    13666 BATINCLUDE   613      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   625    13672 BATINCLUDE   613      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   626    13678 BATINCLUDE   613      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   627    13698 BATINCLUDE   613      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   628    13704 BATINCLUDE   613      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   629    13719 BATINCLUDE   613      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   630    13732 BATINCLUDE   613      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   631    13743 BATINCLUDE   613      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   632    13749 BATINCLUDE   613      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   633    13756 BATINCLUDE   613      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   634    13769 BATINCLUDE   613      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   635    13785 BATINCLUDE   613      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   636    13800 BATINCLUDE   613      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   637    13821 BATINCLUDE   613      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   638    13844 BATINCLUDE   613      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   639    13851 BATINCLUDE   613      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   640    13871 BATINCLUDE   613      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   641    13877 BATINCLUDE   613      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   642    13883 BATINCLUDE   613      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   643    13891 BATINCLUDE   613      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   644    13914 BATINCLUDE   613      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   645    13928 BATINCLUDE   613      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   646    13946 BATINCLUDE   613      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   647    13968 BATINCLUDE   613      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   648    13986 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   649    13995 BATINCLUDE   648       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   650    14031 BATINCLUDE   648      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   651    14042 BATINCLUDE   648      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   652    14048 BATINCLUDE   648      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   653    14059 BATINCLUDE   648      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   654    14098 BATINCLUDE   648      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   655    14156 BATINCLUDE   648      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   656    14260 BATINCLUDE   648      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   657    14304 BATINCLUDE   648      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   658    14354 BATINCLUDE   648      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   659    14375 BATINCLUDE   648      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   660    14381 BATINCLUDE   648      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   661    14387 BATINCLUDE   648      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   662    14458 BATINCLUDE   648      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   663    14464 BATINCLUDE   648      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   664    14529 BATINCLUDE   648      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   665    14543 BATINCLUDE   648      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   666    14562 BATINCLUDE   648      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   667    14568 BATINCLUDE   648      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   668    14575 BATINCLUDE   648      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   669    14594 BATINCLUDE   648      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   670    14627 BATINCLUDE   648      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   671    14661 BATINCLUDE   648      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   672    14714 BATINCLUDE   648      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   673    14775 BATINCLUDE   648      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   674    14782 BATINCLUDE   648      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   675    14826 BATINCLUDE   648      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   676    14832 BATINCLUDE   648      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   677    14838 BATINCLUDE   648      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   678    14846 BATINCLUDE   648      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   679    14869 BATINCLUDE   648      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   680    14883 BATINCLUDE   648      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   681    14921 BATINCLUDE   648      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   682    14960 BATINCLUDE   648      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   683    14979 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   684    14988 BATINCLUDE   683       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   685    15001 BATINCLUDE   683      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   686    15012 BATINCLUDE   683      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   687    15018 BATINCLUDE   683      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   688    15029 BATINCLUDE   683      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   689    15040 BATINCLUDE   683      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   690    15058 BATINCLUDE   683      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   691    15085 BATINCLUDE   683      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   692    15108 BATINCLUDE   683      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   693    15127 BATINCLUDE   683      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   694    15148 BATINCLUDE   683      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   695    15154 BATINCLUDE   683      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   696    15160 BATINCLUDE   683      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   697    15180 BATINCLUDE   683      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   698    15186 BATINCLUDE   683      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   699    15201 BATINCLUDE   683      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   700    15214 BATINCLUDE   683      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   701    15225 BATINCLUDE   683      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   702    15231 BATINCLUDE   683      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   703    15238 BATINCLUDE   683      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   704    15251 BATINCLUDE   683      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   705    15267 BATINCLUDE   683      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   706    15282 BATINCLUDE   683      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   707    15303 BATINCLUDE   683      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   708    15326 BATINCLUDE   683      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   709    15333 BATINCLUDE   683      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   710    15353 BATINCLUDE   683      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   711    15359 BATINCLUDE   683      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   712    15365 BATINCLUDE   683      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   713    15373 BATINCLUDE   683      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   714    15396 BATINCLUDE   683      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   715    15410 BATINCLUDE   683      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   716    15428 BATINCLUDE   683      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   717    15450 BATINCLUDE   683      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   718    15479 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   719    15488 BATINCLUDE   718       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   720    15501 BATINCLUDE   718      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   721    15512 BATINCLUDE   718      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   722    15518 BATINCLUDE   718      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   723    15529 BATINCLUDE   718      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   724    15540 BATINCLUDE   718      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   725    15558 BATINCLUDE   718      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   726    15585 BATINCLUDE   718      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   727    15608 BATINCLUDE   718      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   728    15627 BATINCLUDE   718      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   729    15648 BATINCLUDE   718      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   730    15654 BATINCLUDE   718      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   731    15660 BATINCLUDE   718      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   732    15680 BATINCLUDE   718      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   733    15686 BATINCLUDE   718      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   734    15701 BATINCLUDE   718      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   735    15714 BATINCLUDE   718      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   736    15725 BATINCLUDE   718      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   737    15731 BATINCLUDE   718      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   738    15738 BATINCLUDE   718      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   739    15751 BATINCLUDE   718      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   740    15767 BATINCLUDE   718      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   741    15782 BATINCLUDE   718      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   742    15803 BATINCLUDE   718      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   743    15826 BATINCLUDE   718      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   744    15833 BATINCLUDE   718      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   745    15853 BATINCLUDE   718      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   746    15859 BATINCLUDE   718      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   747    15865 BATINCLUDE   718      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   748    15873 BATINCLUDE   718      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   749    15896 BATINCLUDE   718      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   750    15910 BATINCLUDE   718      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   751    15928 BATINCLUDE   718      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   752    15950 BATINCLUDE   718      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   753    15968 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   754    15977 BATINCLUDE   753       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   755    16013 BATINCLUDE   753      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   756    16024 BATINCLUDE   753      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   757    16030 BATINCLUDE   753      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   758    16041 BATINCLUDE   753      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   759    16080 BATINCLUDE   753      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   760    16138 BATINCLUDE   753      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   761    16242 BATINCLUDE   753      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   762    16286 BATINCLUDE   753      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   763    16336 BATINCLUDE   753      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   764    16357 BATINCLUDE   753      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   765    16363 BATINCLUDE   753      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   766    16369 BATINCLUDE   753      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   767    16440 BATINCLUDE   753      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   768    16446 BATINCLUDE   753      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   769    16511 BATINCLUDE   753      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   770    16525 BATINCLUDE   753      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   771    16544 BATINCLUDE   753      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   772    16550 BATINCLUDE   753      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   773    16557 BATINCLUDE   753      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   774    16576 BATINCLUDE   753      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   775    16609 BATINCLUDE   753      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   776    16643 BATINCLUDE   753      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   777    16696 BATINCLUDE   753      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   778    16757 BATINCLUDE   753      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   779    16764 BATINCLUDE   753      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   780    16808 BATINCLUDE   753      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   781    16814 BATINCLUDE   753      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   782    16820 BATINCLUDE   753      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   783    16828 BATINCLUDE   753      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   784    16851 BATINCLUDE   753      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   785    16865 BATINCLUDE   753      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   786    16903 BATINCLUDE   753      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   787    16942 BATINCLUDE   753      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   788    16961 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   789    16970 BATINCLUDE   788       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   790    16983 BATINCLUDE   788      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   791    16994 BATINCLUDE   788      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   792    17000 BATINCLUDE   788      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   793    17011 BATINCLUDE   788      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   794    17022 BATINCLUDE   788      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   795    17040 BATINCLUDE   788      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   796    17067 BATINCLUDE   788      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   797    17090 BATINCLUDE   788      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   798    17109 BATINCLUDE   788      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   799    17130 BATINCLUDE   788      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   800    17136 BATINCLUDE   788      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   801    17142 BATINCLUDE   788      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   802    17162 BATINCLUDE   788      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   803    17168 BATINCLUDE   788      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   804    17183 BATINCLUDE   788      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   805    17196 BATINCLUDE   788      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   806    17207 BATINCLUDE   788      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   807    17213 BATINCLUDE   788      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   808    17220 BATINCLUDE   788      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   809    17233 BATINCLUDE   788      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   810    17249 BATINCLUDE   788      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   811    17264 BATINCLUDE   788      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   812    17285 BATINCLUDE   788      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   813    17308 BATINCLUDE   788      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   814    17315 BATINCLUDE   788      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   815    17335 BATINCLUDE   788      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   816    17341 BATINCLUDE   788      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   817    17347 BATINCLUDE   788      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   818    17355 BATINCLUDE   788      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   819    17378 BATINCLUDE   788      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   820    17392 BATINCLUDE   788      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   821    17410 BATINCLUDE   788      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   822    17432 BATINCLUDE   788      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   823    17461 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   824    17470 BATINCLUDE   823       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   825    17483 BATINCLUDE   823      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   826    17494 BATINCLUDE   823      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   827    17500 BATINCLUDE   823      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   828    17511 BATINCLUDE   823      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   829    17522 BATINCLUDE   823      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   830    17540 BATINCLUDE   823      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   831    17567 BATINCLUDE   823      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   832    17590 BATINCLUDE   823      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   833    17609 BATINCLUDE   823      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   834    17630 BATINCLUDE   823      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   835    17636 BATINCLUDE   823      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   836    17642 BATINCLUDE   823      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   837    17662 BATINCLUDE   823      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   838    17668 BATINCLUDE   823      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   839    17683 BATINCLUDE   823      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   840    17696 BATINCLUDE   823      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   841    17707 BATINCLUDE   823      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   842    17713 BATINCLUDE   823      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   843    17720 BATINCLUDE   823      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   844    17733 BATINCLUDE   823      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   845    17749 BATINCLUDE   823      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   846    17764 BATINCLUDE   823      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   847    17785 BATINCLUDE   823      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   848    17808 BATINCLUDE   823      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   849    17815 BATINCLUDE   823      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   850    17835 BATINCLUDE   823      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   851    17841 BATINCLUDE   823      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   852    17847 BATINCLUDE   823      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   853    17855 BATINCLUDE   823      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   854    17878 BATINCLUDE   823      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   855    17892 BATINCLUDE   823      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   856    17910 BATINCLUDE   823      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   857    17932 BATINCLUDE   823      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   858    17950 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   859    17959 BATINCLUDE   858       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   860    17995 BATINCLUDE   858      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   861    18006 BATINCLUDE   858      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   862    18012 BATINCLUDE   858      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   863    18023 BATINCLUDE   858      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   864    18062 BATINCLUDE   858      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   865    18120 BATINCLUDE   858      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   866    18224 BATINCLUDE   858      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   867    18268 BATINCLUDE   858      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   868    18318 BATINCLUDE   858      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   869    18339 BATINCLUDE   858      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   870    18345 BATINCLUDE   858      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   871    18351 BATINCLUDE   858      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   872    18422 BATINCLUDE   858      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   873    18428 BATINCLUDE   858      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   874    18493 BATINCLUDE   858      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   875    18507 BATINCLUDE   858      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   876    18526 BATINCLUDE   858      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   877    18532 BATINCLUDE   858      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   878    18539 BATINCLUDE   858      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   879    18558 BATINCLUDE   858      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   880    18591 BATINCLUDE   858      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   881    18625 BATINCLUDE   858      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   882    18678 BATINCLUDE   858      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   883    18739 BATINCLUDE   858      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   884    18746 BATINCLUDE   858      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   885    18790 BATINCLUDE   858      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   886    18796 BATINCLUDE   858      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   887    18802 BATINCLUDE   858      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   888    18810 BATINCLUDE   858      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   889    18833 BATINCLUDE   858      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   890    18847 BATINCLUDE   858      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   891    18885 BATINCLUDE   858      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   892    18924 BATINCLUDE   858      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   893    18943 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   894    18952 BATINCLUDE   893       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   895    18965 BATINCLUDE   893      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   896    18976 BATINCLUDE   893      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   897    18982 BATINCLUDE   893      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   898    18993 BATINCLUDE   893      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   899    19004 BATINCLUDE   893      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   900    19022 BATINCLUDE   893      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   901    19049 BATINCLUDE   893      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   902    19072 BATINCLUDE   893      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   903    19091 BATINCLUDE   893      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   904    19112 BATINCLUDE   893      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   905    19118 BATINCLUDE   893      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   906    19124 BATINCLUDE   893      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   907    19144 BATINCLUDE   893      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   908    19150 BATINCLUDE   893      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   909    19165 BATINCLUDE   893      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   910    19178 BATINCLUDE   893      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   911    19189 BATINCLUDE   893      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   912    19195 BATINCLUDE   893      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   913    19202 BATINCLUDE   893      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   914    19215 BATINCLUDE   893      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   915    19231 BATINCLUDE   893      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   916    19246 BATINCLUDE   893      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   917    19267 BATINCLUDE   893      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   918    19290 BATINCLUDE   893      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   919    19297 BATINCLUDE   893      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   920    19317 BATINCLUDE   893      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   921    19323 BATINCLUDE   893      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   922    19329 BATINCLUDE   893      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   923    19337 BATINCLUDE   893      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   924    19360 BATINCLUDE   893      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   925    19374 BATINCLUDE   893      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   926    19392 BATINCLUDE   893      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   927    19414 BATINCLUDE   893      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   928    19443 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   929    19452 BATINCLUDE   928       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   930    19465 BATINCLUDE   928      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   931    19476 BATINCLUDE   928      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   932    19482 BATINCLUDE   928      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   933    19493 BATINCLUDE   928      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   934    19504 BATINCLUDE   928      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   935    19522 BATINCLUDE   928      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   936    19549 BATINCLUDE   928      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   937    19572 BATINCLUDE   928      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   938    19591 BATINCLUDE   928      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   939    19612 BATINCLUDE   928      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   940    19618 BATINCLUDE   928      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   941    19624 BATINCLUDE   928      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   942    19644 BATINCLUDE   928      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   943    19650 BATINCLUDE   928      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   944    19665 BATINCLUDE   928      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   945    19678 BATINCLUDE   928      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   946    19689 BATINCLUDE   928      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   947    19695 BATINCLUDE   928      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   948    19702 BATINCLUDE   928      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   949    19715 BATINCLUDE   928      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   950    19731 BATINCLUDE   928      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   951    19746 BATINCLUDE   928      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   952    19767 BATINCLUDE   928      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   953    19790 BATINCLUDE   928      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   954    19797 BATINCLUDE   928      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   955    19817 BATINCLUDE   928      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   956    19823 BATINCLUDE   928      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   957    19829 BATINCLUDE   928      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   958    19837 BATINCLUDE   928      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   959    19860 BATINCLUDE   928      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   960    19874 BATINCLUDE   928      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   961    19892 BATINCLUDE   928      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   962    19914 BATINCLUDE   928      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   963    19932 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   964    19941 BATINCLUDE   963       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   965    19977 BATINCLUDE   963      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   966    19988 BATINCLUDE   963      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   967    19994 BATINCLUDE   963      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   968    20005 BATINCLUDE   963      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   969    20044 BATINCLUDE   963      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   970    20102 BATINCLUDE   963      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   971    20206 BATINCLUDE   963      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   972    20250 BATINCLUDE   963      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   973    20300 BATINCLUDE   963      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   974    20321 BATINCLUDE   963      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   975    20327 BATINCLUDE   963      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   976    20333 BATINCLUDE   963      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   977    20404 BATINCLUDE   963      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   978    20410 BATINCLUDE   963      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   979    20475 BATINCLUDE   963      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   980    20489 BATINCLUDE   963      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   981    20508 BATINCLUDE   963      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   982    20514 BATINCLUDE   963      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   983    20521 BATINCLUDE   963      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   984    20540 BATINCLUDE   963      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   985    20573 BATINCLUDE   963      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   986    20607 BATINCLUDE   963      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   987    20660 BATINCLUDE   963      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   988    20721 BATINCLUDE   963      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   989    20728 BATINCLUDE   963      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   990    20772 BATINCLUDE   963      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   991    20778 BATINCLUDE   963      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   992    20784 BATINCLUDE   963      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   993    20792 BATINCLUDE   963      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   994    20815 BATINCLUDE   963      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   995    20829 BATINCLUDE   963      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   996    20867 BATINCLUDE   963      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   997    20906 BATINCLUDE   963      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   998    20925 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   999    20934 BATINCLUDE   998       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1000    20947 BATINCLUDE   998      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1001    20958 BATINCLUDE   998      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1002    20964 BATINCLUDE   998      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1003    20975 BATINCLUDE   998      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1004    20986 BATINCLUDE   998      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1005    21004 BATINCLUDE   998      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1006    21031 BATINCLUDE   998      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1007    21054 BATINCLUDE   998      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1008    21073 BATINCLUDE   998      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1009    21094 BATINCLUDE   998      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1010    21100 BATINCLUDE   998      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1011    21106 BATINCLUDE   998      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1012    21126 BATINCLUDE   998      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1013    21132 BATINCLUDE   998      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1014    21147 BATINCLUDE   998      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1015    21160 BATINCLUDE   998      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1016    21171 BATINCLUDE   998      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1017    21177 BATINCLUDE   998      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1018    21184 BATINCLUDE   998      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1019    21197 BATINCLUDE   998      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1020    21213 BATINCLUDE   998      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1021    21228 BATINCLUDE   998      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1022    21249 BATINCLUDE   998      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1023    21272 BATINCLUDE   998      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1024    21279 BATINCLUDE   998      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1025    21299 BATINCLUDE   998      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1026    21305 BATINCLUDE   998      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1027    21311 BATINCLUDE   998      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1028    21319 BATINCLUDE   998      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1029    21342 BATINCLUDE   998      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1030    21356 BATINCLUDE   998      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1031    21374 BATINCLUDE   998      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1032    21396 BATINCLUDE   998      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1033    21425 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1034    21434 BATINCLUDE  1033       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1035    21447 BATINCLUDE  1033      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1036    21458 BATINCLUDE  1033      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1037    21464 BATINCLUDE  1033      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1038    21475 BATINCLUDE  1033      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1039    21486 BATINCLUDE  1033      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1040    21504 BATINCLUDE  1033      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1041    21531 BATINCLUDE  1033      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1042    21554 BATINCLUDE  1033      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1043    21573 BATINCLUDE  1033      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1044    21594 BATINCLUDE  1033      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1045    21600 BATINCLUDE  1033      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1046    21606 BATINCLUDE  1033      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1047    21626 BATINCLUDE  1033      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1048    21632 BATINCLUDE  1033      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1049    21647 BATINCLUDE  1033      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1050    21660 BATINCLUDE  1033      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1051    21671 BATINCLUDE  1033      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1052    21677 BATINCLUDE  1033      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1053    21684 BATINCLUDE  1033      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1054    21697 BATINCLUDE  1033      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1055    21713 BATINCLUDE  1033      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1056    21728 BATINCLUDE  1033      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1057    21749 BATINCLUDE  1033      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1058    21772 BATINCLUDE  1033      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1059    21779 BATINCLUDE  1033      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1060    21799 BATINCLUDE  1033      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1061    21805 BATINCLUDE  1033      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1062    21811 BATINCLUDE  1033      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1063    21819 BATINCLUDE  1033      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1064    21842 BATINCLUDE  1033      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1065    21856 BATINCLUDE  1033      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1066    21874 BATINCLUDE  1033      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1067    21896 BATINCLUDE  1033      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1068    21914 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1069    21923 BATINCLUDE  1068       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1070    21959 BATINCLUDE  1068      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1071    21970 BATINCLUDE  1068      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1072    21976 BATINCLUDE  1068      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1073    21987 BATINCLUDE  1068      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1074    22026 BATINCLUDE  1068      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1075    22084 BATINCLUDE  1068      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1076    22188 BATINCLUDE  1068      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1077    22232 BATINCLUDE  1068      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1078    22282 BATINCLUDE  1068      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1079    22303 BATINCLUDE  1068      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1080    22309 BATINCLUDE  1068      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1081    22315 BATINCLUDE  1068      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1082    22386 BATINCLUDE  1068      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1083    22392 BATINCLUDE  1068      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1084    22457 BATINCLUDE  1068      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1085    22471 BATINCLUDE  1068      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1086    22490 BATINCLUDE  1068      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1087    22496 BATINCLUDE  1068      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1088    22503 BATINCLUDE  1068      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1089    22522 BATINCLUDE  1068      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1090    22555 BATINCLUDE  1068      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1091    22589 BATINCLUDE  1068      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1092    22642 BATINCLUDE  1068      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1093    22703 BATINCLUDE  1068      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1094    22710 BATINCLUDE  1068      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1095    22754 BATINCLUDE  1068      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1096    22760 BATINCLUDE  1068      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1097    22766 BATINCLUDE  1068      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1098    22774 BATINCLUDE  1068      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1099    22797 BATINCLUDE  1068      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1100    22811 BATINCLUDE  1068      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1101    22849 BATINCLUDE  1068      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1102    22888 BATINCLUDE  1068      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1103    22907 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1104    22916 BATINCLUDE  1103       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1105    22929 BATINCLUDE  1103      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1106    22940 BATINCLUDE  1103      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1107    22946 BATINCLUDE  1103      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1108    22957 BATINCLUDE  1103      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1109    22968 BATINCLUDE  1103      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1110    22986 BATINCLUDE  1103      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1111    23013 BATINCLUDE  1103      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1112    23036 BATINCLUDE  1103      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1113    23055 BATINCLUDE  1103      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1114    23076 BATINCLUDE  1103      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1115    23082 BATINCLUDE  1103      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1116    23088 BATINCLUDE  1103      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1117    23108 BATINCLUDE  1103      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1118    23114 BATINCLUDE  1103      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1119    23129 BATINCLUDE  1103      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1120    23142 BATINCLUDE  1103      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1121    23153 BATINCLUDE  1103      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1122    23159 BATINCLUDE  1103      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1123    23166 BATINCLUDE  1103      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1124    23179 BATINCLUDE  1103      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1125    23195 BATINCLUDE  1103      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1126    23210 BATINCLUDE  1103      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1127    23231 BATINCLUDE  1103      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1128    23254 BATINCLUDE  1103      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1129    23261 BATINCLUDE  1103      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1130    23281 BATINCLUDE  1103      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1131    23287 BATINCLUDE  1103      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1132    23293 BATINCLUDE  1103      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1133    23301 BATINCLUDE  1103      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1134    23324 BATINCLUDE  1103      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1135    23338 BATINCLUDE  1103      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1136    23356 BATINCLUDE  1103      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1137    23378 BATINCLUDE  1103      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1138    23407 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1139    23416 BATINCLUDE  1138       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1140    23429 BATINCLUDE  1138      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1141    23440 BATINCLUDE  1138      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1142    23446 BATINCLUDE  1138      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1143    23457 BATINCLUDE  1138      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1144    23468 BATINCLUDE  1138      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1145    23486 BATINCLUDE  1138      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1146    23513 BATINCLUDE  1138      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1147    23536 BATINCLUDE  1138      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1148    23555 BATINCLUDE  1138      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1149    23576 BATINCLUDE  1138      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1150    23582 BATINCLUDE  1138      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1151    23588 BATINCLUDE  1138      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1152    23608 BATINCLUDE  1138      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1153    23614 BATINCLUDE  1138      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1154    23629 BATINCLUDE  1138      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1155    23642 BATINCLUDE  1138      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1156    23653 BATINCLUDE  1138      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1157    23659 BATINCLUDE  1138      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1158    23666 BATINCLUDE  1138      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1159    23679 BATINCLUDE  1138      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1160    23695 BATINCLUDE  1138      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1161    23710 BATINCLUDE  1138      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1162    23731 BATINCLUDE  1138      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1163    23754 BATINCLUDE  1138      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1164    23761 BATINCLUDE  1138      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1165    23781 BATINCLUDE  1138      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1166    23787 BATINCLUDE  1138      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1167    23793 BATINCLUDE  1138      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1168    23801 BATINCLUDE  1138      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1169    23824 BATINCLUDE  1138      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1170    23838 BATINCLUDE  1138      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1171    23856 BATINCLUDE  1138      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1172    23878 BATINCLUDE  1138      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1173    23896 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1174    23905 BATINCLUDE  1173       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1175    23941 BATINCLUDE  1173      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1176    23952 BATINCLUDE  1173      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1177    23958 BATINCLUDE  1173      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1178    23969 BATINCLUDE  1173      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1179    24008 BATINCLUDE  1173      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1180    24066 BATINCLUDE  1173      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1181    24170 BATINCLUDE  1173      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1182    24214 BATINCLUDE  1173      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1183    24264 BATINCLUDE  1173      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1184    24285 BATINCLUDE  1173      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1185    24291 BATINCLUDE  1173      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1186    24297 BATINCLUDE  1173      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1187    24368 BATINCLUDE  1173      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1188    24374 BATINCLUDE  1173      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1189    24439 BATINCLUDE  1173      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1190    24453 BATINCLUDE  1173      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1191    24472 BATINCLUDE  1173      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1192    24478 BATINCLUDE  1173      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1193    24485 BATINCLUDE  1173      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1194    24504 BATINCLUDE  1173      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1195    24537 BATINCLUDE  1173      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1196    24571 BATINCLUDE  1173      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1197    24624 BATINCLUDE  1173      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1198    24685 BATINCLUDE  1173      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1199    24692 BATINCLUDE  1173      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1200    24736 BATINCLUDE  1173      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1201    24742 BATINCLUDE  1173      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1202    24748 BATINCLUDE  1173      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1203    24756 BATINCLUDE  1173      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1204    24779 BATINCLUDE  1173      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1205    24793 BATINCLUDE  1173      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1206    24831 BATINCLUDE  1173      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1207    24870 BATINCLUDE  1173      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1208    24889 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1209    24898 BATINCLUDE  1208       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1210    24911 BATINCLUDE  1208      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1211    24922 BATINCLUDE  1208      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1212    24928 BATINCLUDE  1208      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1213    24939 BATINCLUDE  1208      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1214    24950 BATINCLUDE  1208      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1215    24968 BATINCLUDE  1208      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1216    24995 BATINCLUDE  1208      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1217    25018 BATINCLUDE  1208      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1218    25037 BATINCLUDE  1208      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1219    25058 BATINCLUDE  1208      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1220    25064 BATINCLUDE  1208      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1221    25070 BATINCLUDE  1208      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1222    25090 BATINCLUDE  1208      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1223    25096 BATINCLUDE  1208      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1224    25111 BATINCLUDE  1208      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1225    25124 BATINCLUDE  1208      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1226    25135 BATINCLUDE  1208      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1227    25141 BATINCLUDE  1208      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1228    25148 BATINCLUDE  1208      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1229    25161 BATINCLUDE  1208      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1230    25177 BATINCLUDE  1208      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1231    25192 BATINCLUDE  1208      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1232    25213 BATINCLUDE  1208      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1233    25236 BATINCLUDE  1208      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1234    25243 BATINCLUDE  1208      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1235    25263 BATINCLUDE  1208      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1236    25269 BATINCLUDE  1208      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1237    25275 BATINCLUDE  1208      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1238    25283 BATINCLUDE  1208      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1239    25306 BATINCLUDE  1208      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1240    25320 BATINCLUDE  1208      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1241    25338 BATINCLUDE  1208      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1242    25360 BATINCLUDE  1208      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1243    25389 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1244    25398 BATINCLUDE  1243       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1245    25411 BATINCLUDE  1243      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1246    25422 BATINCLUDE  1243      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1247    25428 BATINCLUDE  1243      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1248    25439 BATINCLUDE  1243      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1249    25450 BATINCLUDE  1243      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1250    25468 BATINCLUDE  1243      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1251    25495 BATINCLUDE  1243      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1252    25518 BATINCLUDE  1243      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1253    25537 BATINCLUDE  1243      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1254    25558 BATINCLUDE  1243      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1255    25564 BATINCLUDE  1243      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1256    25570 BATINCLUDE  1243      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1257    25590 BATINCLUDE  1243      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1258    25596 BATINCLUDE  1243      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1259    25611 BATINCLUDE  1243      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1260    25624 BATINCLUDE  1243      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1261    25635 BATINCLUDE  1243      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1262    25641 BATINCLUDE  1243      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1263    25648 BATINCLUDE  1243      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1264    25661 BATINCLUDE  1243      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1265    25677 BATINCLUDE  1243      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1266    25692 BATINCLUDE  1243      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1267    25713 BATINCLUDE  1243      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1268    25736 BATINCLUDE  1243      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1269    25743 BATINCLUDE  1243      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1270    25763 BATINCLUDE  1243      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1271    25769 BATINCLUDE  1243      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1272    25775 BATINCLUDE  1243      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1273    25783 BATINCLUDE  1243      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1274    25806 BATINCLUDE  1243      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1275    25820 BATINCLUDE  1243      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1276    25838 BATINCLUDE  1243      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1277    25860 BATINCLUDE  1243      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1278    25878 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1279    25887 BATINCLUDE  1278       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1280    25923 BATINCLUDE  1278      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1281    25934 BATINCLUDE  1278      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1282    25940 BATINCLUDE  1278      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1283    25951 BATINCLUDE  1278      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1284    25990 BATINCLUDE  1278      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1285    26048 BATINCLUDE  1278      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1286    26152 BATINCLUDE  1278      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1287    26196 BATINCLUDE  1278      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1288    26246 BATINCLUDE  1278      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1289    26267 BATINCLUDE  1278      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1290    26273 BATINCLUDE  1278      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1291    26279 BATINCLUDE  1278      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1292    26350 BATINCLUDE  1278      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1293    26356 BATINCLUDE  1278      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1294    26421 BATINCLUDE  1278      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1295    26435 BATINCLUDE  1278      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1296    26454 BATINCLUDE  1278      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1297    26460 BATINCLUDE  1278      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1298    26467 BATINCLUDE  1278      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1299    26486 BATINCLUDE  1278      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1300    26519 BATINCLUDE  1278      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1301    26553 BATINCLUDE  1278      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1302    26606 BATINCLUDE  1278      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1303    26667 BATINCLUDE  1278      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1304    26674 BATINCLUDE  1278      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1305    26718 BATINCLUDE  1278      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1306    26724 BATINCLUDE  1278      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1307    26730 BATINCLUDE  1278      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1308    26738 BATINCLUDE  1278      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1309    26761 BATINCLUDE  1278      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1310    26775 BATINCLUDE  1278      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1311    26813 BATINCLUDE  1278      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1312    26852 BATINCLUDE  1278      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1313    26871 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1314    26880 BATINCLUDE  1313       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1315    26893 BATINCLUDE  1313      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1316    26904 BATINCLUDE  1313      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1317    26910 BATINCLUDE  1313      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1318    26921 BATINCLUDE  1313      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1319    26932 BATINCLUDE  1313      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1320    26950 BATINCLUDE  1313      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1321    26977 BATINCLUDE  1313      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1322    27000 BATINCLUDE  1313      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1323    27019 BATINCLUDE  1313      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1324    27040 BATINCLUDE  1313      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1325    27046 BATINCLUDE  1313      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1326    27052 BATINCLUDE  1313      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1327    27072 BATINCLUDE  1313      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1328    27078 BATINCLUDE  1313      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1329    27093 BATINCLUDE  1313      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1330    27106 BATINCLUDE  1313      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1331    27117 BATINCLUDE  1313      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1332    27123 BATINCLUDE  1313      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1333    27130 BATINCLUDE  1313      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1334    27143 BATINCLUDE  1313      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1335    27159 BATINCLUDE  1313      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1336    27174 BATINCLUDE  1313      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1337    27195 BATINCLUDE  1313      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1338    27218 BATINCLUDE  1313      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1339    27225 BATINCLUDE  1313      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1340    27245 BATINCLUDE  1313      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1341    27251 BATINCLUDE  1313      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1342    27257 BATINCLUDE  1313      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1343    27265 BATINCLUDE  1313      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1344    27288 BATINCLUDE  1313      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1345    27302 BATINCLUDE  1313      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1346    27320 BATINCLUDE  1313      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1347    27342 BATINCLUDE  1313      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1348    27371 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1349    27380 BATINCLUDE  1348       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1350    27393 BATINCLUDE  1348      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1351    27404 BATINCLUDE  1348      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1352    27410 BATINCLUDE  1348      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1353    27421 BATINCLUDE  1348      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1354    27432 BATINCLUDE  1348      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1355    27450 BATINCLUDE  1348      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1356    27477 BATINCLUDE  1348      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1357    27500 BATINCLUDE  1348      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1358    27519 BATINCLUDE  1348      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1359    27540 BATINCLUDE  1348      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1360    27546 BATINCLUDE  1348      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1361    27552 BATINCLUDE  1348      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1362    27572 BATINCLUDE  1348      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1363    27578 BATINCLUDE  1348      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1364    27593 BATINCLUDE  1348      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1365    27606 BATINCLUDE  1348      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1366    27617 BATINCLUDE  1348      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1367    27623 BATINCLUDE  1348      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1368    27630 BATINCLUDE  1348      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1369    27643 BATINCLUDE  1348      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1370    27659 BATINCLUDE  1348      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1371    27674 BATINCLUDE  1348      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1372    27695 BATINCLUDE  1348      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1373    27718 BATINCLUDE  1348      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1374    27725 BATINCLUDE  1348      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1375    27745 BATINCLUDE  1348      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1376    27751 BATINCLUDE  1348      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1377    27757 BATINCLUDE  1348      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1378    27765 BATINCLUDE  1348      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1379    27788 BATINCLUDE  1348      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1380    27802 BATINCLUDE  1348      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1381    27820 BATINCLUDE  1348      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1382    27842 BATINCLUDE  1348      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1383    27860 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1384    27869 BATINCLUDE  1383       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1385    27905 BATINCLUDE  1383      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1386    27916 BATINCLUDE  1383      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1387    27922 BATINCLUDE  1383      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1388    27933 BATINCLUDE  1383      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1389    27972 BATINCLUDE  1383      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1390    28030 BATINCLUDE  1383      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1391    28134 BATINCLUDE  1383      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1392    28178 BATINCLUDE  1383      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1393    28228 BATINCLUDE  1383      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1394    28249 BATINCLUDE  1383      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1395    28255 BATINCLUDE  1383      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1396    28261 BATINCLUDE  1383      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1397    28332 BATINCLUDE  1383      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1398    28338 BATINCLUDE  1383      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1399    28403 BATINCLUDE  1383      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1400    28417 BATINCLUDE  1383      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1401    28436 BATINCLUDE  1383      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1402    28442 BATINCLUDE  1383      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1403    28449 BATINCLUDE  1383      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1404    28468 BATINCLUDE  1383      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1405    28501 BATINCLUDE  1383      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1406    28535 BATINCLUDE  1383      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1407    28588 BATINCLUDE  1383      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1408    28649 BATINCLUDE  1383      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1409    28656 BATINCLUDE  1383      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1410    28700 BATINCLUDE  1383      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1411    28706 BATINCLUDE  1383      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1412    28712 BATINCLUDE  1383      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1413    28720 BATINCLUDE  1383      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1414    28743 BATINCLUDE  1383      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1415    28757 BATINCLUDE  1383      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1416    28795 BATINCLUDE  1383      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1417    28834 BATINCLUDE  1383      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1418    28853 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1419    28862 BATINCLUDE  1418       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1420    28875 BATINCLUDE  1418      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1421    28886 BATINCLUDE  1418      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1422    28892 BATINCLUDE  1418      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1423    28903 BATINCLUDE  1418      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1424    28914 BATINCLUDE  1418      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1425    28932 BATINCLUDE  1418      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1426    28959 BATINCLUDE  1418      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1427    28982 BATINCLUDE  1418      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1428    29001 BATINCLUDE  1418      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1429    29022 BATINCLUDE  1418      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1430    29028 BATINCLUDE  1418      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1431    29034 BATINCLUDE  1418      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1432    29054 BATINCLUDE  1418      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1433    29060 BATINCLUDE  1418      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1434    29075 BATINCLUDE  1418      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1435    29088 BATINCLUDE  1418      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1436    29099 BATINCLUDE  1418      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1437    29105 BATINCLUDE  1418      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1438    29112 BATINCLUDE  1418      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1439    29125 BATINCLUDE  1418      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1440    29141 BATINCLUDE  1418      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1441    29156 BATINCLUDE  1418      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1442    29177 BATINCLUDE  1418      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1443    29200 BATINCLUDE  1418      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1444    29207 BATINCLUDE  1418      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1445    29227 BATINCLUDE  1418      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1446    29233 BATINCLUDE  1418      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1447    29239 BATINCLUDE  1418      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1448    29247 BATINCLUDE  1418      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1449    29270 BATINCLUDE  1418      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1450    29284 BATINCLUDE  1418      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1451    29302 BATINCLUDE  1418      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1452    29324 BATINCLUDE  1418      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1453    29353 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1454    29362 BATINCLUDE  1453       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1455    29375 BATINCLUDE  1453      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1456    29386 BATINCLUDE  1453      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1457    29392 BATINCLUDE  1453      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1458    29403 BATINCLUDE  1453      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1459    29414 BATINCLUDE  1453      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1460    29432 BATINCLUDE  1453      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1461    29459 BATINCLUDE  1453      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1462    29482 BATINCLUDE  1453      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1463    29501 BATINCLUDE  1453      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1464    29522 BATINCLUDE  1453      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1465    29528 BATINCLUDE  1453      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1466    29534 BATINCLUDE  1453      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1467    29554 BATINCLUDE  1453      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1468    29560 BATINCLUDE  1453      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1469    29575 BATINCLUDE  1453      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1470    29588 BATINCLUDE  1453      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1471    29599 BATINCLUDE  1453      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1472    29605 BATINCLUDE  1453      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1473    29612 BATINCLUDE  1453      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1474    29625 BATINCLUDE  1453      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1475    29641 BATINCLUDE  1453      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1476    29656 BATINCLUDE  1453      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1477    29677 BATINCLUDE  1453      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1478    29700 BATINCLUDE  1453      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1479    29707 BATINCLUDE  1453      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1480    29727 BATINCLUDE  1453      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1481    29733 BATINCLUDE  1453      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1482    29739 BATINCLUDE  1453      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1483    29747 BATINCLUDE  1453      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1484    29770 BATINCLUDE  1453      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1485    29784 BATINCLUDE  1453      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1486    29802 BATINCLUDE  1453      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1487    29824 BATINCLUDE  1453      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1488    29842 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1489    29851 BATINCLUDE  1488       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1490    29887 BATINCLUDE  1488      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1491    29898 BATINCLUDE  1488      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1492    29904 BATINCLUDE  1488      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1493    29915 BATINCLUDE  1488      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1494    29954 BATINCLUDE  1488      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1495    30012 BATINCLUDE  1488      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1496    30116 BATINCLUDE  1488      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1497    30160 BATINCLUDE  1488      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1498    30210 BATINCLUDE  1488      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1499    30231 BATINCLUDE  1488      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1500    30237 BATINCLUDE  1488      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1501    30243 BATINCLUDE  1488      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1502    30314 BATINCLUDE  1488      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1503    30320 BATINCLUDE  1488      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1504    30385 BATINCLUDE  1488      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1505    30399 BATINCLUDE  1488      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1506    30418 BATINCLUDE  1488      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1507    30424 BATINCLUDE  1488      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1508    30431 BATINCLUDE  1488      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1509    30450 BATINCLUDE  1488      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1510    30483 BATINCLUDE  1488      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1511    30517 BATINCLUDE  1488      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1512    30570 BATINCLUDE  1488      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1513    30631 BATINCLUDE  1488      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1514    30638 BATINCLUDE  1488      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1515    30682 BATINCLUDE  1488      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1516    30688 BATINCLUDE  1488      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1517    30694 BATINCLUDE  1488      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1518    30702 BATINCLUDE  1488      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1519    30725 BATINCLUDE  1488      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1520    30739 BATINCLUDE  1488      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1521    30777 BATINCLUDE  1488      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1522    30816 BATINCLUDE  1488      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1523    30835 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1524    30844 BATINCLUDE  1523       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1525    30857 BATINCLUDE  1523      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1526    30868 BATINCLUDE  1523      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1527    30874 BATINCLUDE  1523      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1528    30885 BATINCLUDE  1523      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1529    30896 BATINCLUDE  1523      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1530    30914 BATINCLUDE  1523      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1531    30941 BATINCLUDE  1523      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1532    30964 BATINCLUDE  1523      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1533    30983 BATINCLUDE  1523      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1534    31004 BATINCLUDE  1523      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1535    31010 BATINCLUDE  1523      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1536    31016 BATINCLUDE  1523      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1537    31036 BATINCLUDE  1523      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1538    31042 BATINCLUDE  1523      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1539    31057 BATINCLUDE  1523      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1540    31070 BATINCLUDE  1523      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1541    31081 BATINCLUDE  1523      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1542    31087 BATINCLUDE  1523      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1543    31094 BATINCLUDE  1523      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1544    31107 BATINCLUDE  1523      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1545    31123 BATINCLUDE  1523      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1546    31138 BATINCLUDE  1523      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1547    31159 BATINCLUDE  1523      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1548    31182 BATINCLUDE  1523      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1549    31189 BATINCLUDE  1523      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1550    31209 BATINCLUDE  1523      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1551    31215 BATINCLUDE  1523      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1552    31221 BATINCLUDE  1523      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1553    31229 BATINCLUDE  1523      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1554    31252 BATINCLUDE  1523      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1555    31266 BATINCLUDE  1523      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1556    31284 BATINCLUDE  1523      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1557    31306 BATINCLUDE  1523      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1558    31335 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1559    31344 BATINCLUDE  1558       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1560    31357 BATINCLUDE  1558      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1561    31368 BATINCLUDE  1558      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1562    31374 BATINCLUDE  1558      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1563    31385 BATINCLUDE  1558      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1564    31396 BATINCLUDE  1558      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1565    31414 BATINCLUDE  1558      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1566    31441 BATINCLUDE  1558      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1567    31464 BATINCLUDE  1558      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1568    31483 BATINCLUDE  1558      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1569    31504 BATINCLUDE  1558      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1570    31510 BATINCLUDE  1558      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1571    31516 BATINCLUDE  1558      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1572    31536 BATINCLUDE  1558      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1573    31542 BATINCLUDE  1558      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1574    31557 BATINCLUDE  1558      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1575    31570 BATINCLUDE  1558      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1576    31581 BATINCLUDE  1558      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1577    31587 BATINCLUDE  1558      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1578    31594 BATINCLUDE  1558      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1579    31607 BATINCLUDE  1558      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1580    31623 BATINCLUDE  1558      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1581    31638 BATINCLUDE  1558      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1582    31659 BATINCLUDE  1558      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1583    31682 BATINCLUDE  1558      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1584    31689 BATINCLUDE  1558      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1585    31709 BATINCLUDE  1558      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1586    31715 BATINCLUDE  1558      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1587    31721 BATINCLUDE  1558      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1588    31729 BATINCLUDE  1558      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1589    31752 BATINCLUDE  1558      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1590    31766 BATINCLUDE  1558      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1591    31784 BATINCLUDE  1558      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1592    31806 BATINCLUDE  1558      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1593    31824 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1594    31833 BATINCLUDE  1593       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1595    31869 BATINCLUDE  1593      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1596    31880 BATINCLUDE  1593      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1597    31886 BATINCLUDE  1593      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1598    31897 BATINCLUDE  1593      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1599    31936 BATINCLUDE  1593      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1600    31994 BATINCLUDE  1593      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1601    32098 BATINCLUDE  1593      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1602    32142 BATINCLUDE  1593      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1603    32192 BATINCLUDE  1593      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1604    32213 BATINCLUDE  1593      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1605    32219 BATINCLUDE  1593      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1606    32225 BATINCLUDE  1593      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1607    32296 BATINCLUDE  1593      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1608    32302 BATINCLUDE  1593      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1609    32367 BATINCLUDE  1593      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1610    32381 BATINCLUDE  1593      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1611    32400 BATINCLUDE  1593      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1612    32406 BATINCLUDE  1593      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1613    32413 BATINCLUDE  1593      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1614    32432 BATINCLUDE  1593      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1615    32465 BATINCLUDE  1593      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1616    32499 BATINCLUDE  1593      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1617    32552 BATINCLUDE  1593      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1618    32613 BATINCLUDE  1593      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1619    32620 BATINCLUDE  1593      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1620    32664 BATINCLUDE  1593      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1621    32670 BATINCLUDE  1593      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1622    32676 BATINCLUDE  1593      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1623    32684 BATINCLUDE  1593      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1624    32707 BATINCLUDE  1593      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1625    32721 BATINCLUDE  1593      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1626    32759 BATINCLUDE  1593      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1627    32798 BATINCLUDE  1593      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1628    32817 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1629    32826 BATINCLUDE  1628       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1630    32839 BATINCLUDE  1628      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1631    32850 BATINCLUDE  1628      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1632    32856 BATINCLUDE  1628      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1633    32867 BATINCLUDE  1628      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1634    32878 BATINCLUDE  1628      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1635    32896 BATINCLUDE  1628      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1636    32923 BATINCLUDE  1628      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1637    32946 BATINCLUDE  1628      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1638    32965 BATINCLUDE  1628      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1639    32986 BATINCLUDE  1628      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1640    32992 BATINCLUDE  1628      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1641    32998 BATINCLUDE  1628      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1642    33018 BATINCLUDE  1628      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1643    33024 BATINCLUDE  1628      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1644    33039 BATINCLUDE  1628      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1645    33052 BATINCLUDE  1628      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1646    33063 BATINCLUDE  1628      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1647    33069 BATINCLUDE  1628      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1648    33076 BATINCLUDE  1628      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1649    33089 BATINCLUDE  1628      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1650    33105 BATINCLUDE  1628      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1651    33120 BATINCLUDE  1628      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1652    33141 BATINCLUDE  1628      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1653    33164 BATINCLUDE  1628      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1654    33171 BATINCLUDE  1628      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1655    33191 BATINCLUDE  1628      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1656    33197 BATINCLUDE  1628      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1657    33203 BATINCLUDE  1628      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1658    33211 BATINCLUDE  1628      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1659    33234 BATINCLUDE  1628      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1660    33248 BATINCLUDE  1628      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1661    33266 BATINCLUDE  1628      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1662    33288 BATINCLUDE  1628      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1663    33317 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1664    33326 BATINCLUDE  1663       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1665    33339 BATINCLUDE  1663      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1666    33350 BATINCLUDE  1663      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1667    33356 BATINCLUDE  1663      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1668    33367 BATINCLUDE  1663      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1669    33378 BATINCLUDE  1663      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1670    33396 BATINCLUDE  1663      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1671    33423 BATINCLUDE  1663      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1672    33446 BATINCLUDE  1663      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1673    33465 BATINCLUDE  1663      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1674    33486 BATINCLUDE  1663      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1675    33492 BATINCLUDE  1663      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1676    33498 BATINCLUDE  1663      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1677    33518 BATINCLUDE  1663      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1678    33524 BATINCLUDE  1663      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1679    33539 BATINCLUDE  1663      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1680    33552 BATINCLUDE  1663      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1681    33563 BATINCLUDE  1663      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1682    33569 BATINCLUDE  1663      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1683    33576 BATINCLUDE  1663      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1684    33589 BATINCLUDE  1663      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1685    33605 BATINCLUDE  1663      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1686    33620 BATINCLUDE  1663      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1687    33641 BATINCLUDE  1663      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1688    33664 BATINCLUDE  1663      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1689    33671 BATINCLUDE  1663      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1690    33691 BATINCLUDE  1663      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1691    33697 BATINCLUDE  1663      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1692    33703 BATINCLUDE  1663      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1693    33711 BATINCLUDE  1663      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1694    33734 BATINCLUDE  1663      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1695    33748 BATINCLUDE  1663      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1696    33766 BATINCLUDE  1663      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1697    33788 BATINCLUDE  1663      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1698    33806 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1699    33815 BATINCLUDE  1698       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1700    33851 BATINCLUDE  1698      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1701    33862 BATINCLUDE  1698      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1702    33868 BATINCLUDE  1698      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1703    33879 BATINCLUDE  1698      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1704    33918 BATINCLUDE  1698      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1705    33976 BATINCLUDE  1698      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1706    34080 BATINCLUDE  1698      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1707    34124 BATINCLUDE  1698      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1708    34174 BATINCLUDE  1698      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1709    34195 BATINCLUDE  1698      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1710    34201 BATINCLUDE  1698      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1711    34207 BATINCLUDE  1698      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1712    34278 BATINCLUDE  1698      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1713    34284 BATINCLUDE  1698      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1714    34349 BATINCLUDE  1698      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1715    34363 BATINCLUDE  1698      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1716    34382 BATINCLUDE  1698      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1717    34388 BATINCLUDE  1698      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1718    34395 BATINCLUDE  1698      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1719    34414 BATINCLUDE  1698      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1720    34447 BATINCLUDE  1698      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1721    34481 BATINCLUDE  1698      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1722    34534 BATINCLUDE  1698      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1723    34595 BATINCLUDE  1698      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1724    34602 BATINCLUDE  1698      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1725    34646 BATINCLUDE  1698      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1726    34652 BATINCLUDE  1698      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1727    34658 BATINCLUDE  1698      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1728    34666 BATINCLUDE  1698      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1729    34689 BATINCLUDE  1698      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1730    34703 BATINCLUDE  1698      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1731    34741 BATINCLUDE  1698      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1732    34780 BATINCLUDE  1698      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1733    34799 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1734    34808 BATINCLUDE  1733       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1735    34821 BATINCLUDE  1733      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1736    34832 BATINCLUDE  1733      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1737    34838 BATINCLUDE  1733      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1738    34849 BATINCLUDE  1733      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1739    34860 BATINCLUDE  1733      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1740    34878 BATINCLUDE  1733      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1741    34905 BATINCLUDE  1733      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1742    34928 BATINCLUDE  1733      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1743    34947 BATINCLUDE  1733      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1744    34968 BATINCLUDE  1733      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1745    34974 BATINCLUDE  1733      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1746    34980 BATINCLUDE  1733      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1747    35000 BATINCLUDE  1733      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1748    35006 BATINCLUDE  1733      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1749    35021 BATINCLUDE  1733      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1750    35034 BATINCLUDE  1733      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1751    35045 BATINCLUDE  1733      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1752    35051 BATINCLUDE  1733      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1753    35058 BATINCLUDE  1733      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1754    35071 BATINCLUDE  1733      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1755    35087 BATINCLUDE  1733      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1756    35102 BATINCLUDE  1733      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1757    35123 BATINCLUDE  1733      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1758    35146 BATINCLUDE  1733      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1759    35153 BATINCLUDE  1733      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1760    35173 BATINCLUDE  1733      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1761    35179 BATINCLUDE  1733      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1762    35185 BATINCLUDE  1733      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1763    35193 BATINCLUDE  1733      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1764    35216 BATINCLUDE  1733      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1765    35230 BATINCLUDE  1733      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1766    35248 BATINCLUDE  1733      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1767    35270 BATINCLUDE  1733      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1768    35299 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1769    35308 BATINCLUDE  1768       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1770    35321 BATINCLUDE  1768      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1771    35332 BATINCLUDE  1768      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1772    35338 BATINCLUDE  1768      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1773    35349 BATINCLUDE  1768      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1774    35360 BATINCLUDE  1768      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1775    35378 BATINCLUDE  1768      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1776    35405 BATINCLUDE  1768      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1777    35428 BATINCLUDE  1768      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1778    35447 BATINCLUDE  1768      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1779    35468 BATINCLUDE  1768      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1780    35474 BATINCLUDE  1768      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1781    35480 BATINCLUDE  1768      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1782    35500 BATINCLUDE  1768      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1783    35506 BATINCLUDE  1768      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1784    35521 BATINCLUDE  1768      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1785    35534 BATINCLUDE  1768      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1786    35545 BATINCLUDE  1768      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1787    35551 BATINCLUDE  1768      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1788    35558 BATINCLUDE  1768      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1789    35571 BATINCLUDE  1768      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1790    35587 BATINCLUDE  1768      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1791    35602 BATINCLUDE  1768      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1792    35623 BATINCLUDE  1768      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1793    35646 BATINCLUDE  1768      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1794    35653 BATINCLUDE  1768      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1795    35673 BATINCLUDE  1768      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1796    35679 BATINCLUDE  1768      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1797    35685 BATINCLUDE  1768      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1798    35693 BATINCLUDE  1768      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1799    35716 BATINCLUDE  1768      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1800    35730 BATINCLUDE  1768      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1801    35748 BATINCLUDE  1768      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1802    35770 BATINCLUDE  1768      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1803    35788 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1804    35797 BATINCLUDE  1803       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1805    35833 BATINCLUDE  1803      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1806    35844 BATINCLUDE  1803      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1807    35850 BATINCLUDE  1803      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1808    35861 BATINCLUDE  1803      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1809    35900 BATINCLUDE  1803      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1810    35958 BATINCLUDE  1803      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1811    36062 BATINCLUDE  1803      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1812    36106 BATINCLUDE  1803      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1813    36156 BATINCLUDE  1803      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1814    36177 BATINCLUDE  1803      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1815    36183 BATINCLUDE  1803      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1816    36189 BATINCLUDE  1803      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1817    36260 BATINCLUDE  1803      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1818    36266 BATINCLUDE  1803      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1819    36331 BATINCLUDE  1803      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1820    36345 BATINCLUDE  1803      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1821    36364 BATINCLUDE  1803      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1822    36370 BATINCLUDE  1803      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1823    36377 BATINCLUDE  1803      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1824    36396 BATINCLUDE  1803      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1825    36429 BATINCLUDE  1803      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1826    36463 BATINCLUDE  1803      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1827    36516 BATINCLUDE  1803      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1828    36577 BATINCLUDE  1803      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1829    36584 BATINCLUDE  1803      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1830    36628 BATINCLUDE  1803      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1831    36634 BATINCLUDE  1803      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1832    36640 BATINCLUDE  1803      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1833    36648 BATINCLUDE  1803      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1834    36671 BATINCLUDE  1803      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1835    36685 BATINCLUDE  1803      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1836    36723 BATINCLUDE  1803      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1837    36762 BATINCLUDE  1803      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1838    36781 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1839    36790 BATINCLUDE  1838       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1840    36803 BATINCLUDE  1838      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1841    36814 BATINCLUDE  1838      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1842    36820 BATINCLUDE  1838      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1843    36831 BATINCLUDE  1838      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1844    36842 BATINCLUDE  1838      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1845    36860 BATINCLUDE  1838      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1846    36887 BATINCLUDE  1838      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1847    36910 BATINCLUDE  1838      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1848    36929 BATINCLUDE  1838      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1849    36950 BATINCLUDE  1838      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1850    36956 BATINCLUDE  1838      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1851    36962 BATINCLUDE  1838      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1852    36982 BATINCLUDE  1838      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1853    36988 BATINCLUDE  1838      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1854    37003 BATINCLUDE  1838      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1855    37016 BATINCLUDE  1838      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1856    37027 BATINCLUDE  1838      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1857    37033 BATINCLUDE  1838      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1858    37040 BATINCLUDE  1838      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1859    37053 BATINCLUDE  1838      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1860    37069 BATINCLUDE  1838      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1861    37084 BATINCLUDE  1838      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1862    37105 BATINCLUDE  1838      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1863    37128 BATINCLUDE  1838      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1864    37135 BATINCLUDE  1838      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1865    37155 BATINCLUDE  1838      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1866    37161 BATINCLUDE  1838      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1867    37167 BATINCLUDE  1838      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1868    37175 BATINCLUDE  1838      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1869    37198 BATINCLUDE  1838      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1870    37212 BATINCLUDE  1838      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1871    37230 BATINCLUDE  1838      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1872    37252 BATINCLUDE  1838      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1873    37281 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1874    37290 BATINCLUDE  1873       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1875    37303 BATINCLUDE  1873      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1876    37314 BATINCLUDE  1873      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1877    37320 BATINCLUDE  1873      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1878    37331 BATINCLUDE  1873      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1879    37342 BATINCLUDE  1873      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1880    37360 BATINCLUDE  1873      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1881    37387 BATINCLUDE  1873      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1882    37410 BATINCLUDE  1873      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1883    37429 BATINCLUDE  1873      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1884    37450 BATINCLUDE  1873      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1885    37456 BATINCLUDE  1873      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1886    37462 BATINCLUDE  1873      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1887    37482 BATINCLUDE  1873      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1888    37488 BATINCLUDE  1873      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1889    37503 BATINCLUDE  1873      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1890    37516 BATINCLUDE  1873      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1891    37527 BATINCLUDE  1873      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1892    37533 BATINCLUDE  1873      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1893    37540 BATINCLUDE  1873      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1894    37553 BATINCLUDE  1873      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1895    37569 BATINCLUDE  1873      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1896    37584 BATINCLUDE  1873      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1897    37605 BATINCLUDE  1873      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1898    37628 BATINCLUDE  1873      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1899    37635 BATINCLUDE  1873      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1900    37655 BATINCLUDE  1873      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1901    37661 BATINCLUDE  1873      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1902    37667 BATINCLUDE  1873      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1903    37675 BATINCLUDE  1873      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1904    37698 BATINCLUDE  1873      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1905    37712 BATINCLUDE  1873      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1906    37730 BATINCLUDE  1873      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1907    37752 BATINCLUDE  1873      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1908    37770 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1909    37779 BATINCLUDE  1908       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1910    37815 BATINCLUDE  1908      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1911    37826 BATINCLUDE  1908      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1912    37832 BATINCLUDE  1908      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1913    37843 BATINCLUDE  1908      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1914    37882 BATINCLUDE  1908      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1915    37940 BATINCLUDE  1908      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1916    38044 BATINCLUDE  1908      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1917    38088 BATINCLUDE  1908      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1918    38138 BATINCLUDE  1908      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1919    38159 BATINCLUDE  1908      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1920    38165 BATINCLUDE  1908      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1921    38171 BATINCLUDE  1908      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1922    38242 BATINCLUDE  1908      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1923    38248 BATINCLUDE  1908      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1924    38313 BATINCLUDE  1908      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1925    38327 BATINCLUDE  1908      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1926    38346 BATINCLUDE  1908      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1927    38352 BATINCLUDE  1908      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1928    38359 BATINCLUDE  1908      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1929    38378 BATINCLUDE  1908      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1930    38411 BATINCLUDE  1908      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1931    38445 BATINCLUDE  1908      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1932    38498 BATINCLUDE  1908      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1933    38559 BATINCLUDE  1908      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1934    38566 BATINCLUDE  1908      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1935    38610 BATINCLUDE  1908      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1936    38616 BATINCLUDE  1908      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1937    38622 BATINCLUDE  1908      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1938    38630 BATINCLUDE  1908      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1939    38653 BATINCLUDE  1908      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1940    38667 BATINCLUDE  1908      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1941    38705 BATINCLUDE  1908      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1942    38744 BATINCLUDE  1908      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1943    38763 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1944    38772 BATINCLUDE  1943       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1945    38785 BATINCLUDE  1943      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1946    38796 BATINCLUDE  1943      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1947    38802 BATINCLUDE  1943      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1948    38813 BATINCLUDE  1943      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1949    38824 BATINCLUDE  1943      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1950    38842 BATINCLUDE  1943      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1951    38869 BATINCLUDE  1943      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1952    38892 BATINCLUDE  1943      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1953    38911 BATINCLUDE  1943      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1954    38932 BATINCLUDE  1943      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1955    38938 BATINCLUDE  1943      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1956    38944 BATINCLUDE  1943      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1957    38964 BATINCLUDE  1943      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1958    38970 BATINCLUDE  1943      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1959    38985 BATINCLUDE  1943      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1960    38998 BATINCLUDE  1943      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1961    39009 BATINCLUDE  1943      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1962    39015 BATINCLUDE  1943      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1963    39022 BATINCLUDE  1943      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1964    39035 BATINCLUDE  1943      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1965    39051 BATINCLUDE  1943      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1966    39066 BATINCLUDE  1943      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1967    39087 BATINCLUDE  1943      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1968    39110 BATINCLUDE  1943      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1969    39117 BATINCLUDE  1943      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1970    39137 BATINCLUDE  1943      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1971    39143 BATINCLUDE  1943      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1972    39149 BATINCLUDE  1943      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1973    39157 BATINCLUDE  1943      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1974    39180 BATINCLUDE  1943      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1975    39194 BATINCLUDE  1943      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1976    39212 BATINCLUDE  1943      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1977    39234 BATINCLUDE  1943      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1978    39263 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1979    39272 BATINCLUDE  1978       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1980    39285 BATINCLUDE  1978      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1981    39296 BATINCLUDE  1978      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1982    39302 BATINCLUDE  1978      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1983    39313 BATINCLUDE  1978      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1984    39324 BATINCLUDE  1978      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1985    39342 BATINCLUDE  1978      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1986    39369 BATINCLUDE  1978      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1987    39392 BATINCLUDE  1978      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1988    39411 BATINCLUDE  1978      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1989    39432 BATINCLUDE  1978      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1990    39438 BATINCLUDE  1978      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1991    39444 BATINCLUDE  1978      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1992    39464 BATINCLUDE  1978      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1993    39470 BATINCLUDE  1978      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1994    39485 BATINCLUDE  1978      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1995    39498 BATINCLUDE  1978      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1996    39509 BATINCLUDE  1978      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1997    39515 BATINCLUDE  1978      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1998    39522 BATINCLUDE  1978      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1999    39535 BATINCLUDE  1978      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2000    39551 BATINCLUDE  1978      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2001    39566 BATINCLUDE  1978      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2002    39587 BATINCLUDE  1978      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2003    39610 BATINCLUDE  1978      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2004    39617 BATINCLUDE  1978      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2005    39637 BATINCLUDE  1978      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2006    39643 BATINCLUDE  1978      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2007    39649 BATINCLUDE  1978      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2008    39657 BATINCLUDE  1978      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2009    39680 BATINCLUDE  1978      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2010    39694 BATINCLUDE  1978      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2011    39712 BATINCLUDE  1978      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2012    39734 BATINCLUDE  1978      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2013    39752 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2014    39761 BATINCLUDE  2013       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2015    39797 BATINCLUDE  2013      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2016    39808 BATINCLUDE  2013      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2017    39814 BATINCLUDE  2013      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2018    39825 BATINCLUDE  2013      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2019    39864 BATINCLUDE  2013      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2020    39922 BATINCLUDE  2013      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2021    40026 BATINCLUDE  2013      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2022    40070 BATINCLUDE  2013      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2023    40120 BATINCLUDE  2013      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2024    40141 BATINCLUDE  2013      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2025    40147 BATINCLUDE  2013      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2026    40153 BATINCLUDE  2013      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2027    40224 BATINCLUDE  2013      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2028    40230 BATINCLUDE  2013      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2029    40295 BATINCLUDE  2013      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2030    40309 BATINCLUDE  2013      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2031    40328 BATINCLUDE  2013      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2032    40334 BATINCLUDE  2013      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2033    40341 BATINCLUDE  2013      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2034    40360 BATINCLUDE  2013      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2035    40393 BATINCLUDE  2013      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2036    40427 BATINCLUDE  2013      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2037    40480 BATINCLUDE  2013      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2038    40541 BATINCLUDE  2013      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2039    40548 BATINCLUDE  2013      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2040    40592 BATINCLUDE  2013      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2041    40598 BATINCLUDE  2013      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2042    40604 BATINCLUDE  2013      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2043    40612 BATINCLUDE  2013      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2044    40635 BATINCLUDE  2013      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2045    40649 BATINCLUDE  2013      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2046    40687 BATINCLUDE  2013      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2047    40726 BATINCLUDE  2013      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2048    40745 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2049    40754 BATINCLUDE  2048       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2050    40767 BATINCLUDE  2048      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2051    40778 BATINCLUDE  2048      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2052    40784 BATINCLUDE  2048      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2053    40795 BATINCLUDE  2048      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2054    40806 BATINCLUDE  2048      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2055    40824 BATINCLUDE  2048      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2056    40851 BATINCLUDE  2048      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2057    40874 BATINCLUDE  2048      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2058    40893 BATINCLUDE  2048      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2059    40914 BATINCLUDE  2048      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2060    40920 BATINCLUDE  2048      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2061    40926 BATINCLUDE  2048      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2062    40946 BATINCLUDE  2048      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2063    40952 BATINCLUDE  2048      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2064    40967 BATINCLUDE  2048      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2065    40980 BATINCLUDE  2048      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2066    40991 BATINCLUDE  2048      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2067    40997 BATINCLUDE  2048      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2068    41004 BATINCLUDE  2048      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2069    41017 BATINCLUDE  2048      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2070    41033 BATINCLUDE  2048      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2071    41048 BATINCLUDE  2048      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2072    41069 BATINCLUDE  2048      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2073    41092 BATINCLUDE  2048      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2074    41099 BATINCLUDE  2048      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2075    41119 BATINCLUDE  2048      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2076    41125 BATINCLUDE  2048      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2077    41131 BATINCLUDE  2048      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2078    41139 BATINCLUDE  2048      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2079    41162 BATINCLUDE  2048      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2080    41176 BATINCLUDE  2048      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2081    41194 BATINCLUDE  2048      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2082    41216 BATINCLUDE  2048      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2083    41244 BATINCLUDE   292      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\forsameclt.gms
  2084    41343 BATINCLUDE   292      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2085    41367 BATINCLUDE   292      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2086    41376 BATINCLUDE  2085       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2087    41384 BATINCLUDE  2085      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2088    41395 BATINCLUDE  2085      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2089    41401 BATINCLUDE  2085      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2090    41412 BATINCLUDE  2085      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2091    41418 BATINCLUDE  2085      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2092    41428 BATINCLUDE  2085      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2093    41434 BATINCLUDE  2085      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2094    41450 BATINCLUDE  2085      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2095    41459 BATINCLUDE  2085      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2096    41492 BATINCLUDE  2085      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2097    41498 BATINCLUDE  2085      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2098    41504 BATINCLUDE  2085      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2099    41514 BATINCLUDE  2085      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2100    41520 BATINCLUDE  2085      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2101    41528 BATINCLUDE  2085      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2102    41536 BATINCLUDE  2085      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2103    41542 BATINCLUDE  2085      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2104    41548 BATINCLUDE  2085      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2105    41555 BATINCLUDE  2085      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2106    41562 BATINCLUDE  2085      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2107    41569 BATINCLUDE  2085      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2108    41578 BATINCLUDE  2085      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2109    41591 BATINCLUDE  2085      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2110    41604 BATINCLUDE  2085      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2111    41632 BATINCLUDE  2085      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2112    41640 BATINCLUDE  2085      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2113    41646 BATINCLUDE  2085      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2114    41652 BATINCLUDE  2085      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2115    41660 BATINCLUDE  2085      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2116    41678 BATINCLUDE  2085      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2117    41687 BATINCLUDE  2085      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2118    41693 BATINCLUDE  2085      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2119    41705 BATINCLUDE  2085      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2120    41729 BATINCLUDE   292      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2121    41738 BATINCLUDE  2120       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2122    41746 BATINCLUDE  2120      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2123    41757 BATINCLUDE  2120      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2124    41763 BATINCLUDE  2120      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2125    41774 BATINCLUDE  2120      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2126    41780 BATINCLUDE  2120      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2127    41790 BATINCLUDE  2120      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2128    41806 BATINCLUDE  2120      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2129    41833 BATINCLUDE  2120      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2130    41860 BATINCLUDE  2120      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2131    41881 BATINCLUDE  2120      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2132    41887 BATINCLUDE  2120      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2133    41893 BATINCLUDE  2120      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2134    41925 BATINCLUDE  2120      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2135    41941 BATINCLUDE  2120      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2136    41949 BATINCLUDE  2120      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2137    41957 BATINCLUDE  2120      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2138    41975 BATINCLUDE  2120      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2139    41981 BATINCLUDE  2120      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2140    42001 BATINCLUDE  2120      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2141    42017 BATINCLUDE  2120      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2142    42040 BATINCLUDE  2120      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2143    42049 BATINCLUDE  2120      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2144    42079 BATINCLUDE  2120      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2145    42101 BATINCLUDE  2120      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2146    42108 BATINCLUDE  2120      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2147    42121 BATINCLUDE  2120      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2148    42140 BATINCLUDE  2120      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2149    42177 BATINCLUDE  2120      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2150    42217 BATINCLUDE  2120      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2151    42240 BATINCLUDE  2120      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2152    42249 BATINCLUDE  2120      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2153    42271 BATINCLUDE  2120      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2154    42283 BATINCLUDE  2120      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2155    42326 BATINCLUDE   292      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
  2156    42335 BATINCLUDE  2155     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
  2157    42358 BATINCLUDE   292      48  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\solve.gms
  2158    42555 INCLUDE      292      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\compute_marginal.gms
  2159    42559 BATINCLUDE  2158       4  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2160    42741 BATINCLUDE  2158       5  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2161    42923 BATINCLUDE  2158       6  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2162    43105 BATINCLUDE  2158       7  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2163    43287 BATINCLUDE  2158       8  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2164    43470 BATINCLUDE   292      52  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
  2165    43483 BATINCLUDE  2164      89  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2166    43665 BATINCLUDE  2164      90  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2167    43855 BATINCLUDE  2164      99  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2168    44037 BATINCLUDE  2164     100  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2169    44228 BATINCLUDE  2164     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
  2170    44237 BATINCLUDE   292      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
  2171    44258 BATINCLUDE  2170     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
  2172    44267 BATINCLUDE   292      56  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
  2173    44330 BATINCLUDE  2172     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
  2174    44350 BATINCLUDE   292      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
  2175    44375 BATINCLUDE  2174     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
  2176    44430 BATINCLUDE   292      60  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
  2177    44467 BATINCLUDE  2176     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
  2178    44476 BATINCLUDE   292      62  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2179    44485 BATINCLUDE  2178       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2180    44493 BATINCLUDE  2178      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2181    44504 BATINCLUDE  2178      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2182    44510 BATINCLUDE  2178      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2183    44521 BATINCLUDE  2178      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2184    44562 BATINCLUDE  2178      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2185    44572 BATINCLUDE  2178      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2186    44578 BATINCLUDE  2178      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2187    44587 BATINCLUDE  2178      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2188    44596 BATINCLUDE  2178      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2189    44617 BATINCLUDE  2178      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2190    44623 BATINCLUDE  2178      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2191    44629 BATINCLUDE  2178      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2192    44639 BATINCLUDE  2178      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2193    44645 BATINCLUDE  2178      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2194    44653 BATINCLUDE  2178      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2195    44661 BATINCLUDE  2178      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2196    44667 BATINCLUDE  2178      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2197    44673 BATINCLUDE  2178      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2198    44680 BATINCLUDE  2178      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2199    44687 BATINCLUDE  2178      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2200    44694 BATINCLUDE  2178      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2201    44703 BATINCLUDE  2178      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2202    44711 BATINCLUDE  2178      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2203    44719 BATINCLUDE  2178      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2204    44726 BATINCLUDE  2178      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2205    44734 BATINCLUDE  2178      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2206    44740 BATINCLUDE  2178      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2207    44746 BATINCLUDE  2178      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2208    44754 BATINCLUDE  2178      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2209    44812 BATINCLUDE  2178      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2210    44821 BATINCLUDE  2178      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2211    44827 BATINCLUDE  2178      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2212    44839 BATINCLUDE  2178      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2213    44856 BATINCLUDE   292      64  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2214    44938 BATINCLUDE   292      66  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2215    44964 BATINCLUDE   292      77  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2216    44973 BATINCLUDE  2215       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2217    44981 BATINCLUDE  2215      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2218    44992 BATINCLUDE  2215      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2219    44998 BATINCLUDE  2215      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2220    45009 BATINCLUDE  2215      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2221    45015 BATINCLUDE  2215      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2222    45025 BATINCLUDE  2215      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2223    45041 BATINCLUDE  2215      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2224    45068 BATINCLUDE  2215      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2225    45095 BATINCLUDE  2215      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2226    45116 BATINCLUDE  2215      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2227    45122 BATINCLUDE  2215      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2228    45128 BATINCLUDE  2215      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2229    45160 BATINCLUDE  2215      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2230    45176 BATINCLUDE  2215      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2231    45184 BATINCLUDE  2215      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2232    45192 BATINCLUDE  2215      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2233    45210 BATINCLUDE  2215      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2234    45216 BATINCLUDE  2215      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2235    45236 BATINCLUDE  2215      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2236    45252 BATINCLUDE  2215      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2237    45275 BATINCLUDE  2215      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2238    45284 BATINCLUDE  2215      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2239    45314 BATINCLUDE  2215      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2240    45336 BATINCLUDE  2215      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2241    45343 BATINCLUDE  2215      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2242    45356 BATINCLUDE  2215      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2243    45375 BATINCLUDE  2215      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2244    45412 BATINCLUDE  2215      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2245    45452 BATINCLUDE  2215      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2246    45475 BATINCLUDE  2215      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2247    45484 BATINCLUDE  2215      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2248    45506 BATINCLUDE  2215      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2249    45518 BATINCLUDE  2215      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2250    45559 BATINCLUDE   292      79  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2251    45568 BATINCLUDE  2250       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2252    45576 BATINCLUDE  2250      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2253    45587 BATINCLUDE  2250      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2254    45593 BATINCLUDE  2250      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2255    45604 BATINCLUDE  2250      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2256    45645 BATINCLUDE  2250      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2257    45655 BATINCLUDE  2250      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2258    45661 BATINCLUDE  2250      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2259    45670 BATINCLUDE  2250      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2260    45679 BATINCLUDE  2250      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2261    45700 BATINCLUDE  2250      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2262    45706 BATINCLUDE  2250      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2263    45712 BATINCLUDE  2250      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2264    45722 BATINCLUDE  2250      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2265    45728 BATINCLUDE  2250      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2266    45736 BATINCLUDE  2250      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2267    45744 BATINCLUDE  2250      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2268    45750 BATINCLUDE  2250      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2269    45756 BATINCLUDE  2250      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2270    45763 BATINCLUDE  2250      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2271    45770 BATINCLUDE  2250      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2272    45777 BATINCLUDE  2250      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2273    45786 BATINCLUDE  2250      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2274    45794 BATINCLUDE  2250      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2275    45802 BATINCLUDE  2250      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2276    45809 BATINCLUDE  2250      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2277    45817 BATINCLUDE  2250      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2278    45823 BATINCLUDE  2250      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2279    45829 BATINCLUDE  2250      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2280    45837 BATINCLUDE  2250      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2281    45895 BATINCLUDE  2250      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2282    45904 BATINCLUDE  2250      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2283    45910 BATINCLUDE  2250      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2284    45922 BATINCLUDE  2250      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2285    45941 BATINCLUDE   292      83  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2286    45969 BATINCLUDE   292      87  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2287    45996 BATINCLUDE   292      90  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2288    46005 BATINCLUDE  2287       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2289    46013 BATINCLUDE  2287      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2290    46024 BATINCLUDE  2287      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2291    46030 BATINCLUDE  2287      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2292    46041 BATINCLUDE  2287      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2293    46047 BATINCLUDE  2287      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2294    46057 BATINCLUDE  2287      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2295    46063 BATINCLUDE  2287      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2296    46072 BATINCLUDE  2287      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2297    46081 BATINCLUDE  2287      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2298    46102 BATINCLUDE  2287      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2299    46108 BATINCLUDE  2287      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2300    46114 BATINCLUDE  2287      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2301    46124 BATINCLUDE  2287      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2302    46130 BATINCLUDE  2287      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2303    46138 BATINCLUDE  2287      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2304    46146 BATINCLUDE  2287      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2305    46152 BATINCLUDE  2287      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2306    46158 BATINCLUDE  2287      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2307    46165 BATINCLUDE  2287      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2308    46172 BATINCLUDE  2287      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2309    46179 BATINCLUDE  2287      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2310    46188 BATINCLUDE  2287      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2311    46196 BATINCLUDE  2287      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2312    46204 BATINCLUDE  2287      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2313    46211 BATINCLUDE  2287      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2314    46219 BATINCLUDE  2287      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2315    46225 BATINCLUDE  2287      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2316    46231 BATINCLUDE  2287      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2317    46239 BATINCLUDE  2287      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2318    46257 BATINCLUDE  2287      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2319    46270 BATINCLUDE  2287      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2320    46276 BATINCLUDE  2287      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2321    46288 BATINCLUDE  2287      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2322    46305 BATINCLUDE   292      92  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2323    46318 BATINCLUDE   292      98  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2324    46342 BATINCLUDE     1     141  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2325    46351 BATINCLUDE  2324       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2326    46359 BATINCLUDE  2324      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2327    46370 BATINCLUDE  2324      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2328    46376 BATINCLUDE  2324      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2329    46387 BATINCLUDE  2324      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2330    46393 BATINCLUDE  2324      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2331    46403 BATINCLUDE  2324      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2332    46409 BATINCLUDE  2324      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2333    46418 BATINCLUDE  2324      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2334    46427 BATINCLUDE  2324      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2335    46448 BATINCLUDE  2324      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2336    46454 BATINCLUDE  2324      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2337    46460 BATINCLUDE  2324      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2338    46470 BATINCLUDE  2324      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2339    46476 BATINCLUDE  2324      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2340    46484 BATINCLUDE  2324      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2341    46492 BATINCLUDE  2324      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2342    46498 BATINCLUDE  2324      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2343    46504 BATINCLUDE  2324      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2344    46511 BATINCLUDE  2324      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2345    46518 BATINCLUDE  2324      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2346    46525 BATINCLUDE  2324      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2347    46534 BATINCLUDE  2324      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2348    46542 BATINCLUDE  2324      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2349    46550 BATINCLUDE  2324      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2350    46557 BATINCLUDE  2324      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2351    46565 BATINCLUDE  2324      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2352    46571 BATINCLUDE  2324      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2353    46577 BATINCLUDE  2324      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2354    46585 BATINCLUDE  2324      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2355    46603 BATINCLUDE  2324      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2356    46612 BATINCLUDE  2324      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2357    46618 BATINCLUDE  2324      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2358    46630 BATINCLUDE  2324      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2359    46647 BATINCLUDE     1     143  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2360    46656 BATINCLUDE  2359       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2361    46664 BATINCLUDE  2359      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2362    46675 BATINCLUDE  2359      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2363    46681 BATINCLUDE  2359      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2364    46692 BATINCLUDE  2359      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2365    46698 BATINCLUDE  2359      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2366    46708 BATINCLUDE  2359      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2367    46714 BATINCLUDE  2359      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2368    46723 BATINCLUDE  2359      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2369    46732 BATINCLUDE  2359      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2370    46753 BATINCLUDE  2359      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2371    46759 BATINCLUDE  2359      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2372    46765 BATINCLUDE  2359      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2373    46775 BATINCLUDE  2359      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2374    46781 BATINCLUDE  2359      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2375    46789 BATINCLUDE  2359      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2376    46797 BATINCLUDE  2359      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2377    46803 BATINCLUDE  2359      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2378    46809 BATINCLUDE  2359      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2379    46816 BATINCLUDE  2359      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2380    46823 BATINCLUDE  2359      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2381    46830 BATINCLUDE  2359      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2382    46839 BATINCLUDE  2359      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2383    46865 BATINCLUDE  2359      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2384    46873 BATINCLUDE  2359      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2385    46880 BATINCLUDE  2359      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2386    46888 BATINCLUDE  2359      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2387    46894 BATINCLUDE  2359      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2388    46900 BATINCLUDE  2359      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2389    46908 BATINCLUDE  2359      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2390    46926 BATINCLUDE  2359      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2391    46949 BATINCLUDE  2359      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2392    46970 BATINCLUDE  2359      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2393    46982 BATINCLUDE  2359      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2394    46999 INCLUDE        1     145  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\post\gdx.gms
  2395    47007 IF EXIST    2394       8  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\algoitemlist.txt
  2396    47007 INCLUDE     2394       8  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\algoitemlist.txt
  2397    47030 BATINCLUDE  2394      11  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\post\gdx_eql.gms
  2398    47040 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2399    47049 BATINCLUDE  2398       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2400    47062 BATINCLUDE  2398      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2401    47073 BATINCLUDE  2398      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2402    47079 BATINCLUDE  2398      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2403    47090 BATINCLUDE  2398      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2404    47101 BATINCLUDE  2398      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2405    47119 BATINCLUDE  2398      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2406    47146 BATINCLUDE  2398      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2407    47169 BATINCLUDE  2398      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2408    47188 BATINCLUDE  2398      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2409    47209 BATINCLUDE  2398      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2410    47215 BATINCLUDE  2398      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2411    47221 BATINCLUDE  2398      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2412    47241 BATINCLUDE  2398      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2413    47247 BATINCLUDE  2398      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2414    47262 BATINCLUDE  2398      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2415    47275 BATINCLUDE  2398      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2416    47286 BATINCLUDE  2398      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2417    47292 BATINCLUDE  2398      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2418    47299 BATINCLUDE  2398      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2419    47312 BATINCLUDE  2398      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2420    47328 BATINCLUDE  2398      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2421    47343 BATINCLUDE  2398      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2422    47364 BATINCLUDE  2398      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2423    47387 BATINCLUDE  2398      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2424    47394 BATINCLUDE  2398      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2425    47414 BATINCLUDE  2398      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2426    47420 BATINCLUDE  2398      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2427    47426 BATINCLUDE  2398      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2428    47434 BATINCLUDE  2398      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2429    47457 BATINCLUDE  2398      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2430    47471 BATINCLUDE  2398      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2431    47489 BATINCLUDE  2398      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2432    47511 BATINCLUDE  2398      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2433    47533 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2434    47542 BATINCLUDE  2433       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2435    47555 BATINCLUDE  2433      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2436    47566 BATINCLUDE  2433      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2437    47572 BATINCLUDE  2433      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2438    47583 BATINCLUDE  2433      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2439    47594 BATINCLUDE  2433      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2440    47612 BATINCLUDE  2433      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2441    47639 BATINCLUDE  2433      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2442    47662 BATINCLUDE  2433      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2443    47681 BATINCLUDE  2433      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2444    47702 BATINCLUDE  2433      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2445    47708 BATINCLUDE  2433      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2446    47714 BATINCLUDE  2433      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2447    47734 BATINCLUDE  2433      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2448    47740 BATINCLUDE  2433      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2449    47755 BATINCLUDE  2433      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2450    47768 BATINCLUDE  2433      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2451    47779 BATINCLUDE  2433      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2452    47785 BATINCLUDE  2433      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2453    47792 BATINCLUDE  2433      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2454    47805 BATINCLUDE  2433      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2455    47821 BATINCLUDE  2433      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2456    47836 BATINCLUDE  2433      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2457    47857 BATINCLUDE  2433      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2458    47880 BATINCLUDE  2433      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2459    47887 BATINCLUDE  2433      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2460    47907 BATINCLUDE  2433      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2461    47913 BATINCLUDE  2433      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2462    47919 BATINCLUDE  2433      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2463    47927 BATINCLUDE  2433      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2464    47950 BATINCLUDE  2433      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2465    47964 BATINCLUDE  2433      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2466    47982 BATINCLUDE  2433      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2467    48004 BATINCLUDE  2433      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2468    48026 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2469    48035 BATINCLUDE  2468       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2470    48048 BATINCLUDE  2468      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2471    48059 BATINCLUDE  2468      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2472    48065 BATINCLUDE  2468      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2473    48076 BATINCLUDE  2468      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2474    48087 BATINCLUDE  2468      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2475    48105 BATINCLUDE  2468      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2476    48132 BATINCLUDE  2468      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2477    48155 BATINCLUDE  2468      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2478    48174 BATINCLUDE  2468      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2479    48195 BATINCLUDE  2468      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2480    48201 BATINCLUDE  2468      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2481    48207 BATINCLUDE  2468      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2482    48227 BATINCLUDE  2468      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2483    48233 BATINCLUDE  2468      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2484    48248 BATINCLUDE  2468      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2485    48261 BATINCLUDE  2468      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2486    48272 BATINCLUDE  2468      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2487    48278 BATINCLUDE  2468      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2488    48285 BATINCLUDE  2468      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2489    48298 BATINCLUDE  2468      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2490    48314 BATINCLUDE  2468      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2491    48329 BATINCLUDE  2468      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2492    48350 BATINCLUDE  2468      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2493    48373 BATINCLUDE  2468      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2494    48380 BATINCLUDE  2468      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2495    48400 BATINCLUDE  2468      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2496    48406 BATINCLUDE  2468      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2497    48412 BATINCLUDE  2468      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2498    48420 BATINCLUDE  2468      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2499    48443 BATINCLUDE  2468      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2500    48457 BATINCLUDE  2468      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2501    48475 BATINCLUDE  2468      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2502    48497 BATINCLUDE  2468      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2503    48519 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2504    48528 BATINCLUDE  2503       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2505    48541 BATINCLUDE  2503      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2506    48552 BATINCLUDE  2503      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2507    48558 BATINCLUDE  2503      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2508    48569 BATINCLUDE  2503      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2509    48580 BATINCLUDE  2503      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2510    48598 BATINCLUDE  2503      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2511    48625 BATINCLUDE  2503      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2512    48648 BATINCLUDE  2503      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2513    48667 BATINCLUDE  2503      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2514    48688 BATINCLUDE  2503      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2515    48694 BATINCLUDE  2503      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2516    48700 BATINCLUDE  2503      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2517    48720 BATINCLUDE  2503      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2518    48726 BATINCLUDE  2503      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2519    48741 BATINCLUDE  2503      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2520    48754 BATINCLUDE  2503      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2521    48765 BATINCLUDE  2503      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2522    48771 BATINCLUDE  2503      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2523    48778 BATINCLUDE  2503      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2524    48791 BATINCLUDE  2503      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2525    48807 BATINCLUDE  2503      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2526    48822 BATINCLUDE  2503      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2527    48843 BATINCLUDE  2503      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2528    48866 BATINCLUDE  2503      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2529    48873 BATINCLUDE  2503      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2530    48893 BATINCLUDE  2503      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2531    48899 BATINCLUDE  2503      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2532    48905 BATINCLUDE  2503      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2533    48913 BATINCLUDE  2503      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2534    48936 BATINCLUDE  2503      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2535    48950 BATINCLUDE  2503      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2536    48968 BATINCLUDE  2503      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2537    48990 BATINCLUDE  2503      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2538    49012 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2539    49021 BATINCLUDE  2538       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2540    49034 BATINCLUDE  2538      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2541    49045 BATINCLUDE  2538      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2542    49051 BATINCLUDE  2538      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2543    49062 BATINCLUDE  2538      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2544    49073 BATINCLUDE  2538      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2545    49091 BATINCLUDE  2538      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2546    49118 BATINCLUDE  2538      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2547    49141 BATINCLUDE  2538      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2548    49160 BATINCLUDE  2538      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2549    49181 BATINCLUDE  2538      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2550    49187 BATINCLUDE  2538      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2551    49193 BATINCLUDE  2538      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2552    49213 BATINCLUDE  2538      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2553    49219 BATINCLUDE  2538      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2554    49234 BATINCLUDE  2538      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2555    49247 BATINCLUDE  2538      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2556    49258 BATINCLUDE  2538      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2557    49264 BATINCLUDE  2538      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2558    49271 BATINCLUDE  2538      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2559    49284 BATINCLUDE  2538      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2560    49300 BATINCLUDE  2538      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2561    49315 BATINCLUDE  2538      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2562    49336 BATINCLUDE  2538      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2563    49359 BATINCLUDE  2538      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2564    49366 BATINCLUDE  2538      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2565    49386 BATINCLUDE  2538      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2566    49392 BATINCLUDE  2538      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2567    49398 BATINCLUDE  2538      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2568    49406 BATINCLUDE  2538      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2569    49429 BATINCLUDE  2538      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2570    49443 BATINCLUDE  2538      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2571    49461 BATINCLUDE  2538      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2572    49483 BATINCLUDE  2538      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2573    49505 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2574    49514 BATINCLUDE  2573       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2575    49527 BATINCLUDE  2573      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2576    49538 BATINCLUDE  2573      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2577    49544 BATINCLUDE  2573      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2578    49555 BATINCLUDE  2573      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2579    49566 BATINCLUDE  2573      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2580    49584 BATINCLUDE  2573      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2581    49611 BATINCLUDE  2573      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2582    49634 BATINCLUDE  2573      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2583    49653 BATINCLUDE  2573      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2584    49674 BATINCLUDE  2573      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2585    49680 BATINCLUDE  2573      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2586    49686 BATINCLUDE  2573      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2587    49706 BATINCLUDE  2573      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2588    49712 BATINCLUDE  2573      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2589    49727 BATINCLUDE  2573      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2590    49740 BATINCLUDE  2573      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2591    49751 BATINCLUDE  2573      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2592    49757 BATINCLUDE  2573      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2593    49764 BATINCLUDE  2573      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2594    49777 BATINCLUDE  2573      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2595    49793 BATINCLUDE  2573      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2596    49808 BATINCLUDE  2573      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2597    49829 BATINCLUDE  2573      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2598    49852 BATINCLUDE  2573      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2599    49859 BATINCLUDE  2573      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2600    49879 BATINCLUDE  2573      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2601    49885 BATINCLUDE  2573      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2602    49891 BATINCLUDE  2573      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2603    49899 BATINCLUDE  2573      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2604    49922 BATINCLUDE  2573      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2605    49936 BATINCLUDE  2573      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2606    49954 BATINCLUDE  2573      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2607    49976 BATINCLUDE  2573      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2608    49998 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2609    50007 BATINCLUDE  2608       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2610    50020 BATINCLUDE  2608      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2611    50031 BATINCLUDE  2608      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2612    50037 BATINCLUDE  2608      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2613    50048 BATINCLUDE  2608      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2614    50059 BATINCLUDE  2608      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2615    50077 BATINCLUDE  2608      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2616    50104 BATINCLUDE  2608      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2617    50127 BATINCLUDE  2608      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2618    50146 BATINCLUDE  2608      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2619    50167 BATINCLUDE  2608      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2620    50173 BATINCLUDE  2608      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2621    50179 BATINCLUDE  2608      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2622    50199 BATINCLUDE  2608      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2623    50205 BATINCLUDE  2608      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2624    50220 BATINCLUDE  2608      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2625    50233 BATINCLUDE  2608      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2626    50244 BATINCLUDE  2608      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2627    50250 BATINCLUDE  2608      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2628    50257 BATINCLUDE  2608      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2629    50270 BATINCLUDE  2608      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2630    50286 BATINCLUDE  2608      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2631    50301 BATINCLUDE  2608      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2632    50322 BATINCLUDE  2608      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2633    50345 BATINCLUDE  2608      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2634    50352 BATINCLUDE  2608      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2635    50372 BATINCLUDE  2608      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2636    50378 BATINCLUDE  2608      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2637    50384 BATINCLUDE  2608      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2638    50392 BATINCLUDE  2608      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2639    50415 BATINCLUDE  2608      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2640    50429 BATINCLUDE  2608      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2641    50447 BATINCLUDE  2608      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2642    50469 BATINCLUDE  2608      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2643    50491 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2644    50500 BATINCLUDE  2643       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2645    50513 BATINCLUDE  2643      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2646    50524 BATINCLUDE  2643      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2647    50530 BATINCLUDE  2643      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2648    50541 BATINCLUDE  2643      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2649    50552 BATINCLUDE  2643      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2650    50570 BATINCLUDE  2643      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2651    50597 BATINCLUDE  2643      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2652    50620 BATINCLUDE  2643      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2653    50639 BATINCLUDE  2643      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2654    50660 BATINCLUDE  2643      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2655    50666 BATINCLUDE  2643      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2656    50672 BATINCLUDE  2643      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2657    50692 BATINCLUDE  2643      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2658    50698 BATINCLUDE  2643      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2659    50713 BATINCLUDE  2643      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2660    50726 BATINCLUDE  2643      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2661    50737 BATINCLUDE  2643      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2662    50743 BATINCLUDE  2643      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2663    50750 BATINCLUDE  2643      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2664    50763 BATINCLUDE  2643      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2665    50779 BATINCLUDE  2643      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2666    50794 BATINCLUDE  2643      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2667    50815 BATINCLUDE  2643      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2668    50838 BATINCLUDE  2643      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2669    50845 BATINCLUDE  2643      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2670    50865 BATINCLUDE  2643      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2671    50871 BATINCLUDE  2643      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2672    50877 BATINCLUDE  2643      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2673    50885 BATINCLUDE  2643      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2674    50908 BATINCLUDE  2643      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2675    50922 BATINCLUDE  2643      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2676    50940 BATINCLUDE  2643      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2677    50962 BATINCLUDE  2643      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2678    50984 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2679    50993 BATINCLUDE  2678       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2680    51006 BATINCLUDE  2678      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2681    51017 BATINCLUDE  2678      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2682    51023 BATINCLUDE  2678      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2683    51034 BATINCLUDE  2678      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2684    51045 BATINCLUDE  2678      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2685    51063 BATINCLUDE  2678      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2686    51090 BATINCLUDE  2678      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2687    51113 BATINCLUDE  2678      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2688    51132 BATINCLUDE  2678      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2689    51153 BATINCLUDE  2678      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2690    51159 BATINCLUDE  2678      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2691    51165 BATINCLUDE  2678      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2692    51185 BATINCLUDE  2678      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2693    51191 BATINCLUDE  2678      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2694    51206 BATINCLUDE  2678      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2695    51219 BATINCLUDE  2678      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2696    51230 BATINCLUDE  2678      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2697    51236 BATINCLUDE  2678      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2698    51243 BATINCLUDE  2678      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2699    51256 BATINCLUDE  2678      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2700    51272 BATINCLUDE  2678      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2701    51287 BATINCLUDE  2678      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2702    51308 BATINCLUDE  2678      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2703    51331 BATINCLUDE  2678      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2704    51338 BATINCLUDE  2678      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2705    51358 BATINCLUDE  2678      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2706    51364 BATINCLUDE  2678      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2707    51370 BATINCLUDE  2678      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2708    51378 BATINCLUDE  2678      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2709    51401 BATINCLUDE  2678      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2710    51415 BATINCLUDE  2678      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2711    51433 BATINCLUDE  2678      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2712    51455 BATINCLUDE  2678      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2713    51477 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2714    51486 BATINCLUDE  2713       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2715    51499 BATINCLUDE  2713      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2716    51510 BATINCLUDE  2713      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2717    51516 BATINCLUDE  2713      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2718    51527 BATINCLUDE  2713      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2719    51538 BATINCLUDE  2713      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2720    51556 BATINCLUDE  2713      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2721    51583 BATINCLUDE  2713      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2722    51606 BATINCLUDE  2713      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2723    51625 BATINCLUDE  2713      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2724    51646 BATINCLUDE  2713      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2725    51652 BATINCLUDE  2713      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2726    51658 BATINCLUDE  2713      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2727    51678 BATINCLUDE  2713      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2728    51684 BATINCLUDE  2713      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2729    51699 BATINCLUDE  2713      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2730    51712 BATINCLUDE  2713      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2731    51723 BATINCLUDE  2713      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2732    51729 BATINCLUDE  2713      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2733    51736 BATINCLUDE  2713      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2734    51749 BATINCLUDE  2713      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2735    51765 BATINCLUDE  2713      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2736    51780 BATINCLUDE  2713      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2737    51801 BATINCLUDE  2713      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2738    51824 BATINCLUDE  2713      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2739    51831 BATINCLUDE  2713      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2740    51851 BATINCLUDE  2713      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2741    51857 BATINCLUDE  2713      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2742    51863 BATINCLUDE  2713      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2743    51871 BATINCLUDE  2713      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2744    51894 BATINCLUDE  2713      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2745    51908 BATINCLUDE  2713      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2746    51926 BATINCLUDE  2713      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2747    51948 BATINCLUDE  2713      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2748    51970 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2749    51979 BATINCLUDE  2748       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2750    51992 BATINCLUDE  2748      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2751    52003 BATINCLUDE  2748      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2752    52009 BATINCLUDE  2748      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2753    52020 BATINCLUDE  2748      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2754    52031 BATINCLUDE  2748      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2755    52049 BATINCLUDE  2748      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2756    52076 BATINCLUDE  2748      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2757    52099 BATINCLUDE  2748      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2758    52118 BATINCLUDE  2748      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2759    52139 BATINCLUDE  2748      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2760    52145 BATINCLUDE  2748      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2761    52151 BATINCLUDE  2748      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2762    52171 BATINCLUDE  2748      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2763    52177 BATINCLUDE  2748      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2764    52192 BATINCLUDE  2748      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2765    52205 BATINCLUDE  2748      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2766    52216 BATINCLUDE  2748      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2767    52222 BATINCLUDE  2748      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2768    52229 BATINCLUDE  2748      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2769    52242 BATINCLUDE  2748      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2770    52258 BATINCLUDE  2748      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2771    52273 BATINCLUDE  2748      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2772    52294 BATINCLUDE  2748      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2773    52317 BATINCLUDE  2748      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2774    52324 BATINCLUDE  2748      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2775    52344 BATINCLUDE  2748      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2776    52350 BATINCLUDE  2748      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2777    52356 BATINCLUDE  2748      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2778    52364 BATINCLUDE  2748      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2779    52387 BATINCLUDE  2748      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2780    52401 BATINCLUDE  2748      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2781    52419 BATINCLUDE  2748      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2782    52441 BATINCLUDE  2748      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2783    52463 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2784    52472 BATINCLUDE  2783       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2785    52485 BATINCLUDE  2783      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2786    52496 BATINCLUDE  2783      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2787    52502 BATINCLUDE  2783      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2788    52513 BATINCLUDE  2783      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2789    52524 BATINCLUDE  2783      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2790    52542 BATINCLUDE  2783      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2791    52569 BATINCLUDE  2783      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2792    52592 BATINCLUDE  2783      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2793    52611 BATINCLUDE  2783      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2794    52632 BATINCLUDE  2783      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2795    52638 BATINCLUDE  2783      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2796    52644 BATINCLUDE  2783      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2797    52664 BATINCLUDE  2783      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2798    52670 BATINCLUDE  2783      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2799    52685 BATINCLUDE  2783      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2800    52698 BATINCLUDE  2783      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2801    52709 BATINCLUDE  2783      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2802    52715 BATINCLUDE  2783      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2803    52722 BATINCLUDE  2783      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2804    52735 BATINCLUDE  2783      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2805    52751 BATINCLUDE  2783      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2806    52766 BATINCLUDE  2783      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2807    52787 BATINCLUDE  2783      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2808    52810 BATINCLUDE  2783      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2809    52817 BATINCLUDE  2783      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2810    52837 BATINCLUDE  2783      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2811    52843 BATINCLUDE  2783      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2812    52849 BATINCLUDE  2783      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2813    52857 BATINCLUDE  2783      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2814    52880 BATINCLUDE  2783      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2815    52894 BATINCLUDE  2783      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2816    52912 BATINCLUDE  2783      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2817    52934 BATINCLUDE  2783      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2818    52956 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2819    52965 BATINCLUDE  2818       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2820    52978 BATINCLUDE  2818      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2821    52989 BATINCLUDE  2818      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2822    52995 BATINCLUDE  2818      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2823    53006 BATINCLUDE  2818      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2824    53017 BATINCLUDE  2818      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2825    53035 BATINCLUDE  2818      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2826    53062 BATINCLUDE  2818      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2827    53085 BATINCLUDE  2818      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2828    53104 BATINCLUDE  2818      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2829    53125 BATINCLUDE  2818      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2830    53131 BATINCLUDE  2818      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2831    53137 BATINCLUDE  2818      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2832    53157 BATINCLUDE  2818      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2833    53163 BATINCLUDE  2818      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2834    53178 BATINCLUDE  2818      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2835    53191 BATINCLUDE  2818      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2836    53202 BATINCLUDE  2818      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2837    53208 BATINCLUDE  2818      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2838    53215 BATINCLUDE  2818      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2839    53228 BATINCLUDE  2818      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2840    53244 BATINCLUDE  2818      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2841    53259 BATINCLUDE  2818      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2842    53280 BATINCLUDE  2818      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2843    53303 BATINCLUDE  2818      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2844    53310 BATINCLUDE  2818      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2845    53330 BATINCLUDE  2818      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2846    53336 BATINCLUDE  2818      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2847    53342 BATINCLUDE  2818      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2848    53350 BATINCLUDE  2818      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2849    53373 BATINCLUDE  2818      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2850    53387 BATINCLUDE  2818      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2851    53405 BATINCLUDE  2818      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2852    53427 BATINCLUDE  2818      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2853    53449 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2854    53458 BATINCLUDE  2853       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2855    53471 BATINCLUDE  2853      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2856    53482 BATINCLUDE  2853      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2857    53488 BATINCLUDE  2853      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2858    53499 BATINCLUDE  2853      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2859    53510 BATINCLUDE  2853      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2860    53528 BATINCLUDE  2853      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2861    53555 BATINCLUDE  2853      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2862    53578 BATINCLUDE  2853      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2863    53597 BATINCLUDE  2853      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2864    53618 BATINCLUDE  2853      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2865    53624 BATINCLUDE  2853      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2866    53630 BATINCLUDE  2853      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2867    53650 BATINCLUDE  2853      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2868    53656 BATINCLUDE  2853      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2869    53671 BATINCLUDE  2853      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2870    53684 BATINCLUDE  2853      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2871    53695 BATINCLUDE  2853      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2872    53701 BATINCLUDE  2853      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2873    53708 BATINCLUDE  2853      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2874    53721 BATINCLUDE  2853      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2875    53737 BATINCLUDE  2853      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2876    53752 BATINCLUDE  2853      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2877    53773 BATINCLUDE  2853      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2878    53796 BATINCLUDE  2853      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2879    53803 BATINCLUDE  2853      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2880    53823 BATINCLUDE  2853      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2881    53829 BATINCLUDE  2853      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2882    53835 BATINCLUDE  2853      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2883    53843 BATINCLUDE  2853      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2884    53866 BATINCLUDE  2853      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2885    53880 BATINCLUDE  2853      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2886    53898 BATINCLUDE  2853      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2887    53920 BATINCLUDE  2853      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2888    53942 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2889    53951 BATINCLUDE  2888       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2890    53964 BATINCLUDE  2888      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2891    53975 BATINCLUDE  2888      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2892    53981 BATINCLUDE  2888      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2893    53992 BATINCLUDE  2888      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2894    54003 BATINCLUDE  2888      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2895    54021 BATINCLUDE  2888      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2896    54048 BATINCLUDE  2888      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2897    54071 BATINCLUDE  2888      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2898    54090 BATINCLUDE  2888      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2899    54111 BATINCLUDE  2888      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2900    54117 BATINCLUDE  2888      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2901    54123 BATINCLUDE  2888      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2902    54143 BATINCLUDE  2888      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2903    54149 BATINCLUDE  2888      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2904    54164 BATINCLUDE  2888      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2905    54177 BATINCLUDE  2888      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2906    54188 BATINCLUDE  2888      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2907    54194 BATINCLUDE  2888      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2908    54201 BATINCLUDE  2888      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2909    54214 BATINCLUDE  2888      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2910    54230 BATINCLUDE  2888      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2911    54245 BATINCLUDE  2888      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2912    54266 BATINCLUDE  2888      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2913    54289 BATINCLUDE  2888      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2914    54296 BATINCLUDE  2888      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2915    54316 BATINCLUDE  2888      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2916    54322 BATINCLUDE  2888      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2917    54328 BATINCLUDE  2888      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2918    54336 BATINCLUDE  2888      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2919    54359 BATINCLUDE  2888      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2920    54373 BATINCLUDE  2888      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2921    54391 BATINCLUDE  2888      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2922    54413 BATINCLUDE  2888      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2923    54435 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2924    54444 BATINCLUDE  2923       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2925    54457 BATINCLUDE  2923      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2926    54468 BATINCLUDE  2923      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2927    54474 BATINCLUDE  2923      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2928    54485 BATINCLUDE  2923      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2929    54496 BATINCLUDE  2923      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2930    54514 BATINCLUDE  2923      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2931    54541 BATINCLUDE  2923      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2932    54564 BATINCLUDE  2923      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2933    54583 BATINCLUDE  2923      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2934    54604 BATINCLUDE  2923      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2935    54610 BATINCLUDE  2923      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2936    54616 BATINCLUDE  2923      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2937    54636 BATINCLUDE  2923      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2938    54642 BATINCLUDE  2923      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2939    54657 BATINCLUDE  2923      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2940    54670 BATINCLUDE  2923      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2941    54681 BATINCLUDE  2923      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2942    54687 BATINCLUDE  2923      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2943    54694 BATINCLUDE  2923      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2944    54707 BATINCLUDE  2923      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2945    54723 BATINCLUDE  2923      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2946    54738 BATINCLUDE  2923      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2947    54759 BATINCLUDE  2923      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2948    54782 BATINCLUDE  2923      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2949    54789 BATINCLUDE  2923      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2950    54809 BATINCLUDE  2923      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2951    54815 BATINCLUDE  2923      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2952    54821 BATINCLUDE  2923      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2953    54829 BATINCLUDE  2923      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2954    54852 BATINCLUDE  2923      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2955    54866 BATINCLUDE  2923      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2956    54884 BATINCLUDE  2923      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2957    54906 BATINCLUDE  2923      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2958    54928 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2959    54937 BATINCLUDE  2958       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2960    54950 BATINCLUDE  2958      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2961    54961 BATINCLUDE  2958      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2962    54967 BATINCLUDE  2958      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2963    54978 BATINCLUDE  2958      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2964    54989 BATINCLUDE  2958      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2965    55007 BATINCLUDE  2958      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2966    55034 BATINCLUDE  2958      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2967    55057 BATINCLUDE  2958      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2968    55076 BATINCLUDE  2958      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2969    55097 BATINCLUDE  2958      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2970    55103 BATINCLUDE  2958      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2971    55109 BATINCLUDE  2958      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2972    55129 BATINCLUDE  2958      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2973    55135 BATINCLUDE  2958      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2974    55150 BATINCLUDE  2958      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2975    55163 BATINCLUDE  2958      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2976    55174 BATINCLUDE  2958      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2977    55180 BATINCLUDE  2958      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2978    55187 BATINCLUDE  2958      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2979    55200 BATINCLUDE  2958      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2980    55216 BATINCLUDE  2958      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2981    55231 BATINCLUDE  2958      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2982    55252 BATINCLUDE  2958      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2983    55275 BATINCLUDE  2958      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2984    55282 BATINCLUDE  2958      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2985    55302 BATINCLUDE  2958      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2986    55308 BATINCLUDE  2958      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2987    55314 BATINCLUDE  2958      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2988    55322 BATINCLUDE  2958      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2989    55345 BATINCLUDE  2958      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2990    55359 BATINCLUDE  2958      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2991    55377 BATINCLUDE  2958      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2992    55399 BATINCLUDE  2958      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2993    55422 BATINCLUDE  2394      14  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2994    55431 BATINCLUDE  2993       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2995    55451 BATINCLUDE  2993      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2996    55474 BATINCLUDE  2993      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2997    55487 BATINCLUDE  2993      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2998    55504 BATINCLUDE  2993      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2999    55530 BATINCLUDE  2993      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  3000    55568 BATINCLUDE  2993      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  3001    55640 BATINCLUDE  2993      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  3002    55676 BATINCLUDE  2993      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  3003    55710 BATINCLUDE  2993      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  3004    55743 BATINCLUDE  2993      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  3005    55749 BATINCLUDE  2993      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  3006    55755 BATINCLUDE  2993      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  3007    55789 BATINCLUDE  2993      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  3008    55803 BATINCLUDE  2993      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  3009    55818 BATINCLUDE  2993      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  3010    55831 BATINCLUDE  2993      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  3011    55846 BATINCLUDE  2993      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  3012    55857 BATINCLUDE  2993      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  3013    55864 BATINCLUDE  2993      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  3014    55877 BATINCLUDE  2993      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  3015    55907 BATINCLUDE  2993      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  3016    55923 BATINCLUDE  2993      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  3017    55965 BATINCLUDE  2993      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  3018    56001 BATINCLUDE  2993      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  3019    56014 BATINCLUDE  2993      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  3020    56053 BATINCLUDE  2993      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  3021    56064 BATINCLUDE  2993      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  3022    56075 BATINCLUDE  2993      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  3023    56088 BATINCLUDE  2993      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  3024    56134 BATINCLUDE  2993      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  3025    56161 BATINCLUDE  2993      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  3026    56224 BATINCLUDE  2993      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  3027    56259 BATINCLUDE  2993      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  3028    56283 BATINCLUDE  2394      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  3029    56292 BATINCLUDE  3028       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  3030    56300 BATINCLUDE  3028      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  3031    56311 BATINCLUDE  3028      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  3032    56317 BATINCLUDE  3028      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  3033    56328 BATINCLUDE  3028      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  3034    56334 BATINCLUDE  3028      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  3035    56344 BATINCLUDE  3028      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  3036    56356 BATINCLUDE  3028      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  3037    56370 BATINCLUDE  3028      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  3038    56379 BATINCLUDE  3028      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  3039    56400 BATINCLUDE  3028      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  3040    56406 BATINCLUDE  3028      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  3041    56412 BATINCLUDE  3028      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  3042    56427 BATINCLUDE  3028      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  3043    56433 BATINCLUDE  3028      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  3044    56441 BATINCLUDE  3028      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  3045    56449 BATINCLUDE  3028      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  3046    56455 BATINCLUDE  3028      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  3047    56461 BATINCLUDE  3028      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  3048    56468 BATINCLUDE  3028      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  3049    56475 BATINCLUDE  3028      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  3050    56482 BATINCLUDE  3028      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  3051    56496 BATINCLUDE  3028      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  3052    56504 BATINCLUDE  3028      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  3053    56512 BATINCLUDE  3028      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  3054    56519 BATINCLUDE  3028      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  3055    56527 BATINCLUDE  3028      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  3056    56533 BATINCLUDE  3028      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  3057    56539 BATINCLUDE  3028      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  3058    56547 BATINCLUDE  3028      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  3059    56565 BATINCLUDE  3028      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  3060    56574 BATINCLUDE  3028      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  3061    56580 BATINCLUDE  3028      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  3062    56592 BATINCLUDE  3028      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms


COMPILATION TIME     =        4.219 SECONDS      8 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 3
WITCH 5.2.0
E x e c u t i o n


**** GDX ERROR AT LINE 6179 - Unknown GDX symbol Q_EMI_ABAT

**** EXECERROR AT LINE 6179 CLEARED (EXECERROR=0)
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 4
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_brazil Using NLP From line 42416


Warning: Asynchronous solve turns holdFixed off for model witch_c_brazil
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 5
WITCH 5.2.0
Range Statistics    SOLVE witch_c_brazil Using NLP From line 42416


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 7.685E-06, 1.507E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 6.217E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 6
WITCH 5.2.0
Model Statistics    SOLVE witch_c_brazil Using NLP From line 42416


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       17,194
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,631  88 projected
NON ZERO ELEMENTS        89,571     NON LINEAR N-Z         18,865
CODE LENGTH              66,526     CONSTANT POOL             855


GENERATION TIME      =        0.484 SECONDS     73 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 7
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_canada Using NLP From line 42421


Warning: Asynchronous solve turns holdFixed off for model witch_c_canada
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 8
WITCH 5.2.0
Range Statistics    SOLVE witch_c_canada Using NLP From line 42421


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 4.326E-06, 1.916E+04] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.278E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 9
WITCH 5.2.0
Model Statistics    SOLVE witch_c_canada Using NLP From line 42421


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       16,073
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,635  60 projected
NON ZERO ELEMENTS        86,227     NON LINEAR N-Z         17,763
CODE LENGTH              62,759     CONSTANT POOL             737


GENERATION TIME      =        0.657 SECONDS     73 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 10
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_china Using NLP From line 42426


Warning: Asynchronous solve turns holdFixed off for model witch_c_china
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 11
WITCH 5.2.0
Range Statistics    SOLVE witch_c_china Using NLP From line 42426


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 4.487E-05, 3.339E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.295E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 12
WITCH 5.2.0
Model Statistics    SOLVE witch_c_china Using NLP From line 42426


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       17,017
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,636  65 projected
NON ZERO ELEMENTS        89,043     NON LINEAR N-Z         18,691
CODE LENGTH              65,977     CONSTANT POOL             795


GENERATION TIME      =        0.891 SECONDS     73 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 13
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_europe Using NLP From line 42431


Warning: Asynchronous solve turns holdFixed off for model witch_c_europe
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 14
WITCH 5.2.0
Range Statistics    SOLVE witch_c_europe Using NLP From line 42431


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 3.276E-05, 2.053E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.245E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 15
WITCH 5.2.0
Model Statistics    SOLVE witch_c_europe Using NLP From line 42431


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       17,370
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,638  95 projected
NON ZERO ELEMENTS        90,095     NON LINEAR N-Z         19,035
CODE LENGTH              67,213     CONSTANT POOL             764


GENERATION TIME      =        0.969 SECONDS     74 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 16
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_india Using NLP From line 42436


Warning: Asynchronous solve turns holdFixed off for model witch_c_india
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 17
WITCH 5.2.0
Range Statistics    SOLVE witch_c_india Using NLP From line 42436


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 8.595E-06, 2.755E+04] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.788E-19, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 18
WITCH 5.2.0
Model Statistics    SOLVE witch_c_india Using NLP From line 42436


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       16,132
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,631  146 projected
NON ZERO ELEMENTS        86,403     NON LINEAR N-Z         17,821
CODE LENGTH              62,842     CONSTANT POOL             854


GENERATION TIME      =        1.015 SECONDS     74 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 19
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_indonesia Using NLP From line 42441


Warning: Asynchronous solve turns holdFixed off for model witch_c_indonesia
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 20
WITCH 5.2.0
Range Statistics    SOLVE witch_c_indonesia Using NLP From line 42441


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 1.878E-06, 8.154E+03] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.044E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 21
WITCH 5.2.0
Model Statistics    SOLVE witch_c_indonesia Using NLP From line 42441


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       15,483
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,626  90 projected
NON ZERO ELEMENTS        84,467     NON LINEAR N-Z         17,183
CODE LENGTH              60,609     CONSTANT POOL             827


GENERATION TIME      =        0.984 SECONDS     74 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 22
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_jpnkor Using NLP From line 42446


Warning: Asynchronous solve turns holdFixed off for model witch_c_jpnkor
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 23
WITCH 5.2.0
Range Statistics    SOLVE witch_c_jpnkor Using NLP From line 42446


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 9.629E-06, 1.812E+03] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 6.993E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 24
WITCH 5.2.0
Model Statistics    SOLVE witch_c_jpnkor Using NLP From line 42446


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       13,594
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,632  116 projected
NON ZERO ELEMENTS        78,831     NON LINEAR N-Z         15,323
CODE LENGTH              54,221     CONSTANT POOL             764


GENERATION TIME      =        1.031 SECONDS     74 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 25
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_laca Using NLP From line 42451


Warning: Asynchronous solve turns holdFixed off for model witch_c_laca
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 26
WITCH 5.2.0
Range Statistics    SOLVE witch_c_laca Using NLP From line 42451


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 9.995E-06, 1.831E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.305E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 27
WITCH 5.2.0
Model Statistics    SOLVE witch_c_laca Using NLP From line 42451


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       20,026
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,640  115 projected
NON ZERO ELEMENTS        98,019     NON LINEAR N-Z         21,649
CODE LENGTH              76,270     CONSTANT POOL             855


GENERATION TIME      =        1.203 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 28
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_mena Using NLP From line 42456


Warning: Asynchronous solve turns holdFixed off for model witch_c_mena
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 29
WITCH 5.2.0
Range Statistics    SOLVE witch_c_mena Using NLP From line 42456


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 1.663E-05, 6.305E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.607E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 30
WITCH 5.2.0
Model Statistics    SOLVE witch_c_mena Using NLP From line 42456


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       18,728
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,640  134 projected
NON ZERO ELEMENTS        94,147     NON LINEAR N-Z         20,373
CODE LENGTH              71,774     CONSTANT POOL             827


GENERATION TIME      =        1.110 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 31
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_mexico Using NLP From line 42461


Warning: Asynchronous solve turns holdFixed off for model witch_c_mexico
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 32
WITCH 5.2.0
Range Statistics    SOLVE witch_c_mexico Using NLP From line 42461


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 7.273E-06, 9.339E+04] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 2.228E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 33
WITCH 5.2.0
Model Statistics    SOLVE witch_c_mexico Using NLP From line 42461


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       16,486
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,635  88 projected
NON ZERO ELEMENTS        87,459     NON LINEAR N-Z         18,169
CODE LENGTH              64,150     CONSTANT POOL             795


GENERATION TIME      =        1.062 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 34
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_oceania Using NLP From line 42466


Warning: Asynchronous solve turns holdFixed off for model witch_c_oceania
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 35
WITCH 5.2.0
Range Statistics    SOLVE witch_c_oceania Using NLP From line 42466


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 4.023E-06, 1.256E+06] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.491E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 36
WITCH 5.2.0
Model Statistics    SOLVE witch_c_oceania Using NLP From line 42466


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       19,849
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,640  59 projected
NON ZERO ELEMENTS        97,491     NON LINEAR N-Z         21,475
CODE LENGTH              75,721     CONSTANT POOL             763


GENERATION TIME      =        1.125 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 37
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_sasia Using NLP From line 42471


Warning: Asynchronous solve turns holdFixed off for model witch_c_sasia
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 38
WITCH 5.2.0
Range Statistics    SOLVE witch_c_sasia Using NLP From line 42471


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 3.273E-06, 4.264E+04] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 4.061E-14, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 39
WITCH 5.2.0
Model Statistics    SOLVE witch_c_sasia Using NLP From line 42471


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       15,542
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,631  158 projected
NON ZERO ELEMENTS        84,643     NON LINEAR N-Z         17,241
CODE LENGTH              60,842     CONSTANT POOL             829


GENERATION TIME      =        1.015 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 40
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_seasia Using NLP From line 42476


Warning: Asynchronous solve turns holdFixed off for model witch_c_seasia
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 41
WITCH 5.2.0
Range Statistics    SOLVE witch_c_seasia Using NLP From line 42476


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 8.294E-06, 1.139E+04] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.744E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 42
WITCH 5.2.0
Model Statistics    SOLVE witch_c_seasia Using NLP From line 42476


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       17,017
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,638  87 projected
NON ZERO ELEMENTS        89,043     NON LINEAR N-Z         18,691
CODE LENGTH              65,887     CONSTANT POOL             854


GENERATION TIME      =        1.109 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 43
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_southafrica Using NLP From line 42481


Warning: Asynchronous solve turns holdFixed off for model witch_c_southafrica
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 44
WITCH 5.2.0
Range Statistics    SOLVE witch_c_southafrica Using NLP From line 42481


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 7.094E-06, 7.068E+04] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 2.058E-19, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 45
WITCH 5.2.0
Model Statistics    SOLVE witch_c_southafrica Using NLP From line 42481


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       15,070
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,625  88 projected
NON ZERO ELEMENTS        83,235     NON LINEAR N-Z         16,777
CODE LENGTH              59,218     CONSTANT POOL             828


GENERATION TIME      =        1.156 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 46
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_ssa Using NLP From line 42486


Warning: Asynchronous solve turns holdFixed off for model witch_c_ssa
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 47
WITCH 5.2.0
Range Statistics    SOLVE witch_c_ssa Using NLP From line 42486


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 3.974E-06, 8.341E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.030E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 48
WITCH 5.2.0
Model Statistics    SOLVE witch_c_ssa Using NLP From line 42486


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       19,436
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,640  17 projected
NON ZERO ELEMENTS        96,259     NON LINEAR N-Z         21,069
CODE LENGTH              74,210     CONSTANT POOL             827


GENERATION TIME      =        1.281 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 49
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_te Using NLP From line 42491


Warning: Asynchronous solve turns holdFixed off for model witch_c_te
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 50
WITCH 5.2.0
Range Statistics    SOLVE witch_c_te Using NLP From line 42491


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 1.673E-05, 4.062E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.475E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 16:29:17 Page 51
WITCH 5.2.0
Model Statistics    SOLVE witch_c_te Using NLP From line 42491


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          99     SINGLE EQUATIONS       18,020
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,637  172 projected
NON ZERO ELEMENTS        92,035     NON LINEAR N-Z         19,677
CODE LENGTH              69,368     CONSTANT POOL             855


GENERATION TIME      =        1.172 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x