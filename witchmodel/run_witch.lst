GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 1
WITCH 5.2.0
C o m p i l a t i o n


  13   
  14  *-------------------------------------------------------------------------------
  15  * WITCH CONFIGURATION
  16  *-------------------------------------------------------------------------------
  17   
  18  * DATA SETUP
  19   
  20  * Regional mapping (r5, witch13, witch17, ...)
  22   
  23  * Data path suffix
  25   
  26  * Location of the data gdx files
  29   
  30  * BASELINE SETUP
  31   
  32  * Baseline scenario (ssp1, ssp2*, ssp3, ssp4, ssp5)
  34   
  35  * POLICY SETUP
  36   
  37  * Default policy is BAU, for other policy see core_policy.gms
  39   
  40  * COOPERATION SETUP
  41   
  42  * Cooperation type (noncoop, coop)
  43  *  noncoop: non-cooperative, each region is a coalition
  44  *  coop: fully cooperative, one world coalition
  46   
  47  * GDX SETUP
  48   
  49  * Starting gdx
  51   
  52  * Set BAU GDX for losses calculation
  54   
  55  * Toggle and set GDX to fix variables
  56  *$setglobal fixgdx %baugdx%
  57   
  58  * SOLVING SETUP
  59   
  60  * Don't solve the models
  61  *$setglobal nosolve
  62  * Solve only one region
  63  *$setglobal only_solve c_usa
  64   
  65  * OUTPUT SETUP
  66   
  67  * Set output name
  69  * Make an output gdx with the given name
  71   
  72  * CALIBRATION
  73   
  79   
  80  * MODEL SETUP
  81   
  82  * Enable climate equations
  83  *$setglobal solve_climate
  84   
  85  * Enable feedback
  86  *$setglobal damage_feedback
  87   
  88  * Toggle adaptation
  89  *$setglobal adaptation 'YES'
  90   
  91   
  92   
  93  *-------------------------------------------------------------------------------
  94  * DIRECTORY FOR OUTPUT [default = current directory]
  95  *-------------------------------------------------------------------------------
  96   
  97  * directory for outputs
 101   
 102  *-------------------------------------------------------------------------------
 103  * GENERATE - SOLVE - REPORT WITCH
 104  *-------------------------------------------------------------------------------
 105   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
 107  *-------------------------------------------------------------------------------
 108  * Call modules by order
 109  *-------------------------------------------------------------------------------
 113   
 114  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
 116  *-------------------------------------------------------------------------------
 117  * Algorithm
 118  *-------------------------------------------------------------------------------
 119   
 121   
 122  * Required conf variables
 126   
 127  * Convergence algorithm
 129  *$setglobal algo 'taton' # Tatonnement algorithm
 130   
 131  * Stopping convergence criteria if all coalitions are {optimal|feasible}
 133   
 134  * Toggle GDX generation at each Nash iteration [for debugging purpose]
 135  *$setglobal outgdx_iter
 136   
 137  * Maximum number of nash-loop iterations
 139   
 140  * Minimum number of nash-loop iterations
 142  * Seconds to wait between solution checks in the nash
 144  * Max seconds to wait for solutions in the nash loop
 146  * Max solver iterations
 148   
 149  * Solve statement parameters
 153   
 154  * ADMM algorithm parameters
 155  * Initial value for rho in the oil market
 157  * Initial value for rho in the carbon markets
 159   
 160  * Nosolve = one Nash-loop iteration, zero solver iterations, zero reruns, in-memory
 162   
 163  *-------------------------------------------------------------------------------
 165   
 166  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
 168  *-------------------------------------------------------------------------------
 169  * Time
 170  * - Temporal structure
 171  * - Fixed time periods
 172  * - States of the world
 173  *-------------------------------------------------------------------------------
 174   
 176   
 177  * Default fixgdx
 186   
 187  * Value in a specific year (use tt instead of t, not working in equations)
 188  $macro valuein(takeyear, expr) (smax(tt$(year(tt) eq &takeyear), &expr))
 189   
 190  *-------------------------------------------------------------------------------
 192   
 193  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
 195  *-------------------------------------------------------------------------------
 196  * Geographic dimension and mapping with countries
 197  *-------------------------------------------------------------------------------
 198   
 200   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\regions.conf
 204   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
 207  *-------------------------------------------------------------------------------
 208  * Non-Cooperative Setup
 209  *
 210  * Each region is defined as an individual coalition.
 211  *
 212  *-------------------------------------------------------------------------------
 213   
 215   
 216  * Each region is a coalition
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\noncoop.conf
 220   
 221  * Each coalition cooperates on climate within itself
 223   
 225   
 226  *-------------------------------------------------------------------------------
 228   
 229  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
 231  *-------------------------------------------------------------------------------
 232  * Welfare
 233  *-------------------------------------------------------------------------------
 234   
 236   
 237  * Default option: utilitarian, gamma=0
 238  * [if utilitarian not set, negishi weigths are used]
 243   
 244  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
 247  *-------------------------------------------------------------------------------
 248  * Economy
 249  * - Production and Consumption definition
 250  * - Top-level of the production function
 251  * Options:
 252  * --original_ssp=1 : original SSP population and GDP data
 253  *-------------------------------------------------------------------------------
 254   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
 257  *-------------------------------------------------------------------------------
 258  * Energy sector
 259  *-------------------------------------------------------------------------------
 260   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
 263  *-------------------------------------------------------------------------------
 264  * Carbon Emissions
 265  * - Total CO2 emissions and CO2 Fossil fuel and Industry
 266  * - CO2 emission costs
 267  * - GHG permit market
 268  *-------------------------------------------------------------------------------
 269   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
 272  *-------------------------------------------------------------------------------
 273  * Research & Development
 274  * Options:
 275  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
 276  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
 277  *-------------------------------------------------------------------------------
 278   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
 281  *-------------------------------------------------------------------------------
 282  * Default Climate Policy Implementation
 283  *
 284  * Options:
 285  *    --policy={bau (default),ctax}
 286  *        Implement a climate policy setting
 287  *  [ --scen= ]
 288  *        Policy variant.
 289  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
 290  *          * XXX for a fixed percentage/yr (e.g. 5) growth
 291  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
 292  *  [ --ctax_year=2020 ]
 293  *        Starting year of the carbon tax
 294  *  [ --ctax_initial=30 ]
 295  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
 296  *
 297  *-------------------------------------------------------------------------------
 299   
 300  * Carbon tax default options
 302   
 303  *-------------------------------------------------------------------------------
 305   
 306  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
 308  *-------------------------------------------------------------------------------
 309  * Energy efficiency
 310  *-------------------------------------------------------------------------------
 311   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
 314  *-------------------------------------------------------------------------------
 315  * Hydro Power
 316  *-------------------------------------------------------------------------------
 317   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
 320  *-------------------------------------------------------------------------------
 321  * System Integration:
 322  * - Capacity constraint
 323  * - Flexibility constraint
 324  * - Grid Investment
 325  * - Capacity growth constraint
 326  *-------------------------------------------------------------------------------
 327   
 329   
 333   
 334  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
 337  *-------------------------------------------------------------------------------
 338  * Nuclear power plants
 339  *-------------------------------------------------------------------------------
 340   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
 343  *-------------------------------------------------------------------------------
 344  * GHG module
 345  * - CH4 FFI + CH4 waste + CH4 open fires
 346  * - N2O FFI + N2O waste + N2O open fires
 347  *-------------------------------------------------------------------------------
 348   
 350   
 351  * Define the oghg baseline data source
 357   
 358  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
 361  *-------------------------------------------------------------------------------
 362  * F-gases
 363  * - LLF
 364  * - SLF
 365  *-------------------------------------------------------------------------------
 366   
 368   
 369  * Define the fgases baseline data source
 375   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
 378  *-------------------------------------------------------------------------------
 379  * Landuse [simplified version of the land-use model]
 380  *-------------------------------------------------------------------------------
 381   
 383   
 384  * Define the land-use baseline data source
 390   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
 393  *-------------------------------------------------------------------------------
 394  * Bioenergy power plant
 395  *-------------------------------------------------------------------------------
 396   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
 399  *-------------------------------------------------------------------------------
 400  * Traditional Biofuels
 401  * - Requires the precedence of mod_landuse
 402  *-------------------------------------------------------------------------------
 403   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
 406  *-------------------------------------------------------------------------------
 407  * Advanced biofuel
 408  * - Require the precedence of mod_landuse
 409  *-------------------------------------------------------------------------------
 410   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
 413  *-------------------------------------------------------------------------------
 414  * Carbon Capture and Sequestration
 415  *-------------------------------------------------------------------------------
 416   
 418   
 419  * Assumption for leakage in % per year --leak_input=0.0001
 421   
 422  * Value estimates to consider (low,best,high)
 425   
 426  *-------------------------------------------------------------------------------
 427   
 429   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
 431  *-------------------------------------------------------------------------------
 432  * Coal for non-electric sectors
 433  * - Coke Plants
 434  * - Industrial and Commercial combined-heat-and-power (CHP)
 435  * - Others
 436  *-------------------------------------------------------------------------------
 437   
 439   
 440  * Baseline nelcoal yearly growth rate [%]
 444  *$if %baseline%==ssp1 $setglobal nelcoal_basegr (-1.2)
 445   
 446  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
 449  *-------------------------------------------------------------------------------
 450  * Wind energy module
 451  * - onshore and offshore
 452  *-------------------------------------------------------------------------------
 453   
 455   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
 457  *-------------------------------------------------------------------------------
 458  * Solar Powerplants (PV and CSP) to the electrical system
 459  *-------------------------------------------------------------------------------
 460   
 461  *-------------------------------------------------------------------------------
 463   
 464  * Number of solar classes: full (26) or reduced (5)
 466   
 467  *-------------------------------------------------------------------------------
 469   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
 471  *-------------------------------------------------------------------------------
 472  * Technology development scenarios
 473  *-------------------------------------------------------------------------------
 474   
 476   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
 478  *-------------------------------------------------------------------------------
 479  * Oil Extraction
 480  * Options:
 481  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
 482  *-------------------------------------------------------------------------------
 483   
 485   
 486  * Define default resource availability levels for baseline
 492   
 493  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
 496  *-------------------------------------------------------------------------------
 497  * Uranium Resources
 498  *-------------------------------------------------------------------------------
 499   
 501   
 502  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
 505  *-------------------------------------------------------------------------------
 506  * Gas Resources
 507  *-------------------------------------------------------------------------------
 508   
 510   
 511  * Define default resource availability levels for baseline
 519   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
 522  *-------------------------------------------------------------------------------
 523  * Coal Resources
 524  *-------------------------------------------------------------------------------
 525   
 527   
 528  * Define default resource availability levels for baseline
 536   
 537  *-------------------------------------------------------------------------------
 539   
 540   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
 542  *-------------------------------------------------------------------------------
 543  * Climate
 544  *
 545  * Represents the climate
 546  * - based on the DICE model equations
 547  * - Radiative forcing for non CO2 ghgs
 548  * - parameters calibrated to reproduce MAGICC6.4 default response
 549  *
 550  *  Options:
 551  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
 552  * - $setglobal cooperate_on_climate {'YES','NO'}
 553  * - 'YES'(default): Countries within a coalition act in cooperation
 554  *   'NO': Countries within a coalition act individually
 555  *
 556  *-------------------------------------------------------------------------------
 557   
 559   
 560  * Check requirements
 562   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
 565  *-------------------------------------------------------------------------------
 566  * Long-run Damages from Climate Change
 567  * - Economic impacts
 568  * - Adaptation
 569  *-------------------------------------------------------------------------------
 570   
 572   
 573  * Define adaptation efficacy
 578   
 579  * Check requirements
 582   
 584   
 585  * Define damage cost function
 587   
 589   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
 591  *-------------------------------------------------------------------------------
 592  * Light-duty Vehicles for Personal Transport
 593  *-------------------------------------------------------------------------------
 594   
 596   
 597  * Define the transport baseline
 599   
 600  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
 603  *-------------------------------------------------------------------------------
 604  * Road Freight Transport
 605  *-------------------------------------------------------------------------------
 607   
 608   
 609   
 610   
 611   
 612   
 613  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
 615  *-------------------------------------------------------------------------------
 616  * Traditional Biomass
 617  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
 618  *  - require post_process to be launch before
 619  *-------------------------------------------------------------------------------
 620   
 622   
 623  * Optional modules
 624   
 625  * Policy modules
 626   
 627  * Calibration
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\macros.gms
 631  *-------------------------------------------------------------------------------
 632  * macros.gms
 633  *
 634  * Define macros to simplify complex and repetitive expressions
 635  *-------------------------------------------------------------------------------
 636   
 637  * Build a polynomial expression
 638  set polydeg 'Set of polynomial degrees' / deg0*deg11 /;
 639  $macro poly(x,coeff) sum(polydeg$(coeff), (coeff)*(x)**(ord(polydeg)-1))
 640   
 641  * Sum expression, defined with the set 'ss', over the subset 'sd'
 642  $macro cast(expression,ss,sd) sum(&ss$(sameas(&ss,&sd)), &expression)
 643   
 644  * Return true (>0), if the set 'small' belongs to the set 'big'
 645  $macro xiny(small,big) sum(&big$sameas(&big,&small),1)
 646   
 647  *-------------------------------------------------------------------------------
 648  * Specific macros
 649   
 650  * Sum child in the CES tree, in post_tables.gms
 651  $macro sumjchild(x,jset,anode) sum(j$map_j(&anode,j), cast(&x,&jset,j))
 652   
 653  * store model results, in solve_macros.gms
 654  $macro savereport(reg) solrep('&reg','objval')=witch_&reg.objval;\
 655                         solrep('&reg','solvestat')=witch_&reg.solvestat;\
 656                         solrep('&reg','modelstat')=witch_&reg.modelstat;\
 657                         solrep('&reg','iterusd')=witch_&reg.iterusd;\
 658                         solrep('&reg','resusd')=witch_&reg.resusd;\
 659                         solrep('&reg','numvar')=witch_&reg.numvar;\
 660                         solrep('&reg','numequ')=witch_&reg.numequ;\
 661                         solrep('&reg','numnz')=witch_&reg.numnz;\
 662                         solrep('&reg','numvarproj')=witch_&reg.numvarproj;\
 663                         solrep('&reg','numinfes')=witch_&reg.numinfes;\
 664                         solrep('&reg','numnopt')=witch_&reg.numnopt;\
 665                         solrep('&reg','domusd')=witch_&reg.domusd;
 666   
 667  * Select numiter iterations
 668  $macro last_iter(numiter) ((ord(ssiter) le ord(siter)) and (ord(ssiter) ge (ord(siter) - (&numiter - 1))))
 669   
 670  *-------------------------------------------------------------------------------
 671  * Load variables from startgdx
 672   
 673  * Read and set the variable level from the start GDX,
 674  * if the level is not found in the gdx, default is used
 675  $macro loadvar(var,setdep,default) \
 676  prevexecerrors = execerror; last_load_went_wrong=0; \
 677  execute_load 'data_witch17/results_ssp2_calib', &var; \
 678  if(execerror gt prevexecerrors, \
 679    &var.l&&setdep = &default; \
 680    execerror = prevexecerrors; \
 681    last_load_went_wrong=1)
 682   
 683  * Load variable level and specify bounds
 684  *   if the level is not found in the gdx, default is set as level
 685  $macro loadvarbnd(var,setdep,default,bndlo,bndup) \
 686  loadvar(var,setdep,default); \
 687  &var.lo&&setdep = &bndlo; \
 688  &var.up&&setdep = &bndup; \
 689  &var.l&&setdep$(&var.l&&setdep<&bndlo) = &bndlo; \
 690  &var.l&&setdep$(&var.l&&setdep>&bndup) = &bndup;
 691   
 692  $macro loadvarbndcond(var,setdep,cond,default,bndlo,bndup) \
 693  loadvar(var,'&&setdep$(&&cond)',default); \
 694  &var.lo&&setdep$(&&cond) = &bndlo; \
 695  &var.up&&setdep$(&&cond) = &bndup; \
 696  &var.l&&setdep$((&&cond) and (&var.l&&setdep<&bndlo)) = &bndlo; \
 697  &var.l&&setdep$((&&cond) and (&var.l&&setdep>&bndup)) = &bndup;
 698   
 699  * Load from the same parameter but with first ssp index. Name starts with ssp_
 700  $macro load_from_ssp(par,idx,ssp,suxfile) \
 701  parameter ssp_&par(*,&&idx); \
 702  execute_loaddc 'data_witch17/data_&suxfile' ssp_&par; \
 703  &par(&&idx) = ssp_&par('&ssp',&&idx);
 704   
 705  * Tracking error parameters
 706  parameter prevexecerrors, last_load_went_wrong;
 707   
 708  *-------------------------------------------------------------------------------
 709  * log some message
 710  file output;
 711  $macro putlog(msg) \
 712    put output; \
 713    put_utility 'log' / &msg; \
 714    putclose output;
 715   
 716  *-------------------------------------------------------------------------------
 717  * Load parameters from startgdx
 718   
 720  $macro loadpar(par,setdep,default) \
 721  prevexecerrors = execerror; last_load_went_wrong=0; \
 722  execute_load 'data_witch17/results_ssp2_calib', &par; \
 723  if(execerror gt prevexecerrors, &par&&setdep = &default; execerror = prevexecerrors; last_load_went_wrong=1)
 725   
 726  *-------------------------------------------------------------------------------
 727  * coalition
 728  $macro mapn(clt) map_clt_n(&clt,n)
 729  $macro mapnn(clt) map_clt_n(&clt,nn)
 730  * time horizon
 731  $macro mapn_th(clt) (map_clt_n(&clt,n) and (not tfix(t)) and (year(t) le yeoh))
 732  $macro mapn_th1(clt) (map_clt_n(&clt,n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))
 733  $macro mapn_th2(clt) (map_clt_n(&clt,n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh))
 734  $macro mapn_th1_last(clt) (map_clt_n(&clt,n) and \
 735        (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))
 736  $macro time_th1_last (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))
 737  * cooperation
 738  $macro cooprd (sum(clt$(map_clt_n(clt,n) and rd_cooperation(rd,clt)),1) eq 1)
 739  $macro nocooprd (sum(clt$(map_clt_n(clt,n) and rd_cooperation(rd,clt)),1) ne 1)
 740   
 741  *-------------------------------------------------------------------------------
 742  * Depreciation Rate [TW/TW/yr]
 743   
 744  * Let
 745  * A := integral over time of linear 1% depreciation until end of life (than full depreciation)
 746  *      = lifetime - 0.01/2 lifetime**2
 747  * B := integral over time of exponential depreciation
 748  *      = int((1-delta_en)^x, dx) = - 1/log(1-delta_en)
 749  * We find delta_en such that A = B
 750   
 751  $macro depreciation_rate(tech) 1 - exp( 1 / ( - lifetime(&tech,n) + (0.01/2) * lifetime(&tech,n)**2) )
 752   
 753  *-------------------------------------------------------------------------------
 754  * Production functions
 755   
 756  $macro cobb(out,fac1id,fac1exp,fac2id,fac2exp) \
 757      q0(&out,n)*( \
 758          (&fac1exp/q0(&fac1id,n))**(alpha(&fac1id,n))* \
 759          (&fac2exp/q0(&fac2id,n))**(alpha(&fac2id,n)) \
 760      )
 761   
 762  $macro ces(out,fac1id,fac1exp,fac2id,fac2exp) \
 763      q0(&out,n)*( \
 764          alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))**rho(&out,t)+ \
 765          alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n))**rho(&out,t) \
 766      )**(1/rho(&out,t))
 767   
 768  $macro ces3(out,fac1id,fac1exp,fac2id,fac2exp,fac3id,fac3exp) \
 769      q0(&out,n)*( \
 770          alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))**rho(&out,t)+ \
 771          alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n))**rho(&out,t)+ \
 772          alpha(&fac3id,n)*(&fac3exp/q0(&fac3id,n))**rho(&out,t) \
 773      )**(1/rho(&out,t))
 774   
 775  $macro lin(out,fac1id,fac1exp,fac2id,fac2exp) \
 776      q0(&out,n)*( \
 777          alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))+ \
 778          alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n)) \
 779      )
 780   
 781  $macro lin3(out,fac1id,fac1exp,fac2id,fac2exp,fac3id,fac3exp) \
 782      q0(&out,n)*( \
 783          alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))+ \
 784          alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n))+ \
 785          alpha(&fac3id,n)*(&fac3exp/q0(&fac3id,n)) \
 786      )
 787   
 788  *-------------------------------------------------------------------------------
 789  * Solve model
 790   
 791  $macro savereport_with_loadhandle(clt) \
 792    witch_&clt.handle = remh('&clt'); \
 793    execute_loadhandle witch_&clt; \
 794    savereport(&clt)
 795   
 796  $macro checkforproblems(clt) \
 797    if((solrep(&clt,'solvestat') ne 1) or (solrep(&clt,'modelstat') ne 2), \
 798      cproblem(&clt) = yes; \
 799    else cproblem(&clt) = no;)
 800   
 801  *-------------------------------------------------------------------------------
 802  * Frozen variables
 803   
 804  $macro freezevar(name,idx) \
 805  &name.fx&&idx = &name.l&&idx;
 806   
 807  $macro nullvar(name,idx) \
 808  &name.fx&&idx = 0;
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
 810  *-------------------------------------------------------------------------------
 811  * Call modules by order
 812  *-------------------------------------------------------------------------------
 816   
 817  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
 819  *-------------------------------------------------------------------------------
 820  * Algorithm
 821  *-------------------------------------------------------------------------------
 822   
 824   
 825  set ierr 'Entries used for checking convergence' / inv, pes, oil, nip, co2, wgt /;
 826   
 827  set siter 'Iteration index' / i1*i999 /;
 828  alias(siter, ssiter, sssiter);
 829   
 830  scalar timer      'Timer used to keep track of elapsed solve time';
 831  scalar stop_run   'Flag to signal final convergence or error in the run loop';
 832  scalar stop_nash  'Flag to signal final convergence or error in the Nash loop';
 833  scalar count_run  'Counter for runs';
 834   
 835  set conf 'model configuration'/
 836  'baseline'.'ssp2'
 837  'policy'.'bau'
 838  'datapath'.'data_witch17/'
 839  'regions'.'witch17'
 840  'n'.'witch17'
 841  'startgdx'.'data_witch17/results_ssp2_calib'
 842  'baugdx'.'data_witch17/results_ssp2_calib'
 843  'tfpgdx'.'data_witch17/data_tfp_ssp2'
 844  'calibgdx'.'data_witch17/data_calib'
 845  'nameout'.'emicap_usa_1e-3_500notusa'
 846  'outgdx'.'results_emicap_usa_1e-3_500notusa'
 848  /;
 849   
 850  *-------------------------------------------------------------------------------
 852   
 853  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
 855  *-------------------------------------------------------------------------------
 856  * Time
 857  * - Temporal structure
 858  * - Fixed time periods
 859  * - States of the world
 860  *-------------------------------------------------------------------------------
 861   
 863   
 864  * Time period node
 865  sets
 866      t           'Time period nodes'
 867      tnofirst(t) 'All nodes except the first time period node'
 868      tlast(t)    'Last time period nodes'
 869      tnolast(t)  'All nodes except the last time period nodes'
 870  ;
 871  singleton set tfirst(t)   'First time period node';
 872  alias(t,tt,ttt,tp1,ttp1,tp2,tm1,tm2);
 873  set pre(t,tp1)   'Precedence set, t is the predecessor of tp1';
 874  set preds(t,tt)   'Predecessors set, tt are all predecessors of t';
 875   
 876  parameter tperiod(t) 'time period';
 877  parameter year(t) 'reference year for period t';
 878  parameter begyear(t) 'beginning year for period t';
 879  parameter tlen(t) 'Length of time period [years]';
 880   
 881  * Time horizon for optimization
 882  scalar yeoh 'year end of time horizon';
 883   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\time.inc
 885  set t /
 886  1
 887  2
 888  3
 889  4
 890  5
 891  6
 892  7
 893  8
 894  9
 895  10
 896  11
 897  12
 898  13
 899  14
 900  15
 901  16
 902  17
 903  18
 904  19
 905  20
 906  21
 907  22
 908  23
 909  24
 910  25
 911  26
 912  27
 913  28
 914  29
 915  30
 916  /;
 917  set pre(t,tp1) /
 918  1.2
 919  2.3
 920  3.4
 921  4.5
 922  5.6
 923  6.7
 924  7.8
 925  8.9
 926  9.10
 927  10.11
 928  11.12
 929  12.13
 930  13.14
 931  14.15
 932  15.16
 933  16.17
 934  17.18
 935  18.19
 936  19.20
 937  20.21
 938  21.22
 939  22.23
 940  23.24
 941  24.25
 942  25.26
 943  26.27
 944  27.28
 945  28.29
 946  29.30
 947  /;
 948  tperiod('1')=1;
 949  tperiod('2')=2;
 950  tperiod('3')=3;
 951  tperiod('4')=4;
 952  tperiod('5')=5;
 953  tperiod('6')=6;
 954  tperiod('7')=7;
 955  tperiod('8')=8;
 956  tperiod('9')=9;
 957  tperiod('10')=10;
 958  tperiod('11')=11;
 959  tperiod('12')=12;
 960  tperiod('13')=13;
 961  tperiod('14')=14;
 962  tperiod('15')=15;
 963  tperiod('16')=16;
 964  tperiod('17')=17;
 965  tperiod('18')=18;
 966  tperiod('19')=19;
 967  tperiod('20')=20;
 968  tperiod('21')=21;
 969  tperiod('22')=22;
 970  tperiod('23')=23;
 971  tperiod('24')=24;
 972  tperiod('25')=25;
 973  tperiod('26')=26;
 974  tperiod('27')=27;
 975  tperiod('28')=28;
 976  tperiod('29')=29;
 977  tperiod('30')=30;
 978  year('1')=2005;
 979  year('2')=2010;
 980  year('3')=2015;
 981  year('4')=2020;
 982  year('5')=2025;
 983  year('6')=2030;
 984  year('7')=2035;
 985  year('8')=2040;
 986  year('9')=2045;
 987  year('10')=2050;
 988  year('11')=2055;
 989  year('12')=2060;
 990  year('13')=2065;
 991  year('14')=2070;
 992  year('15')=2075;
 993  year('16')=2080;
 994  year('17')=2085;
 995  year('18')=2090;
 996  year('19')=2095;
 997  year('20')=2100;
 998  year('21')=2105;
 999  year('22')=2110;
1000  year('23')=2115;
1001  year('24')=2120;
1002  year('25')=2125;
1003  year('26')=2130;
1004  year('27')=2135;
1005  year('28')=2140;
1006  year('29')=2145;
1007  year('30')=2150;
1008  tlen('1')=5;
1009  tlen('2')=5;
1010  tlen('3')=5;
1011  tlen('4')=5;
1012  tlen('5')=5;
1013  tlen('6')=5;
1014  tlen('7')=5;
1015  tlen('8')=5;
1016  tlen('9')=5;
1017  tlen('10')=5;
1018  tlen('11')=5;
1019  tlen('12')=5;
1020  tlen('13')=5;
1021  tlen('14')=5;
1022  tlen('15')=5;
1023  tlen('16')=5;
1024  tlen('17')=5;
1025  tlen('18')=5;
1026  tlen('19')=5;
1027  tlen('20')=5;
1028  tlen('21')=5;
1029  tlen('22')=5;
1030  tlen('23')=5;
1031  tlen('24')=5;
1032  tlen('25')=5;
1033  tlen('26')=5;
1034  tlen('27')=5;
1035  tlen('28')=5;
1036  tlen('29')=5;
1037  tlen('30')=5;
1038  begyear('1')=2003;
1039  begyear('2')=2008;
1040  begyear('3')=2013;
1041  begyear('4')=2018;
1042  begyear('5')=2023;
1043  begyear('6')=2028;
1044  begyear('7')=2033;
1045  begyear('8')=2038;
1046  begyear('9')=2043;
1047  begyear('10')=2048;
1048  begyear('11')=2053;
1049  begyear('12')=2058;
1050  begyear('13')=2063;
1051  begyear('14')=2068;
1052  begyear('15')=2073;
1053  begyear('16')=2078;
1054  begyear('17')=2083;
1055  begyear('18')=2088;
1056  begyear('19')=2093;
1057  begyear('20')=2098;
1058  begyear('21')=2103;
1059  begyear('22')=2108;
1060  begyear('23')=2113;
1061  begyear('24')=2118;
1062  begyear('25')=2123;
1063  begyear('26')=2128;
1064  begyear('27')=2133;
1065  begyear('28')=2138;
1066  begyear('29')=2143;
1067  begyear('30')=2148;
1068  preds('2','1')=yes;
1069  preds('3','1')=yes;
1070  preds('3','2')=yes;
1071  preds('4','1')=yes;
1072  preds('4','2')=yes;
1073  preds('4','3')=yes;
1074  preds('5','1')=yes;
1075  preds('5','2')=yes;
1076  preds('5','3')=yes;
1077  preds('5','4')=yes;
1078  preds('6','1')=yes;
1079  preds('6','2')=yes;
1080  preds('6','3')=yes;
1081  preds('6','4')=yes;
1082  preds('6','5')=yes;
1083  preds('7','1')=yes;
1084  preds('7','2')=yes;
1085  preds('7','3')=yes;
1086  preds('7','4')=yes;
1087  preds('7','5')=yes;
1088  preds('7','6')=yes;
1089  preds('8','1')=yes;
1090  preds('8','2')=yes;
1091  preds('8','3')=yes;
1092  preds('8','4')=yes;
1093  preds('8','5')=yes;
1094  preds('8','6')=yes;
1095  preds('8','7')=yes;
1096  preds('9','1')=yes;
1097  preds('9','2')=yes;
1098  preds('9','3')=yes;
1099  preds('9','4')=yes;
1100  preds('9','5')=yes;
1101  preds('9','6')=yes;
1102  preds('9','7')=yes;
1103  preds('9','8')=yes;
1104  preds('10','1')=yes;
1105  preds('10','2')=yes;
1106  preds('10','3')=yes;
1107  preds('10','4')=yes;
1108  preds('10','5')=yes;
1109  preds('10','6')=yes;
1110  preds('10','7')=yes;
1111  preds('10','8')=yes;
1112  preds('10','9')=yes;
1113  preds('11','1')=yes;
1114  preds('11','2')=yes;
1115  preds('11','3')=yes;
1116  preds('11','4')=yes;
1117  preds('11','5')=yes;
1118  preds('11','6')=yes;
1119  preds('11','7')=yes;
1120  preds('11','8')=yes;
1121  preds('11','9')=yes;
1122  preds('11','10')=yes;
1123  preds('12','1')=yes;
1124  preds('12','2')=yes;
1125  preds('12','3')=yes;
1126  preds('12','4')=yes;
1127  preds('12','5')=yes;
1128  preds('12','6')=yes;
1129  preds('12','7')=yes;
1130  preds('12','8')=yes;
1131  preds('12','9')=yes;
1132  preds('12','10')=yes;
1133  preds('12','11')=yes;
1134  preds('13','1')=yes;
1135  preds('13','2')=yes;
1136  preds('13','3')=yes;
1137  preds('13','4')=yes;
1138  preds('13','5')=yes;
1139  preds('13','6')=yes;
1140  preds('13','7')=yes;
1141  preds('13','8')=yes;
1142  preds('13','9')=yes;
1143  preds('13','10')=yes;
1144  preds('13','11')=yes;
1145  preds('13','12')=yes;
1146  preds('14','1')=yes;
1147  preds('14','2')=yes;
1148  preds('14','3')=yes;
1149  preds('14','4')=yes;
1150  preds('14','5')=yes;
1151  preds('14','6')=yes;
1152  preds('14','7')=yes;
1153  preds('14','8')=yes;
1154  preds('14','9')=yes;
1155  preds('14','10')=yes;
1156  preds('14','11')=yes;
1157  preds('14','12')=yes;
1158  preds('14','13')=yes;
1159  preds('15','1')=yes;
1160  preds('15','2')=yes;
1161  preds('15','3')=yes;
1162  preds('15','4')=yes;
1163  preds('15','5')=yes;
1164  preds('15','6')=yes;
1165  preds('15','7')=yes;
1166  preds('15','8')=yes;
1167  preds('15','9')=yes;
1168  preds('15','10')=yes;
1169  preds('15','11')=yes;
1170  preds('15','12')=yes;
1171  preds('15','13')=yes;
1172  preds('15','14')=yes;
1173  preds('16','1')=yes;
1174  preds('16','2')=yes;
1175  preds('16','3')=yes;
1176  preds('16','4')=yes;
1177  preds('16','5')=yes;
1178  preds('16','6')=yes;
1179  preds('16','7')=yes;
1180  preds('16','8')=yes;
1181  preds('16','9')=yes;
1182  preds('16','10')=yes;
1183  preds('16','11')=yes;
1184  preds('16','12')=yes;
1185  preds('16','13')=yes;
1186  preds('16','14')=yes;
1187  preds('16','15')=yes;
1188  preds('17','1')=yes;
1189  preds('17','2')=yes;
1190  preds('17','3')=yes;
1191  preds('17','4')=yes;
1192  preds('17','5')=yes;
1193  preds('17','6')=yes;
1194  preds('17','7')=yes;
1195  preds('17','8')=yes;
1196  preds('17','9')=yes;
1197  preds('17','10')=yes;
1198  preds('17','11')=yes;
1199  preds('17','12')=yes;
1200  preds('17','13')=yes;
1201  preds('17','14')=yes;
1202  preds('17','15')=yes;
1203  preds('17','16')=yes;
1204  preds('18','1')=yes;
1205  preds('18','2')=yes;
1206  preds('18','3')=yes;
1207  preds('18','4')=yes;
1208  preds('18','5')=yes;
1209  preds('18','6')=yes;
1210  preds('18','7')=yes;
1211  preds('18','8')=yes;
1212  preds('18','9')=yes;
1213  preds('18','10')=yes;
1214  preds('18','11')=yes;
1215  preds('18','12')=yes;
1216  preds('18','13')=yes;
1217  preds('18','14')=yes;
1218  preds('18','15')=yes;
1219  preds('18','16')=yes;
1220  preds('18','17')=yes;
1221  preds('19','1')=yes;
1222  preds('19','2')=yes;
1223  preds('19','3')=yes;
1224  preds('19','4')=yes;
1225  preds('19','5')=yes;
1226  preds('19','6')=yes;
1227  preds('19','7')=yes;
1228  preds('19','8')=yes;
1229  preds('19','9')=yes;
1230  preds('19','10')=yes;
1231  preds('19','11')=yes;
1232  preds('19','12')=yes;
1233  preds('19','13')=yes;
1234  preds('19','14')=yes;
1235  preds('19','15')=yes;
1236  preds('19','16')=yes;
1237  preds('19','17')=yes;
1238  preds('19','18')=yes;
1239  preds('20','1')=yes;
1240  preds('20','2')=yes;
1241  preds('20','3')=yes;
1242  preds('20','4')=yes;
1243  preds('20','5')=yes;
1244  preds('20','6')=yes;
1245  preds('20','7')=yes;
1246  preds('20','8')=yes;
1247  preds('20','9')=yes;
1248  preds('20','10')=yes;
1249  preds('20','11')=yes;
1250  preds('20','12')=yes;
1251  preds('20','13')=yes;
1252  preds('20','14')=yes;
1253  preds('20','15')=yes;
1254  preds('20','16')=yes;
1255  preds('20','17')=yes;
1256  preds('20','18')=yes;
1257  preds('20','19')=yes;
1258  preds('21','1')=yes;
1259  preds('21','2')=yes;
1260  preds('21','3')=yes;
1261  preds('21','4')=yes;
1262  preds('21','5')=yes;
1263  preds('21','6')=yes;
1264  preds('21','7')=yes;
1265  preds('21','8')=yes;
1266  preds('21','9')=yes;
1267  preds('21','10')=yes;
1268  preds('21','11')=yes;
1269  preds('21','12')=yes;
1270  preds('21','13')=yes;
1271  preds('21','14')=yes;
1272  preds('21','15')=yes;
1273  preds('21','16')=yes;
1274  preds('21','17')=yes;
1275  preds('21','18')=yes;
1276  preds('21','19')=yes;
1277  preds('21','20')=yes;
1278  preds('22','1')=yes;
1279  preds('22','2')=yes;
1280  preds('22','3')=yes;
1281  preds('22','4')=yes;
1282  preds('22','5')=yes;
1283  preds('22','6')=yes;
1284  preds('22','7')=yes;
1285  preds('22','8')=yes;
1286  preds('22','9')=yes;
1287  preds('22','10')=yes;
1288  preds('22','11')=yes;
1289  preds('22','12')=yes;
1290  preds('22','13')=yes;
1291  preds('22','14')=yes;
1292  preds('22','15')=yes;
1293  preds('22','16')=yes;
1294  preds('22','17')=yes;
1295  preds('22','18')=yes;
1296  preds('22','19')=yes;
1297  preds('22','20')=yes;
1298  preds('22','21')=yes;
1299  preds('23','1')=yes;
1300  preds('23','2')=yes;
1301  preds('23','3')=yes;
1302  preds('23','4')=yes;
1303  preds('23','5')=yes;
1304  preds('23','6')=yes;
1305  preds('23','7')=yes;
1306  preds('23','8')=yes;
1307  preds('23','9')=yes;
1308  preds('23','10')=yes;
1309  preds('23','11')=yes;
1310  preds('23','12')=yes;
1311  preds('23','13')=yes;
1312  preds('23','14')=yes;
1313  preds('23','15')=yes;
1314  preds('23','16')=yes;
1315  preds('23','17')=yes;
1316  preds('23','18')=yes;
1317  preds('23','19')=yes;
1318  preds('23','20')=yes;
1319  preds('23','21')=yes;
1320  preds('23','22')=yes;
1321  preds('24','1')=yes;
1322  preds('24','2')=yes;
1323  preds('24','3')=yes;
1324  preds('24','4')=yes;
1325  preds('24','5')=yes;
1326  preds('24','6')=yes;
1327  preds('24','7')=yes;
1328  preds('24','8')=yes;
1329  preds('24','9')=yes;
1330  preds('24','10')=yes;
1331  preds('24','11')=yes;
1332  preds('24','12')=yes;
1333  preds('24','13')=yes;
1334  preds('24','14')=yes;
1335  preds('24','15')=yes;
1336  preds('24','16')=yes;
1337  preds('24','17')=yes;
1338  preds('24','18')=yes;
1339  preds('24','19')=yes;
1340  preds('24','20')=yes;
1341  preds('24','21')=yes;
1342  preds('24','22')=yes;
1343  preds('24','23')=yes;
1344  preds('25','1')=yes;
1345  preds('25','2')=yes;
1346  preds('25','3')=yes;
1347  preds('25','4')=yes;
1348  preds('25','5')=yes;
1349  preds('25','6')=yes;
1350  preds('25','7')=yes;
1351  preds('25','8')=yes;
1352  preds('25','9')=yes;
1353  preds('25','10')=yes;
1354  preds('25','11')=yes;
1355  preds('25','12')=yes;
1356  preds('25','13')=yes;
1357  preds('25','14')=yes;
1358  preds('25','15')=yes;
1359  preds('25','16')=yes;
1360  preds('25','17')=yes;
1361  preds('25','18')=yes;
1362  preds('25','19')=yes;
1363  preds('25','20')=yes;
1364  preds('25','21')=yes;
1365  preds('25','22')=yes;
1366  preds('25','23')=yes;
1367  preds('25','24')=yes;
1368  preds('26','1')=yes;
1369  preds('26','2')=yes;
1370  preds('26','3')=yes;
1371  preds('26','4')=yes;
1372  preds('26','5')=yes;
1373  preds('26','6')=yes;
1374  preds('26','7')=yes;
1375  preds('26','8')=yes;
1376  preds('26','9')=yes;
1377  preds('26','10')=yes;
1378  preds('26','11')=yes;
1379  preds('26','12')=yes;
1380  preds('26','13')=yes;
1381  preds('26','14')=yes;
1382  preds('26','15')=yes;
1383  preds('26','16')=yes;
1384  preds('26','17')=yes;
1385  preds('26','18')=yes;
1386  preds('26','19')=yes;
1387  preds('26','20')=yes;
1388  preds('26','21')=yes;
1389  preds('26','22')=yes;
1390  preds('26','23')=yes;
1391  preds('26','24')=yes;
1392  preds('26','25')=yes;
1393  preds('27','1')=yes;
1394  preds('27','2')=yes;
1395  preds('27','3')=yes;
1396  preds('27','4')=yes;
1397  preds('27','5')=yes;
1398  preds('27','6')=yes;
1399  preds('27','7')=yes;
1400  preds('27','8')=yes;
1401  preds('27','9')=yes;
1402  preds('27','10')=yes;
1403  preds('27','11')=yes;
1404  preds('27','12')=yes;
1405  preds('27','13')=yes;
1406  preds('27','14')=yes;
1407  preds('27','15')=yes;
1408  preds('27','16')=yes;
1409  preds('27','17')=yes;
1410  preds('27','18')=yes;
1411  preds('27','19')=yes;
1412  preds('27','20')=yes;
1413  preds('27','21')=yes;
1414  preds('27','22')=yes;
1415  preds('27','23')=yes;
1416  preds('27','24')=yes;
1417  preds('27','25')=yes;
1418  preds('27','26')=yes;
1419  preds('28','1')=yes;
1420  preds('28','2')=yes;
1421  preds('28','3')=yes;
1422  preds('28','4')=yes;
1423  preds('28','5')=yes;
1424  preds('28','6')=yes;
1425  preds('28','7')=yes;
1426  preds('28','8')=yes;
1427  preds('28','9')=yes;
1428  preds('28','10')=yes;
1429  preds('28','11')=yes;
1430  preds('28','12')=yes;
1431  preds('28','13')=yes;
1432  preds('28','14')=yes;
1433  preds('28','15')=yes;
1434  preds('28','16')=yes;
1435  preds('28','17')=yes;
1436  preds('28','18')=yes;
1437  preds('28','19')=yes;
1438  preds('28','20')=yes;
1439  preds('28','21')=yes;
1440  preds('28','22')=yes;
1441  preds('28','23')=yes;
1442  preds('28','24')=yes;
1443  preds('28','25')=yes;
1444  preds('28','26')=yes;
1445  preds('28','27')=yes;
1446  preds('29','1')=yes;
1447  preds('29','2')=yes;
1448  preds('29','3')=yes;
1449  preds('29','4')=yes;
1450  preds('29','5')=yes;
1451  preds('29','6')=yes;
1452  preds('29','7')=yes;
1453  preds('29','8')=yes;
1454  preds('29','9')=yes;
1455  preds('29','10')=yes;
1456  preds('29','11')=yes;
1457  preds('29','12')=yes;
1458  preds('29','13')=yes;
1459  preds('29','14')=yes;
1460  preds('29','15')=yes;
1461  preds('29','16')=yes;
1462  preds('29','17')=yes;
1463  preds('29','18')=yes;
1464  preds('29','19')=yes;
1465  preds('29','20')=yes;
1466  preds('29','21')=yes;
1467  preds('29','22')=yes;
1468  preds('29','23')=yes;
1469  preds('29','24')=yes;
1470  preds('29','25')=yes;
1471  preds('29','26')=yes;
1472  preds('29','27')=yes;
1473  preds('29','28')=yes;
1474  preds('30','1')=yes;
1475  preds('30','2')=yes;
1476  preds('30','3')=yes;
1477  preds('30','4')=yes;
1478  preds('30','5')=yes;
1479  preds('30','6')=yes;
1480  preds('30','7')=yes;
1481  preds('30','8')=yes;
1482  preds('30','9')=yes;
1483  preds('30','10')=yes;
1484  preds('30','11')=yes;
1485  preds('30','12')=yes;
1486  preds('30','13')=yes;
1487  preds('30','14')=yes;
1488  preds('30','15')=yes;
1489  preds('30','16')=yes;
1490  preds('30','17')=yes;
1491  preds('30','18')=yes;
1492  preds('30','19')=yes;
1493  preds('30','20')=yes;
1494  preds('30','21')=yes;
1495  preds('30','22')=yes;
1496  preds('30','23')=yes;
1497  preds('30','24')=yes;
1498  preds('30','25')=yes;
1499  preds('30','26')=yes;
1500  preds('30','27')=yes;
1501  preds('30','28')=yes;
1502  preds('30','29')=yes;
1503   
1504  * tfirst and tlast over time
1505  tfirst(t) = yes$(tperiod(t) eq smin(tt,tperiod(tt)));
1506  tlast(t) = yes$(tperiod(t) eq smax(tt,tperiod(tt)));
1507   
1508  tnofirst(t) = yes$(not tfirst(t));
1509  tnolast(t)  = yes$(not tlast(t));
1510   
1511  * End of time horizon for optimization
1513  yeoh = smax(t, year(t));
1515   
1516  * Fixed period nodes
1517  set tfix(t)    'fixed period nodes';
1518  tfix(t) = no;
1519   
1520  * Create and load fix variable
1521  $macro loadfix(name,idx,type) \
1522  &type FIX&name&&idx; \
1523  execute_load '%fixgdx%.gdx',FIX&name=&name;
1524   
1525  * Fix variable in tfix
1526  $macro tfixvar(name,idx) \
1527  loadfix(name,idx,variable) \
1528  &name.fx&&idx$tfix(t) = FIX&name.l&&idx; \
1529  &name.l&&idx$tfix(t) = FIX&name.l&&idx;
1530   
1531  * Fix Variable in tfix+1
1532  $macro tfix1var(name,idx) \
1533  loadfix(name,idx,variable) \
1534  loop((t,tfix(tp1))$pre(t,tp1), \
1535  &name.fx&&idx = FIX&name.l&&idx; \
1536  &name.l&&idx = FIX&name.l&&idx; \
1537  );
1538   
1539  * load parameter in tfix
1540  $macro tfixpar(name,idx) \
1541  loadfix(name,idx,parameter) \
1542  &name&&idx$tfix(t) = FIX&name&&idx;
1543   
1544  set conf /
1546  /;
1547   
1548  *-------------------------------------------------------------------------------
1550   
1551  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
1553  *-------------------------------------------------------------------------------
1554  * Geographic dimension and mapping with countries
1555  *-------------------------------------------------------------------------------
1556   
1558   
1559  set n 'Regions' /
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\n.inc
1561  brazil
1562  canada
1563  china
1564  europe
1565  india
1566  indonesia
1567  jpnkor
1568  laca
1569  mena
1570  mexico
1571  oceania
1572  sasia
1573  seasia
1574  southafrica
1575  ssa
1576  te
1577  usa
1578  /;
1579   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\regions.inc
1581  set iso3 'Country definition in ISO_3166-1_alpha-3' /
1582  ABW
1583  AFG
1584  AGO
1585  AIA
1586  ALA
1587  ALB
1588  AND
1589  ARE
1590  ARG
1591  ARM
1592  ASM
1593  ATA
1594  ATF
1595  ATG
1596  AUS
1597  AUT
1598  AZE
1599  BDI
1600  BEL
1601  BEN
1602  BES
1603  BFA
1604  BGD
1605  BGR
1606  BHR
1607  BHS
1608  BIH
1609  BLM
1610  BLR
1611  BLZ
1612  BMU
1613  BOL
1614  BRA
1615  BRB
1616  BRN
1617  BTN
1618  BVT
1619  BWA
1620  CAF
1621  CAN
1622  CCK
1623  CHE
1624  CHL
1625  CHN
1626  CIV
1627  CMR
1628  COD
1629  COG
1630  COK
1631  COL
1632  COM
1633  CPV
1634  CRI
1635  CUB
1636  CUW
1637  CXR
1638  CYM
1639  CYP
1640  CZE
1641  DEU
1642  DJI
1643  DMA
1644  DNK
1645  DOM
1646  DZA
1647  ECU
1648  EGY
1649  ERI
1650  ESH
1651  ESP
1652  EST
1653  ETH
1654  FIN
1655  FJI
1656  FLK
1657  FRA
1658  FRO
1659  FSM
1660  GAB
1661  GBR
1662  GEO
1663  GGY
1664  GHA
1665  GIB
1666  GIN
1667  GLP
1668  GMB
1669  GNB
1670  GNQ
1671  GRC
1672  GRD
1673  GRL
1674  GTM
1675  GUF
1676  GUM
1677  GUY
1678  HKG
1679  HMD
1680  HND
1681  HRV
1682  HTI
1683  HUN
1684  IDN
1685  IMN
1686  IND
1687  IOT
1688  IRL
1689  IRN
1690  IRQ
1691  ISL
1692  ISR
1693  ITA
1694  JAM
1695  JEY
1696  JOR
1697  JPN
1698  KAZ
1699  KEN
1700  KGZ
1701  KHM
1702  KIR
1703  KNA
1704  KOR
1705  KSV
1706  KWT
1707  LAO
1708  LBN
1709  LBR
1710  LBY
1711  LCA
1712  LIE
1713  LKA
1714  LSO
1715  LTU
1716  LUX
1717  LVA
1718  MAC
1719  MAF
1720  MAR
1721  MCO
1722  MDA
1723  MDG
1724  MDV
1725  MEX
1726  MHL
1727  MKD
1728  MLI
1729  MLT
1730  MMR
1731  MNE
1732  MNG
1733  MNP
1734  MOZ
1735  MRT
1736  MSR
1737  MTQ
1738  MUS
1739  MWI
1740  MYS
1741  MYT
1742  NAM
1743  NCL
1744  NER
1745  NFK
1746  NGA
1747  NIC
1748  NIU
1749  NLD
1750  NOR
1751  NPL
1752  NRU
1753  NZL
1754  OMN
1755  PAK
1756  PAN
1757  PCN
1758  PER
1759  PHL
1760  PLW
1761  PNG
1762  POL
1763  PRI
1764  PRK
1765  PRT
1766  PRY
1767  PSE
1768  PYF
1769  QAT
1770  REU
1771  ROU
1772  RUS
1773  RWA
1774  SAU
1775  SDN
1776  SEN
1777  SGP
1778  SGS
1779  SHN
1780  SJM
1781  SLB
1782  SLE
1783  SLV
1784  SMR
1785  SOM
1786  SPM
1787  SRB
1788  SSD
1789  STP
1790  SUR
1791  SVK
1792  SVN
1793  SWE
1794  SWZ
1795  SXM
1796  SYC
1797  SYR
1798  TCA
1799  TCD
1800  TGO
1801  THA
1802  TJK
1803  TKL
1804  TKM
1805  TLS
1806  TON
1807  TTO
1808  TUN
1809  TUR
1810  TUV
1811  TWN
1812  TZA
1813  UGA
1814  UKR
1815  UMI
1816  URY
1817  USA
1818  UZB
1819  VAT
1820  VCT
1821  VEN
1822  VGB
1823  VIR
1824  VNM
1825  VUT
1826  WLF
1827  WSM
1828  YEM
1829  ZAF
1830  ZMB
1831  ZWE
1832  /;
1833  set map_n_iso3(n,iso3) 'Mapping between WITCH regions and iso3'/
1834  canada.CAN
1835  canada.SPM
1836  jpnkor.JPN
1837  jpnkor.KOR
1838  oceania.NZL
1839  oceania.AUS
1840  indonesia.IDN
1841  southafrica.ZAF
1842  brazil.BRA
1843  mexico.MEX
1844  china.CHN
1845  china.HKG
1846  china.MAC
1847  china.TWN
1848  india.IND
1849  te.MNG
1850  ssa.DJI
1851  ssa.IOT
1852  ssa.BVT
1853  ssa.ATF
1854  laca.ATA
1855  laca.BMU
1856  laca.SGS
1857  laca.TCA
1858  laca.VGB
1859  laca.VIR
1860  jpnkor.PRK
1861  oceania.CXR
1862  oceania.COK
1863  oceania.HMD
1864  oceania.NFK
1865  oceania.NIU
1866  oceania.NRU
1867  oceania.PCN
1868  oceania.TKL
1869  oceania.TUV
1870  oceania.UMI
1871  oceania.WLF
1872  oceania.FJI
1873  oceania.PNG
1874  oceania.FSM
1875  oceania.GUM
1876  oceania.ASM
1877  oceania.TLS
1878  oceania.PYF
1879  oceania.KIR
1880  oceania.MNP
1881  oceania.MHL
1882  oceania.NCL
1883  oceania.PLW
1884  oceania.WSM
1885  oceania.SLB
1886  oceania.TON
1887  oceania.VUT
1888  sasia.AFG
1889  sasia.BGD
1890  sasia.BTN
1891  sasia.LKA
1892  sasia.MDV
1893  sasia.NPL
1894  sasia.PAK
1895  seasia.BRN
1896  seasia.CCK
1897  seasia.KHM
1898  seasia.LAO
1899  seasia.MMR
1900  seasia.MYS
1901  seasia.PHL
1902  seasia.SGP
1903  seasia.THA
1904  seasia.VNM
1905  laca.ABW
1906  laca.AIA
1907  laca.ARG
1908  laca.ATG
1909  laca.BES
1910  laca.BHS
1911  laca.BLM
1912  laca.BLZ
1913  laca.BOL
1914  laca.BRB
1915  laca.CHL
1916  laca.COL
1917  laca.CRI
1918  laca.CUB
1919  laca.CUW
1920  laca.CYM
1921  laca.DMA
1922  laca.DOM
1923  laca.ECU
1924  laca.FLK
1925  laca.GLP
1926  laca.GRD
1927  laca.GTM
1928  laca.GUF
1929  laca.GUY
1930  laca.HND
1931  laca.HTI
1932  laca.JAM
1933  laca.KNA
1934  laca.LCA
1935  laca.MAF
1936  laca.MSR
1937  laca.MTQ
1938  laca.NIC
1939  laca.PAN
1940  laca.PER
1941  laca.PRI
1942  laca.PRY
1943  laca.SLV
1944  laca.SUR
1945  laca.SXM
1946  laca.TTO
1947  laca.URY
1948  laca.VCT
1949  laca.VEN
1950  mena.ARE
1951  mena.BHR
1952  mena.DZA
1953  mena.EGY
1954  mena.ESH
1955  mena.IRN
1956  mena.IRQ
1957  mena.ISR
1958  mena.JOR
1959  mena.KWT
1960  mena.LBN
1961  mena.LBY
1962  mena.MAR
1963  mena.OMN
1964  mena.PSE
1965  mena.QAT
1966  mena.SAU
1967  mena.SYR
1968  mena.TUN
1969  mena.YEM
1970  europe.BGR
1971  europe.CYP
1972  europe.CZE
1973  europe.EST
1974  europe.HUN
1975  europe.LTU
1976  europe.LVA
1977  europe.POL
1978  europe.ROU
1979  europe.SVK
1980  europe.SVN
1981  europe.MLT
1982  europe.HRV
1983  europe.AUT
1984  europe.BEL
1985  europe.DEU
1986  europe.DNK
1987  europe.ESP
1988  europe.FIN
1989  europe.FRA
1990  europe.GBR
1991  europe.GRC
1992  europe.IRL
1993  europe.ITA
1994  europe.LUX
1995  europe.NLD
1996  europe.PRT
1997  europe.SWE
1998  europe.LIE
1999  europe.NOR
2000  europe.CHE
2001  europe.GRL
2002  europe.ISL
2003  europe.FRO
2004  europe.ALA
2005  europe.AND
2006  europe.GGY
2007  europe.GIB
2008  europe.IMN
2009  europe.JEY
2010  europe.MCO
2011  europe.SJM
2012  europe.SMR
2013  europe.VAT
2014  europe.BIH
2015  europe.ALB
2016  europe.MKD
2017  europe.MNE
2018  europe.SRB
2019  europe.KSV
2020  ssa.AGO
2021  ssa.BEN
2022  ssa.BWA
2023  ssa.BFA
2024  ssa.BDI
2025  ssa.CMR
2026  ssa.CPV
2027  ssa.CAF
2028  ssa.TCD
2029  ssa.COM
2030  ssa.COG
2031  ssa.COD
2032  ssa.CIV
2033  ssa.GNQ
2034  ssa.ERI
2035  ssa.ETH
2036  ssa.GAB
2037  ssa.GMB
2038  ssa.GHA
2039  ssa.GIN
2040  ssa.GNB
2041  ssa.KEN
2042  ssa.LSO
2043  ssa.LBR
2044  ssa.MDG
2045  ssa.MWI
2046  ssa.MLI
2047  ssa.MRT
2048  ssa.MUS
2049  ssa.MYT
2050  ssa.MOZ
2051  ssa.NAM
2052  ssa.NER
2053  ssa.NGA
2054  ssa.REU
2055  ssa.RWA
2056  ssa.STP
2057  ssa.SEN
2058  ssa.SYC
2059  ssa.SHN
2060  ssa.SLE
2061  ssa.SOM
2062  ssa.SSD
2063  ssa.SDN
2064  ssa.SWZ
2065  ssa.TZA
2066  ssa.TGO
2067  ssa.UGA
2068  ssa.ZMB
2069  ssa.ZWE
2070  te.ARM
2071  te.AZE
2072  te.BLR
2073  te.GEO
2074  te.KAZ
2075  te.KGZ
2076  te.MDA
2077  te.RUS
2078  te.TJK
2079  te.TUR
2080  te.TKM
2081  te.UKR
2082  te.UZB
2083  usa.USA
2084  /;
2085  set oecd(n) 'OECD regions' /
2086  europe
2087  oceania
2088  canada
2089  jpnkor
2090  mexico
2091  usa
2092  /;
2093   
2094  alias (n,nn);
2095   
2096  set non_oecd(n) 'non OECD regions';
2097  non_oecd(n) = YES$(not oecd(n));
2098   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
2101  *-------------------------------------------------------------------------------
2102  * Non-Cooperative Setup
2103  *
2104  * Each region is defined as an individual coalition.
2105  *
2106  *-------------------------------------------------------------------------------
2107   
2109   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\noncoop.inc
2111  set clt 'Coalitions' /
2112  c_brazil
2113  c_canada
2114  c_china
2115  c_europe
2116  c_india
2117  c_indonesia
2118  c_jpnkor
2119  c_laca
2120  c_mena
2121  c_mexico
2122  c_oceania
2123  c_sasia
2124  c_seasia
2125  c_southafrica
2126  c_ssa
2127  c_te
2128  c_usa
2129  /;
2130  set map_clt_n(clt,n) /
2131  c_brazil.brazil
2132  c_canada.canada
2133  c_china.china
2134  c_europe.europe
2135  c_india.india
2136  c_indonesia.indonesia
2137  c_jpnkor.jpnkor
2138  c_laca.laca
2139  c_mena.mena
2140  c_mexico.mexico
2141  c_oceania.oceania
2142  c_sasia.sasia
2143  c_seasia.seasia
2144  c_southafrica.southafrica
2145  c_ssa.ssa
2146  c_te.te
2147  c_usa.usa
2148  /;
2149   
2150  set conf /
2151  'cooperation'.'noncoop'
2152  'cooperate_on_climate'.'YES'
2153  /;
2154   
2156   
2157  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
2159  *-------------------------------------------------------------------------------
2160  * Welfare
2161  *-------------------------------------------------------------------------------
2162   
2164   
2165  set negishi_coop(clt,n);
2166  negishi_coop(clt,n)=no;
2167   
2169   
2170  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
2173  *-------------------------------------------------------------------------------
2174  * Economy
2175  * - Production and Consumption definition
2176  * - Top-level of the production function
2177  * Options:
2178  * --original_ssp=1 : original SSP population and GDP data
2179  *-------------------------------------------------------------------------------
2180   
2182   
2183  set g 'Goods sector' /
2184      fg 'Final Good'
2185  /;
2186   
2187  set iq 'Economy nodes' /
2188      y       'Production'
2189      cc      'Consumption'
2190      kl      'Aggregate Capital-Labor'
2191      fen     'Energy services'
2192      eifen
2193      en      'Energy'
2194      el      'Electricity'
2195      el2
2196      elffren
2197      elff
2198      nel     'Non-electric energy'
2199      nelog
2200      ces_elhydro
2201      ces_elnuclearback
2202      ces_elintren
2203      ces_elcoalwbio
2204      ces_eloil
2205      ces_elgas
2206      ces_nelgas
2207  /;
2208   
2209  set ccy(*) 'additionnal cost categories' / /;
2210   
2211  set ssp 'SSP baseline names' / ssp1,ssp2,ssp3,ssp4,ssp5 /;
2212   
2213  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
2216  *-------------------------------------------------------------------------------
2217  * Energy sector
2218  *-------------------------------------------------------------------------------
2219   
2221   
2222  set fuel       'All energy carriers' / oil, coal, gas, uranium /
2223      f(fuel)    'Primary energy sources' / oil, coal, gas, uranium /
2224      s(fuel)    'Secondary energy sources' / /
2225      extract(f) 'Primary energy fuels with an extraction sector'
2226      f_mkt(f)   'Fuel markets' / oil /;
2227   
2228  set j 'Energy Sectors and Technologies' /
2229      en         'Energy'
2230      el         'Power supply sector'
2231      elcoalwbio
2232      elp       'Power plant | Coal/Biomass | w/o CCS | All'
2233      eligcc    'Power plant | Coal/Biomass | CCS | All'
2234      elpc      'Power plant | Coal | w/o CCS | All'
2235      elpc_new  'Power plant | Coal | w/o CCS | New'
2236      elpc_old  'Power plant | Coal | w/o CCS | Old'
2237      elpc_late 'Power plant | Coal | w/o CCS | Recent'
2238      elpc_ccs  'Power plant | Coal | CCS | Standard'
2239      elpc_oxy  'Power plant | Coal | CCS | Oxy-fuel'
2240      elcigcc   'Power plant | Coal | CCS | Integrated gasification combined cycle'
2241      elnuclearback,
2242      elnuclear_old 'Power plant | Nuclear | Old'
2243      elnuclear_new 'Power plant | Nuclear | New'
2244      eloil         'Power plant | Oil | All'
2245      eloil_new     'Power plant | Oil | New'
2246      eloil_old     'Power plant | Oil | Oil'
2247      elgas         'Power plant | Gas | All'
2248      elgastr       'Power plant | Gas | w/o CCS | All'
2249      elgastr_new   'Power plant | Gas | w/o CCS | New'
2250      elgastr_old   'Power plant | Gas | w/o CCS | Old'
2251      elgasccs      'Power plant | Gas | CCS'
2252      nel     'Non-electric sectors'
2253      neloilback
2254      neloil  'End-use | Oil'
2255      nelgas  'End-use | Gas'
2256      nelcoal 'End-use | Coal'
2257      nelbio  'End-use | Biomass'
2258  /;
2259  alias(j,jj);
2260  set jreal(j) 'Real Energy Technologies' /
2261      elpc_new, elpc_old, elpc_late, elpc_ccs, elpc_oxy, elcigcc,
2262      elnuclear_old, elnuclear_new,
2263      eloil_new, eloil_old,
2264      elgastr_new, elgastr_old, elgasccs,
2265      neloil,
2266      nelgas,
2267      nelcoal
2268  /;
2269  set jel(jreal) 'Power plants' /
2270      elpc_new, elpc_old, elpc_late, elcigcc, elpc_ccs, elpc_oxy,
2271      eloil_new, eloil_old,
2272      elgastr_new, elgastr_old, elgasccs
2273  /;
2274  alias(jel,jel2);
2275  set jnel(jreal) 'Non-electric Technologies' /
2276      neloil, nelgas, nelcoal
2277  /;
2278  set jfed(jreal) 'Technologies fed by primary energy sources' /
2279      elpc_new, elpc_old, elpc_late, elcigcc, elpc_ccs, elpc_oxy,
2280      eloil_new, eloil_old, elgastr_new,
2281      elgastr_old, elgasccs,
2282      neloil, nelgas, nelcoal
2283  /;
2284  set jold(jel) 'Old technologies' /
2285      elpc_old, eloil_old, elgastr_old
2286  /;
2287  set jinv(jreal) 'Investable technologies' /
2288      elpc_new, elpc_late, elcigcc, eloil_new, elgastr_new, elgasccs, elpc_ccs, elpc_oxy
2289  /;
2290   
2291  set jpenalty(j) 'Technologies with cost on consumption' / /;
2292   
2293  set jel_ren(jel) 'Renewable power plants' / /;
2294  set jnel_ren(jreal) 'Renewable technologies for non-electrical' / /;
2295   
2296  set jmcost_inv(jreal) 'Energy sectors with non fixed m.cost of investments';
2297   
2298  sets
2299      jreal_to_scale(jreal) 'Technology sectors subject to a 1e3 scale in K_EN during optimization' / /
2300      j_to_scale(j) 'Technology sectors subject to a 1e3 scale in Q_EN during optimization' / /
2301      jinv_to_scale(jinv) 'Technology sectors subject to a 1e3 scale in I_EN during optimization' / /;
2302  ;
2303   
2304  set map_j(j,jj) 'Tree of Energy Sectors and Technologies' /
2305      en.(el, nel)
2306      el.(elcoalwbio, eloil, elgas, elnuclearback)
2307      elcoalwbio.(elp, eligcc)
2308      elp.elpc
2309      elpc.(elpc_new, elpc_old, elpc_late)
2310      eligcc.(elcigcc, elpc_ccs, elpc_oxy)
2311      eloil.(eloil_new, eloil_old)
2312      elgas.(elgastr, elgasccs)
2313      elgastr.(elgastr_new, elgastr_old)
2314      nel.(neloilback, nelgas, nelcoal, nelbio)
2315      neloilback.neloil
2316  /;
2317   
2318  set jel_own_mu(jel) / /;
2319  set jinv_own_k(jinv) / /;
2320   
2321  set ices_el(iq) /ces_elnuclearback, ces_elcoalwbio, ces_eloil,ces_elgas /;
2322   
2323  set map_ices_el(ices_el,j)/
2324  ces_elnuclearback.elnuclearback
2325  ces_elcoalwbio.elcoalwbio
2326  ces_eloil.eloil
2327  ces_elgas.elgas
2328  /;
2329   
2330  set jcalib /
2331      elpc
2332      elnuclear
2333      elgastr
2334      eloil
2335  /;
2336   
2337  set map_calib(jcalib,jreal) /
2338  elpc.(elpc_old, elpc_late)
2339  elgastr.(elgastr_new,elgastr_old)
2340  elnuclear.(elnuclear_new,elnuclear_old)
2341  eloil.(eloil_new,eloil_old)
2342  /;
2343   
2344  set el_out(*) 'Electricity demand to withdraw from the production tree [TWh]'/
2345  /;
2346   
2347  set nel_out(*) 'Non electricity demand to withdraw from the production tree [TWh]'/
2348  /;
2349   
2350  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
2353  *-------------------------------------------------------------------------------
2354  * Carbon Emissions
2355  * - Total CO2 emissions and CO2 Fossil fuel and Industry
2356  * - CO2 emission costs
2357  * - GHG permit market
2358  *-------------------------------------------------------------------------------
2359   
2361   
2362  set e 'Emissions-related entities' /
2363      co2
2364      co2ffi # Fossil-fuel and Industry CO2
2365      nip    # net import of permits
2366      kghg   # Kyoto greenhouse gases
2367  /;
2368  alias(e,ee);
2369  set map_e(e,ee) 'Relationships between Sectoral Emissions' /
2370      co2.co2ffi
2371  /;
2372   
2373  set ghg(e) 'Green-House Gases' /
2374      co2
2375  /;
2376   
2377  set e_cap(e);
2378   
2379  set cce(e) 'Emissions-related entities that cost' /
2380      co2
2381  /;
2382   
2383  set emac(e) 'Emissions with marginal abatment curves' / /;
2384   
2385  set sink(e) 'Emission sink for sequestration';
2386   
2387  set sys 'emission adjustement inventory' /
2388      co2ffi
2389      co2_elheat
2390  /;
2391   
2392  set c_mkt(e) 'Market of permits' / nip /;    # if multiple permit markets, be sure to assign them to countries via trading_t
2393   
2394  set map_ierr_e(ierr, c_mkt);
2395  map_ierr_e('nip', 'nip') = YES;
2396   
2397  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
2400  *-------------------------------------------------------------------------------
2401  * Research & Development
2402  * Options:
2403  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
2404  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
2405  *-------------------------------------------------------------------------------
2406   
2408   
2409  set rd(j) 'Energy sectors or technologies with R&D' / /;
2410   
2411  set jrd(jreal) 'Technologies with R&D' / /;
2412   
2413  set jrd_lbd(jrd) 'Technologies with learning-by-doing';
2414   
2415  set leadrd(rd,n) 'Regions which are leader in R&D innovation';
2416   
2417  set rd_cooperation(rd,clt) 'cooperation in R&D inside coalition';
2418  rd_cooperation(rd,clt) = no; # By default, no R&D cooperation
2419   
2420  set rd_tgap(jrd,t,tt) 'reference period for learning cost equations';
2421   
2422  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
2425  *-------------------------------------------------------------------------------
2426  * Default Climate Policy Implementation
2427  *
2428  * Options:
2429  *    --policy={bau (default),ctax}
2430  *        Implement a climate policy setting
2431  *  [ --scen= ]
2432  *        Policy variant.
2433  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
2434  *          * XXX for a fixed percentage/yr (e.g. 5) growth
2435  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
2436  *  [ --ctax_year=2020 ]
2437  *        Starting year of the carbon tax
2438  *  [ --ctax_initial=30 ]
2439  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
2440  *
2441  *-------------------------------------------------------------------------------
2443   
2444  * Runs
2445  set run /r1/;
2446  set to_run(run);
2447   
2448  * Trading
2449  set trading_t(*,t,n) 'Periods for the international markets per regions';
2450  trading_t(c_mkt,t,n) = no;
2451  trading_t(f_mkt,t,n) = no;
2452   
2453  set internal(*) 'Internal markets [within coalition]';
2454  internal(c_mkt) = no;
2455  internal(f_mkt) = no;
2456   
2457  set internal_clt(*,clt) 'Mapping between coalition and internal market';
2458  internal_clt(c_mkt,clt) = no;
2459  internal_clt(f_mkt,clt) = no;
2460   
2461  set t_cap(t,n) 'Cap on emissions time periods and regions';
2462  t_cap(t,n) = no;
2463   
2464  *-------------------------------------------------------------------------------
2466   
2467  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
2469  *-------------------------------------------------------------------------------
2470  * Energy efficiency
2471  *-------------------------------------------------------------------------------
2472   
2474   
2475  set rd(j) /en/;
2476   
2477  * OECD are R&D Leaders in energy efficiency
2478  leadrd('en',n)$(oecd(n)) = yes;
2479   
2480  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
2483  *-------------------------------------------------------------------------------
2484  * Hydro Power
2485  *-------------------------------------------------------------------------------
2486   
2488   
2489  set j /
2490      elhydro       'Power plant | Hydro | All'
2491      elhydro_new   'Power plant | Hydro | New'
2492      elhydro_old   'Power plant | Hydro | Old'
2493  /;
2494  set jreal(j) / elhydro_new, elhydro_old /;
2495  set jel(jreal) / elhydro_new, elhydro_old /;
2496  set jold(jel) / elhydro_old /;
2497  set jinv(jreal) / elhydro_new /;
2498  set jel_ren(jel) /elhydro_old, elhydro_new/;
2499  set map_j(j,jj) /
2500      el.elhydro
2501      elhydro.(elhydro_new, elhydro_old)
2502  /;
2503  set ices_el(iq) /ces_elhydro/;
2504  set map_ices_el(ices_el,j)/
2505  ces_elhydro.elhydro
2506  /;
2507  set jcalib /elhydro/;
2508   
2509  set map_calib(jcalib,jreal) /
2510  elhydro.(elhydro_new,elhydro_old)
2511  /;
2512   
2513  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
2516  *-------------------------------------------------------------------------------
2517  * System Integration:
2518  * - Capacity constraint
2519  * - Flexibility constraint
2520  * - Grid Investment
2521  * - Capacity growth constraint
2522  *-------------------------------------------------------------------------------
2523   
2525   
2526  * Renewable CES
2527  set jintren(j) / /;   # also used in the grid part
2528   
2529  * Capacity constraint
2530  set jel_firm(jel) 'Firm, non intermittent technologies' /
2531      elpc_new, elpc_old, elpc_late elcigcc, elpc_ccs, elpc_oxy, eloil_new, eloil_old, elgastr_new,
2532      elgastr_old, elgasccs, elhydro_new, elhydro_old /;
2533   
2534  * Grid
2535  set jel_stdgrid(jel) 'Technologies requiring standard grid infrastructure (i.e. no W&S)' /
2536      elpc_new, elpc_old, elpc_late elcigcc, elpc_ccs, elpc_oxy, eloil_new, eloil_old, elgastr_new,
2537      elgastr_old, elgasccs, elhydro_new, elhydro_old /;
2538   
2539  set share_coeff / mult, exp /;
2540   
2541  set jtn_incompatible_with_mkt_growth_cap(jinv,t,n);
2542   
2543  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
2546  *-------------------------------------------------------------------------------
2547  * Nuclear power plants
2548  *-------------------------------------------------------------------------------
2549   
2551   
2552  set j 'Energy Technology Sectors' /
2553      elnuclear
2554      elnuclear_new
2555      elnuclear_old
2556  /;
2557   
2558  set jreal(j) 'Actual Energy Technology Sectors' /
2559      elnuclear_new
2560      elnuclear_old
2561  /;
2562   
2563  set jel(jreal) 'Electrical Actual Energy Technology Sectors' /
2564      elnuclear_new
2565      elnuclear_old
2566  /;
2567   
2568  set jel_nuclear(jel) 'Nuclear power plants' /
2569      elnuclear_new
2570      elnuclear_old
2571  /;
2572   
2573  set jfed(jreal) 'Actual Energy Technology Sectors fed by PES' /
2574      elnuclear_new
2575      elnuclear_old
2576  /;
2577   
2578  set jinv(jreal) 'Electrical Actual Energy Technology Sectors with investments' /
2579      elnuclear_new
2580  /;
2581   
2582  set jold(jel) 'Old Electrical Actual Energy Technology Sectors' /
2583      elnuclear_old
2584  /;
2585   
2586  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
2587      elnuclearback.elnuclear
2588      elnuclear.(elnuclear_new, elnuclear_old)
2589  /;
2590   
2591  set jel_firm 'Firm, non intermittent technologies' /
2592      elnuclear_new
2593      elnuclear_old
2594  /;
2595   
2596  set jel_stdgrid(jel) 'Technologies requiring standard grid infrastructure (i.e. no W&S)' /
2597      elnuclear_new
2598      elnuclear_old
2599  /;
2600   
2601  set iwaste / alpha, rho /;
2602   
2603   
2604   
2605  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
2608  *-------------------------------------------------------------------------------
2609  * GHG module
2610  * - CH4 FFI + CH4 waste + CH4 open fires
2611  * - N2O FFI + N2O waste + N2O open fires
2612  *-------------------------------------------------------------------------------
2613   
2615   
2616  set e /ch4, n2o,          # Total
2617         ch4_ffi, n2o_ffi,  # Fossil fuel and Industry processes and Extraction
2618         ch4_wst, n2o_wst,  # Waste
2619         ch4_ofr, n2o_ofr   # Open Fires
2620        /;
2621   
2622  set map_e(e,ee) 'Relationships between Sectoral Emissions' /
2623      ch4.(ch4_ffi,ch4_wst)
2624      n2o.(n2o_ffi,n2o_wst)
2625      kghg.(co2,ch4,n2o)
2626  /;
2627   
2628  set ghg(e) 'Green-House Gases' /
2629       ch4, n2o
2630  /;
2631   
2632  set enrg(e) 'emissions from the energy sector' /
2633     ch4_ffi
2634     n2o_ffi
2635  /;
2636   
2637  set waste(e) 'waste emissions' /
2638      ch4_wst, n2o_wst
2639  /;
2640   
2641  set efire(e) 'Open fires emissions' /
2642      ch4_ofr, n2o_ofr
2643  /;
2644   
2645  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
2648  *-------------------------------------------------------------------------------
2649  * F-gases
2650  * - LLF
2651  * - SLF
2652  *-------------------------------------------------------------------------------
2653   
2655   
2656  set e /
2657  pfc
2658  c2f6
2659  c6f14
2660  cf4
2661  hfc
2662  hfc125
2663  hfc134a
2664  hfc143a
2665  hfc227ea
2666  hfc23
2667  hfc245fa
2668  hfc32
2669  hfc43-10
2670  sf6
2671  f-gases
2672  /;
2673   
2674  set ghg(e) 'Green-House Gases' /
2675  c2f6
2676  c6f14
2677  cf4
2678  hfc125
2679  hfc134a
2680  hfc143a
2681  hfc227ea
2682  hfc23
2683  hfc245fa
2684  hfc32
2685  hfc43-10
2686  sf6
2687  /;
2688   
2689  set fgases(e) 'Green-House Gases' /
2690  c2f6
2691  c6f14
2692  cf4
2693  hfc125
2694  hfc134a
2695  hfc143a
2696  hfc227ea
2697  hfc23
2698  hfc245fa
2699  hfc32
2700  hfc43-10
2701  sf6
2702  /;
2703   
2704  set map_e(e,ee) 'Relationships between Sectoral Emissions' /
2705      kghg.(c2f6,c6f14,cf4,hfc125,hfc134a,hfc143a,hfc227ea,hfc23,hfc245fa,hfc32,hfc43-10,sf6)
2706      hfc.(hfc143a, hfc227ea, hfc134a, hfc125, hfc43-10, hfc32, hfc23, hfc245fa)
2707      pfc.(c2f6,c6f14,cf4)
2708      f-gases.(c2f6,c6f14,cf4,hfc125,hfc134a,hfc143a,hfc227ea,hfc23,hfc245fa,hfc32,hfc43-10,sf6)
2709  /;
2710   
2711  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
2714  *-------------------------------------------------------------------------------
2715  * Landuse [simplified version of the land-use model]
2716  *-------------------------------------------------------------------------------
2717   
2719   
2720  set fuel / wbio /;
2721  set f(fuel) / wbio /;
2722   
2723  set e 'Emissions-related entities' /
2724      co2lu        # Land use CO2
2725      ch4_agr      # CH4 from Agriculture
2726      n2o_agr      # N2O from Agriculture
2727      redd         # Avoided deforestation emissions
2728  /;
2729   
2730  set map_e(e,ee) 'Relationships between Sectoral Emissions' /
2731      co2.co2lu
2732      ch4.ch4_agr
2733      n2o.n2o_agr
2734  /;
2735   
2736  set cce(e) 'Emissions-related entities that cost' /
2737  redd
2738  /;
2739   
2740  set sys /ch4_agr, n2o_agr, co2lu/;
2741   
2742  * Time periods where land-use emissions are priced at same level than energy sector
2743  set t_lu(t);
2744  t_lu(t) = yes;
2745   
2746  * Set ot override the default pricing of landuse by no pricing.
2747  set nocluprice(t,n);
2748  nocluprice(t,n) = no;
2749   
2750  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
2753  *-------------------------------------------------------------------------------
2754  * Bioenergy power plant
2755  *-------------------------------------------------------------------------------
2756   
2758   
2759  set fuel / wbio 'solid biomass for biomass plant' /;
2760   
2761  set j 'Energy Technology Sectors' /
2762      elpb
2763      elpb_new
2764      elpb_old
2765      elbigcc
2766  /;
2767   
2768  set jreal(j) 'Actual Energy Technology Sectors' /
2769      elpb_new
2770      elpb_old
2771      elbigcc
2772  /;
2773   
2774  set jel(jreal) 'Electrical Actual Energy Technology Sectors' /
2775      elpb_new
2776      elpb_old
2777      elbigcc
2778  /;
2779   
2780  set jel_bio(jel) 'Biomass power plants' /
2781      elpb_new
2782      elpb_old
2783      elbigcc
2784  /;
2785   
2786  set jfed(jreal) 'Actual Energy Technology Sectors fed by PES' /
2787      elpb_new
2788      elpb_old
2789      elbigcc
2790  /;
2791   
2792  set jinv(jreal) 'Electrical Actual Energy Technology Sectors with investments' /
2793      elpb_new
2794      elbigcc
2795  /;
2796   
2797  set jold(jel) 'Old Electrical Actual Energy Technology Sectors' /
2798      elpb_old
2799  /;
2800   
2801  set jel_ren(jel) 'Renewable power generation technologies' /
2802      elpb_new
2803      elpb_old
2804      elbigcc
2805  /;
2806   
2807  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
2808      elp.elpb
2809      elpb.(elpb_new, elpb_old)
2810      eligcc.elbigcc
2811  /;
2812   
2813  set jel_firm(jel) 'Firm, non intermittent technologies' /
2814      elpb_new, elpb_old, elbigcc
2815  /;
2816   
2817  set jel_stdgrid(jel) 'Technologies requiring standard grid infrastructure (i.e. no W&S)' /
2818      elpb_new, elpb_old, elbigcc
2819  /;
2820   
2821  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
2824  *-------------------------------------------------------------------------------
2825  * Traditional Biofuels
2826  * - Requires the precedence of mod_landuse
2827  *-------------------------------------------------------------------------------
2828   
2830   
2831  set fuel / trbiofuel 'Traditional biofuel' /;
2832  set s(fuel) / trbiofuel /;
2833   
2834  set j 'Energy Technology Sectors' /neltrbiofuel/;
2835   
2836  set jreal(j) 'Actual Energy Technology Sectors' /neltrbiofuel/;
2837  set jnel(jreal) 'Non-electrical Actual Energy Technology Sectors' /neltrbiofuel/;
2838  set jfed(jreal) 'Actual Energy Technology Sectors fed by PES' /neltrbiofuel/;
2839  set jnel_ren(jreal) 'Renewable power generation technologies' /neltrbiofuel/;
2840   
2841  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
2842      nelbio.neltrbiofuel
2843  /;
2844   
2845  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
2848  *-------------------------------------------------------------------------------
2849  * Advanced biofuel
2850  * - Require the precedence of mod_landuse
2851  *-------------------------------------------------------------------------------
2852   
2854   
2855  set fuel / advbiofuel 'Advanced biofuel' /;
2856  set s(fuel) / advbiofuel /;
2857   
2858  set j 'Energy Technology Sectors' /nelback/;
2859   
2860  set jreal(j) 'Actual Energy Technology Sectors' /nelback/;
2861  set jnel(jreal) 'Non-electrical Actual Energy Technology Sectors' /nelback/;
2862  set jfed(jreal) 'Actual Energy Technology Sectors fed by PES' /nelback/;
2863  set jnel_ren(jreal) 'Renewable power generation technologies' /nelback/;
2864   
2865  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
2866      neloilback.nelback
2867  /;
2868   
2869  * Knowledge
2870  set rd(j) 'R & D' / nelback/;
2871  set jrd(jreal) / nelback/;
2872  set jrd_lbd(jrd) /nelback/;
2873   
2874  leadrd('nelback',n)$(oecd(n)) = yes;
2875  jmcost_inv('nelback')         = yes;
2876   
2877  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
2880  *-------------------------------------------------------------------------------
2881  * Carbon Capture and Sequestration
2882  *-------------------------------------------------------------------------------
2883   
2885   
2886  set e /
2887      ccs        # Sequestered CO2
2888      co2leak    # CO2 leakages
2889      ccs_plant  # Sequestered CO2 from power plants and industry
2890  /;
2891   
2892  set map_e(e,ee) 'Relationships between Sectoral Emissions' /
2893      co2.co2leak
2894      ccs.ccs_plant
2895  /;
2896  set sink /
2897      ccs_plant
2898  /;
2899   
2900  set jccs(jfed) 'Electrical Actual Energy Technology Sectors with CCS' /
2901      elcigcc
2902      elbigcc
2903      elgasccs
2904      elpc_ccs
2905      elpc_oxy
2906  /;
2907   
2908  set cce(e) 'Emissions-related entities that cost' /
2909      ccs_plant
2910  /;
2911   
2912  * --learning curves -- *
2913  set jlccs(jinv) 'Set of Electrical CCS technology with learning by doing' /
2914      elcigcc
2915      elbigcc
2916      elgasccs
2917      elpc_ccs
2918      elpc_oxy
2919  /;
2920   
2921  alias(jlccs,jllccs);
2922   
2923  * -- Storage -- *
2924  set ccs_stor   'different storage technologies' /
2925      aqui_on
2926      aqui_off
2927      oil_gas_no_eor_on
2928      oil_gas_no_eor_off
2929      eor_on
2930      eor_off
2931      ecbm
2932  /;
2933   
2934  set ccs_stor_aqui(ccs_stor) 'aquifer storage ON and OFF'/
2935      aqui_on
2936      aqui_off
2937  /;
2938   
2939  set ccs_stor_og_eor 'oil and gas storage ON and OFF, including eor'/
2940      oil_gas_on
2941      oil_gas_off
2942  /;
2943   
2944  set ccs_stor_og(ccs_stor) 'oil and gas storage ON and OFF, excluding eor'/
2945      oil_gas_no_eor_on
2946      oil_gas_no_eor_off
2947  /;
2948   
2949  set ccs_stor_eor(ccs_stor) ' eor'/
2950      eor_on
2951      eor_off
2952  /;
2953   
2954  set ccs_stor_estim 'low, best, high case of storage capacity'/
2955      low
2956      best
2957      high
2958  /;
2959   
2960  set ccs_stor_dist_cat 'how distances are referred to in the make data file' /
2961      aquif
2962      oil_gas_onshore
2963      oil_gas_offshore
2964      coal_beds
2965  /;
2966   
2967  set map_ccs_stor_og(ccs_stor_og,ccs_stor_og_eor,ccs_stor_eor) /
2968   oil_gas_no_eor_on.oil_gas_on.eor_on
2969   oil_gas_no_eor_off.oil_gas_off.eor_off
2970  /
2971  ;
2972   
2973  set map_ccs_stor_eor(ccs_stor_eor,ccs_stor_og_eor) /
2974  eor_on.oil_gas_on
2975  eor_off.oil_gas_off
2976  /
2977  ;
2978   
2979  set map_ccs_stor_dist_cat(ccs_stor_dist_cat,ccs_stor) /
2980      aquif.(aqui_on,aqui_off)
2981      oil_gas_onshore.(oil_gas_no_eor_on,eor_on)
2982      oil_gas_offshore.(oil_gas_no_eor_off,eor_off)
2983      coal_beds.ecbm
2984  /;
2985   
2986  *-------------------------------------------------------------------------------
2988   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
2990  *-------------------------------------------------------------------------------
2991  * Coal for non-electric sectors
2992  * - Coke Plants
2993  * - Industrial and Commercial combined-heat-and-power (CHP)
2994  * - Others
2995  *-------------------------------------------------------------------------------
2996   
2998   
2999  set j / nelcoalccs, nelcoaltr, nelcoalabat /;
3000  set jreal(j) / nelcoalccs, nelcoaltr, nelcoalabat /;
3001  set jnel(jreal) / nelcoalccs, nelcoaltr, nelcoalabat /;
3002  set jfed(jreal) / nelcoalccs, nelcoaltr /;
3003   
3004  set jinv(jreal) / nelcoalccs /;
3005  set jccs(jfed) / nelcoalccs /;
3006   
3007  set jpenalty(j) /nelcoalabat/;
3008   
3009  set map_j(j,jj) /
3010          nelcoal.(nelcoalccs, nelcoaltr, nelcoalabat)
3011          /;
3012   
3013  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
3016  *-------------------------------------------------------------------------------
3017  * Wind energy module
3018  * - onshore and offshore
3019  *-------------------------------------------------------------------------------
3020   
3022   
3023  set j                      / elwind, elwindon, elwindoff /;
3024  set jreal(j)               / elwindon, elwindoff /;
3025  set jel(jreal)             / elwindon, elwindoff /;
3026  set jinv(jreal)            / elwindon, elwindoff /;
3027   
3028  set jel_own_mu(jel)        / elwindon, elwindoff /;
3029  set jinv_own_k(jinv)       / elwindon, elwindoff /;
3030   
3031  set jel_ren(jel)           / elwindon, elwindoff /;
3032  set jreal_to_scale(jreal)  / elwindon, elwindoff /;
3033  set j_to_scale(j)          / elwind, elwindon, elwindoff /;
3034  set jinv_to_scale(jinv)    / elwindon, elwindoff /;
3035   
3036  set jel_wind(jel)          / elwindon, elwindoff /;
3037  set jreal_wind(jreal)      / elwindon, elwindoff /;
3038  set jinv_wind(jinv)        / elwindon, elwindoff /;
3039   
3040  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
3041          el.elwind
3042          elwind.(elwindon,elwindoff)
3043  /;
3044   
3045  set jmcost_inv(jreal)      / elwindon, elwindoff /;
3046   
3047  set iq                     / ces_elwind/;
3048  set ices_el(iq)            / ces_elwind/;
3049   
3050  set map_ices_el(ices_el,j) / ces_elwind.elwind /;
3051   
3052  set wind_dist              / near, inter, far /;
3053  set wind_depth             / shallow, trans, deep /;
3054  set wind_class             / c1*c9 /;
3055  alias(wind_class,wind_class2);
3056  set wind_type              / onshore, offshore /;
3057   
3058  set jintren(j) / elwind /;
3059   
3060  *-------------------------------------------------------------------------------
3062   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
3064  *-------------------------------------------------------------------------------
3065  * Solar Powerplants (PV and CSP) to the electrical system
3066  *-------------------------------------------------------------------------------
3067   
3068  *-------------------------------------------------------------------------------
3070   
3071  * introduce solar energy, pv and csp in the sets
3072   
3073  set j                      / elsolar, elpv, elcsp /;
3074  set jreal(j)               / elpv, elcsp /;
3075  set jel(jreal)             / elpv, elcsp /;
3076  set jinv(jreal)            / elpv, elcsp /;
3077   
3078  set jel_own_mu(jel)        / elpv, elcsp /;
3079  set jinv_own_k(jinv)       / elpv, elcsp /;
3080   
3081  set jel_ren(jel)           / elpv, elcsp /;
3082  set jreal_to_scale(jreal)  / elpv, elcsp /;
3083  set j_to_scale(j)          / elpv, elcsp /;
3084  set jinv_to_scale(jinv)    / elpv, elcsp /;
3085   
3086  set map_j(j,jj) 'Relationships between Energy Technology Sectors'       /
3087  el.elsolar
3088  elsolar.(elpv,elcsp)
3089  /;
3090   
3091  set jmcost_inv(jreal)      / elpv, elcsp /;
3092   
3093  set iq                     / ces_elpv,ces_elcsp/;
3094  set ices_el(iq)            / ces_elpv,ces_elcsp/;
3095  set map_ices_el(ices_el,j) /ces_elpv.elpv,ces_elcsp.elcsp /;
3096   
3097   
3098  set jel_solar(jel)          / elpv, elcsp /;
3099  set jreal_solar(jreal)      / elpv, elcsp /;
3100  set jinv_solar(jinv)        / elpv, elcsp /;
3101   
3102  set solar_dist          / near, far /;
3103  set solar_class_all             / c1*c26 /;
3104  set solar_class / solcf1*solcf26 /;
3106   
3107  set jintren(j) / elpv, elcsp /;
3108   
3109  set jel_firm(jel) 'Firm, non intermittent technologies' / elcsp /;
3110   
3111  set map_solar_class_all(solar_class, solar_class_all) /
3114      #solar_class:#solar_class_all
3117  /;
3118   
3119  *-------------------------------------------------------------------------------
3121   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
3123  *-------------------------------------------------------------------------------
3124  * Technology development scenarios
3125  *-------------------------------------------------------------------------------
3126   
3128   
3129  acronym low, medium, high, high_oecd, high_non_oecd;
3130   
3131  parameter tech_scen(*);
3132   
3133  scalar tech_cost_var / 0.01 /;
3134   
3135  table ccs_inv_var(jlccs,*) 'multiplier of investment cost for ccs'
3136            low      high
3137  elcigcc   0.43     1.51
3138  elbigcc   0.44     1.52
3139  elgasccs  0.51     1.50
3140  elpc_ccs  0.46     1.51
3141  elpc_oxy  0.35     1.55
3142  ;
3143   
3144  *-------------------------------------------------------------------------------
3146   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
3148  *-------------------------------------------------------------------------------
3149  * Oil Extraction
3150  * Options:
3151  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
3152  *-------------------------------------------------------------------------------
3153   
3155   
3156  set f_mkt /'oil'/;
3157   
3158  set extract(f) / oil/;
3159   
3160  set oilg /g1*g8/;
3161  alias(oilg,oilgg);
3162   
3163  set map_oilgrade(oilg,oilgg);
3164  map_oilgrade(oilg,oilgg) = no;
3165  map_oilgrade(oilg,oilgg) = yes$(ord(oilg) eq ord(oilgg));
3166   
3167  set valid_oilg(oilg);
3168  valid_oilg(oilg)=yes;
3169   
3171   
3172  set conf /
3173  'fossil_oil'.'M'
3175  /;
3176   
3177  set sys 'emission adjustement inventory' /
3178          extract
3179  /;
3180   
3181  $macro sum_oilg(expr) (sum(oilgg$map_oilgrade(oilg,oilgg), &expr))
3182   
3183  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
3186  *-------------------------------------------------------------------------------
3187  * Uranium Resources
3188  *-------------------------------------------------------------------------------
3189   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
3192  *-------------------------------------------------------------------------------
3193  * Gas Resources
3194  *-------------------------------------------------------------------------------
3195   
3197   
3198  set extract(f) / gas/;
3199   
3200  set conf /
3201  'fossil_gas'.'M'
3202  /;
3203   
3204  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
3207  *-------------------------------------------------------------------------------
3208  * Coal Resources
3209  *-------------------------------------------------------------------------------
3210   
3212   
3213  set extract(f) / coal/;
3214   
3215  set conf /
3216  'fossil_coal'.'M'
3217  /;
3218   
3219  *-------------------------------------------------------------------------------
3221   
3222   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
3224  *-------------------------------------------------------------------------------
3225  * Climate
3226  *
3227  * Represents the climate
3228  * - based on the DICE model equations
3229  * - Radiative forcing for non CO2 ghgs
3230  * - parameters calibrated to reproduce MAGICC6.4 default response
3231  *
3232  *  Options:
3233  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
3234  * - $setglobal cooperate_on_climate {'YES','NO'}
3235  * - 'YES'(default): Countries within a coalition act in cooperation
3236  *   'NO': Countries within a coalition act individually
3237  *
3238  *-------------------------------------------------------------------------------
3239   
3241   
3242  set oghg(e) 'Other GHGs' /
3243  c2f6
3244  c6f14
3245  cf4
3246  ch4
3247  hfc125
3248  hfc134a
3249  hfc143a
3250  hfc227ea
3251  hfc23
3252  hfc245fa
3253  hfc32
3254  hfc43-10
3255  n2o
3256  sf6
3257  /;
3258   
3259  set m /
3260          atm 'Atmosphere'
3261          upp 'Upper box'
3262          low 'Deep oceans'
3263        /;
3264   
3265  alias (m,mm);
3266   
3267  set map_e_bunk(e,ee) 'map regional and international emissions' / /;
3268   
3269  set conf /
3271  /;
3272   
3273  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
3276  *-------------------------------------------------------------------------------
3277  * Long-run Damages from Climate Change
3278  * - Economic impacts
3279  * - Adaptation
3280  *-------------------------------------------------------------------------------
3281   
3283   
3284  set
3285      iq  'Nodes representing economic values (which have a Q)' /ada, cap, act, gcap/
3286      g   'Goods sector' /prada,rada,scap/
3287  ;
3288   
3289  set conf /
3290  'mod_damage'.'enabled'
3293  /;
3294   
3295  *-------------------------------------------------------------------------------
3297   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
3299  *-------------------------------------------------------------------------------
3300  * Light-duty Vehicles for Personal Transport
3301  *-------------------------------------------------------------------------------
3302   
3304   
3305  set j            / trad_cars, hybrid, plg_hybrid, edv, battery, pt /;
3306  set jreal(j)     / trad_cars, hybrid, plg_hybrid, edv, battery /;
3307  set jfed(jreal)  / trad_cars, hybrid, plg_hybrid /;
3308  set jinv(jreal)  / trad_cars, hybrid, plg_hybrid, edv /;
3309  set rd(j)        / battery /;
3310  set jrd(jreal)   / battery /;
3311   
3312  set jveh(jreal)    'Light Duty Vehicle technologies'
3313                   / trad_cars, hybrid, plg_hybrid, edv /;
3314  set jfedveh(jfed)  'Light Duty Vehicle technologies with fuel feeding'
3315                   / trad_cars, hybrid, plg_hybrid /;
3316  set jveh_invfix(jveh) / trad_cars /;
3317  set jveh_inv(jinv)    / trad_cars, hybrid, plg_hybrid, edv /;
3318   
3319  set oge_ai_set   / c1*c5 /;
3320  set krd_lo_set   / a, b, c /;
3321   
3322  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
3323      en.pt
3324      pt.(trad_cars, hybrid, plg_hybrid)
3325  /;
3326   
3327  set jmcost_inv(jreal) / trad_cars, hybrid, plg_hybrid, edv, battery /;
3328   
3329  set transp_qact(fuel,jfed) 'mapping of activities for transport sectors' /
3330      oil.trad_cars
3331      oil.hybrid
3332      oil.plg_hybrid
3333   
3334      trbiofuel.trad_cars
3335      trbiofuel.hybrid
3336      trbiofuel.plg_hybrid
3337   
3338      advbiofuel.trad_cars
3339      advbiofuel.hybrid
3340      advbiofuel.plg_hybrid
3341  /;
3342   
3343  jrd_lbd('battery') = yes;
3344   
3345  set jveh_rd(j);
3346  jveh_rd(j)=yes$(sum(jreal$(sameas(jreal,j)), jveh(jreal)) and rd(j));
3347   
3348  set jveh_fed(jreal);
3349  jveh_fed(jveh)=yes$(jfed(jveh));
3350   
3351  set el_out /
3352  edv
3353  /;
3354   
3355  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
3358  *-------------------------------------------------------------------------------
3359  * Road Freight Transport
3360  *-------------------------------------------------------------------------------
3362   
3363   
3364  set j                       / trad_stfr, hbd_stfr, plg_hbd_stfr, edv_stfr, frt /;
3365  set jreal(j)                / trad_stfr, hbd_stfr, plg_hbd_stfr, edv_stfr /;
3366  set jfed(jreal)             / trad_stfr, hbd_stfr, plg_hbd_stfr /;
3367  set jinv(jreal)             / trad_stfr, hbd_stfr, plg_hbd_stfr, edv_stfr /;
3368  set jfixed_mcost_inv(jreal) / trad_stfr /;
3369   
3370  set jfrt(jreal) 'Road Freight Vehicle technologies'
3371                              / trad_stfr, hbd_stfr, plg_hbd_stfr, edv_stfr /;
3372  set jfedfrt(jfed) 'Road Freight Vehicle technologies with fuel feeding'
3373                              / trad_stfr, hbd_stfr, plg_hbd_stfr /;
3374  set jfrt_invfix(jfrt)       / trad_stfr /;
3375  set jfrt_inv(jinv)          / trad_stfr, hbd_stfr, plg_hbd_stfr, edv_stfr /;
3376   
3377  set map_j(j,jj) 'Relationships between Energy Technology Sectors' /
3378      en.frt
3379      frt.(trad_stfr, hbd_stfr, plg_hbd_stfr)
3380  /;
3381   
3382  set jmcost_inv(jreal)       / trad_stfr, hbd_stfr, plg_hbd_stfr, edv_stfr /;
3383   
3384  set transp_freight_qact(fuel,jfed) 'mapping of activities for transport sectors' /
3385   
3386      oil.trad_stfr
3387      oil.hbd_stfr
3388      oil.plg_hbd_stfr
3389   
3390      trbiofuel.trad_stfr
3391      trbiofuel.hbd_stfr
3392      trbiofuel.plg_hbd_stfr
3393   
3394      advbiofuel.trad_stfr
3395      advbiofuel.hbd_stfr
3396      advbiofuel.plg_hbd_stfr
3397   
3398  /;
3399   
3400  set el_out /
3401  edvfr
3402  /;
3403   
3404  *-------------------------------------------------------------------------------
3406   
3407   
3408   
3409   
3410   
3411   
3412  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
3414  *-------------------------------------------------------------------------------
3415  * Traditional Biomass
3416  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
3417  *  - require post_process to be launch before
3418  *-------------------------------------------------------------------------------
3419   
3421   
3422  set fuel / trbiomass /;
3423  set f(fuel) / trbiomass /;
3424   
3425  set j /neltrbiomass/;
3426  set jreal /neltrbiomass/;
3427  set jnel(jreal) /neltrbiomass/;
3428  set jfed(jreal) /neltrbiomass/;
3429   
3430  set map_j(j,jj) / nelbio.neltrbiomass /;
3431   
3432  $macro trbio_ratio(t) \
3433  min(1,trbio_ctr('beta',n)*log(mer2ppp(&t,n)*1e6*Q.l('y',&t,n)/l(&t,n))+trbio_ctr('alpha',n))
3434   
3435  set conf /
3437  /;
3438   
3439  *-------------------------------------------------------------------------------
3441   
3442  * Optional modules
3443   
3444  * Policy modules
3445   
3446  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
3450  *-------------------------------------------------------------------------------
3451  * Call modules by order
3452  *-------------------------------------------------------------------------------
3456   
3457  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
3459  *-------------------------------------------------------------------------------
3460  * Algorithm
3461  *-------------------------------------------------------------------------------
3462   
3464   
3465  * Convergence tolerance
3466  parameter errtol(ierr) 'Error tolerances for convergence';
3467  errtol('oil')   = 0.005;
3468  errtol('wgt')   = 1.00;
3469  errtol('inv')   = 0.5;
3470  errtol('pes')   = 0.1;
3471  loop(c_mkt, errtol(ierr)$map_ierr_e(ierr, c_mkt) = 0.01);
3472  errtol('co2')   = 0.05;
3473   
3474  * ADMM parameters in the objective function
3475  parameter
3476      rho_admm(*,t) 'ADMM penalty coefficient'
3477      u_admm(*,t) 'ADMM dual variable scaled'
3478      x_admm(*,t,n) 'Regional trade imbalance'
3479      xavg_admm(*,t) 'Average global trade imbalance'
3480  ;
3481   
3482  * Relax tolerance for SSP5
3484   
3485  *-------------------------------------------------------------------------------
3487   
3488  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
3490  *-------------------------------------------------------------------------------
3491  * Time
3492  * - Temporal structure
3493  * - Fixed time periods
3494  * - States of the world
3495  *-------------------------------------------------------------------------------
3496   
3498   
3501   
3502  *-------------------------------------------------------------------------------
3504   
3505  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
3507  *-------------------------------------------------------------------------------
3508  * Geographic dimension and mapping with countries
3509  *-------------------------------------------------------------------------------
3510   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
3513  *-------------------------------------------------------------------------------
3514  * Non-Cooperative Setup
3515  *
3516  * Each region is defined as an individual coalition.
3517  *
3518  *-------------------------------------------------------------------------------
3519   
3521   
3522  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
3524  *-------------------------------------------------------------------------------
3525  * Welfare
3526  *-------------------------------------------------------------------------------
3527   
3529   
3530  scalar eta 'inverse of the intertemporal elasticity of substitution';
3531  eta = 0.66; #exponent of power utility function (set 1.01 if logarithm)
3532   
3533  parameter gamma 'Degree of relative inequality aversion (between regions)' /0/;
3534   
3535  parameter utility_cebge_global;
3536  parameter utility_cebge_regional(n);
3537  parameter utility_cebge_pc_global;
3538  parameter utility_cebge_pc_regional(n);
3539   
3540  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
3543  *-------------------------------------------------------------------------------
3544  * Economy
3545  * - Production and Consumption definition
3546  * - Top-level of the production function
3547  * Options:
3548  * --original_ssp=1 : original SSP population and GDP data
3549  *-------------------------------------------------------------------------------
3550   
3552   
3553  * Parameters from static calibration
3554  parameter alpha(*,n) 'Production function shares of calibration nodes';
3555  parameter q0(*,n)    'Base year values of calibration nodes';
3556  parameter rho(*,t)     'Rho CES coefficients';
3557  parameter delta0(g)  'Final good depreciation';
3558   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_calib.gdx
--- LOAD  alpha = 1:alpha
--- LOAD  q0 = 2:q0
--- LOAD  delta0 = 5:delta0
--- LOAD  rho = 3:rho
3565   
3566  parameter ykali(t,n) 'GDP for the dynamic calibration [T$]';
3567   parameter ssp_ykali(*,t,n); execute_loaddc 'data_witch17/data_baseline' ssp_ykali; ykali(t,n) = ssp_ykali('ssp2',t,n);
3568   
3569  parameter l(t,n) 'Population [million people]';
3570   parameter ssp_l(*,t,n); execute_loaddc 'data_witch17/data_baseline' ssp_l; l(t,n) = ssp_l('ssp2',t,n);
3571   
3572  parameter gdppc_kali(t,n) 'GDP per capita used for calibration [MER]';
3573  gdppc_kali(t,n) = ykali(t,n) / l(t,n) * 1e6;
3574   
3575  * Adjust population and GDP data until present to historical values maintaining GDP per capita growth
3577   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
3579  parameter ykali_valid(t,n), l_valid(t,n);
--- LOAD  ykali_valid = 10:ykali_valid_wdi
--- LOAD  l_valid = 11:l_valid_wdi
3581  parameter i_valid(*,t,n);
--- LOAD  i_valid = 12:i_valid_wdi
3584   
3585  parameter lrate(t,n);
3586  parameter gdppcrate(t,n);
3587   
3588  loop((t,tp1)$(pre(t,tp1)),
3589    lrate(tp1,n) = l(tp1,n) / l(t,n);
3590    gdppcrate(tp1,n) =  gdppc_kali(tp1,n) / gdppc_kali(t,n);
3591  );
3592   
3593  l(t,n)$(year(t) le 2015) = l_valid(t,n);
3594  gdppc_kali(t,n)$(year(t) le 2015) = ykali_valid(t,n) / l_valid(t,n) * 1e6;
3595   
3596  loop((t,tp1)$(pre(t,tp1) and (year(tp1) gt 2015)),
3597    l(tp1,n) = l(t,n) * lrate(tp1,n);
3598    gdppc_kali(tp1,n) = gdppc_kali(t,n) * gdppcrate(tp1,n);
3599  );
3600   
3602   
3603  ykali(t,n) = gdppc_kali(t,n) * l(t,n) / 1e6;
3604   
3605  * Conversion factors between PPP and MER
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_baseline.gdx
3607  parameter ppp2mer(t,n) 'ratio to convert PPP to MER';
--- LOAD  ppp2mer = 3:ppp2mer
3610  parameter mer2ppp(t,n) 'ratio to convert MER to PPP';
3611  mer2ppp(t,n) = 1 / ppp2mer(t,n);
3612   
3613  * TFP
3614  parameter tfpy(t,n) 'Total Factor Productivity';
3615  parameter tfpn(t,n) 'Total Factor Productivity on energy';
3616   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_tfp_ssp2.gdx
--- LOAD  tfpy = 6:tfpy
--- LOAD  tfpn = 7:tfpn
3622   
3623  parameter m_eqq_y(t,n) 'Marginal value of the production equation';
3624   
3625  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
3628  *-------------------------------------------------------------------------------
3629  * Energy sector
3630  *-------------------------------------------------------------------------------
3631   
3633   
3634  * Calibration parameters
3635  parameters
3636      mcost_inv0(j,n)
3637      p_mkup0(fuel,n)       'Constant regional price markup [T$/TWh]'
3638      oem0(jreal,n)
3639      mu0(jel,n)            'Capacity factor of maximum production [TWh/TW]'
3640      csi0(fuel,jfed,n)     'Sectoral efficiency ratio [TWh/TWh]'
3641      k_en0(jel,n)
3642      delta_en0(jreal,n)    'Yearly depreciation of capital of power technologies'
3643      k_en_valid_old(*,t,n)
3644      k_en_valid_tot(*,t,n)
3645  ;
3646   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_calib.gdx
--- LOAD  mcost_inv0 = 6:mcost_inv0
--- LOAD  p_mkup0 = 7:p_mkup0
--- LOAD  oem0 = 8:oem0
--- LOAD  mu0 = 9:mu0
--- LOAD  csi0 = 10:csi0
--- LOAD  k_en0 = 11:k_en0
--- LOAD  delta_en0 = 12:delta_en0
--- LOAD  k_en_valid_tot = 16:k_en_valid_tot
--- LOAD  k_en_valid_old = 15:k_en_valid_old
3652   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
3654  parameter k_en_valid_gcpt(*,t,n);
--- LOAD  k_en_valid_gcpt = 14:k_en_valid_gcpt
3656  parameter k_en_valid_iaea(*,t,n);
--- LOAD  k_en_valid_iaea = 5:k_en_valid_iaea
3659   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_core_energy.gdx
3661   
3662  parameter lifetime(*,n) 'Lifetime of capital [Years]'
--- LOAD  lifetime = 6:lifetime
3664   
3665  parameter csi_max_2100(fuel,jfed,n) 'Maximum Sectoral efficiency achievable in 2100 [TWh/TWh]';
--- LOAD  csi_max_2100 = 1:csi_max_2100
3667   
3668  * -> cexs Coefficients for fuels supply curves
3669  * a      'Marginal cost of extraction'
3670  * b      'Coefficient on quadratic term'
3671  * c      'Coefficient on cumulative extraction'
3672  * exp    'Power of cumulative extraction'
3673  * cum0   'Cumulative extraction at time zero [millions TWh]'
3674  * res0   'Start ult.ly rec. resources [Millions TWh]'
3675  * resgr0 'Fixed annual growth rate of tot.ult.rec.res.'
3676  * fast   'Fraction of tot res at which price grows fast'
3677  * scl    'Scale up parameter from 2002 to 2005 prices'
3678  * pfirst 'International price at 2002'
3679  * extra  'Extra costs (e.g. conversion and enrichment for uranium)'
3680  parameter cexs(f,*) 'Coefficients for oil, coal, gas and uranium supply curves';
--- LOAD  cexs = 2:cexs
3682   
3683  parameter el_old_start_depreciation_year(jreal,n) 'Starting period for vintaging old capital';
--- LOAD  el_old_start_depreciation_year = 3:el_old_start_depreciation_year
3685   
3686  parameter p_mkup_adjust(fuel,t,n) 'Fuel/time/regions adjustment for p_mkup';
--- LOAD  p_mkup_adjust = 5:p_mkup_adjust
3688   
3689  parameter noeloil(n) 'Regional flag for noeloil';
--- LOAD  noeloil = 4:noeloil
3691   
3693   
3694  parameters mu(jel,t,n)  'Capacity factor of maximum production [TWh/TW]';
3695   
3696  parameter wcum(*,t) 'World cumulated quantities';
3697   
3698  parameter tpes(t,n) 'Primary Energy Supply - Total (Direct use concept for non fossil fuels: primary energy=final energy) [TWh]';
3699   
3700  scalar twh2ej;
3701  twh2ej = 3.6 * 1e-3;
3702   
3703  parameter prodpp(f,t,n);
3704  parameter cum_prodpp(f,t,n);
3705   
3706  parameter delta_en(jreal,t,n);
3707  parameter delta_lcost(jreal,t,n);
3708   
3709  parameter csi(fuel,jfed,t,n);
3710   
3711  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
3714  *-------------------------------------------------------------------------------
3715  * Carbon Emissions
3716  * - Total CO2 emissions and CO2 Fossil fuel and Industry
3717  * - CO2 emission costs
3718  * - GHG permit market
3719  *-------------------------------------------------------------------------------
3720   
3722   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_core_emissions.gdx
3724  parameter emi_st(fuel) 'Stoichiometric coefficient for fuels [GTonC/TWh]';
--- LOAD  emi_st = 1:emi_st
3727   
3728  parameter emi_sys(sys,t,n) 'emi_st adjustments to historical emissions, by sectors';
3729  emi_sys(sys,t,n) = 1; # Default value before calibration
3730   
3731   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
3733  parameter q_emi_valid(*,t,n);
--- LOAD  q_emi_valid = 13:q_emi_valid_ceds
3736   
3737  scalar c2co2;
3738  c2co2 = 44 / 12;
3739   
3740  parameter emi_cap(t,n) 'Emissions permits cap [GtCe]';
3741   
3742  parameter m_eqq_emi_lim(t,n) 'Marginal value of emission permits cap equation';
3743  parameter m_eqq_emi_tree(t,n,e) 'Marginal value of the emission accounting tree equation';
3744   
3745  parameter carbonprice(t,n) 'Carbon price (either the price of permits, the carbon tax, or na) [T$/GtCeq]';
3746  carbonprice(t,n) = 0;
3747   
3748  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
3751  *-------------------------------------------------------------------------------
3752  * Research & Development
3753  * Options:
3754  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
3755  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
3756  *-------------------------------------------------------------------------------
3757   
3759   
3760  parameter rd_delta(rd) 'R&D depreciation rate';
3761  rd_delta(rd) = 0.05;
3762   
3763  scalar rd_crowd_out 'R&D crowding out';
3764  rd_crowd_out = 4;
3765   
3766  * R&D learning equation coefficients (rd,param)
3767  * a: scale parameter [T$]
3768  * b = 0.18 (for 'en', slightly higher elasticity to the own investments)
3769  * c = 0.38 since Popp (2004, JEEM) has 0.53 for the total effect from knowledge stock minus the own knowledge stock 0.53-0.15=0.38
3770  * d = 0.15: 1% increase in spillovers increases output of domestic ideas by 0.15%
3771  * wcum0: Initial cumulative capacity
3772  * lbr: learning by researching rate
3773  * lbd: learning by doing rate
3774  parameter rd_coef(*,*) 'R&D learning equation coefficients';
3775  rd_coef(jrd,'krd0_year') = 2005;
3776   
3777  * R&D learning timing (rd,param)
3778  * gap: number of year after learning
3779  * start: starting year for endogenous learning
3780  parameter rd_time(jrd,*) 'R&D learning timing';
3781   
3782  parameter krd0(rd,n) 'Initial R&D capital';
3783  parameter wkrd0(rd) 'Initial average R&D capital in leader regions';
3784   
3785  parameter krd_lead(rd,t) 'Total R&D capital in leader regions';
3786  parameter krd_oth_lead_krd(rd,t,n);
3787   
3788  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
3791  *-------------------------------------------------------------------------------
3792  * Default Climate Policy Implementation
3793  *
3794  * Options:
3795  *    --policy={bau (default),ctax}
3796  *        Implement a climate policy setting
3797  *  [ --scen= ]
3798  *        Policy variant.
3799  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
3800  *          * XXX for a fixed percentage/yr (e.g. 5) growth
3801  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
3802  *  [ --ctax_year=2020 ]
3803  *        Starting year of the carbon tax
3804  *  [ --ctax_initial=30 ]
3805  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
3806  *
3807  *-------------------------------------------------------------------------------
3809   
3810  parameter ctax(ghg,t,n) 'Carbon tax [T$/GTonC]';
3811   
3812  *-------------------------------------------------------------------------------
3814   
3815  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
3817  *-------------------------------------------------------------------------------
3818  * Energy efficiency
3819  *-------------------------------------------------------------------------------
3820   
3822   
3823  rd_delta('en') = 0.05;
3824  rd_coef('en','a') = 0.0419258;
3825  rd_coef('en','b') = 0.18;
3826  rd_coef('en','c') = 0.3840625;
3827  rd_coef('en','d') = 0.15;
3828   
3829  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
3832  *-------------------------------------------------------------------------------
3833  * Hydro Power
3834  *-------------------------------------------------------------------------------
3835   
3837   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_hydropower.gdx
3839  parameter k_en_hydro(n) 'Factor for exogenous investment profiles';
--- LOAD  k_en_hydro = 1:k_en_hydro
3842   
3843  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
3846  *-------------------------------------------------------------------------------
3847  * System Integration:
3848  * - Capacity constraint
3849  * - Flexibility constraint
3850  * - Grid Investment
3851  * - Capacity growth constraint
3852  *-------------------------------------------------------------------------------
3853   
3855   
3856  * Capacity constraint
3857   
3858  scalar cv_coeff / 0.9 /;
3859  scalar cv_exp / -2.05 /;
3860  scalar peak_load_fraction / 2 /;
3861   
3862  parameter firm_coeff(n);
3863   
3864  * Flexibility constraint
3865   
3866  parameter flex_coeff(*) 'Flexibility constraint coefficient' /
3867  elgastr_old        0.5
3868  elgastr_new        0.5
3869  elgasccs           0.5
3870  elhydro_old        0.5
3871  elhydro_new        0.5
3872  elpb_new           0.3
3873  elpb_old           0.3
3874  elbigcc            0.3
3875  elpc_old           0.15
3876  elpc_new           0.15
3877  elpc_late          0.15
3878  elcigcc            0.15
3879  elpc_ccs           0.15
3880  elpc_oxy           0.15
3881  eloil_old          0.15
3882  eloil_new          0.15
3883  elcsp              0
3884  elnuclear_new      0
3885  elnuclear_old      0
3886  elpv              -0.05
3887  elwindon          -0.08
3888  elwindoff         -0.08
3889  load              -0.1
3890  /;
3891   
3892  scalar storage_eff;
3893  storage_eff = 0.85;
3895   
3896  * Grid
3897   
3898  scalar grid_cost 'Cost of transmission and distribution lines [$/W]';
3899  grid_cost = 0.4;
3900   
3901  parameter grid_coeff(jintren,*) /
3902  elpv.mult   1
3903  elpv.exp    1.5
3904  elwind.mult 1
3905  elwind.exp  1.5
3906  /;
3907   
3908  parameter grid_delta(t,n) 'Depreciation rate of the grid';
3909  lifetime('grid',n) = 60; # Lifetime of 60 years
3910  grid_delta(t,n) = 1 - exp( 1 / ( - lifetime('grid',n) + (0.01/2) * lifetime('grid',n)**2) );
3911   
3912  * Transmission cost
3913   
3914  parameter grid_trans_cost(*,*) 'Additional transmission cost[$/W]' /
3915  elwindon.near   0
3916  elwindon.inter  0.12
3917  elwindon.far    0.4
3918  elwindoff.near  0
3919  elwindoff.inter 0.2
3920  elwindoff.far   0.4
3921  elpv.far        0.2
3922  elcsp.far       0.2
3923  /;
3924   
3925  * Capacity growth constraint
3926   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_systint.gdx
3928   
3929  parameter el_free_cap(n) 'Annual freely allowed capacity addition for the capacity growth constraint';
--- LOAD  el_free_cap = 1:el_free_cap
3932   
3933  parameter mkt_growth_rate(jinv,t,n) 'Annual growth rate of power technologies capacity for the capacity growth constraint';
3934   
3935  * elwindon
3936  mkt_growth_rate('elwindon',t,n)$(year(t) ge 2020) = 0.12;
3937  mkt_growth_rate('elwindoff',t,n)$(year(t) ge 2020) = 0.15;
3938   
3939  * elnuclear
3940  mkt_growth_rate('elnuclear_new',t,n) = 0.1;
3941   
3942  * elsolar
3943  mkt_growth_rate('elpv',t,n)$(year(t) ge 2020) = 0.2;
3944  mkt_growth_rate('elcsp',t,n)                  = 0.2;
3945   
3946  * elcss
3947  mkt_growth_rate(jinv,t,n)$(sum(jccs$sameas(jccs,jinv),1) and sum(jel$sameas(jel,jinv),1)) = 0.075;
3948   
3949  * No constraint before 2010, for CCS before 2005
3950  mkt_growth_rate(jinv,t,n)$(year(t) le 2010 ) = 0;
3951  mkt_growth_rate(jinv,t,n)$(sum(jccs$sameas(jccs,jinv),1) and sum(jel$sameas(jel,jinv),1) and year(t) ge 2010 and year(t) le 2030) = 0.02;
3952   
3953  * Relax the constraint after 2100
3954  mkt_growth_rate(jinv,t,n)$(year(t) gt 2100)  = 0;
3955   
3956  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
3959  *-------------------------------------------------------------------------------
3960  * Nuclear power plants
3961  *-------------------------------------------------------------------------------
3962   
3964   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_nuclear.gdx
3966   
3967  parameter cwaste(iwaste);
--- LOAD  cwaste = 1:cwaste
3969   
3971   
3972  parameter cwaste_reg(iwaste,n);
3973  cwaste_reg(iwaste,n) = cwaste(iwaste);
3974  cwaste_reg('rho',n) = 1.8;
3975   
3976  parameter wastemgm(t,n) 'Waste management costs';
3977   
3978  scalar twh2tonU / 24.4119 /;
3979   
3980  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
3983  *-------------------------------------------------------------------------------
3984  * GHG module
3985  * - CH4 FFI + CH4 waste + CH4 open fires
3986  * - N2O FFI + N2O waste + N2O open fires
3987  *-------------------------------------------------------------------------------
3988   
3990   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
3992  parameter q_emi_valid_ghg;
3993  parameter q_emi_valid_ghg_primap;
--- LOAD  q_emi_valid_ghg = 13:q_emi_valid_ceds
--- LOAD  q_emi_valid_ghg_primap = 15:q_emi_valid_primap
3996  q_emi_valid_ghg('n2o_wst',t,n) = q_emi_valid_ghg_primap('n2o_wst',t,n);
3997  q_emi_valid_ghg('n2o_ffi',t,n) = q_emi_valid_ghg_primap('n2o_ffi',t,n);
3998   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_ghg.gdx
4000   
4001  parameter emi_ghg_hist(e,t,n) 'Historical emissions EDGAR v4.2 (2005,2010) [GtCe]';
--- LOAD  emi_ghg_hist = 3:emi_ghg_hist
4003   
4004  parameter ghg_baseline(e,t,n);
4005   
4006  * Waste emissions baseline
4007  parameter waste_emi_alpha(waste,n) 'region-dependen alpha coefficient to project waste emissions';
4008  parameter waste_emi_beta(waste) 'beta coefficient to project waste emissions';
4009  waste_emi_beta('ch4_wst') = 0.1022529;
4010  waste_emi_beta('n2o_wst') = 0.08610055;
4011  * compute alpha to match 2010 regional emissions
4012  waste_emi_alpha(waste,n) = log(smax(tt$(tperiod(tt) eq 3), q_emi_valid_ghg(waste,tt,n)) /
4013                                 smax(tt$(tperiod(tt) eq 3), l(tt,n))) -
4014                             waste_emi_beta(waste) * log(smax(tt$(tperiod(tt) eq 3), ykali(tt,n)) /
4015                                                         smax(tt$(tperiod(tt) eq 3), l(tt,n)));
4016  ghg_baseline(waste,t,n)$(year(t) le 2015) = q_emi_valid_ghg(waste,t,n);
4017  ghg_baseline(waste,t,n)$(year(t)>2015) = l(t,n) * exp( waste_emi_alpha(waste,n) +
4018                                                      waste_emi_beta(waste) * log(ykali(t,n)/l(t,n))
4019                                                    );
4020   
4021  * FFI emission factors
4022  parameter emi_fac(e,j) 'Technology specific emission factors [Tg/PJ]';
--- LOAD  emi_fac = 1:emi_fac
4024   
4025  parameters emi_ffac0(e,f,n), emi_ffac(e,f,t,n) 'Fuel-region specific emission factors [Tg/PJ]';
--- LOAD  emi_ffac0 = 2:emi_ffac0
4027   
4028  scalar emi_ch4_tp 'annual rate of decreasing emission leakage [%]' /1/;
4029   
4030  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
4033  *-------------------------------------------------------------------------------
4034  * F-gases
4035  * - LLF
4036  * - SLF
4037  *-------------------------------------------------------------------------------
4038   
4040   
4041  * Baseline emissions
4042  parameter fgases_baseline(e,t,n) 'Baseline f-gases emissions for MAC [GTonCeq]';
4043   parameter ssp_fgases_baseline(*,e,t,n); execute_loaddc 'data_witch17/data_mod_fgases' ssp_fgases_baseline; fgases_baseline(e,t,n) = ssp_fgases_baseline('ssp2',e,t,n);
4044   
4045  * Extrapolation post-2100
4046  fgases_baseline(e,t,n)$(year(t) gt 2100) = max(0,(smax(tt$(year(tt) eq 2100), fgases_baseline(e,tt,n))) +
4047                                             (4.516 * exp(-0.2 * (year(t) - 2100)) *
4048                                             (1.2214 * exp(0.2 * (year(t) - 2100))-1)-1) *
4049                                             smax((tt,tm1)$(year(tt) eq 2100 and pre(tm1,tt)), fgases_baseline(e,tt,n) - fgases_baseline(e,tm1,n)) / tlen(t));
4050   
4051  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
4054  *-------------------------------------------------------------------------------
4055  * Landuse [simplified version of the land-use model]
4056  *-------------------------------------------------------------------------------
4057   
4059   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_landuse.gdx
4061  scalar wbio2_price 'Coefficient of the quadratic function of woody biomass';
4062  parameter wbio2_max(n) 'Maximum woody biomass [TWh]';
--- LOAD  wbio2_price = 1:wbio2_price
--- LOAD  wbio2_max = 2:wbio2_max
4064  parameter ch4_agr_baseline(t,n) 'CH4 Agriculture emission baseline [GtCe]';
4065  parameter n2o_agr_baseline(t,n) 'N2O Agriculture emission baseline [GtCe]';
4066  parameter co2lu_baseline(t,n) 'CO2 Land-use emission baseline [GtCe]';
--- LOAD  ch4_agr_baseline = 3:ch4_agr_baseline
--- LOAD  n2o_agr_baseline = 4:n2o_agr_baseline
--- LOAD  co2lu_baseline = 5:co2lu_baseline
4069   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
4071  parameter q_emi_valid_lu(*,t,n)  'Historical land-use emissions [GtCe]';
4072  parameter q_emi_valid_lu_primap(*,t,n) 'Historical land-use emissions --- PRIMAP [GtCe]';
4073  parameter q_fuel_valid_weo(*,t,n) 'Historical fuel consumption --- WEO [GtCe]';
--- LOAD  q_emi_valid_lu = 16:q_emi_valid_fao
--- LOAD  q_emi_valid_lu_primap = 15:q_emi_valid_primap
--- LOAD  q_fuel_valid_weo = 9:q_fuel_valid_weo
4076   
4077  q_emi_valid_lu('n2o_agr',t,n) = q_emi_valid_lu_primap('n2o_agr',t,n);
4078  q_emi_valid_lu('ch4_agr',t,n) = q_emi_valid_lu_primap('ch4_agr',t,n);
4079   
4080  parameter cluprice(t,n) 'Price of CO2 landuse [T$/GtCeq]';
4081  cluprice(t,n) = 0;
4082   
4083  parameter cluprice_iter(siter,t,n);
4084  cluprice_iter(siter,t,n) = 0;
4085   
4086  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
4089  *-------------------------------------------------------------------------------
4090  * Bioenergy power plant
4091  *-------------------------------------------------------------------------------
4092   
4094   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_elbio.gdx
4096  parameter elpb_capacity(n,t) 'Pulverized biomass 2010/2015 capacity [TW]';
--- LOAD  elpb_capacity = 1:elpb_capacity
4099   
4100  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
4103  *-------------------------------------------------------------------------------
4104  * Traditional Biofuels
4105  * - Requires the precedence of mod_landuse
4106  *-------------------------------------------------------------------------------
4107   
4109   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_trbiofuel.gdx
4111   
4112  * Maximum traditionnal biofuel production
4113  parameter trbiofuel_max(n) 'Max traditionnal Biofuel production';
--- LOAD  trbiofuel_max = 1:trbiofuel_max
4115   
4117   
4118   
4119  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
4122  *-------------------------------------------------------------------------------
4123  * Advanced biofuel
4124  * - Require the precedence of mod_landuse
4125  *-------------------------------------------------------------------------------
4126   
4128   
4129  mcost_inv0('nelback',n) = 0.00035;
4130   
4131  * Initial advanced biofuel production
4132  scalar q_en0_back / 1e-6 /;
4133   
4134  scalar alp_nelback / 0.75 /;
4135   
4136  * nelback R&D
4137  rd_delta('nelback') = 0.05;
4138  krd0('nelback',n)   = 0.000478096153846154;
4139  rd_coef('nelback','a')    = 1;
4140  rd_coef('nelback','b')    = 0.85;
4141  rd_coef('nelback','c')    = 0;
4142  rd_coef('nelback','lbr')  = -0.2;
4143  rd_coef('nelback','lbd')  = -0.15;
4144  rd_coef('nelback','wcum0') = 277.777;
4145  rd_time('nelback','gap') = 10; # years
4146  rd_time('nelback','start') = 2020;
4147   
4148  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
4151  *-------------------------------------------------------------------------------
4152  * Carbon Capture and Sequestration
4153  *-------------------------------------------------------------------------------
4154   
4156   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_ccs.gdx
4158   
4159  parameter ccs_capture_eff(jfed);
--- LOAD  ccs_capture_eff = 1:ccs_capture_eff
4161   
4162  parameter ccs_emi_capt(fuel);
--- LOAD  ccs_emi_capt = 3:ccs_emi_capt
4164   
4165  * Definition of floor costs for each country and technology
4166  parameter ccs_floor_cost(*, n) 'Floor Investment Cost [T$/TW]';
--- LOAD  ccs_floor_cost = 4:ccs_floor_cost
4168   
4169  parameter ccs_stor_cap_aqui(n,*) 'Storage capacity for aquifers storage';
--- LOAD  ccs_stor_cap_aqui = 8:ccs_stor_cap_aqui
4171   
4172  parameter ccs_stor_cap_ecbm(n,*) 'Storage capacity for coal bed storage';
--- LOAD  ccs_stor_cap_ecbm = 9:ccs_stor_cap_ecbm
4174   
4175  parameter ccs_stor_cap_og(n,*) 'Storage capacity for oil and gas fields storage';
--- LOAD  ccs_stor_cap_og = 11:ccs_stor_cap_og
4177   
4178  parameter ccs_stor_cap_eor(n) 'Storage capacity for eor storage';
--- LOAD  ccs_stor_cap_eor = 10:ccs_stor_cap_eor
4180   
4181  parameter ccs_stor_share_onoff(n,*) 'Share of storage capacity ONshore and OFFshore';
--- LOAD  ccs_stor_share_onoff = 14:ccs_stor_share_onoff
4183   
4184  parameter ccs_stor_dist(n,*) 'average distance in the country for different storage types in [km]';
--- LOAD  ccs_stor_dist = 13:ccs_stor_dist
4186   
4187  * LEARNING
4188   
4189  parameter ccs_spill_factor(jlccs,jllccs) 'Matrix of share in learning contribution between ccs technologies';
--- LOAD  ccs_spill_factor = 7:ccs_spill_factor
4191   
4192  * Table of learning coefficient for each tech
4193  parameter ccs_learn0(jlccs);
--- LOAD  ccs_learn0 = 5:ccs_learn0
4195   
4196  parameter ccs_learn(jlccs,t);
4197  ccs_learn(jlccs,t) = ccs_learn0(jlccs);
4198   
4199  parameter ccs_wcum0(jlccs) 'minimum installed cumulated capacity after which learning starts [TW]';
--- LOAD  ccs_wcum0 = 15:ccs_wcum0
4201   
4202  parameter ccs_wcum_spill(jlccs,t) 'installed capacity at each time step considering spillover effect among technologies [TW]'
4203  ;
4204   
4205  * STORAGE
4206   
4207  parameter ccs_stor_dist_avg(n,ccs_stor) 'Avg distance from CCS power plants to storage sites [km] from Hendriks 2004';
4208   
4209  loop((ccs_stor_dist_cat,ccs_stor)$(map_ccs_stor_dist_cat(ccs_stor_dist_cat,ccs_stor)),
4210      ccs_stor_dist_avg(n,ccs_stor) = ccs_stor_dist(n,ccs_stor_dist_cat)
4211  );
4212   
4213  parameter ccs_stor_cost_estim(ccs_stor,ccs_stor_estim) 'storage cost, [T$/GtonCO2]';
--- LOAD  ccs_stor_cost_estim = 12:ccs_stor_cost_estim
4216   
4217  parameter ccs_stor_cost(ccs_stor,n) 'storage cost, [T$/GtonCO2]';
4218  ccs_stor_cost(ccs_stor,n) = ccs_stor_cost_estim(ccs_stor,'best');
4219   
4220  scalar ccs_transp_coeff 'coefficients of transport costs, considering that it is almost constant for large mass flow rates [$/(tonCO2*km)]' / 0.006667034 /
4221  ;
4222   
4223  parameter ccs_stor_cap_og_onoff(n,ccs_stor_estim,ccs_stor_og_eor) 'storage capacity of oil and gas fields divided into ONshore and OFFshore GtCO2';
4224  parameter ccs_stor_cap_max(n,ccs_stor_estim,ccs_stor)             'storage capacity of each storage type GtCO2';
4225  parameter ccs_leak_rate(ccs_stor,t,n)                             '%/yr of cumulated stored CO2 leakages';
4226   
4227  *-------------------------------------------------------------------------------
4229   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
4231  *-------------------------------------------------------------------------------
4232  * Coal for non-electric sectors
4233  * - Coke Plants
4234  * - Industrial and Commercial combined-heat-and-power (CHP)
4235  * - Others
4236  *-------------------------------------------------------------------------------
4237   
4239   
4240  parameter nelcoal_baseline(t,n) 'Exogenous non-electric coal';
4241  nelcoal_baseline(t,n) = 1; # dummy value before calibration
4242   
4243  scalar nelcoal_growthrate 'Yearly Growth Rate in baseline (%)';
4244   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_nelcoal.gdx
4246  parameter nelcoal_cmac (n,*);
--- LOAD  nelcoal_cmac = 1:nelcoal_cmac
4249   
4250  parameter nelcoal_max_abat(t,n);
4251  nelcoal_max_abat(t,n)$(year(t) le 2010) = nelcoal_cmac(n,'abat_max_2010');
4252  nelcoal_max_abat(t,n) = min(0.9, nelcoal_cmac(n,'abat_max_2010') * (1 + 0.01)**(year(t) - 2010));
4253   
4254  parameter nelcoal_share_ccs(t);
4255   
4256  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
4259  *-------------------------------------------------------------------------------
4260  * Wind energy module
4261  * - onshore and offshore
4262  *-------------------------------------------------------------------------------
4263   
4265   
4266  scalar yearly_hours / 8760 /;
4267   
4268  * overall renewables parameters
4269  parameter floor_cost(jreal) 'Floor cost for non-constant cost technologies [$/W]';
4270   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_wind.gdx
4272   
4273  parameter windon_pot(n,wind_dist,wind_class) 'Onshore wind potential [TW]';
--- LOAD  windon_pot = 1:windon_pot
4275   
4276  parameter windoff_pot(n,wind_dist,wind_depth,wind_class) 'Offshore wind potential [TW]';
--- LOAD  windoff_pot = 2:windoff_pot
4278   
4279  parameter cap_factor(wind_class) 'Wind capacity factors';
--- LOAD  cap_factor = 3:cap_factor
4281   
4282  parameter k_en0_windon(wind_class,t,n) 'Onshore wind installed/baseline capacity (associated to the proper wind class) [TW]';
4283  parameter k_en0_windoff(wind_class,t,n) 'Offshore wind installed/baseline capacity (associated to the proper wind class) [TW]';
--- LOAD  k_en0_windon = 4:k_en0_windon
--- LOAD  k_en0_windoff = 5:k_en0_windoff
4286   
4287  parameter windcap_update(t,n) 'Onshore wind 2010/2015 capacity [TW]';
4288   
4289  parameter n_oem_wind_high(n) 'regions with high oem costs for wind';
--- LOAD  n_oem_wind_high = 7:n_oem_wind_high
4291   
4292  parameter windcap_offshore(t, n) 'Offshore wind 2010/2015 capacity [TW]';
4293   
4295   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
4297  parameter q_en_valid_wind(*,t,n);
4298  parameter k_en_valid_wind(*,t,n);
4299  parameter mcost_inv_valid_wind(jreal,t,n);
--- LOAD  q_en_valid_wind = 8:q_en_valid_irena
--- LOAD  k_en_valid_wind = 7:k_en_valid_irena
--- LOAD  mcost_inv_valid_wind = 18:mcost_inv_valid_irena
4304   
4305  * for 2005 compute linear extrapolation backwards from 2010
4306  mcost_inv_valid_wind(jreal,t,n)$(year(t) eq 2005) = 2 * (smax(tt$(year(tt) eq 2010), mcost_inv_valid_wind(jreal,tt,n))) - (smax(tt$(year(tt) eq 2015), mcost_inv_valid_wind(jreal,tt,n)));
4307   
4308  parameter windoff_costinv(wind_depth) 'Multiplier coefficient for investment cost between depth';
4309  windoff_costinv('trans') = 1;
4310  windoff_costinv('deep') = 1 + (1 / 13);
4311  windoff_costinv('shallow') = 1 - (1 / 13);
4312   
4313  * Floor costs
4314  floor_cost('elwindon') = 0.5;
4315  floor_cost('elwindoff') = 0.9;
4316  * The offshore wind floor cost is meant to be the near one: the intermediate and far ones always feature the fix transmission cost
4317   
4318  * learning rates (updated from IRENA Power Generation Costs in 2019 report, LCOE based)
4319  * 10% for offshore wind, 23% for onshore wind, 23% for CSP and 36% for solar PV.
4320  * Learning by doing coefficients, converted from learning rates
4321  rd_coef('elwindon','lbd') = log2(1 - 0.23);
4322  rd_coef('elwindoff','lbd') = log2(1 - 0.10);
4323   
4324  scalar wind_spill_wcum 'Share of the on/offshore wcum contributing to off/onshore learning';
4325  wind_spill_wcum = 0.8 ;
4326   
4327  parameter oem_wind(n);
4328  oem_wind(n)$(n_oem_wind_high(n)) = 0.03046;
4329  oem_wind(n)$(not n_oem_wind_high(n)) = 0.02538;
4330   
4331  *-------------------------------------------------------------------------------
4333   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
4335  *-------------------------------------------------------------------------------
4336  * Solar Powerplants (PV and CSP) to the electrical system
4337  *-------------------------------------------------------------------------------
4338   
4339  *-------------------------------------------------------------------------------
4341   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_solar.gdx
4343   
4344  parameter pv_pot_all(n,solar_dist,solar_class_all) 'Solar PV total potential [TW]';
--- LOAD  pv_pot_all = 10:pv_pot
4346   
4347  parameter csp_pot_all(n,solar_dist,solar_class_all) 'Solar CSP total potential [TW]';
--- LOAD  csp_pot_all = 1:csp_pot
4349   
4350  parameter solar_mu_all(solar_class_all,jel_solar) 'Full load hours binned by solar_class [h/yr]';
--- LOAD  solar_mu_all = 11:solar_mu
4352   
4353  parameter pv_pot(n,solar_dist,solar_class) 'Solar PV total potential [TW]';
4354  pv_pot(n,solar_dist,solar_class) = sum(solar_class_all$map_solar_class_all(solar_class, solar_class_all), pv_pot_all(n,solar_dist,solar_class_all));
4355   
4356  parameter csp_pot(n,solar_dist,solar_class) 'Solar CSP total potential [TW]';
4357  csp_pot(n,solar_dist,solar_class) = sum(solar_class_all$map_solar_class_all(solar_class, solar_class_all), csp_pot_all(n,solar_dist,solar_class_all));
4358   
4359  parameter solar_mu(solar_class,jel_solar) 'Full load hours binned by solar_class [h/yr]';
4360  solar_mu(solar_class,jel_solar) = sum(solar_class_all$map_solar_class_all(solar_class, solar_class_all), solar_mu_all(solar_class_all, jel_solar))/
4361      sum(solar_class_all$map_solar_class_all(solar_class, solar_class_all), 1);
4362   
4363  parameter inst_area(n,solar_dist) 'Available area for both PV and CSP installation (competition area) (n,solar_dist) [km^2]';
--- LOAD  inst_area = 2:inst_area
4365   
4366  parameter inst_density(n,jel_solar) 'Installation density [MW/km^2]';
--- LOAD  inst_density = 3:inst_density
4368   
4369  parameter k_en0_pv_all(solar_class_all,t,n) 'PV installed/baseline capacity (in all solar classes) [TW]';
--- LOAD  k_en0_pv_all = 5:k_en0_pv
4371  parameter k_en0_pv(solar_class,t,n) 'PV installed/baseline capacity (in the aggregated solar classes) [TW]';
4372  k_en0_pv(solar_class,t,n) = sum(solar_class_all$map_solar_class_all(solar_class, solar_class_all), k_en0_pv_all(solar_class_all, t,n));
4373   
4374  parameter k_en0_csp_all(solar_class_all,t,n) 'CSP installed/baseline capacity (in all solar classes) [TW]';
--- LOAD  k_en0_csp_all = 4:k_en0_csp
4376  parameter k_en0_csp(solar_class,t,n) 'CSP installed/baseline capacity (in the aggregated solar classes) [TW]';
4377  k_en0_csp(solar_class,t,n) = sum(solar_class_all$map_solar_class_all(solar_class, solar_class_all), k_en0_csp_all(solar_class_all, t,n));
4378   
4379  parameter oem_pv(*,n) 'PV oem cost';
--- LOAD  oem_pv = 9:oem_pv
4381   
4382  parameter oem_csp(n) 'CSP oem cost';
--- LOAD  oem_csp = 8:oem_csp
4384   
4386   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
4388  parameter mcost_inv_valid_solar(jreal,t,n);
--- LOAD  mcost_inv_valid_solar = 18:mcost_inv_valid_irena
4391  * for 2005 compute linear extrapolation backwards from 2010
4392  mcost_inv_valid_solar(jreal,t,n)$(year(t) eq 2005) = 2 * (smax(tt$(year(tt) eq 2010), mcost_inv_valid_solar(jreal,tt,n))) - (smax(tt$(year(tt) eq 2015), mcost_inv_valid_solar(jreal,tt,n)));
4393   
4394  * Learning data
4395   
4396  * Floor costs
4397  floor_cost('elpv') = 0.25;
4398  floor_cost('elcsp') = 1.25;
4399   
4400  * learning rates (updated from IRENA Power Generation Costs in 2019 report, LCOE based)
4401  * 10% for offshore wind, 23% for onshore wind, 23% for CSP and 36% for solar PV.
4402  * Learning by doing coefficients, converted from learning rates
4403  rd_coef('elpv','lbd') = log2(1 - 0.36);
4404  rd_coef('elcsp','lbd') = log2(1 - 0.23);
4405   
4406  *-------------------------------------------------------------------------------
4408   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
4410  *-------------------------------------------------------------------------------
4411  * Technology development scenarios
4412  *-------------------------------------------------------------------------------
4413   
4415   
4416  * Default SSP is SSP2 (Middle of the road)
4417  tech_scen('CCS') = medium;
4418  tech_scen('nuclear') = medium;
4419  tech_scen('renewables') = medium;
4420   
4421  * SSPs variants
4422   
4423  * SSP1 (Sustainability)
4425   
4426  *-------------------------------------------------------------------------------
4428   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
4430  *-------------------------------------------------------------------------------
4431  * Oil Extraction
4432  * Options:
4433  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
4434  *-------------------------------------------------------------------------------
4435   
4437   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_oil.gdx
4439   
4440  parameter oil_capacity(oilg,n);
--- LOAD  oil_capacity = 2:oil_capacity
4442   
4443  parameter oil_emi_st_grade(oilg);
--- LOAD  oil_emi_st_grade = 4:oil_emi_st
4445   
4446  parameter oil_cost_grade(oilg,n);
--- LOAD  oil_cost_grade = 3:oil_cost
4448   
4449  parameter oil_cum_grade(oilg);
--- LOAD  oil_cum_grade = 1:oil_cum
4451   
4452  parameter oem_ex(f);
--- LOAD  oem_ex = 6:oem_ex
4454   
4455  parameter oil_esp_capacity(oilg,*,n);
--- LOAD  oil_esp_capacity = 5:oil_esp_capacity
4457   
4458  parameter oil_reserve(oilg,*,n);
--- LOAD  oil_reserve = 7:oil_reserve
4460   
4462   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
4464   
4465  parameter q_out_valid_weo(*,t,n);
--- LOAD  q_out_valid_weo = 17:q_out_valid_weo
4467   
4469   
4470  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
4473  *-------------------------------------------------------------------------------
4474  * Uranium Resources
4475  *-------------------------------------------------------------------------------
4476   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
4479  *-------------------------------------------------------------------------------
4480  * Gas Resources
4481  *-------------------------------------------------------------------------------
4482   
4484   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_gas.gdx
4486   
4487  parameter trade_poly_gas(polydeg,*,n);
--- LOAD  trade_poly_gas = 1:trade_poly_gas
4489   
4490  parameter trade_scale_gas(*);
--- LOAD  trade_scale_gas = 2:trade_scale_gas
4492   
4493  parameter cgas(*,*) 'Gas price function coefficients';
--- LOAD  cgas = 3:cgas
4495   
4497   
4498  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
4501  *-------------------------------------------------------------------------------
4502  * Coal Resources
4503  *-------------------------------------------------------------------------------
4504   
4506   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_coal.gdx
4508   
4509  parameter trade_poly_coal(polydeg,*,n);
--- LOAD  trade_poly_coal = 1:trade_poly_coal
4511   
4512  parameter trade_scale_coal(*);
--- LOAD  trade_scale_coal = 2:trade_scale_coal
4514   
4515  parameter localpll(t,n) 'Coal/Wbio pollution O&M extra costs [T$/TWh]';
--- LOAD  localpll = 3:localpll
4517   
4518  parameter ccoal(*,*) 'Coal price function coefficients';
--- LOAD  ccoal = 4:ccoal
4520   
4522   
4523  *-------------------------------------------------------------------------------
4525   
4526   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
4528  *-------------------------------------------------------------------------------
4529  * Climate
4530  *
4531  * Represents the climate
4532  * - based on the DICE model equations
4533  * - Radiative forcing for non CO2 ghgs
4534  * - parameters calibrated to reproduce MAGICC6.4 default response
4535  *
4536  *  Options:
4537  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
4538  * - $setglobal cooperate_on_climate {'YES','NO'}
4539  * - 'YES'(default): Countries within a coalition act in cooperation
4540  *   'NO': Countries within a coalition act individually
4541  *
4542  *-------------------------------------------------------------------------------
4543   
4545   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_climate.gdx
4547   
4548  parameter emi_gwp(ghg)  'Global warming potential over a time horizon of 100 years (2007 IPCC AR4) [GTonCO2eq/GTon]';
--- LOAD  emi_gwp = 6:emi_gwp
4550   
4551  parameter tempc(*) 'Temperature update coefficients';
--- LOAD  tempc = 11:tempc
4553   
4554  parameter rfc(e,*) 'Radiative forcing update coefficients';
--- LOAD  rfc = 9:rfc
4556   
4557  parameter temp0(m) 'Initial temperature [deg C above preindustrial levels]';
--- LOAD  temp0 = 10:temp0
4559   
4560  parameter wcum_emi0(e,m) 'Initial world GHG emissions [GTon]';
--- LOAD  wcum_emi0 = 12:wcum_emi0
4562   
4563  parameter wcum_emi_eq(e) 'GHG stocks not subject to decay [GTon]';
--- LOAD  wcum_emi_eq = 13:wcum_emi_eq
4565   
4566  parameter emi_preind(e) 'Stocks of non-CO2 gases in pre-industrial [GTon]';
--- LOAD  emi_preind = 7:emi_preind
4568   
4569  parameter cmphi(m,mm) 'Carbon Cycle transfert matrix';
--- LOAD  cmphi = 5:cmphi
4571   
4572  parameter cmdec1(e) 'Yearly retention factor for non-co2 gases';
--- LOAD  cmdec1 = 2:cmdec1
4574   
4575  parameter cmdec2(e) 'One period retention factor for non-co2 ghg';
--- LOAD  cmdec2 = 3:cmdec2
4577   
4578  * Calibrate on average runs with WITCH given MAGICC outputs
4579  parameter rfaerosols(t) 'Radiative forcing from others (aerosols indirect and direct effects, ozone)';
--- LOAD  rfaerosols = 8:rfaerosols
4581   
4583   
4584  parameter wemi(e,t)     'World GHG emissions';
4585  parameter wemi2qemi(e)  'Conversion factor W_EMI [GtC for CO2, Gt for others] into Q_EMI [GtonCeq]';
4586   
4587  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
4590  *-------------------------------------------------------------------------------
4591  * Long-run Damages from Climate Change
4592  * - Economic impacts
4593  * - Adaptation
4594  *-------------------------------------------------------------------------------
4595   
4597   
4598   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_damage.gdx
4600   
4601  parameter k_h0(n);
--- LOAD  k_h0 = 1:k_h0
4603   
4604  parameter k_edu0(n);
--- LOAD  k_edu0 = 2:k_edu0
4606   
4607  parameter owa(*,n);
--- LOAD  owa = 3:owa
4609   
4610  parameter ces_ada(*,n);
--- LOAD  ces_ada = 4:ces_ada
4612   
4613  parameter comega_neg(*,n,polydeg);
--- LOAD  comega_neg = 6:comega_neg
4615   
4616  parameter comega_pos(*,n,polydeg);
--- LOAD  comega_pos = 5:comega_pos
4618   
4620   
4621   
4622  * Adaptation efficiency
4623   
4625   
4627  ces_ada('eff',n)      = 1;
4628   
4630   
4631   
4632  *-------------------------------------------------------------------------------
4634   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
4636  *-------------------------------------------------------------------------------
4637  * Light-duty Vehicles for Personal Transport
4638  *-------------------------------------------------------------------------------
4639   
4641   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_transport.gdx
4643   
4644  * 1) Vehicles, demand, consumption
4645   
4646  parameter gdppc(t,n) 'GDP per capita [US$2005/person]';
4647  parameter ldv_pthc(t,n) 'Specific number of light duty vehicles [vehicles/thousand capita]';
4648  parameter ldv_total(t,n) 'Total number of light duty vehicles [million]';
4649  parameter km_demand_ldv(t,n) 'LDV kilometre demand [million km]';
4650  parameter service_demand_ldv(t,n) 'Total demand for LDV passenger travel [million pkm]';
4651  parameter km_demand_pv_ldv(t,n) 'LDV kilometre demand per vehicle [km/vehicle]';
4652  parameter km_demand_pv_deviation_ldv(t,n) 'Relative LDV kilometre demand wrt 2005';
4653  parameter fuel_cons(jveh,t,n) 'Yearly fuel consumption per vehicle [TWh/million vehicles], i.e. [MWh/vehicle]';
4654  parameter elec_plg(t,n) 'Yearly electricity consumption per plg_hybrid vehicle [TWh/million vehicles], i.e. [MWh/vehicle]';#source: https://theicct.org/publications/charging-cost-US
4655   
4656  * Source: https://theicct.org/publications/charging-cost-US
4657  parameter charging_station 'cost of charging stations estimation per vehicle' /580/ ;
4658   
4659  parameter disutility_costs_ldv(jveh,t,n) 'Additional costs to investment cost of cars [US$2005/vehicle]';
--- LOAD  disutility_costs_ldv = 7:disutility_costs_ldv
4661   
4662  parameter max_biofuel_feed_share(t) 'Maximum allowable share of biofuels in engines [-]';
--- LOAD  max_biofuel_feed_share = 17:max_biofuel_feed_share
4664   
4665  parameter ai(oge_ai_set) 'Autonomous Increase';
--- LOAD  ai = 1:ai
4667   
4668  parameter oge(oge_ai_set) 'Ownership Growth Elasticity';
4669   parameter ssp_oge(*,oge_ai_set); execute_loaddc 'data_witch17/data_mod_transport' ssp_oge; oge(oge_ai_set) = ssp_oge('ssp2',oge_ai_set);
4670   
4671  parameter coeff_ldv(t,n) 'Multiplicative parameter to adjust the number of vehicles';
--- LOAD  coeff_ldv = 6:coeff_ldv
4673   
4674  parameter fueleff_rate(t,n) 'Fuel efficiency improvement rate';
4675  fueleff_rate(t,n) = -0.25;
4676   
4678   
4679  parameter reg_discount_veh(n) 'Regional discount for vehicle investment cost';
--- LOAD  reg_discount_veh = 20:reg_discount_veh
4681   
4682  parameter ldv_pthc_2005(n) 'Specific number of light duty vehicles in 2005 [vehicles/thousand capita]';
--- LOAD  ldv_pthc_2005 = 13:ldv_pthc_2005
4684  parameter k_veh_passengercars(n,t) 'Number of passenger cars [thousand]';
--- LOAD  k_veh_passengercars = 14:k_veh_passengercars
4686  parameter k_veh_commercial(n,t) 'Number of commercial vehicles [thousand]';
--- LOAD  k_veh_commercial = 15:k_veh_commercial
4688   
4689  parameter k_veh_2005_2015(jveh,t,n) 'Number of LDVs per category (other than trad_cars) in 2005, 2010 and 2015 [million]';
--- LOAD  k_veh_2005_2015 = 11:k_veh_2005_2015
4691   
4692  parameter inv_cost_veh(jveh) 'Cost of purchase for traditional cars [US$2005/vehicle]';
--- LOAD  inv_cost_veh = 10:inv_cost_veh
4694   
4695  parameter oem_veh(jveh,n) 'Vehicle O&M costs [$/million vehicles]';
--- LOAD  oem_veh = 18:oem_veh
4697   
4698  parameter fuel_cons_2005(jveh,n) 'Initial yearly fuel consumption per vehicle [TWh/million vehicles], i.e. [MWh/vehicle]';
--- LOAD  fuel_cons_2005 = 9:fuel_cons_2005
4700   
4701  parameter elec_plg_2005(n) 'Yearly electricity consumption per plg_hybrid vehicle in 2005 [TWh/million vehicles], i.e. [MWh/vehicle]';
--- LOAD  elec_plg_2005 = 8:elec_plg_2005
4703   
4704  parameter trad_biofuel_lim(t,n) 'Limitation on traditional biofuels [TWh]';
--- LOAD  trad_biofuel_lim = 22:trad_biofuel_lim
4706   
4707  parameter biofuel_2005_2010(t,n) 'Biofuel consumption in traditional cars in 2005 and 2010 [TWh]';
--- LOAD  biofuel_2005_2010 = 4:biofuel_2005_2010
4709   
4710  parameter biofuel_2013(n) 'Biofuel consumption in traditional cars in 2013 [TWh]';
--- LOAD  biofuel_2013 = 5:biofuel_2013
4712   
4713  parameter travel_intensity_2005(n)  'Travel intensity in 2005 [km/US$2005]';
--- LOAD  travel_intensity_2005 = 23:travel_intensity_2005
4715   
4716  parameter travel_intensity(t,n) 'Travel intensity [km/US$2005]';
4717  travel_intensity(t,n) = travel_intensity_2005(n);
4718  * An evolution of the travel intensity might be envisioned, but for the moment it is kept constant over the century.
4719   
4721   
4722  parameter load_factor_ldv(t,n)  'LDV load factor - N. of persons per vehicle [persons/vehicle]';
--- LOAD  load_factor_ldv = 16:load_factor_ldv
4724   
4725  * 2) Batteries, R&D
4726   
4727  parameter battery_leadrd(n) 'Countries leading in battery R&D';
--- LOAD  battery_leadrd = 3:battery_leadrd
4729   
4730  leadrd('battery',n) = yes$(battery_leadrd(n));
4731  rd_coef('battery','a')    = 1;
4732  rd_coef('battery','b')    = 0.85;
4733  rd_coef('battery','c')    = 0;
4734  rd_coef('battery','d')    = 0.15;
4735  rd_coef('battery','lbr')  = -0.193;
4736  rd_coef('battery','lbd')  = -0.160;
4737  rd_coef('battery','wcum0') = sum(n, k_veh_2005_2015('hybrid',tfirst,n));
4738  rd_cooperation('battery',clt) = no;
4739  rd_delta('battery') = 0.05;
4740  rd_time('battery','gap') = 10; # years
4741  rd_time('battery','start') = 2020;
4742   
4744   
4745  parameter krd_lo_coeff(krd_lo_set);
--- LOAD  krd_lo_coeff = 12:krd_lo_coeff
4747   
4748  parameter size_battery(jveh,n) 'Battery size [kWh/vehicle]';
--- LOAD  size_battery = 21:size_battery
4750   
4751  parameter battery_cost(t) 'Historical (2005-2015) and then upper bound battery cost [US$2005/kWh]';
--- LOAD  battery_cost = 2:battery_cost
4753   
4754  parameter bat_multip(jveh,n) ;
4755  bat_multip('hybrid',n) = 2.23 ;
4756  bat_multip('plg_hybrid',n) = 1.2 ;
4757   
4758  parameter tank_cost(jveh) ;
4759  tank_cost('trad_cars') = 471 ;
4760  tank_cost('hybrid') = 471 ;
4761  tank_cost('plg_hybrid') = 471 ;
4762   
4763  parameter size_elmotor(jveh) ;
4764  size_elmotor('edv') = 75 ;
4765  size_elmotor('hybrid') = 20 ;
4766  size_elmotor('plg_hybrid') = 47 ;
4767   
4768   
4769  parameter size_ice(jveh);
4770  size_ice('trad_cars') = 75 ;
4771  size_ice('hybrid') = 58 ;
4772  size_ice('plg_hybrid') = 58 ;
4773  parameter charger_cost /576/ ;
4774  parameter glider_manufacture_cost /17410/ ; # $
4775  parameter ice_cost /38/ ; # $/kw
4776  * 3) Flags
4777   
4778  parameter  growth_func_ldv(jveh) /
4779  trad_cars       0
4780  hybrid          1
4781  plg_hybrid      1
4782  edv             1
4783  /;
4784   
4785  parameter  inv_constraint_ldv(jveh_inv) /
4786  trad_cars       0
4787  hybrid          1
4788  plg_hybrid      1
4789  edv             1
4790  /;
4791   
4793   
4794  scalar smooth_ldv / 1.25 /;
4795   
4796  *** new code
4797  parameter carshare(t,n);
4798   
4799  parameter
4800      battery_cost_new(t,n);
4801   
4802  parameter perc_raremat_battery
4803      p_rmb /0.10/;
4804   
4805  parameter perc_incr_price_lith  #setglobal
4806      pi_lprice /0.50/;
4807   
4808  *parameter increase_price_rare_material(t);
4809   
4810  parameter
4811      dec_inv(t,n);
4812   
4813   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_battery.gdx
4815  parameter increase_price_rare_material(t);
--- LOAD  increase_price_rare_material = 1:increase_price_rare_material
4818   
4819  ***
4820  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
4823  *-------------------------------------------------------------------------------
4824  * Road Freight Transport
4825  *-------------------------------------------------------------------------------
4827   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_transport_freight.gdx
4829   
4830  parameter stfr_total(t,n) 'Total number of freight vehicles [million]';
4831  parameter km_demand_stfr(t,n) 'Freight vehicle kilometre demand [million km]';
4832  parameter service_demand_stfr(t,n) 'Total demand for freight travel [million tkm]';
4833  parameter km_demand_pv_stfr(t,n) 'Freight kilometre demand per vehicle [km/vehicle]';
4834  parameter load_factor_stfr(t,n)  'Freight vehicle load factor - N. of tons per vehicle [tons/vehicle]';
4835  parameter fuel_cons_stfr(jfrt,t,n) 'Yearly fuel consumption per freight vehicle [TWh/million vehicles], i.e. [MWh/vehicle]';
4836  parameter elec_plg_stfr(t,n) 'Yearly electricity consumption per plg_hybrid freight vehicle [TWh/million vehicles], i.e. [MWh/vehicle]';
4837   
4838  parameter disutility_costs_stfr(*,t,n) 'Additional costs to investment cost of freight [US$2005/vehicle]';
--- LOAD  disutility_costs_stfr = 1:disutility_costs_stfr
4840   
4841  parameter stfr_total_2005(n) 'Total number of freight vehicles in 2005 [million]';
--- LOAD  stfr_total_2005 = 2:stfr_total_2005
4843   
4844  parameter stfr_factor(*) 'Multiplicative factor of road freight ownership growth [-]' /
4845  ssp1  0.8
4846  ssp2  1
4847  ssp3  1.2
4848  ssp4  1.2
4849  ssp5  1
4850  /;
4851   
4852  parameter km_demand_pv_stfr_2005(n) 'Freight kilometre demand per vehicle in 2005 [km/vehicle]';
--- LOAD  km_demand_pv_stfr_2005 = 3:km_demand_pv_stfr_2005
4854   
4855  parameter load_factor_stfr_2005(n)  'Freight vehicle load factor - N. of tons per vehicle in 2005 [tons/vehicle]';
--- LOAD  load_factor_stfr_2005 = 4:load_factor_stfr_2005
4857   
4858  parameter inv_cost_frt(jfrt) 'Cost of purchase for traditional freight vehicles [US$2005/vehicle]';
--- LOAD  inv_cost_frt = 5:inv_cost_frt
4860   
4861  parameter oem_frt(n) 'Freight vehicle O&M costs [$/million vehicles]';
--- LOAD  oem_frt = 6:oem_frt
4863   
4864  parameter fuel_cons_stfr_2005(jfrt,n) '2005 fuel consumption per freight vehicle [TWh/million vehicles)], i.e. [MWh/vehicle]';
--- LOAD  fuel_cons_stfr_2005 = 7:fuel_cons_stfr_2005
4866   
4867  parameter fueleff_rate_stfr(t,n) 'Fuel efficiency improvement rate for freight vehicles';
4868  fueleff_rate_stfr(t,n) = -0.22;
4869  * Strong Fuel Efficiency Improvement (FEI) requires value of -0.22. See Bosetti and Longden (2012) for details.
4870   
4871  parameter elec_plghbd_stfr_2005(n)  '2005 electricity consumption per plg_hybrid freight vehicle [TWh/million vehicles], i.e. [MWh/vehicle]';
--- LOAD  elec_plghbd_stfr_2005 = 8:elec_plghbd_stfr_2005
4873   
4874  parameter size_battery_freight(jfrt,n) 'Battery size of freight vehicles [kWh/vehicle]';
--- LOAD  size_battery_freight = 9:size_battery_freight
4876  size_battery_freight('edv_stfr',n) = 310 ;
4877  size_battery_freight('plg_hbd_stfr',n) = 110 ;
4878   
4879  parameter  growth_func_stfr(jfrt) /
4880  trad_stfr        0
4881  hbd_stfr         1
4882  plg_hbd_stfr     1
4883  edv_stfr         1
4884  /;
4885   
4887   
4888  scalar smooth_strfr / 1.124 /; # numerical factor (1.124) has been derived by fitting the hybrid vehicle projections reported in IEA (2010).
4889   
4890  *-------------------------------------------------------------------------------
4892   
4893   
4894   
4895   
4896   
4897   
4898  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
4900  *-------------------------------------------------------------------------------
4901  * Traditional Biomass
4902  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
4903  *  - require post_process to be launch before
4904  *-------------------------------------------------------------------------------
4905   
4907   
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_trbiomass.gdx
4909   
4910  parameter neltrbiomass0(t,n) 'Exogenous traditional biomass';
--- LOAD  neltrbiomass0 = 1:neltrbiomass0
4912   
4913  parameter trbio_countries(n) 'countries where traditional biomass is still used';
--- LOAD  trbio_countries = 2:trbio_countries
4915   
4917   
4918  parameter scale_trbiomass(n)  'scaling factor for traditional biomass';
4919   
4920  parameter trbio_ctr(*,n);
4921  trbio_ctr('alpha',n) =  -0.7221;
4922  trbio_ctr('beta',n)  =   0.1677;
4923   
4924  parameter trbio_gdp_fun(t,n);
4925   
4926  *-------------------------------------------------------------------------------
4928   
4929  * Optional modules
4930   
4931  * Policy modules
4932   
4933  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
4937  *-------------------------------------------------------------------------------
4938  * Call modules by order
4939  *-------------------------------------------------------------------------------
4943   
4944  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
4946  *-------------------------------------------------------------------------------
4947  * Algorithm
4948  *-------------------------------------------------------------------------------
4949   
4951   
4952  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
4954  *-------------------------------------------------------------------------------
4955  * Time
4956  * - Temporal structure
4957  * - Fixed time periods
4958  * - States of the world
4959  *-------------------------------------------------------------------------------
4960   
4962   
4963  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
4965  *-------------------------------------------------------------------------------
4966  * Geographic dimension and mapping with countries
4967  *-------------------------------------------------------------------------------
4968   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
4971  *-------------------------------------------------------------------------------
4972  * Non-Cooperative Setup
4973  *
4974  * Each region is defined as an individual coalition.
4975  *
4976  *-------------------------------------------------------------------------------
4977   
4979   
4980  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
4982  *-------------------------------------------------------------------------------
4983  * Welfare
4984  *-------------------------------------------------------------------------------
4985   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
4988  *-------------------------------------------------------------------------------
4989  * Economy
4990  * - Production and Consumption definition
4991  * - Top-level of the production function
4992  * Options:
4993  * --original_ssp=1 : original SSP population and GDP data
4994  *-------------------------------------------------------------------------------
4995   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
4998  *-------------------------------------------------------------------------------
4999  * Energy sector
5000  *-------------------------------------------------------------------------------
5001   
5003   
5004  mu(jel,t,n)$(not jel_own_mu(jel)) = mu0(jel,n);
5005   
5006  parameter mucalib(jel,t,n);
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_tfp_ssp2.gdx
--- LOAD  mucalib = 1:mu
5010  loop((jel,jcalib)$(sum(jold$sameas(jold,jel),1) and sum(jreal$sameas(jreal,jel),1) and map_calib(jcalib,jel)),
5011    mu(jel,t,n)$(year(t) eq 2005) = mu0(jel,n);
5012    mu(jel,t,n)$(year(t) ge 2010) = mucalib(jel,t,n);
5013  );
5014  mu('elpc_late',t,n)$(year(t) ge 2010) = mucalib('elpc_late',t,n);
5015  mu('elgastr_new',t,n)$(year(t) ge 2010) = mucalib('elgastr_new',t,n);
5016  mu('elgastr_old',t,n)$(year(t) ge 2010) = mucalib('elgastr_old',t,n);
5017  mu('elnuclear_new',t,n)$(year(t) ge 2010) = mucalib('elnuclear_new',t,n);
5018  mu('elnuclear_old',t,n)$(year(t) ge 2010) = mucalib('elnuclear_old',t,n);
5019  mu('eloil_new',t,n)$(year(t) ge 2010) = mucalib('eloil_new',t,n);
5020  mu('eloil_old',t,n)$(year(t) ge 2010) = mucalib('eloil_old',t,n);
5021   
5022  parameter csicalib(fuel,jfed,t,n);
GDXIN   C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_tfp_ssp2.gdx
--- LOAD  csicalib = 2:csi
5026  csi(fuel,jfed,t,n) = csi0(fuel,jfed,n);
5027  csi(fuel,jfed,t,n)$csi_max_2100(fuel,jfed,n) = min((csi0(fuel,jfed,n)*(2100-year(t)) + csi_max_2100(fuel,jfed,n)*(year(t)-year(tfirst))) / (2100-year(tfirst)),  csi_max_2100(fuel,jfed,n));
5028  csi('coal','elpc_late',t,n)$(year(t) ge 2010) = csicalib('coal','elpc_late',t,n);
5029  csi('coal','elpc_old',t,n)$(year(t) ge 2010) = csicalib('coal','elpc_old',t,n);
5030  csi('gas','elgastr_old',t,n)$(year(t) ge 2010) = csicalib('gas','elgastr_old',t,n);
5031  csi('gas','elgastr_new',t,n)$(year(t) ge 2010) = csicalib('gas','elgastr_new',t,n);
5032  csi('oil','eloil_old',t,n)$(year(t) ge 2010) = csicalib('oil','eloil_old',t,n);
5033  csi('oil','eloil_new',t,n)$(year(t) ge 2010) = csicalib('oil','eloil_new',t,n);
5034   
5035  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
5038  *-------------------------------------------------------------------------------
5039  * Carbon Emissions
5040  * - Total CO2 emissions and CO2 Fossil fuel and Industry
5041  * - CO2 emission costs
5042  * - GHG permit market
5043  *-------------------------------------------------------------------------------
5044   
5046   
5047  execute_load 'data_witch17/data_tfp_ssp2', emi_sys;
5048   
5049  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
5052  *-------------------------------------------------------------------------------
5053  * Research & Development
5054  * Options:
5055  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
5056  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
5057  *-------------------------------------------------------------------------------
5058   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
5061  *-------------------------------------------------------------------------------
5062  * Default Climate Policy Implementation
5063  *
5064  * Options:
5065  *    --policy={bau (default),ctax}
5066  *        Implement a climate policy setting
5067  *  [ --scen= ]
5068  *        Policy variant.
5069  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
5070  *          * XXX for a fixed percentage/yr (e.g. 5) growth
5071  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
5072  *  [ --ctax_year=2020 ]
5073  *        Starting year of the carbon tax
5074  *  [ --ctax_initial=30 ]
5075  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
5076  *
5077  *-------------------------------------------------------------------------------
5079   
5080  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
5082  *-------------------------------------------------------------------------------
5083  * Energy efficiency
5084  *-------------------------------------------------------------------------------
5085   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
5088  *-------------------------------------------------------------------------------
5089  * Hydro Power
5090  *-------------------------------------------------------------------------------
5091   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
5094  *-------------------------------------------------------------------------------
5095  * System Integration:
5096  * - Capacity constraint
5097  * - Flexibility constraint
5098  * - Grid Investment
5099  * - Capacity growth constraint
5100  *-------------------------------------------------------------------------------
5101   
5103   
5104  execute_load 'data_witch17/data_tfp_ssp2', firm_coeff;
5105   
5106  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
5109  *-------------------------------------------------------------------------------
5110  * Nuclear power plants
5111  *-------------------------------------------------------------------------------
5112   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
5115  *-------------------------------------------------------------------------------
5116  * GHG module
5117  * - CH4 FFI + CH4 waste + CH4 open fires
5118  * - N2O FFI + N2O waste + N2O open fires
5119  *-------------------------------------------------------------------------------
5120   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
5123  *-------------------------------------------------------------------------------
5124  * F-gases
5125  * - LLF
5126  * - SLF
5127  *-------------------------------------------------------------------------------
5128   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
5131  *-------------------------------------------------------------------------------
5132  * Landuse [simplified version of the land-use model]
5133  *-------------------------------------------------------------------------------
5134   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
5137  *-------------------------------------------------------------------------------
5138  * Bioenergy power plant
5139  *-------------------------------------------------------------------------------
5140   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
5143  *-------------------------------------------------------------------------------
5144  * Traditional Biofuels
5145  * - Requires the precedence of mod_landuse
5146  *-------------------------------------------------------------------------------
5147   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
5150  *-------------------------------------------------------------------------------
5151  * Advanced biofuel
5152  * - Require the precedence of mod_landuse
5153  *-------------------------------------------------------------------------------
5154   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
5157  *-------------------------------------------------------------------------------
5158  * Carbon Capture and Sequestration
5159  *-------------------------------------------------------------------------------
5160   
5162   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
5164  *-------------------------------------------------------------------------------
5165  * Coal for non-electric sectors
5166  * - Coke Plants
5167  * - Industrial and Commercial combined-heat-and-power (CHP)
5168  * - Others
5169  *-------------------------------------------------------------------------------
5170   
5172   
5173  execute_load 'data_witch17/data_tfp_ssp2', nelcoal_baseline;
5174   
5175  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
5178  *-------------------------------------------------------------------------------
5179  * Wind energy module
5180  * - onshore and offshore
5181  *-------------------------------------------------------------------------------
5182   
5184   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
5186  *-------------------------------------------------------------------------------
5187  * Solar Powerplants (PV and CSP) to the electrical system
5188  *-------------------------------------------------------------------------------
5189   
5190  *-------------------------------------------------------------------------------
5192   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
5194  *-------------------------------------------------------------------------------
5195  * Technology development scenarios
5196  *-------------------------------------------------------------------------------
5197   
5199   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
5201  *-------------------------------------------------------------------------------
5202  * Oil Extraction
5203  * Options:
5204  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
5205  *-------------------------------------------------------------------------------
5206   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
5209  *-------------------------------------------------------------------------------
5210  * Uranium Resources
5211  *-------------------------------------------------------------------------------
5212   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
5215  *-------------------------------------------------------------------------------
5216  * Gas Resources
5217  *-------------------------------------------------------------------------------
5218   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
5221  *-------------------------------------------------------------------------------
5222  * Coal Resources
5223  *-------------------------------------------------------------------------------
5224   
5226   
5227   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
5229  *-------------------------------------------------------------------------------
5230  * Climate
5231  *
5232  * Represents the climate
5233  * - based on the DICE model equations
5234  * - Radiative forcing for non CO2 ghgs
5235  * - parameters calibrated to reproduce MAGICC6.4 default response
5236  *
5237  *  Options:
5238  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
5239  * - $setglobal cooperate_on_climate {'YES','NO'}
5240  * - 'YES'(default): Countries within a coalition act in cooperation
5241  *   'NO': Countries within a coalition act individually
5242  *
5243  *-------------------------------------------------------------------------------
5244   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
5247  *-------------------------------------------------------------------------------
5248  * Long-run Damages from Climate Change
5249  * - Economic impacts
5250  * - Adaptation
5251  *-------------------------------------------------------------------------------
5252   
5254   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
5256  *-------------------------------------------------------------------------------
5257  * Light-duty Vehicles for Personal Transport
5258  *-------------------------------------------------------------------------------
5259   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
5262  *-------------------------------------------------------------------------------
5263  * Road Freight Transport
5264  *-------------------------------------------------------------------------------
5266   
5267   
5268   
5269   
5270   
5271   
5272  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
5274  *-------------------------------------------------------------------------------
5275  * Traditional Biomass
5276  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
5277  *  - require post_process to be launch before
5278  *-------------------------------------------------------------------------------
5279   
5281   
5282  * Optional modules
5283   
5284  * Policy modules
5285   
5286  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
5290  *-------------------------------------------------------------------------------
5291  * Call modules by order
5292  *-------------------------------------------------------------------------------
5296   
5297  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
5299  *-------------------------------------------------------------------------------
5300  * Algorithm
5301  *-------------------------------------------------------------------------------
5302   
5304   
5305  rho_admm('oil',t) = 3e-9;
5306  rho_admm('nip',t) = 2e0;
5307   
5308  *-------------------------------------------------------------------------------
5310   
5311  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
5313  *-------------------------------------------------------------------------------
5314  * Time
5315  * - Temporal structure
5316  * - Fixed time periods
5317  * - States of the world
5318  *-------------------------------------------------------------------------------
5319   
5321   
5322  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
5324  *-------------------------------------------------------------------------------
5325  * Geographic dimension and mapping with countries
5326  *-------------------------------------------------------------------------------
5327   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
5330  *-------------------------------------------------------------------------------
5331  * Non-Cooperative Setup
5332  *
5333  * Each region is defined as an individual coalition.
5334  *
5335  *-------------------------------------------------------------------------------
5336   
5338   
5339  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
5341  *-------------------------------------------------------------------------------
5342  * Welfare
5343  *-------------------------------------------------------------------------------
5344   
5346   
5347  parameter srtp(t) 'Social rate of time preference [% per year]';
5348  srtp(t) = 1;
5349   
5350  parameter stpf(t) 'Social time preference factor';
5351  stpf(tfirst) = 1;
5352  loop(tnolast(t),
5353    stpf(tt)$pre(t,tt) = stpf(t) / (1 + srtp(t) / 100)**tlen(t);
5354  );
5355   
5356  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
5359  *-------------------------------------------------------------------------------
5360  * Economy
5361  * - Production and Consumption definition
5362  * - Top-level of the production function
5363  * Options:
5364  * --original_ssp=1 : original SSP population and GDP data
5365  *-------------------------------------------------------------------------------
5366   
5368   
5369  parameter delta(g);
5370  delta(g) = delta0(g);
5371   
5372  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
5375  *-------------------------------------------------------------------------------
5376  * Energy sector
5377  *-------------------------------------------------------------------------------
5378   
5380   
5382   
5383  delta_en(jreal,t,n) = delta_en0(jreal,n);
5384  delta_lcost(jreal,t,n) = delta_en0(jreal,n);
5385   
5386  loop((jreal,jcalib)$(map_calib(jcalib,jreal) and sum(jold$sameas(jold,jreal),1)),
5387      delta_en(jreal,t,n)$(year(t) eq 2005) = 0;
5388      delta_en(jreal,t,n)$(year(t) eq 2010) = 1 - (k_en_valid_old(jcalib,t,n) / k_en_valid_old(jcalib,tfirst,n))**(1/5);
5389      loop((t,tm1)$((year(t) eq 2015) and pre(tm1,t)), delta_en(jreal,t,n) = 0.5*(delta_en(jreal,tm1,n)+delta_en0(jreal,n)));
5390  );
5391   
5392  parameter p_mkup(fuel,t,n) 'Temporal-regional price markup [T$/TWh]';
5393  p_mkup(fuel,t,n)$p_mkup0(fuel,n) = p_mkup0(fuel,n)*p_mkup_adjust(fuel,t,n);
5394   
5395  parameter oem(jreal,t,n);
5396  oem(jreal,t,n) = oem0(jreal,n);
5397  oem(jfed,t,n)$(csi('coal',jfed,t,n) or csi('wbio',jfed,t,n)) = oem(jfed,t,n) + localpll(t,n);
5398   
5399  wcum(f,tfirst) = cexs(f,'cum0');
5400   
5401  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
5404  *-------------------------------------------------------------------------------
5405  * Carbon Emissions
5406  * - Total CO2 emissions and CO2 Fossil fuel and Industry
5407  * - CO2 emission costs
5408  * - GHG permit market
5409  *-------------------------------------------------------------------------------
5410   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
5413  *-------------------------------------------------------------------------------
5414  * Research & Development
5415  * Options:
5416  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
5417  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
5418  *-------------------------------------------------------------------------------
5419   
5421   
5422  wcum(rd,tfirst) = rd_coef(rd,'wcum0');
5423   
5424  * Map a period to its learning reference period.
5425  * Example: if all periods last 5 years and rd_gap_year is 10 years, then
5426  * the period to consider is the second predecessor (t-2).
5427  loop(jrd,
5428  rd_tgap(jrd,t,tt) = no;
5429  loop((t,tt)$(not tfix(t) and
5430    preds(t,tt) and
5431    (year(t) ge rd_time(jrd,'start')) and
5432    (begyear(t)-rd_time(jrd,'gap') ge begyear(tt)) and
5433    (begyear(t)-rd_time(jrd,'gap') lt begyear(tt)+tlen(tt))),
5434  rd_tgap(jrd,t,tt) = yes;
5435  );
5436  );
5437   
5438  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
5441  *-------------------------------------------------------------------------------
5442  * Default Climate Policy Implementation
5443  *
5444  * Options:
5445  *    --policy={bau (default),ctax}
5446  *        Implement a climate policy setting
5447  *  [ --scen= ]
5448  *        Policy variant.
5449  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
5450  *          * XXX for a fixed percentage/yr (e.g. 5) growth
5451  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
5452  *  [ --ctax_year=2020 ]
5453  *        Starting year of the carbon tax
5454  *  [ --ctax_initial=30 ]
5455  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
5456  *
5457  *-------------------------------------------------------------------------------
5459   
5460  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
5462  *-------------------------------------------------------------------------------
5463  * Energy efficiency
5464  *-------------------------------------------------------------------------------
5465   
5467   
5468  krd0('en',n) = q0('krd_en',n);
5469   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
5472  *-------------------------------------------------------------------------------
5473  * Hydro Power
5474  *-------------------------------------------------------------------------------
5475   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
5478  *-------------------------------------------------------------------------------
5479  * System Integration:
5480  * - Capacity constraint
5481  * - Flexibility constraint
5482  * - Grid Investment
5483  * - Capacity growth constraint
5484  *-------------------------------------------------------------------------------
5485   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
5488  *-------------------------------------------------------------------------------
5489  * Nuclear power plants
5490  *-------------------------------------------------------------------------------
5491   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
5494  *-------------------------------------------------------------------------------
5495  * GHG module
5496  * - CH4 FFI + CH4 waste + CH4 open fires
5497  * - N2O FFI + N2O waste + N2O open fires
5498  *-------------------------------------------------------------------------------
5499   
5501   
5502  emi_ffac('ch4_ffi',f,t,n) = emi_ffac0('ch4_ffi',f,n);
5503  emi_ffac('ch4_ffi',f,t,n)$(year(t)>2005) = emi_ffac0('ch4_ffi',f,n) * power(1 - (emi_ch4_tp/100),year(t)-2005);
5504   
5505  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
5508  *-------------------------------------------------------------------------------
5509  * F-gases
5510  * - LLF
5511  * - SLF
5512  *-------------------------------------------------------------------------------
5513   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
5516  *-------------------------------------------------------------------------------
5517  * Landuse [simplified version of the land-use model]
5518  *-------------------------------------------------------------------------------
5519   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
5522  *-------------------------------------------------------------------------------
5523  * Bioenergy power plant
5524  *-------------------------------------------------------------------------------
5525   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
5528  *-------------------------------------------------------------------------------
5529  * Traditional Biofuels
5530  * - Requires the precedence of mod_landuse
5531  *-------------------------------------------------------------------------------
5532   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
5535  *-------------------------------------------------------------------------------
5536  * Advanced biofuel
5537  * - Require the precedence of mod_landuse
5538  *-------------------------------------------------------------------------------
5539   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
5542  *-------------------------------------------------------------------------------
5543  * Carbon Capture and Sequestration
5544  *-------------------------------------------------------------------------------
5545   
5547   
5548  * Storage capacity: total of aquifer dividing into ON and OFF
5549  ccs_stor_cap_max(n,ccs_stor_estim,ccs_stor_aqui) = ccs_stor_cap_aqui(n,ccs_stor_estim) * ccs_stor_share_onoff(n,ccs_stor_aqui);
5550   
5551  * Storage capacity: total of og, eor included
5552  ccs_stor_cap_og_onoff(n,ccs_stor_estim,ccs_stor_og_eor) = ccs_stor_cap_og(n,ccs_stor_estim) * ccs_stor_share_onoff(n,ccs_stor_og_eor);
5553   
5554  * Storage capacity: total of ecbm which is ON only
5555  ccs_stor_cap_max(n,ccs_stor_estim,'ecbm') = ccs_stor_cap_ecbm(n,ccs_stor_estim);
5556   
5557  * Storage capacity: total of eor dividing into ON and OFF
5558  loop((ccs_stor_eor,ccs_stor_og_eor)$(map_ccs_stor_eor(ccs_stor_eor,ccs_stor_og_eor)),
5559       ccs_stor_cap_max(n,ccs_stor_estim,ccs_stor_eor) = ccs_stor_cap_eor(n)*ccs_stor_share_onoff(n,ccs_stor_og_eor)
5560  );
5561   
5562  * Storage capacity: total of og, eor excluded
5563  loop((ccs_stor_og,ccs_stor_og_eor,ccs_stor_eor)$(map_ccs_stor_og(ccs_stor_og,ccs_stor_og_eor,ccs_stor_eor)),
5564     ccs_stor_cap_max(n,ccs_stor_estim,ccs_stor_og) = max(ccs_stor_cap_og_onoff(n,ccs_stor_estim,ccs_stor_og_eor)-ccs_stor_cap_max(n,ccs_stor_estim,ccs_stor_eor),1e-7)
5565  );
5566   
5567  * Emission factors fix
5568  ccs_emi_capt('coal') = emi_st('coal');
5569  ccs_emi_capt('gas') = emi_st('gas');
5570   
5571  ccs_leak_rate(ccs_stor,t,n) = 0;
5572   
5573  *-------------------------------------------------------------------------------
5575   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
5577  *-------------------------------------------------------------------------------
5578  * Coal for non-electric sectors
5579  * - Coke Plants
5580  * - Industrial and Commercial combined-heat-and-power (CHP)
5581  * - Others
5582  *-------------------------------------------------------------------------------
5583   
5585   
5586  csi('coal','nelcoal',t,n) = 0;
5587   
5588  csi('coal','nelcoaltr',t,n) = 1;
5589  csi('coal','nelcoalccs',t,n) = 1;
5590   
5591  mcost_inv0('nelcoalccs',n) = 25 * c2co2 * 1e-6;
5592   
5593  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
5596  *-------------------------------------------------------------------------------
5597  * Wind energy module
5598  * - onshore and offshore
5599  *-------------------------------------------------------------------------------
5600   
5602   
5603  parameter wind_mu(wind_class);
5604  wind_mu(wind_class) = cap_factor(wind_class) * yearly_hours;
5605   
5606  delta_en(jreal_wind,t,n)=delta_en0(jreal_wind,n);
5607  delta_lcost(jreal_wind,t,n)=delta_en0(jreal_wind,n);
5608   
5609  oem('elwindon',t,n) = oem_wind(n);
5610  oem('elwindoff',t,n) = 2*oem_wind(n);
5611   
5612  k_en0('elwindon',n) = max(1e-8,sum(wind_class,(smax(tt$(year(tt) eq 2005), k_en0_windon(wind_class,tt,n)))));
5613  k_en0('elwindoff',n) = max(1e-8,sum(wind_class,(smax(tt$(year(tt) eq 2005), k_en0_windoff(wind_class,tt,n)))));
5614   
5615  mu('elwindon',tfirst,n) = sum(wind_class, wind_mu(wind_class)*max(1e-8,(smax(tt$(year(tt) eq 2005), k_en0_windon(wind_class,tt,n)))))/k_en0('elwindon',n);
5616  mu('elwindoff',tfirst,n) = sum(wind_class, wind_mu(wind_class)*max(1e-8,(smax(tt$(year(tt) eq 2005), k_en0_windoff(wind_class,tt,n)))))/k_en0('elwindoff',n);
5617   
5618  *-------------------------------------------------------------------------------
5620   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
5622  *-------------------------------------------------------------------------------
5623  * Solar Powerplants (PV and CSP) to the electrical system
5624  *-------------------------------------------------------------------------------
5625   
5626  *-------------------------------------------------------------------------------
5628   
5629  delta_en(jreal_solar,t,n) = delta_en0(jreal_solar,n);
5630  delta_lcost(jreal_solar,t,n) = delta_en0(jreal_solar,n);
5631   
5632  mcost_inv0('elpv',n) = (smax(tt$(year(tt) eq 2005), mcost_inv_valid_solar('elpv',tt,n)));
5633  k_en0('elpv',n) = sum(solar_class, k_en0_pv(solar_class,tfirst,n));
5634  oem('elpv',t,n) = oem_pv('mid',n);
5635   
5636  mcost_inv0('elcsp',n) = (smax(tt$(year(tt) eq 2005), mcost_inv_valid_solar('elcsp',tt,n)));
5637  k_en0('elcsp',n) = sum(solar_class, k_en0_csp(solar_class,tfirst,n));
5638  oem('elcsp',t,n) = oem_csp(n);
5639   
5640  mu('elpv',tfirst,n)$(k_en0('elpv',n) gt eps) = sum(solar_class, solar_mu(solar_class,'elpv')*max(1e-8,k_en0_pv(solar_class,tfirst,n)))/k_en0('elpv',n);
5641  mu('elcsp',tfirst,n)$(k_en0('elcsp',n) gt eps) = sum(solar_class, solar_mu(solar_class,'elcsp')*max(1e-8,k_en0_csp(solar_class,tfirst,n)))/k_en0('elcsp',n);
5642   
5643  *-------------------------------------------------------------------------------
5645   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
5647  *-------------------------------------------------------------------------------
5648  * Technology development scenarios
5649  *-------------------------------------------------------------------------------
5650   
5652   
5653  if(tech_scen('renewables') = low,
5654   
5655  rd_coef(jreal_wind,'lbd') = 2/3 * rd_coef(jreal_wind,'lbd');
5656  rd_coef(jreal_solar,'lbd') = 2/3 * rd_coef(jreal_solar,'lbd');
5657   
5658  floor_cost(jel_wind) = 3/2 * floor_cost(jel_wind);
5659  floor_cost(jel_solar) = 3/2 * floor_cost(jel_solar);
5660  flex_coeff(jel_wind) = 3/2 * flex_coeff(jel_wind);
5661  flex_coeff(jel_solar) = 3/2 * flex_coeff(jel_solar);
5662   
5663  );
5664   
5665  if(tech_scen('renewables') = high,
5666   
5667  rd_coef(jreal_wind,'lbd') = 3/2 * rd_coef(jreal_wind,'lbd');
5668  rd_coef(jreal_solar,'lbd') = 3/2 * rd_coef(jreal_solar,'lbd');
5669   
5670  floor_cost(jel_wind) = 1 * floor_cost(jel_wind);
5671  floor_cost(jel_solar) = 1 * floor_cost(jel_solar);
5672  flex_coeff(jel_wind) = 1/2 * flex_coeff(jel_wind);
5673  flex_coeff(jel_solar) = 1/2 * flex_coeff(jel_solar);
5674   
5675  );
5676   
5677  if(tech_scen('nuclear') = low,
5678  cwaste_reg('rho',n) = 2.2;
5679  );
5680   
5681  if(tech_scen('nuclear') = high_oecd,
5682  cwaste_reg('rho',oecd) = 1.6;
5683  );
5684   
5685  if(tech_scen('nuclear') = high_non_oecd,
5686  cwaste_reg('rho',non_oecd) = 1.6;
5687  );
5688   
5689  if(tech_scen('CCS') = low,
5690  mcost_inv0(jlccs,n) = mcost_inv0(jlccs,n) * ccs_inv_var(jlccs,'high');
5691  ccs_stor_cost(ccs_stor,n) = ccs_stor_cost_estim(ccs_stor,'high');
5692  );
5693   
5694  if(tech_scen('CCS') = high,
5695  mcost_inv0(jlccs,n) = mcost_inv0(jlccs,n)*ccs_inv_var(jlccs,'low');
5696  ccs_stor_cost(ccs_stor,n)=ccs_stor_cost_estim(ccs_stor,'low');
5697  );
5698   
5699  if(tech_scen('CCS') = high_non_oecd,
5700  mcost_inv0(jlccs,non_oecd) = mcost_inv0(jlccs,non_oecd)*ccs_inv_var(jlccs,'low');
5701  ccs_stor_cost(ccs_stor,non_oecd)=ccs_stor_cost_estim(ccs_stor,'low');
5702  );
5703   
5705   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
5707  *-------------------------------------------------------------------------------
5708  * Oil Extraction
5709  * Options:
5710  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
5711  *-------------------------------------------------------------------------------
5712   
5714   
5715  * Set correct grade level
5716  parameter oil_cost(oilg,n);
5717  oil_cost(oilg,n)$(valid_oilg(oilg)) = (sum(oilgg$map_oilgrade(oilg,oilgg), oil_cost_grade(oilgg,n) * oil_esp_capacity(oilgg,'M',n))) /
5718                                        (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n)));
5719   
5720  parameter oil_cum(oilg,n);
5721  oil_cum(oilg,n)$(valid_oilg(oilg)) = (sum(oilgg$map_oilgrade(oilg,oilgg), oil_cum_grade(oilgg) * oil_esp_capacity(oilgg,'M',n))) /
5722                                       (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n)));
5723   
5724  parameter oil_emi_st(oilg,n);
5725  oil_emi_st(oilg,n) = emi_st('oil') * (sum(oilgg$map_oilgrade(oilg,oilgg), oil_emi_st_grade(oilgg) * oil_reserve(oilgg,'M',n))) /
5726                                       (sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)));
5727   
5728  * Calibrate oil_capacity to q_out_valid_weo in 2005
5729  oil_capacity(oilg,n) = oil_capacity(oilg,n) * (smax(tt$(year(tt) eq 2005), q_out_valid_weo('oil',tt,n))) /
5730                          sum(oilgg, oil_capacity(oilgg,n));
5731   
5732  parameter delta_oilg / 0.1 /;
5733   
5734  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
5737  *-------------------------------------------------------------------------------
5738  * Uranium Resources
5739  *-------------------------------------------------------------------------------
5740   
5742   
5743  parameter
5744      resgr(f,t) 'Growth rate of ultimately recoverable resources amount'
5745      res(f,t)   'Ultimately Recoverable Resources [TWh]'
5746  ;
5747  resgr('uranium',t) = 0.006 + 0.024 / (1 + exp(-(year(t) - 2075) / 20));
5748  res('uranium',tfirst) = cexs('uranium','res0');
5749  loop((tnofirst(t),tm1)$pre(tm1,t),
5750      res('uranium',t) = res('uranium',tm1)*(1+resgr('uranium',tm1))**tlen(tm1);
5751  );
5752   
5753  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
5756  *-------------------------------------------------------------------------------
5757  * Gas Resources
5758  *-------------------------------------------------------------------------------
5759   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
5762  *-------------------------------------------------------------------------------
5763  * Coal Resources
5764  *-------------------------------------------------------------------------------
5765   
5767   
5768  * Raise coal demand for SSP3&5, otherwise too low
5771   
5772  *-------------------------------------------------------------------------------
5774   
5775   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
5777  *-------------------------------------------------------------------------------
5778  * Climate
5779  *
5780  * Represents the climate
5781  * - based on the DICE model equations
5782  * - Radiative forcing for non CO2 ghgs
5783  * - parameters calibrated to reproduce MAGICC6.4 default response
5784  *
5785  *  Options:
5786  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
5787  * - $setglobal cooperate_on_climate {'YES','NO'}
5788  * - 'YES'(default): Countries within a coalition act in cooperation
5789  *   'NO': Countries within a coalition act individually
5790  *
5791  *-------------------------------------------------------------------------------
5792   
5794   
5795  wemi2qemi(ghg)   = emi_gwp(ghg) / c2co2;
5796  wemi2qemi('co2') = 1;
5797   
5798  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
5801  *-------------------------------------------------------------------------------
5802  * Long-run Damages from Climate Change
5803  * - Economic impacts
5804  * - Adaptation
5805  *-------------------------------------------------------------------------------
5806   
5808   
5809  delta('prada') = 0.1;
5810  delta('rada') = 1;
5811  delta('scap') = 0.03;
5812   
5813  *-------------------------------------------------------------------------------
5815   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
5817  *-------------------------------------------------------------------------------
5818  * Light-duty Vehicles for Personal Transport
5819  *-------------------------------------------------------------------------------
5820   
5822   
5823  *** new code
5824  dec_inv(t,n) = 1;
5825   
5826  battery_cost_new(t,n) = battery_cost(t);
5827  battery_cost_new(t,n)$(sameas (n,'mexico')) = increase_price_rare_material(t)*battery_cost(t);
5828  ***
5829   
5830  krd0('battery',n) = sum(nn,krd0('en',nn))*0.0141*0.076923077;
5831   
5832  * 1) Calculation of the number of vehicles
5833   
5834  gdppc(t,n) = (ykali(t,n)*1e6)/l(t,n);
5835   
5836  ldv_pthc(t,n) = ldv_pthc_2005(n);
5837  * Now replaced by passenger car data per country and population (in vehicles per 1000 capita)
5838  ldv_pthc(t,n)$(year(t) le 2015) = k_veh_passengercars(n,t) / l(t,n);
5839   
5840  loop((tm1,t,n)$(pre(tm1,t) and year(t) gt 2015),
5841      if(gdppc(t,n) le 5000,
5842          ldv_pthc(t,n) = ldv_pthc(tm1,n)*(1+(gdppc(t,n)/gdppc(tm1,n)-1)*oge('c1'))+ai('c1');
5843      else
5844          ldv_pthc(t,n)$(ldv_pthc(tm1,n) le 300) = ldv_pthc(tm1,n)*(1+(gdppc(t,n)/gdppc(tm1,n)-1)*oge('c2'))+ai('c2');
5845          ldv_pthc(t,n)$(ldv_pthc(tm1,n) gt 300 and ldv_pthc(tm1,n) le 500) = ldv_pthc(tm1,n)*(1+(gdppc(t,n)/gdppc(tm1,n)-1)*oge('c3'))+ai('c3');
5846          ldv_pthc(t,n)$(ldv_pthc(tm1,n) gt 500 and ldv_pthc(tm1,n) le 600) = ldv_pthc(tm1,n)*(1+(gdppc(t,n)/gdppc(tm1,n)-1)*oge('c4'))+ai('c4');
5847          ldv_pthc(t,n)$(ldv_pthc(tm1,n) gt 600) = ldv_pthc(tm1,n)*(1+(gdppc(t,n)/gdppc(tm1,n)-1)*oge('c5'))+ai('c5');
5848      );
5849  );
5850   
5851  *** newcode CARSHARING
5852  * da trasformare in variabile per poter inserire unvestimenti
5853  carshare(t,n) = 1;
5854  ldv_pthc(t,n) = ldv_pthc(t,n) * coeff_ldv(t,n) * carshare(t,n);
5855   
5856  ldv_total(t,n) = ldv_pthc(t,n)*l(t,n)/1e3;
5857  ***
5858   
5859  * 2) Calculation of demand and consumption
5860   
5861  km_demand_ldv(t,n) = (travel_intensity(t,n)*(ykali(t,n)*1e12))/1e6;
5862  service_demand_ldv(t,n) = load_factor_ldv(t,n) * km_demand_ldv(t,n);
5863  km_demand_pv_ldv(t,n) = km_demand_ldv(t,n)/ldv_total(t,n);
5864  km_demand_pv_deviation_ldv(t,n) = km_demand_pv_ldv(t,n)/km_demand_pv_ldv(tfirst,n);
5865   
5866  fuel_cons(jveh,tfirst,n) = fuel_cons_2005(jveh,n);
5867  fuel_cons(jveh,t,n)$(year(t) ge 2010) = fuel_cons_2005(jveh,n) * km_demand_pv_deviation_ldv(t,n) * (max((tperiod(t)-1),1.4)**fueleff_rate(t,n));
5868  elec_plg(t,n) = elec_plg_2005(n) * km_demand_pv_deviation_ldv(t,n) * (tperiod(t)**fueleff_rate(t,n));
5869  * The expression max((tperiod(t)-1),1.4) is needed to recalibrate the 2010 data.
5870   
5871   
5872  * 3) Other parameters
5873   
5874  oem(jveh,t,n) = oem_veh(jveh,n)/1e12;
5875   
5876  lifetime(jveh,n) = 22; # lifetime of 22 years
5877  delta_en(jveh,t,n) = 1 - exp( 1 / ( - lifetime(jveh,n) + (0.01/2) * lifetime(jveh,n)**2) );
5878   
5879  csi('oil',jfedveh,t,n) = 1;
5880  csi('trbiofuel',jfedveh,t,n) = 1;
5881  csi('advbiofuel',jfedveh,t,n) = 1;
5882   
5883  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
5886  *-------------------------------------------------------------------------------
5887  * Road Freight Transport
5888  *-------------------------------------------------------------------------------
5890   
5891  stfr_total(tfirst,n) = stfr_total_2005(n);
5892   
5893  loop((t,tm1)$(tnofirst(t) and pre(tm1,t)),
5894    stfr_total(t,n) = stfr_total(tm1,n)*(1+stfr_factor('ssp2')*((gdppc(t,n)/gdppc(tm1,n))-1));
5895  );
5896   
5897  km_demand_pv_stfr(t,n) = km_demand_pv_stfr_2005(n);
5898  load_factor_stfr(t,n) = load_factor_stfr_2005(n);
5899  km_demand_stfr(t,n) = stfr_total(t,n) * km_demand_pv_stfr(t,n);
5900  service_demand_stfr(t,n) = km_demand_stfr(t,n) * load_factor_stfr(t,n);
5901   
5902  fuel_cons_stfr(jfrt,tfirst,n) = fuel_cons_stfr_2005(jfrt,n);
5903  fuel_cons_stfr(jfrt,t,n)$(year(t) ge 2010) = fuel_cons_stfr_2005(jfrt,n)*(max((((year(t)-2000)/5)-1),1.4)**fueleff_rate_stfr(t,n));
5904  elec_plg_stfr(t,n) = elec_plghbd_stfr_2005(n)*(((year(t)-2000)/5)**fueleff_rate_stfr(t,n));
5905   
5906  oem(jfrt,t,n) = oem_frt(n)/1e12;
5907   
5908  lifetime(jfrt,n) = 22; # lifetime of 22 years
5909  delta_en(jfrt,t,n) = 1 - exp( 1 / ( - lifetime(jfrt,n) + (0.01/2) * lifetime(jfrt,n)**2) );
5910   
5911  csi('oil',jfedfrt,t,n) = 1;
5912  csi('trbiofuel',jfedfrt,t,n) = 1;
5913  csi('advbiofuel',jfedfrt,t,n) = 1;
5914   
5915  *-------------------------------------------------------------------------------
5917   
5918   
5919   
5920   
5921   
5922   
5923  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
5925  *-------------------------------------------------------------------------------
5926  * Traditional Biomass
5927  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
5928  *  - require post_process to be launch before
5929  *-------------------------------------------------------------------------------
5930   
5932   
5933  * Guarantee consistency with static calibration
5934  neltrbiomass0(tfirst,n)$(q0('neltrbiomass',n) gt 1e-2) = q0('neltrbiomass',n);
5935   
5936  *-------------------------------------------------------------------------------
5938   
5939  * Optional modules
5940   
5941  * Policy modules
5942   
5943  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
5947  *-------------------------------------------------------------------------------
5948  * Call modules by order
5949  *-------------------------------------------------------------------------------
5953   
5954  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
5956  *-------------------------------------------------------------------------------
5957  * Algorithm
5958  *-------------------------------------------------------------------------------
5959   
5961   
5962  variable OBJADMM 'Objective function with ADMM';
5963   
5964  *-------------------------------------------------------------------------------
5966   
5967  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
5969  *-------------------------------------------------------------------------------
5970  * Time
5971  * - Temporal structure
5972  * - Fixed time periods
5973  * - States of the world
5974  *-------------------------------------------------------------------------------
5975   
5977   
5978  variable PROB(t) 'Probability of all states of the world';
5979   
5980  PROB.fx(t) = 1;
5981   
5982  *-------------------------------------------------------------------------------
5984   
5985  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
5987  *-------------------------------------------------------------------------------
5988  * Geographic dimension and mapping with countries
5989  *-------------------------------------------------------------------------------
5990   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
5993  *-------------------------------------------------------------------------------
5994  * Non-Cooperative Setup
5995  *
5996  * Each region is defined as an individual coalition.
5997  *
5998  *-------------------------------------------------------------------------------
5999   
6001   
6002  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
6004  *-------------------------------------------------------------------------------
6005  * Welfare
6006  *-------------------------------------------------------------------------------
6007   
6009   
6010  variable UTILITY 'Social welfare';
6011   
6012  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
6015  *-------------------------------------------------------------------------------
6016  * Economy
6017  * - Production and Consumption definition
6018  * - Top-level of the production function
6019  * Options:
6020  * --original_ssp=1 : original SSP population and GDP data
6021  *-------------------------------------------------------------------------------
6022   
6024   
6025  positive variable K(g,t,n) 'Capital for production [T$]';
6026    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K; if(execerror gt prevexecerrors, K.l(g,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); K.lo(g,t,n) = 1e-6; K.up(g,t,n) = 400; K.l(g,t,n)$(K.l(g,t,n)<1e-6) = 1e-6; K.l(g,t,n)$(K.l(g,t,n)>400) = 400;;
6027  K.fx('fg',tfirst,n) = q0('k',n);
6028   
6029  positive variable Q(iq,t,n) 'Upper CES tree nodes [T$]';
6030    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q; if(execerror gt prevexecerrors, Q.l(iq,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); Q.lo(iq,t,n) = 1e-8; Q.up(iq,t,n) = 1e5; Q.l(iq,t,n)$(Q.l(iq,t,n)<1e-8) = 1e-8; Q.l(iq,t,n)$(Q.l(iq,t,n)>1e5) = 1e5;;
6031  Q.l('eifen',t,n) = Q.l('fen',t,n);
6032  * final good consumption lower bounded to 5% of the 2005 GDP to
6033  * povide the solver for a realistic trust interval
6034  * (Relax it if lower consumption levels are needed).
6035  Q.lo('cc',t,n) = 0.01 * ykali(tfirst,n);
6036  Q.l('kl',t,n) = NA; # not determined by the model
6037   
6038  positive variable I(g,t,n) 'Investments in goods [T$]';
6039    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I; if(execerror gt prevexecerrors, I.l(g,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); I.lo(g,t,n) = 1e-8; I.up(g,t,n) = 100; I.l(g,t,n)$(I.l(g,t,n)<1e-8) = 1e-8; I.l(g,t,n)$(I.l(g,t,n)>100) = 100;;
6040   
6041  variable COST_Y(ccy,t,n) 'Additionnal costs from modules [T$]';
6042    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', COST_Y; if(execerror gt prevexecerrors, COST_Y.l(ccy,t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); COST_Y.lo(ccy,t,n) = 0; COST_Y.up(ccy,t,n) = +1e6; COST_Y.l(ccy,t,n)$(COST_Y.l(ccy,t,n)<0) = 0; COST_Y.l(ccy,t,n)$(COST_Y.l(ccy,t,n)>+1e6) = +1e6;;
6043   
6044  * BAU data
6045  variable BAU_Q(iq,t,n);
6046  execute_load 'data_witch17/results_ssp2_calib', BAU_Q=Q;
6047   
6048  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
6051  *-------------------------------------------------------------------------------
6052  * Energy sector
6053  *-------------------------------------------------------------------------------
6054   
6056   
6057  variable COST_FUEL(fuel,t,n) 'Energy sources costs [T$]';
6058    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', COST_FUEL; if(execerror gt prevexecerrors, COST_FUEL.l(fuel,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); COST_FUEL.lo(fuel,t,n) = -inf; COST_FUEL.up(fuel,t,n) = +inf; COST_FUEL.l(fuel,t,n)$(COST_FUEL.l(fuel,t,n)<-inf) = -inf; COST_FUEL.l(fuel,t,n)$(COST_FUEL.l(fuel,t,n)>+inf) = +inf;;
6059   
6060  variable COST_EN(j,t,n) 'Energy costs [T$]';
6061    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', COST_EN; if(execerror gt prevexecerrors, COST_EN.l(j,t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); COST_EN.lo(j,t,n) = -inf; COST_EN.up(j,t,n) = +inf; COST_EN.l(j,t,n)$(COST_EN.l(j,t,n)<-inf) = -inf; COST_EN.l(j,t,n)$(COST_EN.l(j,t,n)>+inf) = +inf;;
6062   
6063  * Mean costs
6064  positive variable MCOST_INV(jreal,t,n) 'Average cost of investment [T$/TW] ([T$/million vehicles] for LDVs, [$/kWh] for batteries)';
6065    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', MCOST_INV; if(execerror gt prevexecerrors, MCOST_INV.l(jreal,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); MCOST_INV.lo(jreal,t,n) = 1e-8; MCOST_INV.up(jreal,t,n) = +inf; MCOST_INV.l(jreal,t,n)$(MCOST_INV.l(jreal,t,n)<1e-8) = 1e-8; MCOST_INV.l(jreal,t,n)$(MCOST_INV.l(jreal,t,n)>+inf) = +inf;;
6066  MCOST_INV.fx(jreal,t,n)$(not jmcost_inv(jreal)) = mcost_inv0(jreal,n);
6067   
6068  positive variable MCOST_FUEL(fuel,t,n) 'Average cost of energy sources [T$/TWh]';
6069    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', MCOST_FUEL; if(execerror gt prevexecerrors, MCOST_FUEL.l(fuel,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); MCOST_FUEL.lo(fuel,t,n) = 1e-12; MCOST_FUEL.up(fuel,t,n) = +inf; MCOST_FUEL.l(fuel,t,n)$(MCOST_FUEL.l(fuel,t,n)<1e-12) = 1e-12; MCOST_FUEL.l(fuel,t,n)$(MCOST_FUEL.l(fuel,t,n)>+inf) = +inf;;
6070   
6071  * Investments
6072  positive variable I_EN(jinv,t,n) 'Investments in Energy sectors [T$]';
6073    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_EN; if(execerror gt prevexecerrors, I_EN.l(jinv,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); I_EN.lo(jinv,t,n) = 1e-7; I_EN.up(jinv,t,n) = +inf; I_EN.l(jinv,t,n)$(I_EN.l(jinv,t,n)<1e-7) = 1e-7; I_EN.l(jinv,t,n)$(I_EN.l(jinv,t,n)>+inf) = +inf;;
6074  I_EN.scale(jinv_to_scale,t,n) = 1e-3;
6075   
6076  I_EN.up('elpc_new',t,n)$(year(t) lt 2015)  = I_EN.lo('elpc_new',t,n);
6077  I_EN.up('elpc_late',t,n)$(year(t) ge 2015) = I_EN.lo('elpc_late',t,n);
6078   
6079  positive variable Q_IN(fuel,jfed,t,n) 'Imported/consumed PES [TWh]';
6080    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_IN; if(execerror gt prevexecerrors, Q_IN.l(fuel,jfed,t,n)$(csi(fuel,jfed,t,n)) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); Q_IN.lo(fuel,jfed,t,n)$(csi(fuel,jfed,t,n)) = 1e-12; Q_IN.up(fuel,jfed,t,n)$(csi(fuel,jfed,t,n)) = +inf; Q_IN.l(fuel,jfed,t,n)$((csi(fuel,jfed,t,n)) and (Q_IN.l(fuel,jfed,t,n)<1e-12)) = 1e-12; Q_IN.l(fuel,jfed,t,n)$((csi(fuel,jfed,t,n)) and (Q_IN.l(fuel,jfed,t,n)>+inf)) = +inf;;
6081  Q_IN.l(fuel,jfed,t,n)$(csi(fuel,jfed,t,n) eq 0) = 0;
6082  Q_IN.lo(fuel,jfed,t,n)$(csi(fuel,jfed,t,n) eq 0) = 0;
6083  Q_IN.up(fuel,jfed,t,n)$(csi(fuel,jfed,t,n) eq 0) = 0;
6084   
6085  positive variable Q_FUEL(fuel,t,n) 'Total amount of Energy Sources consumed [TWh]';
6086    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_FUEL; if(execerror gt prevexecerrors, Q_FUEL.l(fuel,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); Q_FUEL.lo(fuel,t,n) = 0; Q_FUEL.up(fuel,t,n) = +inf; Q_FUEL.l(fuel,t,n)$(Q_FUEL.l(fuel,t,n)<0) = 0; Q_FUEL.l(fuel,t,n)$(Q_FUEL.l(fuel,t,n)>+inf) = +inf;;
6087   
6088  positive variable Q_EN(j,t,n) 'Energy supply/generation/demand for different sectors [TWh]';
6089    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EN; if(execerror gt prevexecerrors, Q_EN.l(j,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); Q_EN.lo(j,t,n) = 1e-8; Q_EN.up(j,t,n) = +inf; Q_EN.l(j,t,n)$(Q_EN.l(j,t,n)<1e-8) = 1e-8; Q_EN.l(j,t,n)$(Q_EN.l(j,t,n)>+inf) = +inf;;
6090  Q_EN.l(j,t,n)$(Q_EN.l(j,t,n) eq 0) = 1e-8;
6091  Q_EN.lo('en',t,n) = 2e-4;
6092  Q_EN.lo('el',t,n) = 1e-4;
6093  Q_EN.lo('nel',t,n) = 1e-4;
6094  Q_EN.scale(j_to_scale,t,n) = 1e-3;
6095   
6096  positive variable K_EN(jreal,t,n) 'Capital in energy technologies [TW] ([million vehicles] for light duty vehicles)';
6097   prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_EN; if(execerror gt prevexecerrors, K_EN.l(jreal,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1);
6098  K_EN.lo(jel,t,n) = 1e-8;
6099  K_EN.up(jel,t,n) = 100;
6100  K_EN.fx(jel,tfirst,n) = k_en0(jel,n);
6101  K_EN.scale(jreal_to_scale,t,n) = 1e-3;
6102   
6103  * Fix old capital with depreciation and ensure that levels are not higher than statistics
6104  loop((tnofirst(t),tm1)$pre(tm1,t),
6105      K_EN.fx(jold,t,n) = K_EN.l(jold,tm1,n) * (1-delta_en(jold,t,n))**tlen(tm1);
6106      K_EN.fx(jold,t,n)$(year(t) le 2015 and sum(jcalib$map_calib(jcalib,jold),k_en_valid_old(jcalib,t,n)) gt 0) = min(K_EN.up(jold,t,n), sum(jcalib$map_calib(jcalib,jold), k_en_valid_old(jcalib,t,n)));
6107      Q_EN.up(jold,t,n) = mu(jold,t,n) * K_EN.up(jold,t,n);
6108      Q_EN.fx(jold,t,n)$( Q_EN.up(jold,t,n) - Q_EN.lo(jold,t,n) le 1e-7 ) = Q_EN.up(jold,t,n);
6109  );
6110   
6111  * Fix K_EN in 2010 given existing old
6112  loop((jreal,jcalib)$(map_calib(jcalib,jreal) and (not sameas(jreal,jcalib)) and (not sum(jold$sameas(jold,jreal),1))),
6113      K_EN.fx(jreal,t,n)$(year(t) eq 2010) = max(k_en_valid_tot(jcalib,t,n) - k_en_valid_old(jcalib,t,n), 1e-6);
6114  );
6115   
6116  * Fix manually K_EN in 2015 given existing old
6117  K_EN.fx('elpc_late',t,n)$(year(t) eq 2015) = max(k_en_valid_tot('elpc',t,n) - K_EN.lo('elpc_old',t,n), 1e-6);
6118  K_EN.fx('elgastr_new',t,n)$(year(t) eq 2015) = max(k_en_valid_tot('elgastr',t,n) - K_EN.lo('elgastr_old',t,n), 1e-6);
6119  K_EN.fx('elnuclear_new',t,n)$(year(t) eq 2015) = max(k_en_valid_tot('elnuclear',t,n) - K_EN.lo('elnuclear_old',t,n), 1e-6);
6120  K_EN.fx('eloil_new',t,n)$(year(t) eq 2015) = max(k_en_valid_tot('eloil',t,n) - K_EN.l('eloil_old',t,n), 1e-6);
6121  K_EN.fx('elhydro_new',t,n)$(year(t) eq 2015) = max(k_en_valid_tot('elhydro',t,n) - K_EN.l('elhydro_old',t,n), 1e-6);
6122   
6123  * Fix manually K_EN in 2020 for coal power plant and nuclear
6124  K_EN.lo('elpc_late',t,n)$(year(t) eq 2020) = (smax(tt$(year(tt) eq 2015), K_EN.lo('elpc_late',tt,n) * (1-delta_en('elpc_late',tt,n))**tlen(tt)));
6125  K_EN.lo('elpc_new',t,n)$(year(t) eq 2020) = max(k_en_valid_gcpt('elpc',t,n) - K_EN.lo('elpc_old',t,n) - K_EN.lo('elpc_late',t,n), 1e-6);
6126  K_EN.fx('elnuclear_new',t,n)$(year(t) eq 2020) = max(k_en_valid_tot('elnuclear',t,n) - K_EN.lo('elnuclear_old',t,n), 1e-6);
6127   
6128  * No investment in new oil power plant in noeloil region
6129  loop((t,tp1)$(pre(t,tp1) and (year(t) ge 2015) and (not tfix(tp1))),
6130  I_EN.fx('eloil_new',t,n)$noeloil(n) = I_EN.lo('eloil_new',t,n);
6131  );
6132   
6133  positive variable QEL_OUT(el_out,ices_el,t,n) 'Consumption of electricity outside production function [TWh]';
6134    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', QEL_OUT; if(execerror gt prevexecerrors, QEL_OUT.l(el_out,ices_el,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); QEL_OUT.lo(el_out,ices_el,t,n) = 0; QEL_OUT.up(el_out,ices_el,t,n) = 1e5; QEL_OUT.l(el_out,ices_el,t,n)$(QEL_OUT.l(el_out,ices_el,t,n)<0) = 0; QEL_OUT.l(el_out,ices_el,t,n)$(QEL_OUT.l(el_out,ices_el,t,n)>1e5) = 1e5;;
6135   
6136  positive variable QNEL_OUT(j,nel_out,t,n) 'Consumption of non electric energy outside production function [TWh]';
6137    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', QNEL_OUT; if(execerror gt prevexecerrors, QNEL_OUT.l(j,nel_out,t,n) = 1e-10; execerror = prevexecerrors; last_load_went_wrong=1); QNEL_OUT.lo(j,nel_out,t,n) = 0; QNEL_OUT.up(j,nel_out,t,n) = 1e5; QNEL_OUT.l(j,nel_out,t,n)$(QNEL_OUT.l(j,nel_out,t,n)<0) = 0; QNEL_OUT.l(j,nel_out,t,n)$(QNEL_OUT.l(j,nel_out,t,n)>1e5) = 1e5;;
6138   
6139  * Nodes with a Q to be scaled by 1e3 during optimization
6140  Q.scale('ces_elintren',t,n) = 1e-3;
6141   
6142  * Fuel price
6143  Positive variable FPRICE(fuel,t) 'World fuel prices [T$/TWh]';
6144    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', FPRICE; if(execerror gt prevexecerrors, FPRICE.l(fuel,t) = 0; execerror = prevexecerrors; last_load_went_wrong=1); FPRICE.lo(fuel,t) = 0; FPRICE.up(fuel,t) = +Inf; FPRICE.l(fuel,t)$(FPRICE.l(fuel,t)<0) = 0; FPRICE.l(fuel,t)$(FPRICE.l(fuel,t)>+Inf) = +Inf;;
6145   
6146  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
6149  *-------------------------------------------------------------------------------
6150  * Carbon Emissions
6151  * - Total CO2 emissions and CO2 Fossil fuel and Industry
6152  * - CO2 emission costs
6153  * - GHG permit market
6154  *-------------------------------------------------------------------------------
6155   
6157   
6158  variable Q_EMI(e,t,n) 'Emissions-related quantities [GtCe]';
6159    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EMI; if(execerror gt prevexecerrors, Q_EMI.l(e,t,n) = 1; execerror = prevexecerrors; last_load_went_wrong=1); Q_EMI.lo(e,t,n) = -inf; Q_EMI.up(e,t,n) = +inf; Q_EMI.l(e,t,n)$(Q_EMI.l(e,t,n)<-inf) = -inf; Q_EMI.l(e,t,n)$(Q_EMI.l(e,t,n)>+inf) = +inf;;
6160  Q_EMI.lo('co2',t,n) = -20;
6161  Q_EMI.lo('co2ffi',t,n) = -20;
6162  Q_EMI.up('co2ffi',t,n) = 100;
6163  Q_EMI.lo(c_mkt,t,n) = -15;
6164  Q_EMI.up(c_mkt,t,n) = 15;
6165   
6166  variable COST_EMI(e,t,n) 'Emissions-related costs [T$]';
6167    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', COST_EMI; if(execerror gt prevexecerrors, COST_EMI.l(cce,t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); COST_EMI.lo(cce,t,n) = -inf; COST_EMI.up(cce,t,n) = +inf; COST_EMI.l(cce,t,n)$(COST_EMI.l(cce,t,n)<-inf) = -inf; COST_EMI.l(cce,t,n)$(COST_EMI.l(cce,t,n)>+inf) = +inf;;
6168   
6169  * BAU data
6170  variable BAU_Q_EMI(e,t,n) 'Baseline emission [GtCe]';
6171  execute_load 'data_witch17/results_ssp2_calib', BAU_Q_EMI=Q_EMI;
6172   
6173  * Carbon prices
6174  Positive variable CPRICE(c_mkt,t) 'Carbon price of permits [T$/GtCeq]';
6175    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', CPRICE; if(execerror gt prevexecerrors, CPRICE.l(c_mkt,t) = 0; execerror = prevexecerrors; last_load_went_wrong=1); CPRICE.lo(c_mkt,t) = 0; CPRICE.up(c_mkt,t) = +Inf; CPRICE.l(c_mkt,t)$(CPRICE.l(c_mkt,t)<0) = 0; CPRICE.l(c_mkt,t)$(CPRICE.l(c_mkt,t)>+Inf) = +Inf;;
6176   
6177  * Emission Abatment
6178  variable Q_EMI_ABAT(e,t,n) 'GHG emission abatement [GtCe]';
6179    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EMI_ABAT; if(execerror gt prevexecerrors, Q_EMI_ABAT.l(emac,t,n) = 1e-3; execerror = prevexecerrors; last_load_went_wrong=1); Q_EMI_ABAT.lo(emac,t,n) = 0; Q_EMI_ABAT.up(emac,t,n) = 15; Q_EMI_ABAT.l(emac,t,n)$(Q_EMI_ABAT.l(emac,t,n)<0) = 0; Q_EMI_ABAT.l(emac,t,n)$(Q_EMI_ABAT.l(emac,t,n)>15) = 15;;
6180  Q_EMI_ABAT.fx(emac,t,n)$(year(t) le 2015) = 0;
6181  Q_EMI_ABAT.fx(e,t,n)$(not emac(e)) = 0;
6182   
6183  parameter emi_bio_harv(t) 'Emissions from harvest and collection of biomass';
6184   
6185  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
6188  *-------------------------------------------------------------------------------
6189  * Research & Development
6190  * Options:
6191  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
6192  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
6193  *-------------------------------------------------------------------------------
6194   
6196   
6197  positive variable I_RD(rd,t,n) 'Investments in R&D [T$]';
6198    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_RD; if(execerror gt prevexecerrors, I_RD.l(rd,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); I_RD.lo(rd,t,n) = 1e-10; I_RD.up(rd,t,n) = +inf; I_RD.l(rd,t,n)$(I_RD.l(rd,t,n)<1e-10) = 1e-10; I_RD.l(rd,t,n)$(I_RD.l(rd,t,n)>+inf) = +inf;;
6199  I_RD.scale(rd,t,n) = 1e-3;
6200   
6201  positive variable K_RD(rd,t,n) 'Capital in R&D [T$]';
6202    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_RD; if(execerror gt prevexecerrors, K_RD.l(rd,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); K_RD.lo(rd,t,n) = 1e-7; K_RD.up(rd,t,n) = +inf; K_RD.l(rd,t,n)$(K_RD.l(rd,t,n)<1e-7) = 1e-7; K_RD.l(rd,t,n)$(K_RD.l(rd,t,n)>+inf) = +inf;;
6203  K_RD.l(rd,t,n)$(K_RD.l(rd,t,n) eq 0) = K_RD.lo(rd,t,n);
6204  K_RD.fx(rd,tfirst,n) = max(krd0(rd,n),K_RD.lo(rd,tfirst,n));
6205  K_RD.scale(rd,t,n) = 1e-3;
6206   
6207  positive variable SPILL(rd,t,n) 'Spill ratio * K_RD(leaders)';
6208    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', SPILL; if(execerror gt prevexecerrors, SPILL.l(rd,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); SPILL.lo(rd,t,n) = 1e-8; SPILL.up(rd,t,n) = +inf; SPILL.l(rd,t,n)$(SPILL.l(rd,t,n)<1e-8) = 1e-8; SPILL.l(rd,t,n)$(SPILL.l(rd,t,n)>+inf) = +inf;;
6209   
6210  krd_lead(rd,t) = sum(n$leadrd(rd,n), K_RD.l(rd,t,n));
6211  krd_oth_lead_krd(rd,t,n)$leadrd(rd,n) = krd_lead(rd,t) - K_RD.l(rd,t,n);
6212   
6213  parameter wlspill_k_rd(rd,t,n);
6214  wlspill_k_rd(rd,tfirst,n) = 0;
6215   
6216  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
6219  *-------------------------------------------------------------------------------
6220  * Default Climate Policy Implementation
6221  *
6222  * Options:
6223  *    --policy={bau (default),ctax}
6224  *        Implement a climate policy setting
6225  *  [ --scen= ]
6226  *        Policy variant.
6227  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
6228  *          * XXX for a fixed percentage/yr (e.g. 5) growth
6229  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
6230  *  [ --ctax_year=2020 ]
6231  *        Starting year of the carbon tax
6232  *  [ --ctax_initial=30 ]
6233  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
6234  *
6235  *-------------------------------------------------------------------------------
6237   
6238  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
6240  *-------------------------------------------------------------------------------
6241  * Energy efficiency
6242  *-------------------------------------------------------------------------------
6243   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
6246  *-------------------------------------------------------------------------------
6247  * Hydro Power
6248  *-------------------------------------------------------------------------------
6249   
6251   
6252  I_EN.fx('elhydro_new',t,n)$(year(t) ge 2015) = k_en0('elhydro_old',n) *
6253                               k_en_hydro(n) *
6254                               mcost_inv0('elhydro_new',n) *
6255                               0.12 * (1-(1-delta_en0('elhydro_new',n))**5) /
6256                               (1-(1-0.12)**5) *
6257                               (1-(1-0.12)**(5 * 10)) /
6258                               (1-(1-delta_en0('elhydro_new',n))**(5 * 10))
6259  ;
6260   
6261  * Scaling for the solver
6262  K_EN.scale('elhydro_old',t,n) = 1e-3;
6263  K_EN.scale('elhydro_new',t,n) = 1e-3;
6264   
6265  Q.scale('ces_elhydro',t,n) = 1e-3;
6266   
6267  Q_EN.scale('elhydro',t,n) = 1e-3;
6268  Q_EN.scale('elhydro_new',t,n) = 1e-3;
6269  Q_EN.scale('elhydro_old',t,n) = 1e-3;
6270   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
6273  *-------------------------------------------------------------------------------
6274  * System Integration:
6275  * - Capacity constraint
6276  * - Flexibility constraint
6277  * - Grid Investment
6278  * - Capacity growth constraint
6279  *-------------------------------------------------------------------------------
6280   
6282   
6283  * Flexibility constraint
6284  variable Q_EL_FLEX(t,n) 'Flexible energy generation [TWh]';
6285    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EL_FLEX; if(execerror gt prevexecerrors, Q_EL_FLEX.l(t,n) = sum(jel,Q_EN.l(jel,t,n) * flex_coeff(jel)) + Q_EN.l('el',t,n) * flex_coeff('load'); execerror = prevexecerrors; last_load_went_wrong=1); Q_EL_FLEX.lo(t,n) = 0; Q_EL_FLEX.up(t,n) = Q_EN.up('el',t,n); Q_EL_FLEX.l(t,n)$(Q_EL_FLEX.l(t,n)<0) = 0; Q_EL_FLEX.l(t,n)$(Q_EL_FLEX.l(t,n)>Q_EN.up('el',t,n)) = Q_EN.up('el',t,n);;
6286   
6287  * Grid
6288  variable K_EN_GRID(t,n) 'Capital in electric grid [TW]';
6289    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_EN_GRID; if(execerror gt prevexecerrors, K_EN_GRID.l(t,n) = sum(jel, K_EN.l(jel,t,n)); execerror = prevexecerrors; last_load_went_wrong=1); K_EN_GRID.lo(t,n) = 1e-6; K_EN_GRID.up(t,n) = 1e7; K_EN_GRID.l(t,n)$(K_EN_GRID.l(t,n)<1e-6) = 1e-6; K_EN_GRID.l(t,n)$(K_EN_GRID.l(t,n)>1e7) = 1e7;;
6290   
6291  variable I_EN_GRID(t,n) 'Investment in electric grid [T$]';
6292    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_EN_GRID; if(execerror gt prevexecerrors, I_EN_GRID.l(t,n) = 0.01; execerror = prevexecerrors; last_load_went_wrong=1); I_EN_GRID.lo(t,n) = 1e-7; I_EN_GRID.up(t,n) = 1; I_EN_GRID.l(t,n)$(I_EN_GRID.l(t,n)<1e-7) = 1e-7; I_EN_GRID.l(t,n)$(I_EN_GRID.l(t,n)>1) = 1;;
6293   
6294  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
6297  *-------------------------------------------------------------------------------
6298  * Nuclear power plants
6299  *-------------------------------------------------------------------------------
6300   
6302   
6303  K_EN.scale('elnuclear_new',t,n) = 1e-3;
6304  K_EN.scale('elnuclear_old',t,n) = 1e-3;
6305   
6306  Q_EN.scale('elnuclear',t,n) = 1e-3;
6307  Q_EN.scale('elnuclear_new',t,n) = 1e-3;
6308  Q_EN.scale('elnuclear_old',t,n) = 1e-3;
6309   
6310  I_EN.scale('elnuclear_new',t,n) = 1e-3;
6311   
6312  Q_IN.scale('uranium',jfed,t,n)$csi('uranium',jfed,t,n) = 1e-3;
6313  Q_FUEL.scale('uranium',t,n) = 1/twh2tonU;
6314   
6315  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
6318  *-------------------------------------------------------------------------------
6319  * GHG module
6320  * - CH4 FFI + CH4 waste + CH4 open fires
6321  * - N2O FFI + N2O waste + N2O open fires
6322  *-------------------------------------------------------------------------------
6323   
6325   
6326  Q_EMI.lo(waste,t,n) = 0;
6327  Q_EMI.lo(enrg,t,n) = 0;
6328   
6329  * Historical data emission PRIMAP [GtCe/year]
6330  Q_EMI.fx(waste,t,n)$(year(t) le 2015) = q_emi_valid_ghg(waste,t,n);
6331  Q_EMI.fx(enrg,t,n)$(year(t) le 2015)  = q_emi_valid_ghg(enrg,t,n);
6332  * Historical data emission EDGAR v4.2 [GtCe/year]
6333  Q_EMI.fx(efire,t,n)$(year(t) le 2010) = emi_ghg_hist(efire,t,n);
6334  Q_EMI.fx(efire,t,n)$(year(t) > 2010) = smax(tt$(tperiod(tt) eq 2),emi_ghg_hist(efire,tt,n));
6335   
6336  * Ensure baseline emissions are equal to exogenous assumptions
6337  BAU_Q_EMI.fx(waste,t,n) = ghg_baseline(waste,t,n);
6338   
6339  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
6342  *-------------------------------------------------------------------------------
6343  * F-gases
6344  * - LLF
6345  * - SLF
6346  *-------------------------------------------------------------------------------
6347   
6349   
6350  Q_EMI.fx(fgases,t,n)$(year(t) le 2015) = fgases_baseline(fgases,t,n);
6351  Q_EMI.lo(fgases,t,n)$(year(t) > 2015)  = 0.05 * fgases_baseline(fgases,t,n);
6352   
6353  * Ensure baseline emissions are equal to exogenous assumptions
6354  BAU_Q_EMI.fx(fgases,t,n) = fgases_baseline(fgases,t,n);
6355   
6356  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
6359  *-------------------------------------------------------------------------------
6360  * Landuse [simplified version of the land-use model]
6361  *-------------------------------------------------------------------------------
6362   
6364   
6365  * BIOMASS are fixed for the calibration years
6366  Q_FUEL.fx('wbio',t,n)$(year(t) le 2015) = q_fuel_valid_weo('wbio',t,n);
6367   
6368  * lower bound to avoid infinite mcost
6369  Q_FUEL.lo('wbio',t,n) = 1e-8;
6370   
6371  * Land-use Emissions
6372  Q_EMI.lo('co2lu',t,n) = -20;
6373  Q_EMI.up('co2lu',t,n) = 50;
6374   
6375  COST_EMI.lo('redd',t,n) = 0;
6376   
6377  * Simple land-use model in case of no soft-link with a land-use model
6379  Q_FUEL.up('wbio',t,n) = wbio2_max(n);
6380  Q_EMI.fx('co2lu',t,n) = co2lu_baseline(t,n) * emi_sys('co2lu',t,n);
6381  Q_EMI.fx('n2o_agr',t,n) = n2o_agr_baseline(t,n) * emi_sys('n2o_agr',t,n);
6382  Q_EMI.fx('ch4_agr',t,n) = ch4_agr_baseline(t,n) * emi_sys('ch4_agr',t,n);
6384   
6385  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
6388  *-------------------------------------------------------------------------------
6389  * Bioenergy power plant
6390  *-------------------------------------------------------------------------------
6391   
6393   
6394  * Lower bound for consumption of woody biomass for 'elpb_new', 'elpb_old', 'elbigcc'
6395  Q_IN.lo('wbio',jfed,t,n)$csi('wbio',jfed,t,n) = 1e-8;
6396   
6397  * Fix 'elpb_old' to its maximum production
6398  Q_EN.fx('elpb_old',t,n)$(K_EN.l('elpb_old',t,n) gt 1e-5) = mu('elpb_old',t,n) * K_EN.l('elpb_old',t,n);
6399   
6400  * Fix historical capacity in 2010-2015
6401  K_EN.fx('elpb_new',t,n)$((not tfix(t)) and elpb_capacity(n,t)) = max(elpb_capacity(n,t) - K_EN.l('elpb_old',t,n), 1e-6);
6402   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
6405  *-------------------------------------------------------------------------------
6406  * Traditional Biofuels
6407  * - Requires the precedence of mod_landuse
6408  *-------------------------------------------------------------------------------
6409   
6411   
6412  MCOST_FUEL.fx('trbiofuel',t,n)$(not tfix(t)) = FPRICE.l('trbiofuel',t) + p_mkup('trbiofuel',t,n);
6413   
6414  * Maximum tradional biofuel consumption
6415  * Initial bound
6416  Q_FUEL.up('trbiofuel',t,n) = sum(nn,trbiofuel_max(nn));
6417   
6418  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
6421  *-------------------------------------------------------------------------------
6422  * Advanced biofuel
6423  * - Require the precedence of mod_landuse
6424  *-------------------------------------------------------------------------------
6425   
6427   
6428  Q_FUEL.lo('advbiofuel',t,n)$(not tfix(t)) = q_en0_back;
6429  Q_FUEL.fx('advbiofuel',t,n)$((not tfix(t)) and (year(t) le 2010)) = q_en0_back;
6430   
6431  Q_IN.lo('advbiofuel','nelback',t,n)$(not tfix(t)) = q_en0_back;
6432  Q_IN.fx('advbiofuel','nelback',t,n)$((not tfix(t)) and (year(t) le 2010)) = q_en0_back;
6433   
6434  MCOST_INV.fx('nelback',t,n)$((not tfix(t)) and (year(t) lt rd_time('nelback','start'))) = mcost_inv0('nelback',n);
6435  MCOST_FUEL.fx('advbiofuel',t,n)$((not tfix(t)) and (year(t) lt rd_time('nelback','start'))) = mcost_inv0('nelback',n);
6436  MCOST_FUEL.scale('advbiofuel',t,n) = 1e-3;
6437   
6438  * No investments in backstop RD for the first 2 periods
6439  loop((t,tp1)$pre(t,tp1),
6440  I_RD.fx('nelback',t,n)$((not tfix(tp1)) and (year(t) le 2010)) = 1e-10;
6441  );
6442   
6443  * RnD leader also in China, same regions as for battery!
6444  leadrd('nelback',n)$battery_leadrd(n) = yes;
6445   
6446  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
6449  *-------------------------------------------------------------------------------
6450  * Carbon Capture and Sequestration
6451  *-------------------------------------------------------------------------------
6452   
6454   
6455  positive variable MCOST_EMI(e,t,n) 'Average cost of emission-related entities [T$/GTonC]';
6456    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', MCOST_EMI; if(execerror gt prevexecerrors, MCOST_EMI.l(e,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); MCOST_EMI.lo(e,t,n) = 1e-8; MCOST_EMI.up(e,t,n) = +inf; MCOST_EMI.l(e,t,n)$(MCOST_EMI.l(e,t,n)<1e-8) = 1e-8; MCOST_EMI.l(e,t,n)$(MCOST_EMI.l(e,t,n)>+inf) = +inf;;
6457   
6458  positive variable Q_CCS(sink,ccs_stor,t,n) 'quantity of co2 that is stored for each storage type [GtonC]';
6459    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_CCS; if(execerror gt prevexecerrors, Q_CCS.l(sink, ccs_stor,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); Q_CCS.lo(sink, ccs_stor,t,n) = 1e-8; Q_CCS.up(sink, ccs_stor,t,n) = +inf; Q_CCS.l(sink, ccs_stor,t,n)$(Q_CCS.l(sink, ccs_stor,t,n)<1e-8) = 1e-8; Q_CCS.l(sink, ccs_stor,t,n)$(Q_CCS.l(sink, ccs_stor,t,n)>+inf) = +inf;;
6460   
6461  positive variable CUM_Q_CCS(ccs_stor,t,n) 'cumulative quantity of co2 that is stored for each storage type [GtonC]';
6462    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', CUM_Q_CCS; if(execerror gt prevexecerrors, CUM_Q_CCS.l(ccs_stor,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); CUM_Q_CCS.lo(ccs_stor,t,n) = 1e-8; CUM_Q_CCS.up(ccs_stor,t,n) = +inf; CUM_Q_CCS.l(ccs_stor,t,n)$(CUM_Q_CCS.l(ccs_stor,t,n)<1e-8) = 1e-8; CUM_Q_CCS.l(ccs_stor,t,n)$(CUM_Q_CCS.l(ccs_stor,t,n)>+inf) = +inf;;
6463   
6464  Q_EMI.lo('ccs_plant',t,n) = 0;
6465  COST_EMI.fx('ccs_plant',tfirst,n) = 0;
6466  I_EN.up(jlccs,t,n)$(year(t) le 2010) = I_EN.lo(jlccs,t,n);
6467  Q_CCS.fx(sink,ccs_stor,tfirst,n) = 1e-8;
6468  CUM_Q_CCS.fx(ccs_stor,tfirst,n) =  sum(sink, tlen(tfirst) * Q_CCS.lo(sink,ccs_stor,tfirst,n));
6469  CUM_Q_CCS.up(ccs_stor,tnofirst(t),n) = max(ccs_stor_cap_max(n,'best',ccs_stor) / c2co2,1e-5);
6470   
6471  * Maximum CCS until 2030 1GtCO2
6472  Q_EMI.up('ccs_plant',t,n)$(year(t) le 2025) = 0.5 / c2co2 * sum(ccs_stor,ccs_stor_cap_max(n,'best',ccs_stor)) / sum((ccs_stor,nn),ccs_stor_cap_max(nn,'best',ccs_stor));
6473  Q_EMI.up('ccs_plant',t,n)$(year(t) eq 2030) = 1 / c2co2 * sum(ccs_stor,ccs_stor_cap_max(n,'best',ccs_stor)) / sum((ccs_stor,nn),ccs_stor_cap_max(n,'best',ccs_stor));
6474   
6475  *-------------------------------------------------------------------------------
6477   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
6479  *-------------------------------------------------------------------------------
6480  * Coal for non-electric sectors
6481  * - Coke Plants
6482  * - Industrial and Commercial combined-heat-and-power (CHP)
6483  * - Others
6484  *-------------------------------------------------------------------------------
6485   
6487   
6488  delta_en('nelcoalccs',t,n) = 1;
6489   
6490  nelcoal_share_ccs(tfirst) = 0;
6491  nelcoal_share_ccs(t)$(year(t) ge 2010) = min(1,(year(t) - 2010) / (2100 - 2010));
6492   
6493  Q_EN.lo('nelcoaltr',t,n) = 1e-12;
6494  Q_EN.up('nelcoaltr',t,n) = nelcoal_baseline(t,n);
6495   
6496  Q_EN.lo('nelcoalccs',t,n) = 1e-12;
6497  Q_EN.up('nelcoalccs',t,n) = max(1e-12, nelcoal_baseline(t,n) * nelcoal_share_ccs(t));
6498  K_EN.fx('nelcoalccs',t,n)$(year(t) eq 2005) = 1e-12;
6499   
6500  Q_EN.lo('nelcoalabat',t,n) = 0.0;
6501  Q_EN.up('nelcoalabat',t,n) = nelcoal_baseline(t,n) * nelcoal_max_abat(t,n);
6502   
6503  Q_IN.lo('coal','nelcoalccs',t,n) = 1e-12;
6504  Q_IN.up('coal','nelcoalccs',t,n) = max(1e-12,nelcoal_baseline(t,n) * nelcoal_share_ccs(t) / csi('coal','nelcoalccs',t,n));
6505   
6506  Q_IN.lo('coal','nelcoaltr',t,n) = 1e-12;
6507  Q_IN.up('coal','nelcoaltr',t,n) = nelcoal_baseline(t,n) / csi('coal','nelcoaltr',t,n);
6508   
6509  Q_IN.fx('coal','nelcoal',t,n) = 0.0;
6510  Q_EN.fx('nelcoal',t,n) = nelcoal_baseline(t,n);
6511  K_EN.fx('nelcoal',t,n) = 0;
6512   
6513  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
6516  *-------------------------------------------------------------------------------
6517  * Wind energy module
6518  * - onshore and offshore
6519  *-------------------------------------------------------------------------------
6520   
6522   
6523  variable I_EN_WINDON(wind_dist,wind_class,t,n);
6524    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_EN_WINDON; if(execerror gt prevexecerrors, I_EN_WINDON.l(wind_dist,wind_class,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); I_EN_WINDON.lo(wind_dist,wind_class,t,n) = 1e-12; I_EN_WINDON.up(wind_dist,wind_class,t,n) = 1e8; I_EN_WINDON.l(wind_dist,wind_class,t,n)$(I_EN_WINDON.l(wind_dist,wind_class,t,n)<1e-12) = 1e-12; I_EN_WINDON.l(wind_dist,wind_class,t,n)$(I_EN_WINDON.l(wind_dist,wind_class,t,n)>1e8) = 1e8;;
6525  I_EN_WINDON.up(wind_dist,wind_class,t,n) = max(1e-6,windon_pot(n,wind_dist,wind_class) * (smax(tt$(year(tt) eq 2005), mcost_inv_valid_wind('elwindon',tt,n))));
6526   
6527  variable I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
6528    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_EN_WINDOFF; if(execerror gt prevexecerrors, I_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); I_EN_WINDOFF.lo(wind_dist,wind_depth,wind_class,t,n) = 1e-12; I_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n) = 1e8; I_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)$(I_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)<1e-12) = 1e-12; I_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)$(I_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)>1e8) = 1e8;;
6529  I_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n) = max(1e-6,windoff_pot(n,wind_dist,wind_depth,wind_class) * (smax(tt$(year(tt) eq 2005), mcost_inv_valid_wind('elwindoff',tt,n))) * windoff_costinv(wind_depth));
6530   
6531  variable K_EN_WINDON(wind_dist,wind_class,t,n);
6532    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_EN_WINDON; if(execerror gt prevexecerrors, K_EN_WINDON.l(wind_dist,wind_class,t,n) = 1e-6; execerror = prevexecerrors; last_load_went_wrong=1); K_EN_WINDON.lo(wind_dist,wind_class,t,n) = 1e-6; K_EN_WINDON.up(wind_dist,wind_class,t,n) = 1e6; K_EN_WINDON.l(wind_dist,wind_class,t,n)$(K_EN_WINDON.l(wind_dist,wind_class,t,n)<1e-6) = 1e-6; K_EN_WINDON.l(wind_dist,wind_class,t,n)$(K_EN_WINDON.l(wind_dist,wind_class,t,n)>1e6) = 1e6;;
6533  K_EN_WINDON.fx(wind_dist,wind_class,t,n)$((year(t) le 2015) and (sameas(wind_dist, 'near'))) = max(1e-6, k_en0_windon(wind_class,t,n));
6534  K_EN_WINDON.fx(wind_dist,wind_class,t,n)$((year(t) le 2015) and (not sameas(wind_dist, 'near'))) = 1e-6;
6535  K_EN_WINDON.lo(wind_dist,wind_class,t,n)$(year(t) gt 2015) = (smax(tt$(year(tt) eq 2015), K_EN_WINDON.l(wind_dist,wind_class,tt,n)));
6536  K_EN_WINDON.up(wind_dist,wind_class,t,n)$(year(t) gt 2015) = max(K_EN_WINDON.lo(wind_dist,wind_class,t,n),windon_pot(n,wind_dist,wind_class));
6537   
6538  variable K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
6539    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_EN_WINDOFF; if(execerror gt prevexecerrors, K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n) = 1e-6; execerror = prevexecerrors; last_load_went_wrong=1); K_EN_WINDOFF.lo(wind_dist,wind_depth,wind_class,t,n) = 1e-6; K_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n) = 1e6; K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)$(K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)<1e-6) = 1e-6; K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)$(K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)>1e6) = 1e6;;
6540  K_EN_WINDOFF.fx(wind_dist,wind_depth,wind_class,t,n)$((year(t) le 2015) and (sameas(wind_dist, 'near')) and (sameas(wind_depth, 'shallow'))) = max(1e-6,k_en0_windoff(wind_class,t,n));
6541  K_EN_WINDOFF.fx(wind_dist,wind_depth,wind_class,t,n)$((year(t) le 2015) and (not ((sameas(wind_dist, 'near')) and (sameas(wind_depth, 'shallow'))))) = 1e-6;
6542  K_EN_WINDOFF.lo(wind_dist,wind_depth,wind_class,t,n)$(year(t) gt 2015) = (smax(tt$(year(tt) eq 2015), K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,tt,n)));
6543  K_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n)$(year(t) gt 2015) = max(K_EN_WINDOFF.lo(wind_dist,wind_depth,wind_class,t,n), windoff_pot(n,wind_dist,wind_depth,wind_class));
6544   
6545  K_EN.lo(jel_wind,t,n)$((K_EN.lo(jel_wind,t,n) lt K_EN.up(jel_wind,t,n)) and (year(t) ge 2020)) = (smax(tt$(year(tt) eq 2020), k_en_valid_tot(jel_wind,t,n)));
6546  K_EN.up(jel_wind,t,n)$((K_EN.lo(jel_wind,t,n) lt K_EN.up(jel_wind,t,n)) and (year(t) eq 2020) and sameas(jel_wind,'elwindon')) = (smax(tt$(year(tt) eq 2020), k_en_valid_tot(jel_wind,t,n))) * 1.1;
6547   
6548  variable Q_EN_WINDON(wind_dist,wind_class,t,n);
6549    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EN_WINDON; if(execerror gt prevexecerrors, Q_EN_WINDON.l(wind_dist,wind_class,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); Q_EN_WINDON.lo(wind_dist,wind_class,t,n) = 1e-8; Q_EN_WINDON.up(wind_dist,wind_class,t,n) = 1e8; Q_EN_WINDON.l(wind_dist,wind_class,t,n)$(Q_EN_WINDON.l(wind_dist,wind_class,t,n)<1e-8) = 1e-8; Q_EN_WINDON.l(wind_dist,wind_class,t,n)$(Q_EN_WINDON.l(wind_dist,wind_class,t,n)>1e8) = 1e8;;
6550  Q_EN_WINDON.up(wind_dist,wind_class,t,n) = max(1e-8,windon_pot(n,wind_dist,wind_class) * wind_mu(wind_class));
6551   
6552  variable Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
6553    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EN_WINDOFF; if(execerror gt prevexecerrors, Q_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); Q_EN_WINDOFF.lo(wind_dist,wind_depth,wind_class,t,n) = 1e-8; Q_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n) = 1e8; Q_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)$(Q_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)<1e-8) = 1e-8; Q_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)$(Q_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n)>1e8) = 1e8;;
6554  Q_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n) = max(1e-8,windoff_pot(n,wind_dist,wind_depth,wind_class) * wind_mu(wind_class));
6555   
6556  positive variable MCOST_INV_WINDOFF(wind_depth,t,n);
6557   prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', MCOST_INV_WINDOFF; if(execerror gt prevexecerrors, MCOST_INV_WINDOFF.l(wind_depth,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1);
6558   
6559  * Link core variables upper bounds to module specific upper bounds
6560  Q_EN.up('elwindon',t,n) = sum((wind_dist,wind_class),(Q_EN_WINDON.up(wind_dist,wind_class,t,n)));
6561  Q_EN.up('elwindoff',t,n) = sum((wind_dist,wind_depth,wind_class),(Q_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n)));
6562  K_EN.up('elwindon',t,n) = min(K_EN.up('elwindon',t,n),sum((wind_dist,wind_class),K_EN_WINDON.up(wind_dist,wind_class,t,n)));
6563  K_EN.up('elwindoff',t,n) = min(K_EN.up('elwindoff',t,n),sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n)));
6564  I_EN.up('elwindon',t,n) = sum((wind_dist,wind_class),I_EN_WINDON.up(wind_dist,wind_class,t,n));
6565  I_EN.up('elwindoff',t,n) = sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n));
6566   
6567  *-------------------------------------------------------------------------------
6569   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
6571  *-------------------------------------------------------------------------------
6572  * Solar Powerplants (PV and CSP) to the electrical system
6573  *-------------------------------------------------------------------------------
6574   
6575  *-------------------------------------------------------------------------------
6577   
6578  variable I_EN_PV(solar_dist,solar_class,t,n);
6579    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_EN_PV; if(execerror gt prevexecerrors, I_EN_PV.l(solar_dist,solar_class,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); I_EN_PV.lo(solar_dist,solar_class,t,n) = 1e-8; I_EN_PV.up(solar_dist,solar_class,t,n) = 1e8; I_EN_PV.l(solar_dist,solar_class,t,n)$(I_EN_PV.l(solar_dist,solar_class,t,n)<1e-8) = 1e-8; I_EN_PV.l(solar_dist,solar_class,t,n)$(I_EN_PV.l(solar_dist,solar_class,t,n)>1e8) = 1e8;;
6580  I_EN_PV.lo(solar_dist,solar_class,t,n) = 1e-8;
6581  I_EN_PV.up(solar_dist,solar_class,t,n) = max(1e-8,pv_pot(n,solar_dist,solar_class) * mcost_inv0('elpv',n));
6582  I_EN_PV.l(solar_dist,solar_class,t,n) = 1e-8;
6583   
6584  variable I_EN_CSP(solar_dist,solar_class,t,n);
6585    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_EN_CSP; if(execerror gt prevexecerrors, I_EN_CSP.l(solar_dist,solar_class,t,n) = 1e-8; execerror = prevexecerrors; last_load_went_wrong=1); I_EN_CSP.lo(solar_dist,solar_class,t,n) = 1e-8; I_EN_CSP.up(solar_dist,solar_class,t,n) = 1e8; I_EN_CSP.l(solar_dist,solar_class,t,n)$(I_EN_CSP.l(solar_dist,solar_class,t,n)<1e-8) = 1e-8; I_EN_CSP.l(solar_dist,solar_class,t,n)$(I_EN_CSP.l(solar_dist,solar_class,t,n)>1e8) = 1e8;;
6586  I_EN_CSP.lo(solar_dist,solar_class,t,n) = 1e-8;
6587  I_EN_CSP.up(solar_dist,solar_class,t,n) = max(1e-8,csp_pot(n,solar_dist,solar_class) * mcost_inv0('elcsp',n));
6588   
6589  variable K_EN_PV(solar_dist,solar_class,t,n);
6590    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_EN_PV; if(execerror gt prevexecerrors, K_EN_PV.l(solar_dist,solar_class,t,n) = 1e-6; execerror = prevexecerrors; last_load_went_wrong=1); K_EN_PV.lo(solar_dist,solar_class,t,n) = 1e-6; K_EN_PV.up(solar_dist,solar_class,t,n) = 1e6; K_EN_PV.l(solar_dist,solar_class,t,n)$(K_EN_PV.l(solar_dist,solar_class,t,n)<1e-6) = 1e-6; K_EN_PV.l(solar_dist,solar_class,t,n)$(K_EN_PV.l(solar_dist,solar_class,t,n)>1e6) = 1e6;;
6591  K_EN_PV.fx('near',solar_class,t,n)$(year(t) le 2015) = max(1e-6,k_en0_pv(solar_class,t,n));
6592  K_EN_PV.fx('far',solar_class,t,n)$(year(t) le 2015) = 1e-6;
6593  K_EN_PV.lo(solar_dist,solar_class,t,n)$(year(t) gt 2015) = (smax(tt$(year(tt) eq 2015), K_EN_PV.l(solar_dist,solar_class,tt,n)));
6594  K_EN_PV.up(solar_dist,solar_class,t,n)$(year(t) gt 2015) = max(K_EN_PV.lo(solar_dist,solar_class,t,n),pv_pot(n,solar_dist,solar_class));
6595   
6596  variable K_EN_CSP(solar_dist,solar_class,t,n);
6597    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', K_EN_CSP; if(execerror gt prevexecerrors, K_EN_CSP.l(solar_dist,solar_class,t,n) = 1e-6; execerror = prevexecerrors; last_load_went_wrong=1); K_EN_CSP.lo(solar_dist,solar_class,t,n) = 1e-6; K_EN_CSP.up(solar_dist,solar_class,t,n) = 1e6; K_EN_CSP.l(solar_dist,solar_class,t,n)$(K_EN_CSP.l(solar_dist,solar_class,t,n)<1e-6) = 1e-6; K_EN_CSP.l(solar_dist,solar_class,t,n)$(K_EN_CSP.l(solar_dist,solar_class,t,n)>1e6) = 1e6;;
6598  K_EN_CSP.fx('near',solar_class,t,n)$(year(t) le 2015) = max(1e-6,k_en0_csp(solar_class,t,n));
6599  K_EN_CSP.fx('far',solar_class,t,n)$(year(t) le 2015) = 1e-6;
6600  K_EN_CSP.lo(solar_dist,solar_class,t,n)$(year(t) gt 2015) = (smax(tt$(year(tt) eq 2015), K_EN_CSP.l(solar_dist,solar_class,tt,n)));
6601  K_EN_CSP.up(solar_dist,solar_class,t,n)$(year(t) gt 2015) = max(K_EN_CSP.lo(solar_dist,solar_class,t,n),csp_pot(n,solar_dist,solar_class));
6602   
6603  K_EN.fx('elpv',tfirst(t),n) = sum((solar_dist,solar_class),K_EN_PV.l(solar_dist,solar_class,t,n));
6604  K_EN.fx('elcsp',tfirst(t),n) = sum((solar_dist,solar_class),K_EN_CSP.l(solar_dist,solar_class,t,n));
6605   
6606  K_EN.lo(jel_solar,t,n)$((K_EN.lo(jel_solar,t,n) lt K_EN.up(jel_solar,t,n)) and (year(t) ge 2020)) = (smax(tt$(year(tt) eq 2020), k_en_valid_tot(jel_solar,t,n)));
6607   
6608  variable Q_EN_PV(solar_dist,solar_class,t,n);
6609    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EN_PV; if(execerror gt prevexecerrors, Q_EN_PV.l(solar_dist,solar_class,t,n) = 1; execerror = prevexecerrors; last_load_went_wrong=1); Q_EN_PV.lo(solar_dist,solar_class,t,n) = 1e-8; Q_EN_PV.up(solar_dist,solar_class,t,n) = 1e8; Q_EN_PV.l(solar_dist,solar_class,t,n)$(Q_EN_PV.l(solar_dist,solar_class,t,n)<1e-8) = 1e-8; Q_EN_PV.l(solar_dist,solar_class,t,n)$(Q_EN_PV.l(solar_dist,solar_class,t,n)>1e8) = 1e8;;
6610  Q_EN_PV.up(solar_dist,solar_class,t,n) = max(1e-8,pv_pot(n,solar_dist,solar_class)*solar_mu(solar_class,'elpv'));
6611   
6612  variable Q_EN_CSP(solar_dist,solar_class,t,n);
6613    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EN_CSP; if(execerror gt prevexecerrors, Q_EN_CSP.l(solar_dist,solar_class,t,n) = 1; execerror = prevexecerrors; last_load_went_wrong=1); Q_EN_CSP.lo(solar_dist,solar_class,t,n) = 1e-8; Q_EN_CSP.up(solar_dist,solar_class,t,n) = 1e8; Q_EN_CSP.l(solar_dist,solar_class,t,n)$(Q_EN_CSP.l(solar_dist,solar_class,t,n)<1e-8) = 1e-8; Q_EN_CSP.l(solar_dist,solar_class,t,n)$(Q_EN_CSP.l(solar_dist,solar_class,t,n)>1e8) = 1e8;;
6614  Q_EN_CSP.up(solar_dist,solar_class,t,n) = max(1e-8,csp_pot(n,solar_dist,solar_class)* solar_mu(solar_class,'elcsp'));
6615   
6616  * Link core variables upper bounds to module specific upper bounds
6617  Q_EN.up('elpv',t,n) = sum((solar_dist,solar_class),(Q_EN_PV.up(solar_dist,solar_class,t,n)));
6618  Q_EN.up('elcsp',t,n) = sum((solar_dist,solar_class),(Q_EN_CSP.up(solar_dist,solar_class,t,n)));
6619  K_EN.up('elpv',t,n) = sum((solar_dist,solar_class),K_EN_PV.up(solar_dist,solar_class,t,n));
6620  K_EN.up('elcsp',t,n) = sum((solar_dist,solar_class),K_EN_CSP.up(solar_dist,solar_class,t,n));
6621  I_EN.up('elpv',t,n) = sum((solar_dist,solar_class),I_EN_PV.up(solar_dist,solar_class,t,n));
6622  I_EN.up('elcsp',t,n) = sum((solar_dist,solar_class),I_EN_CSP.up(solar_dist,solar_class,t,n));
6623   
6624  *-------------------------------------------------------------------------------
6626   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
6628  *-------------------------------------------------------------------------------
6629  * Technology development scenarios
6630  *-------------------------------------------------------------------------------
6631   
6633   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
6635  *-------------------------------------------------------------------------------
6636  * Oil Extraction
6637  * Options:
6638  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
6639  *-------------------------------------------------------------------------------
6640   
6642   
6643  variable Q_EMI_OUT(f,t,n) 'Emissions from PES extraction [GTonC]';
6644    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_EMI_OUT; if(execerror gt prevexecerrors, Q_EMI_OUT.l(f,t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); Q_EMI_OUT.lo(f,t,n) = -inf; Q_EMI_OUT.up(f,t,n) = +inf; Q_EMI_OUT.l(f,t,n)$(Q_EMI_OUT.l(f,t,n)<-inf) = -inf; Q_EMI_OUT.l(f,t,n)$(Q_EMI_OUT.l(f,t,n)>+inf) = +inf;;
6645   
6646  positive variable OILCAP(t,n,oilg)  'Extraction capacity for each grade [TWh]';
6647    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', OILCAP; if(execerror gt prevexecerrors, OILCAP.l(t,n,oilg) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); OILCAP.lo(t,n,oilg) = 1e-6; OILCAP.up(t,n,oilg) = +inf; OILCAP.l(t,n,oilg)$(OILCAP.l(t,n,oilg)<1e-6) = 1e-6; OILCAP.l(t,n,oilg)$(OILCAP.l(t,n,oilg)>+inf) = +inf;;
6648  OILCAP.fx(t,n,oilg)$(year(t) eq 2005) = (sum(oilgg$map_oilgrade(oilg,oilgg), oil_capacity(oilgg,n)));
6649  OILCAP.fx(t,n,oilg)$(not valid_oilg(oilg)) = 0;
6650   
6651  positive variable OILPROD(t,n,oilg) 'Oil extraction for each grade [TWh]';
6652    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', OILPROD; if(execerror gt prevexecerrors, OILPROD.l(t,n,oilg) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); OILPROD.lo(t,n,oilg) = 1e-7; OILPROD.up(t,n,oilg) = +inf; OILPROD.l(t,n,oilg)$(OILPROD.l(t,n,oilg)<1e-7) = 1e-7; OILPROD.l(t,n,oilg)$(OILPROD.l(t,n,oilg)>+inf) = +inf;;
6653  OILPROD.fx(t,n,oilg)$(not valid_oilg(oilg))=0;
6654   
6655  positive variable I_OIL(t,n,oilg) 'Investment for oil sector capital for each grade [T$]';
6656    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_OIL; if(execerror gt prevexecerrors, I_OIL.l(t,n,oilg) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); I_OIL.lo(t,n,oilg) = 1e-6; I_OIL.up(t,n,oilg) = +inf; I_OIL.l(t,n,oilg)$(I_OIL.l(t,n,oilg)<1e-6) = 1e-6; I_OIL.l(t,n,oilg)$(I_OIL.l(t,n,oilg)>+inf) = +inf;;
6657  I_OIL.fx(t,n,oilg)$(not valid_oilg(oilg))=0;
6658   
6659  positive variable COST_OIL(t,n,oilg) 'Cost of additional oil extraction capacity for each grade [T$/TWh]';
6660    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', COST_OIL; if(execerror gt prevexecerrors, COST_OIL.l(t,n,oilg) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); COST_OIL.lo(t,n,oilg) = 1e-6; COST_OIL.up(t,n,oilg) = 1e-2; COST_OIL.l(t,n,oilg)$(COST_OIL.l(t,n,oilg)<1e-6) = 1e-6; COST_OIL.l(t,n,oilg)$(COST_OIL.l(t,n,oilg)>1e-2) = 1e-2;;
6661  COST_OIL.fx(t,n,oilg)$(not valid_oilg(oilg))=0;
6662   
6663  positive variable CUM_OIL(t,n,oilg) 'Total production of oil for each grade [TWh]';
6664    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', CUM_OIL; if(execerror gt prevexecerrors, CUM_OIL.l(t,n,oilg) = 1e-2; execerror = prevexecerrors; last_load_went_wrong=1); CUM_OIL.lo(t,n,oilg) = 1e-3; CUM_OIL.up(t,n,oilg) = +inf; CUM_OIL.l(t,n,oilg)$(CUM_OIL.l(t,n,oilg)<1e-3) = 1e-3; CUM_OIL.l(t,n,oilg)$(CUM_OIL.l(t,n,oilg)>+inf) = +inf;;
6665  CUM_OIL.up(t,n,oilg)$(year(t) gt 2005) = (sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)));
6666  CUM_OIL.fx(t,n,oilg)$(year(t) eq 2005) = 1e-3;
6667  CUM_OIL.fx(t,n,oilg)$(not valid_oilg(oilg)) = 0;
6668   
6669  positive variable ADDOILCAP(t,n,oilg) 'Additional oil capacity for each grade [TWh]';
6670    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', ADDOILCAP; if(execerror gt prevexecerrors, ADDOILCAP.l(t,n,oilg) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); ADDOILCAP.lo(t,n,oilg) = 1e-6; ADDOILCAP.up(t,n,oilg) = +inf; ADDOILCAP.l(t,n,oilg)$(ADDOILCAP.l(t,n,oilg)<1e-6) = 1e-6; ADDOILCAP.l(t,n,oilg)$(ADDOILCAP.l(t,n,oilg)>+inf) = +inf;;
6671  ADDOILCAP.fx(t,n,oilg)$(not valid_oilg(oilg))=0;
6672   
6673  positive variable I_OUT(f,t,n) 'Investments in extraction sector [T$]';
6674   prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', I_OUT; if(execerror gt prevexecerrors, I_OUT.l(f,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1);
6675  I_OUT.lo(f,t,n)$extract(f) = 1e-12;
6676  I_OUT.up(f,t,n)$extract(f) = +inf;
6677   
6678  positive variable Q_OUT(f,t,n) 'Extracted primary energy supplies [TWh]';
6679    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', Q_OUT; if(execerror gt prevexecerrors, Q_OUT.l(f,t,n) = 1e-5; execerror = prevexecerrors; last_load_went_wrong=1); Q_OUT.lo(f,t,n) = 0; Q_OUT.up(f,t,n) = +inf; Q_OUT.l(f,t,n)$(Q_OUT.l(f,t,n)<0) = 0; Q_OUT.l(f,t,n)$(Q_OUT.l(f,t,n)>+inf) = +inf;;
6680   
6681  * Base year 2005
6682  OILPROD.fx(t,n,oilg)$(year(t) eq 2005) = (sum(oilgg$map_oilgrade(oilg,oilgg), oil_capacity(oilg,n)));
6683   
6684  * Manual calibration until 2015
6685  Q_OUT.fx('oil',t,n)$(year(t) ge 2010 and year(t) le 2015) = q_out_valid_weo('oil',t,n);
6686   
6687  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
6690  *-------------------------------------------------------------------------------
6691  * Uranium Resources
6692  *-------------------------------------------------------------------------------
6693   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
6696  *-------------------------------------------------------------------------------
6697  * Gas Resources
6698  *-------------------------------------------------------------------------------
6699   
6701   
6702  * No emissions associated with extraction
6703  Q_EMI_OUT.fx('gas',t,n) = 0;
6704   
6705  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
6708  *-------------------------------------------------------------------------------
6709  * Coal Resources
6710  *-------------------------------------------------------------------------------
6711   
6713   
6714  * No emissions associated with extraction
6715  Q_EMI_OUT.fx('coal',t,n) = 0;
6716   
6717  *-------------------------------------------------------------------------------
6719   
6720   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
6722  *-------------------------------------------------------------------------------
6723  * Climate
6724  *
6725  * Represents the climate
6726  * - based on the DICE model equations
6727  * - Radiative forcing for non CO2 ghgs
6728  * - parameters calibrated to reproduce MAGICC6.4 default response
6729  *
6730  *  Options:
6731  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
6732  * - $setglobal cooperate_on_climate {'YES','NO'}
6733  * - 'YES'(default): Countries within a coalition act in cooperation
6734  *   'NO': Countries within a coalition act individually
6735  *
6736  *-------------------------------------------------------------------------------
6737   
6739   
6740  positive variable TEMP(m,t,n) 'Temperature [deg C above preindustrial levels]';
6741    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', TEMP; if(execerror gt prevexecerrors, TEMP.l(m,t,n) = 1; execerror = prevexecerrors; last_load_went_wrong=1); TEMP.lo(m,t,n) = 0; TEMP.up(m,t,n) = +inf; TEMP.l(m,t,n)$(TEMP.l(m,t,n)<0) = 0; TEMP.l(m,t,n)$(TEMP.l(m,t,n)>+inf) = +inf;;
6742  TEMP.fx(m,tfirst,n) = temp0(m);
6743   
6744  variable TRF(t,n) 'Total radiative forcing [W/m2]';
6745    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', TRF; if(execerror gt prevexecerrors, TRF.l(t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); TRF.lo(t,n) = -inf; TRF.up(t,n) = +inf; TRF.l(t,n)$(TRF.l(t,n)<-inf) = -inf; TRF.l(t,n)$(TRF.l(t,n)>+inf) = +inf;;
6746   
6747  variable RF(e,t,n) 'Radiative forcing [W/m2]';
6748    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', RF; if(execerror gt prevexecerrors, RF.l(e,t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); RF.lo(e,t,n) = -inf; RF.up(e,t,n) = +inf; RF.l(e,t,n)$(RF.l(e,t,n)<-inf) = -inf; RF.l(e,t,n)$(RF.l(e,t,n)>+inf) = +inf;;
6749   
6750  variable W_EMI(e,t,n) 'World emissions during 5-year period [GTon/yr]';
6751    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', W_EMI; if(execerror gt prevexecerrors, W_EMI.l(e,t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); W_EMI.lo(e,t,n) = -inf; W_EMI.up(e,t,n) = +inf; W_EMI.l(e,t,n)$(W_EMI.l(e,t,n)<-inf) = -inf; W_EMI.l(e,t,n)$(W_EMI.l(e,t,n)>+inf) = +inf;;
6752  W_EMI.lo('co2',t,n) = -20;
6753   
6754  positive variable WCUM_EMI(e,m,t,n) 'Global stock of GHG [GTon]';
6755    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', WCUM_EMI; if(execerror gt prevexecerrors, WCUM_EMI.l(e,m,t,n) = wcum_emi0(e,m); execerror = prevexecerrors; last_load_went_wrong=1); WCUM_EMI.lo(e,m,t,n) = 0; WCUM_EMI.up(e,m,t,n) = +inf; WCUM_EMI.l(e,m,t,n)$(WCUM_EMI.l(e,m,t,n)<0) = 0; WCUM_EMI.l(e,m,t,n)$(WCUM_EMI.l(e,m,t,n)>+inf) = +inf;;
6756  WCUM_EMI.fx(ghg(e),m,tfirst,n)$wcum_emi0(e,m) = wcum_emi0(e,m);
6757   
6758  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
6761  *-------------------------------------------------------------------------------
6762  * Long-run Damages from Climate Change
6763  * - Economic impacts
6764  * - Adaptation
6765  *-------------------------------------------------------------------------------
6766   
6768   
6769  variable OMEGA(t,n) 'economic impact from climate change [% of GDP]';
6770    prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', OMEGA; if(execerror gt prevexecerrors, OMEGA.l(t,n) = 0; execerror = prevexecerrors; last_load_went_wrong=1); OMEGA.lo(t,n) = -inf; OMEGA.up(t,n) = +inf; OMEGA.l(t,n)$(OMEGA.l(t,n)<-inf) = -inf; OMEGA.l(t,n)$(OMEGA.l(t,n)>+inf) = +inf;;
6771   
6772  K.fx('prada',tfirst,n) = 1e-5;
6773  K.fx('rada',tfirst,n)  = 1e-5;
6774  K.fx('scap',tfirst,n)  = 1e-5;
6775   
6776  * OMEGA fixed in first period
6777  OMEGA.fx(t,n)$tfirst(t) = 1
6780  ;
6781  *-------------------------------------------------------------------------------
6783   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
6785  *-------------------------------------------------------------------------------
6786  * Light-duty Vehicles for Personal Transport
6787  *-------------------------------------------------------------------------------
6788   
6790   
6791  variable ELMOTOR_COST(t) '$/kw' ;
6792  ELMOTOR_COST.fx(t) $(year(t) le 2010) = 243 ;
6793  ELMOTOR_COST.fx(t) $(year(t) ge 2010 and year(t) le 2030) = 40 ;
6794  ELMOTOR_COST.fx(t) $(year(t) ge 2030 and year(t) le 2050) = 31 ;
6795  ELMOTOR_COST.fx(t) $(year(t) ge 2050) = 23 ;
6796   
6797  * 1) Vehicles
6798   
6799  *** newcode
6800  *Global zero-emission vehicle mandates and internal combustion engine bans
6801   
6802  **Policy:
6803  *100% ZEV sales after 2035 (ZEV=Zero Emission Vehicles = Electric + Hybrid).Sales=limito gli investimenti I
6804  *I_EN.fx('trad_cars',t,'europe')$(year(t) ge 2035) = 1e-9;
6805   
6806  *K_EN.l('trad_cars',t,'europe')$(year(t) eq 2040) = 0.95*K_EN.l('trad_cars',t,'europe')$(year(t) eq 2035);
6807  *EU è già a posto così
6808   
6809  *ICE ban (ban on internal combustion engine cars, aka traditional cars). Ban=limito la quantità K
6810  *K_EN.fx('trad_cars',t,'denmark')$(year(t) gt 2030) = 1e-9;
6811  *K_EN.fx('trad_cars',t,'chile')$(year(t) gt 2035) = 1e-9;
6812  *K_EN.fx('trad_cars',t,'argentina')$(year(t) gt 2040) = 1e-9;
6813   
6814  *100% electrified sales (only electric vehicles, no hybrid). Sales=limito gli investimenti I
6815  *I_EN.fx(jveh_inv,t,'iceland')$((year(t) gt 2040) and (not sameas (jveh_inv,'edv'))) = 1e-9;
6816   
6817  *100% electrified stock. Stock=limito la quantità K
6818  *K_EN.fx(jveh_inv,t,'sri_lanka')$((year(t) gt 2030) and (not sameas (jveh_inv,'edv'))) = 1e-9;
6819   
6820  *** newcode
6821  I_EN.up('trad_cars',t,'europe')$(year(t) ge 2035) = 0.1;
6822  ****
6823   
6824   
6825   
6826  K_EN.lo(jveh,t,n) = 1e-6;
6827  K_EN.up(jveh,t,n) = ldv_total(t,n);
6828  K_EN.fx(jveh,t,n)$((year(t) le 2015) and (not sameas (jveh,'trad_cars'))) = k_veh_2005_2015(jveh,t,n);
6829  K_EN.lo(jveh,t,n)$((year(t) gt 2015) and (not sameas (jveh,'trad_cars'))) = k_veh_2005_2015(jveh,'3',n);
6830  I_EN.lo(jveh_inv,t,n)$((year(t) le 2015) and (not sameas (jveh_inv,'trad_cars'))) = 1e-9;
6831   
6832  MCOST_INV.fx(jveh_invfix,t,n) = inv_cost_veh(jveh_invfix)/(reg_discount_veh(n)*1e6);
6833  MCOST_INV.lo(jveh,t,n)$(not sameas(jveh,'trad_cars')) = 1e-5;
6834  MCOST_INV.up(jveh,t,n)$(not sameas(jveh,'trad_cars')) = (inv_cost_veh('trad_cars') +
6835                                                           5 * size_battery(jveh,n) * battery_cost_new(tfirst,n) +
6836                                                           disutility_costs_ldv(jveh,t,n)) * 1e-6;
6837   
6838  Q_IN.fx('trbiofuel','trad_cars',t,n)$(year(t) le 2010) = biofuel_2005_2010(t,n);
6839  Q_IN.lo('trbiofuel','trad_cars',t,n)$(year(t) gt 2010) = biofuel_2013(n);
6840   
6841  * Disable neltrbiofuel when transport is activated
6842  Q_IN.fx('trbiofuel','neltrbiofuel',t,n) = 1e-12;
6843   
6844  * 2) Batteries, R&D
6845   
6846  K_RD.fx('battery',t,n)$(tfirst(t) and (not tfix(t))) = krd0('battery',n);
6847  K_RD.lo('battery',t,n)$((not tfix(t)) and (year(t) ge 2010)) = krd0('battery',n)*(krd_lo_coeff('a')*exp(krd_lo_coeff('b')*exp(krd_lo_coeff('c')*((year(t)-2000)/5))));
6848  K_EN.fx('battery',t,n) = 0;
6849  Q_EN.fx('battery',t,n) = 0;
6850   
6851  MCOST_INV.up('battery',t,n)$(not tfix(t)) = battery_cost_new(tfirst,n);
6852  MCOST_INV.fx('battery',t,n)$((not tfix(t)) and (year(t) lt rd_time('battery','start'))) = battery_cost_new(t,n);
6853  MCOST_INV.fx('hybrid',t,n)$((not tfix(t)) and (year(t) lt rd_time('battery','start'))) = (glider_manufacture_cost+(size_battery('hybrid',n)*battery_cost_new(t,n)*bat_multip('hybrid',n)
6854   + ELMOTOR_COST.l(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6);
6855  MCOST_INV.fx('plg_hybrid',t,n)$((not tfix(t)) and (year(t) lt rd_time('battery','start'))) = (glider_manufacture_cost + (size_battery('plg_hybrid',n)*battery_cost_new(t,n)*bat_multip('plg_hybrid',n)
6856   + ELMOTOR_COST.l(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost ))/1e6;
6857  MCOST_INV.fx('edv',t,n)$((not tfix(t)) and (year(t) lt rd_time('battery','start'))) = (glider_manufacture_cost + size_battery('edv',n)*battery_cost_new(t,n)
6858   + ELMOTOR_COST.l(t)*size_elmotor('edv') + charger_cost+ charging_station)/1e6;
6859   
6860  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
6863  *-------------------------------------------------------------------------------
6864  * Road Freight Transport
6865  *-------------------------------------------------------------------------------
6867   
6868  K_EN.lo(jfrt,t,n) = 1e-5;
6869  K_EN.up(jfrt,t,n) = stfr_total(t,n);
6870  K_EN.fx('trad_stfr',tfirst,n) = stfr_total(tfirst,n);
6871  K_EN.fx(jfrt,t,n)$((not sameas (jfrt,'trad_stfr')) and (year(t) le 2010)) = 1e-4;
6872   
6873  * Disable neltrbiofuel when transport is activated
6874  Q_IN.fx('trbiofuel','neltrbiofuel',t,n) = 1e-12;
6875   
6876  MCOST_INV.fx(jfrt_invfix,t,n) = inv_cost_frt(jfrt_invfix)/(reg_discount_veh(n)*1e6);
6877  MCOST_INV.lo(jfrt,t,n)$(not sameas (jfrt,'trad_stfr')) = 1e-5;
6878  MCOST_INV.up(jfrt,t,n)$(not sameas (jfrt,'trad_stfr')) = (inv_cost_frt('trad_stfr')+5*size_battery_freight(jfrt,n)*battery_cost(tfirst)+disutility_costs_stfr(jfrt,t,n))/1e6;
6879  MCOST_INV.l(jfrt,t,n)$(not sameas (jfrt,'trad_stfr')) = (inv_cost_frt('trad_stfr')+size_battery_freight(jfrt,n)*battery_cost(tfirst))/1e6;
6880   
6881  MCOST_INV.fx('hbd_stfr',t,n)$(year(t) lt rd_time('battery','start')) = (inv_cost_frt('trad_stfr')+(size_battery_freight('hbd_stfr',n)*battery_cost(t)*1.7)+disutility_costs_stfr('hbd_stfr',t,n))/(reg_discount_veh(n)*1e6);
6882  MCOST_INV.fx('plg_hbd_stfr',t,n)$(year(t) lt rd_time('battery','start')) = (inv_cost_frt('trad_stfr')+(size_battery_freight('plg_hbd_stfr',n)*battery_cost(t)*1.7)+disutility_costs_stfr('plg_hbd_stfr',t,n))/1e6;
6883  MCOST_INV.fx('edv_stfr',t,n)$(year(t) lt rd_time('battery','start')) = (inv_cost_frt('trad_stfr')*0.8+size_battery_freight('edv_stfr',n)*battery_cost(t)*1.7+disutility_costs_stfr('edv_stfr',t,n))/1e6;
6884   
6885  *-------------------------------------------------------------------------------
6887   
6888   
6889   
6890   
6891   
6892   
6893  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
6895  *-------------------------------------------------------------------------------
6896  * Traditional Biomass
6897  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
6898  *  - require post_process to be launch before
6899  *-------------------------------------------------------------------------------
6900   
6902   
6904   
6905  *-------------------------------------------------------------------------------
6907   
6908  * Optional modules
6909   
6910  * Policy modules
6911   
6912  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
6916  *-------------------------------------------------------------------------------
6917  * Call modules by order
6918  *-------------------------------------------------------------------------------
6922   
6923  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
6925  *-------------------------------------------------------------------------------
6926  * Algorithm
6927  *-------------------------------------------------------------------------------
6928   
6930   
6932   
6933  *-------------------------------------------------------------------------------
6935   
6936  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
6938  *-------------------------------------------------------------------------------
6939  * Time
6940  * - Temporal structure
6941  * - Fixed time periods
6942  * - States of the world
6943  *-------------------------------------------------------------------------------
6944   
6946   
6947  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
6949  *-------------------------------------------------------------------------------
6950  * Geographic dimension and mapping with countries
6951  *-------------------------------------------------------------------------------
6952   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
6955  *-------------------------------------------------------------------------------
6956  * Non-Cooperative Setup
6957  *
6958  * Each region is defined as an individual coalition.
6959  *
6960  *-------------------------------------------------------------------------------
6961   
6963   
6964  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
6966  *-------------------------------------------------------------------------------
6967  * Welfare
6968  *-------------------------------------------------------------------------------
6969   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
6972  *-------------------------------------------------------------------------------
6973  * Economy
6974  * - Production and Consumption definition
6975  * - Top-level of the production function
6976  * Options:
6977  * --original_ssp=1 : original SSP population and GDP data
6978  *-------------------------------------------------------------------------------
6979   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
6982  *-------------------------------------------------------------------------------
6983  * Energy sector
6984  *-------------------------------------------------------------------------------
6985   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
6988  *-------------------------------------------------------------------------------
6989  * Carbon Emissions
6990  * - Total CO2 emissions and CO2 Fossil fuel and Industry
6991  * - CO2 emission costs
6992  * - GHG permit market
6993  *-------------------------------------------------------------------------------
6994   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
6997  *-------------------------------------------------------------------------------
6998  * Research & Development
6999  * Options:
7000  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
7001  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
7002  *-------------------------------------------------------------------------------
7003   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
7006  *-------------------------------------------------------------------------------
7007  * Default Climate Policy Implementation
7008  *
7009  * Options:
7010  *    --policy={bau (default),ctax}
7011  *        Implement a climate policy setting
7012  *  [ --scen= ]
7013  *        Policy variant.
7014  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
7015  *          * XXX for a fixed percentage/yr (e.g. 5) growth
7016  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
7017  *  [ --ctax_year=2020 ]
7018  *        Starting year of the carbon tax
7019  *  [ --ctax_initial=30 ]
7020  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
7021  *
7022  *-------------------------------------------------------------------------------
7024   
7025  * Initialization
7026   
7027  * Trading all time periods
7028  trading_t(c_mkt,t,n) = yes;
7029  trading_t(f_mkt,t,n) = yes;
7030   
7031  * No carbon tax
7032  ctax(ghg,t,n) = 0;
7033   
7034  * Default emission cap
7035  e_cap(ghg) = yes;
7036  *emi_cap(t,n)= 500;
7037   
7038  ***newcode
7039  emi_cap(t,n)$(not sameas(n,'usa')) = 500;
7040  ***
7041   
7043   
7044  to_run('r1') = yes;
7045  trading_t(c_mkt,t,n) = no;
7046   
7048   
7049  *-------------------------------------------------------------------------------
7051   
7052  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
7054  *-------------------------------------------------------------------------------
7055  * Energy efficiency
7056  *-------------------------------------------------------------------------------
7057   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
7060  *-------------------------------------------------------------------------------
7061  * Hydro Power
7062  *-------------------------------------------------------------------------------
7063   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
7066  *-------------------------------------------------------------------------------
7067  * System Integration:
7068  * - Capacity constraint
7069  * - Flexibility constraint
7070  * - Grid Investment
7071  * - Capacity growth constraint
7072  *-------------------------------------------------------------------------------
7073   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
7076  *-------------------------------------------------------------------------------
7077  * Nuclear power plants
7078  *-------------------------------------------------------------------------------
7079   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
7082  *-------------------------------------------------------------------------------
7083  * GHG module
7084  * - CH4 FFI + CH4 waste + CH4 open fires
7085  * - N2O FFI + N2O waste + N2O open fires
7086  *-------------------------------------------------------------------------------
7087   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
7090  *-------------------------------------------------------------------------------
7091  * F-gases
7092  * - LLF
7093  * - SLF
7094  *-------------------------------------------------------------------------------
7095   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
7098  *-------------------------------------------------------------------------------
7099  * Landuse [simplified version of the land-use model]
7100  *-------------------------------------------------------------------------------
7101   
7103   
7105   
7106  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
7109  *-------------------------------------------------------------------------------
7110  * Bioenergy power plant
7111  *-------------------------------------------------------------------------------
7112   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
7115  *-------------------------------------------------------------------------------
7116  * Traditional Biofuels
7117  * - Requires the precedence of mod_landuse
7118  *-------------------------------------------------------------------------------
7119   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
7122  *-------------------------------------------------------------------------------
7123  * Advanced biofuel
7124  * - Require the precedence of mod_landuse
7125  *-------------------------------------------------------------------------------
7126   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
7129  *-------------------------------------------------------------------------------
7130  * Carbon Capture and Sequestration
7131  *-------------------------------------------------------------------------------
7132   
7134   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
7136  *-------------------------------------------------------------------------------
7137  * Coal for non-electric sectors
7138  * - Coke Plants
7139  * - Industrial and Commercial combined-heat-and-power (CHP)
7140  * - Others
7141  *-------------------------------------------------------------------------------
7142   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
7145  *-------------------------------------------------------------------------------
7146  * Wind energy module
7147  * - onshore and offshore
7148  *-------------------------------------------------------------------------------
7149   
7151   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
7153  *-------------------------------------------------------------------------------
7154  * Solar Powerplants (PV and CSP) to the electrical system
7155  *-------------------------------------------------------------------------------
7156   
7157  *-------------------------------------------------------------------------------
7159   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
7161  *-------------------------------------------------------------------------------
7162  * Technology development scenarios
7163  *-------------------------------------------------------------------------------
7164   
7166   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
7168  *-------------------------------------------------------------------------------
7169  * Oil Extraction
7170  * Options:
7171  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
7172  *-------------------------------------------------------------------------------
7173   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
7176  *-------------------------------------------------------------------------------
7177  * Uranium Resources
7178  *-------------------------------------------------------------------------------
7179   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
7182  *-------------------------------------------------------------------------------
7183  * Gas Resources
7184  *-------------------------------------------------------------------------------
7185   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
7188  *-------------------------------------------------------------------------------
7189  * Coal Resources
7190  *-------------------------------------------------------------------------------
7191   
7193   
7194   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
7196  *-------------------------------------------------------------------------------
7197  * Climate
7198  *
7199  * Represents the climate
7200  * - based on the DICE model equations
7201  * - Radiative forcing for non CO2 ghgs
7202  * - parameters calibrated to reproduce MAGICC6.4 default response
7203  *
7204  *  Options:
7205  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
7206  * - $setglobal cooperate_on_climate {'YES','NO'}
7207  * - 'YES'(default): Countries within a coalition act in cooperation
7208  *   'NO': Countries within a coalition act individually
7209  *
7210  *-------------------------------------------------------------------------------
7211   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
7214  *-------------------------------------------------------------------------------
7215  * Long-run Damages from Climate Change
7216  * - Economic impacts
7217  * - Adaptation
7218  *-------------------------------------------------------------------------------
7219   
7221   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
7223  *-------------------------------------------------------------------------------
7224  * Light-duty Vehicles for Personal Transport
7225  *-------------------------------------------------------------------------------
7226   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
7229  *-------------------------------------------------------------------------------
7230  * Road Freight Transport
7231  *-------------------------------------------------------------------------------
7233   
7234  Q_IN.fx('trbiofuel','trad_stfr',tfirst,n) = 1e-4;
7235  Q_IN.fx('advbiofuel','trad_stfr',tfirst,n) = 1e-4;
7236   
7237  *-------------------------------------------------------------------------------
7239   
7240   
7241   
7242   
7243   
7244   
7245  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
7247  *-------------------------------------------------------------------------------
7248  * Traditional Biomass
7249  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
7250  *  - require post_process to be launch before
7251  *-------------------------------------------------------------------------------
7252   
7254   
7255  * Optional modules
7256   
7257  * Policy modules
7258   
7259  * Calibration
7265   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algorithm.gms
7267  *-------------------------------------------------------------------------------
7268  * algorithm.gms
7269  *-------------------------------------------------------------------------------
7270   
7271  *-------------------------------------------------------------------------------
7272  * Initialization [sets, parameters and default values]
7273  *-------------------------------------------------------------------------------
7274   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\solve.gms
7276  *-------------------------------------------------------------------------------
7277  * Interface with the CONOPT Solver
7278  *-------------------------------------------------------------------------------
7280   
7281  * Number of iterations to check for slow convergence
7283  * Max improvement to check for slow convergence
7285  * Max number of attempts to retry solving an infeasible region*
7287   
7288  * Treat fixed variables as constant
7290   
7291  * Determine if gams links the solver using temporary files (Grid computing environment) or the memory (Threads)
7292  * More details at https://www.gams.com/latest/docs/UG_GamsCall.html#GAMSAOsolvelink
7299   
7300  * Solver tuning
7302   
7304   
7306  file opt / 'C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\conopt.opt' /;
7307  put opt;
7308  put 'rtredg=1e-12'/;
7309  put 'rtbndt=1e-12'/;
7310  putclose opt;
7312   
7314   
7315  *-------------------------------------------------------------------------------
7316  * Initialization
7317  *-------------------------------------------------------------------------------
7318  set retry  'Solve retries after infeasibilities' / 1*10 /;
7319  set irep   'Solution report entries'
7320             / status, objval, solvestat, modelstat, iterusd,
7321               resusd, numvar, numequ, numnz, numvarproj,
7322               numinfes, numnopt, domusd /;
7323  parameter solrep(clt,irep) 'Solution report data';
7324  parameter remh(clt) 'Remaining solve handles';
7325  set all_optimal(run,siter);
7326  all_optimal(run,siter)  = no;
7327  set all_feasible(run,siter);
7328  all_feasible(run,siter)  = no;
7329  parameters nb_clt_infes(run,siter), nb_clt_noopt(run,siter), nb_tot_infes(run,siter);
7330  set cproblem(clt);
7331  set cproblem2(clt);
7332   
7333  scalar rcjob;
7334   
7335  variables LAST_I, LAST_I_EN, LAST_I_RD, LAST_I_OUT, LAST_COST_FUEL;
7336   
7338   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
7340  *-------------------------------------------------------------------------------
7341  * Convergence algorithm
7342  *-------------------------------------------------------------------------------
7344   
7345  *-------------------------------------------------------------------------------
7347   
7348  parameters allerr(run,siter,*) 'error over iteration'
7349             errtrade(*,t) 'Sum over n of traded quantities';
7350   
7351  parameter price_iter(run,siter,*,t)  "Price accross iteration";
7352  parameter delta_price(run,siter,*,t) "Step price";
7353   
7354  parameters allrho_admm(run,siter,*,t) 'rho value of the ADMM algorithm over iteration';
7355  parameters allerr_admm(run,siter,*,t) 'error values algorithm over iteration by t';
7356   
7357  set mkt(*) 'market collector';
7358  mkt(c_mkt) = yes;
7359  mkt(f_mkt) = yes;
7360   
7361  set t_admm(*,t);
7362   
7363  set external(*);
7364  external(mkt)=yes;
7365  external(mkt)$(internal(mkt))=no;
7366   
7367  trading_t(mkt,t,n)$(tfix(t))=no;
7368   
7369  * Period to evaluate the convergence of markets (oil, c_mkt, co2) and negishi weights
7370  set tcheck(t);
7371  tcheck(t) = yes$(year(t) le yeoh and year(t) le 2100);
7372   
7373  parameter mbalance(run,siter,*,t)     "Balance of the market"
7374            trust_region(run,siter,*,t) "Maximal value on the absolute value of step price" ;
7375   
7376  * Parameters for the "equilibrium" method
7377  parameter price_eq(run,siter,*,t)     "Price according to the equilibrium algorithm"
7378            do_price_eq(run,siter,*,t)  "if 1, perform an equilibrium step"
7379            mprofit(run,siter,*,t,n);
7380   
7381  do_price_eq(run,siter,mkt,t)=no;
7382   
7383  * Parameters for the bissection method
7384  parameter mbalance_rhs(run,siter,*,t),
7385            mbalance_lhs(run,siter,*,t),
7386            price_rhs(run,siter,*,t),
7387            price_lhs(run,siter,*,t),
7388            do_bissection(run,siter,*,t);
7389   
7390  do_bissection(run,siter,mkt,t) = no;
7391   
7392  * COALITION CODE
7393  parameter w_negishi(t,n),
7394            w_negishi_iter(run,siter,t,n);
7395  w_negishi(t,n)$(sum(clt$(map_clt_n(clt,n) and negishi_coop(clt,n)),1) eq 0) = 1;
7396  w_negishi(t,n)$(sum(clt$(map_clt_n(clt,n) and negishi_coop(clt,n)),1) eq 1) = ((Q.l('CC',t,n)/l(t,n))**(eta))/(sum((nn,clt)$(map_clt_n(clt,n) and map_clt_n(clt,nn)),(Q.l('cc',t,nn)/l(t,nn))**(eta)));
7397  w_negishi_iter(run,siter,t,n)$(ord(siter) eq 1)= w_negishi(t,n);
7398   
7399  parameter m_consumption(t,clt);
7400  parameter m_eqq_cc(t,tp1,n),
7401            m_eq_mkt_clearing(*,t,clt),
7402            m_eq_mkt_clearing_oil(t,clt),
7403            m_eq_mkt_clearing_nip(*,t,clt);
7404   
7405  * initialization
7406  m_eq_mkt_clearing_oil(t,clt) = 0;
7407  m_eq_mkt_clearing_nip(c_mkt,t,clt) = 0;
7408   
7409  * Set default values if starting values are zeros
7410  loop((c_mkt,t)$((not tfix(t)) and (sum(n$trading_t(c_mkt,t,n),1)>0) and (CPRICE.l(c_mkt,t)) eq 0),
7411    CPRICE.l(c_mkt,t) = 30 * (1 + 0.03)**(year(t) - 2020) * c2co2 * 1e-3;
7412  );
7413  loop((f_mkt,t)$((not tfix(t)) and (sum(n$trading_t(f_mkt,t,n),1)>0) and (FPRICE.l(f_mkt,t)) eq 0),
7414    FPRICE.l(f_mkt,t) = 1e-5;
7415  );
7416   
7417  * Define default trust_region
7418  trust_region(run,siter, c_mkt, t) = 0.15 * CPRICE.l(c_mkt, t);
7419  trust_region(run,siter, f_mkt, t) = 0.15 * FPRICE.l(f_mkt, t);
7420   
7421  *-------------------------------------------------------------------------------
7423   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
7425  *-------------------------------------------------------------------------------
7426  * ADMM algorithm
7427  *-------------------------------------------------------------------------------
7429   
7430  *-------------------------------------------------------------------------------
7432   
7433  * ADMM residual balancing parameters
7434  ** Threshold for ratio between scaled residuals to trigger change in rho
7436  ** Multiplicative factor used to increase or decrease rho
7437  ** (use either number or "dynamic")
7439  ** If admm_tau is dynamic, max tau to use
7441  ** Order of magnitude between relative primal and dual residuals, oil market
7443  ** Order of magnitude between relative primal and dual residuals, nip market
7445   
7446  parameters
7447      u_admmiter(siter,*,t) 'ADMM dual variable scaled'
7448      x_admmiter(siter,*,t,n) 'Regional trade imbalance over iterations'
7449      xavg_admmiter(siter,*,t) 'Average trade imbalance over iterations'
7450      z_admm(*,t,n) 'ADMM copy variable of x used for trade clearing'
7451      z_admmiter(siter,*,t,n) 'ADMM copy variable of x used for trade clearing over iterations'
7452      r_admm(siter,*) 'ADMM primal residual'
7453      rrel_admm(siter,*) 'ADMM relative primal residual'
7454      s_admm(siter,*) 'ADMM dual residual'
7455      srel_admm(siter,*) 'ADMM relative dual residual'
7456      delta_price_off(t) 'Offset for proposed ADMM price to fit into WITCH price update framework'
7457      csi_admm(*) 'ADMM scaling coefficient to balance primal and dual residuals'
7458      admm_tau(siter,*) 'ADMM multiplicative factor used to increase or decrease rho'
7459  ;
7460   
7461  scalar admm_mu 'ADMM threshold for ratio between scaled residuals to trigger change in rho' / 5 /;
7462   
7463  csi_admm('oil') = 1e0;
7464  csi_admm('nip') = 1e0; # TOCHECK
7465   
7466  *-------------------------------------------------------------------------------
7468   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
7470  *-------------------------------------------------------------------------------
7471  * Report model progress
7472  *-------------------------------------------------------------------------------
7473   
7475   
7477   
7478  set iterrep / infes, nonopt, itertime, tottime /;
7479  set timeiterrep(iterrep) / itertime, tottime /;
7480   
7481  parameter infoiter(iterrep);
7482  parameter allinfoiter(run,siter,iterrep);
7483   
7484  file gdxput; # Device used to save variables to a different gdxs
7485   
7486  * File used for realtime errors plotting
7487  file errdat / 'C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\errors_emicap_usa_1e-3_500notusa.txt' /;
7488  errdat.ap=0;
7489  errdat.lj=1;
7490  errdat.tj=1;
7491   
7492  put errdat;
7493  * Time
7494  put 'Start: ',system.date,' 'system.time /;
7495  * To be run
7496  put 'To run: ';
7497  loop(to_run,
7498    put to_run.tl:0,' ';
7499  );
7500  put /;
7502  * Explanation sol
7503  put 'sol: [Y/N][clt nonopt][clt infes][tot infes]';
7504  put /;
7505  * Horizontal separator
7506  put '====';
7507  put '=====';
7508  loop(ierr,
7509  put '=========';
7510  );
7511  loop(timeiterrep,
7512  put '==========';
7513  );
7514  put /;
7515  * Column headers
7516  put 'iter';
7517  put '  sol';
7518  loop(ierr,
7519  put  ' ' ierr.tl:8;
7520  );
7521  loop(timeiterrep,
7522  put  ' ' timeiterrep.tl:9;
7523  );
7524  put /;
7525  * Convergence tolerances
7526  put '    ';
7527  put '     ';
7528  loop(ierr,
7529  put  '   <' errtol(ierr):5:3;
7530  );
7531  put  '         ';
7532  put /;
7533  putclose errdat;
7534  errdat.ap=1;
7535   
7537   
7538  *-------------------------------------------------------------------------------
7539  * Generation of the model's equations
7540  *-------------------------------------------------------------------------------
7541   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\model.gms
7543  *-------------------------------------------------------------------------------
7544  * Generate the model equations
7545  *-------------------------------------------------------------------------------
7546   
7549   
7550  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
7552  *-------------------------------------------------------------------------------
7553  * Call modules by order
7554  *-------------------------------------------------------------------------------
7558   
7559  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
7561  *-------------------------------------------------------------------------------
7562  * Algorithm
7563  *-------------------------------------------------------------------------------
7564   
7566   
7567  eqobj_c_brazil
7568   
7569  *-------------------------------------------------------------------------------
7571   
7572  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
7574  *-------------------------------------------------------------------------------
7575  * Time
7576  * - Temporal structure
7577  * - Fixed time periods
7578  * - States of the world
7579  *-------------------------------------------------------------------------------
7580   
7582   
7583  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
7585  *-------------------------------------------------------------------------------
7586  * Geographic dimension and mapping with countries
7587  *-------------------------------------------------------------------------------
7588   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
7591  *-------------------------------------------------------------------------------
7592  * Non-Cooperative Setup
7593  *
7594  * Each region is defined as an individual coalition.
7595  *
7596  *-------------------------------------------------------------------------------
7597   
7599   
7600  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
7602  *-------------------------------------------------------------------------------
7603  * Welfare
7604  *-------------------------------------------------------------------------------
7605   
7607   
7608  equtility_c_brazil
7609   
7610  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
7613  *-------------------------------------------------------------------------------
7614  * Economy
7615  * - Production and Consumption definition
7616  * - Top-level of the production function
7617  * Options:
7618  * --original_ssp=1 : original SSP population and GDP data
7619  *-------------------------------------------------------------------------------
7620   
7622   
7623  eqk_c_brazil
7624  eqq_cc_c_brazil
7625  eqq_fen_c_brazil
7626  eqq_y_c_brazil
7627   
7628  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
7631  *-------------------------------------------------------------------------------
7632  * Energy sector
7633  *-------------------------------------------------------------------------------
7634   
7636   
7637  eq_mkt_clearing_oil_c_brazil
7638  eqcost_pes_c_brazil
7639  eqcost_ses_c_brazil
7640  eqk_en_c_brazil
7641  eqq_ces_el_c_brazil
7642  eqq_ces_nelgas_c_brazil
7643  eqq_el2_c_brazil
7644  eqq_el_c_brazil
7645  eqq_elff_c_brazil
7646  eqq_en_c_brazil
7647  eqq_en_in_c_brazil
7648  eqq_en_mu_c_brazil
7649  eqq_en_tree_c_brazil
7650  eqq_nel_c_brazil
7651  eqq_nelog_c_brazil
7652  eqq_fuel_c_brazil
7653  eqq_elffren_c_brazil
7654   
7655  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
7658  *-------------------------------------------------------------------------------
7659  * Carbon Emissions
7660  * - Total CO2 emissions and CO2 Fossil fuel and Industry
7661  * - CO2 emission costs
7662  * - GHG permit market
7663  *-------------------------------------------------------------------------------
7664   
7666   
7667  eqq_emi_lim_c_brazil
7668  eqq_emi_tree_c_brazil
7669  eqq_emi_co2ffi_c_brazil
7670   
7671  eqcost_emi_co2_c_brazil
7672   
7673  eq_mkt_clearing_nip_c_brazil
7674   
7675  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
7678  *-------------------------------------------------------------------------------
7679  * Research & Development
7680  * Options:
7681  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
7682  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
7683  *-------------------------------------------------------------------------------
7684   
7686   
7687  eqk_rd_c_brazil
7688  eqspill_coop_c_brazil
7689  eqspill_lead_c_brazil
7690  eqspill_foll_c_brazil
7691  eqmcost_inv_back_c_brazil
7692  eqmcost_inv_back_lbd_c_brazil
7693   
7694  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
7697  *-------------------------------------------------------------------------------
7698  * Default Climate Policy Implementation
7699  *
7700  * Options:
7701  *    --policy={bau (default),ctax}
7702  *        Implement a climate policy setting
7703  *  [ --scen= ]
7704  *        Policy variant.
7705  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
7706  *          * XXX for a fixed percentage/yr (e.g. 5) growth
7707  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
7708  *  [ --ctax_year=2020 ]
7709  *        Starting year of the carbon tax
7710  *  [ --ctax_initial=30 ]
7711  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
7712  *
7713  *-------------------------------------------------------------------------------
7715   
7716  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
7718  *-------------------------------------------------------------------------------
7719  * Energy efficiency
7720  *-------------------------------------------------------------------------------
7721   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
7724  *-------------------------------------------------------------------------------
7725  * Hydro Power
7726  *-------------------------------------------------------------------------------
7727   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
7730  *-------------------------------------------------------------------------------
7731  * System Integration:
7732  * - Capacity constraint
7733  * - Flexibility constraint
7734  * - Grid Investment
7735  * - Capacity growth constraint
7736  *-------------------------------------------------------------------------------
7737   
7739   
7740  eqq_elintren_c_brazil
7741  eqflex_c_brazil
7742  eqk_en_grid_c_brazil
7743  eqk_en_grid_to_k_en_c_brazil
7744  eqfirm_capacity_c_brazil
7745  eqcap_growth_c_brazil
7746   
7747  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
7750  *-------------------------------------------------------------------------------
7751  * Nuclear power plants
7752  *-------------------------------------------------------------------------------
7753   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
7756  *-------------------------------------------------------------------------------
7757  * GHG module
7758  * - CH4 FFI + CH4 waste + CH4 open fires
7759  * - N2O FFI + N2O waste + N2O open fires
7760  *-------------------------------------------------------------------------------
7761   
7763   
7764  eqq_emi_waste_c_brazil
7765  eqq_emi_n2o_ffi_c_brazil
7766  eqq_emi_ch4_ffi_c_brazil
7767   
7768  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
7771  *-------------------------------------------------------------------------------
7772  * F-gases
7773  * - LLF
7774  * - SLF
7775  *-------------------------------------------------------------------------------
7776   
7778   
7779  eqq_emi_fgases_c_brazil
7780   
7781  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
7784  *-------------------------------------------------------------------------------
7785  * Landuse [simplified version of the land-use model]
7786  *-------------------------------------------------------------------------------
7787   
7789   
7790  eq_wbio_c_brazil
7791  eqcost_pes_wbio_c_brazil
7792   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
7795  *-------------------------------------------------------------------------------
7796  * Bioenergy power plant
7797  *-------------------------------------------------------------------------------
7798   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
7801  *-------------------------------------------------------------------------------
7802  * Traditional Biofuels
7803  * - Requires the precedence of mod_landuse
7804  *-------------------------------------------------------------------------------
7805   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
7808  *-------------------------------------------------------------------------------
7809  * Advanced biofuel
7810  * - Require the precedence of mod_landuse
7811  *-------------------------------------------------------------------------------
7812   
7814   
7815  eqq_en_lim_advbiofuel_c_brazil
7816  eqmcost_fuel_advbiofuel_c_brazil
7817   
7818  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
7821  *-------------------------------------------------------------------------------
7822  * Carbon Capture and Sequestration
7823  *-------------------------------------------------------------------------------
7824   
7826   
7827  eqq_emi_ccs_c_brazil
7828  eqcost_emi_sinks_c_brazil
7829  eq_stor_ccs_cum_c_brazil
7830  eq_emi_stor_ccs_c_brazil
7831  eq_emi_leak_ccs_c_brazil
7832   
7833  *-------------------------------------------------------------------------------
7835   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
7837  *-------------------------------------------------------------------------------
7838  * Coal for non-electric sectors
7839  * - Coke Plants
7840  * - Industrial and Commercial combined-heat-and-power (CHP)
7841  * - Others
7842  *-------------------------------------------------------------------------------
7843   
7845   
7846  eqcost_en_nelcoal_c_brazil
7847  eqq_ncoalabat_monotone_c_brazil
7848  eqq_en_nelcoalccs_max_c_brazil
7849   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
7852  *-------------------------------------------------------------------------------
7853  * Wind energy module
7854  * - onshore and offshore
7855  *-------------------------------------------------------------------------------
7856   
7858   
7859  eqq_en_mu_windon_c_brazil
7860  eqq_en_mu_windoff_c_brazil
7861  eqk_en_windon_c_brazil
7862  eqk_en_windoff_c_brazil
7863  eqq_en_windon_sum_c_brazil
7864  eqq_en_windoff_sum_c_brazil
7865  eqk_en_windon_sum_c_brazil
7866  eqk_en_windoff_sum_c_brazil
7867  eqi_en_windon_sum_c_brazil
7868  eqi_en_windoff_sum_c_brazil
7869   
7871   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
7873  *-------------------------------------------------------------------------------
7874  * Solar Powerplants (PV and CSP) to the electrical system
7875  *-------------------------------------------------------------------------------
7876   
7877  *-------------------------------------------------------------------------------
7879   
7880  eqq_en_mu_pv_c_brazil
7881  eqq_en_mu_csp_c_brazil
7882  eqk_en_pv_c_brazil
7883  eqk_en_csp_c_brazil
7884  eqq_en_pv_sum_c_brazil
7885  eqq_en_csp_sum_c_brazil
7886  eqk_en_pv_sum_c_brazil
7887  eqk_en_csp_sum_c_brazil
7888  eqi_en_pv_sum_c_brazil
7889  eqi_en_csp_sum_c_brazil
7890  eqk_en_solar_comp_c_brazil
7891   
7892  *-------------------------------------------------------------------------------
7894   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
7896  *-------------------------------------------------------------------------------
7897  * Technology development scenarios
7898  *-------------------------------------------------------------------------------
7899   
7901   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
7903  *-------------------------------------------------------------------------------
7904  * Oil Extraction
7905  * Options:
7906  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
7907  *-------------------------------------------------------------------------------
7908   
7910   
7911  eqoilcap_c_brazil
7912  eqoilprod_c_brazil
7913  eqq_out_oil_c_brazil
7914  eqcum_oil_c_brazil
7915  eqcost_oil_c_brazil
7916  eqi_oil_c_brazil
7917  eqi_out_oil_c_brazil
7918  eqq_emi_out_oil_c_brazil
7919   
7920  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
7923  *-------------------------------------------------------------------------------
7924  * Uranium Resources
7925  *-------------------------------------------------------------------------------
7926   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
7929  *-------------------------------------------------------------------------------
7930  * Gas Resources
7931  *-------------------------------------------------------------------------------
7932   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
7935  *-------------------------------------------------------------------------------
7936  * Coal Resources
7937  *-------------------------------------------------------------------------------
7938   
7940   
7941   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
7943  *-------------------------------------------------------------------------------
7944  * Climate
7945  *
7946  * Represents the climate
7947  * - based on the DICE model equations
7948  * - Radiative forcing for non CO2 ghgs
7949  * - parameters calibrated to reproduce MAGICC6.4 default response
7950  *
7951  *  Options:
7952  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
7953  * - $setglobal cooperate_on_climate {'YES','NO'}
7954  * - 'YES'(default): Countries within a coalition act in cooperation
7955  *   'NO': Countries within a coalition act individually
7956  *
7957  *-------------------------------------------------------------------------------
7958   
7960   
7962   
7963  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
7966  *-------------------------------------------------------------------------------
7967  * Long-run Damages from Climate Change
7968  * - Economic impacts
7969  * - Adaptation
7970  *-------------------------------------------------------------------------------
7971   
7973   
7975   
7976  *-------------------------------------------------------------------------------
7978   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
7980  *-------------------------------------------------------------------------------
7981  * Light-duty Vehicles for Personal Transport
7982  *-------------------------------------------------------------------------------
7983   
7985   
7986  eqnb_veh_c_brazil
7987  eqq_en_veh_c_brazil
7988  eqq_el_edv_c_brazil
7989  eqmcost_inv_hybrid_c_brazil
7990  eqmcost_inv_plghybrid_c_brazil
7991  eqmcost_inv_edv_c_brazil
7992  *** newcode
7993  eqq_inv_red_ban_c_brazil
7994  ***
7995  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
7998  *-------------------------------------------------------------------------------
7999  * Road Freight Transport
8000  *-------------------------------------------------------------------------------
8002   
8003  eqnb_frtveh_c_brazil
8004  eqq_en_frtveh_c_brazil
8005  eqq_el_frtedv_c_brazil
8006  eqmcost_inv_hbd_stfr_c_brazil
8007  eqmcost_inv_plghbd_stfr_c_brazil
8008  eqmcost_inv_edv_stfr_c_brazil
8009   
8010  *-------------------------------------------------------------------------------
8012   
8013   
8014   
8015   
8016   
8017   
8018  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
8020  *-------------------------------------------------------------------------------
8021  * Traditional Biomass
8022  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
8023  *  - require post_process to be launch before
8024  *-------------------------------------------------------------------------------
8025   
8027   
8028  * Optional modules
8029   
8030  * Policy modules
8031   
8032  * Calibration
8035  ;
8036   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
8038  *-------------------------------------------------------------------------------
8039  * Call modules by order
8040  *-------------------------------------------------------------------------------
8044   
8045  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
8047  *-------------------------------------------------------------------------------
8048  * Algorithm
8049  *-------------------------------------------------------------------------------
8050   
8052   
8054  * Add the component of the (maximized) objective function as required by the ADMM algorithm
8055  eqobj_c_brazil..
8056      OBJADMM =e= UTILITY -
8057          sum(t, rho_admm('oil',t) / 2 *
8058              sum(n$(map_clt_n('c_brazil',n) and trading_t('oil',t,n)),
8059                  power(
8060                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
8061                      x_admm('oil',t,n) +
8062                      xavg_admm('oil',t) +
8063                      u_admm('oil', t)
8064                  ,2)
8065              )) -
8066          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
8067              sum(n$(map_clt_n('c_brazil',n) and trading_t(c_mkt,t,n)),
8068                  power(
8069                      Q_EMI(c_mkt,t,n) -
8070                      x_admm(c_mkt,t,n) +
8071                      xavg_admm(c_mkt,t) +
8072                      u_admm(c_mkt,t)
8073                  ,2)
8074              ))
8075      ;
8077   
8078  *-------------------------------------------------------------------------------
8080   
8081  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
8083  *-------------------------------------------------------------------------------
8084  * Time
8085  * - Temporal structure
8086  * - Fixed time periods
8087  * - States of the world
8088  *-------------------------------------------------------------------------------
8089   
8091   
8092  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
8094  *-------------------------------------------------------------------------------
8095  * Geographic dimension and mapping with countries
8096  *-------------------------------------------------------------------------------
8097   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
8100  *-------------------------------------------------------------------------------
8101  * Non-Cooperative Setup
8102  *
8103  * Each region is defined as an individual coalition.
8104  *
8105  *-------------------------------------------------------------------------------
8106   
8108   
8109  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
8111  *-------------------------------------------------------------------------------
8112  * Welfare
8113  *-------------------------------------------------------------------------------
8114   
8116   
8117  * Objective function - Welfare to be maximized
8118  equtility_c_brazil..
8119      UTILITY =e=
8120   
8121  * Negishi SWF
8123   
8124  * Welfare functions based on CEBGE
8127                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
8128                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
8129                      ((sum(n$map_clt_n('c_brazil',n),
8130                        (l(t,n) / sum(nn$map_clt_n('c_brazil',nn), l(t,nn))) *
8131                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
8132                       )**(1 / (1 - gamma))
8133                      )**(1 - eta) ) +
8134                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
8135                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
8136                      ((sum(n$map_clt_n('c_brazil',n),
8137                        (l(t,n) / sum(nn$map_clt_n('c_brazil',nn), l(t,nn))) *
8138                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
8139                       )**(1 / (1 - gamma))
8140                      )**(1 - eta) )
8141                  )**(1/(1 - eta)) * 1e6
8144   
8145   
8146  ;
8147   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
8150  *-------------------------------------------------------------------------------
8151  * Economy
8152  * - Production and Consumption definition
8153  * - Top-level of the production function
8154  * Options:
8155  * --original_ssp=1 : original SSP population and GDP data
8156  *-------------------------------------------------------------------------------
8157   
8159   
8160  * Production
8161  eqq_y_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8162   
8163      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
8164                     ## Climate feedback on economy
8166                     ## Net cost of Primary and Secondary Energy Sources
8167                     - sum(fuel, COST_FUEL(fuel,t,n))
8168                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
8169                     - sum(cce, COST_EMI(cce,t,n))
8170                     ## Carbon tax
8171                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
8172                     ## Additionnal costs on gross product
8173                     - sum(ccy, COST_Y(ccy,t,n))
8174  ;
8175   
8176  * Consumption
8177  eqq_cc_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
8178      Q('cc',t,n) =e= Q('y',t,n)
8179                      ## Investments in goods g (final good, adaptation)
8180                      -sum(g, I(g,t,n))
8181                      ## Investments in r&d
8182                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
8183                      ## Investments in energy technlogies
8184                      -sum(jinv, I_EN(jinv,t,n))
8185                       ## Investments in grid infrastructures
8186                      - I_EN_GRID(t,n)
8187                      ## Investments in extraction sector
8188                      -sum(extract(f), I_OUT(f,t,n))
8189                      ## O&M for energy technlogies
8190                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
8191                      ## O&M for extraction
8192                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
8193                      ## Energy technology penalty costs
8194                      -sum(jpenalty(j), COST_EN(j,t,n))
8195  ;
8196   
8197  * Capital accumulation
8198  eqk_c_brazil(g,t,tp1,n)$(map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
8199      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
8200   
8201  * Energy services
8202  eqq_fen_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8203      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
8204   
8205  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
8208  *-------------------------------------------------------------------------------
8209  * Energy sector
8210  *-------------------------------------------------------------------------------
8211   
8213   
8214  *-------------------------------------------------------------------------------
8215  * Production - Energy sector
8216  *-------------------------------------------------------------------------------
8217   
8218  eqq_en_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8219      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
8220   
8221  *-------------------------------------------------------------------------------
8222  * Production - Electrical sector
8223  *-------------------------------------------------------------------------------
8224   
8225  eqq_el_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8226      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
8227   
8228  eqq_el2_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8229      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
8230   
8231  eqq_elffren_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8232      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
8233  eqq_elff_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8234      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
8235   
8236  eqq_ces_el_c_brazil(ices_el,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
8237      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
8238  ;
8239   
8240  *-------------------------------------------------------------------------------
8241  * Production - Non-electrical sector
8242  *-------------------------------------------------------------------------------
8243   
8244  eqq_nel_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8245      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
8246   
8247  eqq_nelog_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8248      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
8249  ;
8250  eqq_ces_nelgas_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8251      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
8252   
8253  *-------------------------------------------------------------------------------
8254  * PES and fuels
8255  *-------------------------------------------------------------------------------
8256   
8257  eqq_fuel_c_brazil(fuel,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
8258      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
8259   
8260  *-------------------------------------------------------------------------------
8261  * Cost
8262  *-------------------------------------------------------------------------------
8263   
8264  * Net cost of Primary Energy Supplies
8265  eqcost_pes_c_brazil(f,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
8266      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
8267                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
8268   
8269  * Net cost of Secondary Energy Supplies
8270  eqcost_ses_c_brazil(s,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8271      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
8272   
8273   
8274  *-------------------------------------------------------------------------------
8275  * Market balances
8276  *-------------------------------------------------------------------------------
8277   
8278  eq_mkt_clearing_oil_c_brazil(t,'c_brazil')$(internal('oil'))..
8279      sum( n$(map_clt_n('c_brazil',n) and trading_t('oil',t,n)),
8280          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
8281      ) =e= 0;
8282   
8283  *-------------------------------------------------------------------------------
8284  * New capital in the energy sector
8285  *-------------------------------------------------------------------------------
8286   
8287  * Electrical generation plants (new)
8288  eqk_en_c_brazil(jinv,t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
8289      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
8290                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
8291   
8292  *-------------------------------------------------------------------------------
8293  * ENERGY
8294  *-------------------------------------------------------------------------------
8295   
8296  * Capacity limits in the electrical sector
8297  eqq_en_mu_c_brazil(jel,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
8298      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
8299   
8300  * Efficiency of energy technology sector
8301  eqq_en_in_c_brazil(jfed,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
8302      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
8303                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
8304   
8305  * Energy generation "tree"
8306  eqq_en_tree_c_brazil(j,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
8307      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
8308   
8309  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
8312  *-------------------------------------------------------------------------------
8313  * Carbon Emissions
8314  * - Total CO2 emissions and CO2 Fossil fuel and Industry
8315  * - CO2 emission costs
8316  * - GHG permit market
8317  *-------------------------------------------------------------------------------
8318   
8320   
8321  * GHG emission cap
8322  eqq_emi_lim_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
8323      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
8324                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
8325   
8326  * Compute total and sectoral emissions
8327  eqq_emi_tree_c_brazil(t,n,e)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
8328      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
8329   
8330  * Industrial CO2 emissions
8331  eqq_emi_co2ffi_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8332      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
8333                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
8334                              # Emissions from biomass
8335                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
8336                              # Emissions from fuel extraction
8337                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
8338                              # Captured emissions
8339                              sum(sink, Q_EMI(sink,t,n));
8340   
8341  * CO2 emission costs
8342  eqcost_emi_co2_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8343      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
8344   
8345  * Emission permit market clearing for internal market
8346  eq_mkt_clearing_nip_c_brazil(c_mkt,t,'c_brazil')$(internal(c_mkt))..
8347      sum(n$(map_clt_n('c_brazil',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
8348   
8349  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
8352  *-------------------------------------------------------------------------------
8353  * Research & Development
8354  * Options:
8355  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
8356  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
8357  *-------------------------------------------------------------------------------
8358   
8360   
8361  * Knowledge stock accumulation
8362  eqk_rd_c_brazil(rd,t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
8363                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
8364                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
8365                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
8366                                        SPILL(rd,t,n)**rd_coef(rd,'d');
8367   
8368  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
8369  eqspill_coop_c_brazil(rd,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_brazil'))..
8370          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
8371                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_brazil',nn)), K_RD(rd,t,nn)) +
8372                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_brazil',nn))), K_RD.l(rd,t,nn))
8373                            ) *
8374                            (
8375                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_brazil',nn)), K_RD(rd,t,nn)) +
8376                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_brazil',nn))), K_RD.l(rd,t,nn))
8377                              ) - K_RD(rd,t,n)
8378                            );
8379   
8380  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
8381  eqspill_lead_c_brazil(rd,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_brazil')) and leadrd(rd,n))..
8382                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
8383   
8384  * No-cooperation : a follower sees is negative effect on the quantity he can grab
8385  eqspill_foll_c_brazil(rd,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_brazil')) and (not leadrd(rd,n)))..
8386                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
8387   
8388  *- Only LbR (without learning by doing)
8389  eqmcost_inv_back_c_brazil(jrd,t,tt,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
8390                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
8391                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
8392   
8393  *- LbR together with learning by doing ==> Two-factor learning curve
8394  eqmcost_inv_back_lbd_c_brazil(jrd,t,tt,tfirst,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
8395                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
8396                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
8397                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
8398   
8399  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
8402  *-------------------------------------------------------------------------------
8403  * Default Climate Policy Implementation
8404  *
8405  * Options:
8406  *    --policy={bau (default),ctax}
8407  *        Implement a climate policy setting
8408  *  [ --scen= ]
8409  *        Policy variant.
8410  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
8411  *          * XXX for a fixed percentage/yr (e.g. 5) growth
8412  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
8413  *  [ --ctax_year=2020 ]
8414  *        Starting year of the carbon tax
8415  *  [ --ctax_initial=30 ]
8416  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
8417  *
8418  *-------------------------------------------------------------------------------
8420   
8421  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
8423  *-------------------------------------------------------------------------------
8424  * Energy efficiency
8425  *-------------------------------------------------------------------------------
8426   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
8429  *-------------------------------------------------------------------------------
8430  * Hydro Power
8431  *-------------------------------------------------------------------------------
8432   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
8435  *-------------------------------------------------------------------------------
8436  * System Integration:
8437  * - Capacity constraint
8438  * - Flexibility constraint
8439  * - Grid Investment
8440  * - Capacity growth constraint
8441  *-------------------------------------------------------------------------------
8442   
8444   
8445   
8446  * Renewable CES
8447   
8448  * Definition of the renewable CES
8449  eqq_elintren_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8450      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
8451   
8452  * Capacity constraint
8453   
8455  eqfirm_capacity_c_brazil(t,n)$(map_clt_n('c_brazil',n) and (not tfix(t)) and year(t) gt 2005)..
8456                   sum(jel_firm, K_EN(jel_firm,t,n))
8457                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
8458                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
8459                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
8460                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
8461                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
8462                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
8463                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
8464                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
8465                                       ) / yearly_hours
8466  ;
8468   
8469  * Flexibility constraint
8470  eqflex_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8471          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
8472                             ( Q_EN('el',t,n) -
8473                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
8474                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
8475                             ) * flex_coeff('load')
8476  ;
8477   
8478  * Grid
8479   
8480  ** Grid depreciation and investments
8481  eqk_en_grid_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
8482                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
8483                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
8484   
8485  ** Grid adjustment to power capacity
8486  eqk_en_grid_to_k_en_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8487                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
8488                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
8489                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
8490                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
8491                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
8492                                     ) / grid_cost +
8493                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
8494                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
8495                                      K_EN('elcsp',t,n);
8496  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
8497   
8498  * Capacity growth constraint
8499  eqcap_growth_c_brazil(jinv,t,tp1,tp2,n)$((map_clt_n('c_brazil',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
8500                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
8501                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
8502   
8503  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
8506  *-------------------------------------------------------------------------------
8507  * Nuclear power plants
8508  *-------------------------------------------------------------------------------
8509   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
8512  *-------------------------------------------------------------------------------
8513  * GHG module
8514  * - CH4 FFI + CH4 waste + CH4 open fires
8515  * - N2O FFI + N2O waste + N2O open fires
8516  *-------------------------------------------------------------------------------
8517   
8519   
8520  * CH4, N2O waste emissions
8521  eqq_emi_waste_c_brazil(waste,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
8522                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
8523   
8524  * n2o FFI
8525  eqq_emi_n2o_ffi_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
8526    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
8527                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
8528                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
8529                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
8530                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
8531                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
8532                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
8533                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
8534                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
8535                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
8536                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
8537                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
8538                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
8539                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
8540                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
8541                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
8542                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
8543                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
8544                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
8545                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
8546                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
8547                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
8548                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
8549                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
8550                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
8551                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
8552                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
8553                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
8554                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
8555                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
8556                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
8557   
8558  * ch4 FFI
8559  eqq_emi_ch4_ffi_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
8560    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
8563  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
8564  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
8565                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
8566                             smax(tt$(year(tt) eq 2015),
8567                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
8570  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
8571  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
8572                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
8573   
8574  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
8577  *-------------------------------------------------------------------------------
8578  * F-gases
8579  * - LLF
8580  * - SLF
8581  *-------------------------------------------------------------------------------
8582   
8584   
8585  * F-gases emissions
8586  eqq_emi_fgases_c_brazil(fgases,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
8587                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
8588   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
8591  *-------------------------------------------------------------------------------
8592  * Landuse [simplified version of the land-use model]
8593  *-------------------------------------------------------------------------------
8594   
8596   
8597  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
8598  eq_wbio_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8599      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
8600   
8602  * Cost of all woody biomass produced for advanced biofuels and woody biomass
8603  eqcost_pes_wbio_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8604      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
8606   
8607  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
8610  *-------------------------------------------------------------------------------
8611  * Bioenergy power plant
8612  *-------------------------------------------------------------------------------
8613   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
8616  *-------------------------------------------------------------------------------
8617  * Traditional Biofuels
8618  * - Requires the precedence of mod_landuse
8619  *-------------------------------------------------------------------------------
8620   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
8623  *-------------------------------------------------------------------------------
8624  * Advanced biofuel
8625  * - Require the precedence of mod_landuse
8626  *-------------------------------------------------------------------------------
8627   
8629   
8630  * Limitations for nel backstops
8631  eqq_en_lim_advbiofuel_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
8632               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
8633               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
8634   
8635  * Peculiarity of advbiofuel
8636  eqmcost_fuel_advbiofuel_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8637                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
8638   
8639  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
8642  *-------------------------------------------------------------------------------
8643  * Carbon Capture and Sequestration
8644  *-------------------------------------------------------------------------------
8645   
8647   
8648  eqq_emi_ccs_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8649                  Q_EMI('ccs_plant',t,n) =e=
8650                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
8651                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
8652  ;
8653   
8654  eqcost_emi_sinks_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8655                  COST_EMI('ccs_plant',t,n) =e=
8656                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
8657                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
8658  ;
8659   
8660  eq_stor_ccs_cum_c_brazil(ccs_stor,tp1,t,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
8661                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
8662  ;
8663   
8664  eq_emi_stor_ccs_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8665                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
8666  ;
8667   
8668  eq_emi_leak_ccs_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8669                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
8670   
8671  *-------------------------------------------------------------------------------
8673   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
8675  *-------------------------------------------------------------------------------
8676  * Coal for non-electric sectors
8677  * - Coke Plants
8678  * - Industrial and Commercial combined-heat-and-power (CHP)
8679  * - Others
8680  *-------------------------------------------------------------------------------
8681   
8683   
8684  eqcost_en_nelcoal_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8685           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
8686                                          nelcoal_max_abat(t,n) *
8687                                          (nelcoal_cmac(n,'a') *
8688                                            Q_EN('nelcoalabat',t,n) /
8689                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
8690                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
8691                                              (exp(nelcoal_cmac(n,'c') *
8692                                                (Q_EN('nelcoalabat',t,n)/
8693                                                  (nelcoal_max_abat(t,n) *
8694                                                      nelcoal_baseline(t,n))
8695                                                  ) - 1 )
8696                                              )
8697                                          );
8698   
8699  eqq_ncoalabat_monotone_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
8700          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
8701   
8702  * ensure Q_EN is lower than K_EN for CCS as not in jel
8703  eqq_en_nelcoalccs_max_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8704          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
8705   
8706  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
8709  *-------------------------------------------------------------------------------
8710  * Wind energy module
8711  * - onshore and offshore
8712  *-------------------------------------------------------------------------------
8713   
8715   
8716  * Capacity limits in the wind onshore electrical sector
8717  eqq_en_mu_windon_c_brazil(wind_dist,wind_class,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
8718      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
8719   
8720  * Capacity limits in the wind offshore electrical sector
8721  eqq_en_mu_windoff_c_brazil(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
8722      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
8723   
8724  * Wind onshore electrical generation plants (new)
8725  eqk_en_windon_c_brazil(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
8726      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
8727                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
8728   
8729  * Wind offshore electrical generation plants (new)
8730  eqk_en_windoff_c_brazil(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
8731      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
8732                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
8733   
8734  * Total onshore wind energy production
8735  eqq_en_windon_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8736                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
8737   
8738  * Total offshore wind energy production
8739  eqq_en_windoff_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8740                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
8741   
8742  * Total onshore wind capacity
8743  eqk_en_windon_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8744                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
8745   
8746  * Total offshore wind capacity
8747  eqk_en_windoff_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8748                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
8749   
8750  * Total onshore wind investment
8751  eqi_en_windon_sum_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
8752                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
8753   
8754  * Total offshore wind investment
8755  eqi_en_windoff_sum_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
8756                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
8757   
8758  *-------------------------------------------------------------------------------
8760   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
8762  *-------------------------------------------------------------------------------
8763  * Solar Powerplants (PV and CSP) to the electrical system
8764  *-------------------------------------------------------------------------------
8765   
8766  *-------------------------------------------------------------------------------
8768   
8769   
8770  * Capacity limits in the pv electrical sector
8771  eqq_en_mu_pv_c_brazil(solar_dist,solar_class,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
8772                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
8773   
8774  * Capacity limits in the csp electrical sector
8775  eqq_en_mu_csp_c_brazil(solar_dist,solar_class,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
8776                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
8777   
8778  * PV electrical generation plants (new)
8779  eqk_en_pv_c_brazil(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
8780                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
8781                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
8782   
8783  * CSP electrical generation plants (new)
8784  eqk_en_csp_c_brazil(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
8785                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
8786                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
8787   
8788  * Total PV energy production
8789  eqq_en_pv_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8790                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
8791   
8792  * Total CSP energy production
8793  eqq_en_csp_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8794                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
8795   
8796  * Total PV capacity
8797  eqk_en_pv_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8798                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
8799   
8800  * Total CSP capacity
8801  eqk_en_csp_sum_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8802                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
8803   
8804  * Total PV investment
8805  eqi_en_pv_sum_c_brazil(t,tp1,n)$(map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
8806                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
8807   
8808  * Total CSP investment
8809  eqi_en_csp_sum_c_brazil(t,tp1,n)$(map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
8810                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
8811   
8812  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
8813  eqk_en_solar_comp_c_brazil(t,n,solar_dist)$(map_clt_n('c_brazil',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
8814                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
8815                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
8816   
8817   
8818   
8819  *-------------------------------------------------------------------------------
8821   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
8823  *-------------------------------------------------------------------------------
8824  * Technology development scenarios
8825  *-------------------------------------------------------------------------------
8826   
8828   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
8830  *-------------------------------------------------------------------------------
8831  * Oil Extraction
8832  * Options:
8833  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
8834  *-------------------------------------------------------------------------------
8835   
8837   
8838  * Capacity
8839  eqoilcap_c_brazil(t,tp1,n,oilg)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
8840      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
8841   
8842  * Production
8843  eqoilprod_c_brazil(t,tp1,n,oilg)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
8844      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
8845   
8846  eqq_out_oil_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8847      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
8848   
8849  * Cumulative production
8850  eqcum_oil_c_brazil(t,tp1,n,oilg)$((map_clt_n('c_brazil',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
8851      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
8852   
8853  * Cost
8854  eqcost_oil_c_brazil(t,tp1,n,oilg)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
8855      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
8856                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
8857                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
8858   
8859  * Investments
8860  eqi_oil_c_brazil(t,tp1,n,oilg)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
8861      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
8862   
8863  * Total investment
8864  eqi_out_oil_c_brazil(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
8865      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
8866   
8867  * Emissions
8868  eqq_emi_out_oil_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8869      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
8870   
8871  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
8874  *-------------------------------------------------------------------------------
8875  * Uranium Resources
8876  *-------------------------------------------------------------------------------
8877   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
8880  *-------------------------------------------------------------------------------
8881  * Gas Resources
8882  *-------------------------------------------------------------------------------
8883   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
8886  *-------------------------------------------------------------------------------
8887  * Coal Resources
8888  *-------------------------------------------------------------------------------
8889   
8891   
8892   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
8894  *-------------------------------------------------------------------------------
8895  * Climate
8896  *
8897  * Represents the climate
8898  * - based on the DICE model equations
8899  * - Radiative forcing for non CO2 ghgs
8900  * - parameters calibrated to reproduce MAGICC6.4 default response
8901  *
8902  *  Options:
8903  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
8904  * - $setglobal cooperate_on_climate {'YES','NO'}
8905  * - 'YES'(default): Countries within a coalition act in cooperation
8906  *   'NO': Countries within a coalition act individually
8907  *
8908  *-------------------------------------------------------------------------------
8909   
8911   
8913   
8914  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
8917  *-------------------------------------------------------------------------------
8918  * Long-run Damages from Climate Change
8919  * - Economic impacts
8920  * - Adaptation
8921  *-------------------------------------------------------------------------------
8922   
8924   
8926   
8927  *-------------------------------------------------------------------------------
8929   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
8931  *-------------------------------------------------------------------------------
8932  * Light-duty Vehicles for Personal Transport
8933  *-------------------------------------------------------------------------------
8934   
8936   
8937  *** newcode
8938  eqq_inv_red_ban_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8939      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
8940   
8941  ***
8942  *- Number of light duty vehicles
8943  eqnb_veh_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8944      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
8945   
8946  *- Yearly energy demand of vehicles
8947  eqq_en_veh_c_brazil(jveh,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8948      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
8949   
8950  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
8951  eqq_el_edv_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8952      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
8953   
8954  *- Investment cost for hybrid vehicles
8955  eqmcost_inv_hybrid_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
8956                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
8957   
8958  *- Investment cost for plug-in hybrid vehicles
8959  eqmcost_inv_plghybrid_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
8960                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
8961   
8962  *- Investment cost for electric drive vehicles
8963  eqmcost_inv_edv_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
8964                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
8965   
8966  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
8969  *-------------------------------------------------------------------------------
8970  * Road Freight Transport
8971  *-------------------------------------------------------------------------------
8973   
8974  *-  Number of freight vehicles
8975  eqnb_frtveh_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
8976                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
8977   
8978  *-  Yearly fuel consumption of freight vehicles
8979  eqq_en_frtveh_c_brazil(jfrt,t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8980                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
8981   
8982  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
8983  eqq_el_frtedv_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)))..
8984                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
8985   
8986  *-  Investment cost for hbd_stfr vehicle
8987  eqmcost_inv_hbd_stfr_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
8988                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
8989   
8990  *-  Investment cost for plug-in hbd_stfr vehicle
8991  eqmcost_inv_plghbd_stfr_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
8992                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
8993   
8994  *-  Investment cost for electric drive vehicle
8995  eqmcost_inv_edv_stfr_c_brazil(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
8996                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
8997   
8998  *-------------------------------------------------------------------------------
9000   
9001   
9002   
9003   
9004   
9005   
9006  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
9008  *-------------------------------------------------------------------------------
9009  * Traditional Biomass
9010  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
9011  *  - require post_process to be launch before
9012  *-------------------------------------------------------------------------------
9013   
9015   
9016  * Optional modules
9017   
9018  * Policy modules
9019   
9020  * Calibration
9023   
9024   
9025  model witch_c_brazil /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
9027  *-------------------------------------------------------------------------------
9028  * Call modules by order
9029  *-------------------------------------------------------------------------------
9033   
9034  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
9036  *-------------------------------------------------------------------------------
9037  * Algorithm
9038  *-------------------------------------------------------------------------------
9039   
9041   
9042  eqobj_c_brazil
9043   
9044  *-------------------------------------------------------------------------------
9046   
9047  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
9049  *-------------------------------------------------------------------------------
9050  * Time
9051  * - Temporal structure
9052  * - Fixed time periods
9053  * - States of the world
9054  *-------------------------------------------------------------------------------
9055   
9057   
9058  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
9060  *-------------------------------------------------------------------------------
9061  * Geographic dimension and mapping with countries
9062  *-------------------------------------------------------------------------------
9063   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
9066  *-------------------------------------------------------------------------------
9067  * Non-Cooperative Setup
9068  *
9069  * Each region is defined as an individual coalition.
9070  *
9071  *-------------------------------------------------------------------------------
9072   
9074   
9075  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
9077  *-------------------------------------------------------------------------------
9078  * Welfare
9079  *-------------------------------------------------------------------------------
9080   
9082   
9083  equtility_c_brazil
9084   
9085  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
9088  *-------------------------------------------------------------------------------
9089  * Economy
9090  * - Production and Consumption definition
9091  * - Top-level of the production function
9092  * Options:
9093  * --original_ssp=1 : original SSP population and GDP data
9094  *-------------------------------------------------------------------------------
9095   
9097   
9098  eqk_c_brazil
9099  eqq_cc_c_brazil
9100  eqq_fen_c_brazil
9101  eqq_y_c_brazil
9102   
9103  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
9106  *-------------------------------------------------------------------------------
9107  * Energy sector
9108  *-------------------------------------------------------------------------------
9109   
9111   
9112  eq_mkt_clearing_oil_c_brazil
9113  eqcost_pes_c_brazil
9114  eqcost_ses_c_brazil
9115  eqk_en_c_brazil
9116  eqq_ces_el_c_brazil
9117  eqq_ces_nelgas_c_brazil
9118  eqq_el2_c_brazil
9119  eqq_el_c_brazil
9120  eqq_elff_c_brazil
9121  eqq_en_c_brazil
9122  eqq_en_in_c_brazil
9123  eqq_en_mu_c_brazil
9124  eqq_en_tree_c_brazil
9125  eqq_nel_c_brazil
9126  eqq_nelog_c_brazil
9127  eqq_fuel_c_brazil
9128  eqq_elffren_c_brazil
9129   
9130  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
9133  *-------------------------------------------------------------------------------
9134  * Carbon Emissions
9135  * - Total CO2 emissions and CO2 Fossil fuel and Industry
9136  * - CO2 emission costs
9137  * - GHG permit market
9138  *-------------------------------------------------------------------------------
9139   
9141   
9142  eqq_emi_lim_c_brazil
9143  eqq_emi_tree_c_brazil
9144  eqq_emi_co2ffi_c_brazil
9145   
9146  eqcost_emi_co2_c_brazil
9147   
9148  eq_mkt_clearing_nip_c_brazil
9149   
9150  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
9153  *-------------------------------------------------------------------------------
9154  * Research & Development
9155  * Options:
9156  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
9157  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
9158  *-------------------------------------------------------------------------------
9159   
9161   
9162  eqk_rd_c_brazil
9163  eqspill_coop_c_brazil
9164  eqspill_lead_c_brazil
9165  eqspill_foll_c_brazil
9166  eqmcost_inv_back_c_brazil
9167  eqmcost_inv_back_lbd_c_brazil
9168   
9169  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
9172  *-------------------------------------------------------------------------------
9173  * Default Climate Policy Implementation
9174  *
9175  * Options:
9176  *    --policy={bau (default),ctax}
9177  *        Implement a climate policy setting
9178  *  [ --scen= ]
9179  *        Policy variant.
9180  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
9181  *          * XXX for a fixed percentage/yr (e.g. 5) growth
9182  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
9183  *  [ --ctax_year=2020 ]
9184  *        Starting year of the carbon tax
9185  *  [ --ctax_initial=30 ]
9186  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
9187  *
9188  *-------------------------------------------------------------------------------
9190   
9191  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
9193  *-------------------------------------------------------------------------------
9194  * Energy efficiency
9195  *-------------------------------------------------------------------------------
9196   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
9199  *-------------------------------------------------------------------------------
9200  * Hydro Power
9201  *-------------------------------------------------------------------------------
9202   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
9205  *-------------------------------------------------------------------------------
9206  * System Integration:
9207  * - Capacity constraint
9208  * - Flexibility constraint
9209  * - Grid Investment
9210  * - Capacity growth constraint
9211  *-------------------------------------------------------------------------------
9212   
9214   
9215  eqq_elintren_c_brazil
9216  eqflex_c_brazil
9217  eqk_en_grid_c_brazil
9218  eqk_en_grid_to_k_en_c_brazil
9219  eqfirm_capacity_c_brazil
9220  eqcap_growth_c_brazil
9221   
9222  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
9225  *-------------------------------------------------------------------------------
9226  * Nuclear power plants
9227  *-------------------------------------------------------------------------------
9228   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
9231  *-------------------------------------------------------------------------------
9232  * GHG module
9233  * - CH4 FFI + CH4 waste + CH4 open fires
9234  * - N2O FFI + N2O waste + N2O open fires
9235  *-------------------------------------------------------------------------------
9236   
9238   
9239  eqq_emi_waste_c_brazil
9240  eqq_emi_n2o_ffi_c_brazil
9241  eqq_emi_ch4_ffi_c_brazil
9242   
9243  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
9246  *-------------------------------------------------------------------------------
9247  * F-gases
9248  * - LLF
9249  * - SLF
9250  *-------------------------------------------------------------------------------
9251   
9253   
9254  eqq_emi_fgases_c_brazil
9255   
9256  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
9259  *-------------------------------------------------------------------------------
9260  * Landuse [simplified version of the land-use model]
9261  *-------------------------------------------------------------------------------
9262   
9264   
9265  eq_wbio_c_brazil
9266  eqcost_pes_wbio_c_brazil
9267   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
9270  *-------------------------------------------------------------------------------
9271  * Bioenergy power plant
9272  *-------------------------------------------------------------------------------
9273   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
9276  *-------------------------------------------------------------------------------
9277  * Traditional Biofuels
9278  * - Requires the precedence of mod_landuse
9279  *-------------------------------------------------------------------------------
9280   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
9283  *-------------------------------------------------------------------------------
9284  * Advanced biofuel
9285  * - Require the precedence of mod_landuse
9286  *-------------------------------------------------------------------------------
9287   
9289   
9290  eqq_en_lim_advbiofuel_c_brazil
9291  eqmcost_fuel_advbiofuel_c_brazil
9292   
9293  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
9296  *-------------------------------------------------------------------------------
9297  * Carbon Capture and Sequestration
9298  *-------------------------------------------------------------------------------
9299   
9301   
9302  eqq_emi_ccs_c_brazil
9303  eqcost_emi_sinks_c_brazil
9304  eq_stor_ccs_cum_c_brazil
9305  eq_emi_stor_ccs_c_brazil
9306  eq_emi_leak_ccs_c_brazil
9307   
9308  *-------------------------------------------------------------------------------
9310   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
9312  *-------------------------------------------------------------------------------
9313  * Coal for non-electric sectors
9314  * - Coke Plants
9315  * - Industrial and Commercial combined-heat-and-power (CHP)
9316  * - Others
9317  *-------------------------------------------------------------------------------
9318   
9320   
9321  eqcost_en_nelcoal_c_brazil
9322  eqq_ncoalabat_monotone_c_brazil
9323  eqq_en_nelcoalccs_max_c_brazil
9324   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
9327  *-------------------------------------------------------------------------------
9328  * Wind energy module
9329  * - onshore and offshore
9330  *-------------------------------------------------------------------------------
9331   
9333   
9334  eqq_en_mu_windon_c_brazil
9335  eqq_en_mu_windoff_c_brazil
9336  eqk_en_windon_c_brazil
9337  eqk_en_windoff_c_brazil
9338  eqq_en_windon_sum_c_brazil
9339  eqq_en_windoff_sum_c_brazil
9340  eqk_en_windon_sum_c_brazil
9341  eqk_en_windoff_sum_c_brazil
9342  eqi_en_windon_sum_c_brazil
9343  eqi_en_windoff_sum_c_brazil
9344   
9346   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
9348  *-------------------------------------------------------------------------------
9349  * Solar Powerplants (PV and CSP) to the electrical system
9350  *-------------------------------------------------------------------------------
9351   
9352  *-------------------------------------------------------------------------------
9354   
9355  eqq_en_mu_pv_c_brazil
9356  eqq_en_mu_csp_c_brazil
9357  eqk_en_pv_c_brazil
9358  eqk_en_csp_c_brazil
9359  eqq_en_pv_sum_c_brazil
9360  eqq_en_csp_sum_c_brazil
9361  eqk_en_pv_sum_c_brazil
9362  eqk_en_csp_sum_c_brazil
9363  eqi_en_pv_sum_c_brazil
9364  eqi_en_csp_sum_c_brazil
9365  eqk_en_solar_comp_c_brazil
9366   
9367  *-------------------------------------------------------------------------------
9369   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
9371  *-------------------------------------------------------------------------------
9372  * Technology development scenarios
9373  *-------------------------------------------------------------------------------
9374   
9376   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
9378  *-------------------------------------------------------------------------------
9379  * Oil Extraction
9380  * Options:
9381  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
9382  *-------------------------------------------------------------------------------
9383   
9385   
9386  eqoilcap_c_brazil
9387  eqoilprod_c_brazil
9388  eqq_out_oil_c_brazil
9389  eqcum_oil_c_brazil
9390  eqcost_oil_c_brazil
9391  eqi_oil_c_brazil
9392  eqi_out_oil_c_brazil
9393  eqq_emi_out_oil_c_brazil
9394   
9395  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
9398  *-------------------------------------------------------------------------------
9399  * Uranium Resources
9400  *-------------------------------------------------------------------------------
9401   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
9404  *-------------------------------------------------------------------------------
9405  * Gas Resources
9406  *-------------------------------------------------------------------------------
9407   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
9410  *-------------------------------------------------------------------------------
9411  * Coal Resources
9412  *-------------------------------------------------------------------------------
9413   
9415   
9416   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
9418  *-------------------------------------------------------------------------------
9419  * Climate
9420  *
9421  * Represents the climate
9422  * - based on the DICE model equations
9423  * - Radiative forcing for non CO2 ghgs
9424  * - parameters calibrated to reproduce MAGICC6.4 default response
9425  *
9426  *  Options:
9427  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
9428  * - $setglobal cooperate_on_climate {'YES','NO'}
9429  * - 'YES'(default): Countries within a coalition act in cooperation
9430  *   'NO': Countries within a coalition act individually
9431  *
9432  *-------------------------------------------------------------------------------
9433   
9435   
9437   
9438  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
9441  *-------------------------------------------------------------------------------
9442  * Long-run Damages from Climate Change
9443  * - Economic impacts
9444  * - Adaptation
9445  *-------------------------------------------------------------------------------
9446   
9448   
9450   
9451  *-------------------------------------------------------------------------------
9453   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
9455  *-------------------------------------------------------------------------------
9456  * Light-duty Vehicles for Personal Transport
9457  *-------------------------------------------------------------------------------
9458   
9460   
9461  eqnb_veh_c_brazil
9462  eqq_en_veh_c_brazil
9463  eqq_el_edv_c_brazil
9464  eqmcost_inv_hybrid_c_brazil
9465  eqmcost_inv_plghybrid_c_brazil
9466  eqmcost_inv_edv_c_brazil
9467  *** newcode
9468  eqq_inv_red_ban_c_brazil
9469  ***
9470  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
9473  *-------------------------------------------------------------------------------
9474  * Road Freight Transport
9475  *-------------------------------------------------------------------------------
9477   
9478  eqnb_frtveh_c_brazil
9479  eqq_en_frtveh_c_brazil
9480  eqq_el_frtedv_c_brazil
9481  eqmcost_inv_hbd_stfr_c_brazil
9482  eqmcost_inv_plghbd_stfr_c_brazil
9483  eqmcost_inv_edv_stfr_c_brazil
9484   
9485  *-------------------------------------------------------------------------------
9487   
9488   
9489   
9490   
9491   
9492   
9493  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
9495  *-------------------------------------------------------------------------------
9496  * Traditional Biomass
9497  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
9498  *  - require post_process to be launch before
9499  *-------------------------------------------------------------------------------
9500   
9502   
9503  * Optional modules
9504   
9505  * Policy modules
9506   
9507  * Calibration
9510  /;
9511   
9512  witch_c_brazil.optfile=1;   # the option file solvername.opt is to be used
9513  witch_c_brazil.holdfixed=1; # treat fixed values as constant
9514  witch_c_brazil.scaleopt=1;  # Use scaling for better gradients estimation
9515  witch_c_brazil.solvelink=3; # Use parallel or sequential solving
9516   
9521   
9522  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
9524  *-------------------------------------------------------------------------------
9525  * Call modules by order
9526  *-------------------------------------------------------------------------------
9530   
9531  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
9533  *-------------------------------------------------------------------------------
9534  * Algorithm
9535  *-------------------------------------------------------------------------------
9536   
9538   
9539  eqobj_c_canada
9540   
9541  *-------------------------------------------------------------------------------
9543   
9544  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
9546  *-------------------------------------------------------------------------------
9547  * Time
9548  * - Temporal structure
9549  * - Fixed time periods
9550  * - States of the world
9551  *-------------------------------------------------------------------------------
9552   
9554   
9555  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
9557  *-------------------------------------------------------------------------------
9558  * Geographic dimension and mapping with countries
9559  *-------------------------------------------------------------------------------
9560   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
9563  *-------------------------------------------------------------------------------
9564  * Non-Cooperative Setup
9565  *
9566  * Each region is defined as an individual coalition.
9567  *
9568  *-------------------------------------------------------------------------------
9569   
9571   
9572  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
9574  *-------------------------------------------------------------------------------
9575  * Welfare
9576  *-------------------------------------------------------------------------------
9577   
9579   
9580  equtility_c_canada
9581   
9582  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
9585  *-------------------------------------------------------------------------------
9586  * Economy
9587  * - Production and Consumption definition
9588  * - Top-level of the production function
9589  * Options:
9590  * --original_ssp=1 : original SSP population and GDP data
9591  *-------------------------------------------------------------------------------
9592   
9594   
9595  eqk_c_canada
9596  eqq_cc_c_canada
9597  eqq_fen_c_canada
9598  eqq_y_c_canada
9599   
9600  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
9603  *-------------------------------------------------------------------------------
9604  * Energy sector
9605  *-------------------------------------------------------------------------------
9606   
9608   
9609  eq_mkt_clearing_oil_c_canada
9610  eqcost_pes_c_canada
9611  eqcost_ses_c_canada
9612  eqk_en_c_canada
9613  eqq_ces_el_c_canada
9614  eqq_ces_nelgas_c_canada
9615  eqq_el2_c_canada
9616  eqq_el_c_canada
9617  eqq_elff_c_canada
9618  eqq_en_c_canada
9619  eqq_en_in_c_canada
9620  eqq_en_mu_c_canada
9621  eqq_en_tree_c_canada
9622  eqq_nel_c_canada
9623  eqq_nelog_c_canada
9624  eqq_fuel_c_canada
9625  eqq_elffren_c_canada
9626   
9627  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
9630  *-------------------------------------------------------------------------------
9631  * Carbon Emissions
9632  * - Total CO2 emissions and CO2 Fossil fuel and Industry
9633  * - CO2 emission costs
9634  * - GHG permit market
9635  *-------------------------------------------------------------------------------
9636   
9638   
9639  eqq_emi_lim_c_canada
9640  eqq_emi_tree_c_canada
9641  eqq_emi_co2ffi_c_canada
9642   
9643  eqcost_emi_co2_c_canada
9644   
9645  eq_mkt_clearing_nip_c_canada
9646   
9647  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
9650  *-------------------------------------------------------------------------------
9651  * Research & Development
9652  * Options:
9653  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
9654  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
9655  *-------------------------------------------------------------------------------
9656   
9658   
9659  eqk_rd_c_canada
9660  eqspill_coop_c_canada
9661  eqspill_lead_c_canada
9662  eqspill_foll_c_canada
9663  eqmcost_inv_back_c_canada
9664  eqmcost_inv_back_lbd_c_canada
9665   
9666  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
9669  *-------------------------------------------------------------------------------
9670  * Default Climate Policy Implementation
9671  *
9672  * Options:
9673  *    --policy={bau (default),ctax}
9674  *        Implement a climate policy setting
9675  *  [ --scen= ]
9676  *        Policy variant.
9677  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
9678  *          * XXX for a fixed percentage/yr (e.g. 5) growth
9679  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
9680  *  [ --ctax_year=2020 ]
9681  *        Starting year of the carbon tax
9682  *  [ --ctax_initial=30 ]
9683  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
9684  *
9685  *-------------------------------------------------------------------------------
9687   
9688  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
9690  *-------------------------------------------------------------------------------
9691  * Energy efficiency
9692  *-------------------------------------------------------------------------------
9693   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
9696  *-------------------------------------------------------------------------------
9697  * Hydro Power
9698  *-------------------------------------------------------------------------------
9699   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
9702  *-------------------------------------------------------------------------------
9703  * System Integration:
9704  * - Capacity constraint
9705  * - Flexibility constraint
9706  * - Grid Investment
9707  * - Capacity growth constraint
9708  *-------------------------------------------------------------------------------
9709   
9711   
9712  eqq_elintren_c_canada
9713  eqflex_c_canada
9714  eqk_en_grid_c_canada
9715  eqk_en_grid_to_k_en_c_canada
9716  eqfirm_capacity_c_canada
9717  eqcap_growth_c_canada
9718   
9719  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
9722  *-------------------------------------------------------------------------------
9723  * Nuclear power plants
9724  *-------------------------------------------------------------------------------
9725   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
9728  *-------------------------------------------------------------------------------
9729  * GHG module
9730  * - CH4 FFI + CH4 waste + CH4 open fires
9731  * - N2O FFI + N2O waste + N2O open fires
9732  *-------------------------------------------------------------------------------
9733   
9735   
9736  eqq_emi_waste_c_canada
9737  eqq_emi_n2o_ffi_c_canada
9738  eqq_emi_ch4_ffi_c_canada
9739   
9740  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
9743  *-------------------------------------------------------------------------------
9744  * F-gases
9745  * - LLF
9746  * - SLF
9747  *-------------------------------------------------------------------------------
9748   
9750   
9751  eqq_emi_fgases_c_canada
9752   
9753  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
9756  *-------------------------------------------------------------------------------
9757  * Landuse [simplified version of the land-use model]
9758  *-------------------------------------------------------------------------------
9759   
9761   
9762  eq_wbio_c_canada
9763  eqcost_pes_wbio_c_canada
9764   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
9767  *-------------------------------------------------------------------------------
9768  * Bioenergy power plant
9769  *-------------------------------------------------------------------------------
9770   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
9773  *-------------------------------------------------------------------------------
9774  * Traditional Biofuels
9775  * - Requires the precedence of mod_landuse
9776  *-------------------------------------------------------------------------------
9777   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
9780  *-------------------------------------------------------------------------------
9781  * Advanced biofuel
9782  * - Require the precedence of mod_landuse
9783  *-------------------------------------------------------------------------------
9784   
9786   
9787  eqq_en_lim_advbiofuel_c_canada
9788  eqmcost_fuel_advbiofuel_c_canada
9789   
9790  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
9793  *-------------------------------------------------------------------------------
9794  * Carbon Capture and Sequestration
9795  *-------------------------------------------------------------------------------
9796   
9798   
9799  eqq_emi_ccs_c_canada
9800  eqcost_emi_sinks_c_canada
9801  eq_stor_ccs_cum_c_canada
9802  eq_emi_stor_ccs_c_canada
9803  eq_emi_leak_ccs_c_canada
9804   
9805  *-------------------------------------------------------------------------------
9807   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
9809  *-------------------------------------------------------------------------------
9810  * Coal for non-electric sectors
9811  * - Coke Plants
9812  * - Industrial and Commercial combined-heat-and-power (CHP)
9813  * - Others
9814  *-------------------------------------------------------------------------------
9815   
9817   
9818  eqcost_en_nelcoal_c_canada
9819  eqq_ncoalabat_monotone_c_canada
9820  eqq_en_nelcoalccs_max_c_canada
9821   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
9824  *-------------------------------------------------------------------------------
9825  * Wind energy module
9826  * - onshore and offshore
9827  *-------------------------------------------------------------------------------
9828   
9830   
9831  eqq_en_mu_windon_c_canada
9832  eqq_en_mu_windoff_c_canada
9833  eqk_en_windon_c_canada
9834  eqk_en_windoff_c_canada
9835  eqq_en_windon_sum_c_canada
9836  eqq_en_windoff_sum_c_canada
9837  eqk_en_windon_sum_c_canada
9838  eqk_en_windoff_sum_c_canada
9839  eqi_en_windon_sum_c_canada
9840  eqi_en_windoff_sum_c_canada
9841   
9843   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
9845  *-------------------------------------------------------------------------------
9846  * Solar Powerplants (PV and CSP) to the electrical system
9847  *-------------------------------------------------------------------------------
9848   
9849  *-------------------------------------------------------------------------------
9851   
9852  eqq_en_mu_pv_c_canada
9853  eqq_en_mu_csp_c_canada
9854  eqk_en_pv_c_canada
9855  eqk_en_csp_c_canada
9856  eqq_en_pv_sum_c_canada
9857  eqq_en_csp_sum_c_canada
9858  eqk_en_pv_sum_c_canada
9859  eqk_en_csp_sum_c_canada
9860  eqi_en_pv_sum_c_canada
9861  eqi_en_csp_sum_c_canada
9862  eqk_en_solar_comp_c_canada
9863   
9864  *-------------------------------------------------------------------------------
9866   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
9868  *-------------------------------------------------------------------------------
9869  * Technology development scenarios
9870  *-------------------------------------------------------------------------------
9871   
9873   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
9875  *-------------------------------------------------------------------------------
9876  * Oil Extraction
9877  * Options:
9878  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
9879  *-------------------------------------------------------------------------------
9880   
9882   
9883  eqoilcap_c_canada
9884  eqoilprod_c_canada
9885  eqq_out_oil_c_canada
9886  eqcum_oil_c_canada
9887  eqcost_oil_c_canada
9888  eqi_oil_c_canada
9889  eqi_out_oil_c_canada
9890  eqq_emi_out_oil_c_canada
9891   
9892  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
9895  *-------------------------------------------------------------------------------
9896  * Uranium Resources
9897  *-------------------------------------------------------------------------------
9898   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
9901  *-------------------------------------------------------------------------------
9902  * Gas Resources
9903  *-------------------------------------------------------------------------------
9904   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
9907  *-------------------------------------------------------------------------------
9908  * Coal Resources
9909  *-------------------------------------------------------------------------------
9910   
9912   
9913   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
9915  *-------------------------------------------------------------------------------
9916  * Climate
9917  *
9918  * Represents the climate
9919  * - based on the DICE model equations
9920  * - Radiative forcing for non CO2 ghgs
9921  * - parameters calibrated to reproduce MAGICC6.4 default response
9922  *
9923  *  Options:
9924  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
9925  * - $setglobal cooperate_on_climate {'YES','NO'}
9926  * - 'YES'(default): Countries within a coalition act in cooperation
9927  *   'NO': Countries within a coalition act individually
9928  *
9929  *-------------------------------------------------------------------------------
9930   
9932   
9934   
9935  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
9938  *-------------------------------------------------------------------------------
9939  * Long-run Damages from Climate Change
9940  * - Economic impacts
9941  * - Adaptation
9942  *-------------------------------------------------------------------------------
9943   
9945   
9947   
9948  *-------------------------------------------------------------------------------
9950   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
9952  *-------------------------------------------------------------------------------
9953  * Light-duty Vehicles for Personal Transport
9954  *-------------------------------------------------------------------------------
9955   
9957   
9958  eqnb_veh_c_canada
9959  eqq_en_veh_c_canada
9960  eqq_el_edv_c_canada
9961  eqmcost_inv_hybrid_c_canada
9962  eqmcost_inv_plghybrid_c_canada
9963  eqmcost_inv_edv_c_canada
9964  *** newcode
9965  eqq_inv_red_ban_c_canada
9966  ***
9967  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
9970  *-------------------------------------------------------------------------------
9971  * Road Freight Transport
9972  *-------------------------------------------------------------------------------
9974   
9975  eqnb_frtveh_c_canada
9976  eqq_en_frtveh_c_canada
9977  eqq_el_frtedv_c_canada
9978  eqmcost_inv_hbd_stfr_c_canada
9979  eqmcost_inv_plghbd_stfr_c_canada
9980  eqmcost_inv_edv_stfr_c_canada
9981   
9982  *-------------------------------------------------------------------------------
9984   
9985   
9986   
9987   
9988   
9989   
9990  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
9992  *-------------------------------------------------------------------------------
9993  * Traditional Biomass
9994  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
9995  *  - require post_process to be launch before
9996  *-------------------------------------------------------------------------------
9997   
9999   
10000  * Optional modules
10001   
10002  * Policy modules
10003   
10004  * Calibration
10007  ;
10008   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
10010  *-------------------------------------------------------------------------------
10011  * Call modules by order
10012  *-------------------------------------------------------------------------------
10016   
10017  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
10019  *-------------------------------------------------------------------------------
10020  * Algorithm
10021  *-------------------------------------------------------------------------------
10022   
10024   
10026  * Add the component of the (maximized) objective function as required by the ADMM algorithm
10027  eqobj_c_canada..
10028      OBJADMM =e= UTILITY -
10029          sum(t, rho_admm('oil',t) / 2 *
10030              sum(n$(map_clt_n('c_canada',n) and trading_t('oil',t,n)),
10031                  power(
10032                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
10033                      x_admm('oil',t,n) +
10034                      xavg_admm('oil',t) +
10035                      u_admm('oil', t)
10036                  ,2)
10037              )) -
10038          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
10039              sum(n$(map_clt_n('c_canada',n) and trading_t(c_mkt,t,n)),
10040                  power(
10041                      Q_EMI(c_mkt,t,n) -
10042                      x_admm(c_mkt,t,n) +
10043                      xavg_admm(c_mkt,t) +
10044                      u_admm(c_mkt,t)
10045                  ,2)
10046              ))
10047      ;
10049   
10050  *-------------------------------------------------------------------------------
10052   
10053  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
10055  *-------------------------------------------------------------------------------
10056  * Time
10057  * - Temporal structure
10058  * - Fixed time periods
10059  * - States of the world
10060  *-------------------------------------------------------------------------------
10061   
10063   
10064  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
10066  *-------------------------------------------------------------------------------
10067  * Geographic dimension and mapping with countries
10068  *-------------------------------------------------------------------------------
10069   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
10072  *-------------------------------------------------------------------------------
10073  * Non-Cooperative Setup
10074  *
10075  * Each region is defined as an individual coalition.
10076  *
10077  *-------------------------------------------------------------------------------
10078   
10080   
10081  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
10083  *-------------------------------------------------------------------------------
10084  * Welfare
10085  *-------------------------------------------------------------------------------
10086   
10088   
10089  * Objective function - Welfare to be maximized
10090  equtility_c_canada..
10091      UTILITY =e=
10092   
10093  * Negishi SWF
10095   
10096  * Welfare functions based on CEBGE
10099                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
10100                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
10101                      ((sum(n$map_clt_n('c_canada',n),
10102                        (l(t,n) / sum(nn$map_clt_n('c_canada',nn), l(t,nn))) *
10103                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
10104                       )**(1 / (1 - gamma))
10105                      )**(1 - eta) ) +
10106                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
10107                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
10108                      ((sum(n$map_clt_n('c_canada',n),
10109                        (l(t,n) / sum(nn$map_clt_n('c_canada',nn), l(t,nn))) *
10110                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
10111                       )**(1 / (1 - gamma))
10112                      )**(1 - eta) )
10113                  )**(1/(1 - eta)) * 1e6
10116   
10117   
10118  ;
10119   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
10122  *-------------------------------------------------------------------------------
10123  * Economy
10124  * - Production and Consumption definition
10125  * - Top-level of the production function
10126  * Options:
10127  * --original_ssp=1 : original SSP population and GDP data
10128  *-------------------------------------------------------------------------------
10129   
10131   
10132  * Production
10133  eqq_y_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10134   
10135      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
10136                     ## Climate feedback on economy
10138                     ## Net cost of Primary and Secondary Energy Sources
10139                     - sum(fuel, COST_FUEL(fuel,t,n))
10140                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
10141                     - sum(cce, COST_EMI(cce,t,n))
10142                     ## Carbon tax
10143                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
10144                     ## Additionnal costs on gross product
10145                     - sum(ccy, COST_Y(ccy,t,n))
10146  ;
10147   
10148  * Consumption
10149  eqq_cc_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
10150      Q('cc',t,n) =e= Q('y',t,n)
10151                      ## Investments in goods g (final good, adaptation)
10152                      -sum(g, I(g,t,n))
10153                      ## Investments in r&d
10154                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
10155                      ## Investments in energy technlogies
10156                      -sum(jinv, I_EN(jinv,t,n))
10157                       ## Investments in grid infrastructures
10158                      - I_EN_GRID(t,n)
10159                      ## Investments in extraction sector
10160                      -sum(extract(f), I_OUT(f,t,n))
10161                      ## O&M for energy technlogies
10162                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
10163                      ## O&M for extraction
10164                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
10165                      ## Energy technology penalty costs
10166                      -sum(jpenalty(j), COST_EN(j,t,n))
10167  ;
10168   
10169  * Capital accumulation
10170  eqk_c_canada(g,t,tp1,n)$(map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
10171      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
10172   
10173  * Energy services
10174  eqq_fen_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10175      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
10176   
10177  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
10180  *-------------------------------------------------------------------------------
10181  * Energy sector
10182  *-------------------------------------------------------------------------------
10183   
10185   
10186  *-------------------------------------------------------------------------------
10187  * Production - Energy sector
10188  *-------------------------------------------------------------------------------
10189   
10190  eqq_en_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10191      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
10192   
10193  *-------------------------------------------------------------------------------
10194  * Production - Electrical sector
10195  *-------------------------------------------------------------------------------
10196   
10197  eqq_el_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10198      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
10199   
10200  eqq_el2_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10201      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
10202   
10203  eqq_elffren_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10204      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
10205  eqq_elff_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10206      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
10207   
10208  eqq_ces_el_c_canada(ices_el,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
10209      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
10210  ;
10211   
10212  *-------------------------------------------------------------------------------
10213  * Production - Non-electrical sector
10214  *-------------------------------------------------------------------------------
10215   
10216  eqq_nel_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10217      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
10218   
10219  eqq_nelog_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10220      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
10221  ;
10222  eqq_ces_nelgas_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10223      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
10224   
10225  *-------------------------------------------------------------------------------
10226  * PES and fuels
10227  *-------------------------------------------------------------------------------
10228   
10229  eqq_fuel_c_canada(fuel,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
10230      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
10231   
10232  *-------------------------------------------------------------------------------
10233  * Cost
10234  *-------------------------------------------------------------------------------
10235   
10236  * Net cost of Primary Energy Supplies
10237  eqcost_pes_c_canada(f,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
10238      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
10239                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
10240   
10241  * Net cost of Secondary Energy Supplies
10242  eqcost_ses_c_canada(s,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10243      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
10244   
10245   
10246  *-------------------------------------------------------------------------------
10247  * Market balances
10248  *-------------------------------------------------------------------------------
10249   
10250  eq_mkt_clearing_oil_c_canada(t,'c_canada')$(internal('oil'))..
10251      sum( n$(map_clt_n('c_canada',n) and trading_t('oil',t,n)),
10252          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
10253      ) =e= 0;
10254   
10255  *-------------------------------------------------------------------------------
10256  * New capital in the energy sector
10257  *-------------------------------------------------------------------------------
10258   
10259  * Electrical generation plants (new)
10260  eqk_en_c_canada(jinv,t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
10261      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
10262                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
10263   
10264  *-------------------------------------------------------------------------------
10265  * ENERGY
10266  *-------------------------------------------------------------------------------
10267   
10268  * Capacity limits in the electrical sector
10269  eqq_en_mu_c_canada(jel,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
10270      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
10271   
10272  * Efficiency of energy technology sector
10273  eqq_en_in_c_canada(jfed,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
10274      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
10275                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
10276   
10277  * Energy generation "tree"
10278  eqq_en_tree_c_canada(j,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
10279      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
10280   
10281  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
10284  *-------------------------------------------------------------------------------
10285  * Carbon Emissions
10286  * - Total CO2 emissions and CO2 Fossil fuel and Industry
10287  * - CO2 emission costs
10288  * - GHG permit market
10289  *-------------------------------------------------------------------------------
10290   
10292   
10293  * GHG emission cap
10294  eqq_emi_lim_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
10295      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
10296                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
10297   
10298  * Compute total and sectoral emissions
10299  eqq_emi_tree_c_canada(t,n,e)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
10300      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
10301   
10302  * Industrial CO2 emissions
10303  eqq_emi_co2ffi_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10304      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
10305                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
10306                              # Emissions from biomass
10307                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
10308                              # Emissions from fuel extraction
10309                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
10310                              # Captured emissions
10311                              sum(sink, Q_EMI(sink,t,n));
10312   
10313  * CO2 emission costs
10314  eqcost_emi_co2_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10315      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
10316   
10317  * Emission permit market clearing for internal market
10318  eq_mkt_clearing_nip_c_canada(c_mkt,t,'c_canada')$(internal(c_mkt))..
10319      sum(n$(map_clt_n('c_canada',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
10320   
10321  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
10324  *-------------------------------------------------------------------------------
10325  * Research & Development
10326  * Options:
10327  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
10328  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
10329  *-------------------------------------------------------------------------------
10330   
10332   
10333  * Knowledge stock accumulation
10334  eqk_rd_c_canada(rd,t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
10335                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
10336                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
10337                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
10338                                        SPILL(rd,t,n)**rd_coef(rd,'d');
10339   
10340  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
10341  eqspill_coop_c_canada(rd,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_canada'))..
10342          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
10343                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_canada',nn)), K_RD(rd,t,nn)) +
10344                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_canada',nn))), K_RD.l(rd,t,nn))
10345                            ) *
10346                            (
10347                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_canada',nn)), K_RD(rd,t,nn)) +
10348                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_canada',nn))), K_RD.l(rd,t,nn))
10349                              ) - K_RD(rd,t,n)
10350                            );
10351   
10352  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
10353  eqspill_lead_c_canada(rd,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_canada')) and leadrd(rd,n))..
10354                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
10355   
10356  * No-cooperation : a follower sees is negative effect on the quantity he can grab
10357  eqspill_foll_c_canada(rd,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_canada')) and (not leadrd(rd,n)))..
10358                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
10359   
10360  *- Only LbR (without learning by doing)
10361  eqmcost_inv_back_c_canada(jrd,t,tt,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
10362                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
10363                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
10364   
10365  *- LbR together with learning by doing ==> Two-factor learning curve
10366  eqmcost_inv_back_lbd_c_canada(jrd,t,tt,tfirst,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
10367                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
10368                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
10369                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
10370   
10371  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
10374  *-------------------------------------------------------------------------------
10375  * Default Climate Policy Implementation
10376  *
10377  * Options:
10378  *    --policy={bau (default),ctax}
10379  *        Implement a climate policy setting
10380  *  [ --scen= ]
10381  *        Policy variant.
10382  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
10383  *          * XXX for a fixed percentage/yr (e.g. 5) growth
10384  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
10385  *  [ --ctax_year=2020 ]
10386  *        Starting year of the carbon tax
10387  *  [ --ctax_initial=30 ]
10388  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
10389  *
10390  *-------------------------------------------------------------------------------
10392   
10393  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
10395  *-------------------------------------------------------------------------------
10396  * Energy efficiency
10397  *-------------------------------------------------------------------------------
10398   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
10401  *-------------------------------------------------------------------------------
10402  * Hydro Power
10403  *-------------------------------------------------------------------------------
10404   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
10407  *-------------------------------------------------------------------------------
10408  * System Integration:
10409  * - Capacity constraint
10410  * - Flexibility constraint
10411  * - Grid Investment
10412  * - Capacity growth constraint
10413  *-------------------------------------------------------------------------------
10414   
10416   
10417   
10418  * Renewable CES
10419   
10420  * Definition of the renewable CES
10421  eqq_elintren_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10422      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
10423   
10424  * Capacity constraint
10425   
10427  eqfirm_capacity_c_canada(t,n)$(map_clt_n('c_canada',n) and (not tfix(t)) and year(t) gt 2005)..
10428                   sum(jel_firm, K_EN(jel_firm,t,n))
10429                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
10430                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
10431                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
10432                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
10433                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
10434                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
10435                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
10436                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
10437                                       ) / yearly_hours
10438  ;
10440   
10441  * Flexibility constraint
10442  eqflex_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10443          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
10444                             ( Q_EN('el',t,n) -
10445                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
10446                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
10447                             ) * flex_coeff('load')
10448  ;
10449   
10450  * Grid
10451   
10452  ** Grid depreciation and investments
10453  eqk_en_grid_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
10454                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
10455                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
10456   
10457  ** Grid adjustment to power capacity
10458  eqk_en_grid_to_k_en_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10459                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
10460                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
10461                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
10462                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
10463                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
10464                                     ) / grid_cost +
10465                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
10466                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
10467                                      K_EN('elcsp',t,n);
10468  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
10469   
10470  * Capacity growth constraint
10471  eqcap_growth_c_canada(jinv,t,tp1,tp2,n)$((map_clt_n('c_canada',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
10472                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
10473                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
10474   
10475  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
10478  *-------------------------------------------------------------------------------
10479  * Nuclear power plants
10480  *-------------------------------------------------------------------------------
10481   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
10484  *-------------------------------------------------------------------------------
10485  * GHG module
10486  * - CH4 FFI + CH4 waste + CH4 open fires
10487  * - N2O FFI + N2O waste + N2O open fires
10488  *-------------------------------------------------------------------------------
10489   
10491   
10492  * CH4, N2O waste emissions
10493  eqq_emi_waste_c_canada(waste,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
10494                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
10495   
10496  * n2o FFI
10497  eqq_emi_n2o_ffi_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
10498    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
10499                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
10500                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
10501                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
10502                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
10503                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
10504                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
10505                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
10506                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
10507                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
10508                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
10509                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
10510                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
10511                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
10512                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
10513                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
10514                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
10515                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
10516                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
10517                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
10518                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
10519                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
10520                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
10521                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
10522                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
10523                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
10524                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
10525                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
10526                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
10527                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
10528                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
10529   
10530  * ch4 FFI
10531  eqq_emi_ch4_ffi_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
10532    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
10535  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
10536  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
10537                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
10538                             smax(tt$(year(tt) eq 2015),
10539                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
10542  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
10543  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
10544                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
10545   
10546  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
10549  *-------------------------------------------------------------------------------
10550  * F-gases
10551  * - LLF
10552  * - SLF
10553  *-------------------------------------------------------------------------------
10554   
10556   
10557  * F-gases emissions
10558  eqq_emi_fgases_c_canada(fgases,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
10559                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
10560   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
10563  *-------------------------------------------------------------------------------
10564  * Landuse [simplified version of the land-use model]
10565  *-------------------------------------------------------------------------------
10566   
10568   
10569  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
10570  eq_wbio_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10571      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
10572   
10574  * Cost of all woody biomass produced for advanced biofuels and woody biomass
10575  eqcost_pes_wbio_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10576      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
10578   
10579  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
10582  *-------------------------------------------------------------------------------
10583  * Bioenergy power plant
10584  *-------------------------------------------------------------------------------
10585   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
10588  *-------------------------------------------------------------------------------
10589  * Traditional Biofuels
10590  * - Requires the precedence of mod_landuse
10591  *-------------------------------------------------------------------------------
10592   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
10595  *-------------------------------------------------------------------------------
10596  * Advanced biofuel
10597  * - Require the precedence of mod_landuse
10598  *-------------------------------------------------------------------------------
10599   
10601   
10602  * Limitations for nel backstops
10603  eqq_en_lim_advbiofuel_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
10604               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
10605               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
10606   
10607  * Peculiarity of advbiofuel
10608  eqmcost_fuel_advbiofuel_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10609                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
10610   
10611  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
10614  *-------------------------------------------------------------------------------
10615  * Carbon Capture and Sequestration
10616  *-------------------------------------------------------------------------------
10617   
10619   
10620  eqq_emi_ccs_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10621                  Q_EMI('ccs_plant',t,n) =e=
10622                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
10623                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
10624  ;
10625   
10626  eqcost_emi_sinks_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10627                  COST_EMI('ccs_plant',t,n) =e=
10628                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
10629                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
10630  ;
10631   
10632  eq_stor_ccs_cum_c_canada(ccs_stor,tp1,t,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
10633                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
10634  ;
10635   
10636  eq_emi_stor_ccs_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10637                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
10638  ;
10639   
10640  eq_emi_leak_ccs_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10641                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
10642   
10643  *-------------------------------------------------------------------------------
10645   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
10647  *-------------------------------------------------------------------------------
10648  * Coal for non-electric sectors
10649  * - Coke Plants
10650  * - Industrial and Commercial combined-heat-and-power (CHP)
10651  * - Others
10652  *-------------------------------------------------------------------------------
10653   
10655   
10656  eqcost_en_nelcoal_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10657           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
10658                                          nelcoal_max_abat(t,n) *
10659                                          (nelcoal_cmac(n,'a') *
10660                                            Q_EN('nelcoalabat',t,n) /
10661                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
10662                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
10663                                              (exp(nelcoal_cmac(n,'c') *
10664                                                (Q_EN('nelcoalabat',t,n)/
10665                                                  (nelcoal_max_abat(t,n) *
10666                                                      nelcoal_baseline(t,n))
10667                                                  ) - 1 )
10668                                              )
10669                                          );
10670   
10671  eqq_ncoalabat_monotone_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
10672          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
10673   
10674  * ensure Q_EN is lower than K_EN for CCS as not in jel
10675  eqq_en_nelcoalccs_max_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10676          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
10677   
10678  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
10681  *-------------------------------------------------------------------------------
10682  * Wind energy module
10683  * - onshore and offshore
10684  *-------------------------------------------------------------------------------
10685   
10687   
10688  * Capacity limits in the wind onshore electrical sector
10689  eqq_en_mu_windon_c_canada(wind_dist,wind_class,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
10690      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
10691   
10692  * Capacity limits in the wind offshore electrical sector
10693  eqq_en_mu_windoff_c_canada(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
10694      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
10695   
10696  * Wind onshore electrical generation plants (new)
10697  eqk_en_windon_c_canada(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
10698      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
10699                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
10700   
10701  * Wind offshore electrical generation plants (new)
10702  eqk_en_windoff_c_canada(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
10703      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
10704                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
10705   
10706  * Total onshore wind energy production
10707  eqq_en_windon_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10708                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
10709   
10710  * Total offshore wind energy production
10711  eqq_en_windoff_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10712                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
10713   
10714  * Total onshore wind capacity
10715  eqk_en_windon_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10716                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
10717   
10718  * Total offshore wind capacity
10719  eqk_en_windoff_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10720                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
10721   
10722  * Total onshore wind investment
10723  eqi_en_windon_sum_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
10724                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
10725   
10726  * Total offshore wind investment
10727  eqi_en_windoff_sum_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
10728                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
10729   
10730  *-------------------------------------------------------------------------------
10732   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
10734  *-------------------------------------------------------------------------------
10735  * Solar Powerplants (PV and CSP) to the electrical system
10736  *-------------------------------------------------------------------------------
10737   
10738  *-------------------------------------------------------------------------------
10740   
10741   
10742  * Capacity limits in the pv electrical sector
10743  eqq_en_mu_pv_c_canada(solar_dist,solar_class,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
10744                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
10745   
10746  * Capacity limits in the csp electrical sector
10747  eqq_en_mu_csp_c_canada(solar_dist,solar_class,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
10748                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
10749   
10750  * PV electrical generation plants (new)
10751  eqk_en_pv_c_canada(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
10752                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
10753                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
10754   
10755  * CSP electrical generation plants (new)
10756  eqk_en_csp_c_canada(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
10757                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
10758                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
10759   
10760  * Total PV energy production
10761  eqq_en_pv_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10762                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
10763   
10764  * Total CSP energy production
10765  eqq_en_csp_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10766                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
10767   
10768  * Total PV capacity
10769  eqk_en_pv_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10770                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
10771   
10772  * Total CSP capacity
10773  eqk_en_csp_sum_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10774                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
10775   
10776  * Total PV investment
10777  eqi_en_pv_sum_c_canada(t,tp1,n)$(map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
10778                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
10779   
10780  * Total CSP investment
10781  eqi_en_csp_sum_c_canada(t,tp1,n)$(map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
10782                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
10783   
10784  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
10785  eqk_en_solar_comp_c_canada(t,n,solar_dist)$(map_clt_n('c_canada',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
10786                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
10787                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
10788   
10789   
10790   
10791  *-------------------------------------------------------------------------------
10793   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
10795  *-------------------------------------------------------------------------------
10796  * Technology development scenarios
10797  *-------------------------------------------------------------------------------
10798   
10800   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
10802  *-------------------------------------------------------------------------------
10803  * Oil Extraction
10804  * Options:
10805  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
10806  *-------------------------------------------------------------------------------
10807   
10809   
10810  * Capacity
10811  eqoilcap_c_canada(t,tp1,n,oilg)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
10812      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
10813   
10814  * Production
10815  eqoilprod_c_canada(t,tp1,n,oilg)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
10816      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
10817   
10818  eqq_out_oil_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10819      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
10820   
10821  * Cumulative production
10822  eqcum_oil_c_canada(t,tp1,n,oilg)$((map_clt_n('c_canada',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
10823      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
10824   
10825  * Cost
10826  eqcost_oil_c_canada(t,tp1,n,oilg)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
10827      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
10828                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
10829                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
10830   
10831  * Investments
10832  eqi_oil_c_canada(t,tp1,n,oilg)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
10833      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
10834   
10835  * Total investment
10836  eqi_out_oil_c_canada(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
10837      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
10838   
10839  * Emissions
10840  eqq_emi_out_oil_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10841      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
10842   
10843  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
10846  *-------------------------------------------------------------------------------
10847  * Uranium Resources
10848  *-------------------------------------------------------------------------------
10849   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
10852  *-------------------------------------------------------------------------------
10853  * Gas Resources
10854  *-------------------------------------------------------------------------------
10855   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
10858  *-------------------------------------------------------------------------------
10859  * Coal Resources
10860  *-------------------------------------------------------------------------------
10861   
10863   
10864   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
10866  *-------------------------------------------------------------------------------
10867  * Climate
10868  *
10869  * Represents the climate
10870  * - based on the DICE model equations
10871  * - Radiative forcing for non CO2 ghgs
10872  * - parameters calibrated to reproduce MAGICC6.4 default response
10873  *
10874  *  Options:
10875  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
10876  * - $setglobal cooperate_on_climate {'YES','NO'}
10877  * - 'YES'(default): Countries within a coalition act in cooperation
10878  *   'NO': Countries within a coalition act individually
10879  *
10880  *-------------------------------------------------------------------------------
10881   
10883   
10885   
10886  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
10889  *-------------------------------------------------------------------------------
10890  * Long-run Damages from Climate Change
10891  * - Economic impacts
10892  * - Adaptation
10893  *-------------------------------------------------------------------------------
10894   
10896   
10898   
10899  *-------------------------------------------------------------------------------
10901   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
10903  *-------------------------------------------------------------------------------
10904  * Light-duty Vehicles for Personal Transport
10905  *-------------------------------------------------------------------------------
10906   
10908   
10909  *** newcode
10910  eqq_inv_red_ban_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10911      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
10912   
10913  ***
10914  *- Number of light duty vehicles
10915  eqnb_veh_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10916      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
10917   
10918  *- Yearly energy demand of vehicles
10919  eqq_en_veh_c_canada(jveh,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10920      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
10921   
10922  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
10923  eqq_el_edv_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10924      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
10925   
10926  *- Investment cost for hybrid vehicles
10927  eqmcost_inv_hybrid_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
10928                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
10929   
10930  *- Investment cost for plug-in hybrid vehicles
10931  eqmcost_inv_plghybrid_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
10932                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
10933   
10934  *- Investment cost for electric drive vehicles
10935  eqmcost_inv_edv_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
10936                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
10937   
10938  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
10941  *-------------------------------------------------------------------------------
10942  * Road Freight Transport
10943  *-------------------------------------------------------------------------------
10945   
10946  *-  Number of freight vehicles
10947  eqnb_frtveh_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
10948                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
10949   
10950  *-  Yearly fuel consumption of freight vehicles
10951  eqq_en_frtveh_c_canada(jfrt,t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10952                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
10953   
10954  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
10955  eqq_el_frtedv_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)))..
10956                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
10957   
10958  *-  Investment cost for hbd_stfr vehicle
10959  eqmcost_inv_hbd_stfr_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
10960                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
10961   
10962  *-  Investment cost for plug-in hbd_stfr vehicle
10963  eqmcost_inv_plghbd_stfr_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
10964                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
10965   
10966  *-  Investment cost for electric drive vehicle
10967  eqmcost_inv_edv_stfr_c_canada(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
10968                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
10969   
10970  *-------------------------------------------------------------------------------
10972   
10973   
10974   
10975   
10976   
10977   
10978  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
10980  *-------------------------------------------------------------------------------
10981  * Traditional Biomass
10982  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
10983  *  - require post_process to be launch before
10984  *-------------------------------------------------------------------------------
10985   
10987   
10988  * Optional modules
10989   
10990  * Policy modules
10991   
10992  * Calibration
10995   
10996   
10997  model witch_c_canada /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
10999  *-------------------------------------------------------------------------------
11000  * Call modules by order
11001  *-------------------------------------------------------------------------------
11005   
11006  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
11008  *-------------------------------------------------------------------------------
11009  * Algorithm
11010  *-------------------------------------------------------------------------------
11011   
11013   
11014  eqobj_c_canada
11015   
11016  *-------------------------------------------------------------------------------
11018   
11019  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
11021  *-------------------------------------------------------------------------------
11022  * Time
11023  * - Temporal structure
11024  * - Fixed time periods
11025  * - States of the world
11026  *-------------------------------------------------------------------------------
11027   
11029   
11030  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
11032  *-------------------------------------------------------------------------------
11033  * Geographic dimension and mapping with countries
11034  *-------------------------------------------------------------------------------
11035   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
11038  *-------------------------------------------------------------------------------
11039  * Non-Cooperative Setup
11040  *
11041  * Each region is defined as an individual coalition.
11042  *
11043  *-------------------------------------------------------------------------------
11044   
11046   
11047  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
11049  *-------------------------------------------------------------------------------
11050  * Welfare
11051  *-------------------------------------------------------------------------------
11052   
11054   
11055  equtility_c_canada
11056   
11057  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
11060  *-------------------------------------------------------------------------------
11061  * Economy
11062  * - Production and Consumption definition
11063  * - Top-level of the production function
11064  * Options:
11065  * --original_ssp=1 : original SSP population and GDP data
11066  *-------------------------------------------------------------------------------
11067   
11069   
11070  eqk_c_canada
11071  eqq_cc_c_canada
11072  eqq_fen_c_canada
11073  eqq_y_c_canada
11074   
11075  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
11078  *-------------------------------------------------------------------------------
11079  * Energy sector
11080  *-------------------------------------------------------------------------------
11081   
11083   
11084  eq_mkt_clearing_oil_c_canada
11085  eqcost_pes_c_canada
11086  eqcost_ses_c_canada
11087  eqk_en_c_canada
11088  eqq_ces_el_c_canada
11089  eqq_ces_nelgas_c_canada
11090  eqq_el2_c_canada
11091  eqq_el_c_canada
11092  eqq_elff_c_canada
11093  eqq_en_c_canada
11094  eqq_en_in_c_canada
11095  eqq_en_mu_c_canada
11096  eqq_en_tree_c_canada
11097  eqq_nel_c_canada
11098  eqq_nelog_c_canada
11099  eqq_fuel_c_canada
11100  eqq_elffren_c_canada
11101   
11102  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
11105  *-------------------------------------------------------------------------------
11106  * Carbon Emissions
11107  * - Total CO2 emissions and CO2 Fossil fuel and Industry
11108  * - CO2 emission costs
11109  * - GHG permit market
11110  *-------------------------------------------------------------------------------
11111   
11113   
11114  eqq_emi_lim_c_canada
11115  eqq_emi_tree_c_canada
11116  eqq_emi_co2ffi_c_canada
11117   
11118  eqcost_emi_co2_c_canada
11119   
11120  eq_mkt_clearing_nip_c_canada
11121   
11122  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
11125  *-------------------------------------------------------------------------------
11126  * Research & Development
11127  * Options:
11128  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
11129  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
11130  *-------------------------------------------------------------------------------
11131   
11133   
11134  eqk_rd_c_canada
11135  eqspill_coop_c_canada
11136  eqspill_lead_c_canada
11137  eqspill_foll_c_canada
11138  eqmcost_inv_back_c_canada
11139  eqmcost_inv_back_lbd_c_canada
11140   
11141  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
11144  *-------------------------------------------------------------------------------
11145  * Default Climate Policy Implementation
11146  *
11147  * Options:
11148  *    --policy={bau (default),ctax}
11149  *        Implement a climate policy setting
11150  *  [ --scen= ]
11151  *        Policy variant.
11152  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
11153  *          * XXX for a fixed percentage/yr (e.g. 5) growth
11154  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
11155  *  [ --ctax_year=2020 ]
11156  *        Starting year of the carbon tax
11157  *  [ --ctax_initial=30 ]
11158  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
11159  *
11160  *-------------------------------------------------------------------------------
11162   
11163  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
11165  *-------------------------------------------------------------------------------
11166  * Energy efficiency
11167  *-------------------------------------------------------------------------------
11168   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
11171  *-------------------------------------------------------------------------------
11172  * Hydro Power
11173  *-------------------------------------------------------------------------------
11174   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
11177  *-------------------------------------------------------------------------------
11178  * System Integration:
11179  * - Capacity constraint
11180  * - Flexibility constraint
11181  * - Grid Investment
11182  * - Capacity growth constraint
11183  *-------------------------------------------------------------------------------
11184   
11186   
11187  eqq_elintren_c_canada
11188  eqflex_c_canada
11189  eqk_en_grid_c_canada
11190  eqk_en_grid_to_k_en_c_canada
11191  eqfirm_capacity_c_canada
11192  eqcap_growth_c_canada
11193   
11194  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
11197  *-------------------------------------------------------------------------------
11198  * Nuclear power plants
11199  *-------------------------------------------------------------------------------
11200   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
11203  *-------------------------------------------------------------------------------
11204  * GHG module
11205  * - CH4 FFI + CH4 waste + CH4 open fires
11206  * - N2O FFI + N2O waste + N2O open fires
11207  *-------------------------------------------------------------------------------
11208   
11210   
11211  eqq_emi_waste_c_canada
11212  eqq_emi_n2o_ffi_c_canada
11213  eqq_emi_ch4_ffi_c_canada
11214   
11215  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
11218  *-------------------------------------------------------------------------------
11219  * F-gases
11220  * - LLF
11221  * - SLF
11222  *-------------------------------------------------------------------------------
11223   
11225   
11226  eqq_emi_fgases_c_canada
11227   
11228  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
11231  *-------------------------------------------------------------------------------
11232  * Landuse [simplified version of the land-use model]
11233  *-------------------------------------------------------------------------------
11234   
11236   
11237  eq_wbio_c_canada
11238  eqcost_pes_wbio_c_canada
11239   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
11242  *-------------------------------------------------------------------------------
11243  * Bioenergy power plant
11244  *-------------------------------------------------------------------------------
11245   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
11248  *-------------------------------------------------------------------------------
11249  * Traditional Biofuels
11250  * - Requires the precedence of mod_landuse
11251  *-------------------------------------------------------------------------------
11252   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
11255  *-------------------------------------------------------------------------------
11256  * Advanced biofuel
11257  * - Require the precedence of mod_landuse
11258  *-------------------------------------------------------------------------------
11259   
11261   
11262  eqq_en_lim_advbiofuel_c_canada
11263  eqmcost_fuel_advbiofuel_c_canada
11264   
11265  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
11268  *-------------------------------------------------------------------------------
11269  * Carbon Capture and Sequestration
11270  *-------------------------------------------------------------------------------
11271   
11273   
11274  eqq_emi_ccs_c_canada
11275  eqcost_emi_sinks_c_canada
11276  eq_stor_ccs_cum_c_canada
11277  eq_emi_stor_ccs_c_canada
11278  eq_emi_leak_ccs_c_canada
11279   
11280  *-------------------------------------------------------------------------------
11282   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
11284  *-------------------------------------------------------------------------------
11285  * Coal for non-electric sectors
11286  * - Coke Plants
11287  * - Industrial and Commercial combined-heat-and-power (CHP)
11288  * - Others
11289  *-------------------------------------------------------------------------------
11290   
11292   
11293  eqcost_en_nelcoal_c_canada
11294  eqq_ncoalabat_monotone_c_canada
11295  eqq_en_nelcoalccs_max_c_canada
11296   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
11299  *-------------------------------------------------------------------------------
11300  * Wind energy module
11301  * - onshore and offshore
11302  *-------------------------------------------------------------------------------
11303   
11305   
11306  eqq_en_mu_windon_c_canada
11307  eqq_en_mu_windoff_c_canada
11308  eqk_en_windon_c_canada
11309  eqk_en_windoff_c_canada
11310  eqq_en_windon_sum_c_canada
11311  eqq_en_windoff_sum_c_canada
11312  eqk_en_windon_sum_c_canada
11313  eqk_en_windoff_sum_c_canada
11314  eqi_en_windon_sum_c_canada
11315  eqi_en_windoff_sum_c_canada
11316   
11318   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
11320  *-------------------------------------------------------------------------------
11321  * Solar Powerplants (PV and CSP) to the electrical system
11322  *-------------------------------------------------------------------------------
11323   
11324  *-------------------------------------------------------------------------------
11326   
11327  eqq_en_mu_pv_c_canada
11328  eqq_en_mu_csp_c_canada
11329  eqk_en_pv_c_canada
11330  eqk_en_csp_c_canada
11331  eqq_en_pv_sum_c_canada
11332  eqq_en_csp_sum_c_canada
11333  eqk_en_pv_sum_c_canada
11334  eqk_en_csp_sum_c_canada
11335  eqi_en_pv_sum_c_canada
11336  eqi_en_csp_sum_c_canada
11337  eqk_en_solar_comp_c_canada
11338   
11339  *-------------------------------------------------------------------------------
11341   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
11343  *-------------------------------------------------------------------------------
11344  * Technology development scenarios
11345  *-------------------------------------------------------------------------------
11346   
11348   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
11350  *-------------------------------------------------------------------------------
11351  * Oil Extraction
11352  * Options:
11353  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
11354  *-------------------------------------------------------------------------------
11355   
11357   
11358  eqoilcap_c_canada
11359  eqoilprod_c_canada
11360  eqq_out_oil_c_canada
11361  eqcum_oil_c_canada
11362  eqcost_oil_c_canada
11363  eqi_oil_c_canada
11364  eqi_out_oil_c_canada
11365  eqq_emi_out_oil_c_canada
11366   
11367  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
11370  *-------------------------------------------------------------------------------
11371  * Uranium Resources
11372  *-------------------------------------------------------------------------------
11373   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
11376  *-------------------------------------------------------------------------------
11377  * Gas Resources
11378  *-------------------------------------------------------------------------------
11379   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
11382  *-------------------------------------------------------------------------------
11383  * Coal Resources
11384  *-------------------------------------------------------------------------------
11385   
11387   
11388   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
11390  *-------------------------------------------------------------------------------
11391  * Climate
11392  *
11393  * Represents the climate
11394  * - based on the DICE model equations
11395  * - Radiative forcing for non CO2 ghgs
11396  * - parameters calibrated to reproduce MAGICC6.4 default response
11397  *
11398  *  Options:
11399  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
11400  * - $setglobal cooperate_on_climate {'YES','NO'}
11401  * - 'YES'(default): Countries within a coalition act in cooperation
11402  *   'NO': Countries within a coalition act individually
11403  *
11404  *-------------------------------------------------------------------------------
11405   
11407   
11409   
11410  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
11413  *-------------------------------------------------------------------------------
11414  * Long-run Damages from Climate Change
11415  * - Economic impacts
11416  * - Adaptation
11417  *-------------------------------------------------------------------------------
11418   
11420   
11422   
11423  *-------------------------------------------------------------------------------
11425   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
11427  *-------------------------------------------------------------------------------
11428  * Light-duty Vehicles for Personal Transport
11429  *-------------------------------------------------------------------------------
11430   
11432   
11433  eqnb_veh_c_canada
11434  eqq_en_veh_c_canada
11435  eqq_el_edv_c_canada
11436  eqmcost_inv_hybrid_c_canada
11437  eqmcost_inv_plghybrid_c_canada
11438  eqmcost_inv_edv_c_canada
11439  *** newcode
11440  eqq_inv_red_ban_c_canada
11441  ***
11442  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
11445  *-------------------------------------------------------------------------------
11446  * Road Freight Transport
11447  *-------------------------------------------------------------------------------
11449   
11450  eqnb_frtveh_c_canada
11451  eqq_en_frtveh_c_canada
11452  eqq_el_frtedv_c_canada
11453  eqmcost_inv_hbd_stfr_c_canada
11454  eqmcost_inv_plghbd_stfr_c_canada
11455  eqmcost_inv_edv_stfr_c_canada
11456   
11457  *-------------------------------------------------------------------------------
11459   
11460   
11461   
11462   
11463   
11464   
11465  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
11467  *-------------------------------------------------------------------------------
11468  * Traditional Biomass
11469  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
11470  *  - require post_process to be launch before
11471  *-------------------------------------------------------------------------------
11472   
11474   
11475  * Optional modules
11476   
11477  * Policy modules
11478   
11479  * Calibration
11482  /;
11483   
11484  witch_c_canada.optfile=1;   # the option file solvername.opt is to be used
11485  witch_c_canada.holdfixed=1; # treat fixed values as constant
11486  witch_c_canada.scaleopt=1;  # Use scaling for better gradients estimation
11487  witch_c_canada.solvelink=3; # Use parallel or sequential solving
11488   
11493   
11494  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
11496  *-------------------------------------------------------------------------------
11497  * Call modules by order
11498  *-------------------------------------------------------------------------------
11502   
11503  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
11505  *-------------------------------------------------------------------------------
11506  * Algorithm
11507  *-------------------------------------------------------------------------------
11508   
11510   
11511  eqobj_c_china
11512   
11513  *-------------------------------------------------------------------------------
11515   
11516  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
11518  *-------------------------------------------------------------------------------
11519  * Time
11520  * - Temporal structure
11521  * - Fixed time periods
11522  * - States of the world
11523  *-------------------------------------------------------------------------------
11524   
11526   
11527  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
11529  *-------------------------------------------------------------------------------
11530  * Geographic dimension and mapping with countries
11531  *-------------------------------------------------------------------------------
11532   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
11535  *-------------------------------------------------------------------------------
11536  * Non-Cooperative Setup
11537  *
11538  * Each region is defined as an individual coalition.
11539  *
11540  *-------------------------------------------------------------------------------
11541   
11543   
11544  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
11546  *-------------------------------------------------------------------------------
11547  * Welfare
11548  *-------------------------------------------------------------------------------
11549   
11551   
11552  equtility_c_china
11553   
11554  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
11557  *-------------------------------------------------------------------------------
11558  * Economy
11559  * - Production and Consumption definition
11560  * - Top-level of the production function
11561  * Options:
11562  * --original_ssp=1 : original SSP population and GDP data
11563  *-------------------------------------------------------------------------------
11564   
11566   
11567  eqk_c_china
11568  eqq_cc_c_china
11569  eqq_fen_c_china
11570  eqq_y_c_china
11571   
11572  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
11575  *-------------------------------------------------------------------------------
11576  * Energy sector
11577  *-------------------------------------------------------------------------------
11578   
11580   
11581  eq_mkt_clearing_oil_c_china
11582  eqcost_pes_c_china
11583  eqcost_ses_c_china
11584  eqk_en_c_china
11585  eqq_ces_el_c_china
11586  eqq_ces_nelgas_c_china
11587  eqq_el2_c_china
11588  eqq_el_c_china
11589  eqq_elff_c_china
11590  eqq_en_c_china
11591  eqq_en_in_c_china
11592  eqq_en_mu_c_china
11593  eqq_en_tree_c_china
11594  eqq_nel_c_china
11595  eqq_nelog_c_china
11596  eqq_fuel_c_china
11597  eqq_elffren_c_china
11598   
11599  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
11602  *-------------------------------------------------------------------------------
11603  * Carbon Emissions
11604  * - Total CO2 emissions and CO2 Fossil fuel and Industry
11605  * - CO2 emission costs
11606  * - GHG permit market
11607  *-------------------------------------------------------------------------------
11608   
11610   
11611  eqq_emi_lim_c_china
11612  eqq_emi_tree_c_china
11613  eqq_emi_co2ffi_c_china
11614   
11615  eqcost_emi_co2_c_china
11616   
11617  eq_mkt_clearing_nip_c_china
11618   
11619  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
11622  *-------------------------------------------------------------------------------
11623  * Research & Development
11624  * Options:
11625  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
11626  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
11627  *-------------------------------------------------------------------------------
11628   
11630   
11631  eqk_rd_c_china
11632  eqspill_coop_c_china
11633  eqspill_lead_c_china
11634  eqspill_foll_c_china
11635  eqmcost_inv_back_c_china
11636  eqmcost_inv_back_lbd_c_china
11637   
11638  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
11641  *-------------------------------------------------------------------------------
11642  * Default Climate Policy Implementation
11643  *
11644  * Options:
11645  *    --policy={bau (default),ctax}
11646  *        Implement a climate policy setting
11647  *  [ --scen= ]
11648  *        Policy variant.
11649  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
11650  *          * XXX for a fixed percentage/yr (e.g. 5) growth
11651  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
11652  *  [ --ctax_year=2020 ]
11653  *        Starting year of the carbon tax
11654  *  [ --ctax_initial=30 ]
11655  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
11656  *
11657  *-------------------------------------------------------------------------------
11659   
11660  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
11662  *-------------------------------------------------------------------------------
11663  * Energy efficiency
11664  *-------------------------------------------------------------------------------
11665   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
11668  *-------------------------------------------------------------------------------
11669  * Hydro Power
11670  *-------------------------------------------------------------------------------
11671   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
11674  *-------------------------------------------------------------------------------
11675  * System Integration:
11676  * - Capacity constraint
11677  * - Flexibility constraint
11678  * - Grid Investment
11679  * - Capacity growth constraint
11680  *-------------------------------------------------------------------------------
11681   
11683   
11684  eqq_elintren_c_china
11685  eqflex_c_china
11686  eqk_en_grid_c_china
11687  eqk_en_grid_to_k_en_c_china
11688  eqfirm_capacity_c_china
11689  eqcap_growth_c_china
11690   
11691  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
11694  *-------------------------------------------------------------------------------
11695  * Nuclear power plants
11696  *-------------------------------------------------------------------------------
11697   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
11700  *-------------------------------------------------------------------------------
11701  * GHG module
11702  * - CH4 FFI + CH4 waste + CH4 open fires
11703  * - N2O FFI + N2O waste + N2O open fires
11704  *-------------------------------------------------------------------------------
11705   
11707   
11708  eqq_emi_waste_c_china
11709  eqq_emi_n2o_ffi_c_china
11710  eqq_emi_ch4_ffi_c_china
11711   
11712  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
11715  *-------------------------------------------------------------------------------
11716  * F-gases
11717  * - LLF
11718  * - SLF
11719  *-------------------------------------------------------------------------------
11720   
11722   
11723  eqq_emi_fgases_c_china
11724   
11725  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
11728  *-------------------------------------------------------------------------------
11729  * Landuse [simplified version of the land-use model]
11730  *-------------------------------------------------------------------------------
11731   
11733   
11734  eq_wbio_c_china
11735  eqcost_pes_wbio_c_china
11736   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
11739  *-------------------------------------------------------------------------------
11740  * Bioenergy power plant
11741  *-------------------------------------------------------------------------------
11742   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
11745  *-------------------------------------------------------------------------------
11746  * Traditional Biofuels
11747  * - Requires the precedence of mod_landuse
11748  *-------------------------------------------------------------------------------
11749   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
11752  *-------------------------------------------------------------------------------
11753  * Advanced biofuel
11754  * - Require the precedence of mod_landuse
11755  *-------------------------------------------------------------------------------
11756   
11758   
11759  eqq_en_lim_advbiofuel_c_china
11760  eqmcost_fuel_advbiofuel_c_china
11761   
11762  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
11765  *-------------------------------------------------------------------------------
11766  * Carbon Capture and Sequestration
11767  *-------------------------------------------------------------------------------
11768   
11770   
11771  eqq_emi_ccs_c_china
11772  eqcost_emi_sinks_c_china
11773  eq_stor_ccs_cum_c_china
11774  eq_emi_stor_ccs_c_china
11775  eq_emi_leak_ccs_c_china
11776   
11777  *-------------------------------------------------------------------------------
11779   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
11781  *-------------------------------------------------------------------------------
11782  * Coal for non-electric sectors
11783  * - Coke Plants
11784  * - Industrial and Commercial combined-heat-and-power (CHP)
11785  * - Others
11786  *-------------------------------------------------------------------------------
11787   
11789   
11790  eqcost_en_nelcoal_c_china
11791  eqq_ncoalabat_monotone_c_china
11792  eqq_en_nelcoalccs_max_c_china
11793   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
11796  *-------------------------------------------------------------------------------
11797  * Wind energy module
11798  * - onshore and offshore
11799  *-------------------------------------------------------------------------------
11800   
11802   
11803  eqq_en_mu_windon_c_china
11804  eqq_en_mu_windoff_c_china
11805  eqk_en_windon_c_china
11806  eqk_en_windoff_c_china
11807  eqq_en_windon_sum_c_china
11808  eqq_en_windoff_sum_c_china
11809  eqk_en_windon_sum_c_china
11810  eqk_en_windoff_sum_c_china
11811  eqi_en_windon_sum_c_china
11812  eqi_en_windoff_sum_c_china
11813   
11815   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
11817  *-------------------------------------------------------------------------------
11818  * Solar Powerplants (PV and CSP) to the electrical system
11819  *-------------------------------------------------------------------------------
11820   
11821  *-------------------------------------------------------------------------------
11823   
11824  eqq_en_mu_pv_c_china
11825  eqq_en_mu_csp_c_china
11826  eqk_en_pv_c_china
11827  eqk_en_csp_c_china
11828  eqq_en_pv_sum_c_china
11829  eqq_en_csp_sum_c_china
11830  eqk_en_pv_sum_c_china
11831  eqk_en_csp_sum_c_china
11832  eqi_en_pv_sum_c_china
11833  eqi_en_csp_sum_c_china
11834  eqk_en_solar_comp_c_china
11835   
11836  *-------------------------------------------------------------------------------
11838   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
11840  *-------------------------------------------------------------------------------
11841  * Technology development scenarios
11842  *-------------------------------------------------------------------------------
11843   
11845   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
11847  *-------------------------------------------------------------------------------
11848  * Oil Extraction
11849  * Options:
11850  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
11851  *-------------------------------------------------------------------------------
11852   
11854   
11855  eqoilcap_c_china
11856  eqoilprod_c_china
11857  eqq_out_oil_c_china
11858  eqcum_oil_c_china
11859  eqcost_oil_c_china
11860  eqi_oil_c_china
11861  eqi_out_oil_c_china
11862  eqq_emi_out_oil_c_china
11863   
11864  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
11867  *-------------------------------------------------------------------------------
11868  * Uranium Resources
11869  *-------------------------------------------------------------------------------
11870   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
11873  *-------------------------------------------------------------------------------
11874  * Gas Resources
11875  *-------------------------------------------------------------------------------
11876   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
11879  *-------------------------------------------------------------------------------
11880  * Coal Resources
11881  *-------------------------------------------------------------------------------
11882   
11884   
11885   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
11887  *-------------------------------------------------------------------------------
11888  * Climate
11889  *
11890  * Represents the climate
11891  * - based on the DICE model equations
11892  * - Radiative forcing for non CO2 ghgs
11893  * - parameters calibrated to reproduce MAGICC6.4 default response
11894  *
11895  *  Options:
11896  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
11897  * - $setglobal cooperate_on_climate {'YES','NO'}
11898  * - 'YES'(default): Countries within a coalition act in cooperation
11899  *   'NO': Countries within a coalition act individually
11900  *
11901  *-------------------------------------------------------------------------------
11902   
11904   
11906   
11907  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
11910  *-------------------------------------------------------------------------------
11911  * Long-run Damages from Climate Change
11912  * - Economic impacts
11913  * - Adaptation
11914  *-------------------------------------------------------------------------------
11915   
11917   
11919   
11920  *-------------------------------------------------------------------------------
11922   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
11924  *-------------------------------------------------------------------------------
11925  * Light-duty Vehicles for Personal Transport
11926  *-------------------------------------------------------------------------------
11927   
11929   
11930  eqnb_veh_c_china
11931  eqq_en_veh_c_china
11932  eqq_el_edv_c_china
11933  eqmcost_inv_hybrid_c_china
11934  eqmcost_inv_plghybrid_c_china
11935  eqmcost_inv_edv_c_china
11936  *** newcode
11937  eqq_inv_red_ban_c_china
11938  ***
11939  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
11942  *-------------------------------------------------------------------------------
11943  * Road Freight Transport
11944  *-------------------------------------------------------------------------------
11946   
11947  eqnb_frtveh_c_china
11948  eqq_en_frtveh_c_china
11949  eqq_el_frtedv_c_china
11950  eqmcost_inv_hbd_stfr_c_china
11951  eqmcost_inv_plghbd_stfr_c_china
11952  eqmcost_inv_edv_stfr_c_china
11953   
11954  *-------------------------------------------------------------------------------
11956   
11957   
11958   
11959   
11960   
11961   
11962  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
11964  *-------------------------------------------------------------------------------
11965  * Traditional Biomass
11966  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
11967  *  - require post_process to be launch before
11968  *-------------------------------------------------------------------------------
11969   
11971   
11972  * Optional modules
11973   
11974  * Policy modules
11975   
11976  * Calibration
11979  ;
11980   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
11982  *-------------------------------------------------------------------------------
11983  * Call modules by order
11984  *-------------------------------------------------------------------------------
11988   
11989  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
11991  *-------------------------------------------------------------------------------
11992  * Algorithm
11993  *-------------------------------------------------------------------------------
11994   
11996   
11998  * Add the component of the (maximized) objective function as required by the ADMM algorithm
11999  eqobj_c_china..
12000      OBJADMM =e= UTILITY -
12001          sum(t, rho_admm('oil',t) / 2 *
12002              sum(n$(map_clt_n('c_china',n) and trading_t('oil',t,n)),
12003                  power(
12004                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
12005                      x_admm('oil',t,n) +
12006                      xavg_admm('oil',t) +
12007                      u_admm('oil', t)
12008                  ,2)
12009              )) -
12010          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
12011              sum(n$(map_clt_n('c_china',n) and trading_t(c_mkt,t,n)),
12012                  power(
12013                      Q_EMI(c_mkt,t,n) -
12014                      x_admm(c_mkt,t,n) +
12015                      xavg_admm(c_mkt,t) +
12016                      u_admm(c_mkt,t)
12017                  ,2)
12018              ))
12019      ;
12021   
12022  *-------------------------------------------------------------------------------
12024   
12025  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
12027  *-------------------------------------------------------------------------------
12028  * Time
12029  * - Temporal structure
12030  * - Fixed time periods
12031  * - States of the world
12032  *-------------------------------------------------------------------------------
12033   
12035   
12036  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
12038  *-------------------------------------------------------------------------------
12039  * Geographic dimension and mapping with countries
12040  *-------------------------------------------------------------------------------
12041   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
12044  *-------------------------------------------------------------------------------
12045  * Non-Cooperative Setup
12046  *
12047  * Each region is defined as an individual coalition.
12048  *
12049  *-------------------------------------------------------------------------------
12050   
12052   
12053  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
12055  *-------------------------------------------------------------------------------
12056  * Welfare
12057  *-------------------------------------------------------------------------------
12058   
12060   
12061  * Objective function - Welfare to be maximized
12062  equtility_c_china..
12063      UTILITY =e=
12064   
12065  * Negishi SWF
12067   
12068  * Welfare functions based on CEBGE
12071                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
12072                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
12073                      ((sum(n$map_clt_n('c_china',n),
12074                        (l(t,n) / sum(nn$map_clt_n('c_china',nn), l(t,nn))) *
12075                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
12076                       )**(1 / (1 - gamma))
12077                      )**(1 - eta) ) +
12078                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
12079                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
12080                      ((sum(n$map_clt_n('c_china',n),
12081                        (l(t,n) / sum(nn$map_clt_n('c_china',nn), l(t,nn))) *
12082                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
12083                       )**(1 / (1 - gamma))
12084                      )**(1 - eta) )
12085                  )**(1/(1 - eta)) * 1e6
12088   
12089   
12090  ;
12091   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
12094  *-------------------------------------------------------------------------------
12095  * Economy
12096  * - Production and Consumption definition
12097  * - Top-level of the production function
12098  * Options:
12099  * --original_ssp=1 : original SSP population and GDP data
12100  *-------------------------------------------------------------------------------
12101   
12103   
12104  * Production
12105  eqq_y_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12106   
12107      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
12108                     ## Climate feedback on economy
12110                     ## Net cost of Primary and Secondary Energy Sources
12111                     - sum(fuel, COST_FUEL(fuel,t,n))
12112                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
12113                     - sum(cce, COST_EMI(cce,t,n))
12114                     ## Carbon tax
12115                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
12116                     ## Additionnal costs on gross product
12117                     - sum(ccy, COST_Y(ccy,t,n))
12118  ;
12119   
12120  * Consumption
12121  eqq_cc_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
12122      Q('cc',t,n) =e= Q('y',t,n)
12123                      ## Investments in goods g (final good, adaptation)
12124                      -sum(g, I(g,t,n))
12125                      ## Investments in r&d
12126                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
12127                      ## Investments in energy technlogies
12128                      -sum(jinv, I_EN(jinv,t,n))
12129                       ## Investments in grid infrastructures
12130                      - I_EN_GRID(t,n)
12131                      ## Investments in extraction sector
12132                      -sum(extract(f), I_OUT(f,t,n))
12133                      ## O&M for energy technlogies
12134                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
12135                      ## O&M for extraction
12136                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
12137                      ## Energy technology penalty costs
12138                      -sum(jpenalty(j), COST_EN(j,t,n))
12139  ;
12140   
12141  * Capital accumulation
12142  eqk_c_china(g,t,tp1,n)$(map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
12143      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
12144   
12145  * Energy services
12146  eqq_fen_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12147      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
12148   
12149  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
12152  *-------------------------------------------------------------------------------
12153  * Energy sector
12154  *-------------------------------------------------------------------------------
12155   
12157   
12158  *-------------------------------------------------------------------------------
12159  * Production - Energy sector
12160  *-------------------------------------------------------------------------------
12161   
12162  eqq_en_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12163      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
12164   
12165  *-------------------------------------------------------------------------------
12166  * Production - Electrical sector
12167  *-------------------------------------------------------------------------------
12168   
12169  eqq_el_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12170      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
12171   
12172  eqq_el2_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12173      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
12174   
12175  eqq_elffren_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12176      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
12177  eqq_elff_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12178      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
12179   
12180  eqq_ces_el_c_china(ices_el,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
12181      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
12182  ;
12183   
12184  *-------------------------------------------------------------------------------
12185  * Production - Non-electrical sector
12186  *-------------------------------------------------------------------------------
12187   
12188  eqq_nel_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12189      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
12190   
12191  eqq_nelog_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12192      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
12193  ;
12194  eqq_ces_nelgas_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12195      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
12196   
12197  *-------------------------------------------------------------------------------
12198  * PES and fuels
12199  *-------------------------------------------------------------------------------
12200   
12201  eqq_fuel_c_china(fuel,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
12202      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
12203   
12204  *-------------------------------------------------------------------------------
12205  * Cost
12206  *-------------------------------------------------------------------------------
12207   
12208  * Net cost of Primary Energy Supplies
12209  eqcost_pes_c_china(f,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
12210      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
12211                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
12212   
12213  * Net cost of Secondary Energy Supplies
12214  eqcost_ses_c_china(s,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12215      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
12216   
12217   
12218  *-------------------------------------------------------------------------------
12219  * Market balances
12220  *-------------------------------------------------------------------------------
12221   
12222  eq_mkt_clearing_oil_c_china(t,'c_china')$(internal('oil'))..
12223      sum( n$(map_clt_n('c_china',n) and trading_t('oil',t,n)),
12224          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
12225      ) =e= 0;
12226   
12227  *-------------------------------------------------------------------------------
12228  * New capital in the energy sector
12229  *-------------------------------------------------------------------------------
12230   
12231  * Electrical generation plants (new)
12232  eqk_en_c_china(jinv,t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
12233      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
12234                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
12235   
12236  *-------------------------------------------------------------------------------
12237  * ENERGY
12238  *-------------------------------------------------------------------------------
12239   
12240  * Capacity limits in the electrical sector
12241  eqq_en_mu_c_china(jel,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
12242      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
12243   
12244  * Efficiency of energy technology sector
12245  eqq_en_in_c_china(jfed,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
12246      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
12247                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
12248   
12249  * Energy generation "tree"
12250  eqq_en_tree_c_china(j,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
12251      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
12252   
12253  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
12256  *-------------------------------------------------------------------------------
12257  * Carbon Emissions
12258  * - Total CO2 emissions and CO2 Fossil fuel and Industry
12259  * - CO2 emission costs
12260  * - GHG permit market
12261  *-------------------------------------------------------------------------------
12262   
12264   
12265  * GHG emission cap
12266  eqq_emi_lim_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
12267      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
12268                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
12269   
12270  * Compute total and sectoral emissions
12271  eqq_emi_tree_c_china(t,n,e)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
12272      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
12273   
12274  * Industrial CO2 emissions
12275  eqq_emi_co2ffi_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12276      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
12277                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
12278                              # Emissions from biomass
12279                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
12280                              # Emissions from fuel extraction
12281                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
12282                              # Captured emissions
12283                              sum(sink, Q_EMI(sink,t,n));
12284   
12285  * CO2 emission costs
12286  eqcost_emi_co2_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12287      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
12288   
12289  * Emission permit market clearing for internal market
12290  eq_mkt_clearing_nip_c_china(c_mkt,t,'c_china')$(internal(c_mkt))..
12291      sum(n$(map_clt_n('c_china',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
12292   
12293  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
12296  *-------------------------------------------------------------------------------
12297  * Research & Development
12298  * Options:
12299  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
12300  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
12301  *-------------------------------------------------------------------------------
12302   
12304   
12305  * Knowledge stock accumulation
12306  eqk_rd_c_china(rd,t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
12307                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
12308                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
12309                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
12310                                        SPILL(rd,t,n)**rd_coef(rd,'d');
12311   
12312  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
12313  eqspill_coop_c_china(rd,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_china'))..
12314          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
12315                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_china',nn)), K_RD(rd,t,nn)) +
12316                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_china',nn))), K_RD.l(rd,t,nn))
12317                            ) *
12318                            (
12319                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_china',nn)), K_RD(rd,t,nn)) +
12320                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_china',nn))), K_RD.l(rd,t,nn))
12321                              ) - K_RD(rd,t,n)
12322                            );
12323   
12324  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
12325  eqspill_lead_c_china(rd,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_china')) and leadrd(rd,n))..
12326                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
12327   
12328  * No-cooperation : a follower sees is negative effect on the quantity he can grab
12329  eqspill_foll_c_china(rd,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_china')) and (not leadrd(rd,n)))..
12330                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
12331   
12332  *- Only LbR (without learning by doing)
12333  eqmcost_inv_back_c_china(jrd,t,tt,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
12334                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
12335                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
12336   
12337  *- LbR together with learning by doing ==> Two-factor learning curve
12338  eqmcost_inv_back_lbd_c_china(jrd,t,tt,tfirst,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
12339                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
12340                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
12341                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
12342   
12343  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
12346  *-------------------------------------------------------------------------------
12347  * Default Climate Policy Implementation
12348  *
12349  * Options:
12350  *    --policy={bau (default),ctax}
12351  *        Implement a climate policy setting
12352  *  [ --scen= ]
12353  *        Policy variant.
12354  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
12355  *          * XXX for a fixed percentage/yr (e.g. 5) growth
12356  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
12357  *  [ --ctax_year=2020 ]
12358  *        Starting year of the carbon tax
12359  *  [ --ctax_initial=30 ]
12360  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
12361  *
12362  *-------------------------------------------------------------------------------
12364   
12365  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
12367  *-------------------------------------------------------------------------------
12368  * Energy efficiency
12369  *-------------------------------------------------------------------------------
12370   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
12373  *-------------------------------------------------------------------------------
12374  * Hydro Power
12375  *-------------------------------------------------------------------------------
12376   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
12379  *-------------------------------------------------------------------------------
12380  * System Integration:
12381  * - Capacity constraint
12382  * - Flexibility constraint
12383  * - Grid Investment
12384  * - Capacity growth constraint
12385  *-------------------------------------------------------------------------------
12386   
12388   
12389   
12390  * Renewable CES
12391   
12392  * Definition of the renewable CES
12393  eqq_elintren_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12394      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
12395   
12396  * Capacity constraint
12397   
12399  eqfirm_capacity_c_china(t,n)$(map_clt_n('c_china',n) and (not tfix(t)) and year(t) gt 2005)..
12400                   sum(jel_firm, K_EN(jel_firm,t,n))
12401                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
12402                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
12403                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
12404                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
12405                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
12406                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
12407                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
12408                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
12409                                       ) / yearly_hours
12410  ;
12412   
12413  * Flexibility constraint
12414  eqflex_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12415          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
12416                             ( Q_EN('el',t,n) -
12417                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
12418                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
12419                             ) * flex_coeff('load')
12420  ;
12421   
12422  * Grid
12423   
12424  ** Grid depreciation and investments
12425  eqk_en_grid_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
12426                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
12427                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
12428   
12429  ** Grid adjustment to power capacity
12430  eqk_en_grid_to_k_en_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12431                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
12432                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
12433                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
12434                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
12435                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
12436                                     ) / grid_cost +
12437                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
12438                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
12439                                      K_EN('elcsp',t,n);
12440  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
12441   
12442  * Capacity growth constraint
12443  eqcap_growth_c_china(jinv,t,tp1,tp2,n)$((map_clt_n('c_china',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
12444                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
12445                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
12446   
12447  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
12450  *-------------------------------------------------------------------------------
12451  * Nuclear power plants
12452  *-------------------------------------------------------------------------------
12453   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
12456  *-------------------------------------------------------------------------------
12457  * GHG module
12458  * - CH4 FFI + CH4 waste + CH4 open fires
12459  * - N2O FFI + N2O waste + N2O open fires
12460  *-------------------------------------------------------------------------------
12461   
12463   
12464  * CH4, N2O waste emissions
12465  eqq_emi_waste_c_china(waste,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
12466                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
12467   
12468  * n2o FFI
12469  eqq_emi_n2o_ffi_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
12470    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
12471                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
12472                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
12473                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
12474                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
12475                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
12476                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
12477                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
12478                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
12479                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
12480                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
12481                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
12482                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
12483                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
12484                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
12485                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
12486                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
12487                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
12488                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
12489                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
12490                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
12491                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
12492                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
12493                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
12494                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
12495                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
12496                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
12497                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
12498                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
12499                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
12500                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
12501   
12502  * ch4 FFI
12503  eqq_emi_ch4_ffi_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
12504    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
12507  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
12508  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
12509                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
12510                             smax(tt$(year(tt) eq 2015),
12511                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
12514  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
12515  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
12516                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
12517   
12518  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
12521  *-------------------------------------------------------------------------------
12522  * F-gases
12523  * - LLF
12524  * - SLF
12525  *-------------------------------------------------------------------------------
12526   
12528   
12529  * F-gases emissions
12530  eqq_emi_fgases_c_china(fgases,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
12531                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
12532   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
12535  *-------------------------------------------------------------------------------
12536  * Landuse [simplified version of the land-use model]
12537  *-------------------------------------------------------------------------------
12538   
12540   
12541  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
12542  eq_wbio_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12543      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
12544   
12546  * Cost of all woody biomass produced for advanced biofuels and woody biomass
12547  eqcost_pes_wbio_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12548      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
12550   
12551  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
12554  *-------------------------------------------------------------------------------
12555  * Bioenergy power plant
12556  *-------------------------------------------------------------------------------
12557   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
12560  *-------------------------------------------------------------------------------
12561  * Traditional Biofuels
12562  * - Requires the precedence of mod_landuse
12563  *-------------------------------------------------------------------------------
12564   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
12567  *-------------------------------------------------------------------------------
12568  * Advanced biofuel
12569  * - Require the precedence of mod_landuse
12570  *-------------------------------------------------------------------------------
12571   
12573   
12574  * Limitations for nel backstops
12575  eqq_en_lim_advbiofuel_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
12576               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
12577               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
12578   
12579  * Peculiarity of advbiofuel
12580  eqmcost_fuel_advbiofuel_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12581                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
12582   
12583  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
12586  *-------------------------------------------------------------------------------
12587  * Carbon Capture and Sequestration
12588  *-------------------------------------------------------------------------------
12589   
12591   
12592  eqq_emi_ccs_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12593                  Q_EMI('ccs_plant',t,n) =e=
12594                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
12595                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
12596  ;
12597   
12598  eqcost_emi_sinks_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12599                  COST_EMI('ccs_plant',t,n) =e=
12600                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
12601                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
12602  ;
12603   
12604  eq_stor_ccs_cum_c_china(ccs_stor,tp1,t,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
12605                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
12606  ;
12607   
12608  eq_emi_stor_ccs_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12609                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
12610  ;
12611   
12612  eq_emi_leak_ccs_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12613                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
12614   
12615  *-------------------------------------------------------------------------------
12617   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
12619  *-------------------------------------------------------------------------------
12620  * Coal for non-electric sectors
12621  * - Coke Plants
12622  * - Industrial and Commercial combined-heat-and-power (CHP)
12623  * - Others
12624  *-------------------------------------------------------------------------------
12625   
12627   
12628  eqcost_en_nelcoal_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12629           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
12630                                          nelcoal_max_abat(t,n) *
12631                                          (nelcoal_cmac(n,'a') *
12632                                            Q_EN('nelcoalabat',t,n) /
12633                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
12634                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
12635                                              (exp(nelcoal_cmac(n,'c') *
12636                                                (Q_EN('nelcoalabat',t,n)/
12637                                                  (nelcoal_max_abat(t,n) *
12638                                                      nelcoal_baseline(t,n))
12639                                                  ) - 1 )
12640                                              )
12641                                          );
12642   
12643  eqq_ncoalabat_monotone_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
12644          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
12645   
12646  * ensure Q_EN is lower than K_EN for CCS as not in jel
12647  eqq_en_nelcoalccs_max_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12648          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
12649   
12650  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
12653  *-------------------------------------------------------------------------------
12654  * Wind energy module
12655  * - onshore and offshore
12656  *-------------------------------------------------------------------------------
12657   
12659   
12660  * Capacity limits in the wind onshore electrical sector
12661  eqq_en_mu_windon_c_china(wind_dist,wind_class,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
12662      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
12663   
12664  * Capacity limits in the wind offshore electrical sector
12665  eqq_en_mu_windoff_c_china(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
12666      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
12667   
12668  * Wind onshore electrical generation plants (new)
12669  eqk_en_windon_c_china(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
12670      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
12671                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
12672   
12673  * Wind offshore electrical generation plants (new)
12674  eqk_en_windoff_c_china(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
12675      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
12676                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
12677   
12678  * Total onshore wind energy production
12679  eqq_en_windon_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12680                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
12681   
12682  * Total offshore wind energy production
12683  eqq_en_windoff_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12684                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
12685   
12686  * Total onshore wind capacity
12687  eqk_en_windon_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12688                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
12689   
12690  * Total offshore wind capacity
12691  eqk_en_windoff_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12692                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
12693   
12694  * Total onshore wind investment
12695  eqi_en_windon_sum_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
12696                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
12697   
12698  * Total offshore wind investment
12699  eqi_en_windoff_sum_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
12700                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
12701   
12702  *-------------------------------------------------------------------------------
12704   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
12706  *-------------------------------------------------------------------------------
12707  * Solar Powerplants (PV and CSP) to the electrical system
12708  *-------------------------------------------------------------------------------
12709   
12710  *-------------------------------------------------------------------------------
12712   
12713   
12714  * Capacity limits in the pv electrical sector
12715  eqq_en_mu_pv_c_china(solar_dist,solar_class,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
12716                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
12717   
12718  * Capacity limits in the csp electrical sector
12719  eqq_en_mu_csp_c_china(solar_dist,solar_class,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
12720                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
12721   
12722  * PV electrical generation plants (new)
12723  eqk_en_pv_c_china(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
12724                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
12725                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
12726   
12727  * CSP electrical generation plants (new)
12728  eqk_en_csp_c_china(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
12729                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
12730                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
12731   
12732  * Total PV energy production
12733  eqq_en_pv_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12734                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
12735   
12736  * Total CSP energy production
12737  eqq_en_csp_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12738                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
12739   
12740  * Total PV capacity
12741  eqk_en_pv_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12742                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
12743   
12744  * Total CSP capacity
12745  eqk_en_csp_sum_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12746                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
12747   
12748  * Total PV investment
12749  eqi_en_pv_sum_c_china(t,tp1,n)$(map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
12750                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
12751   
12752  * Total CSP investment
12753  eqi_en_csp_sum_c_china(t,tp1,n)$(map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
12754                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
12755   
12756  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
12757  eqk_en_solar_comp_c_china(t,n,solar_dist)$(map_clt_n('c_china',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
12758                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
12759                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
12760   
12761   
12762   
12763  *-------------------------------------------------------------------------------
12765   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
12767  *-------------------------------------------------------------------------------
12768  * Technology development scenarios
12769  *-------------------------------------------------------------------------------
12770   
12772   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
12774  *-------------------------------------------------------------------------------
12775  * Oil Extraction
12776  * Options:
12777  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
12778  *-------------------------------------------------------------------------------
12779   
12781   
12782  * Capacity
12783  eqoilcap_c_china(t,tp1,n,oilg)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
12784      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
12785   
12786  * Production
12787  eqoilprod_c_china(t,tp1,n,oilg)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
12788      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
12789   
12790  eqq_out_oil_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12791      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
12792   
12793  * Cumulative production
12794  eqcum_oil_c_china(t,tp1,n,oilg)$((map_clt_n('c_china',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
12795      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
12796   
12797  * Cost
12798  eqcost_oil_c_china(t,tp1,n,oilg)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
12799      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
12800                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
12801                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
12802   
12803  * Investments
12804  eqi_oil_c_china(t,tp1,n,oilg)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
12805      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
12806   
12807  * Total investment
12808  eqi_out_oil_c_china(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
12809      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
12810   
12811  * Emissions
12812  eqq_emi_out_oil_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12813      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
12814   
12815  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
12818  *-------------------------------------------------------------------------------
12819  * Uranium Resources
12820  *-------------------------------------------------------------------------------
12821   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
12824  *-------------------------------------------------------------------------------
12825  * Gas Resources
12826  *-------------------------------------------------------------------------------
12827   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
12830  *-------------------------------------------------------------------------------
12831  * Coal Resources
12832  *-------------------------------------------------------------------------------
12833   
12835   
12836   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
12838  *-------------------------------------------------------------------------------
12839  * Climate
12840  *
12841  * Represents the climate
12842  * - based on the DICE model equations
12843  * - Radiative forcing for non CO2 ghgs
12844  * - parameters calibrated to reproduce MAGICC6.4 default response
12845  *
12846  *  Options:
12847  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
12848  * - $setglobal cooperate_on_climate {'YES','NO'}
12849  * - 'YES'(default): Countries within a coalition act in cooperation
12850  *   'NO': Countries within a coalition act individually
12851  *
12852  *-------------------------------------------------------------------------------
12853   
12855   
12857   
12858  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
12861  *-------------------------------------------------------------------------------
12862  * Long-run Damages from Climate Change
12863  * - Economic impacts
12864  * - Adaptation
12865  *-------------------------------------------------------------------------------
12866   
12868   
12870   
12871  *-------------------------------------------------------------------------------
12873   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
12875  *-------------------------------------------------------------------------------
12876  * Light-duty Vehicles for Personal Transport
12877  *-------------------------------------------------------------------------------
12878   
12880   
12881  *** newcode
12882  eqq_inv_red_ban_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12883      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
12884   
12885  ***
12886  *- Number of light duty vehicles
12887  eqnb_veh_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12888      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
12889   
12890  *- Yearly energy demand of vehicles
12891  eqq_en_veh_c_china(jveh,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12892      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
12893   
12894  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
12895  eqq_el_edv_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12896      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
12897   
12898  *- Investment cost for hybrid vehicles
12899  eqmcost_inv_hybrid_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
12900                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
12901   
12902  *- Investment cost for plug-in hybrid vehicles
12903  eqmcost_inv_plghybrid_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
12904                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
12905   
12906  *- Investment cost for electric drive vehicles
12907  eqmcost_inv_edv_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
12908                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
12909   
12910  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
12913  *-------------------------------------------------------------------------------
12914  * Road Freight Transport
12915  *-------------------------------------------------------------------------------
12917   
12918  *-  Number of freight vehicles
12919  eqnb_frtveh_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
12920                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
12921   
12922  *-  Yearly fuel consumption of freight vehicles
12923  eqq_en_frtveh_c_china(jfrt,t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12924                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
12925   
12926  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
12927  eqq_el_frtedv_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)))..
12928                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
12929   
12930  *-  Investment cost for hbd_stfr vehicle
12931  eqmcost_inv_hbd_stfr_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
12932                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
12933   
12934  *-  Investment cost for plug-in hbd_stfr vehicle
12935  eqmcost_inv_plghbd_stfr_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
12936                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
12937   
12938  *-  Investment cost for electric drive vehicle
12939  eqmcost_inv_edv_stfr_c_china(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
12940                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
12941   
12942  *-------------------------------------------------------------------------------
12944   
12945   
12946   
12947   
12948   
12949   
12950  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
12952  *-------------------------------------------------------------------------------
12953  * Traditional Biomass
12954  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
12955  *  - require post_process to be launch before
12956  *-------------------------------------------------------------------------------
12957   
12959   
12960  * Optional modules
12961   
12962  * Policy modules
12963   
12964  * Calibration
12967   
12968   
12969  model witch_c_china /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
12971  *-------------------------------------------------------------------------------
12972  * Call modules by order
12973  *-------------------------------------------------------------------------------
12977   
12978  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
12980  *-------------------------------------------------------------------------------
12981  * Algorithm
12982  *-------------------------------------------------------------------------------
12983   
12985   
12986  eqobj_c_china
12987   
12988  *-------------------------------------------------------------------------------
12990   
12991  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
12993  *-------------------------------------------------------------------------------
12994  * Time
12995  * - Temporal structure
12996  * - Fixed time periods
12997  * - States of the world
12998  *-------------------------------------------------------------------------------
12999   
13001   
13002  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
13004  *-------------------------------------------------------------------------------
13005  * Geographic dimension and mapping with countries
13006  *-------------------------------------------------------------------------------
13007   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
13010  *-------------------------------------------------------------------------------
13011  * Non-Cooperative Setup
13012  *
13013  * Each region is defined as an individual coalition.
13014  *
13015  *-------------------------------------------------------------------------------
13016   
13018   
13019  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
13021  *-------------------------------------------------------------------------------
13022  * Welfare
13023  *-------------------------------------------------------------------------------
13024   
13026   
13027  equtility_c_china
13028   
13029  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
13032  *-------------------------------------------------------------------------------
13033  * Economy
13034  * - Production and Consumption definition
13035  * - Top-level of the production function
13036  * Options:
13037  * --original_ssp=1 : original SSP population and GDP data
13038  *-------------------------------------------------------------------------------
13039   
13041   
13042  eqk_c_china
13043  eqq_cc_c_china
13044  eqq_fen_c_china
13045  eqq_y_c_china
13046   
13047  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
13050  *-------------------------------------------------------------------------------
13051  * Energy sector
13052  *-------------------------------------------------------------------------------
13053   
13055   
13056  eq_mkt_clearing_oil_c_china
13057  eqcost_pes_c_china
13058  eqcost_ses_c_china
13059  eqk_en_c_china
13060  eqq_ces_el_c_china
13061  eqq_ces_nelgas_c_china
13062  eqq_el2_c_china
13063  eqq_el_c_china
13064  eqq_elff_c_china
13065  eqq_en_c_china
13066  eqq_en_in_c_china
13067  eqq_en_mu_c_china
13068  eqq_en_tree_c_china
13069  eqq_nel_c_china
13070  eqq_nelog_c_china
13071  eqq_fuel_c_china
13072  eqq_elffren_c_china
13073   
13074  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
13077  *-------------------------------------------------------------------------------
13078  * Carbon Emissions
13079  * - Total CO2 emissions and CO2 Fossil fuel and Industry
13080  * - CO2 emission costs
13081  * - GHG permit market
13082  *-------------------------------------------------------------------------------
13083   
13085   
13086  eqq_emi_lim_c_china
13087  eqq_emi_tree_c_china
13088  eqq_emi_co2ffi_c_china
13089   
13090  eqcost_emi_co2_c_china
13091   
13092  eq_mkt_clearing_nip_c_china
13093   
13094  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
13097  *-------------------------------------------------------------------------------
13098  * Research & Development
13099  * Options:
13100  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
13101  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
13102  *-------------------------------------------------------------------------------
13103   
13105   
13106  eqk_rd_c_china
13107  eqspill_coop_c_china
13108  eqspill_lead_c_china
13109  eqspill_foll_c_china
13110  eqmcost_inv_back_c_china
13111  eqmcost_inv_back_lbd_c_china
13112   
13113  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
13116  *-------------------------------------------------------------------------------
13117  * Default Climate Policy Implementation
13118  *
13119  * Options:
13120  *    --policy={bau (default),ctax}
13121  *        Implement a climate policy setting
13122  *  [ --scen= ]
13123  *        Policy variant.
13124  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
13125  *          * XXX for a fixed percentage/yr (e.g. 5) growth
13126  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
13127  *  [ --ctax_year=2020 ]
13128  *        Starting year of the carbon tax
13129  *  [ --ctax_initial=30 ]
13130  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
13131  *
13132  *-------------------------------------------------------------------------------
13134   
13135  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
13137  *-------------------------------------------------------------------------------
13138  * Energy efficiency
13139  *-------------------------------------------------------------------------------
13140   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
13143  *-------------------------------------------------------------------------------
13144  * Hydro Power
13145  *-------------------------------------------------------------------------------
13146   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
13149  *-------------------------------------------------------------------------------
13150  * System Integration:
13151  * - Capacity constraint
13152  * - Flexibility constraint
13153  * - Grid Investment
13154  * - Capacity growth constraint
13155  *-------------------------------------------------------------------------------
13156   
13158   
13159  eqq_elintren_c_china
13160  eqflex_c_china
13161  eqk_en_grid_c_china
13162  eqk_en_grid_to_k_en_c_china
13163  eqfirm_capacity_c_china
13164  eqcap_growth_c_china
13165   
13166  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
13169  *-------------------------------------------------------------------------------
13170  * Nuclear power plants
13171  *-------------------------------------------------------------------------------
13172   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
13175  *-------------------------------------------------------------------------------
13176  * GHG module
13177  * - CH4 FFI + CH4 waste + CH4 open fires
13178  * - N2O FFI + N2O waste + N2O open fires
13179  *-------------------------------------------------------------------------------
13180   
13182   
13183  eqq_emi_waste_c_china
13184  eqq_emi_n2o_ffi_c_china
13185  eqq_emi_ch4_ffi_c_china
13186   
13187  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
13190  *-------------------------------------------------------------------------------
13191  * F-gases
13192  * - LLF
13193  * - SLF
13194  *-------------------------------------------------------------------------------
13195   
13197   
13198  eqq_emi_fgases_c_china
13199   
13200  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
13203  *-------------------------------------------------------------------------------
13204  * Landuse [simplified version of the land-use model]
13205  *-------------------------------------------------------------------------------
13206   
13208   
13209  eq_wbio_c_china
13210  eqcost_pes_wbio_c_china
13211   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
13214  *-------------------------------------------------------------------------------
13215  * Bioenergy power plant
13216  *-------------------------------------------------------------------------------
13217   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
13220  *-------------------------------------------------------------------------------
13221  * Traditional Biofuels
13222  * - Requires the precedence of mod_landuse
13223  *-------------------------------------------------------------------------------
13224   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
13227  *-------------------------------------------------------------------------------
13228  * Advanced biofuel
13229  * - Require the precedence of mod_landuse
13230  *-------------------------------------------------------------------------------
13231   
13233   
13234  eqq_en_lim_advbiofuel_c_china
13235  eqmcost_fuel_advbiofuel_c_china
13236   
13237  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
13240  *-------------------------------------------------------------------------------
13241  * Carbon Capture and Sequestration
13242  *-------------------------------------------------------------------------------
13243   
13245   
13246  eqq_emi_ccs_c_china
13247  eqcost_emi_sinks_c_china
13248  eq_stor_ccs_cum_c_china
13249  eq_emi_stor_ccs_c_china
13250  eq_emi_leak_ccs_c_china
13251   
13252  *-------------------------------------------------------------------------------
13254   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
13256  *-------------------------------------------------------------------------------
13257  * Coal for non-electric sectors
13258  * - Coke Plants
13259  * - Industrial and Commercial combined-heat-and-power (CHP)
13260  * - Others
13261  *-------------------------------------------------------------------------------
13262   
13264   
13265  eqcost_en_nelcoal_c_china
13266  eqq_ncoalabat_monotone_c_china
13267  eqq_en_nelcoalccs_max_c_china
13268   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
13271  *-------------------------------------------------------------------------------
13272  * Wind energy module
13273  * - onshore and offshore
13274  *-------------------------------------------------------------------------------
13275   
13277   
13278  eqq_en_mu_windon_c_china
13279  eqq_en_mu_windoff_c_china
13280  eqk_en_windon_c_china
13281  eqk_en_windoff_c_china
13282  eqq_en_windon_sum_c_china
13283  eqq_en_windoff_sum_c_china
13284  eqk_en_windon_sum_c_china
13285  eqk_en_windoff_sum_c_china
13286  eqi_en_windon_sum_c_china
13287  eqi_en_windoff_sum_c_china
13288   
13290   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
13292  *-------------------------------------------------------------------------------
13293  * Solar Powerplants (PV and CSP) to the electrical system
13294  *-------------------------------------------------------------------------------
13295   
13296  *-------------------------------------------------------------------------------
13298   
13299  eqq_en_mu_pv_c_china
13300  eqq_en_mu_csp_c_china
13301  eqk_en_pv_c_china
13302  eqk_en_csp_c_china
13303  eqq_en_pv_sum_c_china
13304  eqq_en_csp_sum_c_china
13305  eqk_en_pv_sum_c_china
13306  eqk_en_csp_sum_c_china
13307  eqi_en_pv_sum_c_china
13308  eqi_en_csp_sum_c_china
13309  eqk_en_solar_comp_c_china
13310   
13311  *-------------------------------------------------------------------------------
13313   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
13315  *-------------------------------------------------------------------------------
13316  * Technology development scenarios
13317  *-------------------------------------------------------------------------------
13318   
13320   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
13322  *-------------------------------------------------------------------------------
13323  * Oil Extraction
13324  * Options:
13325  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
13326  *-------------------------------------------------------------------------------
13327   
13329   
13330  eqoilcap_c_china
13331  eqoilprod_c_china
13332  eqq_out_oil_c_china
13333  eqcum_oil_c_china
13334  eqcost_oil_c_china
13335  eqi_oil_c_china
13336  eqi_out_oil_c_china
13337  eqq_emi_out_oil_c_china
13338   
13339  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
13342  *-------------------------------------------------------------------------------
13343  * Uranium Resources
13344  *-------------------------------------------------------------------------------
13345   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
13348  *-------------------------------------------------------------------------------
13349  * Gas Resources
13350  *-------------------------------------------------------------------------------
13351   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
13354  *-------------------------------------------------------------------------------
13355  * Coal Resources
13356  *-------------------------------------------------------------------------------
13357   
13359   
13360   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
13362  *-------------------------------------------------------------------------------
13363  * Climate
13364  *
13365  * Represents the climate
13366  * - based on the DICE model equations
13367  * - Radiative forcing for non CO2 ghgs
13368  * - parameters calibrated to reproduce MAGICC6.4 default response
13369  *
13370  *  Options:
13371  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
13372  * - $setglobal cooperate_on_climate {'YES','NO'}
13373  * - 'YES'(default): Countries within a coalition act in cooperation
13374  *   'NO': Countries within a coalition act individually
13375  *
13376  *-------------------------------------------------------------------------------
13377   
13379   
13381   
13382  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
13385  *-------------------------------------------------------------------------------
13386  * Long-run Damages from Climate Change
13387  * - Economic impacts
13388  * - Adaptation
13389  *-------------------------------------------------------------------------------
13390   
13392   
13394   
13395  *-------------------------------------------------------------------------------
13397   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
13399  *-------------------------------------------------------------------------------
13400  * Light-duty Vehicles for Personal Transport
13401  *-------------------------------------------------------------------------------
13402   
13404   
13405  eqnb_veh_c_china
13406  eqq_en_veh_c_china
13407  eqq_el_edv_c_china
13408  eqmcost_inv_hybrid_c_china
13409  eqmcost_inv_plghybrid_c_china
13410  eqmcost_inv_edv_c_china
13411  *** newcode
13412  eqq_inv_red_ban_c_china
13413  ***
13414  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
13417  *-------------------------------------------------------------------------------
13418  * Road Freight Transport
13419  *-------------------------------------------------------------------------------
13421   
13422  eqnb_frtveh_c_china
13423  eqq_en_frtveh_c_china
13424  eqq_el_frtedv_c_china
13425  eqmcost_inv_hbd_stfr_c_china
13426  eqmcost_inv_plghbd_stfr_c_china
13427  eqmcost_inv_edv_stfr_c_china
13428   
13429  *-------------------------------------------------------------------------------
13431   
13432   
13433   
13434   
13435   
13436   
13437  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
13439  *-------------------------------------------------------------------------------
13440  * Traditional Biomass
13441  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
13442  *  - require post_process to be launch before
13443  *-------------------------------------------------------------------------------
13444   
13446   
13447  * Optional modules
13448   
13449  * Policy modules
13450   
13451  * Calibration
13454  /;
13455   
13456  witch_c_china.optfile=1;   # the option file solvername.opt is to be used
13457  witch_c_china.holdfixed=1; # treat fixed values as constant
13458  witch_c_china.scaleopt=1;  # Use scaling for better gradients estimation
13459  witch_c_china.solvelink=3; # Use parallel or sequential solving
13460   
13465   
13466  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
13468  *-------------------------------------------------------------------------------
13469  * Call modules by order
13470  *-------------------------------------------------------------------------------
13474   
13475  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
13477  *-------------------------------------------------------------------------------
13478  * Algorithm
13479  *-------------------------------------------------------------------------------
13480   
13482   
13483  eqobj_c_europe
13484   
13485  *-------------------------------------------------------------------------------
13487   
13488  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
13490  *-------------------------------------------------------------------------------
13491  * Time
13492  * - Temporal structure
13493  * - Fixed time periods
13494  * - States of the world
13495  *-------------------------------------------------------------------------------
13496   
13498   
13499  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
13501  *-------------------------------------------------------------------------------
13502  * Geographic dimension and mapping with countries
13503  *-------------------------------------------------------------------------------
13504   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
13507  *-------------------------------------------------------------------------------
13508  * Non-Cooperative Setup
13509  *
13510  * Each region is defined as an individual coalition.
13511  *
13512  *-------------------------------------------------------------------------------
13513   
13515   
13516  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
13518  *-------------------------------------------------------------------------------
13519  * Welfare
13520  *-------------------------------------------------------------------------------
13521   
13523   
13524  equtility_c_europe
13525   
13526  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
13529  *-------------------------------------------------------------------------------
13530  * Economy
13531  * - Production and Consumption definition
13532  * - Top-level of the production function
13533  * Options:
13534  * --original_ssp=1 : original SSP population and GDP data
13535  *-------------------------------------------------------------------------------
13536   
13538   
13539  eqk_c_europe
13540  eqq_cc_c_europe
13541  eqq_fen_c_europe
13542  eqq_y_c_europe
13543   
13544  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
13547  *-------------------------------------------------------------------------------
13548  * Energy sector
13549  *-------------------------------------------------------------------------------
13550   
13552   
13553  eq_mkt_clearing_oil_c_europe
13554  eqcost_pes_c_europe
13555  eqcost_ses_c_europe
13556  eqk_en_c_europe
13557  eqq_ces_el_c_europe
13558  eqq_ces_nelgas_c_europe
13559  eqq_el2_c_europe
13560  eqq_el_c_europe
13561  eqq_elff_c_europe
13562  eqq_en_c_europe
13563  eqq_en_in_c_europe
13564  eqq_en_mu_c_europe
13565  eqq_en_tree_c_europe
13566  eqq_nel_c_europe
13567  eqq_nelog_c_europe
13568  eqq_fuel_c_europe
13569  eqq_elffren_c_europe
13570   
13571  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
13574  *-------------------------------------------------------------------------------
13575  * Carbon Emissions
13576  * - Total CO2 emissions and CO2 Fossil fuel and Industry
13577  * - CO2 emission costs
13578  * - GHG permit market
13579  *-------------------------------------------------------------------------------
13580   
13582   
13583  eqq_emi_lim_c_europe
13584  eqq_emi_tree_c_europe
13585  eqq_emi_co2ffi_c_europe
13586   
13587  eqcost_emi_co2_c_europe
13588   
13589  eq_mkt_clearing_nip_c_europe
13590   
13591  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
13594  *-------------------------------------------------------------------------------
13595  * Research & Development
13596  * Options:
13597  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
13598  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
13599  *-------------------------------------------------------------------------------
13600   
13602   
13603  eqk_rd_c_europe
13604  eqspill_coop_c_europe
13605  eqspill_lead_c_europe
13606  eqspill_foll_c_europe
13607  eqmcost_inv_back_c_europe
13608  eqmcost_inv_back_lbd_c_europe
13609   
13610  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
13613  *-------------------------------------------------------------------------------
13614  * Default Climate Policy Implementation
13615  *
13616  * Options:
13617  *    --policy={bau (default),ctax}
13618  *        Implement a climate policy setting
13619  *  [ --scen= ]
13620  *        Policy variant.
13621  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
13622  *          * XXX for a fixed percentage/yr (e.g. 5) growth
13623  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
13624  *  [ --ctax_year=2020 ]
13625  *        Starting year of the carbon tax
13626  *  [ --ctax_initial=30 ]
13627  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
13628  *
13629  *-------------------------------------------------------------------------------
13631   
13632  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
13634  *-------------------------------------------------------------------------------
13635  * Energy efficiency
13636  *-------------------------------------------------------------------------------
13637   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
13640  *-------------------------------------------------------------------------------
13641  * Hydro Power
13642  *-------------------------------------------------------------------------------
13643   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
13646  *-------------------------------------------------------------------------------
13647  * System Integration:
13648  * - Capacity constraint
13649  * - Flexibility constraint
13650  * - Grid Investment
13651  * - Capacity growth constraint
13652  *-------------------------------------------------------------------------------
13653   
13655   
13656  eqq_elintren_c_europe
13657  eqflex_c_europe
13658  eqk_en_grid_c_europe
13659  eqk_en_grid_to_k_en_c_europe
13660  eqfirm_capacity_c_europe
13661  eqcap_growth_c_europe
13662   
13663  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
13666  *-------------------------------------------------------------------------------
13667  * Nuclear power plants
13668  *-------------------------------------------------------------------------------
13669   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
13672  *-------------------------------------------------------------------------------
13673  * GHG module
13674  * - CH4 FFI + CH4 waste + CH4 open fires
13675  * - N2O FFI + N2O waste + N2O open fires
13676  *-------------------------------------------------------------------------------
13677   
13679   
13680  eqq_emi_waste_c_europe
13681  eqq_emi_n2o_ffi_c_europe
13682  eqq_emi_ch4_ffi_c_europe
13683   
13684  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
13687  *-------------------------------------------------------------------------------
13688  * F-gases
13689  * - LLF
13690  * - SLF
13691  *-------------------------------------------------------------------------------
13692   
13694   
13695  eqq_emi_fgases_c_europe
13696   
13697  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
13700  *-------------------------------------------------------------------------------
13701  * Landuse [simplified version of the land-use model]
13702  *-------------------------------------------------------------------------------
13703   
13705   
13706  eq_wbio_c_europe
13707  eqcost_pes_wbio_c_europe
13708   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
13711  *-------------------------------------------------------------------------------
13712  * Bioenergy power plant
13713  *-------------------------------------------------------------------------------
13714   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
13717  *-------------------------------------------------------------------------------
13718  * Traditional Biofuels
13719  * - Requires the precedence of mod_landuse
13720  *-------------------------------------------------------------------------------
13721   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
13724  *-------------------------------------------------------------------------------
13725  * Advanced biofuel
13726  * - Require the precedence of mod_landuse
13727  *-------------------------------------------------------------------------------
13728   
13730   
13731  eqq_en_lim_advbiofuel_c_europe
13732  eqmcost_fuel_advbiofuel_c_europe
13733   
13734  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
13737  *-------------------------------------------------------------------------------
13738  * Carbon Capture and Sequestration
13739  *-------------------------------------------------------------------------------
13740   
13742   
13743  eqq_emi_ccs_c_europe
13744  eqcost_emi_sinks_c_europe
13745  eq_stor_ccs_cum_c_europe
13746  eq_emi_stor_ccs_c_europe
13747  eq_emi_leak_ccs_c_europe
13748   
13749  *-------------------------------------------------------------------------------
13751   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
13753  *-------------------------------------------------------------------------------
13754  * Coal for non-electric sectors
13755  * - Coke Plants
13756  * - Industrial and Commercial combined-heat-and-power (CHP)
13757  * - Others
13758  *-------------------------------------------------------------------------------
13759   
13761   
13762  eqcost_en_nelcoal_c_europe
13763  eqq_ncoalabat_monotone_c_europe
13764  eqq_en_nelcoalccs_max_c_europe
13765   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
13768  *-------------------------------------------------------------------------------
13769  * Wind energy module
13770  * - onshore and offshore
13771  *-------------------------------------------------------------------------------
13772   
13774   
13775  eqq_en_mu_windon_c_europe
13776  eqq_en_mu_windoff_c_europe
13777  eqk_en_windon_c_europe
13778  eqk_en_windoff_c_europe
13779  eqq_en_windon_sum_c_europe
13780  eqq_en_windoff_sum_c_europe
13781  eqk_en_windon_sum_c_europe
13782  eqk_en_windoff_sum_c_europe
13783  eqi_en_windon_sum_c_europe
13784  eqi_en_windoff_sum_c_europe
13785   
13787   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
13789  *-------------------------------------------------------------------------------
13790  * Solar Powerplants (PV and CSP) to the electrical system
13791  *-------------------------------------------------------------------------------
13792   
13793  *-------------------------------------------------------------------------------
13795   
13796  eqq_en_mu_pv_c_europe
13797  eqq_en_mu_csp_c_europe
13798  eqk_en_pv_c_europe
13799  eqk_en_csp_c_europe
13800  eqq_en_pv_sum_c_europe
13801  eqq_en_csp_sum_c_europe
13802  eqk_en_pv_sum_c_europe
13803  eqk_en_csp_sum_c_europe
13804  eqi_en_pv_sum_c_europe
13805  eqi_en_csp_sum_c_europe
13806  eqk_en_solar_comp_c_europe
13807   
13808  *-------------------------------------------------------------------------------
13810   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
13812  *-------------------------------------------------------------------------------
13813  * Technology development scenarios
13814  *-------------------------------------------------------------------------------
13815   
13817   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
13819  *-------------------------------------------------------------------------------
13820  * Oil Extraction
13821  * Options:
13822  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
13823  *-------------------------------------------------------------------------------
13824   
13826   
13827  eqoilcap_c_europe
13828  eqoilprod_c_europe
13829  eqq_out_oil_c_europe
13830  eqcum_oil_c_europe
13831  eqcost_oil_c_europe
13832  eqi_oil_c_europe
13833  eqi_out_oil_c_europe
13834  eqq_emi_out_oil_c_europe
13835   
13836  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
13839  *-------------------------------------------------------------------------------
13840  * Uranium Resources
13841  *-------------------------------------------------------------------------------
13842   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
13845  *-------------------------------------------------------------------------------
13846  * Gas Resources
13847  *-------------------------------------------------------------------------------
13848   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
13851  *-------------------------------------------------------------------------------
13852  * Coal Resources
13853  *-------------------------------------------------------------------------------
13854   
13856   
13857   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
13859  *-------------------------------------------------------------------------------
13860  * Climate
13861  *
13862  * Represents the climate
13863  * - based on the DICE model equations
13864  * - Radiative forcing for non CO2 ghgs
13865  * - parameters calibrated to reproduce MAGICC6.4 default response
13866  *
13867  *  Options:
13868  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
13869  * - $setglobal cooperate_on_climate {'YES','NO'}
13870  * - 'YES'(default): Countries within a coalition act in cooperation
13871  *   'NO': Countries within a coalition act individually
13872  *
13873  *-------------------------------------------------------------------------------
13874   
13876   
13878   
13879  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
13882  *-------------------------------------------------------------------------------
13883  * Long-run Damages from Climate Change
13884  * - Economic impacts
13885  * - Adaptation
13886  *-------------------------------------------------------------------------------
13887   
13889   
13891   
13892  *-------------------------------------------------------------------------------
13894   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
13896  *-------------------------------------------------------------------------------
13897  * Light-duty Vehicles for Personal Transport
13898  *-------------------------------------------------------------------------------
13899   
13901   
13902  eqnb_veh_c_europe
13903  eqq_en_veh_c_europe
13904  eqq_el_edv_c_europe
13905  eqmcost_inv_hybrid_c_europe
13906  eqmcost_inv_plghybrid_c_europe
13907  eqmcost_inv_edv_c_europe
13908  *** newcode
13909  eqq_inv_red_ban_c_europe
13910  ***
13911  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
13914  *-------------------------------------------------------------------------------
13915  * Road Freight Transport
13916  *-------------------------------------------------------------------------------
13918   
13919  eqnb_frtveh_c_europe
13920  eqq_en_frtveh_c_europe
13921  eqq_el_frtedv_c_europe
13922  eqmcost_inv_hbd_stfr_c_europe
13923  eqmcost_inv_plghbd_stfr_c_europe
13924  eqmcost_inv_edv_stfr_c_europe
13925   
13926  *-------------------------------------------------------------------------------
13928   
13929   
13930   
13931   
13932   
13933   
13934  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
13936  *-------------------------------------------------------------------------------
13937  * Traditional Biomass
13938  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
13939  *  - require post_process to be launch before
13940  *-------------------------------------------------------------------------------
13941   
13943   
13944  * Optional modules
13945   
13946  * Policy modules
13947   
13948  * Calibration
13951  ;
13952   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
13954  *-------------------------------------------------------------------------------
13955  * Call modules by order
13956  *-------------------------------------------------------------------------------
13960   
13961  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
13963  *-------------------------------------------------------------------------------
13964  * Algorithm
13965  *-------------------------------------------------------------------------------
13966   
13968   
13970  * Add the component of the (maximized) objective function as required by the ADMM algorithm
13971  eqobj_c_europe..
13972      OBJADMM =e= UTILITY -
13973          sum(t, rho_admm('oil',t) / 2 *
13974              sum(n$(map_clt_n('c_europe',n) and trading_t('oil',t,n)),
13975                  power(
13976                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
13977                      x_admm('oil',t,n) +
13978                      xavg_admm('oil',t) +
13979                      u_admm('oil', t)
13980                  ,2)
13981              )) -
13982          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
13983              sum(n$(map_clt_n('c_europe',n) and trading_t(c_mkt,t,n)),
13984                  power(
13985                      Q_EMI(c_mkt,t,n) -
13986                      x_admm(c_mkt,t,n) +
13987                      xavg_admm(c_mkt,t) +
13988                      u_admm(c_mkt,t)
13989                  ,2)
13990              ))
13991      ;
13993   
13994  *-------------------------------------------------------------------------------
13996   
13997  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
13999  *-------------------------------------------------------------------------------
14000  * Time
14001  * - Temporal structure
14002  * - Fixed time periods
14003  * - States of the world
14004  *-------------------------------------------------------------------------------
14005   
14007   
14008  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
14010  *-------------------------------------------------------------------------------
14011  * Geographic dimension and mapping with countries
14012  *-------------------------------------------------------------------------------
14013   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
14016  *-------------------------------------------------------------------------------
14017  * Non-Cooperative Setup
14018  *
14019  * Each region is defined as an individual coalition.
14020  *
14021  *-------------------------------------------------------------------------------
14022   
14024   
14025  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
14027  *-------------------------------------------------------------------------------
14028  * Welfare
14029  *-------------------------------------------------------------------------------
14030   
14032   
14033  * Objective function - Welfare to be maximized
14034  equtility_c_europe..
14035      UTILITY =e=
14036   
14037  * Negishi SWF
14039   
14040  * Welfare functions based on CEBGE
14043                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
14044                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
14045                      ((sum(n$map_clt_n('c_europe',n),
14046                        (l(t,n) / sum(nn$map_clt_n('c_europe',nn), l(t,nn))) *
14047                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
14048                       )**(1 / (1 - gamma))
14049                      )**(1 - eta) ) +
14050                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
14051                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
14052                      ((sum(n$map_clt_n('c_europe',n),
14053                        (l(t,n) / sum(nn$map_clt_n('c_europe',nn), l(t,nn))) *
14054                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
14055                       )**(1 / (1 - gamma))
14056                      )**(1 - eta) )
14057                  )**(1/(1 - eta)) * 1e6
14060   
14061   
14062  ;
14063   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
14066  *-------------------------------------------------------------------------------
14067  * Economy
14068  * - Production and Consumption definition
14069  * - Top-level of the production function
14070  * Options:
14071  * --original_ssp=1 : original SSP population and GDP data
14072  *-------------------------------------------------------------------------------
14073   
14075   
14076  * Production
14077  eqq_y_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14078   
14079      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
14080                     ## Climate feedback on economy
14082                     ## Net cost of Primary and Secondary Energy Sources
14083                     - sum(fuel, COST_FUEL(fuel,t,n))
14084                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
14085                     - sum(cce, COST_EMI(cce,t,n))
14086                     ## Carbon tax
14087                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
14088                     ## Additionnal costs on gross product
14089                     - sum(ccy, COST_Y(ccy,t,n))
14090  ;
14091   
14092  * Consumption
14093  eqq_cc_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
14094      Q('cc',t,n) =e= Q('y',t,n)
14095                      ## Investments in goods g (final good, adaptation)
14096                      -sum(g, I(g,t,n))
14097                      ## Investments in r&d
14098                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
14099                      ## Investments in energy technlogies
14100                      -sum(jinv, I_EN(jinv,t,n))
14101                       ## Investments in grid infrastructures
14102                      - I_EN_GRID(t,n)
14103                      ## Investments in extraction sector
14104                      -sum(extract(f), I_OUT(f,t,n))
14105                      ## O&M for energy technlogies
14106                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
14107                      ## O&M for extraction
14108                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
14109                      ## Energy technology penalty costs
14110                      -sum(jpenalty(j), COST_EN(j,t,n))
14111  ;
14112   
14113  * Capital accumulation
14114  eqk_c_europe(g,t,tp1,n)$(map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
14115      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
14116   
14117  * Energy services
14118  eqq_fen_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14119      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
14120   
14121  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
14124  *-------------------------------------------------------------------------------
14125  * Energy sector
14126  *-------------------------------------------------------------------------------
14127   
14129   
14130  *-------------------------------------------------------------------------------
14131  * Production - Energy sector
14132  *-------------------------------------------------------------------------------
14133   
14134  eqq_en_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14135      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
14136   
14137  *-------------------------------------------------------------------------------
14138  * Production - Electrical sector
14139  *-------------------------------------------------------------------------------
14140   
14141  eqq_el_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14142      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
14143   
14144  eqq_el2_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14145      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
14146   
14147  eqq_elffren_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14148      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
14149  eqq_elff_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14150      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
14151   
14152  eqq_ces_el_c_europe(ices_el,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
14153      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
14154  ;
14155   
14156  *-------------------------------------------------------------------------------
14157  * Production - Non-electrical sector
14158  *-------------------------------------------------------------------------------
14159   
14160  eqq_nel_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14161      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
14162   
14163  eqq_nelog_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14164      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
14165  ;
14166  eqq_ces_nelgas_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14167      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
14168   
14169  *-------------------------------------------------------------------------------
14170  * PES and fuels
14171  *-------------------------------------------------------------------------------
14172   
14173  eqq_fuel_c_europe(fuel,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
14174      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
14175   
14176  *-------------------------------------------------------------------------------
14177  * Cost
14178  *-------------------------------------------------------------------------------
14179   
14180  * Net cost of Primary Energy Supplies
14181  eqcost_pes_c_europe(f,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
14182      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
14183                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
14184   
14185  * Net cost of Secondary Energy Supplies
14186  eqcost_ses_c_europe(s,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14187      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
14188   
14189   
14190  *-------------------------------------------------------------------------------
14191  * Market balances
14192  *-------------------------------------------------------------------------------
14193   
14194  eq_mkt_clearing_oil_c_europe(t,'c_europe')$(internal('oil'))..
14195      sum( n$(map_clt_n('c_europe',n) and trading_t('oil',t,n)),
14196          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
14197      ) =e= 0;
14198   
14199  *-------------------------------------------------------------------------------
14200  * New capital in the energy sector
14201  *-------------------------------------------------------------------------------
14202   
14203  * Electrical generation plants (new)
14204  eqk_en_c_europe(jinv,t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
14205      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
14206                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
14207   
14208  *-------------------------------------------------------------------------------
14209  * ENERGY
14210  *-------------------------------------------------------------------------------
14211   
14212  * Capacity limits in the electrical sector
14213  eqq_en_mu_c_europe(jel,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
14214      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
14215   
14216  * Efficiency of energy technology sector
14217  eqq_en_in_c_europe(jfed,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
14218      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
14219                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
14220   
14221  * Energy generation "tree"
14222  eqq_en_tree_c_europe(j,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
14223      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
14224   
14225  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
14228  *-------------------------------------------------------------------------------
14229  * Carbon Emissions
14230  * - Total CO2 emissions and CO2 Fossil fuel and Industry
14231  * - CO2 emission costs
14232  * - GHG permit market
14233  *-------------------------------------------------------------------------------
14234   
14236   
14237  * GHG emission cap
14238  eqq_emi_lim_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
14239      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
14240                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
14241   
14242  * Compute total and sectoral emissions
14243  eqq_emi_tree_c_europe(t,n,e)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
14244      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
14245   
14246  * Industrial CO2 emissions
14247  eqq_emi_co2ffi_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14248      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
14249                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
14250                              # Emissions from biomass
14251                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
14252                              # Emissions from fuel extraction
14253                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
14254                              # Captured emissions
14255                              sum(sink, Q_EMI(sink,t,n));
14256   
14257  * CO2 emission costs
14258  eqcost_emi_co2_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14259      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
14260   
14261  * Emission permit market clearing for internal market
14262  eq_mkt_clearing_nip_c_europe(c_mkt,t,'c_europe')$(internal(c_mkt))..
14263      sum(n$(map_clt_n('c_europe',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
14264   
14265  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
14268  *-------------------------------------------------------------------------------
14269  * Research & Development
14270  * Options:
14271  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
14272  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
14273  *-------------------------------------------------------------------------------
14274   
14276   
14277  * Knowledge stock accumulation
14278  eqk_rd_c_europe(rd,t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
14279                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
14280                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
14281                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
14282                                        SPILL(rd,t,n)**rd_coef(rd,'d');
14283   
14284  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
14285  eqspill_coop_c_europe(rd,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_europe'))..
14286          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
14287                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_europe',nn)), K_RD(rd,t,nn)) +
14288                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_europe',nn))), K_RD.l(rd,t,nn))
14289                            ) *
14290                            (
14291                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_europe',nn)), K_RD(rd,t,nn)) +
14292                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_europe',nn))), K_RD.l(rd,t,nn))
14293                              ) - K_RD(rd,t,n)
14294                            );
14295   
14296  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
14297  eqspill_lead_c_europe(rd,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_europe')) and leadrd(rd,n))..
14298                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
14299   
14300  * No-cooperation : a follower sees is negative effect on the quantity he can grab
14301  eqspill_foll_c_europe(rd,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_europe')) and (not leadrd(rd,n)))..
14302                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
14303   
14304  *- Only LbR (without learning by doing)
14305  eqmcost_inv_back_c_europe(jrd,t,tt,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
14306                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
14307                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
14308   
14309  *- LbR together with learning by doing ==> Two-factor learning curve
14310  eqmcost_inv_back_lbd_c_europe(jrd,t,tt,tfirst,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
14311                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
14312                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
14313                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
14314   
14315  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
14318  *-------------------------------------------------------------------------------
14319  * Default Climate Policy Implementation
14320  *
14321  * Options:
14322  *    --policy={bau (default),ctax}
14323  *        Implement a climate policy setting
14324  *  [ --scen= ]
14325  *        Policy variant.
14326  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
14327  *          * XXX for a fixed percentage/yr (e.g. 5) growth
14328  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
14329  *  [ --ctax_year=2020 ]
14330  *        Starting year of the carbon tax
14331  *  [ --ctax_initial=30 ]
14332  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
14333  *
14334  *-------------------------------------------------------------------------------
14336   
14337  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
14339  *-------------------------------------------------------------------------------
14340  * Energy efficiency
14341  *-------------------------------------------------------------------------------
14342   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
14345  *-------------------------------------------------------------------------------
14346  * Hydro Power
14347  *-------------------------------------------------------------------------------
14348   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
14351  *-------------------------------------------------------------------------------
14352  * System Integration:
14353  * - Capacity constraint
14354  * - Flexibility constraint
14355  * - Grid Investment
14356  * - Capacity growth constraint
14357  *-------------------------------------------------------------------------------
14358   
14360   
14361   
14362  * Renewable CES
14363   
14364  * Definition of the renewable CES
14365  eqq_elintren_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14366      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
14367   
14368  * Capacity constraint
14369   
14371  eqfirm_capacity_c_europe(t,n)$(map_clt_n('c_europe',n) and (not tfix(t)) and year(t) gt 2005)..
14372                   sum(jel_firm, K_EN(jel_firm,t,n))
14373                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
14374                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
14375                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
14376                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
14377                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
14378                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
14379                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
14380                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
14381                                       ) / yearly_hours
14382  ;
14384   
14385  * Flexibility constraint
14386  eqflex_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14387          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
14388                             ( Q_EN('el',t,n) -
14389                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
14390                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
14391                             ) * flex_coeff('load')
14392  ;
14393   
14394  * Grid
14395   
14396  ** Grid depreciation and investments
14397  eqk_en_grid_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
14398                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
14399                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
14400   
14401  ** Grid adjustment to power capacity
14402  eqk_en_grid_to_k_en_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14403                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
14404                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
14405                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
14406                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
14407                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
14408                                     ) / grid_cost +
14409                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
14410                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
14411                                      K_EN('elcsp',t,n);
14412  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
14413   
14414  * Capacity growth constraint
14415  eqcap_growth_c_europe(jinv,t,tp1,tp2,n)$((map_clt_n('c_europe',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
14416                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
14417                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
14418   
14419  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
14422  *-------------------------------------------------------------------------------
14423  * Nuclear power plants
14424  *-------------------------------------------------------------------------------
14425   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
14428  *-------------------------------------------------------------------------------
14429  * GHG module
14430  * - CH4 FFI + CH4 waste + CH4 open fires
14431  * - N2O FFI + N2O waste + N2O open fires
14432  *-------------------------------------------------------------------------------
14433   
14435   
14436  * CH4, N2O waste emissions
14437  eqq_emi_waste_c_europe(waste,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
14438                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
14439   
14440  * n2o FFI
14441  eqq_emi_n2o_ffi_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
14442    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
14443                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
14444                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
14445                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
14446                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
14447                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
14448                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
14449                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
14450                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
14451                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
14452                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
14453                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
14454                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
14455                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
14456                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
14457                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
14458                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
14459                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
14460                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
14461                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
14462                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
14463                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
14464                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
14465                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
14466                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
14467                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
14468                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
14469                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
14470                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
14471                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
14472                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
14473   
14474  * ch4 FFI
14475  eqq_emi_ch4_ffi_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
14476    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
14479  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
14480  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
14481                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
14482                             smax(tt$(year(tt) eq 2015),
14483                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
14486  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
14487  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
14488                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
14489   
14490  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
14493  *-------------------------------------------------------------------------------
14494  * F-gases
14495  * - LLF
14496  * - SLF
14497  *-------------------------------------------------------------------------------
14498   
14500   
14501  * F-gases emissions
14502  eqq_emi_fgases_c_europe(fgases,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
14503                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
14504   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
14507  *-------------------------------------------------------------------------------
14508  * Landuse [simplified version of the land-use model]
14509  *-------------------------------------------------------------------------------
14510   
14512   
14513  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
14514  eq_wbio_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14515      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
14516   
14518  * Cost of all woody biomass produced for advanced biofuels and woody biomass
14519  eqcost_pes_wbio_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14520      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
14522   
14523  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
14526  *-------------------------------------------------------------------------------
14527  * Bioenergy power plant
14528  *-------------------------------------------------------------------------------
14529   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
14532  *-------------------------------------------------------------------------------
14533  * Traditional Biofuels
14534  * - Requires the precedence of mod_landuse
14535  *-------------------------------------------------------------------------------
14536   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
14539  *-------------------------------------------------------------------------------
14540  * Advanced biofuel
14541  * - Require the precedence of mod_landuse
14542  *-------------------------------------------------------------------------------
14543   
14545   
14546  * Limitations for nel backstops
14547  eqq_en_lim_advbiofuel_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
14548               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
14549               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
14550   
14551  * Peculiarity of advbiofuel
14552  eqmcost_fuel_advbiofuel_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14553                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
14554   
14555  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
14558  *-------------------------------------------------------------------------------
14559  * Carbon Capture and Sequestration
14560  *-------------------------------------------------------------------------------
14561   
14563   
14564  eqq_emi_ccs_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14565                  Q_EMI('ccs_plant',t,n) =e=
14566                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
14567                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
14568  ;
14569   
14570  eqcost_emi_sinks_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14571                  COST_EMI('ccs_plant',t,n) =e=
14572                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
14573                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
14574  ;
14575   
14576  eq_stor_ccs_cum_c_europe(ccs_stor,tp1,t,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
14577                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
14578  ;
14579   
14580  eq_emi_stor_ccs_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14581                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
14582  ;
14583   
14584  eq_emi_leak_ccs_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14585                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
14586   
14587  *-------------------------------------------------------------------------------
14589   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
14591  *-------------------------------------------------------------------------------
14592  * Coal for non-electric sectors
14593  * - Coke Plants
14594  * - Industrial and Commercial combined-heat-and-power (CHP)
14595  * - Others
14596  *-------------------------------------------------------------------------------
14597   
14599   
14600  eqcost_en_nelcoal_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14601           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
14602                                          nelcoal_max_abat(t,n) *
14603                                          (nelcoal_cmac(n,'a') *
14604                                            Q_EN('nelcoalabat',t,n) /
14605                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
14606                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
14607                                              (exp(nelcoal_cmac(n,'c') *
14608                                                (Q_EN('nelcoalabat',t,n)/
14609                                                  (nelcoal_max_abat(t,n) *
14610                                                      nelcoal_baseline(t,n))
14611                                                  ) - 1 )
14612                                              )
14613                                          );
14614   
14615  eqq_ncoalabat_monotone_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
14616          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
14617   
14618  * ensure Q_EN is lower than K_EN for CCS as not in jel
14619  eqq_en_nelcoalccs_max_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14620          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
14621   
14622  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
14625  *-------------------------------------------------------------------------------
14626  * Wind energy module
14627  * - onshore and offshore
14628  *-------------------------------------------------------------------------------
14629   
14631   
14632  * Capacity limits in the wind onshore electrical sector
14633  eqq_en_mu_windon_c_europe(wind_dist,wind_class,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
14634      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
14635   
14636  * Capacity limits in the wind offshore electrical sector
14637  eqq_en_mu_windoff_c_europe(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
14638      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
14639   
14640  * Wind onshore electrical generation plants (new)
14641  eqk_en_windon_c_europe(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
14642      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
14643                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
14644   
14645  * Wind offshore electrical generation plants (new)
14646  eqk_en_windoff_c_europe(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
14647      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
14648                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
14649   
14650  * Total onshore wind energy production
14651  eqq_en_windon_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14652                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
14653   
14654  * Total offshore wind energy production
14655  eqq_en_windoff_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14656                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
14657   
14658  * Total onshore wind capacity
14659  eqk_en_windon_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14660                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
14661   
14662  * Total offshore wind capacity
14663  eqk_en_windoff_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14664                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
14665   
14666  * Total onshore wind investment
14667  eqi_en_windon_sum_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
14668                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
14669   
14670  * Total offshore wind investment
14671  eqi_en_windoff_sum_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
14672                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
14673   
14674  *-------------------------------------------------------------------------------
14676   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
14678  *-------------------------------------------------------------------------------
14679  * Solar Powerplants (PV and CSP) to the electrical system
14680  *-------------------------------------------------------------------------------
14681   
14682  *-------------------------------------------------------------------------------
14684   
14685   
14686  * Capacity limits in the pv electrical sector
14687  eqq_en_mu_pv_c_europe(solar_dist,solar_class,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
14688                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
14689   
14690  * Capacity limits in the csp electrical sector
14691  eqq_en_mu_csp_c_europe(solar_dist,solar_class,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
14692                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
14693   
14694  * PV electrical generation plants (new)
14695  eqk_en_pv_c_europe(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
14696                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
14697                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
14698   
14699  * CSP electrical generation plants (new)
14700  eqk_en_csp_c_europe(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
14701                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
14702                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
14703   
14704  * Total PV energy production
14705  eqq_en_pv_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14706                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
14707   
14708  * Total CSP energy production
14709  eqq_en_csp_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14710                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
14711   
14712  * Total PV capacity
14713  eqk_en_pv_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14714                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
14715   
14716  * Total CSP capacity
14717  eqk_en_csp_sum_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14718                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
14719   
14720  * Total PV investment
14721  eqi_en_pv_sum_c_europe(t,tp1,n)$(map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
14722                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
14723   
14724  * Total CSP investment
14725  eqi_en_csp_sum_c_europe(t,tp1,n)$(map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
14726                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
14727   
14728  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
14729  eqk_en_solar_comp_c_europe(t,n,solar_dist)$(map_clt_n('c_europe',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
14730                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
14731                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
14732   
14733   
14734   
14735  *-------------------------------------------------------------------------------
14737   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
14739  *-------------------------------------------------------------------------------
14740  * Technology development scenarios
14741  *-------------------------------------------------------------------------------
14742   
14744   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
14746  *-------------------------------------------------------------------------------
14747  * Oil Extraction
14748  * Options:
14749  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
14750  *-------------------------------------------------------------------------------
14751   
14753   
14754  * Capacity
14755  eqoilcap_c_europe(t,tp1,n,oilg)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
14756      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
14757   
14758  * Production
14759  eqoilprod_c_europe(t,tp1,n,oilg)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
14760      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
14761   
14762  eqq_out_oil_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14763      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
14764   
14765  * Cumulative production
14766  eqcum_oil_c_europe(t,tp1,n,oilg)$((map_clt_n('c_europe',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
14767      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
14768   
14769  * Cost
14770  eqcost_oil_c_europe(t,tp1,n,oilg)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
14771      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
14772                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
14773                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
14774   
14775  * Investments
14776  eqi_oil_c_europe(t,tp1,n,oilg)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
14777      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
14778   
14779  * Total investment
14780  eqi_out_oil_c_europe(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
14781      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
14782   
14783  * Emissions
14784  eqq_emi_out_oil_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14785      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
14786   
14787  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
14790  *-------------------------------------------------------------------------------
14791  * Uranium Resources
14792  *-------------------------------------------------------------------------------
14793   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
14796  *-------------------------------------------------------------------------------
14797  * Gas Resources
14798  *-------------------------------------------------------------------------------
14799   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
14802  *-------------------------------------------------------------------------------
14803  * Coal Resources
14804  *-------------------------------------------------------------------------------
14805   
14807   
14808   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
14810  *-------------------------------------------------------------------------------
14811  * Climate
14812  *
14813  * Represents the climate
14814  * - based on the DICE model equations
14815  * - Radiative forcing for non CO2 ghgs
14816  * - parameters calibrated to reproduce MAGICC6.4 default response
14817  *
14818  *  Options:
14819  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
14820  * - $setglobal cooperate_on_climate {'YES','NO'}
14821  * - 'YES'(default): Countries within a coalition act in cooperation
14822  *   'NO': Countries within a coalition act individually
14823  *
14824  *-------------------------------------------------------------------------------
14825   
14827   
14829   
14830  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
14833  *-------------------------------------------------------------------------------
14834  * Long-run Damages from Climate Change
14835  * - Economic impacts
14836  * - Adaptation
14837  *-------------------------------------------------------------------------------
14838   
14840   
14842   
14843  *-------------------------------------------------------------------------------
14845   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
14847  *-------------------------------------------------------------------------------
14848  * Light-duty Vehicles for Personal Transport
14849  *-------------------------------------------------------------------------------
14850   
14852   
14853  *** newcode
14854  eqq_inv_red_ban_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14855      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
14856   
14857  ***
14858  *- Number of light duty vehicles
14859  eqnb_veh_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14860      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
14861   
14862  *- Yearly energy demand of vehicles
14863  eqq_en_veh_c_europe(jveh,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14864      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
14865   
14866  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
14867  eqq_el_edv_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14868      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
14869   
14870  *- Investment cost for hybrid vehicles
14871  eqmcost_inv_hybrid_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
14872                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
14873   
14874  *- Investment cost for plug-in hybrid vehicles
14875  eqmcost_inv_plghybrid_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
14876                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
14877   
14878  *- Investment cost for electric drive vehicles
14879  eqmcost_inv_edv_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
14880                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
14881   
14882  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
14885  *-------------------------------------------------------------------------------
14886  * Road Freight Transport
14887  *-------------------------------------------------------------------------------
14889   
14890  *-  Number of freight vehicles
14891  eqnb_frtveh_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
14892                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
14893   
14894  *-  Yearly fuel consumption of freight vehicles
14895  eqq_en_frtveh_c_europe(jfrt,t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14896                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
14897   
14898  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
14899  eqq_el_frtedv_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)))..
14900                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
14901   
14902  *-  Investment cost for hbd_stfr vehicle
14903  eqmcost_inv_hbd_stfr_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
14904                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
14905   
14906  *-  Investment cost for plug-in hbd_stfr vehicle
14907  eqmcost_inv_plghbd_stfr_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
14908                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
14909   
14910  *-  Investment cost for electric drive vehicle
14911  eqmcost_inv_edv_stfr_c_europe(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
14912                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
14913   
14914  *-------------------------------------------------------------------------------
14916   
14917   
14918   
14919   
14920   
14921   
14922  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
14924  *-------------------------------------------------------------------------------
14925  * Traditional Biomass
14926  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
14927  *  - require post_process to be launch before
14928  *-------------------------------------------------------------------------------
14929   
14931   
14932  * Optional modules
14933   
14934  * Policy modules
14935   
14936  * Calibration
14939   
14940   
14941  model witch_c_europe /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
14943  *-------------------------------------------------------------------------------
14944  * Call modules by order
14945  *-------------------------------------------------------------------------------
14949   
14950  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
14952  *-------------------------------------------------------------------------------
14953  * Algorithm
14954  *-------------------------------------------------------------------------------
14955   
14957   
14958  eqobj_c_europe
14959   
14960  *-------------------------------------------------------------------------------
14962   
14963  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
14965  *-------------------------------------------------------------------------------
14966  * Time
14967  * - Temporal structure
14968  * - Fixed time periods
14969  * - States of the world
14970  *-------------------------------------------------------------------------------
14971   
14973   
14974  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
14976  *-------------------------------------------------------------------------------
14977  * Geographic dimension and mapping with countries
14978  *-------------------------------------------------------------------------------
14979   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
14982  *-------------------------------------------------------------------------------
14983  * Non-Cooperative Setup
14984  *
14985  * Each region is defined as an individual coalition.
14986  *
14987  *-------------------------------------------------------------------------------
14988   
14990   
14991  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
14993  *-------------------------------------------------------------------------------
14994  * Welfare
14995  *-------------------------------------------------------------------------------
14996   
14998   
14999  equtility_c_europe
15000   
15001  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
15004  *-------------------------------------------------------------------------------
15005  * Economy
15006  * - Production and Consumption definition
15007  * - Top-level of the production function
15008  * Options:
15009  * --original_ssp=1 : original SSP population and GDP data
15010  *-------------------------------------------------------------------------------
15011   
15013   
15014  eqk_c_europe
15015  eqq_cc_c_europe
15016  eqq_fen_c_europe
15017  eqq_y_c_europe
15018   
15019  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
15022  *-------------------------------------------------------------------------------
15023  * Energy sector
15024  *-------------------------------------------------------------------------------
15025   
15027   
15028  eq_mkt_clearing_oil_c_europe
15029  eqcost_pes_c_europe
15030  eqcost_ses_c_europe
15031  eqk_en_c_europe
15032  eqq_ces_el_c_europe
15033  eqq_ces_nelgas_c_europe
15034  eqq_el2_c_europe
15035  eqq_el_c_europe
15036  eqq_elff_c_europe
15037  eqq_en_c_europe
15038  eqq_en_in_c_europe
15039  eqq_en_mu_c_europe
15040  eqq_en_tree_c_europe
15041  eqq_nel_c_europe
15042  eqq_nelog_c_europe
15043  eqq_fuel_c_europe
15044  eqq_elffren_c_europe
15045   
15046  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
15049  *-------------------------------------------------------------------------------
15050  * Carbon Emissions
15051  * - Total CO2 emissions and CO2 Fossil fuel and Industry
15052  * - CO2 emission costs
15053  * - GHG permit market
15054  *-------------------------------------------------------------------------------
15055   
15057   
15058  eqq_emi_lim_c_europe
15059  eqq_emi_tree_c_europe
15060  eqq_emi_co2ffi_c_europe
15061   
15062  eqcost_emi_co2_c_europe
15063   
15064  eq_mkt_clearing_nip_c_europe
15065   
15066  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
15069  *-------------------------------------------------------------------------------
15070  * Research & Development
15071  * Options:
15072  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
15073  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
15074  *-------------------------------------------------------------------------------
15075   
15077   
15078  eqk_rd_c_europe
15079  eqspill_coop_c_europe
15080  eqspill_lead_c_europe
15081  eqspill_foll_c_europe
15082  eqmcost_inv_back_c_europe
15083  eqmcost_inv_back_lbd_c_europe
15084   
15085  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
15088  *-------------------------------------------------------------------------------
15089  * Default Climate Policy Implementation
15090  *
15091  * Options:
15092  *    --policy={bau (default),ctax}
15093  *        Implement a climate policy setting
15094  *  [ --scen= ]
15095  *        Policy variant.
15096  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
15097  *          * XXX for a fixed percentage/yr (e.g. 5) growth
15098  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
15099  *  [ --ctax_year=2020 ]
15100  *        Starting year of the carbon tax
15101  *  [ --ctax_initial=30 ]
15102  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
15103  *
15104  *-------------------------------------------------------------------------------
15106   
15107  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
15109  *-------------------------------------------------------------------------------
15110  * Energy efficiency
15111  *-------------------------------------------------------------------------------
15112   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
15115  *-------------------------------------------------------------------------------
15116  * Hydro Power
15117  *-------------------------------------------------------------------------------
15118   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
15121  *-------------------------------------------------------------------------------
15122  * System Integration:
15123  * - Capacity constraint
15124  * - Flexibility constraint
15125  * - Grid Investment
15126  * - Capacity growth constraint
15127  *-------------------------------------------------------------------------------
15128   
15130   
15131  eqq_elintren_c_europe
15132  eqflex_c_europe
15133  eqk_en_grid_c_europe
15134  eqk_en_grid_to_k_en_c_europe
15135  eqfirm_capacity_c_europe
15136  eqcap_growth_c_europe
15137   
15138  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
15141  *-------------------------------------------------------------------------------
15142  * Nuclear power plants
15143  *-------------------------------------------------------------------------------
15144   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
15147  *-------------------------------------------------------------------------------
15148  * GHG module
15149  * - CH4 FFI + CH4 waste + CH4 open fires
15150  * - N2O FFI + N2O waste + N2O open fires
15151  *-------------------------------------------------------------------------------
15152   
15154   
15155  eqq_emi_waste_c_europe
15156  eqq_emi_n2o_ffi_c_europe
15157  eqq_emi_ch4_ffi_c_europe
15158   
15159  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
15162  *-------------------------------------------------------------------------------
15163  * F-gases
15164  * - LLF
15165  * - SLF
15166  *-------------------------------------------------------------------------------
15167   
15169   
15170  eqq_emi_fgases_c_europe
15171   
15172  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
15175  *-------------------------------------------------------------------------------
15176  * Landuse [simplified version of the land-use model]
15177  *-------------------------------------------------------------------------------
15178   
15180   
15181  eq_wbio_c_europe
15182  eqcost_pes_wbio_c_europe
15183   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
15186  *-------------------------------------------------------------------------------
15187  * Bioenergy power plant
15188  *-------------------------------------------------------------------------------
15189   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
15192  *-------------------------------------------------------------------------------
15193  * Traditional Biofuels
15194  * - Requires the precedence of mod_landuse
15195  *-------------------------------------------------------------------------------
15196   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
15199  *-------------------------------------------------------------------------------
15200  * Advanced biofuel
15201  * - Require the precedence of mod_landuse
15202  *-------------------------------------------------------------------------------
15203   
15205   
15206  eqq_en_lim_advbiofuel_c_europe
15207  eqmcost_fuel_advbiofuel_c_europe
15208   
15209  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
15212  *-------------------------------------------------------------------------------
15213  * Carbon Capture and Sequestration
15214  *-------------------------------------------------------------------------------
15215   
15217   
15218  eqq_emi_ccs_c_europe
15219  eqcost_emi_sinks_c_europe
15220  eq_stor_ccs_cum_c_europe
15221  eq_emi_stor_ccs_c_europe
15222  eq_emi_leak_ccs_c_europe
15223   
15224  *-------------------------------------------------------------------------------
15226   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
15228  *-------------------------------------------------------------------------------
15229  * Coal for non-electric sectors
15230  * - Coke Plants
15231  * - Industrial and Commercial combined-heat-and-power (CHP)
15232  * - Others
15233  *-------------------------------------------------------------------------------
15234   
15236   
15237  eqcost_en_nelcoal_c_europe
15238  eqq_ncoalabat_monotone_c_europe
15239  eqq_en_nelcoalccs_max_c_europe
15240   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
15243  *-------------------------------------------------------------------------------
15244  * Wind energy module
15245  * - onshore and offshore
15246  *-------------------------------------------------------------------------------
15247   
15249   
15250  eqq_en_mu_windon_c_europe
15251  eqq_en_mu_windoff_c_europe
15252  eqk_en_windon_c_europe
15253  eqk_en_windoff_c_europe
15254  eqq_en_windon_sum_c_europe
15255  eqq_en_windoff_sum_c_europe
15256  eqk_en_windon_sum_c_europe
15257  eqk_en_windoff_sum_c_europe
15258  eqi_en_windon_sum_c_europe
15259  eqi_en_windoff_sum_c_europe
15260   
15262   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
15264  *-------------------------------------------------------------------------------
15265  * Solar Powerplants (PV and CSP) to the electrical system
15266  *-------------------------------------------------------------------------------
15267   
15268  *-------------------------------------------------------------------------------
15270   
15271  eqq_en_mu_pv_c_europe
15272  eqq_en_mu_csp_c_europe
15273  eqk_en_pv_c_europe
15274  eqk_en_csp_c_europe
15275  eqq_en_pv_sum_c_europe
15276  eqq_en_csp_sum_c_europe
15277  eqk_en_pv_sum_c_europe
15278  eqk_en_csp_sum_c_europe
15279  eqi_en_pv_sum_c_europe
15280  eqi_en_csp_sum_c_europe
15281  eqk_en_solar_comp_c_europe
15282   
15283  *-------------------------------------------------------------------------------
15285   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
15287  *-------------------------------------------------------------------------------
15288  * Technology development scenarios
15289  *-------------------------------------------------------------------------------
15290   
15292   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
15294  *-------------------------------------------------------------------------------
15295  * Oil Extraction
15296  * Options:
15297  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
15298  *-------------------------------------------------------------------------------
15299   
15301   
15302  eqoilcap_c_europe
15303  eqoilprod_c_europe
15304  eqq_out_oil_c_europe
15305  eqcum_oil_c_europe
15306  eqcost_oil_c_europe
15307  eqi_oil_c_europe
15308  eqi_out_oil_c_europe
15309  eqq_emi_out_oil_c_europe
15310   
15311  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
15314  *-------------------------------------------------------------------------------
15315  * Uranium Resources
15316  *-------------------------------------------------------------------------------
15317   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
15320  *-------------------------------------------------------------------------------
15321  * Gas Resources
15322  *-------------------------------------------------------------------------------
15323   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
15326  *-------------------------------------------------------------------------------
15327  * Coal Resources
15328  *-------------------------------------------------------------------------------
15329   
15331   
15332   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
15334  *-------------------------------------------------------------------------------
15335  * Climate
15336  *
15337  * Represents the climate
15338  * - based on the DICE model equations
15339  * - Radiative forcing for non CO2 ghgs
15340  * - parameters calibrated to reproduce MAGICC6.4 default response
15341  *
15342  *  Options:
15343  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
15344  * - $setglobal cooperate_on_climate {'YES','NO'}
15345  * - 'YES'(default): Countries within a coalition act in cooperation
15346  *   'NO': Countries within a coalition act individually
15347  *
15348  *-------------------------------------------------------------------------------
15349   
15351   
15353   
15354  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
15357  *-------------------------------------------------------------------------------
15358  * Long-run Damages from Climate Change
15359  * - Economic impacts
15360  * - Adaptation
15361  *-------------------------------------------------------------------------------
15362   
15364   
15366   
15367  *-------------------------------------------------------------------------------
15369   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
15371  *-------------------------------------------------------------------------------
15372  * Light-duty Vehicles for Personal Transport
15373  *-------------------------------------------------------------------------------
15374   
15376   
15377  eqnb_veh_c_europe
15378  eqq_en_veh_c_europe
15379  eqq_el_edv_c_europe
15380  eqmcost_inv_hybrid_c_europe
15381  eqmcost_inv_plghybrid_c_europe
15382  eqmcost_inv_edv_c_europe
15383  *** newcode
15384  eqq_inv_red_ban_c_europe
15385  ***
15386  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
15389  *-------------------------------------------------------------------------------
15390  * Road Freight Transport
15391  *-------------------------------------------------------------------------------
15393   
15394  eqnb_frtveh_c_europe
15395  eqq_en_frtveh_c_europe
15396  eqq_el_frtedv_c_europe
15397  eqmcost_inv_hbd_stfr_c_europe
15398  eqmcost_inv_plghbd_stfr_c_europe
15399  eqmcost_inv_edv_stfr_c_europe
15400   
15401  *-------------------------------------------------------------------------------
15403   
15404   
15405   
15406   
15407   
15408   
15409  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
15411  *-------------------------------------------------------------------------------
15412  * Traditional Biomass
15413  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
15414  *  - require post_process to be launch before
15415  *-------------------------------------------------------------------------------
15416   
15418   
15419  * Optional modules
15420   
15421  * Policy modules
15422   
15423  * Calibration
15426  /;
15427   
15428  witch_c_europe.optfile=1;   # the option file solvername.opt is to be used
15429  witch_c_europe.holdfixed=1; # treat fixed values as constant
15430  witch_c_europe.scaleopt=1;  # Use scaling for better gradients estimation
15431  witch_c_europe.solvelink=3; # Use parallel or sequential solving
15432   
15437   
15438  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
15440  *-------------------------------------------------------------------------------
15441  * Call modules by order
15442  *-------------------------------------------------------------------------------
15446   
15447  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
15449  *-------------------------------------------------------------------------------
15450  * Algorithm
15451  *-------------------------------------------------------------------------------
15452   
15454   
15455  eqobj_c_india
15456   
15457  *-------------------------------------------------------------------------------
15459   
15460  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
15462  *-------------------------------------------------------------------------------
15463  * Time
15464  * - Temporal structure
15465  * - Fixed time periods
15466  * - States of the world
15467  *-------------------------------------------------------------------------------
15468   
15470   
15471  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
15473  *-------------------------------------------------------------------------------
15474  * Geographic dimension and mapping with countries
15475  *-------------------------------------------------------------------------------
15476   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
15479  *-------------------------------------------------------------------------------
15480  * Non-Cooperative Setup
15481  *
15482  * Each region is defined as an individual coalition.
15483  *
15484  *-------------------------------------------------------------------------------
15485   
15487   
15488  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
15490  *-------------------------------------------------------------------------------
15491  * Welfare
15492  *-------------------------------------------------------------------------------
15493   
15495   
15496  equtility_c_india
15497   
15498  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
15501  *-------------------------------------------------------------------------------
15502  * Economy
15503  * - Production and Consumption definition
15504  * - Top-level of the production function
15505  * Options:
15506  * --original_ssp=1 : original SSP population and GDP data
15507  *-------------------------------------------------------------------------------
15508   
15510   
15511  eqk_c_india
15512  eqq_cc_c_india
15513  eqq_fen_c_india
15514  eqq_y_c_india
15515   
15516  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
15519  *-------------------------------------------------------------------------------
15520  * Energy sector
15521  *-------------------------------------------------------------------------------
15522   
15524   
15525  eq_mkt_clearing_oil_c_india
15526  eqcost_pes_c_india
15527  eqcost_ses_c_india
15528  eqk_en_c_india
15529  eqq_ces_el_c_india
15530  eqq_ces_nelgas_c_india
15531  eqq_el2_c_india
15532  eqq_el_c_india
15533  eqq_elff_c_india
15534  eqq_en_c_india
15535  eqq_en_in_c_india
15536  eqq_en_mu_c_india
15537  eqq_en_tree_c_india
15538  eqq_nel_c_india
15539  eqq_nelog_c_india
15540  eqq_fuel_c_india
15541  eqq_elffren_c_india
15542   
15543  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
15546  *-------------------------------------------------------------------------------
15547  * Carbon Emissions
15548  * - Total CO2 emissions and CO2 Fossil fuel and Industry
15549  * - CO2 emission costs
15550  * - GHG permit market
15551  *-------------------------------------------------------------------------------
15552   
15554   
15555  eqq_emi_lim_c_india
15556  eqq_emi_tree_c_india
15557  eqq_emi_co2ffi_c_india
15558   
15559  eqcost_emi_co2_c_india
15560   
15561  eq_mkt_clearing_nip_c_india
15562   
15563  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
15566  *-------------------------------------------------------------------------------
15567  * Research & Development
15568  * Options:
15569  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
15570  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
15571  *-------------------------------------------------------------------------------
15572   
15574   
15575  eqk_rd_c_india
15576  eqspill_coop_c_india
15577  eqspill_lead_c_india
15578  eqspill_foll_c_india
15579  eqmcost_inv_back_c_india
15580  eqmcost_inv_back_lbd_c_india
15581   
15582  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
15585  *-------------------------------------------------------------------------------
15586  * Default Climate Policy Implementation
15587  *
15588  * Options:
15589  *    --policy={bau (default),ctax}
15590  *        Implement a climate policy setting
15591  *  [ --scen= ]
15592  *        Policy variant.
15593  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
15594  *          * XXX for a fixed percentage/yr (e.g. 5) growth
15595  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
15596  *  [ --ctax_year=2020 ]
15597  *        Starting year of the carbon tax
15598  *  [ --ctax_initial=30 ]
15599  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
15600  *
15601  *-------------------------------------------------------------------------------
15603   
15604  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
15606  *-------------------------------------------------------------------------------
15607  * Energy efficiency
15608  *-------------------------------------------------------------------------------
15609   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
15612  *-------------------------------------------------------------------------------
15613  * Hydro Power
15614  *-------------------------------------------------------------------------------
15615   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
15618  *-------------------------------------------------------------------------------
15619  * System Integration:
15620  * - Capacity constraint
15621  * - Flexibility constraint
15622  * - Grid Investment
15623  * - Capacity growth constraint
15624  *-------------------------------------------------------------------------------
15625   
15627   
15628  eqq_elintren_c_india
15629  eqflex_c_india
15630  eqk_en_grid_c_india
15631  eqk_en_grid_to_k_en_c_india
15632  eqfirm_capacity_c_india
15633  eqcap_growth_c_india
15634   
15635  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
15638  *-------------------------------------------------------------------------------
15639  * Nuclear power plants
15640  *-------------------------------------------------------------------------------
15641   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
15644  *-------------------------------------------------------------------------------
15645  * GHG module
15646  * - CH4 FFI + CH4 waste + CH4 open fires
15647  * - N2O FFI + N2O waste + N2O open fires
15648  *-------------------------------------------------------------------------------
15649   
15651   
15652  eqq_emi_waste_c_india
15653  eqq_emi_n2o_ffi_c_india
15654  eqq_emi_ch4_ffi_c_india
15655   
15656  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
15659  *-------------------------------------------------------------------------------
15660  * F-gases
15661  * - LLF
15662  * - SLF
15663  *-------------------------------------------------------------------------------
15664   
15666   
15667  eqq_emi_fgases_c_india
15668   
15669  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
15672  *-------------------------------------------------------------------------------
15673  * Landuse [simplified version of the land-use model]
15674  *-------------------------------------------------------------------------------
15675   
15677   
15678  eq_wbio_c_india
15679  eqcost_pes_wbio_c_india
15680   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
15683  *-------------------------------------------------------------------------------
15684  * Bioenergy power plant
15685  *-------------------------------------------------------------------------------
15686   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
15689  *-------------------------------------------------------------------------------
15690  * Traditional Biofuels
15691  * - Requires the precedence of mod_landuse
15692  *-------------------------------------------------------------------------------
15693   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
15696  *-------------------------------------------------------------------------------
15697  * Advanced biofuel
15698  * - Require the precedence of mod_landuse
15699  *-------------------------------------------------------------------------------
15700   
15702   
15703  eqq_en_lim_advbiofuel_c_india
15704  eqmcost_fuel_advbiofuel_c_india
15705   
15706  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
15709  *-------------------------------------------------------------------------------
15710  * Carbon Capture and Sequestration
15711  *-------------------------------------------------------------------------------
15712   
15714   
15715  eqq_emi_ccs_c_india
15716  eqcost_emi_sinks_c_india
15717  eq_stor_ccs_cum_c_india
15718  eq_emi_stor_ccs_c_india
15719  eq_emi_leak_ccs_c_india
15720   
15721  *-------------------------------------------------------------------------------
15723   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
15725  *-------------------------------------------------------------------------------
15726  * Coal for non-electric sectors
15727  * - Coke Plants
15728  * - Industrial and Commercial combined-heat-and-power (CHP)
15729  * - Others
15730  *-------------------------------------------------------------------------------
15731   
15733   
15734  eqcost_en_nelcoal_c_india
15735  eqq_ncoalabat_monotone_c_india
15736  eqq_en_nelcoalccs_max_c_india
15737   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
15740  *-------------------------------------------------------------------------------
15741  * Wind energy module
15742  * - onshore and offshore
15743  *-------------------------------------------------------------------------------
15744   
15746   
15747  eqq_en_mu_windon_c_india
15748  eqq_en_mu_windoff_c_india
15749  eqk_en_windon_c_india
15750  eqk_en_windoff_c_india
15751  eqq_en_windon_sum_c_india
15752  eqq_en_windoff_sum_c_india
15753  eqk_en_windon_sum_c_india
15754  eqk_en_windoff_sum_c_india
15755  eqi_en_windon_sum_c_india
15756  eqi_en_windoff_sum_c_india
15757   
15759   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
15761  *-------------------------------------------------------------------------------
15762  * Solar Powerplants (PV and CSP) to the electrical system
15763  *-------------------------------------------------------------------------------
15764   
15765  *-------------------------------------------------------------------------------
15767   
15768  eqq_en_mu_pv_c_india
15769  eqq_en_mu_csp_c_india
15770  eqk_en_pv_c_india
15771  eqk_en_csp_c_india
15772  eqq_en_pv_sum_c_india
15773  eqq_en_csp_sum_c_india
15774  eqk_en_pv_sum_c_india
15775  eqk_en_csp_sum_c_india
15776  eqi_en_pv_sum_c_india
15777  eqi_en_csp_sum_c_india
15778  eqk_en_solar_comp_c_india
15779   
15780  *-------------------------------------------------------------------------------
15782   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
15784  *-------------------------------------------------------------------------------
15785  * Technology development scenarios
15786  *-------------------------------------------------------------------------------
15787   
15789   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
15791  *-------------------------------------------------------------------------------
15792  * Oil Extraction
15793  * Options:
15794  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
15795  *-------------------------------------------------------------------------------
15796   
15798   
15799  eqoilcap_c_india
15800  eqoilprod_c_india
15801  eqq_out_oil_c_india
15802  eqcum_oil_c_india
15803  eqcost_oil_c_india
15804  eqi_oil_c_india
15805  eqi_out_oil_c_india
15806  eqq_emi_out_oil_c_india
15807   
15808  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
15811  *-------------------------------------------------------------------------------
15812  * Uranium Resources
15813  *-------------------------------------------------------------------------------
15814   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
15817  *-------------------------------------------------------------------------------
15818  * Gas Resources
15819  *-------------------------------------------------------------------------------
15820   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
15823  *-------------------------------------------------------------------------------
15824  * Coal Resources
15825  *-------------------------------------------------------------------------------
15826   
15828   
15829   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
15831  *-------------------------------------------------------------------------------
15832  * Climate
15833  *
15834  * Represents the climate
15835  * - based on the DICE model equations
15836  * - Radiative forcing for non CO2 ghgs
15837  * - parameters calibrated to reproduce MAGICC6.4 default response
15838  *
15839  *  Options:
15840  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
15841  * - $setglobal cooperate_on_climate {'YES','NO'}
15842  * - 'YES'(default): Countries within a coalition act in cooperation
15843  *   'NO': Countries within a coalition act individually
15844  *
15845  *-------------------------------------------------------------------------------
15846   
15848   
15850   
15851  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
15854  *-------------------------------------------------------------------------------
15855  * Long-run Damages from Climate Change
15856  * - Economic impacts
15857  * - Adaptation
15858  *-------------------------------------------------------------------------------
15859   
15861   
15863   
15864  *-------------------------------------------------------------------------------
15866   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
15868  *-------------------------------------------------------------------------------
15869  * Light-duty Vehicles for Personal Transport
15870  *-------------------------------------------------------------------------------
15871   
15873   
15874  eqnb_veh_c_india
15875  eqq_en_veh_c_india
15876  eqq_el_edv_c_india
15877  eqmcost_inv_hybrid_c_india
15878  eqmcost_inv_plghybrid_c_india
15879  eqmcost_inv_edv_c_india
15880  *** newcode
15881  eqq_inv_red_ban_c_india
15882  ***
15883  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
15886  *-------------------------------------------------------------------------------
15887  * Road Freight Transport
15888  *-------------------------------------------------------------------------------
15890   
15891  eqnb_frtveh_c_india
15892  eqq_en_frtveh_c_india
15893  eqq_el_frtedv_c_india
15894  eqmcost_inv_hbd_stfr_c_india
15895  eqmcost_inv_plghbd_stfr_c_india
15896  eqmcost_inv_edv_stfr_c_india
15897   
15898  *-------------------------------------------------------------------------------
15900   
15901   
15902   
15903   
15904   
15905   
15906  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
15908  *-------------------------------------------------------------------------------
15909  * Traditional Biomass
15910  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
15911  *  - require post_process to be launch before
15912  *-------------------------------------------------------------------------------
15913   
15915   
15916  * Optional modules
15917   
15918  * Policy modules
15919   
15920  * Calibration
15923  ;
15924   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
15926  *-------------------------------------------------------------------------------
15927  * Call modules by order
15928  *-------------------------------------------------------------------------------
15932   
15933  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
15935  *-------------------------------------------------------------------------------
15936  * Algorithm
15937  *-------------------------------------------------------------------------------
15938   
15940   
15942  * Add the component of the (maximized) objective function as required by the ADMM algorithm
15943  eqobj_c_india..
15944      OBJADMM =e= UTILITY -
15945          sum(t, rho_admm('oil',t) / 2 *
15946              sum(n$(map_clt_n('c_india',n) and trading_t('oil',t,n)),
15947                  power(
15948                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
15949                      x_admm('oil',t,n) +
15950                      xavg_admm('oil',t) +
15951                      u_admm('oil', t)
15952                  ,2)
15953              )) -
15954          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
15955              sum(n$(map_clt_n('c_india',n) and trading_t(c_mkt,t,n)),
15956                  power(
15957                      Q_EMI(c_mkt,t,n) -
15958                      x_admm(c_mkt,t,n) +
15959                      xavg_admm(c_mkt,t) +
15960                      u_admm(c_mkt,t)
15961                  ,2)
15962              ))
15963      ;
15965   
15966  *-------------------------------------------------------------------------------
15968   
15969  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
15971  *-------------------------------------------------------------------------------
15972  * Time
15973  * - Temporal structure
15974  * - Fixed time periods
15975  * - States of the world
15976  *-------------------------------------------------------------------------------
15977   
15979   
15980  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
15982  *-------------------------------------------------------------------------------
15983  * Geographic dimension and mapping with countries
15984  *-------------------------------------------------------------------------------
15985   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
15988  *-------------------------------------------------------------------------------
15989  * Non-Cooperative Setup
15990  *
15991  * Each region is defined as an individual coalition.
15992  *
15993  *-------------------------------------------------------------------------------
15994   
15996   
15997  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
15999  *-------------------------------------------------------------------------------
16000  * Welfare
16001  *-------------------------------------------------------------------------------
16002   
16004   
16005  * Objective function - Welfare to be maximized
16006  equtility_c_india..
16007      UTILITY =e=
16008   
16009  * Negishi SWF
16011   
16012  * Welfare functions based on CEBGE
16015                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
16016                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
16017                      ((sum(n$map_clt_n('c_india',n),
16018                        (l(t,n) / sum(nn$map_clt_n('c_india',nn), l(t,nn))) *
16019                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
16020                       )**(1 / (1 - gamma))
16021                      )**(1 - eta) ) +
16022                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
16023                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
16024                      ((sum(n$map_clt_n('c_india',n),
16025                        (l(t,n) / sum(nn$map_clt_n('c_india',nn), l(t,nn))) *
16026                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
16027                       )**(1 / (1 - gamma))
16028                      )**(1 - eta) )
16029                  )**(1/(1 - eta)) * 1e6
16032   
16033   
16034  ;
16035   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
16038  *-------------------------------------------------------------------------------
16039  * Economy
16040  * - Production and Consumption definition
16041  * - Top-level of the production function
16042  * Options:
16043  * --original_ssp=1 : original SSP population and GDP data
16044  *-------------------------------------------------------------------------------
16045   
16047   
16048  * Production
16049  eqq_y_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16050   
16051      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
16052                     ## Climate feedback on economy
16054                     ## Net cost of Primary and Secondary Energy Sources
16055                     - sum(fuel, COST_FUEL(fuel,t,n))
16056                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
16057                     - sum(cce, COST_EMI(cce,t,n))
16058                     ## Carbon tax
16059                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
16060                     ## Additionnal costs on gross product
16061                     - sum(ccy, COST_Y(ccy,t,n))
16062  ;
16063   
16064  * Consumption
16065  eqq_cc_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
16066      Q('cc',t,n) =e= Q('y',t,n)
16067                      ## Investments in goods g (final good, adaptation)
16068                      -sum(g, I(g,t,n))
16069                      ## Investments in r&d
16070                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
16071                      ## Investments in energy technlogies
16072                      -sum(jinv, I_EN(jinv,t,n))
16073                       ## Investments in grid infrastructures
16074                      - I_EN_GRID(t,n)
16075                      ## Investments in extraction sector
16076                      -sum(extract(f), I_OUT(f,t,n))
16077                      ## O&M for energy technlogies
16078                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
16079                      ## O&M for extraction
16080                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
16081                      ## Energy technology penalty costs
16082                      -sum(jpenalty(j), COST_EN(j,t,n))
16083  ;
16084   
16085  * Capital accumulation
16086  eqk_c_india(g,t,tp1,n)$(map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
16087      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
16088   
16089  * Energy services
16090  eqq_fen_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16091      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
16092   
16093  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
16096  *-------------------------------------------------------------------------------
16097  * Energy sector
16098  *-------------------------------------------------------------------------------
16099   
16101   
16102  *-------------------------------------------------------------------------------
16103  * Production - Energy sector
16104  *-------------------------------------------------------------------------------
16105   
16106  eqq_en_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16107      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
16108   
16109  *-------------------------------------------------------------------------------
16110  * Production - Electrical sector
16111  *-------------------------------------------------------------------------------
16112   
16113  eqq_el_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16114      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
16115   
16116  eqq_el2_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16117      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
16118   
16119  eqq_elffren_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16120      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
16121  eqq_elff_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16122      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
16123   
16124  eqq_ces_el_c_india(ices_el,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
16125      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
16126  ;
16127   
16128  *-------------------------------------------------------------------------------
16129  * Production - Non-electrical sector
16130  *-------------------------------------------------------------------------------
16131   
16132  eqq_nel_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16133      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
16134   
16135  eqq_nelog_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16136      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
16137  ;
16138  eqq_ces_nelgas_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16139      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
16140   
16141  *-------------------------------------------------------------------------------
16142  * PES and fuels
16143  *-------------------------------------------------------------------------------
16144   
16145  eqq_fuel_c_india(fuel,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
16146      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
16147   
16148  *-------------------------------------------------------------------------------
16149  * Cost
16150  *-------------------------------------------------------------------------------
16151   
16152  * Net cost of Primary Energy Supplies
16153  eqcost_pes_c_india(f,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
16154      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
16155                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
16156   
16157  * Net cost of Secondary Energy Supplies
16158  eqcost_ses_c_india(s,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16159      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
16160   
16161   
16162  *-------------------------------------------------------------------------------
16163  * Market balances
16164  *-------------------------------------------------------------------------------
16165   
16166  eq_mkt_clearing_oil_c_india(t,'c_india')$(internal('oil'))..
16167      sum( n$(map_clt_n('c_india',n) and trading_t('oil',t,n)),
16168          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
16169      ) =e= 0;
16170   
16171  *-------------------------------------------------------------------------------
16172  * New capital in the energy sector
16173  *-------------------------------------------------------------------------------
16174   
16175  * Electrical generation plants (new)
16176  eqk_en_c_india(jinv,t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
16177      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
16178                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
16179   
16180  *-------------------------------------------------------------------------------
16181  * ENERGY
16182  *-------------------------------------------------------------------------------
16183   
16184  * Capacity limits in the electrical sector
16185  eqq_en_mu_c_india(jel,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
16186      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
16187   
16188  * Efficiency of energy technology sector
16189  eqq_en_in_c_india(jfed,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
16190      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
16191                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
16192   
16193  * Energy generation "tree"
16194  eqq_en_tree_c_india(j,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
16195      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
16196   
16197  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
16200  *-------------------------------------------------------------------------------
16201  * Carbon Emissions
16202  * - Total CO2 emissions and CO2 Fossil fuel and Industry
16203  * - CO2 emission costs
16204  * - GHG permit market
16205  *-------------------------------------------------------------------------------
16206   
16208   
16209  * GHG emission cap
16210  eqq_emi_lim_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
16211      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
16212                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
16213   
16214  * Compute total and sectoral emissions
16215  eqq_emi_tree_c_india(t,n,e)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
16216      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
16217   
16218  * Industrial CO2 emissions
16219  eqq_emi_co2ffi_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16220      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
16221                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
16222                              # Emissions from biomass
16223                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
16224                              # Emissions from fuel extraction
16225                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
16226                              # Captured emissions
16227                              sum(sink, Q_EMI(sink,t,n));
16228   
16229  * CO2 emission costs
16230  eqcost_emi_co2_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16231      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
16232   
16233  * Emission permit market clearing for internal market
16234  eq_mkt_clearing_nip_c_india(c_mkt,t,'c_india')$(internal(c_mkt))..
16235      sum(n$(map_clt_n('c_india',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
16236   
16237  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
16240  *-------------------------------------------------------------------------------
16241  * Research & Development
16242  * Options:
16243  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
16244  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
16245  *-------------------------------------------------------------------------------
16246   
16248   
16249  * Knowledge stock accumulation
16250  eqk_rd_c_india(rd,t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
16251                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
16252                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
16253                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
16254                                        SPILL(rd,t,n)**rd_coef(rd,'d');
16255   
16256  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
16257  eqspill_coop_c_india(rd,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_india'))..
16258          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
16259                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_india',nn)), K_RD(rd,t,nn)) +
16260                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_india',nn))), K_RD.l(rd,t,nn))
16261                            ) *
16262                            (
16263                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_india',nn)), K_RD(rd,t,nn)) +
16264                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_india',nn))), K_RD.l(rd,t,nn))
16265                              ) - K_RD(rd,t,n)
16266                            );
16267   
16268  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
16269  eqspill_lead_c_india(rd,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_india')) and leadrd(rd,n))..
16270                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
16271   
16272  * No-cooperation : a follower sees is negative effect on the quantity he can grab
16273  eqspill_foll_c_india(rd,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_india')) and (not leadrd(rd,n)))..
16274                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
16275   
16276  *- Only LbR (without learning by doing)
16277  eqmcost_inv_back_c_india(jrd,t,tt,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
16278                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
16279                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
16280   
16281  *- LbR together with learning by doing ==> Two-factor learning curve
16282  eqmcost_inv_back_lbd_c_india(jrd,t,tt,tfirst,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
16283                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
16284                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
16285                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
16286   
16287  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
16290  *-------------------------------------------------------------------------------
16291  * Default Climate Policy Implementation
16292  *
16293  * Options:
16294  *    --policy={bau (default),ctax}
16295  *        Implement a climate policy setting
16296  *  [ --scen= ]
16297  *        Policy variant.
16298  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
16299  *          * XXX for a fixed percentage/yr (e.g. 5) growth
16300  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
16301  *  [ --ctax_year=2020 ]
16302  *        Starting year of the carbon tax
16303  *  [ --ctax_initial=30 ]
16304  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
16305  *
16306  *-------------------------------------------------------------------------------
16308   
16309  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
16311  *-------------------------------------------------------------------------------
16312  * Energy efficiency
16313  *-------------------------------------------------------------------------------
16314   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
16317  *-------------------------------------------------------------------------------
16318  * Hydro Power
16319  *-------------------------------------------------------------------------------
16320   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
16323  *-------------------------------------------------------------------------------
16324  * System Integration:
16325  * - Capacity constraint
16326  * - Flexibility constraint
16327  * - Grid Investment
16328  * - Capacity growth constraint
16329  *-------------------------------------------------------------------------------
16330   
16332   
16333   
16334  * Renewable CES
16335   
16336  * Definition of the renewable CES
16337  eqq_elintren_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16338      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
16339   
16340  * Capacity constraint
16341   
16343  eqfirm_capacity_c_india(t,n)$(map_clt_n('c_india',n) and (not tfix(t)) and year(t) gt 2005)..
16344                   sum(jel_firm, K_EN(jel_firm,t,n))
16345                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
16346                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
16347                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
16348                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
16349                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
16350                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
16351                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
16352                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
16353                                       ) / yearly_hours
16354  ;
16356   
16357  * Flexibility constraint
16358  eqflex_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16359          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
16360                             ( Q_EN('el',t,n) -
16361                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
16362                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
16363                             ) * flex_coeff('load')
16364  ;
16365   
16366  * Grid
16367   
16368  ** Grid depreciation and investments
16369  eqk_en_grid_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
16370                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
16371                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
16372   
16373  ** Grid adjustment to power capacity
16374  eqk_en_grid_to_k_en_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16375                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
16376                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
16377                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
16378                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
16379                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
16380                                     ) / grid_cost +
16381                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
16382                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
16383                                      K_EN('elcsp',t,n);
16384  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
16385   
16386  * Capacity growth constraint
16387  eqcap_growth_c_india(jinv,t,tp1,tp2,n)$((map_clt_n('c_india',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
16388                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
16389                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
16390   
16391  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
16394  *-------------------------------------------------------------------------------
16395  * Nuclear power plants
16396  *-------------------------------------------------------------------------------
16397   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
16400  *-------------------------------------------------------------------------------
16401  * GHG module
16402  * - CH4 FFI + CH4 waste + CH4 open fires
16403  * - N2O FFI + N2O waste + N2O open fires
16404  *-------------------------------------------------------------------------------
16405   
16407   
16408  * CH4, N2O waste emissions
16409  eqq_emi_waste_c_india(waste,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
16410                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
16411   
16412  * n2o FFI
16413  eqq_emi_n2o_ffi_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
16414    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
16415                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
16416                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
16417                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
16418                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
16419                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
16420                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
16421                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
16422                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
16423                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
16424                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
16425                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
16426                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
16427                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
16428                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
16429                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
16430                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
16431                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
16432                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
16433                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
16434                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
16435                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
16436                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
16437                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
16438                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
16439                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
16440                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
16441                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
16442                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
16443                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
16444                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
16445   
16446  * ch4 FFI
16447  eqq_emi_ch4_ffi_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
16448    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
16451  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
16452  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
16453                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
16454                             smax(tt$(year(tt) eq 2015),
16455                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
16458  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
16459  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
16460                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
16461   
16462  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
16465  *-------------------------------------------------------------------------------
16466  * F-gases
16467  * - LLF
16468  * - SLF
16469  *-------------------------------------------------------------------------------
16470   
16472   
16473  * F-gases emissions
16474  eqq_emi_fgases_c_india(fgases,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
16475                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
16476   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
16479  *-------------------------------------------------------------------------------
16480  * Landuse [simplified version of the land-use model]
16481  *-------------------------------------------------------------------------------
16482   
16484   
16485  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
16486  eq_wbio_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16487      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
16488   
16490  * Cost of all woody biomass produced for advanced biofuels and woody biomass
16491  eqcost_pes_wbio_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16492      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
16494   
16495  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
16498  *-------------------------------------------------------------------------------
16499  * Bioenergy power plant
16500  *-------------------------------------------------------------------------------
16501   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
16504  *-------------------------------------------------------------------------------
16505  * Traditional Biofuels
16506  * - Requires the precedence of mod_landuse
16507  *-------------------------------------------------------------------------------
16508   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
16511  *-------------------------------------------------------------------------------
16512  * Advanced biofuel
16513  * - Require the precedence of mod_landuse
16514  *-------------------------------------------------------------------------------
16515   
16517   
16518  * Limitations for nel backstops
16519  eqq_en_lim_advbiofuel_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
16520               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
16521               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
16522   
16523  * Peculiarity of advbiofuel
16524  eqmcost_fuel_advbiofuel_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16525                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
16526   
16527  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
16530  *-------------------------------------------------------------------------------
16531  * Carbon Capture and Sequestration
16532  *-------------------------------------------------------------------------------
16533   
16535   
16536  eqq_emi_ccs_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16537                  Q_EMI('ccs_plant',t,n) =e=
16538                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
16539                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
16540  ;
16541   
16542  eqcost_emi_sinks_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16543                  COST_EMI('ccs_plant',t,n) =e=
16544                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
16545                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
16546  ;
16547   
16548  eq_stor_ccs_cum_c_india(ccs_stor,tp1,t,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
16549                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
16550  ;
16551   
16552  eq_emi_stor_ccs_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16553                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
16554  ;
16555   
16556  eq_emi_leak_ccs_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16557                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
16558   
16559  *-------------------------------------------------------------------------------
16561   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
16563  *-------------------------------------------------------------------------------
16564  * Coal for non-electric sectors
16565  * - Coke Plants
16566  * - Industrial and Commercial combined-heat-and-power (CHP)
16567  * - Others
16568  *-------------------------------------------------------------------------------
16569   
16571   
16572  eqcost_en_nelcoal_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16573           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
16574                                          nelcoal_max_abat(t,n) *
16575                                          (nelcoal_cmac(n,'a') *
16576                                            Q_EN('nelcoalabat',t,n) /
16577                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
16578                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
16579                                              (exp(nelcoal_cmac(n,'c') *
16580                                                (Q_EN('nelcoalabat',t,n)/
16581                                                  (nelcoal_max_abat(t,n) *
16582                                                      nelcoal_baseline(t,n))
16583                                                  ) - 1 )
16584                                              )
16585                                          );
16586   
16587  eqq_ncoalabat_monotone_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
16588          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
16589   
16590  * ensure Q_EN is lower than K_EN for CCS as not in jel
16591  eqq_en_nelcoalccs_max_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16592          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
16593   
16594  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
16597  *-------------------------------------------------------------------------------
16598  * Wind energy module
16599  * - onshore and offshore
16600  *-------------------------------------------------------------------------------
16601   
16603   
16604  * Capacity limits in the wind onshore electrical sector
16605  eqq_en_mu_windon_c_india(wind_dist,wind_class,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
16606      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
16607   
16608  * Capacity limits in the wind offshore electrical sector
16609  eqq_en_mu_windoff_c_india(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
16610      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
16611   
16612  * Wind onshore electrical generation plants (new)
16613  eqk_en_windon_c_india(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
16614      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
16615                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
16616   
16617  * Wind offshore electrical generation plants (new)
16618  eqk_en_windoff_c_india(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
16619      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
16620                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
16621   
16622  * Total onshore wind energy production
16623  eqq_en_windon_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16624                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
16625   
16626  * Total offshore wind energy production
16627  eqq_en_windoff_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16628                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
16629   
16630  * Total onshore wind capacity
16631  eqk_en_windon_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16632                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
16633   
16634  * Total offshore wind capacity
16635  eqk_en_windoff_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16636                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
16637   
16638  * Total onshore wind investment
16639  eqi_en_windon_sum_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
16640                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
16641   
16642  * Total offshore wind investment
16643  eqi_en_windoff_sum_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
16644                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
16645   
16646  *-------------------------------------------------------------------------------
16648   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
16650  *-------------------------------------------------------------------------------
16651  * Solar Powerplants (PV and CSP) to the electrical system
16652  *-------------------------------------------------------------------------------
16653   
16654  *-------------------------------------------------------------------------------
16656   
16657   
16658  * Capacity limits in the pv electrical sector
16659  eqq_en_mu_pv_c_india(solar_dist,solar_class,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
16660                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
16661   
16662  * Capacity limits in the csp electrical sector
16663  eqq_en_mu_csp_c_india(solar_dist,solar_class,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
16664                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
16665   
16666  * PV electrical generation plants (new)
16667  eqk_en_pv_c_india(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
16668                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
16669                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
16670   
16671  * CSP electrical generation plants (new)
16672  eqk_en_csp_c_india(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
16673                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
16674                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
16675   
16676  * Total PV energy production
16677  eqq_en_pv_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16678                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
16679   
16680  * Total CSP energy production
16681  eqq_en_csp_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16682                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
16683   
16684  * Total PV capacity
16685  eqk_en_pv_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16686                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
16687   
16688  * Total CSP capacity
16689  eqk_en_csp_sum_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16690                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
16691   
16692  * Total PV investment
16693  eqi_en_pv_sum_c_india(t,tp1,n)$(map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
16694                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
16695   
16696  * Total CSP investment
16697  eqi_en_csp_sum_c_india(t,tp1,n)$(map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
16698                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
16699   
16700  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
16701  eqk_en_solar_comp_c_india(t,n,solar_dist)$(map_clt_n('c_india',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
16702                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
16703                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
16704   
16705   
16706   
16707  *-------------------------------------------------------------------------------
16709   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
16711  *-------------------------------------------------------------------------------
16712  * Technology development scenarios
16713  *-------------------------------------------------------------------------------
16714   
16716   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
16718  *-------------------------------------------------------------------------------
16719  * Oil Extraction
16720  * Options:
16721  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
16722  *-------------------------------------------------------------------------------
16723   
16725   
16726  * Capacity
16727  eqoilcap_c_india(t,tp1,n,oilg)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
16728      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
16729   
16730  * Production
16731  eqoilprod_c_india(t,tp1,n,oilg)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
16732      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
16733   
16734  eqq_out_oil_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16735      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
16736   
16737  * Cumulative production
16738  eqcum_oil_c_india(t,tp1,n,oilg)$((map_clt_n('c_india',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
16739      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
16740   
16741  * Cost
16742  eqcost_oil_c_india(t,tp1,n,oilg)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
16743      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
16744                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
16745                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
16746   
16747  * Investments
16748  eqi_oil_c_india(t,tp1,n,oilg)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
16749      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
16750   
16751  * Total investment
16752  eqi_out_oil_c_india(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
16753      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
16754   
16755  * Emissions
16756  eqq_emi_out_oil_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16757      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
16758   
16759  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
16762  *-------------------------------------------------------------------------------
16763  * Uranium Resources
16764  *-------------------------------------------------------------------------------
16765   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
16768  *-------------------------------------------------------------------------------
16769  * Gas Resources
16770  *-------------------------------------------------------------------------------
16771   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
16774  *-------------------------------------------------------------------------------
16775  * Coal Resources
16776  *-------------------------------------------------------------------------------
16777   
16779   
16780   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
16782  *-------------------------------------------------------------------------------
16783  * Climate
16784  *
16785  * Represents the climate
16786  * - based on the DICE model equations
16787  * - Radiative forcing for non CO2 ghgs
16788  * - parameters calibrated to reproduce MAGICC6.4 default response
16789  *
16790  *  Options:
16791  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
16792  * - $setglobal cooperate_on_climate {'YES','NO'}
16793  * - 'YES'(default): Countries within a coalition act in cooperation
16794  *   'NO': Countries within a coalition act individually
16795  *
16796  *-------------------------------------------------------------------------------
16797   
16799   
16801   
16802  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
16805  *-------------------------------------------------------------------------------
16806  * Long-run Damages from Climate Change
16807  * - Economic impacts
16808  * - Adaptation
16809  *-------------------------------------------------------------------------------
16810   
16812   
16814   
16815  *-------------------------------------------------------------------------------
16817   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
16819  *-------------------------------------------------------------------------------
16820  * Light-duty Vehicles for Personal Transport
16821  *-------------------------------------------------------------------------------
16822   
16824   
16825  *** newcode
16826  eqq_inv_red_ban_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16827      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
16828   
16829  ***
16830  *- Number of light duty vehicles
16831  eqnb_veh_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16832      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
16833   
16834  *- Yearly energy demand of vehicles
16835  eqq_en_veh_c_india(jveh,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16836      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
16837   
16838  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
16839  eqq_el_edv_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16840      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
16841   
16842  *- Investment cost for hybrid vehicles
16843  eqmcost_inv_hybrid_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
16844                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
16845   
16846  *- Investment cost for plug-in hybrid vehicles
16847  eqmcost_inv_plghybrid_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
16848                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
16849   
16850  *- Investment cost for electric drive vehicles
16851  eqmcost_inv_edv_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
16852                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
16853   
16854  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
16857  *-------------------------------------------------------------------------------
16858  * Road Freight Transport
16859  *-------------------------------------------------------------------------------
16861   
16862  *-  Number of freight vehicles
16863  eqnb_frtveh_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
16864                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
16865   
16866  *-  Yearly fuel consumption of freight vehicles
16867  eqq_en_frtveh_c_india(jfrt,t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16868                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
16869   
16870  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
16871  eqq_el_frtedv_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)))..
16872                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
16873   
16874  *-  Investment cost for hbd_stfr vehicle
16875  eqmcost_inv_hbd_stfr_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
16876                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
16877   
16878  *-  Investment cost for plug-in hbd_stfr vehicle
16879  eqmcost_inv_plghbd_stfr_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
16880                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
16881   
16882  *-  Investment cost for electric drive vehicle
16883  eqmcost_inv_edv_stfr_c_india(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
16884                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
16885   
16886  *-------------------------------------------------------------------------------
16888   
16889   
16890   
16891   
16892   
16893   
16894  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
16896  *-------------------------------------------------------------------------------
16897  * Traditional Biomass
16898  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
16899  *  - require post_process to be launch before
16900  *-------------------------------------------------------------------------------
16901   
16903   
16904  * Optional modules
16905   
16906  * Policy modules
16907   
16908  * Calibration
16911   
16912   
16913  model witch_c_india /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
16915  *-------------------------------------------------------------------------------
16916  * Call modules by order
16917  *-------------------------------------------------------------------------------
16921   
16922  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
16924  *-------------------------------------------------------------------------------
16925  * Algorithm
16926  *-------------------------------------------------------------------------------
16927   
16929   
16930  eqobj_c_india
16931   
16932  *-------------------------------------------------------------------------------
16934   
16935  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
16937  *-------------------------------------------------------------------------------
16938  * Time
16939  * - Temporal structure
16940  * - Fixed time periods
16941  * - States of the world
16942  *-------------------------------------------------------------------------------
16943   
16945   
16946  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
16948  *-------------------------------------------------------------------------------
16949  * Geographic dimension and mapping with countries
16950  *-------------------------------------------------------------------------------
16951   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
16954  *-------------------------------------------------------------------------------
16955  * Non-Cooperative Setup
16956  *
16957  * Each region is defined as an individual coalition.
16958  *
16959  *-------------------------------------------------------------------------------
16960   
16962   
16963  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
16965  *-------------------------------------------------------------------------------
16966  * Welfare
16967  *-------------------------------------------------------------------------------
16968   
16970   
16971  equtility_c_india
16972   
16973  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
16976  *-------------------------------------------------------------------------------
16977  * Economy
16978  * - Production and Consumption definition
16979  * - Top-level of the production function
16980  * Options:
16981  * --original_ssp=1 : original SSP population and GDP data
16982  *-------------------------------------------------------------------------------
16983   
16985   
16986  eqk_c_india
16987  eqq_cc_c_india
16988  eqq_fen_c_india
16989  eqq_y_c_india
16990   
16991  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
16994  *-------------------------------------------------------------------------------
16995  * Energy sector
16996  *-------------------------------------------------------------------------------
16997   
16999   
17000  eq_mkt_clearing_oil_c_india
17001  eqcost_pes_c_india
17002  eqcost_ses_c_india
17003  eqk_en_c_india
17004  eqq_ces_el_c_india
17005  eqq_ces_nelgas_c_india
17006  eqq_el2_c_india
17007  eqq_el_c_india
17008  eqq_elff_c_india
17009  eqq_en_c_india
17010  eqq_en_in_c_india
17011  eqq_en_mu_c_india
17012  eqq_en_tree_c_india
17013  eqq_nel_c_india
17014  eqq_nelog_c_india
17015  eqq_fuel_c_india
17016  eqq_elffren_c_india
17017   
17018  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
17021  *-------------------------------------------------------------------------------
17022  * Carbon Emissions
17023  * - Total CO2 emissions and CO2 Fossil fuel and Industry
17024  * - CO2 emission costs
17025  * - GHG permit market
17026  *-------------------------------------------------------------------------------
17027   
17029   
17030  eqq_emi_lim_c_india
17031  eqq_emi_tree_c_india
17032  eqq_emi_co2ffi_c_india
17033   
17034  eqcost_emi_co2_c_india
17035   
17036  eq_mkt_clearing_nip_c_india
17037   
17038  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
17041  *-------------------------------------------------------------------------------
17042  * Research & Development
17043  * Options:
17044  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
17045  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
17046  *-------------------------------------------------------------------------------
17047   
17049   
17050  eqk_rd_c_india
17051  eqspill_coop_c_india
17052  eqspill_lead_c_india
17053  eqspill_foll_c_india
17054  eqmcost_inv_back_c_india
17055  eqmcost_inv_back_lbd_c_india
17056   
17057  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
17060  *-------------------------------------------------------------------------------
17061  * Default Climate Policy Implementation
17062  *
17063  * Options:
17064  *    --policy={bau (default),ctax}
17065  *        Implement a climate policy setting
17066  *  [ --scen= ]
17067  *        Policy variant.
17068  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
17069  *          * XXX for a fixed percentage/yr (e.g. 5) growth
17070  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
17071  *  [ --ctax_year=2020 ]
17072  *        Starting year of the carbon tax
17073  *  [ --ctax_initial=30 ]
17074  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
17075  *
17076  *-------------------------------------------------------------------------------
17078   
17079  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
17081  *-------------------------------------------------------------------------------
17082  * Energy efficiency
17083  *-------------------------------------------------------------------------------
17084   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
17087  *-------------------------------------------------------------------------------
17088  * Hydro Power
17089  *-------------------------------------------------------------------------------
17090   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
17093  *-------------------------------------------------------------------------------
17094  * System Integration:
17095  * - Capacity constraint
17096  * - Flexibility constraint
17097  * - Grid Investment
17098  * - Capacity growth constraint
17099  *-------------------------------------------------------------------------------
17100   
17102   
17103  eqq_elintren_c_india
17104  eqflex_c_india
17105  eqk_en_grid_c_india
17106  eqk_en_grid_to_k_en_c_india
17107  eqfirm_capacity_c_india
17108  eqcap_growth_c_india
17109   
17110  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
17113  *-------------------------------------------------------------------------------
17114  * Nuclear power plants
17115  *-------------------------------------------------------------------------------
17116   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
17119  *-------------------------------------------------------------------------------
17120  * GHG module
17121  * - CH4 FFI + CH4 waste + CH4 open fires
17122  * - N2O FFI + N2O waste + N2O open fires
17123  *-------------------------------------------------------------------------------
17124   
17126   
17127  eqq_emi_waste_c_india
17128  eqq_emi_n2o_ffi_c_india
17129  eqq_emi_ch4_ffi_c_india
17130   
17131  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
17134  *-------------------------------------------------------------------------------
17135  * F-gases
17136  * - LLF
17137  * - SLF
17138  *-------------------------------------------------------------------------------
17139   
17141   
17142  eqq_emi_fgases_c_india
17143   
17144  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
17147  *-------------------------------------------------------------------------------
17148  * Landuse [simplified version of the land-use model]
17149  *-------------------------------------------------------------------------------
17150   
17152   
17153  eq_wbio_c_india
17154  eqcost_pes_wbio_c_india
17155   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
17158  *-------------------------------------------------------------------------------
17159  * Bioenergy power plant
17160  *-------------------------------------------------------------------------------
17161   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
17164  *-------------------------------------------------------------------------------
17165  * Traditional Biofuels
17166  * - Requires the precedence of mod_landuse
17167  *-------------------------------------------------------------------------------
17168   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
17171  *-------------------------------------------------------------------------------
17172  * Advanced biofuel
17173  * - Require the precedence of mod_landuse
17174  *-------------------------------------------------------------------------------
17175   
17177   
17178  eqq_en_lim_advbiofuel_c_india
17179  eqmcost_fuel_advbiofuel_c_india
17180   
17181  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
17184  *-------------------------------------------------------------------------------
17185  * Carbon Capture and Sequestration
17186  *-------------------------------------------------------------------------------
17187   
17189   
17190  eqq_emi_ccs_c_india
17191  eqcost_emi_sinks_c_india
17192  eq_stor_ccs_cum_c_india
17193  eq_emi_stor_ccs_c_india
17194  eq_emi_leak_ccs_c_india
17195   
17196  *-------------------------------------------------------------------------------
17198   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
17200  *-------------------------------------------------------------------------------
17201  * Coal for non-electric sectors
17202  * - Coke Plants
17203  * - Industrial and Commercial combined-heat-and-power (CHP)
17204  * - Others
17205  *-------------------------------------------------------------------------------
17206   
17208   
17209  eqcost_en_nelcoal_c_india
17210  eqq_ncoalabat_monotone_c_india
17211  eqq_en_nelcoalccs_max_c_india
17212   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
17215  *-------------------------------------------------------------------------------
17216  * Wind energy module
17217  * - onshore and offshore
17218  *-------------------------------------------------------------------------------
17219   
17221   
17222  eqq_en_mu_windon_c_india
17223  eqq_en_mu_windoff_c_india
17224  eqk_en_windon_c_india
17225  eqk_en_windoff_c_india
17226  eqq_en_windon_sum_c_india
17227  eqq_en_windoff_sum_c_india
17228  eqk_en_windon_sum_c_india
17229  eqk_en_windoff_sum_c_india
17230  eqi_en_windon_sum_c_india
17231  eqi_en_windoff_sum_c_india
17232   
17234   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
17236  *-------------------------------------------------------------------------------
17237  * Solar Powerplants (PV and CSP) to the electrical system
17238  *-------------------------------------------------------------------------------
17239   
17240  *-------------------------------------------------------------------------------
17242   
17243  eqq_en_mu_pv_c_india
17244  eqq_en_mu_csp_c_india
17245  eqk_en_pv_c_india
17246  eqk_en_csp_c_india
17247  eqq_en_pv_sum_c_india
17248  eqq_en_csp_sum_c_india
17249  eqk_en_pv_sum_c_india
17250  eqk_en_csp_sum_c_india
17251  eqi_en_pv_sum_c_india
17252  eqi_en_csp_sum_c_india
17253  eqk_en_solar_comp_c_india
17254   
17255  *-------------------------------------------------------------------------------
17257   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
17259  *-------------------------------------------------------------------------------
17260  * Technology development scenarios
17261  *-------------------------------------------------------------------------------
17262   
17264   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
17266  *-------------------------------------------------------------------------------
17267  * Oil Extraction
17268  * Options:
17269  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
17270  *-------------------------------------------------------------------------------
17271   
17273   
17274  eqoilcap_c_india
17275  eqoilprod_c_india
17276  eqq_out_oil_c_india
17277  eqcum_oil_c_india
17278  eqcost_oil_c_india
17279  eqi_oil_c_india
17280  eqi_out_oil_c_india
17281  eqq_emi_out_oil_c_india
17282   
17283  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
17286  *-------------------------------------------------------------------------------
17287  * Uranium Resources
17288  *-------------------------------------------------------------------------------
17289   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
17292  *-------------------------------------------------------------------------------
17293  * Gas Resources
17294  *-------------------------------------------------------------------------------
17295   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
17298  *-------------------------------------------------------------------------------
17299  * Coal Resources
17300  *-------------------------------------------------------------------------------
17301   
17303   
17304   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
17306  *-------------------------------------------------------------------------------
17307  * Climate
17308  *
17309  * Represents the climate
17310  * - based on the DICE model equations
17311  * - Radiative forcing for non CO2 ghgs
17312  * - parameters calibrated to reproduce MAGICC6.4 default response
17313  *
17314  *  Options:
17315  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
17316  * - $setglobal cooperate_on_climate {'YES','NO'}
17317  * - 'YES'(default): Countries within a coalition act in cooperation
17318  *   'NO': Countries within a coalition act individually
17319  *
17320  *-------------------------------------------------------------------------------
17321   
17323   
17325   
17326  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
17329  *-------------------------------------------------------------------------------
17330  * Long-run Damages from Climate Change
17331  * - Economic impacts
17332  * - Adaptation
17333  *-------------------------------------------------------------------------------
17334   
17336   
17338   
17339  *-------------------------------------------------------------------------------
17341   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
17343  *-------------------------------------------------------------------------------
17344  * Light-duty Vehicles for Personal Transport
17345  *-------------------------------------------------------------------------------
17346   
17348   
17349  eqnb_veh_c_india
17350  eqq_en_veh_c_india
17351  eqq_el_edv_c_india
17352  eqmcost_inv_hybrid_c_india
17353  eqmcost_inv_plghybrid_c_india
17354  eqmcost_inv_edv_c_india
17355  *** newcode
17356  eqq_inv_red_ban_c_india
17357  ***
17358  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
17361  *-------------------------------------------------------------------------------
17362  * Road Freight Transport
17363  *-------------------------------------------------------------------------------
17365   
17366  eqnb_frtveh_c_india
17367  eqq_en_frtveh_c_india
17368  eqq_el_frtedv_c_india
17369  eqmcost_inv_hbd_stfr_c_india
17370  eqmcost_inv_plghbd_stfr_c_india
17371  eqmcost_inv_edv_stfr_c_india
17372   
17373  *-------------------------------------------------------------------------------
17375   
17376   
17377   
17378   
17379   
17380   
17381  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
17383  *-------------------------------------------------------------------------------
17384  * Traditional Biomass
17385  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
17386  *  - require post_process to be launch before
17387  *-------------------------------------------------------------------------------
17388   
17390   
17391  * Optional modules
17392   
17393  * Policy modules
17394   
17395  * Calibration
17398  /;
17399   
17400  witch_c_india.optfile=1;   # the option file solvername.opt is to be used
17401  witch_c_india.holdfixed=1; # treat fixed values as constant
17402  witch_c_india.scaleopt=1;  # Use scaling for better gradients estimation
17403  witch_c_india.solvelink=3; # Use parallel or sequential solving
17404   
17409   
17410  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
17412  *-------------------------------------------------------------------------------
17413  * Call modules by order
17414  *-------------------------------------------------------------------------------
17418   
17419  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
17421  *-------------------------------------------------------------------------------
17422  * Algorithm
17423  *-------------------------------------------------------------------------------
17424   
17426   
17427  eqobj_c_indonesia
17428   
17429  *-------------------------------------------------------------------------------
17431   
17432  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
17434  *-------------------------------------------------------------------------------
17435  * Time
17436  * - Temporal structure
17437  * - Fixed time periods
17438  * - States of the world
17439  *-------------------------------------------------------------------------------
17440   
17442   
17443  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
17445  *-------------------------------------------------------------------------------
17446  * Geographic dimension and mapping with countries
17447  *-------------------------------------------------------------------------------
17448   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
17451  *-------------------------------------------------------------------------------
17452  * Non-Cooperative Setup
17453  *
17454  * Each region is defined as an individual coalition.
17455  *
17456  *-------------------------------------------------------------------------------
17457   
17459   
17460  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
17462  *-------------------------------------------------------------------------------
17463  * Welfare
17464  *-------------------------------------------------------------------------------
17465   
17467   
17468  equtility_c_indonesia
17469   
17470  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
17473  *-------------------------------------------------------------------------------
17474  * Economy
17475  * - Production and Consumption definition
17476  * - Top-level of the production function
17477  * Options:
17478  * --original_ssp=1 : original SSP population and GDP data
17479  *-------------------------------------------------------------------------------
17480   
17482   
17483  eqk_c_indonesia
17484  eqq_cc_c_indonesia
17485  eqq_fen_c_indonesia
17486  eqq_y_c_indonesia
17487   
17488  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
17491  *-------------------------------------------------------------------------------
17492  * Energy sector
17493  *-------------------------------------------------------------------------------
17494   
17496   
17497  eq_mkt_clearing_oil_c_indonesia
17498  eqcost_pes_c_indonesia
17499  eqcost_ses_c_indonesia
17500  eqk_en_c_indonesia
17501  eqq_ces_el_c_indonesia
17502  eqq_ces_nelgas_c_indonesia
17503  eqq_el2_c_indonesia
17504  eqq_el_c_indonesia
17505  eqq_elff_c_indonesia
17506  eqq_en_c_indonesia
17507  eqq_en_in_c_indonesia
17508  eqq_en_mu_c_indonesia
17509  eqq_en_tree_c_indonesia
17510  eqq_nel_c_indonesia
17511  eqq_nelog_c_indonesia
17512  eqq_fuel_c_indonesia
17513  eqq_elffren_c_indonesia
17514   
17515  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
17518  *-------------------------------------------------------------------------------
17519  * Carbon Emissions
17520  * - Total CO2 emissions and CO2 Fossil fuel and Industry
17521  * - CO2 emission costs
17522  * - GHG permit market
17523  *-------------------------------------------------------------------------------
17524   
17526   
17527  eqq_emi_lim_c_indonesia
17528  eqq_emi_tree_c_indonesia
17529  eqq_emi_co2ffi_c_indonesia
17530   
17531  eqcost_emi_co2_c_indonesia
17532   
17533  eq_mkt_clearing_nip_c_indonesia
17534   
17535  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
17538  *-------------------------------------------------------------------------------
17539  * Research & Development
17540  * Options:
17541  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
17542  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
17543  *-------------------------------------------------------------------------------
17544   
17546   
17547  eqk_rd_c_indonesia
17548  eqspill_coop_c_indonesia
17549  eqspill_lead_c_indonesia
17550  eqspill_foll_c_indonesia
17551  eqmcost_inv_back_c_indonesia
17552  eqmcost_inv_back_lbd_c_indonesia
17553   
17554  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
17557  *-------------------------------------------------------------------------------
17558  * Default Climate Policy Implementation
17559  *
17560  * Options:
17561  *    --policy={bau (default),ctax}
17562  *        Implement a climate policy setting
17563  *  [ --scen= ]
17564  *        Policy variant.
17565  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
17566  *          * XXX for a fixed percentage/yr (e.g. 5) growth
17567  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
17568  *  [ --ctax_year=2020 ]
17569  *        Starting year of the carbon tax
17570  *  [ --ctax_initial=30 ]
17571  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
17572  *
17573  *-------------------------------------------------------------------------------
17575   
17576  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
17578  *-------------------------------------------------------------------------------
17579  * Energy efficiency
17580  *-------------------------------------------------------------------------------
17581   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
17584  *-------------------------------------------------------------------------------
17585  * Hydro Power
17586  *-------------------------------------------------------------------------------
17587   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
17590  *-------------------------------------------------------------------------------
17591  * System Integration:
17592  * - Capacity constraint
17593  * - Flexibility constraint
17594  * - Grid Investment
17595  * - Capacity growth constraint
17596  *-------------------------------------------------------------------------------
17597   
17599   
17600  eqq_elintren_c_indonesia
17601  eqflex_c_indonesia
17602  eqk_en_grid_c_indonesia
17603  eqk_en_grid_to_k_en_c_indonesia
17604  eqfirm_capacity_c_indonesia
17605  eqcap_growth_c_indonesia
17606   
17607  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
17610  *-------------------------------------------------------------------------------
17611  * Nuclear power plants
17612  *-------------------------------------------------------------------------------
17613   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
17616  *-------------------------------------------------------------------------------
17617  * GHG module
17618  * - CH4 FFI + CH4 waste + CH4 open fires
17619  * - N2O FFI + N2O waste + N2O open fires
17620  *-------------------------------------------------------------------------------
17621   
17623   
17624  eqq_emi_waste_c_indonesia
17625  eqq_emi_n2o_ffi_c_indonesia
17626  eqq_emi_ch4_ffi_c_indonesia
17627   
17628  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
17631  *-------------------------------------------------------------------------------
17632  * F-gases
17633  * - LLF
17634  * - SLF
17635  *-------------------------------------------------------------------------------
17636   
17638   
17639  eqq_emi_fgases_c_indonesia
17640   
17641  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
17644  *-------------------------------------------------------------------------------
17645  * Landuse [simplified version of the land-use model]
17646  *-------------------------------------------------------------------------------
17647   
17649   
17650  eq_wbio_c_indonesia
17651  eqcost_pes_wbio_c_indonesia
17652   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
17655  *-------------------------------------------------------------------------------
17656  * Bioenergy power plant
17657  *-------------------------------------------------------------------------------
17658   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
17661  *-------------------------------------------------------------------------------
17662  * Traditional Biofuels
17663  * - Requires the precedence of mod_landuse
17664  *-------------------------------------------------------------------------------
17665   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
17668  *-------------------------------------------------------------------------------
17669  * Advanced biofuel
17670  * - Require the precedence of mod_landuse
17671  *-------------------------------------------------------------------------------
17672   
17674   
17675  eqq_en_lim_advbiofuel_c_indonesia
17676  eqmcost_fuel_advbiofuel_c_indonesia
17677   
17678  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
17681  *-------------------------------------------------------------------------------
17682  * Carbon Capture and Sequestration
17683  *-------------------------------------------------------------------------------
17684   
17686   
17687  eqq_emi_ccs_c_indonesia
17688  eqcost_emi_sinks_c_indonesia
17689  eq_stor_ccs_cum_c_indonesia
17690  eq_emi_stor_ccs_c_indonesia
17691  eq_emi_leak_ccs_c_indonesia
17692   
17693  *-------------------------------------------------------------------------------
17695   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
17697  *-------------------------------------------------------------------------------
17698  * Coal for non-electric sectors
17699  * - Coke Plants
17700  * - Industrial and Commercial combined-heat-and-power (CHP)
17701  * - Others
17702  *-------------------------------------------------------------------------------
17703   
17705   
17706  eqcost_en_nelcoal_c_indonesia
17707  eqq_ncoalabat_monotone_c_indonesia
17708  eqq_en_nelcoalccs_max_c_indonesia
17709   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
17712  *-------------------------------------------------------------------------------
17713  * Wind energy module
17714  * - onshore and offshore
17715  *-------------------------------------------------------------------------------
17716   
17718   
17719  eqq_en_mu_windon_c_indonesia
17720  eqq_en_mu_windoff_c_indonesia
17721  eqk_en_windon_c_indonesia
17722  eqk_en_windoff_c_indonesia
17723  eqq_en_windon_sum_c_indonesia
17724  eqq_en_windoff_sum_c_indonesia
17725  eqk_en_windon_sum_c_indonesia
17726  eqk_en_windoff_sum_c_indonesia
17727  eqi_en_windon_sum_c_indonesia
17728  eqi_en_windoff_sum_c_indonesia
17729   
17731   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
17733  *-------------------------------------------------------------------------------
17734  * Solar Powerplants (PV and CSP) to the electrical system
17735  *-------------------------------------------------------------------------------
17736   
17737  *-------------------------------------------------------------------------------
17739   
17740  eqq_en_mu_pv_c_indonesia
17741  eqq_en_mu_csp_c_indonesia
17742  eqk_en_pv_c_indonesia
17743  eqk_en_csp_c_indonesia
17744  eqq_en_pv_sum_c_indonesia
17745  eqq_en_csp_sum_c_indonesia
17746  eqk_en_pv_sum_c_indonesia
17747  eqk_en_csp_sum_c_indonesia
17748  eqi_en_pv_sum_c_indonesia
17749  eqi_en_csp_sum_c_indonesia
17750  eqk_en_solar_comp_c_indonesia
17751   
17752  *-------------------------------------------------------------------------------
17754   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
17756  *-------------------------------------------------------------------------------
17757  * Technology development scenarios
17758  *-------------------------------------------------------------------------------
17759   
17761   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
17763  *-------------------------------------------------------------------------------
17764  * Oil Extraction
17765  * Options:
17766  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
17767  *-------------------------------------------------------------------------------
17768   
17770   
17771  eqoilcap_c_indonesia
17772  eqoilprod_c_indonesia
17773  eqq_out_oil_c_indonesia
17774  eqcum_oil_c_indonesia
17775  eqcost_oil_c_indonesia
17776  eqi_oil_c_indonesia
17777  eqi_out_oil_c_indonesia
17778  eqq_emi_out_oil_c_indonesia
17779   
17780  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
17783  *-------------------------------------------------------------------------------
17784  * Uranium Resources
17785  *-------------------------------------------------------------------------------
17786   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
17789  *-------------------------------------------------------------------------------
17790  * Gas Resources
17791  *-------------------------------------------------------------------------------
17792   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
17795  *-------------------------------------------------------------------------------
17796  * Coal Resources
17797  *-------------------------------------------------------------------------------
17798   
17800   
17801   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
17803  *-------------------------------------------------------------------------------
17804  * Climate
17805  *
17806  * Represents the climate
17807  * - based on the DICE model equations
17808  * - Radiative forcing for non CO2 ghgs
17809  * - parameters calibrated to reproduce MAGICC6.4 default response
17810  *
17811  *  Options:
17812  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
17813  * - $setglobal cooperate_on_climate {'YES','NO'}
17814  * - 'YES'(default): Countries within a coalition act in cooperation
17815  *   'NO': Countries within a coalition act individually
17816  *
17817  *-------------------------------------------------------------------------------
17818   
17820   
17822   
17823  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
17826  *-------------------------------------------------------------------------------
17827  * Long-run Damages from Climate Change
17828  * - Economic impacts
17829  * - Adaptation
17830  *-------------------------------------------------------------------------------
17831   
17833   
17835   
17836  *-------------------------------------------------------------------------------
17838   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
17840  *-------------------------------------------------------------------------------
17841  * Light-duty Vehicles for Personal Transport
17842  *-------------------------------------------------------------------------------
17843   
17845   
17846  eqnb_veh_c_indonesia
17847  eqq_en_veh_c_indonesia
17848  eqq_el_edv_c_indonesia
17849  eqmcost_inv_hybrid_c_indonesia
17850  eqmcost_inv_plghybrid_c_indonesia
17851  eqmcost_inv_edv_c_indonesia
17852  *** newcode
17853  eqq_inv_red_ban_c_indonesia
17854  ***
17855  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
17858  *-------------------------------------------------------------------------------
17859  * Road Freight Transport
17860  *-------------------------------------------------------------------------------
17862   
17863  eqnb_frtveh_c_indonesia
17864  eqq_en_frtveh_c_indonesia
17865  eqq_el_frtedv_c_indonesia
17866  eqmcost_inv_hbd_stfr_c_indonesia
17867  eqmcost_inv_plghbd_stfr_c_indonesia
17868  eqmcost_inv_edv_stfr_c_indonesia
17869   
17870  *-------------------------------------------------------------------------------
17872   
17873   
17874   
17875   
17876   
17877   
17878  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
17880  *-------------------------------------------------------------------------------
17881  * Traditional Biomass
17882  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
17883  *  - require post_process to be launch before
17884  *-------------------------------------------------------------------------------
17885   
17887   
17888  * Optional modules
17889   
17890  * Policy modules
17891   
17892  * Calibration
17895  ;
17896   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
17898  *-------------------------------------------------------------------------------
17899  * Call modules by order
17900  *-------------------------------------------------------------------------------
17904   
17905  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
17907  *-------------------------------------------------------------------------------
17908  * Algorithm
17909  *-------------------------------------------------------------------------------
17910   
17912   
17914  * Add the component of the (maximized) objective function as required by the ADMM algorithm
17915  eqobj_c_indonesia..
17916      OBJADMM =e= UTILITY -
17917          sum(t, rho_admm('oil',t) / 2 *
17918              sum(n$(map_clt_n('c_indonesia',n) and trading_t('oil',t,n)),
17919                  power(
17920                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
17921                      x_admm('oil',t,n) +
17922                      xavg_admm('oil',t) +
17923                      u_admm('oil', t)
17924                  ,2)
17925              )) -
17926          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
17927              sum(n$(map_clt_n('c_indonesia',n) and trading_t(c_mkt,t,n)),
17928                  power(
17929                      Q_EMI(c_mkt,t,n) -
17930                      x_admm(c_mkt,t,n) +
17931                      xavg_admm(c_mkt,t) +
17932                      u_admm(c_mkt,t)
17933                  ,2)
17934              ))
17935      ;
17937   
17938  *-------------------------------------------------------------------------------
17940   
17941  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
17943  *-------------------------------------------------------------------------------
17944  * Time
17945  * - Temporal structure
17946  * - Fixed time periods
17947  * - States of the world
17948  *-------------------------------------------------------------------------------
17949   
17951   
17952  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
17954  *-------------------------------------------------------------------------------
17955  * Geographic dimension and mapping with countries
17956  *-------------------------------------------------------------------------------
17957   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
17960  *-------------------------------------------------------------------------------
17961  * Non-Cooperative Setup
17962  *
17963  * Each region is defined as an individual coalition.
17964  *
17965  *-------------------------------------------------------------------------------
17966   
17968   
17969  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
17971  *-------------------------------------------------------------------------------
17972  * Welfare
17973  *-------------------------------------------------------------------------------
17974   
17976   
17977  * Objective function - Welfare to be maximized
17978  equtility_c_indonesia..
17979      UTILITY =e=
17980   
17981  * Negishi SWF
17983   
17984  * Welfare functions based on CEBGE
17987                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
17988                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
17989                      ((sum(n$map_clt_n('c_indonesia',n),
17990                        (l(t,n) / sum(nn$map_clt_n('c_indonesia',nn), l(t,nn))) *
17991                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
17992                       )**(1 / (1 - gamma))
17993                      )**(1 - eta) ) +
17994                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
17995                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
17996                      ((sum(n$map_clt_n('c_indonesia',n),
17997                        (l(t,n) / sum(nn$map_clt_n('c_indonesia',nn), l(t,nn))) *
17998                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
17999                       )**(1 / (1 - gamma))
18000                      )**(1 - eta) )
18001                  )**(1/(1 - eta)) * 1e6
18004   
18005   
18006  ;
18007   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
18010  *-------------------------------------------------------------------------------
18011  * Economy
18012  * - Production and Consumption definition
18013  * - Top-level of the production function
18014  * Options:
18015  * --original_ssp=1 : original SSP population and GDP data
18016  *-------------------------------------------------------------------------------
18017   
18019   
18020  * Production
18021  eqq_y_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18022   
18023      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
18024                     ## Climate feedback on economy
18026                     ## Net cost of Primary and Secondary Energy Sources
18027                     - sum(fuel, COST_FUEL(fuel,t,n))
18028                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
18029                     - sum(cce, COST_EMI(cce,t,n))
18030                     ## Carbon tax
18031                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
18032                     ## Additionnal costs on gross product
18033                     - sum(ccy, COST_Y(ccy,t,n))
18034  ;
18035   
18036  * Consumption
18037  eqq_cc_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
18038      Q('cc',t,n) =e= Q('y',t,n)
18039                      ## Investments in goods g (final good, adaptation)
18040                      -sum(g, I(g,t,n))
18041                      ## Investments in r&d
18042                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
18043                      ## Investments in energy technlogies
18044                      -sum(jinv, I_EN(jinv,t,n))
18045                       ## Investments in grid infrastructures
18046                      - I_EN_GRID(t,n)
18047                      ## Investments in extraction sector
18048                      -sum(extract(f), I_OUT(f,t,n))
18049                      ## O&M for energy technlogies
18050                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
18051                      ## O&M for extraction
18052                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
18053                      ## Energy technology penalty costs
18054                      -sum(jpenalty(j), COST_EN(j,t,n))
18055  ;
18056   
18057  * Capital accumulation
18058  eqk_c_indonesia(g,t,tp1,n)$(map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
18059      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
18060   
18061  * Energy services
18062  eqq_fen_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18063      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
18064   
18065  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
18068  *-------------------------------------------------------------------------------
18069  * Energy sector
18070  *-------------------------------------------------------------------------------
18071   
18073   
18074  *-------------------------------------------------------------------------------
18075  * Production - Energy sector
18076  *-------------------------------------------------------------------------------
18077   
18078  eqq_en_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18079      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
18080   
18081  *-------------------------------------------------------------------------------
18082  * Production - Electrical sector
18083  *-------------------------------------------------------------------------------
18084   
18085  eqq_el_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18086      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
18087   
18088  eqq_el2_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18089      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
18090   
18091  eqq_elffren_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18092      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
18093  eqq_elff_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18094      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
18095   
18096  eqq_ces_el_c_indonesia(ices_el,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
18097      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
18098  ;
18099   
18100  *-------------------------------------------------------------------------------
18101  * Production - Non-electrical sector
18102  *-------------------------------------------------------------------------------
18103   
18104  eqq_nel_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18105      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
18106   
18107  eqq_nelog_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18108      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
18109  ;
18110  eqq_ces_nelgas_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18111      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
18112   
18113  *-------------------------------------------------------------------------------
18114  * PES and fuels
18115  *-------------------------------------------------------------------------------
18116   
18117  eqq_fuel_c_indonesia(fuel,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
18118      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
18119   
18120  *-------------------------------------------------------------------------------
18121  * Cost
18122  *-------------------------------------------------------------------------------
18123   
18124  * Net cost of Primary Energy Supplies
18125  eqcost_pes_c_indonesia(f,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
18126      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
18127                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
18128   
18129  * Net cost of Secondary Energy Supplies
18130  eqcost_ses_c_indonesia(s,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18131      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
18132   
18133   
18134  *-------------------------------------------------------------------------------
18135  * Market balances
18136  *-------------------------------------------------------------------------------
18137   
18138  eq_mkt_clearing_oil_c_indonesia(t,'c_indonesia')$(internal('oil'))..
18139      sum( n$(map_clt_n('c_indonesia',n) and trading_t('oil',t,n)),
18140          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
18141      ) =e= 0;
18142   
18143  *-------------------------------------------------------------------------------
18144  * New capital in the energy sector
18145  *-------------------------------------------------------------------------------
18146   
18147  * Electrical generation plants (new)
18148  eqk_en_c_indonesia(jinv,t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
18149      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
18150                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
18151   
18152  *-------------------------------------------------------------------------------
18153  * ENERGY
18154  *-------------------------------------------------------------------------------
18155   
18156  * Capacity limits in the electrical sector
18157  eqq_en_mu_c_indonesia(jel,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
18158      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
18159   
18160  * Efficiency of energy technology sector
18161  eqq_en_in_c_indonesia(jfed,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
18162      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
18163                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
18164   
18165  * Energy generation "tree"
18166  eqq_en_tree_c_indonesia(j,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
18167      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
18168   
18169  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
18172  *-------------------------------------------------------------------------------
18173  * Carbon Emissions
18174  * - Total CO2 emissions and CO2 Fossil fuel and Industry
18175  * - CO2 emission costs
18176  * - GHG permit market
18177  *-------------------------------------------------------------------------------
18178   
18180   
18181  * GHG emission cap
18182  eqq_emi_lim_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
18183      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
18184                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
18185   
18186  * Compute total and sectoral emissions
18187  eqq_emi_tree_c_indonesia(t,n,e)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
18188      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
18189   
18190  * Industrial CO2 emissions
18191  eqq_emi_co2ffi_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18192      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
18193                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
18194                              # Emissions from biomass
18195                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
18196                              # Emissions from fuel extraction
18197                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
18198                              # Captured emissions
18199                              sum(sink, Q_EMI(sink,t,n));
18200   
18201  * CO2 emission costs
18202  eqcost_emi_co2_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18203      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
18204   
18205  * Emission permit market clearing for internal market
18206  eq_mkt_clearing_nip_c_indonesia(c_mkt,t,'c_indonesia')$(internal(c_mkt))..
18207      sum(n$(map_clt_n('c_indonesia',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
18208   
18209  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
18212  *-------------------------------------------------------------------------------
18213  * Research & Development
18214  * Options:
18215  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
18216  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
18217  *-------------------------------------------------------------------------------
18218   
18220   
18221  * Knowledge stock accumulation
18222  eqk_rd_c_indonesia(rd,t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
18223                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
18224                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
18225                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
18226                                        SPILL(rd,t,n)**rd_coef(rd,'d');
18227   
18228  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
18229  eqspill_coop_c_indonesia(rd,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_indonesia'))..
18230          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
18231                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_indonesia',nn)), K_RD(rd,t,nn)) +
18232                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_indonesia',nn))), K_RD.l(rd,t,nn))
18233                            ) *
18234                            (
18235                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_indonesia',nn)), K_RD(rd,t,nn)) +
18236                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_indonesia',nn))), K_RD.l(rd,t,nn))
18237                              ) - K_RD(rd,t,n)
18238                            );
18239   
18240  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
18241  eqspill_lead_c_indonesia(rd,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_indonesia')) and leadrd(rd,n))..
18242                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
18243   
18244  * No-cooperation : a follower sees is negative effect on the quantity he can grab
18245  eqspill_foll_c_indonesia(rd,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_indonesia')) and (not leadrd(rd,n)))..
18246                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
18247   
18248  *- Only LbR (without learning by doing)
18249  eqmcost_inv_back_c_indonesia(jrd,t,tt,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
18250                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
18251                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
18252   
18253  *- LbR together with learning by doing ==> Two-factor learning curve
18254  eqmcost_inv_back_lbd_c_indonesia(jrd,t,tt,tfirst,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
18255                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
18256                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
18257                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
18258   
18259  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
18262  *-------------------------------------------------------------------------------
18263  * Default Climate Policy Implementation
18264  *
18265  * Options:
18266  *    --policy={bau (default),ctax}
18267  *        Implement a climate policy setting
18268  *  [ --scen= ]
18269  *        Policy variant.
18270  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
18271  *          * XXX for a fixed percentage/yr (e.g. 5) growth
18272  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
18273  *  [ --ctax_year=2020 ]
18274  *        Starting year of the carbon tax
18275  *  [ --ctax_initial=30 ]
18276  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
18277  *
18278  *-------------------------------------------------------------------------------
18280   
18281  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
18283  *-------------------------------------------------------------------------------
18284  * Energy efficiency
18285  *-------------------------------------------------------------------------------
18286   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
18289  *-------------------------------------------------------------------------------
18290  * Hydro Power
18291  *-------------------------------------------------------------------------------
18292   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
18295  *-------------------------------------------------------------------------------
18296  * System Integration:
18297  * - Capacity constraint
18298  * - Flexibility constraint
18299  * - Grid Investment
18300  * - Capacity growth constraint
18301  *-------------------------------------------------------------------------------
18302   
18304   
18305   
18306  * Renewable CES
18307   
18308  * Definition of the renewable CES
18309  eqq_elintren_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18310      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
18311   
18312  * Capacity constraint
18313   
18315  eqfirm_capacity_c_indonesia(t,n)$(map_clt_n('c_indonesia',n) and (not tfix(t)) and year(t) gt 2005)..
18316                   sum(jel_firm, K_EN(jel_firm,t,n))
18317                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
18318                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
18319                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
18320                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
18321                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
18322                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
18323                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
18324                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
18325                                       ) / yearly_hours
18326  ;
18328   
18329  * Flexibility constraint
18330  eqflex_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18331          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
18332                             ( Q_EN('el',t,n) -
18333                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
18334                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
18335                             ) * flex_coeff('load')
18336  ;
18337   
18338  * Grid
18339   
18340  ** Grid depreciation and investments
18341  eqk_en_grid_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
18342                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
18343                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
18344   
18345  ** Grid adjustment to power capacity
18346  eqk_en_grid_to_k_en_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18347                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
18348                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
18349                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
18350                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
18351                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
18352                                     ) / grid_cost +
18353                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
18354                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
18355                                      K_EN('elcsp',t,n);
18356  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
18357   
18358  * Capacity growth constraint
18359  eqcap_growth_c_indonesia(jinv,t,tp1,tp2,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
18360                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
18361                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
18362   
18363  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
18366  *-------------------------------------------------------------------------------
18367  * Nuclear power plants
18368  *-------------------------------------------------------------------------------
18369   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
18372  *-------------------------------------------------------------------------------
18373  * GHG module
18374  * - CH4 FFI + CH4 waste + CH4 open fires
18375  * - N2O FFI + N2O waste + N2O open fires
18376  *-------------------------------------------------------------------------------
18377   
18379   
18380  * CH4, N2O waste emissions
18381  eqq_emi_waste_c_indonesia(waste,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
18382                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
18383   
18384  * n2o FFI
18385  eqq_emi_n2o_ffi_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
18386    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
18387                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
18388                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
18389                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
18390                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
18391                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
18392                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
18393                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
18394                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
18395                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
18396                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
18397                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
18398                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
18399                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
18400                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
18401                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
18402                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
18403                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
18404                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
18405                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
18406                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
18407                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
18408                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
18409                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
18410                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
18411                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
18412                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
18413                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
18414                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
18415                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
18416                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
18417   
18418  * ch4 FFI
18419  eqq_emi_ch4_ffi_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
18420    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
18423  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
18424  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
18425                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
18426                             smax(tt$(year(tt) eq 2015),
18427                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
18430  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
18431  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
18432                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
18433   
18434  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
18437  *-------------------------------------------------------------------------------
18438  * F-gases
18439  * - LLF
18440  * - SLF
18441  *-------------------------------------------------------------------------------
18442   
18444   
18445  * F-gases emissions
18446  eqq_emi_fgases_c_indonesia(fgases,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
18447                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
18448   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
18451  *-------------------------------------------------------------------------------
18452  * Landuse [simplified version of the land-use model]
18453  *-------------------------------------------------------------------------------
18454   
18456   
18457  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
18458  eq_wbio_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18459      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
18460   
18462  * Cost of all woody biomass produced for advanced biofuels and woody biomass
18463  eqcost_pes_wbio_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18464      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
18466   
18467  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
18470  *-------------------------------------------------------------------------------
18471  * Bioenergy power plant
18472  *-------------------------------------------------------------------------------
18473   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
18476  *-------------------------------------------------------------------------------
18477  * Traditional Biofuels
18478  * - Requires the precedence of mod_landuse
18479  *-------------------------------------------------------------------------------
18480   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
18483  *-------------------------------------------------------------------------------
18484  * Advanced biofuel
18485  * - Require the precedence of mod_landuse
18486  *-------------------------------------------------------------------------------
18487   
18489   
18490  * Limitations for nel backstops
18491  eqq_en_lim_advbiofuel_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
18492               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
18493               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
18494   
18495  * Peculiarity of advbiofuel
18496  eqmcost_fuel_advbiofuel_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18497                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
18498   
18499  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
18502  *-------------------------------------------------------------------------------
18503  * Carbon Capture and Sequestration
18504  *-------------------------------------------------------------------------------
18505   
18507   
18508  eqq_emi_ccs_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18509                  Q_EMI('ccs_plant',t,n) =e=
18510                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
18511                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
18512  ;
18513   
18514  eqcost_emi_sinks_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18515                  COST_EMI('ccs_plant',t,n) =e=
18516                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
18517                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
18518  ;
18519   
18520  eq_stor_ccs_cum_c_indonesia(ccs_stor,tp1,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
18521                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
18522  ;
18523   
18524  eq_emi_stor_ccs_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18525                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
18526  ;
18527   
18528  eq_emi_leak_ccs_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18529                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
18530   
18531  *-------------------------------------------------------------------------------
18533   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
18535  *-------------------------------------------------------------------------------
18536  * Coal for non-electric sectors
18537  * - Coke Plants
18538  * - Industrial and Commercial combined-heat-and-power (CHP)
18539  * - Others
18540  *-------------------------------------------------------------------------------
18541   
18543   
18544  eqcost_en_nelcoal_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18545           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
18546                                          nelcoal_max_abat(t,n) *
18547                                          (nelcoal_cmac(n,'a') *
18548                                            Q_EN('nelcoalabat',t,n) /
18549                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
18550                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
18551                                              (exp(nelcoal_cmac(n,'c') *
18552                                                (Q_EN('nelcoalabat',t,n)/
18553                                                  (nelcoal_max_abat(t,n) *
18554                                                      nelcoal_baseline(t,n))
18555                                                  ) - 1 )
18556                                              )
18557                                          );
18558   
18559  eqq_ncoalabat_monotone_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
18560          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
18561   
18562  * ensure Q_EN is lower than K_EN for CCS as not in jel
18563  eqq_en_nelcoalccs_max_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18564          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
18565   
18566  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
18569  *-------------------------------------------------------------------------------
18570  * Wind energy module
18571  * - onshore and offshore
18572  *-------------------------------------------------------------------------------
18573   
18575   
18576  * Capacity limits in the wind onshore electrical sector
18577  eqq_en_mu_windon_c_indonesia(wind_dist,wind_class,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
18578      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
18579   
18580  * Capacity limits in the wind offshore electrical sector
18581  eqq_en_mu_windoff_c_indonesia(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
18582      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
18583   
18584  * Wind onshore electrical generation plants (new)
18585  eqk_en_windon_c_indonesia(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
18586      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
18587                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
18588   
18589  * Wind offshore electrical generation plants (new)
18590  eqk_en_windoff_c_indonesia(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
18591      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
18592                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
18593   
18594  * Total onshore wind energy production
18595  eqq_en_windon_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18596                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
18597   
18598  * Total offshore wind energy production
18599  eqq_en_windoff_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18600                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
18601   
18602  * Total onshore wind capacity
18603  eqk_en_windon_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18604                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
18605   
18606  * Total offshore wind capacity
18607  eqk_en_windoff_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18608                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
18609   
18610  * Total onshore wind investment
18611  eqi_en_windon_sum_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
18612                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
18613   
18614  * Total offshore wind investment
18615  eqi_en_windoff_sum_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
18616                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
18617   
18618  *-------------------------------------------------------------------------------
18620   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
18622  *-------------------------------------------------------------------------------
18623  * Solar Powerplants (PV and CSP) to the electrical system
18624  *-------------------------------------------------------------------------------
18625   
18626  *-------------------------------------------------------------------------------
18628   
18629   
18630  * Capacity limits in the pv electrical sector
18631  eqq_en_mu_pv_c_indonesia(solar_dist,solar_class,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
18632                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
18633   
18634  * Capacity limits in the csp electrical sector
18635  eqq_en_mu_csp_c_indonesia(solar_dist,solar_class,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
18636                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
18637   
18638  * PV electrical generation plants (new)
18639  eqk_en_pv_c_indonesia(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
18640                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
18641                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
18642   
18643  * CSP electrical generation plants (new)
18644  eqk_en_csp_c_indonesia(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
18645                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
18646                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
18647   
18648  * Total PV energy production
18649  eqq_en_pv_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18650                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
18651   
18652  * Total CSP energy production
18653  eqq_en_csp_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18654                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
18655   
18656  * Total PV capacity
18657  eqk_en_pv_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18658                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
18659   
18660  * Total CSP capacity
18661  eqk_en_csp_sum_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18662                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
18663   
18664  * Total PV investment
18665  eqi_en_pv_sum_c_indonesia(t,tp1,n)$(map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
18666                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
18667   
18668  * Total CSP investment
18669  eqi_en_csp_sum_c_indonesia(t,tp1,n)$(map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
18670                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
18671   
18672  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
18673  eqk_en_solar_comp_c_indonesia(t,n,solar_dist)$(map_clt_n('c_indonesia',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
18674                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
18675                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
18676   
18677   
18678   
18679  *-------------------------------------------------------------------------------
18681   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
18683  *-------------------------------------------------------------------------------
18684  * Technology development scenarios
18685  *-------------------------------------------------------------------------------
18686   
18688   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
18690  *-------------------------------------------------------------------------------
18691  * Oil Extraction
18692  * Options:
18693  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
18694  *-------------------------------------------------------------------------------
18695   
18697   
18698  * Capacity
18699  eqoilcap_c_indonesia(t,tp1,n,oilg)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
18700      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
18701   
18702  * Production
18703  eqoilprod_c_indonesia(t,tp1,n,oilg)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
18704      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
18705   
18706  eqq_out_oil_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18707      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
18708   
18709  * Cumulative production
18710  eqcum_oil_c_indonesia(t,tp1,n,oilg)$((map_clt_n('c_indonesia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
18711      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
18712   
18713  * Cost
18714  eqcost_oil_c_indonesia(t,tp1,n,oilg)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
18715      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
18716                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
18717                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
18718   
18719  * Investments
18720  eqi_oil_c_indonesia(t,tp1,n,oilg)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
18721      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
18722   
18723  * Total investment
18724  eqi_out_oil_c_indonesia(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
18725      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
18726   
18727  * Emissions
18728  eqq_emi_out_oil_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18729      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
18730   
18731  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
18734  *-------------------------------------------------------------------------------
18735  * Uranium Resources
18736  *-------------------------------------------------------------------------------
18737   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
18740  *-------------------------------------------------------------------------------
18741  * Gas Resources
18742  *-------------------------------------------------------------------------------
18743   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
18746  *-------------------------------------------------------------------------------
18747  * Coal Resources
18748  *-------------------------------------------------------------------------------
18749   
18751   
18752   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
18754  *-------------------------------------------------------------------------------
18755  * Climate
18756  *
18757  * Represents the climate
18758  * - based on the DICE model equations
18759  * - Radiative forcing for non CO2 ghgs
18760  * - parameters calibrated to reproduce MAGICC6.4 default response
18761  *
18762  *  Options:
18763  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
18764  * - $setglobal cooperate_on_climate {'YES','NO'}
18765  * - 'YES'(default): Countries within a coalition act in cooperation
18766  *   'NO': Countries within a coalition act individually
18767  *
18768  *-------------------------------------------------------------------------------
18769   
18771   
18773   
18774  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
18777  *-------------------------------------------------------------------------------
18778  * Long-run Damages from Climate Change
18779  * - Economic impacts
18780  * - Adaptation
18781  *-------------------------------------------------------------------------------
18782   
18784   
18786   
18787  *-------------------------------------------------------------------------------
18789   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
18791  *-------------------------------------------------------------------------------
18792  * Light-duty Vehicles for Personal Transport
18793  *-------------------------------------------------------------------------------
18794   
18796   
18797  *** newcode
18798  eqq_inv_red_ban_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18799      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
18800   
18801  ***
18802  *- Number of light duty vehicles
18803  eqnb_veh_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18804      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
18805   
18806  *- Yearly energy demand of vehicles
18807  eqq_en_veh_c_indonesia(jveh,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18808      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
18809   
18810  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
18811  eqq_el_edv_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18812      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
18813   
18814  *- Investment cost for hybrid vehicles
18815  eqmcost_inv_hybrid_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
18816                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
18817   
18818  *- Investment cost for plug-in hybrid vehicles
18819  eqmcost_inv_plghybrid_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
18820                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
18821   
18822  *- Investment cost for electric drive vehicles
18823  eqmcost_inv_edv_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
18824                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
18825   
18826  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
18829  *-------------------------------------------------------------------------------
18830  * Road Freight Transport
18831  *-------------------------------------------------------------------------------
18833   
18834  *-  Number of freight vehicles
18835  eqnb_frtveh_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
18836                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
18837   
18838  *-  Yearly fuel consumption of freight vehicles
18839  eqq_en_frtveh_c_indonesia(jfrt,t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18840                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
18841   
18842  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
18843  eqq_el_frtedv_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)))..
18844                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
18845   
18846  *-  Investment cost for hbd_stfr vehicle
18847  eqmcost_inv_hbd_stfr_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
18848                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
18849   
18850  *-  Investment cost for plug-in hbd_stfr vehicle
18851  eqmcost_inv_plghbd_stfr_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
18852                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
18853   
18854  *-  Investment cost for electric drive vehicle
18855  eqmcost_inv_edv_stfr_c_indonesia(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
18856                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
18857   
18858  *-------------------------------------------------------------------------------
18860   
18861   
18862   
18863   
18864   
18865   
18866  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
18868  *-------------------------------------------------------------------------------
18869  * Traditional Biomass
18870  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
18871  *  - require post_process to be launch before
18872  *-------------------------------------------------------------------------------
18873   
18875   
18876  * Optional modules
18877   
18878  * Policy modules
18879   
18880  * Calibration
18883   
18884   
18885  model witch_c_indonesia /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
18887  *-------------------------------------------------------------------------------
18888  * Call modules by order
18889  *-------------------------------------------------------------------------------
18893   
18894  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
18896  *-------------------------------------------------------------------------------
18897  * Algorithm
18898  *-------------------------------------------------------------------------------
18899   
18901   
18902  eqobj_c_indonesia
18903   
18904  *-------------------------------------------------------------------------------
18906   
18907  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
18909  *-------------------------------------------------------------------------------
18910  * Time
18911  * - Temporal structure
18912  * - Fixed time periods
18913  * - States of the world
18914  *-------------------------------------------------------------------------------
18915   
18917   
18918  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
18920  *-------------------------------------------------------------------------------
18921  * Geographic dimension and mapping with countries
18922  *-------------------------------------------------------------------------------
18923   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
18926  *-------------------------------------------------------------------------------
18927  * Non-Cooperative Setup
18928  *
18929  * Each region is defined as an individual coalition.
18930  *
18931  *-------------------------------------------------------------------------------
18932   
18934   
18935  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
18937  *-------------------------------------------------------------------------------
18938  * Welfare
18939  *-------------------------------------------------------------------------------
18940   
18942   
18943  equtility_c_indonesia
18944   
18945  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
18948  *-------------------------------------------------------------------------------
18949  * Economy
18950  * - Production and Consumption definition
18951  * - Top-level of the production function
18952  * Options:
18953  * --original_ssp=1 : original SSP population and GDP data
18954  *-------------------------------------------------------------------------------
18955   
18957   
18958  eqk_c_indonesia
18959  eqq_cc_c_indonesia
18960  eqq_fen_c_indonesia
18961  eqq_y_c_indonesia
18962   
18963  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
18966  *-------------------------------------------------------------------------------
18967  * Energy sector
18968  *-------------------------------------------------------------------------------
18969   
18971   
18972  eq_mkt_clearing_oil_c_indonesia
18973  eqcost_pes_c_indonesia
18974  eqcost_ses_c_indonesia
18975  eqk_en_c_indonesia
18976  eqq_ces_el_c_indonesia
18977  eqq_ces_nelgas_c_indonesia
18978  eqq_el2_c_indonesia
18979  eqq_el_c_indonesia
18980  eqq_elff_c_indonesia
18981  eqq_en_c_indonesia
18982  eqq_en_in_c_indonesia
18983  eqq_en_mu_c_indonesia
18984  eqq_en_tree_c_indonesia
18985  eqq_nel_c_indonesia
18986  eqq_nelog_c_indonesia
18987  eqq_fuel_c_indonesia
18988  eqq_elffren_c_indonesia
18989   
18990  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
18993  *-------------------------------------------------------------------------------
18994  * Carbon Emissions
18995  * - Total CO2 emissions and CO2 Fossil fuel and Industry
18996  * - CO2 emission costs
18997  * - GHG permit market
18998  *-------------------------------------------------------------------------------
18999   
19001   
19002  eqq_emi_lim_c_indonesia
19003  eqq_emi_tree_c_indonesia
19004  eqq_emi_co2ffi_c_indonesia
19005   
19006  eqcost_emi_co2_c_indonesia
19007   
19008  eq_mkt_clearing_nip_c_indonesia
19009   
19010  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
19013  *-------------------------------------------------------------------------------
19014  * Research & Development
19015  * Options:
19016  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
19017  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
19018  *-------------------------------------------------------------------------------
19019   
19021   
19022  eqk_rd_c_indonesia
19023  eqspill_coop_c_indonesia
19024  eqspill_lead_c_indonesia
19025  eqspill_foll_c_indonesia
19026  eqmcost_inv_back_c_indonesia
19027  eqmcost_inv_back_lbd_c_indonesia
19028   
19029  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
19032  *-------------------------------------------------------------------------------
19033  * Default Climate Policy Implementation
19034  *
19035  * Options:
19036  *    --policy={bau (default),ctax}
19037  *        Implement a climate policy setting
19038  *  [ --scen= ]
19039  *        Policy variant.
19040  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
19041  *          * XXX for a fixed percentage/yr (e.g. 5) growth
19042  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
19043  *  [ --ctax_year=2020 ]
19044  *        Starting year of the carbon tax
19045  *  [ --ctax_initial=30 ]
19046  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
19047  *
19048  *-------------------------------------------------------------------------------
19050   
19051  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
19053  *-------------------------------------------------------------------------------
19054  * Energy efficiency
19055  *-------------------------------------------------------------------------------
19056   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
19059  *-------------------------------------------------------------------------------
19060  * Hydro Power
19061  *-------------------------------------------------------------------------------
19062   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
19065  *-------------------------------------------------------------------------------
19066  * System Integration:
19067  * - Capacity constraint
19068  * - Flexibility constraint
19069  * - Grid Investment
19070  * - Capacity growth constraint
19071  *-------------------------------------------------------------------------------
19072   
19074   
19075  eqq_elintren_c_indonesia
19076  eqflex_c_indonesia
19077  eqk_en_grid_c_indonesia
19078  eqk_en_grid_to_k_en_c_indonesia
19079  eqfirm_capacity_c_indonesia
19080  eqcap_growth_c_indonesia
19081   
19082  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
19085  *-------------------------------------------------------------------------------
19086  * Nuclear power plants
19087  *-------------------------------------------------------------------------------
19088   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
19091  *-------------------------------------------------------------------------------
19092  * GHG module
19093  * - CH4 FFI + CH4 waste + CH4 open fires
19094  * - N2O FFI + N2O waste + N2O open fires
19095  *-------------------------------------------------------------------------------
19096   
19098   
19099  eqq_emi_waste_c_indonesia
19100  eqq_emi_n2o_ffi_c_indonesia
19101  eqq_emi_ch4_ffi_c_indonesia
19102   
19103  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
19106  *-------------------------------------------------------------------------------
19107  * F-gases
19108  * - LLF
19109  * - SLF
19110  *-------------------------------------------------------------------------------
19111   
19113   
19114  eqq_emi_fgases_c_indonesia
19115   
19116  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
19119  *-------------------------------------------------------------------------------
19120  * Landuse [simplified version of the land-use model]
19121  *-------------------------------------------------------------------------------
19122   
19124   
19125  eq_wbio_c_indonesia
19126  eqcost_pes_wbio_c_indonesia
19127   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
19130  *-------------------------------------------------------------------------------
19131  * Bioenergy power plant
19132  *-------------------------------------------------------------------------------
19133   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
19136  *-------------------------------------------------------------------------------
19137  * Traditional Biofuels
19138  * - Requires the precedence of mod_landuse
19139  *-------------------------------------------------------------------------------
19140   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
19143  *-------------------------------------------------------------------------------
19144  * Advanced biofuel
19145  * - Require the precedence of mod_landuse
19146  *-------------------------------------------------------------------------------
19147   
19149   
19150  eqq_en_lim_advbiofuel_c_indonesia
19151  eqmcost_fuel_advbiofuel_c_indonesia
19152   
19153  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
19156  *-------------------------------------------------------------------------------
19157  * Carbon Capture and Sequestration
19158  *-------------------------------------------------------------------------------
19159   
19161   
19162  eqq_emi_ccs_c_indonesia
19163  eqcost_emi_sinks_c_indonesia
19164  eq_stor_ccs_cum_c_indonesia
19165  eq_emi_stor_ccs_c_indonesia
19166  eq_emi_leak_ccs_c_indonesia
19167   
19168  *-------------------------------------------------------------------------------
19170   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
19172  *-------------------------------------------------------------------------------
19173  * Coal for non-electric sectors
19174  * - Coke Plants
19175  * - Industrial and Commercial combined-heat-and-power (CHP)
19176  * - Others
19177  *-------------------------------------------------------------------------------
19178   
19180   
19181  eqcost_en_nelcoal_c_indonesia
19182  eqq_ncoalabat_monotone_c_indonesia
19183  eqq_en_nelcoalccs_max_c_indonesia
19184   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
19187  *-------------------------------------------------------------------------------
19188  * Wind energy module
19189  * - onshore and offshore
19190  *-------------------------------------------------------------------------------
19191   
19193   
19194  eqq_en_mu_windon_c_indonesia
19195  eqq_en_mu_windoff_c_indonesia
19196  eqk_en_windon_c_indonesia
19197  eqk_en_windoff_c_indonesia
19198  eqq_en_windon_sum_c_indonesia
19199  eqq_en_windoff_sum_c_indonesia
19200  eqk_en_windon_sum_c_indonesia
19201  eqk_en_windoff_sum_c_indonesia
19202  eqi_en_windon_sum_c_indonesia
19203  eqi_en_windoff_sum_c_indonesia
19204   
19206   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
19208  *-------------------------------------------------------------------------------
19209  * Solar Powerplants (PV and CSP) to the electrical system
19210  *-------------------------------------------------------------------------------
19211   
19212  *-------------------------------------------------------------------------------
19214   
19215  eqq_en_mu_pv_c_indonesia
19216  eqq_en_mu_csp_c_indonesia
19217  eqk_en_pv_c_indonesia
19218  eqk_en_csp_c_indonesia
19219  eqq_en_pv_sum_c_indonesia
19220  eqq_en_csp_sum_c_indonesia
19221  eqk_en_pv_sum_c_indonesia
19222  eqk_en_csp_sum_c_indonesia
19223  eqi_en_pv_sum_c_indonesia
19224  eqi_en_csp_sum_c_indonesia
19225  eqk_en_solar_comp_c_indonesia
19226   
19227  *-------------------------------------------------------------------------------
19229   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
19231  *-------------------------------------------------------------------------------
19232  * Technology development scenarios
19233  *-------------------------------------------------------------------------------
19234   
19236   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
19238  *-------------------------------------------------------------------------------
19239  * Oil Extraction
19240  * Options:
19241  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
19242  *-------------------------------------------------------------------------------
19243   
19245   
19246  eqoilcap_c_indonesia
19247  eqoilprod_c_indonesia
19248  eqq_out_oil_c_indonesia
19249  eqcum_oil_c_indonesia
19250  eqcost_oil_c_indonesia
19251  eqi_oil_c_indonesia
19252  eqi_out_oil_c_indonesia
19253  eqq_emi_out_oil_c_indonesia
19254   
19255  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
19258  *-------------------------------------------------------------------------------
19259  * Uranium Resources
19260  *-------------------------------------------------------------------------------
19261   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
19264  *-------------------------------------------------------------------------------
19265  * Gas Resources
19266  *-------------------------------------------------------------------------------
19267   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
19270  *-------------------------------------------------------------------------------
19271  * Coal Resources
19272  *-------------------------------------------------------------------------------
19273   
19275   
19276   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
19278  *-------------------------------------------------------------------------------
19279  * Climate
19280  *
19281  * Represents the climate
19282  * - based on the DICE model equations
19283  * - Radiative forcing for non CO2 ghgs
19284  * - parameters calibrated to reproduce MAGICC6.4 default response
19285  *
19286  *  Options:
19287  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
19288  * - $setglobal cooperate_on_climate {'YES','NO'}
19289  * - 'YES'(default): Countries within a coalition act in cooperation
19290  *   'NO': Countries within a coalition act individually
19291  *
19292  *-------------------------------------------------------------------------------
19293   
19295   
19297   
19298  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
19301  *-------------------------------------------------------------------------------
19302  * Long-run Damages from Climate Change
19303  * - Economic impacts
19304  * - Adaptation
19305  *-------------------------------------------------------------------------------
19306   
19308   
19310   
19311  *-------------------------------------------------------------------------------
19313   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
19315  *-------------------------------------------------------------------------------
19316  * Light-duty Vehicles for Personal Transport
19317  *-------------------------------------------------------------------------------
19318   
19320   
19321  eqnb_veh_c_indonesia
19322  eqq_en_veh_c_indonesia
19323  eqq_el_edv_c_indonesia
19324  eqmcost_inv_hybrid_c_indonesia
19325  eqmcost_inv_plghybrid_c_indonesia
19326  eqmcost_inv_edv_c_indonesia
19327  *** newcode
19328  eqq_inv_red_ban_c_indonesia
19329  ***
19330  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
19333  *-------------------------------------------------------------------------------
19334  * Road Freight Transport
19335  *-------------------------------------------------------------------------------
19337   
19338  eqnb_frtveh_c_indonesia
19339  eqq_en_frtveh_c_indonesia
19340  eqq_el_frtedv_c_indonesia
19341  eqmcost_inv_hbd_stfr_c_indonesia
19342  eqmcost_inv_plghbd_stfr_c_indonesia
19343  eqmcost_inv_edv_stfr_c_indonesia
19344   
19345  *-------------------------------------------------------------------------------
19347   
19348   
19349   
19350   
19351   
19352   
19353  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
19355  *-------------------------------------------------------------------------------
19356  * Traditional Biomass
19357  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
19358  *  - require post_process to be launch before
19359  *-------------------------------------------------------------------------------
19360   
19362   
19363  * Optional modules
19364   
19365  * Policy modules
19366   
19367  * Calibration
19370  /;
19371   
19372  witch_c_indonesia.optfile=1;   # the option file solvername.opt is to be used
19373  witch_c_indonesia.holdfixed=1; # treat fixed values as constant
19374  witch_c_indonesia.scaleopt=1;  # Use scaling for better gradients estimation
19375  witch_c_indonesia.solvelink=3; # Use parallel or sequential solving
19376   
19381   
19382  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
19384  *-------------------------------------------------------------------------------
19385  * Call modules by order
19386  *-------------------------------------------------------------------------------
19390   
19391  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
19393  *-------------------------------------------------------------------------------
19394  * Algorithm
19395  *-------------------------------------------------------------------------------
19396   
19398   
19399  eqobj_c_jpnkor
19400   
19401  *-------------------------------------------------------------------------------
19403   
19404  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
19406  *-------------------------------------------------------------------------------
19407  * Time
19408  * - Temporal structure
19409  * - Fixed time periods
19410  * - States of the world
19411  *-------------------------------------------------------------------------------
19412   
19414   
19415  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
19417  *-------------------------------------------------------------------------------
19418  * Geographic dimension and mapping with countries
19419  *-------------------------------------------------------------------------------
19420   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
19423  *-------------------------------------------------------------------------------
19424  * Non-Cooperative Setup
19425  *
19426  * Each region is defined as an individual coalition.
19427  *
19428  *-------------------------------------------------------------------------------
19429   
19431   
19432  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
19434  *-------------------------------------------------------------------------------
19435  * Welfare
19436  *-------------------------------------------------------------------------------
19437   
19439   
19440  equtility_c_jpnkor
19441   
19442  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
19445  *-------------------------------------------------------------------------------
19446  * Economy
19447  * - Production and Consumption definition
19448  * - Top-level of the production function
19449  * Options:
19450  * --original_ssp=1 : original SSP population and GDP data
19451  *-------------------------------------------------------------------------------
19452   
19454   
19455  eqk_c_jpnkor
19456  eqq_cc_c_jpnkor
19457  eqq_fen_c_jpnkor
19458  eqq_y_c_jpnkor
19459   
19460  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
19463  *-------------------------------------------------------------------------------
19464  * Energy sector
19465  *-------------------------------------------------------------------------------
19466   
19468   
19469  eq_mkt_clearing_oil_c_jpnkor
19470  eqcost_pes_c_jpnkor
19471  eqcost_ses_c_jpnkor
19472  eqk_en_c_jpnkor
19473  eqq_ces_el_c_jpnkor
19474  eqq_ces_nelgas_c_jpnkor
19475  eqq_el2_c_jpnkor
19476  eqq_el_c_jpnkor
19477  eqq_elff_c_jpnkor
19478  eqq_en_c_jpnkor
19479  eqq_en_in_c_jpnkor
19480  eqq_en_mu_c_jpnkor
19481  eqq_en_tree_c_jpnkor
19482  eqq_nel_c_jpnkor
19483  eqq_nelog_c_jpnkor
19484  eqq_fuel_c_jpnkor
19485  eqq_elffren_c_jpnkor
19486   
19487  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
19490  *-------------------------------------------------------------------------------
19491  * Carbon Emissions
19492  * - Total CO2 emissions and CO2 Fossil fuel and Industry
19493  * - CO2 emission costs
19494  * - GHG permit market
19495  *-------------------------------------------------------------------------------
19496   
19498   
19499  eqq_emi_lim_c_jpnkor
19500  eqq_emi_tree_c_jpnkor
19501  eqq_emi_co2ffi_c_jpnkor
19502   
19503  eqcost_emi_co2_c_jpnkor
19504   
19505  eq_mkt_clearing_nip_c_jpnkor
19506   
19507  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
19510  *-------------------------------------------------------------------------------
19511  * Research & Development
19512  * Options:
19513  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
19514  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
19515  *-------------------------------------------------------------------------------
19516   
19518   
19519  eqk_rd_c_jpnkor
19520  eqspill_coop_c_jpnkor
19521  eqspill_lead_c_jpnkor
19522  eqspill_foll_c_jpnkor
19523  eqmcost_inv_back_c_jpnkor
19524  eqmcost_inv_back_lbd_c_jpnkor
19525   
19526  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
19529  *-------------------------------------------------------------------------------
19530  * Default Climate Policy Implementation
19531  *
19532  * Options:
19533  *    --policy={bau (default),ctax}
19534  *        Implement a climate policy setting
19535  *  [ --scen= ]
19536  *        Policy variant.
19537  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
19538  *          * XXX for a fixed percentage/yr (e.g. 5) growth
19539  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
19540  *  [ --ctax_year=2020 ]
19541  *        Starting year of the carbon tax
19542  *  [ --ctax_initial=30 ]
19543  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
19544  *
19545  *-------------------------------------------------------------------------------
19547   
19548  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
19550  *-------------------------------------------------------------------------------
19551  * Energy efficiency
19552  *-------------------------------------------------------------------------------
19553   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
19556  *-------------------------------------------------------------------------------
19557  * Hydro Power
19558  *-------------------------------------------------------------------------------
19559   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
19562  *-------------------------------------------------------------------------------
19563  * System Integration:
19564  * - Capacity constraint
19565  * - Flexibility constraint
19566  * - Grid Investment
19567  * - Capacity growth constraint
19568  *-------------------------------------------------------------------------------
19569   
19571   
19572  eqq_elintren_c_jpnkor
19573  eqflex_c_jpnkor
19574  eqk_en_grid_c_jpnkor
19575  eqk_en_grid_to_k_en_c_jpnkor
19576  eqfirm_capacity_c_jpnkor
19577  eqcap_growth_c_jpnkor
19578   
19579  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
19582  *-------------------------------------------------------------------------------
19583  * Nuclear power plants
19584  *-------------------------------------------------------------------------------
19585   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
19588  *-------------------------------------------------------------------------------
19589  * GHG module
19590  * - CH4 FFI + CH4 waste + CH4 open fires
19591  * - N2O FFI + N2O waste + N2O open fires
19592  *-------------------------------------------------------------------------------
19593   
19595   
19596  eqq_emi_waste_c_jpnkor
19597  eqq_emi_n2o_ffi_c_jpnkor
19598  eqq_emi_ch4_ffi_c_jpnkor
19599   
19600  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
19603  *-------------------------------------------------------------------------------
19604  * F-gases
19605  * - LLF
19606  * - SLF
19607  *-------------------------------------------------------------------------------
19608   
19610   
19611  eqq_emi_fgases_c_jpnkor
19612   
19613  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
19616  *-------------------------------------------------------------------------------
19617  * Landuse [simplified version of the land-use model]
19618  *-------------------------------------------------------------------------------
19619   
19621   
19622  eq_wbio_c_jpnkor
19623  eqcost_pes_wbio_c_jpnkor
19624   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
19627  *-------------------------------------------------------------------------------
19628  * Bioenergy power plant
19629  *-------------------------------------------------------------------------------
19630   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
19633  *-------------------------------------------------------------------------------
19634  * Traditional Biofuels
19635  * - Requires the precedence of mod_landuse
19636  *-------------------------------------------------------------------------------
19637   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
19640  *-------------------------------------------------------------------------------
19641  * Advanced biofuel
19642  * - Require the precedence of mod_landuse
19643  *-------------------------------------------------------------------------------
19644   
19646   
19647  eqq_en_lim_advbiofuel_c_jpnkor
19648  eqmcost_fuel_advbiofuel_c_jpnkor
19649   
19650  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
19653  *-------------------------------------------------------------------------------
19654  * Carbon Capture and Sequestration
19655  *-------------------------------------------------------------------------------
19656   
19658   
19659  eqq_emi_ccs_c_jpnkor
19660  eqcost_emi_sinks_c_jpnkor
19661  eq_stor_ccs_cum_c_jpnkor
19662  eq_emi_stor_ccs_c_jpnkor
19663  eq_emi_leak_ccs_c_jpnkor
19664   
19665  *-------------------------------------------------------------------------------
19667   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
19669  *-------------------------------------------------------------------------------
19670  * Coal for non-electric sectors
19671  * - Coke Plants
19672  * - Industrial and Commercial combined-heat-and-power (CHP)
19673  * - Others
19674  *-------------------------------------------------------------------------------
19675   
19677   
19678  eqcost_en_nelcoal_c_jpnkor
19679  eqq_ncoalabat_monotone_c_jpnkor
19680  eqq_en_nelcoalccs_max_c_jpnkor
19681   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
19684  *-------------------------------------------------------------------------------
19685  * Wind energy module
19686  * - onshore and offshore
19687  *-------------------------------------------------------------------------------
19688   
19690   
19691  eqq_en_mu_windon_c_jpnkor
19692  eqq_en_mu_windoff_c_jpnkor
19693  eqk_en_windon_c_jpnkor
19694  eqk_en_windoff_c_jpnkor
19695  eqq_en_windon_sum_c_jpnkor
19696  eqq_en_windoff_sum_c_jpnkor
19697  eqk_en_windon_sum_c_jpnkor
19698  eqk_en_windoff_sum_c_jpnkor
19699  eqi_en_windon_sum_c_jpnkor
19700  eqi_en_windoff_sum_c_jpnkor
19701   
19703   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
19705  *-------------------------------------------------------------------------------
19706  * Solar Powerplants (PV and CSP) to the electrical system
19707  *-------------------------------------------------------------------------------
19708   
19709  *-------------------------------------------------------------------------------
19711   
19712  eqq_en_mu_pv_c_jpnkor
19713  eqq_en_mu_csp_c_jpnkor
19714  eqk_en_pv_c_jpnkor
19715  eqk_en_csp_c_jpnkor
19716  eqq_en_pv_sum_c_jpnkor
19717  eqq_en_csp_sum_c_jpnkor
19718  eqk_en_pv_sum_c_jpnkor
19719  eqk_en_csp_sum_c_jpnkor
19720  eqi_en_pv_sum_c_jpnkor
19721  eqi_en_csp_sum_c_jpnkor
19722  eqk_en_solar_comp_c_jpnkor
19723   
19724  *-------------------------------------------------------------------------------
19726   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
19728  *-------------------------------------------------------------------------------
19729  * Technology development scenarios
19730  *-------------------------------------------------------------------------------
19731   
19733   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
19735  *-------------------------------------------------------------------------------
19736  * Oil Extraction
19737  * Options:
19738  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
19739  *-------------------------------------------------------------------------------
19740   
19742   
19743  eqoilcap_c_jpnkor
19744  eqoilprod_c_jpnkor
19745  eqq_out_oil_c_jpnkor
19746  eqcum_oil_c_jpnkor
19747  eqcost_oil_c_jpnkor
19748  eqi_oil_c_jpnkor
19749  eqi_out_oil_c_jpnkor
19750  eqq_emi_out_oil_c_jpnkor
19751   
19752  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
19755  *-------------------------------------------------------------------------------
19756  * Uranium Resources
19757  *-------------------------------------------------------------------------------
19758   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
19761  *-------------------------------------------------------------------------------
19762  * Gas Resources
19763  *-------------------------------------------------------------------------------
19764   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
19767  *-------------------------------------------------------------------------------
19768  * Coal Resources
19769  *-------------------------------------------------------------------------------
19770   
19772   
19773   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
19775  *-------------------------------------------------------------------------------
19776  * Climate
19777  *
19778  * Represents the climate
19779  * - based on the DICE model equations
19780  * - Radiative forcing for non CO2 ghgs
19781  * - parameters calibrated to reproduce MAGICC6.4 default response
19782  *
19783  *  Options:
19784  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
19785  * - $setglobal cooperate_on_climate {'YES','NO'}
19786  * - 'YES'(default): Countries within a coalition act in cooperation
19787  *   'NO': Countries within a coalition act individually
19788  *
19789  *-------------------------------------------------------------------------------
19790   
19792   
19794   
19795  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
19798  *-------------------------------------------------------------------------------
19799  * Long-run Damages from Climate Change
19800  * - Economic impacts
19801  * - Adaptation
19802  *-------------------------------------------------------------------------------
19803   
19805   
19807   
19808  *-------------------------------------------------------------------------------
19810   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
19812  *-------------------------------------------------------------------------------
19813  * Light-duty Vehicles for Personal Transport
19814  *-------------------------------------------------------------------------------
19815   
19817   
19818  eqnb_veh_c_jpnkor
19819  eqq_en_veh_c_jpnkor
19820  eqq_el_edv_c_jpnkor
19821  eqmcost_inv_hybrid_c_jpnkor
19822  eqmcost_inv_plghybrid_c_jpnkor
19823  eqmcost_inv_edv_c_jpnkor
19824  *** newcode
19825  eqq_inv_red_ban_c_jpnkor
19826  ***
19827  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
19830  *-------------------------------------------------------------------------------
19831  * Road Freight Transport
19832  *-------------------------------------------------------------------------------
19834   
19835  eqnb_frtveh_c_jpnkor
19836  eqq_en_frtveh_c_jpnkor
19837  eqq_el_frtedv_c_jpnkor
19838  eqmcost_inv_hbd_stfr_c_jpnkor
19839  eqmcost_inv_plghbd_stfr_c_jpnkor
19840  eqmcost_inv_edv_stfr_c_jpnkor
19841   
19842  *-------------------------------------------------------------------------------
19844   
19845   
19846   
19847   
19848   
19849   
19850  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
19852  *-------------------------------------------------------------------------------
19853  * Traditional Biomass
19854  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
19855  *  - require post_process to be launch before
19856  *-------------------------------------------------------------------------------
19857   
19859   
19860  * Optional modules
19861   
19862  * Policy modules
19863   
19864  * Calibration
19867  ;
19868   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
19870  *-------------------------------------------------------------------------------
19871  * Call modules by order
19872  *-------------------------------------------------------------------------------
19876   
19877  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
19879  *-------------------------------------------------------------------------------
19880  * Algorithm
19881  *-------------------------------------------------------------------------------
19882   
19884   
19886  * Add the component of the (maximized) objective function as required by the ADMM algorithm
19887  eqobj_c_jpnkor..
19888      OBJADMM =e= UTILITY -
19889          sum(t, rho_admm('oil',t) / 2 *
19890              sum(n$(map_clt_n('c_jpnkor',n) and trading_t('oil',t,n)),
19891                  power(
19892                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
19893                      x_admm('oil',t,n) +
19894                      xavg_admm('oil',t) +
19895                      u_admm('oil', t)
19896                  ,2)
19897              )) -
19898          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
19899              sum(n$(map_clt_n('c_jpnkor',n) and trading_t(c_mkt,t,n)),
19900                  power(
19901                      Q_EMI(c_mkt,t,n) -
19902                      x_admm(c_mkt,t,n) +
19903                      xavg_admm(c_mkt,t) +
19904                      u_admm(c_mkt,t)
19905                  ,2)
19906              ))
19907      ;
19909   
19910  *-------------------------------------------------------------------------------
19912   
19913  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
19915  *-------------------------------------------------------------------------------
19916  * Time
19917  * - Temporal structure
19918  * - Fixed time periods
19919  * - States of the world
19920  *-------------------------------------------------------------------------------
19921   
19923   
19924  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
19926  *-------------------------------------------------------------------------------
19927  * Geographic dimension and mapping with countries
19928  *-------------------------------------------------------------------------------
19929   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
19932  *-------------------------------------------------------------------------------
19933  * Non-Cooperative Setup
19934  *
19935  * Each region is defined as an individual coalition.
19936  *
19937  *-------------------------------------------------------------------------------
19938   
19940   
19941  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
19943  *-------------------------------------------------------------------------------
19944  * Welfare
19945  *-------------------------------------------------------------------------------
19946   
19948   
19949  * Objective function - Welfare to be maximized
19950  equtility_c_jpnkor..
19951      UTILITY =e=
19952   
19953  * Negishi SWF
19955   
19956  * Welfare functions based on CEBGE
19959                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
19960                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
19961                      ((sum(n$map_clt_n('c_jpnkor',n),
19962                        (l(t,n) / sum(nn$map_clt_n('c_jpnkor',nn), l(t,nn))) *
19963                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
19964                       )**(1 / (1 - gamma))
19965                      )**(1 - eta) ) +
19966                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
19967                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
19968                      ((sum(n$map_clt_n('c_jpnkor',n),
19969                        (l(t,n) / sum(nn$map_clt_n('c_jpnkor',nn), l(t,nn))) *
19970                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
19971                       )**(1 / (1 - gamma))
19972                      )**(1 - eta) )
19973                  )**(1/(1 - eta)) * 1e6
19976   
19977   
19978  ;
19979   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
19982  *-------------------------------------------------------------------------------
19983  * Economy
19984  * - Production and Consumption definition
19985  * - Top-level of the production function
19986  * Options:
19987  * --original_ssp=1 : original SSP population and GDP data
19988  *-------------------------------------------------------------------------------
19989   
19991   
19992  * Production
19993  eqq_y_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
19994   
19995      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
19996                     ## Climate feedback on economy
19998                     ## Net cost of Primary and Secondary Energy Sources
19999                     - sum(fuel, COST_FUEL(fuel,t,n))
20000                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
20001                     - sum(cce, COST_EMI(cce,t,n))
20002                     ## Carbon tax
20003                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
20004                     ## Additionnal costs on gross product
20005                     - sum(ccy, COST_Y(ccy,t,n))
20006  ;
20007   
20008  * Consumption
20009  eqq_cc_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
20010      Q('cc',t,n) =e= Q('y',t,n)
20011                      ## Investments in goods g (final good, adaptation)
20012                      -sum(g, I(g,t,n))
20013                      ## Investments in r&d
20014                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
20015                      ## Investments in energy technlogies
20016                      -sum(jinv, I_EN(jinv,t,n))
20017                       ## Investments in grid infrastructures
20018                      - I_EN_GRID(t,n)
20019                      ## Investments in extraction sector
20020                      -sum(extract(f), I_OUT(f,t,n))
20021                      ## O&M for energy technlogies
20022                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
20023                      ## O&M for extraction
20024                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
20025                      ## Energy technology penalty costs
20026                      -sum(jpenalty(j), COST_EN(j,t,n))
20027  ;
20028   
20029  * Capital accumulation
20030  eqk_c_jpnkor(g,t,tp1,n)$(map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
20031      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
20032   
20033  * Energy services
20034  eqq_fen_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20035      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
20036   
20037  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
20040  *-------------------------------------------------------------------------------
20041  * Energy sector
20042  *-------------------------------------------------------------------------------
20043   
20045   
20046  *-------------------------------------------------------------------------------
20047  * Production - Energy sector
20048  *-------------------------------------------------------------------------------
20049   
20050  eqq_en_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20051      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
20052   
20053  *-------------------------------------------------------------------------------
20054  * Production - Electrical sector
20055  *-------------------------------------------------------------------------------
20056   
20057  eqq_el_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20058      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
20059   
20060  eqq_el2_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20061      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
20062   
20063  eqq_elffren_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20064      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
20065  eqq_elff_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20066      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
20067   
20068  eqq_ces_el_c_jpnkor(ices_el,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
20069      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
20070  ;
20071   
20072  *-------------------------------------------------------------------------------
20073  * Production - Non-electrical sector
20074  *-------------------------------------------------------------------------------
20075   
20076  eqq_nel_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20077      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
20078   
20079  eqq_nelog_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20080      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
20081  ;
20082  eqq_ces_nelgas_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20083      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
20084   
20085  *-------------------------------------------------------------------------------
20086  * PES and fuels
20087  *-------------------------------------------------------------------------------
20088   
20089  eqq_fuel_c_jpnkor(fuel,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
20090      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
20091   
20092  *-------------------------------------------------------------------------------
20093  * Cost
20094  *-------------------------------------------------------------------------------
20095   
20096  * Net cost of Primary Energy Supplies
20097  eqcost_pes_c_jpnkor(f,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
20098      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
20099                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
20100   
20101  * Net cost of Secondary Energy Supplies
20102  eqcost_ses_c_jpnkor(s,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20103      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
20104   
20105   
20106  *-------------------------------------------------------------------------------
20107  * Market balances
20108  *-------------------------------------------------------------------------------
20109   
20110  eq_mkt_clearing_oil_c_jpnkor(t,'c_jpnkor')$(internal('oil'))..
20111      sum( n$(map_clt_n('c_jpnkor',n) and trading_t('oil',t,n)),
20112          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
20113      ) =e= 0;
20114   
20115  *-------------------------------------------------------------------------------
20116  * New capital in the energy sector
20117  *-------------------------------------------------------------------------------
20118   
20119  * Electrical generation plants (new)
20120  eqk_en_c_jpnkor(jinv,t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
20121      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
20122                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
20123   
20124  *-------------------------------------------------------------------------------
20125  * ENERGY
20126  *-------------------------------------------------------------------------------
20127   
20128  * Capacity limits in the electrical sector
20129  eqq_en_mu_c_jpnkor(jel,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
20130      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
20131   
20132  * Efficiency of energy technology sector
20133  eqq_en_in_c_jpnkor(jfed,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
20134      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
20135                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
20136   
20137  * Energy generation "tree"
20138  eqq_en_tree_c_jpnkor(j,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
20139      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
20140   
20141  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
20144  *-------------------------------------------------------------------------------
20145  * Carbon Emissions
20146  * - Total CO2 emissions and CO2 Fossil fuel and Industry
20147  * - CO2 emission costs
20148  * - GHG permit market
20149  *-------------------------------------------------------------------------------
20150   
20152   
20153  * GHG emission cap
20154  eqq_emi_lim_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
20155      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
20156                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
20157   
20158  * Compute total and sectoral emissions
20159  eqq_emi_tree_c_jpnkor(t,n,e)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
20160      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
20161   
20162  * Industrial CO2 emissions
20163  eqq_emi_co2ffi_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20164      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
20165                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
20166                              # Emissions from biomass
20167                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
20168                              # Emissions from fuel extraction
20169                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
20170                              # Captured emissions
20171                              sum(sink, Q_EMI(sink,t,n));
20172   
20173  * CO2 emission costs
20174  eqcost_emi_co2_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20175      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
20176   
20177  * Emission permit market clearing for internal market
20178  eq_mkt_clearing_nip_c_jpnkor(c_mkt,t,'c_jpnkor')$(internal(c_mkt))..
20179      sum(n$(map_clt_n('c_jpnkor',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
20180   
20181  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
20184  *-------------------------------------------------------------------------------
20185  * Research & Development
20186  * Options:
20187  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
20188  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
20189  *-------------------------------------------------------------------------------
20190   
20192   
20193  * Knowledge stock accumulation
20194  eqk_rd_c_jpnkor(rd,t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
20195                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
20196                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
20197                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
20198                                        SPILL(rd,t,n)**rd_coef(rd,'d');
20199   
20200  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
20201  eqspill_coop_c_jpnkor(rd,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_jpnkor'))..
20202          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
20203                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_jpnkor',nn)), K_RD(rd,t,nn)) +
20204                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_jpnkor',nn))), K_RD.l(rd,t,nn))
20205                            ) *
20206                            (
20207                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_jpnkor',nn)), K_RD(rd,t,nn)) +
20208                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_jpnkor',nn))), K_RD.l(rd,t,nn))
20209                              ) - K_RD(rd,t,n)
20210                            );
20211   
20212  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
20213  eqspill_lead_c_jpnkor(rd,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_jpnkor')) and leadrd(rd,n))..
20214                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
20215   
20216  * No-cooperation : a follower sees is negative effect on the quantity he can grab
20217  eqspill_foll_c_jpnkor(rd,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_jpnkor')) and (not leadrd(rd,n)))..
20218                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
20219   
20220  *- Only LbR (without learning by doing)
20221  eqmcost_inv_back_c_jpnkor(jrd,t,tt,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
20222                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
20223                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
20224   
20225  *- LbR together with learning by doing ==> Two-factor learning curve
20226  eqmcost_inv_back_lbd_c_jpnkor(jrd,t,tt,tfirst,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
20227                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
20228                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
20229                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
20230   
20231  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
20234  *-------------------------------------------------------------------------------
20235  * Default Climate Policy Implementation
20236  *
20237  * Options:
20238  *    --policy={bau (default),ctax}
20239  *        Implement a climate policy setting
20240  *  [ --scen= ]
20241  *        Policy variant.
20242  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
20243  *          * XXX for a fixed percentage/yr (e.g. 5) growth
20244  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
20245  *  [ --ctax_year=2020 ]
20246  *        Starting year of the carbon tax
20247  *  [ --ctax_initial=30 ]
20248  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
20249  *
20250  *-------------------------------------------------------------------------------
20252   
20253  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
20255  *-------------------------------------------------------------------------------
20256  * Energy efficiency
20257  *-------------------------------------------------------------------------------
20258   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
20261  *-------------------------------------------------------------------------------
20262  * Hydro Power
20263  *-------------------------------------------------------------------------------
20264   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
20267  *-------------------------------------------------------------------------------
20268  * System Integration:
20269  * - Capacity constraint
20270  * - Flexibility constraint
20271  * - Grid Investment
20272  * - Capacity growth constraint
20273  *-------------------------------------------------------------------------------
20274   
20276   
20277   
20278  * Renewable CES
20279   
20280  * Definition of the renewable CES
20281  eqq_elintren_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20282      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
20283   
20284  * Capacity constraint
20285   
20287  eqfirm_capacity_c_jpnkor(t,n)$(map_clt_n('c_jpnkor',n) and (not tfix(t)) and year(t) gt 2005)..
20288                   sum(jel_firm, K_EN(jel_firm,t,n))
20289                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
20290                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
20291                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
20292                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
20293                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
20294                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
20295                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
20296                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
20297                                       ) / yearly_hours
20298  ;
20300   
20301  * Flexibility constraint
20302  eqflex_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20303          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
20304                             ( Q_EN('el',t,n) -
20305                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
20306                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
20307                             ) * flex_coeff('load')
20308  ;
20309   
20310  * Grid
20311   
20312  ** Grid depreciation and investments
20313  eqk_en_grid_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
20314                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
20315                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
20316   
20317  ** Grid adjustment to power capacity
20318  eqk_en_grid_to_k_en_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20319                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
20320                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
20321                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
20322                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
20323                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
20324                                     ) / grid_cost +
20325                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
20326                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
20327                                      K_EN('elcsp',t,n);
20328  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
20329   
20330  * Capacity growth constraint
20331  eqcap_growth_c_jpnkor(jinv,t,tp1,tp2,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
20332                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
20333                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
20334   
20335  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
20338  *-------------------------------------------------------------------------------
20339  * Nuclear power plants
20340  *-------------------------------------------------------------------------------
20341   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
20344  *-------------------------------------------------------------------------------
20345  * GHG module
20346  * - CH4 FFI + CH4 waste + CH4 open fires
20347  * - N2O FFI + N2O waste + N2O open fires
20348  *-------------------------------------------------------------------------------
20349   
20351   
20352  * CH4, N2O waste emissions
20353  eqq_emi_waste_c_jpnkor(waste,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
20354                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
20355   
20356  * n2o FFI
20357  eqq_emi_n2o_ffi_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
20358    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
20359                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
20360                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
20361                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
20362                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
20363                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
20364                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
20365                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
20366                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
20367                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
20368                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
20369                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
20370                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
20371                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
20372                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
20373                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
20374                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
20375                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
20376                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
20377                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
20378                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
20379                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
20380                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
20381                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
20382                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
20383                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
20384                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
20385                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
20386                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
20387                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
20388                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
20389   
20390  * ch4 FFI
20391  eqq_emi_ch4_ffi_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
20392    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
20395  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
20396  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
20397                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
20398                             smax(tt$(year(tt) eq 2015),
20399                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
20402  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
20403  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
20404                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
20405   
20406  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
20409  *-------------------------------------------------------------------------------
20410  * F-gases
20411  * - LLF
20412  * - SLF
20413  *-------------------------------------------------------------------------------
20414   
20416   
20417  * F-gases emissions
20418  eqq_emi_fgases_c_jpnkor(fgases,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
20419                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
20420   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
20423  *-------------------------------------------------------------------------------
20424  * Landuse [simplified version of the land-use model]
20425  *-------------------------------------------------------------------------------
20426   
20428   
20429  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
20430  eq_wbio_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20431      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
20432   
20434  * Cost of all woody biomass produced for advanced biofuels and woody biomass
20435  eqcost_pes_wbio_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20436      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
20438   
20439  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
20442  *-------------------------------------------------------------------------------
20443  * Bioenergy power plant
20444  *-------------------------------------------------------------------------------
20445   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
20448  *-------------------------------------------------------------------------------
20449  * Traditional Biofuels
20450  * - Requires the precedence of mod_landuse
20451  *-------------------------------------------------------------------------------
20452   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
20455  *-------------------------------------------------------------------------------
20456  * Advanced biofuel
20457  * - Require the precedence of mod_landuse
20458  *-------------------------------------------------------------------------------
20459   
20461   
20462  * Limitations for nel backstops
20463  eqq_en_lim_advbiofuel_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
20464               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
20465               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
20466   
20467  * Peculiarity of advbiofuel
20468  eqmcost_fuel_advbiofuel_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20469                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
20470   
20471  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
20474  *-------------------------------------------------------------------------------
20475  * Carbon Capture and Sequestration
20476  *-------------------------------------------------------------------------------
20477   
20479   
20480  eqq_emi_ccs_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20481                  Q_EMI('ccs_plant',t,n) =e=
20482                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
20483                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
20484  ;
20485   
20486  eqcost_emi_sinks_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20487                  COST_EMI('ccs_plant',t,n) =e=
20488                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
20489                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
20490  ;
20491   
20492  eq_stor_ccs_cum_c_jpnkor(ccs_stor,tp1,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
20493                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
20494  ;
20495   
20496  eq_emi_stor_ccs_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20497                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
20498  ;
20499   
20500  eq_emi_leak_ccs_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20501                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
20502   
20503  *-------------------------------------------------------------------------------
20505   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
20507  *-------------------------------------------------------------------------------
20508  * Coal for non-electric sectors
20509  * - Coke Plants
20510  * - Industrial and Commercial combined-heat-and-power (CHP)
20511  * - Others
20512  *-------------------------------------------------------------------------------
20513   
20515   
20516  eqcost_en_nelcoal_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20517           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
20518                                          nelcoal_max_abat(t,n) *
20519                                          (nelcoal_cmac(n,'a') *
20520                                            Q_EN('nelcoalabat',t,n) /
20521                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
20522                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
20523                                              (exp(nelcoal_cmac(n,'c') *
20524                                                (Q_EN('nelcoalabat',t,n)/
20525                                                  (nelcoal_max_abat(t,n) *
20526                                                      nelcoal_baseline(t,n))
20527                                                  ) - 1 )
20528                                              )
20529                                          );
20530   
20531  eqq_ncoalabat_monotone_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
20532          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
20533   
20534  * ensure Q_EN is lower than K_EN for CCS as not in jel
20535  eqq_en_nelcoalccs_max_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20536          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
20537   
20538  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
20541  *-------------------------------------------------------------------------------
20542  * Wind energy module
20543  * - onshore and offshore
20544  *-------------------------------------------------------------------------------
20545   
20547   
20548  * Capacity limits in the wind onshore electrical sector
20549  eqq_en_mu_windon_c_jpnkor(wind_dist,wind_class,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
20550      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
20551   
20552  * Capacity limits in the wind offshore electrical sector
20553  eqq_en_mu_windoff_c_jpnkor(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
20554      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
20555   
20556  * Wind onshore electrical generation plants (new)
20557  eqk_en_windon_c_jpnkor(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
20558      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
20559                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
20560   
20561  * Wind offshore electrical generation plants (new)
20562  eqk_en_windoff_c_jpnkor(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
20563      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
20564                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
20565   
20566  * Total onshore wind energy production
20567  eqq_en_windon_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20568                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
20569   
20570  * Total offshore wind energy production
20571  eqq_en_windoff_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20572                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
20573   
20574  * Total onshore wind capacity
20575  eqk_en_windon_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20576                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
20577   
20578  * Total offshore wind capacity
20579  eqk_en_windoff_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20580                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
20581   
20582  * Total onshore wind investment
20583  eqi_en_windon_sum_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
20584                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
20585   
20586  * Total offshore wind investment
20587  eqi_en_windoff_sum_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
20588                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
20589   
20590  *-------------------------------------------------------------------------------
20592   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
20594  *-------------------------------------------------------------------------------
20595  * Solar Powerplants (PV and CSP) to the electrical system
20596  *-------------------------------------------------------------------------------
20597   
20598  *-------------------------------------------------------------------------------
20600   
20601   
20602  * Capacity limits in the pv electrical sector
20603  eqq_en_mu_pv_c_jpnkor(solar_dist,solar_class,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
20604                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
20605   
20606  * Capacity limits in the csp electrical sector
20607  eqq_en_mu_csp_c_jpnkor(solar_dist,solar_class,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
20608                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
20609   
20610  * PV electrical generation plants (new)
20611  eqk_en_pv_c_jpnkor(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
20612                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
20613                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
20614   
20615  * CSP electrical generation plants (new)
20616  eqk_en_csp_c_jpnkor(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
20617                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
20618                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
20619   
20620  * Total PV energy production
20621  eqq_en_pv_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20622                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
20623   
20624  * Total CSP energy production
20625  eqq_en_csp_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20626                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
20627   
20628  * Total PV capacity
20629  eqk_en_pv_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20630                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
20631   
20632  * Total CSP capacity
20633  eqk_en_csp_sum_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20634                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
20635   
20636  * Total PV investment
20637  eqi_en_pv_sum_c_jpnkor(t,tp1,n)$(map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
20638                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
20639   
20640  * Total CSP investment
20641  eqi_en_csp_sum_c_jpnkor(t,tp1,n)$(map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
20642                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
20643   
20644  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
20645  eqk_en_solar_comp_c_jpnkor(t,n,solar_dist)$(map_clt_n('c_jpnkor',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
20646                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
20647                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
20648   
20649   
20650   
20651  *-------------------------------------------------------------------------------
20653   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
20655  *-------------------------------------------------------------------------------
20656  * Technology development scenarios
20657  *-------------------------------------------------------------------------------
20658   
20660   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
20662  *-------------------------------------------------------------------------------
20663  * Oil Extraction
20664  * Options:
20665  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
20666  *-------------------------------------------------------------------------------
20667   
20669   
20670  * Capacity
20671  eqoilcap_c_jpnkor(t,tp1,n,oilg)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
20672      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
20673   
20674  * Production
20675  eqoilprod_c_jpnkor(t,tp1,n,oilg)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
20676      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
20677   
20678  eqq_out_oil_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20679      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
20680   
20681  * Cumulative production
20682  eqcum_oil_c_jpnkor(t,tp1,n,oilg)$((map_clt_n('c_jpnkor',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
20683      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
20684   
20685  * Cost
20686  eqcost_oil_c_jpnkor(t,tp1,n,oilg)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
20687      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
20688                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
20689                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
20690   
20691  * Investments
20692  eqi_oil_c_jpnkor(t,tp1,n,oilg)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
20693      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
20694   
20695  * Total investment
20696  eqi_out_oil_c_jpnkor(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
20697      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
20698   
20699  * Emissions
20700  eqq_emi_out_oil_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20701      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
20702   
20703  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
20706  *-------------------------------------------------------------------------------
20707  * Uranium Resources
20708  *-------------------------------------------------------------------------------
20709   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
20712  *-------------------------------------------------------------------------------
20713  * Gas Resources
20714  *-------------------------------------------------------------------------------
20715   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
20718  *-------------------------------------------------------------------------------
20719  * Coal Resources
20720  *-------------------------------------------------------------------------------
20721   
20723   
20724   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
20726  *-------------------------------------------------------------------------------
20727  * Climate
20728  *
20729  * Represents the climate
20730  * - based on the DICE model equations
20731  * - Radiative forcing for non CO2 ghgs
20732  * - parameters calibrated to reproduce MAGICC6.4 default response
20733  *
20734  *  Options:
20735  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
20736  * - $setglobal cooperate_on_climate {'YES','NO'}
20737  * - 'YES'(default): Countries within a coalition act in cooperation
20738  *   'NO': Countries within a coalition act individually
20739  *
20740  *-------------------------------------------------------------------------------
20741   
20743   
20745   
20746  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
20749  *-------------------------------------------------------------------------------
20750  * Long-run Damages from Climate Change
20751  * - Economic impacts
20752  * - Adaptation
20753  *-------------------------------------------------------------------------------
20754   
20756   
20758   
20759  *-------------------------------------------------------------------------------
20761   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
20763  *-------------------------------------------------------------------------------
20764  * Light-duty Vehicles for Personal Transport
20765  *-------------------------------------------------------------------------------
20766   
20768   
20769  *** newcode
20770  eqq_inv_red_ban_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20771      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
20772   
20773  ***
20774  *- Number of light duty vehicles
20775  eqnb_veh_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20776      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
20777   
20778  *- Yearly energy demand of vehicles
20779  eqq_en_veh_c_jpnkor(jveh,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20780      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
20781   
20782  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
20783  eqq_el_edv_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20784      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
20785   
20786  *- Investment cost for hybrid vehicles
20787  eqmcost_inv_hybrid_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
20788                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
20789   
20790  *- Investment cost for plug-in hybrid vehicles
20791  eqmcost_inv_plghybrid_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
20792                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
20793   
20794  *- Investment cost for electric drive vehicles
20795  eqmcost_inv_edv_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
20796                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
20797   
20798  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
20801  *-------------------------------------------------------------------------------
20802  * Road Freight Transport
20803  *-------------------------------------------------------------------------------
20805   
20806  *-  Number of freight vehicles
20807  eqnb_frtveh_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
20808                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
20809   
20810  *-  Yearly fuel consumption of freight vehicles
20811  eqq_en_frtveh_c_jpnkor(jfrt,t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20812                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
20813   
20814  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
20815  eqq_el_frtedv_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)))..
20816                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
20817   
20818  *-  Investment cost for hbd_stfr vehicle
20819  eqmcost_inv_hbd_stfr_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
20820                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
20821   
20822  *-  Investment cost for plug-in hbd_stfr vehicle
20823  eqmcost_inv_plghbd_stfr_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
20824                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
20825   
20826  *-  Investment cost for electric drive vehicle
20827  eqmcost_inv_edv_stfr_c_jpnkor(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
20828                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
20829   
20830  *-------------------------------------------------------------------------------
20832   
20833   
20834   
20835   
20836   
20837   
20838  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
20840  *-------------------------------------------------------------------------------
20841  * Traditional Biomass
20842  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
20843  *  - require post_process to be launch before
20844  *-------------------------------------------------------------------------------
20845   
20847   
20848  * Optional modules
20849   
20850  * Policy modules
20851   
20852  * Calibration
20855   
20856   
20857  model witch_c_jpnkor /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
20859  *-------------------------------------------------------------------------------
20860  * Call modules by order
20861  *-------------------------------------------------------------------------------
20865   
20866  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
20868  *-------------------------------------------------------------------------------
20869  * Algorithm
20870  *-------------------------------------------------------------------------------
20871   
20873   
20874  eqobj_c_jpnkor
20875   
20876  *-------------------------------------------------------------------------------
20878   
20879  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
20881  *-------------------------------------------------------------------------------
20882  * Time
20883  * - Temporal structure
20884  * - Fixed time periods
20885  * - States of the world
20886  *-------------------------------------------------------------------------------
20887   
20889   
20890  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
20892  *-------------------------------------------------------------------------------
20893  * Geographic dimension and mapping with countries
20894  *-------------------------------------------------------------------------------
20895   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
20898  *-------------------------------------------------------------------------------
20899  * Non-Cooperative Setup
20900  *
20901  * Each region is defined as an individual coalition.
20902  *
20903  *-------------------------------------------------------------------------------
20904   
20906   
20907  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
20909  *-------------------------------------------------------------------------------
20910  * Welfare
20911  *-------------------------------------------------------------------------------
20912   
20914   
20915  equtility_c_jpnkor
20916   
20917  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
20920  *-------------------------------------------------------------------------------
20921  * Economy
20922  * - Production and Consumption definition
20923  * - Top-level of the production function
20924  * Options:
20925  * --original_ssp=1 : original SSP population and GDP data
20926  *-------------------------------------------------------------------------------
20927   
20929   
20930  eqk_c_jpnkor
20931  eqq_cc_c_jpnkor
20932  eqq_fen_c_jpnkor
20933  eqq_y_c_jpnkor
20934   
20935  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
20938  *-------------------------------------------------------------------------------
20939  * Energy sector
20940  *-------------------------------------------------------------------------------
20941   
20943   
20944  eq_mkt_clearing_oil_c_jpnkor
20945  eqcost_pes_c_jpnkor
20946  eqcost_ses_c_jpnkor
20947  eqk_en_c_jpnkor
20948  eqq_ces_el_c_jpnkor
20949  eqq_ces_nelgas_c_jpnkor
20950  eqq_el2_c_jpnkor
20951  eqq_el_c_jpnkor
20952  eqq_elff_c_jpnkor
20953  eqq_en_c_jpnkor
20954  eqq_en_in_c_jpnkor
20955  eqq_en_mu_c_jpnkor
20956  eqq_en_tree_c_jpnkor
20957  eqq_nel_c_jpnkor
20958  eqq_nelog_c_jpnkor
20959  eqq_fuel_c_jpnkor
20960  eqq_elffren_c_jpnkor
20961   
20962  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
20965  *-------------------------------------------------------------------------------
20966  * Carbon Emissions
20967  * - Total CO2 emissions and CO2 Fossil fuel and Industry
20968  * - CO2 emission costs
20969  * - GHG permit market
20970  *-------------------------------------------------------------------------------
20971   
20973   
20974  eqq_emi_lim_c_jpnkor
20975  eqq_emi_tree_c_jpnkor
20976  eqq_emi_co2ffi_c_jpnkor
20977   
20978  eqcost_emi_co2_c_jpnkor
20979   
20980  eq_mkt_clearing_nip_c_jpnkor
20981   
20982  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
20985  *-------------------------------------------------------------------------------
20986  * Research & Development
20987  * Options:
20988  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
20989  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
20990  *-------------------------------------------------------------------------------
20991   
20993   
20994  eqk_rd_c_jpnkor
20995  eqspill_coop_c_jpnkor
20996  eqspill_lead_c_jpnkor
20997  eqspill_foll_c_jpnkor
20998  eqmcost_inv_back_c_jpnkor
20999  eqmcost_inv_back_lbd_c_jpnkor
21000   
21001  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
21004  *-------------------------------------------------------------------------------
21005  * Default Climate Policy Implementation
21006  *
21007  * Options:
21008  *    --policy={bau (default),ctax}
21009  *        Implement a climate policy setting
21010  *  [ --scen= ]
21011  *        Policy variant.
21012  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
21013  *          * XXX for a fixed percentage/yr (e.g. 5) growth
21014  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
21015  *  [ --ctax_year=2020 ]
21016  *        Starting year of the carbon tax
21017  *  [ --ctax_initial=30 ]
21018  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
21019  *
21020  *-------------------------------------------------------------------------------
21022   
21023  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
21025  *-------------------------------------------------------------------------------
21026  * Energy efficiency
21027  *-------------------------------------------------------------------------------
21028   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
21031  *-------------------------------------------------------------------------------
21032  * Hydro Power
21033  *-------------------------------------------------------------------------------
21034   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
21037  *-------------------------------------------------------------------------------
21038  * System Integration:
21039  * - Capacity constraint
21040  * - Flexibility constraint
21041  * - Grid Investment
21042  * - Capacity growth constraint
21043  *-------------------------------------------------------------------------------
21044   
21046   
21047  eqq_elintren_c_jpnkor
21048  eqflex_c_jpnkor
21049  eqk_en_grid_c_jpnkor
21050  eqk_en_grid_to_k_en_c_jpnkor
21051  eqfirm_capacity_c_jpnkor
21052  eqcap_growth_c_jpnkor
21053   
21054  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
21057  *-------------------------------------------------------------------------------
21058  * Nuclear power plants
21059  *-------------------------------------------------------------------------------
21060   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
21063  *-------------------------------------------------------------------------------
21064  * GHG module
21065  * - CH4 FFI + CH4 waste + CH4 open fires
21066  * - N2O FFI + N2O waste + N2O open fires
21067  *-------------------------------------------------------------------------------
21068   
21070   
21071  eqq_emi_waste_c_jpnkor
21072  eqq_emi_n2o_ffi_c_jpnkor
21073  eqq_emi_ch4_ffi_c_jpnkor
21074   
21075  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
21078  *-------------------------------------------------------------------------------
21079  * F-gases
21080  * - LLF
21081  * - SLF
21082  *-------------------------------------------------------------------------------
21083   
21085   
21086  eqq_emi_fgases_c_jpnkor
21087   
21088  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
21091  *-------------------------------------------------------------------------------
21092  * Landuse [simplified version of the land-use model]
21093  *-------------------------------------------------------------------------------
21094   
21096   
21097  eq_wbio_c_jpnkor
21098  eqcost_pes_wbio_c_jpnkor
21099   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
21102  *-------------------------------------------------------------------------------
21103  * Bioenergy power plant
21104  *-------------------------------------------------------------------------------
21105   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
21108  *-------------------------------------------------------------------------------
21109  * Traditional Biofuels
21110  * - Requires the precedence of mod_landuse
21111  *-------------------------------------------------------------------------------
21112   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
21115  *-------------------------------------------------------------------------------
21116  * Advanced biofuel
21117  * - Require the precedence of mod_landuse
21118  *-------------------------------------------------------------------------------
21119   
21121   
21122  eqq_en_lim_advbiofuel_c_jpnkor
21123  eqmcost_fuel_advbiofuel_c_jpnkor
21124   
21125  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
21128  *-------------------------------------------------------------------------------
21129  * Carbon Capture and Sequestration
21130  *-------------------------------------------------------------------------------
21131   
21133   
21134  eqq_emi_ccs_c_jpnkor
21135  eqcost_emi_sinks_c_jpnkor
21136  eq_stor_ccs_cum_c_jpnkor
21137  eq_emi_stor_ccs_c_jpnkor
21138  eq_emi_leak_ccs_c_jpnkor
21139   
21140  *-------------------------------------------------------------------------------
21142   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
21144  *-------------------------------------------------------------------------------
21145  * Coal for non-electric sectors
21146  * - Coke Plants
21147  * - Industrial and Commercial combined-heat-and-power (CHP)
21148  * - Others
21149  *-------------------------------------------------------------------------------
21150   
21152   
21153  eqcost_en_nelcoal_c_jpnkor
21154  eqq_ncoalabat_monotone_c_jpnkor
21155  eqq_en_nelcoalccs_max_c_jpnkor
21156   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
21159  *-------------------------------------------------------------------------------
21160  * Wind energy module
21161  * - onshore and offshore
21162  *-------------------------------------------------------------------------------
21163   
21165   
21166  eqq_en_mu_windon_c_jpnkor
21167  eqq_en_mu_windoff_c_jpnkor
21168  eqk_en_windon_c_jpnkor
21169  eqk_en_windoff_c_jpnkor
21170  eqq_en_windon_sum_c_jpnkor
21171  eqq_en_windoff_sum_c_jpnkor
21172  eqk_en_windon_sum_c_jpnkor
21173  eqk_en_windoff_sum_c_jpnkor
21174  eqi_en_windon_sum_c_jpnkor
21175  eqi_en_windoff_sum_c_jpnkor
21176   
21178   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
21180  *-------------------------------------------------------------------------------
21181  * Solar Powerplants (PV and CSP) to the electrical system
21182  *-------------------------------------------------------------------------------
21183   
21184  *-------------------------------------------------------------------------------
21186   
21187  eqq_en_mu_pv_c_jpnkor
21188  eqq_en_mu_csp_c_jpnkor
21189  eqk_en_pv_c_jpnkor
21190  eqk_en_csp_c_jpnkor
21191  eqq_en_pv_sum_c_jpnkor
21192  eqq_en_csp_sum_c_jpnkor
21193  eqk_en_pv_sum_c_jpnkor
21194  eqk_en_csp_sum_c_jpnkor
21195  eqi_en_pv_sum_c_jpnkor
21196  eqi_en_csp_sum_c_jpnkor
21197  eqk_en_solar_comp_c_jpnkor
21198   
21199  *-------------------------------------------------------------------------------
21201   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
21203  *-------------------------------------------------------------------------------
21204  * Technology development scenarios
21205  *-------------------------------------------------------------------------------
21206   
21208   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
21210  *-------------------------------------------------------------------------------
21211  * Oil Extraction
21212  * Options:
21213  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
21214  *-------------------------------------------------------------------------------
21215   
21217   
21218  eqoilcap_c_jpnkor
21219  eqoilprod_c_jpnkor
21220  eqq_out_oil_c_jpnkor
21221  eqcum_oil_c_jpnkor
21222  eqcost_oil_c_jpnkor
21223  eqi_oil_c_jpnkor
21224  eqi_out_oil_c_jpnkor
21225  eqq_emi_out_oil_c_jpnkor
21226   
21227  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
21230  *-------------------------------------------------------------------------------
21231  * Uranium Resources
21232  *-------------------------------------------------------------------------------
21233   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
21236  *-------------------------------------------------------------------------------
21237  * Gas Resources
21238  *-------------------------------------------------------------------------------
21239   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
21242  *-------------------------------------------------------------------------------
21243  * Coal Resources
21244  *-------------------------------------------------------------------------------
21245   
21247   
21248   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
21250  *-------------------------------------------------------------------------------
21251  * Climate
21252  *
21253  * Represents the climate
21254  * - based on the DICE model equations
21255  * - Radiative forcing for non CO2 ghgs
21256  * - parameters calibrated to reproduce MAGICC6.4 default response
21257  *
21258  *  Options:
21259  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
21260  * - $setglobal cooperate_on_climate {'YES','NO'}
21261  * - 'YES'(default): Countries within a coalition act in cooperation
21262  *   'NO': Countries within a coalition act individually
21263  *
21264  *-------------------------------------------------------------------------------
21265   
21267   
21269   
21270  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
21273  *-------------------------------------------------------------------------------
21274  * Long-run Damages from Climate Change
21275  * - Economic impacts
21276  * - Adaptation
21277  *-------------------------------------------------------------------------------
21278   
21280   
21282   
21283  *-------------------------------------------------------------------------------
21285   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
21287  *-------------------------------------------------------------------------------
21288  * Light-duty Vehicles for Personal Transport
21289  *-------------------------------------------------------------------------------
21290   
21292   
21293  eqnb_veh_c_jpnkor
21294  eqq_en_veh_c_jpnkor
21295  eqq_el_edv_c_jpnkor
21296  eqmcost_inv_hybrid_c_jpnkor
21297  eqmcost_inv_plghybrid_c_jpnkor
21298  eqmcost_inv_edv_c_jpnkor
21299  *** newcode
21300  eqq_inv_red_ban_c_jpnkor
21301  ***
21302  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
21305  *-------------------------------------------------------------------------------
21306  * Road Freight Transport
21307  *-------------------------------------------------------------------------------
21309   
21310  eqnb_frtveh_c_jpnkor
21311  eqq_en_frtveh_c_jpnkor
21312  eqq_el_frtedv_c_jpnkor
21313  eqmcost_inv_hbd_stfr_c_jpnkor
21314  eqmcost_inv_plghbd_stfr_c_jpnkor
21315  eqmcost_inv_edv_stfr_c_jpnkor
21316   
21317  *-------------------------------------------------------------------------------
21319   
21320   
21321   
21322   
21323   
21324   
21325  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
21327  *-------------------------------------------------------------------------------
21328  * Traditional Biomass
21329  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
21330  *  - require post_process to be launch before
21331  *-------------------------------------------------------------------------------
21332   
21334   
21335  * Optional modules
21336   
21337  * Policy modules
21338   
21339  * Calibration
21342  /;
21343   
21344  witch_c_jpnkor.optfile=1;   # the option file solvername.opt is to be used
21345  witch_c_jpnkor.holdfixed=1; # treat fixed values as constant
21346  witch_c_jpnkor.scaleopt=1;  # Use scaling for better gradients estimation
21347  witch_c_jpnkor.solvelink=3; # Use parallel or sequential solving
21348   
21353   
21354  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
21356  *-------------------------------------------------------------------------------
21357  * Call modules by order
21358  *-------------------------------------------------------------------------------
21362   
21363  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
21365  *-------------------------------------------------------------------------------
21366  * Algorithm
21367  *-------------------------------------------------------------------------------
21368   
21370   
21371  eqobj_c_laca
21372   
21373  *-------------------------------------------------------------------------------
21375   
21376  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
21378  *-------------------------------------------------------------------------------
21379  * Time
21380  * - Temporal structure
21381  * - Fixed time periods
21382  * - States of the world
21383  *-------------------------------------------------------------------------------
21384   
21386   
21387  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
21389  *-------------------------------------------------------------------------------
21390  * Geographic dimension and mapping with countries
21391  *-------------------------------------------------------------------------------
21392   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
21395  *-------------------------------------------------------------------------------
21396  * Non-Cooperative Setup
21397  *
21398  * Each region is defined as an individual coalition.
21399  *
21400  *-------------------------------------------------------------------------------
21401   
21403   
21404  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
21406  *-------------------------------------------------------------------------------
21407  * Welfare
21408  *-------------------------------------------------------------------------------
21409   
21411   
21412  equtility_c_laca
21413   
21414  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
21417  *-------------------------------------------------------------------------------
21418  * Economy
21419  * - Production and Consumption definition
21420  * - Top-level of the production function
21421  * Options:
21422  * --original_ssp=1 : original SSP population and GDP data
21423  *-------------------------------------------------------------------------------
21424   
21426   
21427  eqk_c_laca
21428  eqq_cc_c_laca
21429  eqq_fen_c_laca
21430  eqq_y_c_laca
21431   
21432  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
21435  *-------------------------------------------------------------------------------
21436  * Energy sector
21437  *-------------------------------------------------------------------------------
21438   
21440   
21441  eq_mkt_clearing_oil_c_laca
21442  eqcost_pes_c_laca
21443  eqcost_ses_c_laca
21444  eqk_en_c_laca
21445  eqq_ces_el_c_laca
21446  eqq_ces_nelgas_c_laca
21447  eqq_el2_c_laca
21448  eqq_el_c_laca
21449  eqq_elff_c_laca
21450  eqq_en_c_laca
21451  eqq_en_in_c_laca
21452  eqq_en_mu_c_laca
21453  eqq_en_tree_c_laca
21454  eqq_nel_c_laca
21455  eqq_nelog_c_laca
21456  eqq_fuel_c_laca
21457  eqq_elffren_c_laca
21458   
21459  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
21462  *-------------------------------------------------------------------------------
21463  * Carbon Emissions
21464  * - Total CO2 emissions and CO2 Fossil fuel and Industry
21465  * - CO2 emission costs
21466  * - GHG permit market
21467  *-------------------------------------------------------------------------------
21468   
21470   
21471  eqq_emi_lim_c_laca
21472  eqq_emi_tree_c_laca
21473  eqq_emi_co2ffi_c_laca
21474   
21475  eqcost_emi_co2_c_laca
21476   
21477  eq_mkt_clearing_nip_c_laca
21478   
21479  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
21482  *-------------------------------------------------------------------------------
21483  * Research & Development
21484  * Options:
21485  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
21486  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
21487  *-------------------------------------------------------------------------------
21488   
21490   
21491  eqk_rd_c_laca
21492  eqspill_coop_c_laca
21493  eqspill_lead_c_laca
21494  eqspill_foll_c_laca
21495  eqmcost_inv_back_c_laca
21496  eqmcost_inv_back_lbd_c_laca
21497   
21498  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
21501  *-------------------------------------------------------------------------------
21502  * Default Climate Policy Implementation
21503  *
21504  * Options:
21505  *    --policy={bau (default),ctax}
21506  *        Implement a climate policy setting
21507  *  [ --scen= ]
21508  *        Policy variant.
21509  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
21510  *          * XXX for a fixed percentage/yr (e.g. 5) growth
21511  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
21512  *  [ --ctax_year=2020 ]
21513  *        Starting year of the carbon tax
21514  *  [ --ctax_initial=30 ]
21515  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
21516  *
21517  *-------------------------------------------------------------------------------
21519   
21520  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
21522  *-------------------------------------------------------------------------------
21523  * Energy efficiency
21524  *-------------------------------------------------------------------------------
21525   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
21528  *-------------------------------------------------------------------------------
21529  * Hydro Power
21530  *-------------------------------------------------------------------------------
21531   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
21534  *-------------------------------------------------------------------------------
21535  * System Integration:
21536  * - Capacity constraint
21537  * - Flexibility constraint
21538  * - Grid Investment
21539  * - Capacity growth constraint
21540  *-------------------------------------------------------------------------------
21541   
21543   
21544  eqq_elintren_c_laca
21545  eqflex_c_laca
21546  eqk_en_grid_c_laca
21547  eqk_en_grid_to_k_en_c_laca
21548  eqfirm_capacity_c_laca
21549  eqcap_growth_c_laca
21550   
21551  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
21554  *-------------------------------------------------------------------------------
21555  * Nuclear power plants
21556  *-------------------------------------------------------------------------------
21557   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
21560  *-------------------------------------------------------------------------------
21561  * GHG module
21562  * - CH4 FFI + CH4 waste + CH4 open fires
21563  * - N2O FFI + N2O waste + N2O open fires
21564  *-------------------------------------------------------------------------------
21565   
21567   
21568  eqq_emi_waste_c_laca
21569  eqq_emi_n2o_ffi_c_laca
21570  eqq_emi_ch4_ffi_c_laca
21571   
21572  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
21575  *-------------------------------------------------------------------------------
21576  * F-gases
21577  * - LLF
21578  * - SLF
21579  *-------------------------------------------------------------------------------
21580   
21582   
21583  eqq_emi_fgases_c_laca
21584   
21585  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
21588  *-------------------------------------------------------------------------------
21589  * Landuse [simplified version of the land-use model]
21590  *-------------------------------------------------------------------------------
21591   
21593   
21594  eq_wbio_c_laca
21595  eqcost_pes_wbio_c_laca
21596   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
21599  *-------------------------------------------------------------------------------
21600  * Bioenergy power plant
21601  *-------------------------------------------------------------------------------
21602   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
21605  *-------------------------------------------------------------------------------
21606  * Traditional Biofuels
21607  * - Requires the precedence of mod_landuse
21608  *-------------------------------------------------------------------------------
21609   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
21612  *-------------------------------------------------------------------------------
21613  * Advanced biofuel
21614  * - Require the precedence of mod_landuse
21615  *-------------------------------------------------------------------------------
21616   
21618   
21619  eqq_en_lim_advbiofuel_c_laca
21620  eqmcost_fuel_advbiofuel_c_laca
21621   
21622  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
21625  *-------------------------------------------------------------------------------
21626  * Carbon Capture and Sequestration
21627  *-------------------------------------------------------------------------------
21628   
21630   
21631  eqq_emi_ccs_c_laca
21632  eqcost_emi_sinks_c_laca
21633  eq_stor_ccs_cum_c_laca
21634  eq_emi_stor_ccs_c_laca
21635  eq_emi_leak_ccs_c_laca
21636   
21637  *-------------------------------------------------------------------------------
21639   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
21641  *-------------------------------------------------------------------------------
21642  * Coal for non-electric sectors
21643  * - Coke Plants
21644  * - Industrial and Commercial combined-heat-and-power (CHP)
21645  * - Others
21646  *-------------------------------------------------------------------------------
21647   
21649   
21650  eqcost_en_nelcoal_c_laca
21651  eqq_ncoalabat_monotone_c_laca
21652  eqq_en_nelcoalccs_max_c_laca
21653   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
21656  *-------------------------------------------------------------------------------
21657  * Wind energy module
21658  * - onshore and offshore
21659  *-------------------------------------------------------------------------------
21660   
21662   
21663  eqq_en_mu_windon_c_laca
21664  eqq_en_mu_windoff_c_laca
21665  eqk_en_windon_c_laca
21666  eqk_en_windoff_c_laca
21667  eqq_en_windon_sum_c_laca
21668  eqq_en_windoff_sum_c_laca
21669  eqk_en_windon_sum_c_laca
21670  eqk_en_windoff_sum_c_laca
21671  eqi_en_windon_sum_c_laca
21672  eqi_en_windoff_sum_c_laca
21673   
21675   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
21677  *-------------------------------------------------------------------------------
21678  * Solar Powerplants (PV and CSP) to the electrical system
21679  *-------------------------------------------------------------------------------
21680   
21681  *-------------------------------------------------------------------------------
21683   
21684  eqq_en_mu_pv_c_laca
21685  eqq_en_mu_csp_c_laca
21686  eqk_en_pv_c_laca
21687  eqk_en_csp_c_laca
21688  eqq_en_pv_sum_c_laca
21689  eqq_en_csp_sum_c_laca
21690  eqk_en_pv_sum_c_laca
21691  eqk_en_csp_sum_c_laca
21692  eqi_en_pv_sum_c_laca
21693  eqi_en_csp_sum_c_laca
21694  eqk_en_solar_comp_c_laca
21695   
21696  *-------------------------------------------------------------------------------
21698   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
21700  *-------------------------------------------------------------------------------
21701  * Technology development scenarios
21702  *-------------------------------------------------------------------------------
21703   
21705   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
21707  *-------------------------------------------------------------------------------
21708  * Oil Extraction
21709  * Options:
21710  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
21711  *-------------------------------------------------------------------------------
21712   
21714   
21715  eqoilcap_c_laca
21716  eqoilprod_c_laca
21717  eqq_out_oil_c_laca
21718  eqcum_oil_c_laca
21719  eqcost_oil_c_laca
21720  eqi_oil_c_laca
21721  eqi_out_oil_c_laca
21722  eqq_emi_out_oil_c_laca
21723   
21724  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
21727  *-------------------------------------------------------------------------------
21728  * Uranium Resources
21729  *-------------------------------------------------------------------------------
21730   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
21733  *-------------------------------------------------------------------------------
21734  * Gas Resources
21735  *-------------------------------------------------------------------------------
21736   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
21739  *-------------------------------------------------------------------------------
21740  * Coal Resources
21741  *-------------------------------------------------------------------------------
21742   
21744   
21745   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
21747  *-------------------------------------------------------------------------------
21748  * Climate
21749  *
21750  * Represents the climate
21751  * - based on the DICE model equations
21752  * - Radiative forcing for non CO2 ghgs
21753  * - parameters calibrated to reproduce MAGICC6.4 default response
21754  *
21755  *  Options:
21756  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
21757  * - $setglobal cooperate_on_climate {'YES','NO'}
21758  * - 'YES'(default): Countries within a coalition act in cooperation
21759  *   'NO': Countries within a coalition act individually
21760  *
21761  *-------------------------------------------------------------------------------
21762   
21764   
21766   
21767  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
21770  *-------------------------------------------------------------------------------
21771  * Long-run Damages from Climate Change
21772  * - Economic impacts
21773  * - Adaptation
21774  *-------------------------------------------------------------------------------
21775   
21777   
21779   
21780  *-------------------------------------------------------------------------------
21782   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
21784  *-------------------------------------------------------------------------------
21785  * Light-duty Vehicles for Personal Transport
21786  *-------------------------------------------------------------------------------
21787   
21789   
21790  eqnb_veh_c_laca
21791  eqq_en_veh_c_laca
21792  eqq_el_edv_c_laca
21793  eqmcost_inv_hybrid_c_laca
21794  eqmcost_inv_plghybrid_c_laca
21795  eqmcost_inv_edv_c_laca
21796  *** newcode
21797  eqq_inv_red_ban_c_laca
21798  ***
21799  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
21802  *-------------------------------------------------------------------------------
21803  * Road Freight Transport
21804  *-------------------------------------------------------------------------------
21806   
21807  eqnb_frtveh_c_laca
21808  eqq_en_frtveh_c_laca
21809  eqq_el_frtedv_c_laca
21810  eqmcost_inv_hbd_stfr_c_laca
21811  eqmcost_inv_plghbd_stfr_c_laca
21812  eqmcost_inv_edv_stfr_c_laca
21813   
21814  *-------------------------------------------------------------------------------
21816   
21817   
21818   
21819   
21820   
21821   
21822  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
21824  *-------------------------------------------------------------------------------
21825  * Traditional Biomass
21826  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
21827  *  - require post_process to be launch before
21828  *-------------------------------------------------------------------------------
21829   
21831   
21832  * Optional modules
21833   
21834  * Policy modules
21835   
21836  * Calibration
21839  ;
21840   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
21842  *-------------------------------------------------------------------------------
21843  * Call modules by order
21844  *-------------------------------------------------------------------------------
21848   
21849  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
21851  *-------------------------------------------------------------------------------
21852  * Algorithm
21853  *-------------------------------------------------------------------------------
21854   
21856   
21858  * Add the component of the (maximized) objective function as required by the ADMM algorithm
21859  eqobj_c_laca..
21860      OBJADMM =e= UTILITY -
21861          sum(t, rho_admm('oil',t) / 2 *
21862              sum(n$(map_clt_n('c_laca',n) and trading_t('oil',t,n)),
21863                  power(
21864                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
21865                      x_admm('oil',t,n) +
21866                      xavg_admm('oil',t) +
21867                      u_admm('oil', t)
21868                  ,2)
21869              )) -
21870          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
21871              sum(n$(map_clt_n('c_laca',n) and trading_t(c_mkt,t,n)),
21872                  power(
21873                      Q_EMI(c_mkt,t,n) -
21874                      x_admm(c_mkt,t,n) +
21875                      xavg_admm(c_mkt,t) +
21876                      u_admm(c_mkt,t)
21877                  ,2)
21878              ))
21879      ;
21881   
21882  *-------------------------------------------------------------------------------
21884   
21885  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
21887  *-------------------------------------------------------------------------------
21888  * Time
21889  * - Temporal structure
21890  * - Fixed time periods
21891  * - States of the world
21892  *-------------------------------------------------------------------------------
21893   
21895   
21896  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
21898  *-------------------------------------------------------------------------------
21899  * Geographic dimension and mapping with countries
21900  *-------------------------------------------------------------------------------
21901   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
21904  *-------------------------------------------------------------------------------
21905  * Non-Cooperative Setup
21906  *
21907  * Each region is defined as an individual coalition.
21908  *
21909  *-------------------------------------------------------------------------------
21910   
21912   
21913  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
21915  *-------------------------------------------------------------------------------
21916  * Welfare
21917  *-------------------------------------------------------------------------------
21918   
21920   
21921  * Objective function - Welfare to be maximized
21922  equtility_c_laca..
21923      UTILITY =e=
21924   
21925  * Negishi SWF
21927   
21928  * Welfare functions based on CEBGE
21931                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
21932                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
21933                      ((sum(n$map_clt_n('c_laca',n),
21934                        (l(t,n) / sum(nn$map_clt_n('c_laca',nn), l(t,nn))) *
21935                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
21936                       )**(1 / (1 - gamma))
21937                      )**(1 - eta) ) +
21938                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
21939                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
21940                      ((sum(n$map_clt_n('c_laca',n),
21941                        (l(t,n) / sum(nn$map_clt_n('c_laca',nn), l(t,nn))) *
21942                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
21943                       )**(1 / (1 - gamma))
21944                      )**(1 - eta) )
21945                  )**(1/(1 - eta)) * 1e6
21948   
21949   
21950  ;
21951   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
21954  *-------------------------------------------------------------------------------
21955  * Economy
21956  * - Production and Consumption definition
21957  * - Top-level of the production function
21958  * Options:
21959  * --original_ssp=1 : original SSP population and GDP data
21960  *-------------------------------------------------------------------------------
21961   
21963   
21964  * Production
21965  eqq_y_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
21966   
21967      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
21968                     ## Climate feedback on economy
21970                     ## Net cost of Primary and Secondary Energy Sources
21971                     - sum(fuel, COST_FUEL(fuel,t,n))
21972                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
21973                     - sum(cce, COST_EMI(cce,t,n))
21974                     ## Carbon tax
21975                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
21976                     ## Additionnal costs on gross product
21977                     - sum(ccy, COST_Y(ccy,t,n))
21978  ;
21979   
21980  * Consumption
21981  eqq_cc_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
21982      Q('cc',t,n) =e= Q('y',t,n)
21983                      ## Investments in goods g (final good, adaptation)
21984                      -sum(g, I(g,t,n))
21985                      ## Investments in r&d
21986                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
21987                      ## Investments in energy technlogies
21988                      -sum(jinv, I_EN(jinv,t,n))
21989                       ## Investments in grid infrastructures
21990                      - I_EN_GRID(t,n)
21991                      ## Investments in extraction sector
21992                      -sum(extract(f), I_OUT(f,t,n))
21993                      ## O&M for energy technlogies
21994                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
21995                      ## O&M for extraction
21996                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
21997                      ## Energy technology penalty costs
21998                      -sum(jpenalty(j), COST_EN(j,t,n))
21999  ;
22000   
22001  * Capital accumulation
22002  eqk_c_laca(g,t,tp1,n)$(map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
22003      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
22004   
22005  * Energy services
22006  eqq_fen_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22007      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
22008   
22009  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
22012  *-------------------------------------------------------------------------------
22013  * Energy sector
22014  *-------------------------------------------------------------------------------
22015   
22017   
22018  *-------------------------------------------------------------------------------
22019  * Production - Energy sector
22020  *-------------------------------------------------------------------------------
22021   
22022  eqq_en_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22023      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
22024   
22025  *-------------------------------------------------------------------------------
22026  * Production - Electrical sector
22027  *-------------------------------------------------------------------------------
22028   
22029  eqq_el_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22030      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
22031   
22032  eqq_el2_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22033      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
22034   
22035  eqq_elffren_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22036      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
22037  eqq_elff_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22038      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
22039   
22040  eqq_ces_el_c_laca(ices_el,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
22041      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
22042  ;
22043   
22044  *-------------------------------------------------------------------------------
22045  * Production - Non-electrical sector
22046  *-------------------------------------------------------------------------------
22047   
22048  eqq_nel_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22049      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
22050   
22051  eqq_nelog_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22052      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
22053  ;
22054  eqq_ces_nelgas_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22055      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
22056   
22057  *-------------------------------------------------------------------------------
22058  * PES and fuels
22059  *-------------------------------------------------------------------------------
22060   
22061  eqq_fuel_c_laca(fuel,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
22062      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
22063   
22064  *-------------------------------------------------------------------------------
22065  * Cost
22066  *-------------------------------------------------------------------------------
22067   
22068  * Net cost of Primary Energy Supplies
22069  eqcost_pes_c_laca(f,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
22070      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
22071                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
22072   
22073  * Net cost of Secondary Energy Supplies
22074  eqcost_ses_c_laca(s,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22075      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
22076   
22077   
22078  *-------------------------------------------------------------------------------
22079  * Market balances
22080  *-------------------------------------------------------------------------------
22081   
22082  eq_mkt_clearing_oil_c_laca(t,'c_laca')$(internal('oil'))..
22083      sum( n$(map_clt_n('c_laca',n) and trading_t('oil',t,n)),
22084          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
22085      ) =e= 0;
22086   
22087  *-------------------------------------------------------------------------------
22088  * New capital in the energy sector
22089  *-------------------------------------------------------------------------------
22090   
22091  * Electrical generation plants (new)
22092  eqk_en_c_laca(jinv,t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
22093      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
22094                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
22095   
22096  *-------------------------------------------------------------------------------
22097  * ENERGY
22098  *-------------------------------------------------------------------------------
22099   
22100  * Capacity limits in the electrical sector
22101  eqq_en_mu_c_laca(jel,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
22102      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
22103   
22104  * Efficiency of energy technology sector
22105  eqq_en_in_c_laca(jfed,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
22106      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
22107                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
22108   
22109  * Energy generation "tree"
22110  eqq_en_tree_c_laca(j,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
22111      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
22112   
22113  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
22116  *-------------------------------------------------------------------------------
22117  * Carbon Emissions
22118  * - Total CO2 emissions and CO2 Fossil fuel and Industry
22119  * - CO2 emission costs
22120  * - GHG permit market
22121  *-------------------------------------------------------------------------------
22122   
22124   
22125  * GHG emission cap
22126  eqq_emi_lim_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
22127      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
22128                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
22129   
22130  * Compute total and sectoral emissions
22131  eqq_emi_tree_c_laca(t,n,e)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
22132      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
22133   
22134  * Industrial CO2 emissions
22135  eqq_emi_co2ffi_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22136      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
22137                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
22138                              # Emissions from biomass
22139                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
22140                              # Emissions from fuel extraction
22141                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
22142                              # Captured emissions
22143                              sum(sink, Q_EMI(sink,t,n));
22144   
22145  * CO2 emission costs
22146  eqcost_emi_co2_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22147      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
22148   
22149  * Emission permit market clearing for internal market
22150  eq_mkt_clearing_nip_c_laca(c_mkt,t,'c_laca')$(internal(c_mkt))..
22151      sum(n$(map_clt_n('c_laca',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
22152   
22153  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
22156  *-------------------------------------------------------------------------------
22157  * Research & Development
22158  * Options:
22159  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
22160  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
22161  *-------------------------------------------------------------------------------
22162   
22164   
22165  * Knowledge stock accumulation
22166  eqk_rd_c_laca(rd,t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
22167                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
22168                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
22169                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
22170                                        SPILL(rd,t,n)**rd_coef(rd,'d');
22171   
22172  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
22173  eqspill_coop_c_laca(rd,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_laca'))..
22174          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
22175                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_laca',nn)), K_RD(rd,t,nn)) +
22176                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_laca',nn))), K_RD.l(rd,t,nn))
22177                            ) *
22178                            (
22179                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_laca',nn)), K_RD(rd,t,nn)) +
22180                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_laca',nn))), K_RD.l(rd,t,nn))
22181                              ) - K_RD(rd,t,n)
22182                            );
22183   
22184  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
22185  eqspill_lead_c_laca(rd,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_laca')) and leadrd(rd,n))..
22186                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
22187   
22188  * No-cooperation : a follower sees is negative effect on the quantity he can grab
22189  eqspill_foll_c_laca(rd,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_laca')) and (not leadrd(rd,n)))..
22190                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
22191   
22192  *- Only LbR (without learning by doing)
22193  eqmcost_inv_back_c_laca(jrd,t,tt,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
22194                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
22195                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
22196   
22197  *- LbR together with learning by doing ==> Two-factor learning curve
22198  eqmcost_inv_back_lbd_c_laca(jrd,t,tt,tfirst,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
22199                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
22200                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
22201                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
22202   
22203  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
22206  *-------------------------------------------------------------------------------
22207  * Default Climate Policy Implementation
22208  *
22209  * Options:
22210  *    --policy={bau (default),ctax}
22211  *        Implement a climate policy setting
22212  *  [ --scen= ]
22213  *        Policy variant.
22214  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
22215  *          * XXX for a fixed percentage/yr (e.g. 5) growth
22216  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
22217  *  [ --ctax_year=2020 ]
22218  *        Starting year of the carbon tax
22219  *  [ --ctax_initial=30 ]
22220  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
22221  *
22222  *-------------------------------------------------------------------------------
22224   
22225  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
22227  *-------------------------------------------------------------------------------
22228  * Energy efficiency
22229  *-------------------------------------------------------------------------------
22230   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
22233  *-------------------------------------------------------------------------------
22234  * Hydro Power
22235  *-------------------------------------------------------------------------------
22236   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
22239  *-------------------------------------------------------------------------------
22240  * System Integration:
22241  * - Capacity constraint
22242  * - Flexibility constraint
22243  * - Grid Investment
22244  * - Capacity growth constraint
22245  *-------------------------------------------------------------------------------
22246   
22248   
22249   
22250  * Renewable CES
22251   
22252  * Definition of the renewable CES
22253  eqq_elintren_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22254      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
22255   
22256  * Capacity constraint
22257   
22259  eqfirm_capacity_c_laca(t,n)$(map_clt_n('c_laca',n) and (not tfix(t)) and year(t) gt 2005)..
22260                   sum(jel_firm, K_EN(jel_firm,t,n))
22261                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
22262                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
22263                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
22264                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
22265                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
22266                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
22267                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
22268                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
22269                                       ) / yearly_hours
22270  ;
22272   
22273  * Flexibility constraint
22274  eqflex_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22275          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
22276                             ( Q_EN('el',t,n) -
22277                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
22278                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
22279                             ) * flex_coeff('load')
22280  ;
22281   
22282  * Grid
22283   
22284  ** Grid depreciation and investments
22285  eqk_en_grid_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
22286                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
22287                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
22288   
22289  ** Grid adjustment to power capacity
22290  eqk_en_grid_to_k_en_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22291                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
22292                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
22293                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
22294                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
22295                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
22296                                     ) / grid_cost +
22297                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
22298                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
22299                                      K_EN('elcsp',t,n);
22300  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
22301   
22302  * Capacity growth constraint
22303  eqcap_growth_c_laca(jinv,t,tp1,tp2,n)$((map_clt_n('c_laca',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
22304                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
22305                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
22306   
22307  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
22310  *-------------------------------------------------------------------------------
22311  * Nuclear power plants
22312  *-------------------------------------------------------------------------------
22313   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
22316  *-------------------------------------------------------------------------------
22317  * GHG module
22318  * - CH4 FFI + CH4 waste + CH4 open fires
22319  * - N2O FFI + N2O waste + N2O open fires
22320  *-------------------------------------------------------------------------------
22321   
22323   
22324  * CH4, N2O waste emissions
22325  eqq_emi_waste_c_laca(waste,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
22326                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
22327   
22328  * n2o FFI
22329  eqq_emi_n2o_ffi_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
22330    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
22331                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
22332                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
22333                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
22334                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
22335                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
22336                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
22337                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
22338                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
22339                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
22340                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
22341                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
22342                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
22343                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
22344                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
22345                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
22346                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
22347                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
22348                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
22349                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
22350                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
22351                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
22352                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
22353                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
22354                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
22355                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
22356                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
22357                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
22358                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
22359                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
22360                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
22361   
22362  * ch4 FFI
22363  eqq_emi_ch4_ffi_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
22364    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
22367  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
22368  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
22369                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
22370                             smax(tt$(year(tt) eq 2015),
22371                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
22374  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
22375  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
22376                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
22377   
22378  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
22381  *-------------------------------------------------------------------------------
22382  * F-gases
22383  * - LLF
22384  * - SLF
22385  *-------------------------------------------------------------------------------
22386   
22388   
22389  * F-gases emissions
22390  eqq_emi_fgases_c_laca(fgases,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
22391                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
22392   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
22395  *-------------------------------------------------------------------------------
22396  * Landuse [simplified version of the land-use model]
22397  *-------------------------------------------------------------------------------
22398   
22400   
22401  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
22402  eq_wbio_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22403      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
22404   
22406  * Cost of all woody biomass produced for advanced biofuels and woody biomass
22407  eqcost_pes_wbio_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22408      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
22410   
22411  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
22414  *-------------------------------------------------------------------------------
22415  * Bioenergy power plant
22416  *-------------------------------------------------------------------------------
22417   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
22420  *-------------------------------------------------------------------------------
22421  * Traditional Biofuels
22422  * - Requires the precedence of mod_landuse
22423  *-------------------------------------------------------------------------------
22424   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
22427  *-------------------------------------------------------------------------------
22428  * Advanced biofuel
22429  * - Require the precedence of mod_landuse
22430  *-------------------------------------------------------------------------------
22431   
22433   
22434  * Limitations for nel backstops
22435  eqq_en_lim_advbiofuel_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
22436               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
22437               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
22438   
22439  * Peculiarity of advbiofuel
22440  eqmcost_fuel_advbiofuel_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22441                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
22442   
22443  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
22446  *-------------------------------------------------------------------------------
22447  * Carbon Capture and Sequestration
22448  *-------------------------------------------------------------------------------
22449   
22451   
22452  eqq_emi_ccs_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22453                  Q_EMI('ccs_plant',t,n) =e=
22454                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
22455                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
22456  ;
22457   
22458  eqcost_emi_sinks_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22459                  COST_EMI('ccs_plant',t,n) =e=
22460                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
22461                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
22462  ;
22463   
22464  eq_stor_ccs_cum_c_laca(ccs_stor,tp1,t,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
22465                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
22466  ;
22467   
22468  eq_emi_stor_ccs_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22469                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
22470  ;
22471   
22472  eq_emi_leak_ccs_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22473                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
22474   
22475  *-------------------------------------------------------------------------------
22477   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
22479  *-------------------------------------------------------------------------------
22480  * Coal for non-electric sectors
22481  * - Coke Plants
22482  * - Industrial and Commercial combined-heat-and-power (CHP)
22483  * - Others
22484  *-------------------------------------------------------------------------------
22485   
22487   
22488  eqcost_en_nelcoal_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22489           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
22490                                          nelcoal_max_abat(t,n) *
22491                                          (nelcoal_cmac(n,'a') *
22492                                            Q_EN('nelcoalabat',t,n) /
22493                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
22494                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
22495                                              (exp(nelcoal_cmac(n,'c') *
22496                                                (Q_EN('nelcoalabat',t,n)/
22497                                                  (nelcoal_max_abat(t,n) *
22498                                                      nelcoal_baseline(t,n))
22499                                                  ) - 1 )
22500                                              )
22501                                          );
22502   
22503  eqq_ncoalabat_monotone_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
22504          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
22505   
22506  * ensure Q_EN is lower than K_EN for CCS as not in jel
22507  eqq_en_nelcoalccs_max_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22508          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
22509   
22510  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
22513  *-------------------------------------------------------------------------------
22514  * Wind energy module
22515  * - onshore and offshore
22516  *-------------------------------------------------------------------------------
22517   
22519   
22520  * Capacity limits in the wind onshore electrical sector
22521  eqq_en_mu_windon_c_laca(wind_dist,wind_class,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
22522      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
22523   
22524  * Capacity limits in the wind offshore electrical sector
22525  eqq_en_mu_windoff_c_laca(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
22526      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
22527   
22528  * Wind onshore electrical generation plants (new)
22529  eqk_en_windon_c_laca(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
22530      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
22531                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
22532   
22533  * Wind offshore electrical generation plants (new)
22534  eqk_en_windoff_c_laca(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
22535      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
22536                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
22537   
22538  * Total onshore wind energy production
22539  eqq_en_windon_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22540                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
22541   
22542  * Total offshore wind energy production
22543  eqq_en_windoff_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22544                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
22545   
22546  * Total onshore wind capacity
22547  eqk_en_windon_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22548                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
22549   
22550  * Total offshore wind capacity
22551  eqk_en_windoff_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22552                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
22553   
22554  * Total onshore wind investment
22555  eqi_en_windon_sum_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
22556                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
22557   
22558  * Total offshore wind investment
22559  eqi_en_windoff_sum_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
22560                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
22561   
22562  *-------------------------------------------------------------------------------
22564   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
22566  *-------------------------------------------------------------------------------
22567  * Solar Powerplants (PV and CSP) to the electrical system
22568  *-------------------------------------------------------------------------------
22569   
22570  *-------------------------------------------------------------------------------
22572   
22573   
22574  * Capacity limits in the pv electrical sector
22575  eqq_en_mu_pv_c_laca(solar_dist,solar_class,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
22576                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
22577   
22578  * Capacity limits in the csp electrical sector
22579  eqq_en_mu_csp_c_laca(solar_dist,solar_class,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
22580                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
22581   
22582  * PV electrical generation plants (new)
22583  eqk_en_pv_c_laca(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
22584                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
22585                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
22586   
22587  * CSP electrical generation plants (new)
22588  eqk_en_csp_c_laca(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
22589                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
22590                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
22591   
22592  * Total PV energy production
22593  eqq_en_pv_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22594                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
22595   
22596  * Total CSP energy production
22597  eqq_en_csp_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22598                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
22599   
22600  * Total PV capacity
22601  eqk_en_pv_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22602                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
22603   
22604  * Total CSP capacity
22605  eqk_en_csp_sum_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22606                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
22607   
22608  * Total PV investment
22609  eqi_en_pv_sum_c_laca(t,tp1,n)$(map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
22610                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
22611   
22612  * Total CSP investment
22613  eqi_en_csp_sum_c_laca(t,tp1,n)$(map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
22614                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
22615   
22616  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
22617  eqk_en_solar_comp_c_laca(t,n,solar_dist)$(map_clt_n('c_laca',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
22618                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
22619                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
22620   
22621   
22622   
22623  *-------------------------------------------------------------------------------
22625   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
22627  *-------------------------------------------------------------------------------
22628  * Technology development scenarios
22629  *-------------------------------------------------------------------------------
22630   
22632   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
22634  *-------------------------------------------------------------------------------
22635  * Oil Extraction
22636  * Options:
22637  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
22638  *-------------------------------------------------------------------------------
22639   
22641   
22642  * Capacity
22643  eqoilcap_c_laca(t,tp1,n,oilg)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
22644      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
22645   
22646  * Production
22647  eqoilprod_c_laca(t,tp1,n,oilg)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
22648      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
22649   
22650  eqq_out_oil_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22651      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
22652   
22653  * Cumulative production
22654  eqcum_oil_c_laca(t,tp1,n,oilg)$((map_clt_n('c_laca',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
22655      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
22656   
22657  * Cost
22658  eqcost_oil_c_laca(t,tp1,n,oilg)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
22659      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
22660                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
22661                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
22662   
22663  * Investments
22664  eqi_oil_c_laca(t,tp1,n,oilg)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
22665      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
22666   
22667  * Total investment
22668  eqi_out_oil_c_laca(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
22669      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
22670   
22671  * Emissions
22672  eqq_emi_out_oil_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22673      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
22674   
22675  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
22678  *-------------------------------------------------------------------------------
22679  * Uranium Resources
22680  *-------------------------------------------------------------------------------
22681   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
22684  *-------------------------------------------------------------------------------
22685  * Gas Resources
22686  *-------------------------------------------------------------------------------
22687   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
22690  *-------------------------------------------------------------------------------
22691  * Coal Resources
22692  *-------------------------------------------------------------------------------
22693   
22695   
22696   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
22698  *-------------------------------------------------------------------------------
22699  * Climate
22700  *
22701  * Represents the climate
22702  * - based on the DICE model equations
22703  * - Radiative forcing for non CO2 ghgs
22704  * - parameters calibrated to reproduce MAGICC6.4 default response
22705  *
22706  *  Options:
22707  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
22708  * - $setglobal cooperate_on_climate {'YES','NO'}
22709  * - 'YES'(default): Countries within a coalition act in cooperation
22710  *   'NO': Countries within a coalition act individually
22711  *
22712  *-------------------------------------------------------------------------------
22713   
22715   
22717   
22718  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
22721  *-------------------------------------------------------------------------------
22722  * Long-run Damages from Climate Change
22723  * - Economic impacts
22724  * - Adaptation
22725  *-------------------------------------------------------------------------------
22726   
22728   
22730   
22731  *-------------------------------------------------------------------------------
22733   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
22735  *-------------------------------------------------------------------------------
22736  * Light-duty Vehicles for Personal Transport
22737  *-------------------------------------------------------------------------------
22738   
22740   
22741  *** newcode
22742  eqq_inv_red_ban_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22743      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
22744   
22745  ***
22746  *- Number of light duty vehicles
22747  eqnb_veh_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22748      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
22749   
22750  *- Yearly energy demand of vehicles
22751  eqq_en_veh_c_laca(jveh,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22752      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
22753   
22754  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
22755  eqq_el_edv_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22756      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
22757   
22758  *- Investment cost for hybrid vehicles
22759  eqmcost_inv_hybrid_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
22760                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
22761   
22762  *- Investment cost for plug-in hybrid vehicles
22763  eqmcost_inv_plghybrid_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
22764                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
22765   
22766  *- Investment cost for electric drive vehicles
22767  eqmcost_inv_edv_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
22768                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
22769   
22770  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
22773  *-------------------------------------------------------------------------------
22774  * Road Freight Transport
22775  *-------------------------------------------------------------------------------
22777   
22778  *-  Number of freight vehicles
22779  eqnb_frtveh_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
22780                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
22781   
22782  *-  Yearly fuel consumption of freight vehicles
22783  eqq_en_frtveh_c_laca(jfrt,t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22784                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
22785   
22786  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
22787  eqq_el_frtedv_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)))..
22788                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
22789   
22790  *-  Investment cost for hbd_stfr vehicle
22791  eqmcost_inv_hbd_stfr_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
22792                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
22793   
22794  *-  Investment cost for plug-in hbd_stfr vehicle
22795  eqmcost_inv_plghbd_stfr_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
22796                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
22797   
22798  *-  Investment cost for electric drive vehicle
22799  eqmcost_inv_edv_stfr_c_laca(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
22800                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
22801   
22802  *-------------------------------------------------------------------------------
22804   
22805   
22806   
22807   
22808   
22809   
22810  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
22812  *-------------------------------------------------------------------------------
22813  * Traditional Biomass
22814  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
22815  *  - require post_process to be launch before
22816  *-------------------------------------------------------------------------------
22817   
22819   
22820  * Optional modules
22821   
22822  * Policy modules
22823   
22824  * Calibration
22827   
22828   
22829  model witch_c_laca /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
22831  *-------------------------------------------------------------------------------
22832  * Call modules by order
22833  *-------------------------------------------------------------------------------
22837   
22838  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
22840  *-------------------------------------------------------------------------------
22841  * Algorithm
22842  *-------------------------------------------------------------------------------
22843   
22845   
22846  eqobj_c_laca
22847   
22848  *-------------------------------------------------------------------------------
22850   
22851  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
22853  *-------------------------------------------------------------------------------
22854  * Time
22855  * - Temporal structure
22856  * - Fixed time periods
22857  * - States of the world
22858  *-------------------------------------------------------------------------------
22859   
22861   
22862  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
22864  *-------------------------------------------------------------------------------
22865  * Geographic dimension and mapping with countries
22866  *-------------------------------------------------------------------------------
22867   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
22870  *-------------------------------------------------------------------------------
22871  * Non-Cooperative Setup
22872  *
22873  * Each region is defined as an individual coalition.
22874  *
22875  *-------------------------------------------------------------------------------
22876   
22878   
22879  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
22881  *-------------------------------------------------------------------------------
22882  * Welfare
22883  *-------------------------------------------------------------------------------
22884   
22886   
22887  equtility_c_laca
22888   
22889  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
22892  *-------------------------------------------------------------------------------
22893  * Economy
22894  * - Production and Consumption definition
22895  * - Top-level of the production function
22896  * Options:
22897  * --original_ssp=1 : original SSP population and GDP data
22898  *-------------------------------------------------------------------------------
22899   
22901   
22902  eqk_c_laca
22903  eqq_cc_c_laca
22904  eqq_fen_c_laca
22905  eqq_y_c_laca
22906   
22907  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
22910  *-------------------------------------------------------------------------------
22911  * Energy sector
22912  *-------------------------------------------------------------------------------
22913   
22915   
22916  eq_mkt_clearing_oil_c_laca
22917  eqcost_pes_c_laca
22918  eqcost_ses_c_laca
22919  eqk_en_c_laca
22920  eqq_ces_el_c_laca
22921  eqq_ces_nelgas_c_laca
22922  eqq_el2_c_laca
22923  eqq_el_c_laca
22924  eqq_elff_c_laca
22925  eqq_en_c_laca
22926  eqq_en_in_c_laca
22927  eqq_en_mu_c_laca
22928  eqq_en_tree_c_laca
22929  eqq_nel_c_laca
22930  eqq_nelog_c_laca
22931  eqq_fuel_c_laca
22932  eqq_elffren_c_laca
22933   
22934  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
22937  *-------------------------------------------------------------------------------
22938  * Carbon Emissions
22939  * - Total CO2 emissions and CO2 Fossil fuel and Industry
22940  * - CO2 emission costs
22941  * - GHG permit market
22942  *-------------------------------------------------------------------------------
22943   
22945   
22946  eqq_emi_lim_c_laca
22947  eqq_emi_tree_c_laca
22948  eqq_emi_co2ffi_c_laca
22949   
22950  eqcost_emi_co2_c_laca
22951   
22952  eq_mkt_clearing_nip_c_laca
22953   
22954  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
22957  *-------------------------------------------------------------------------------
22958  * Research & Development
22959  * Options:
22960  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
22961  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
22962  *-------------------------------------------------------------------------------
22963   
22965   
22966  eqk_rd_c_laca
22967  eqspill_coop_c_laca
22968  eqspill_lead_c_laca
22969  eqspill_foll_c_laca
22970  eqmcost_inv_back_c_laca
22971  eqmcost_inv_back_lbd_c_laca
22972   
22973  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
22976  *-------------------------------------------------------------------------------
22977  * Default Climate Policy Implementation
22978  *
22979  * Options:
22980  *    --policy={bau (default),ctax}
22981  *        Implement a climate policy setting
22982  *  [ --scen= ]
22983  *        Policy variant.
22984  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
22985  *          * XXX for a fixed percentage/yr (e.g. 5) growth
22986  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
22987  *  [ --ctax_year=2020 ]
22988  *        Starting year of the carbon tax
22989  *  [ --ctax_initial=30 ]
22990  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
22991  *
22992  *-------------------------------------------------------------------------------
22994   
22995  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
22997  *-------------------------------------------------------------------------------
22998  * Energy efficiency
22999  *-------------------------------------------------------------------------------
23000   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
23003  *-------------------------------------------------------------------------------
23004  * Hydro Power
23005  *-------------------------------------------------------------------------------
23006   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
23009  *-------------------------------------------------------------------------------
23010  * System Integration:
23011  * - Capacity constraint
23012  * - Flexibility constraint
23013  * - Grid Investment
23014  * - Capacity growth constraint
23015  *-------------------------------------------------------------------------------
23016   
23018   
23019  eqq_elintren_c_laca
23020  eqflex_c_laca
23021  eqk_en_grid_c_laca
23022  eqk_en_grid_to_k_en_c_laca
23023  eqfirm_capacity_c_laca
23024  eqcap_growth_c_laca
23025   
23026  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
23029  *-------------------------------------------------------------------------------
23030  * Nuclear power plants
23031  *-------------------------------------------------------------------------------
23032   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
23035  *-------------------------------------------------------------------------------
23036  * GHG module
23037  * - CH4 FFI + CH4 waste + CH4 open fires
23038  * - N2O FFI + N2O waste + N2O open fires
23039  *-------------------------------------------------------------------------------
23040   
23042   
23043  eqq_emi_waste_c_laca
23044  eqq_emi_n2o_ffi_c_laca
23045  eqq_emi_ch4_ffi_c_laca
23046   
23047  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
23050  *-------------------------------------------------------------------------------
23051  * F-gases
23052  * - LLF
23053  * - SLF
23054  *-------------------------------------------------------------------------------
23055   
23057   
23058  eqq_emi_fgases_c_laca
23059   
23060  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
23063  *-------------------------------------------------------------------------------
23064  * Landuse [simplified version of the land-use model]
23065  *-------------------------------------------------------------------------------
23066   
23068   
23069  eq_wbio_c_laca
23070  eqcost_pes_wbio_c_laca
23071   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
23074  *-------------------------------------------------------------------------------
23075  * Bioenergy power plant
23076  *-------------------------------------------------------------------------------
23077   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
23080  *-------------------------------------------------------------------------------
23081  * Traditional Biofuels
23082  * - Requires the precedence of mod_landuse
23083  *-------------------------------------------------------------------------------
23084   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
23087  *-------------------------------------------------------------------------------
23088  * Advanced biofuel
23089  * - Require the precedence of mod_landuse
23090  *-------------------------------------------------------------------------------
23091   
23093   
23094  eqq_en_lim_advbiofuel_c_laca
23095  eqmcost_fuel_advbiofuel_c_laca
23096   
23097  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
23100  *-------------------------------------------------------------------------------
23101  * Carbon Capture and Sequestration
23102  *-------------------------------------------------------------------------------
23103   
23105   
23106  eqq_emi_ccs_c_laca
23107  eqcost_emi_sinks_c_laca
23108  eq_stor_ccs_cum_c_laca
23109  eq_emi_stor_ccs_c_laca
23110  eq_emi_leak_ccs_c_laca
23111   
23112  *-------------------------------------------------------------------------------
23114   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
23116  *-------------------------------------------------------------------------------
23117  * Coal for non-electric sectors
23118  * - Coke Plants
23119  * - Industrial and Commercial combined-heat-and-power (CHP)
23120  * - Others
23121  *-------------------------------------------------------------------------------
23122   
23124   
23125  eqcost_en_nelcoal_c_laca
23126  eqq_ncoalabat_monotone_c_laca
23127  eqq_en_nelcoalccs_max_c_laca
23128   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
23131  *-------------------------------------------------------------------------------
23132  * Wind energy module
23133  * - onshore and offshore
23134  *-------------------------------------------------------------------------------
23135   
23137   
23138  eqq_en_mu_windon_c_laca
23139  eqq_en_mu_windoff_c_laca
23140  eqk_en_windon_c_laca
23141  eqk_en_windoff_c_laca
23142  eqq_en_windon_sum_c_laca
23143  eqq_en_windoff_sum_c_laca
23144  eqk_en_windon_sum_c_laca
23145  eqk_en_windoff_sum_c_laca
23146  eqi_en_windon_sum_c_laca
23147  eqi_en_windoff_sum_c_laca
23148   
23150   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
23152  *-------------------------------------------------------------------------------
23153  * Solar Powerplants (PV and CSP) to the electrical system
23154  *-------------------------------------------------------------------------------
23155   
23156  *-------------------------------------------------------------------------------
23158   
23159  eqq_en_mu_pv_c_laca
23160  eqq_en_mu_csp_c_laca
23161  eqk_en_pv_c_laca
23162  eqk_en_csp_c_laca
23163  eqq_en_pv_sum_c_laca
23164  eqq_en_csp_sum_c_laca
23165  eqk_en_pv_sum_c_laca
23166  eqk_en_csp_sum_c_laca
23167  eqi_en_pv_sum_c_laca
23168  eqi_en_csp_sum_c_laca
23169  eqk_en_solar_comp_c_laca
23170   
23171  *-------------------------------------------------------------------------------
23173   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
23175  *-------------------------------------------------------------------------------
23176  * Technology development scenarios
23177  *-------------------------------------------------------------------------------
23178   
23180   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
23182  *-------------------------------------------------------------------------------
23183  * Oil Extraction
23184  * Options:
23185  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
23186  *-------------------------------------------------------------------------------
23187   
23189   
23190  eqoilcap_c_laca
23191  eqoilprod_c_laca
23192  eqq_out_oil_c_laca
23193  eqcum_oil_c_laca
23194  eqcost_oil_c_laca
23195  eqi_oil_c_laca
23196  eqi_out_oil_c_laca
23197  eqq_emi_out_oil_c_laca
23198   
23199  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
23202  *-------------------------------------------------------------------------------
23203  * Uranium Resources
23204  *-------------------------------------------------------------------------------
23205   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
23208  *-------------------------------------------------------------------------------
23209  * Gas Resources
23210  *-------------------------------------------------------------------------------
23211   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
23214  *-------------------------------------------------------------------------------
23215  * Coal Resources
23216  *-------------------------------------------------------------------------------
23217   
23219   
23220   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
23222  *-------------------------------------------------------------------------------
23223  * Climate
23224  *
23225  * Represents the climate
23226  * - based on the DICE model equations
23227  * - Radiative forcing for non CO2 ghgs
23228  * - parameters calibrated to reproduce MAGICC6.4 default response
23229  *
23230  *  Options:
23231  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
23232  * - $setglobal cooperate_on_climate {'YES','NO'}
23233  * - 'YES'(default): Countries within a coalition act in cooperation
23234  *   'NO': Countries within a coalition act individually
23235  *
23236  *-------------------------------------------------------------------------------
23237   
23239   
23241   
23242  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
23245  *-------------------------------------------------------------------------------
23246  * Long-run Damages from Climate Change
23247  * - Economic impacts
23248  * - Adaptation
23249  *-------------------------------------------------------------------------------
23250   
23252   
23254   
23255  *-------------------------------------------------------------------------------
23257   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
23259  *-------------------------------------------------------------------------------
23260  * Light-duty Vehicles for Personal Transport
23261  *-------------------------------------------------------------------------------
23262   
23264   
23265  eqnb_veh_c_laca
23266  eqq_en_veh_c_laca
23267  eqq_el_edv_c_laca
23268  eqmcost_inv_hybrid_c_laca
23269  eqmcost_inv_plghybrid_c_laca
23270  eqmcost_inv_edv_c_laca
23271  *** newcode
23272  eqq_inv_red_ban_c_laca
23273  ***
23274  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
23277  *-------------------------------------------------------------------------------
23278  * Road Freight Transport
23279  *-------------------------------------------------------------------------------
23281   
23282  eqnb_frtveh_c_laca
23283  eqq_en_frtveh_c_laca
23284  eqq_el_frtedv_c_laca
23285  eqmcost_inv_hbd_stfr_c_laca
23286  eqmcost_inv_plghbd_stfr_c_laca
23287  eqmcost_inv_edv_stfr_c_laca
23288   
23289  *-------------------------------------------------------------------------------
23291   
23292   
23293   
23294   
23295   
23296   
23297  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
23299  *-------------------------------------------------------------------------------
23300  * Traditional Biomass
23301  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
23302  *  - require post_process to be launch before
23303  *-------------------------------------------------------------------------------
23304   
23306   
23307  * Optional modules
23308   
23309  * Policy modules
23310   
23311  * Calibration
23314  /;
23315   
23316  witch_c_laca.optfile=1;   # the option file solvername.opt is to be used
23317  witch_c_laca.holdfixed=1; # treat fixed values as constant
23318  witch_c_laca.scaleopt=1;  # Use scaling for better gradients estimation
23319  witch_c_laca.solvelink=3; # Use parallel or sequential solving
23320   
23325   
23326  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
23328  *-------------------------------------------------------------------------------
23329  * Call modules by order
23330  *-------------------------------------------------------------------------------
23334   
23335  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
23337  *-------------------------------------------------------------------------------
23338  * Algorithm
23339  *-------------------------------------------------------------------------------
23340   
23342   
23343  eqobj_c_mena
23344   
23345  *-------------------------------------------------------------------------------
23347   
23348  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
23350  *-------------------------------------------------------------------------------
23351  * Time
23352  * - Temporal structure
23353  * - Fixed time periods
23354  * - States of the world
23355  *-------------------------------------------------------------------------------
23356   
23358   
23359  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
23361  *-------------------------------------------------------------------------------
23362  * Geographic dimension and mapping with countries
23363  *-------------------------------------------------------------------------------
23364   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
23367  *-------------------------------------------------------------------------------
23368  * Non-Cooperative Setup
23369  *
23370  * Each region is defined as an individual coalition.
23371  *
23372  *-------------------------------------------------------------------------------
23373   
23375   
23376  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
23378  *-------------------------------------------------------------------------------
23379  * Welfare
23380  *-------------------------------------------------------------------------------
23381   
23383   
23384  equtility_c_mena
23385   
23386  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
23389  *-------------------------------------------------------------------------------
23390  * Economy
23391  * - Production and Consumption definition
23392  * - Top-level of the production function
23393  * Options:
23394  * --original_ssp=1 : original SSP population and GDP data
23395  *-------------------------------------------------------------------------------
23396   
23398   
23399  eqk_c_mena
23400  eqq_cc_c_mena
23401  eqq_fen_c_mena
23402  eqq_y_c_mena
23403   
23404  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
23407  *-------------------------------------------------------------------------------
23408  * Energy sector
23409  *-------------------------------------------------------------------------------
23410   
23412   
23413  eq_mkt_clearing_oil_c_mena
23414  eqcost_pes_c_mena
23415  eqcost_ses_c_mena
23416  eqk_en_c_mena
23417  eqq_ces_el_c_mena
23418  eqq_ces_nelgas_c_mena
23419  eqq_el2_c_mena
23420  eqq_el_c_mena
23421  eqq_elff_c_mena
23422  eqq_en_c_mena
23423  eqq_en_in_c_mena
23424  eqq_en_mu_c_mena
23425  eqq_en_tree_c_mena
23426  eqq_nel_c_mena
23427  eqq_nelog_c_mena
23428  eqq_fuel_c_mena
23429  eqq_elffren_c_mena
23430   
23431  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
23434  *-------------------------------------------------------------------------------
23435  * Carbon Emissions
23436  * - Total CO2 emissions and CO2 Fossil fuel and Industry
23437  * - CO2 emission costs
23438  * - GHG permit market
23439  *-------------------------------------------------------------------------------
23440   
23442   
23443  eqq_emi_lim_c_mena
23444  eqq_emi_tree_c_mena
23445  eqq_emi_co2ffi_c_mena
23446   
23447  eqcost_emi_co2_c_mena
23448   
23449  eq_mkt_clearing_nip_c_mena
23450   
23451  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
23454  *-------------------------------------------------------------------------------
23455  * Research & Development
23456  * Options:
23457  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
23458  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
23459  *-------------------------------------------------------------------------------
23460   
23462   
23463  eqk_rd_c_mena
23464  eqspill_coop_c_mena
23465  eqspill_lead_c_mena
23466  eqspill_foll_c_mena
23467  eqmcost_inv_back_c_mena
23468  eqmcost_inv_back_lbd_c_mena
23469   
23470  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
23473  *-------------------------------------------------------------------------------
23474  * Default Climate Policy Implementation
23475  *
23476  * Options:
23477  *    --policy={bau (default),ctax}
23478  *        Implement a climate policy setting
23479  *  [ --scen= ]
23480  *        Policy variant.
23481  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
23482  *          * XXX for a fixed percentage/yr (e.g. 5) growth
23483  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
23484  *  [ --ctax_year=2020 ]
23485  *        Starting year of the carbon tax
23486  *  [ --ctax_initial=30 ]
23487  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
23488  *
23489  *-------------------------------------------------------------------------------
23491   
23492  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
23494  *-------------------------------------------------------------------------------
23495  * Energy efficiency
23496  *-------------------------------------------------------------------------------
23497   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
23500  *-------------------------------------------------------------------------------
23501  * Hydro Power
23502  *-------------------------------------------------------------------------------
23503   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
23506  *-------------------------------------------------------------------------------
23507  * System Integration:
23508  * - Capacity constraint
23509  * - Flexibility constraint
23510  * - Grid Investment
23511  * - Capacity growth constraint
23512  *-------------------------------------------------------------------------------
23513   
23515   
23516  eqq_elintren_c_mena
23517  eqflex_c_mena
23518  eqk_en_grid_c_mena
23519  eqk_en_grid_to_k_en_c_mena
23520  eqfirm_capacity_c_mena
23521  eqcap_growth_c_mena
23522   
23523  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
23526  *-------------------------------------------------------------------------------
23527  * Nuclear power plants
23528  *-------------------------------------------------------------------------------
23529   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
23532  *-------------------------------------------------------------------------------
23533  * GHG module
23534  * - CH4 FFI + CH4 waste + CH4 open fires
23535  * - N2O FFI + N2O waste + N2O open fires
23536  *-------------------------------------------------------------------------------
23537   
23539   
23540  eqq_emi_waste_c_mena
23541  eqq_emi_n2o_ffi_c_mena
23542  eqq_emi_ch4_ffi_c_mena
23543   
23544  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
23547  *-------------------------------------------------------------------------------
23548  * F-gases
23549  * - LLF
23550  * - SLF
23551  *-------------------------------------------------------------------------------
23552   
23554   
23555  eqq_emi_fgases_c_mena
23556   
23557  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
23560  *-------------------------------------------------------------------------------
23561  * Landuse [simplified version of the land-use model]
23562  *-------------------------------------------------------------------------------
23563   
23565   
23566  eq_wbio_c_mena
23567  eqcost_pes_wbio_c_mena
23568   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
23571  *-------------------------------------------------------------------------------
23572  * Bioenergy power plant
23573  *-------------------------------------------------------------------------------
23574   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
23577  *-------------------------------------------------------------------------------
23578  * Traditional Biofuels
23579  * - Requires the precedence of mod_landuse
23580  *-------------------------------------------------------------------------------
23581   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
23584  *-------------------------------------------------------------------------------
23585  * Advanced biofuel
23586  * - Require the precedence of mod_landuse
23587  *-------------------------------------------------------------------------------
23588   
23590   
23591  eqq_en_lim_advbiofuel_c_mena
23592  eqmcost_fuel_advbiofuel_c_mena
23593   
23594  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
23597  *-------------------------------------------------------------------------------
23598  * Carbon Capture and Sequestration
23599  *-------------------------------------------------------------------------------
23600   
23602   
23603  eqq_emi_ccs_c_mena
23604  eqcost_emi_sinks_c_mena
23605  eq_stor_ccs_cum_c_mena
23606  eq_emi_stor_ccs_c_mena
23607  eq_emi_leak_ccs_c_mena
23608   
23609  *-------------------------------------------------------------------------------
23611   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
23613  *-------------------------------------------------------------------------------
23614  * Coal for non-electric sectors
23615  * - Coke Plants
23616  * - Industrial and Commercial combined-heat-and-power (CHP)
23617  * - Others
23618  *-------------------------------------------------------------------------------
23619   
23621   
23622  eqcost_en_nelcoal_c_mena
23623  eqq_ncoalabat_monotone_c_mena
23624  eqq_en_nelcoalccs_max_c_mena
23625   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
23628  *-------------------------------------------------------------------------------
23629  * Wind energy module
23630  * - onshore and offshore
23631  *-------------------------------------------------------------------------------
23632   
23634   
23635  eqq_en_mu_windon_c_mena
23636  eqq_en_mu_windoff_c_mena
23637  eqk_en_windon_c_mena
23638  eqk_en_windoff_c_mena
23639  eqq_en_windon_sum_c_mena
23640  eqq_en_windoff_sum_c_mena
23641  eqk_en_windon_sum_c_mena
23642  eqk_en_windoff_sum_c_mena
23643  eqi_en_windon_sum_c_mena
23644  eqi_en_windoff_sum_c_mena
23645   
23647   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
23649  *-------------------------------------------------------------------------------
23650  * Solar Powerplants (PV and CSP) to the electrical system
23651  *-------------------------------------------------------------------------------
23652   
23653  *-------------------------------------------------------------------------------
23655   
23656  eqq_en_mu_pv_c_mena
23657  eqq_en_mu_csp_c_mena
23658  eqk_en_pv_c_mena
23659  eqk_en_csp_c_mena
23660  eqq_en_pv_sum_c_mena
23661  eqq_en_csp_sum_c_mena
23662  eqk_en_pv_sum_c_mena
23663  eqk_en_csp_sum_c_mena
23664  eqi_en_pv_sum_c_mena
23665  eqi_en_csp_sum_c_mena
23666  eqk_en_solar_comp_c_mena
23667   
23668  *-------------------------------------------------------------------------------
23670   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
23672  *-------------------------------------------------------------------------------
23673  * Technology development scenarios
23674  *-------------------------------------------------------------------------------
23675   
23677   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
23679  *-------------------------------------------------------------------------------
23680  * Oil Extraction
23681  * Options:
23682  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
23683  *-------------------------------------------------------------------------------
23684   
23686   
23687  eqoilcap_c_mena
23688  eqoilprod_c_mena
23689  eqq_out_oil_c_mena
23690  eqcum_oil_c_mena
23691  eqcost_oil_c_mena
23692  eqi_oil_c_mena
23693  eqi_out_oil_c_mena
23694  eqq_emi_out_oil_c_mena
23695   
23696  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
23699  *-------------------------------------------------------------------------------
23700  * Uranium Resources
23701  *-------------------------------------------------------------------------------
23702   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
23705  *-------------------------------------------------------------------------------
23706  * Gas Resources
23707  *-------------------------------------------------------------------------------
23708   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
23711  *-------------------------------------------------------------------------------
23712  * Coal Resources
23713  *-------------------------------------------------------------------------------
23714   
23716   
23717   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
23719  *-------------------------------------------------------------------------------
23720  * Climate
23721  *
23722  * Represents the climate
23723  * - based on the DICE model equations
23724  * - Radiative forcing for non CO2 ghgs
23725  * - parameters calibrated to reproduce MAGICC6.4 default response
23726  *
23727  *  Options:
23728  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
23729  * - $setglobal cooperate_on_climate {'YES','NO'}
23730  * - 'YES'(default): Countries within a coalition act in cooperation
23731  *   'NO': Countries within a coalition act individually
23732  *
23733  *-------------------------------------------------------------------------------
23734   
23736   
23738   
23739  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
23742  *-------------------------------------------------------------------------------
23743  * Long-run Damages from Climate Change
23744  * - Economic impacts
23745  * - Adaptation
23746  *-------------------------------------------------------------------------------
23747   
23749   
23751   
23752  *-------------------------------------------------------------------------------
23754   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
23756  *-------------------------------------------------------------------------------
23757  * Light-duty Vehicles for Personal Transport
23758  *-------------------------------------------------------------------------------
23759   
23761   
23762  eqnb_veh_c_mena
23763  eqq_en_veh_c_mena
23764  eqq_el_edv_c_mena
23765  eqmcost_inv_hybrid_c_mena
23766  eqmcost_inv_plghybrid_c_mena
23767  eqmcost_inv_edv_c_mena
23768  *** newcode
23769  eqq_inv_red_ban_c_mena
23770  ***
23771  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
23774  *-------------------------------------------------------------------------------
23775  * Road Freight Transport
23776  *-------------------------------------------------------------------------------
23778   
23779  eqnb_frtveh_c_mena
23780  eqq_en_frtveh_c_mena
23781  eqq_el_frtedv_c_mena
23782  eqmcost_inv_hbd_stfr_c_mena
23783  eqmcost_inv_plghbd_stfr_c_mena
23784  eqmcost_inv_edv_stfr_c_mena
23785   
23786  *-------------------------------------------------------------------------------
23788   
23789   
23790   
23791   
23792   
23793   
23794  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
23796  *-------------------------------------------------------------------------------
23797  * Traditional Biomass
23798  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
23799  *  - require post_process to be launch before
23800  *-------------------------------------------------------------------------------
23801   
23803   
23804  * Optional modules
23805   
23806  * Policy modules
23807   
23808  * Calibration
23811  ;
23812   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
23814  *-------------------------------------------------------------------------------
23815  * Call modules by order
23816  *-------------------------------------------------------------------------------
23820   
23821  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
23823  *-------------------------------------------------------------------------------
23824  * Algorithm
23825  *-------------------------------------------------------------------------------
23826   
23828   
23830  * Add the component of the (maximized) objective function as required by the ADMM algorithm
23831  eqobj_c_mena..
23832      OBJADMM =e= UTILITY -
23833          sum(t, rho_admm('oil',t) / 2 *
23834              sum(n$(map_clt_n('c_mena',n) and trading_t('oil',t,n)),
23835                  power(
23836                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
23837                      x_admm('oil',t,n) +
23838                      xavg_admm('oil',t) +
23839                      u_admm('oil', t)
23840                  ,2)
23841              )) -
23842          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
23843              sum(n$(map_clt_n('c_mena',n) and trading_t(c_mkt,t,n)),
23844                  power(
23845                      Q_EMI(c_mkt,t,n) -
23846                      x_admm(c_mkt,t,n) +
23847                      xavg_admm(c_mkt,t) +
23848                      u_admm(c_mkt,t)
23849                  ,2)
23850              ))
23851      ;
23853   
23854  *-------------------------------------------------------------------------------
23856   
23857  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
23859  *-------------------------------------------------------------------------------
23860  * Time
23861  * - Temporal structure
23862  * - Fixed time periods
23863  * - States of the world
23864  *-------------------------------------------------------------------------------
23865   
23867   
23868  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
23870  *-------------------------------------------------------------------------------
23871  * Geographic dimension and mapping with countries
23872  *-------------------------------------------------------------------------------
23873   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
23876  *-------------------------------------------------------------------------------
23877  * Non-Cooperative Setup
23878  *
23879  * Each region is defined as an individual coalition.
23880  *
23881  *-------------------------------------------------------------------------------
23882   
23884   
23885  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
23887  *-------------------------------------------------------------------------------
23888  * Welfare
23889  *-------------------------------------------------------------------------------
23890   
23892   
23893  * Objective function - Welfare to be maximized
23894  equtility_c_mena..
23895      UTILITY =e=
23896   
23897  * Negishi SWF
23899   
23900  * Welfare functions based on CEBGE
23903                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
23904                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
23905                      ((sum(n$map_clt_n('c_mena',n),
23906                        (l(t,n) / sum(nn$map_clt_n('c_mena',nn), l(t,nn))) *
23907                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
23908                       )**(1 / (1 - gamma))
23909                      )**(1 - eta) ) +
23910                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
23911                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
23912                      ((sum(n$map_clt_n('c_mena',n),
23913                        (l(t,n) / sum(nn$map_clt_n('c_mena',nn), l(t,nn))) *
23914                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
23915                       )**(1 / (1 - gamma))
23916                      )**(1 - eta) )
23917                  )**(1/(1 - eta)) * 1e6
23920   
23921   
23922  ;
23923   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
23926  *-------------------------------------------------------------------------------
23927  * Economy
23928  * - Production and Consumption definition
23929  * - Top-level of the production function
23930  * Options:
23931  * --original_ssp=1 : original SSP population and GDP data
23932  *-------------------------------------------------------------------------------
23933   
23935   
23936  * Production
23937  eqq_y_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
23938   
23939      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
23940                     ## Climate feedback on economy
23942                     ## Net cost of Primary and Secondary Energy Sources
23943                     - sum(fuel, COST_FUEL(fuel,t,n))
23944                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
23945                     - sum(cce, COST_EMI(cce,t,n))
23946                     ## Carbon tax
23947                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
23948                     ## Additionnal costs on gross product
23949                     - sum(ccy, COST_Y(ccy,t,n))
23950  ;
23951   
23952  * Consumption
23953  eqq_cc_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
23954      Q('cc',t,n) =e= Q('y',t,n)
23955                      ## Investments in goods g (final good, adaptation)
23956                      -sum(g, I(g,t,n))
23957                      ## Investments in r&d
23958                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
23959                      ## Investments in energy technlogies
23960                      -sum(jinv, I_EN(jinv,t,n))
23961                       ## Investments in grid infrastructures
23962                      - I_EN_GRID(t,n)
23963                      ## Investments in extraction sector
23964                      -sum(extract(f), I_OUT(f,t,n))
23965                      ## O&M for energy technlogies
23966                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
23967                      ## O&M for extraction
23968                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
23969                      ## Energy technology penalty costs
23970                      -sum(jpenalty(j), COST_EN(j,t,n))
23971  ;
23972   
23973  * Capital accumulation
23974  eqk_c_mena(g,t,tp1,n)$(map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
23975      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
23976   
23977  * Energy services
23978  eqq_fen_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
23979      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
23980   
23981  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
23984  *-------------------------------------------------------------------------------
23985  * Energy sector
23986  *-------------------------------------------------------------------------------
23987   
23989   
23990  *-------------------------------------------------------------------------------
23991  * Production - Energy sector
23992  *-------------------------------------------------------------------------------
23993   
23994  eqq_en_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
23995      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
23996   
23997  *-------------------------------------------------------------------------------
23998  * Production - Electrical sector
23999  *-------------------------------------------------------------------------------
24000   
24001  eqq_el_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24002      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
24003   
24004  eqq_el2_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24005      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
24006   
24007  eqq_elffren_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24008      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
24009  eqq_elff_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24010      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
24011   
24012  eqq_ces_el_c_mena(ices_el,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
24013      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
24014  ;
24015   
24016  *-------------------------------------------------------------------------------
24017  * Production - Non-electrical sector
24018  *-------------------------------------------------------------------------------
24019   
24020  eqq_nel_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24021      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
24022   
24023  eqq_nelog_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24024      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
24025  ;
24026  eqq_ces_nelgas_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24027      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
24028   
24029  *-------------------------------------------------------------------------------
24030  * PES and fuels
24031  *-------------------------------------------------------------------------------
24032   
24033  eqq_fuel_c_mena(fuel,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
24034      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
24035   
24036  *-------------------------------------------------------------------------------
24037  * Cost
24038  *-------------------------------------------------------------------------------
24039   
24040  * Net cost of Primary Energy Supplies
24041  eqcost_pes_c_mena(f,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
24042      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
24043                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
24044   
24045  * Net cost of Secondary Energy Supplies
24046  eqcost_ses_c_mena(s,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24047      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
24048   
24049   
24050  *-------------------------------------------------------------------------------
24051  * Market balances
24052  *-------------------------------------------------------------------------------
24053   
24054  eq_mkt_clearing_oil_c_mena(t,'c_mena')$(internal('oil'))..
24055      sum( n$(map_clt_n('c_mena',n) and trading_t('oil',t,n)),
24056          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
24057      ) =e= 0;
24058   
24059  *-------------------------------------------------------------------------------
24060  * New capital in the energy sector
24061  *-------------------------------------------------------------------------------
24062   
24063  * Electrical generation plants (new)
24064  eqk_en_c_mena(jinv,t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
24065      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
24066                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
24067   
24068  *-------------------------------------------------------------------------------
24069  * ENERGY
24070  *-------------------------------------------------------------------------------
24071   
24072  * Capacity limits in the electrical sector
24073  eqq_en_mu_c_mena(jel,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
24074      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
24075   
24076  * Efficiency of energy technology sector
24077  eqq_en_in_c_mena(jfed,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
24078      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
24079                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
24080   
24081  * Energy generation "tree"
24082  eqq_en_tree_c_mena(j,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
24083      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
24084   
24085  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
24088  *-------------------------------------------------------------------------------
24089  * Carbon Emissions
24090  * - Total CO2 emissions and CO2 Fossil fuel and Industry
24091  * - CO2 emission costs
24092  * - GHG permit market
24093  *-------------------------------------------------------------------------------
24094   
24096   
24097  * GHG emission cap
24098  eqq_emi_lim_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
24099      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
24100                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
24101   
24102  * Compute total and sectoral emissions
24103  eqq_emi_tree_c_mena(t,n,e)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
24104      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
24105   
24106  * Industrial CO2 emissions
24107  eqq_emi_co2ffi_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24108      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
24109                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
24110                              # Emissions from biomass
24111                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
24112                              # Emissions from fuel extraction
24113                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
24114                              # Captured emissions
24115                              sum(sink, Q_EMI(sink,t,n));
24116   
24117  * CO2 emission costs
24118  eqcost_emi_co2_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24119      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
24120   
24121  * Emission permit market clearing for internal market
24122  eq_mkt_clearing_nip_c_mena(c_mkt,t,'c_mena')$(internal(c_mkt))..
24123      sum(n$(map_clt_n('c_mena',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
24124   
24125  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
24128  *-------------------------------------------------------------------------------
24129  * Research & Development
24130  * Options:
24131  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
24132  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
24133  *-------------------------------------------------------------------------------
24134   
24136   
24137  * Knowledge stock accumulation
24138  eqk_rd_c_mena(rd,t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
24139                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
24140                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
24141                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
24142                                        SPILL(rd,t,n)**rd_coef(rd,'d');
24143   
24144  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
24145  eqspill_coop_c_mena(rd,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_mena'))..
24146          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
24147                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_mena',nn)), K_RD(rd,t,nn)) +
24148                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_mena',nn))), K_RD.l(rd,t,nn))
24149                            ) *
24150                            (
24151                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_mena',nn)), K_RD(rd,t,nn)) +
24152                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_mena',nn))), K_RD.l(rd,t,nn))
24153                              ) - K_RD(rd,t,n)
24154                            );
24155   
24156  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
24157  eqspill_lead_c_mena(rd,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_mena')) and leadrd(rd,n))..
24158                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
24159   
24160  * No-cooperation : a follower sees is negative effect on the quantity he can grab
24161  eqspill_foll_c_mena(rd,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_mena')) and (not leadrd(rd,n)))..
24162                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
24163   
24164  *- Only LbR (without learning by doing)
24165  eqmcost_inv_back_c_mena(jrd,t,tt,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
24166                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
24167                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
24168   
24169  *- LbR together with learning by doing ==> Two-factor learning curve
24170  eqmcost_inv_back_lbd_c_mena(jrd,t,tt,tfirst,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
24171                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
24172                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
24173                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
24174   
24175  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
24178  *-------------------------------------------------------------------------------
24179  * Default Climate Policy Implementation
24180  *
24181  * Options:
24182  *    --policy={bau (default),ctax}
24183  *        Implement a climate policy setting
24184  *  [ --scen= ]
24185  *        Policy variant.
24186  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
24187  *          * XXX for a fixed percentage/yr (e.g. 5) growth
24188  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
24189  *  [ --ctax_year=2020 ]
24190  *        Starting year of the carbon tax
24191  *  [ --ctax_initial=30 ]
24192  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
24193  *
24194  *-------------------------------------------------------------------------------
24196   
24197  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
24199  *-------------------------------------------------------------------------------
24200  * Energy efficiency
24201  *-------------------------------------------------------------------------------
24202   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
24205  *-------------------------------------------------------------------------------
24206  * Hydro Power
24207  *-------------------------------------------------------------------------------
24208   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
24211  *-------------------------------------------------------------------------------
24212  * System Integration:
24213  * - Capacity constraint
24214  * - Flexibility constraint
24215  * - Grid Investment
24216  * - Capacity growth constraint
24217  *-------------------------------------------------------------------------------
24218   
24220   
24221   
24222  * Renewable CES
24223   
24224  * Definition of the renewable CES
24225  eqq_elintren_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24226      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
24227   
24228  * Capacity constraint
24229   
24231  eqfirm_capacity_c_mena(t,n)$(map_clt_n('c_mena',n) and (not tfix(t)) and year(t) gt 2005)..
24232                   sum(jel_firm, K_EN(jel_firm,t,n))
24233                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
24234                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
24235                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
24236                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
24237                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
24238                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
24239                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
24240                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
24241                                       ) / yearly_hours
24242  ;
24244   
24245  * Flexibility constraint
24246  eqflex_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24247          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
24248                             ( Q_EN('el',t,n) -
24249                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
24250                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
24251                             ) * flex_coeff('load')
24252  ;
24253   
24254  * Grid
24255   
24256  ** Grid depreciation and investments
24257  eqk_en_grid_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
24258                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
24259                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
24260   
24261  ** Grid adjustment to power capacity
24262  eqk_en_grid_to_k_en_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24263                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
24264                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
24265                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
24266                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
24267                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
24268                                     ) / grid_cost +
24269                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
24270                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
24271                                      K_EN('elcsp',t,n);
24272  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
24273   
24274  * Capacity growth constraint
24275  eqcap_growth_c_mena(jinv,t,tp1,tp2,n)$((map_clt_n('c_mena',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
24276                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
24277                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
24278   
24279  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
24282  *-------------------------------------------------------------------------------
24283  * Nuclear power plants
24284  *-------------------------------------------------------------------------------
24285   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
24288  *-------------------------------------------------------------------------------
24289  * GHG module
24290  * - CH4 FFI + CH4 waste + CH4 open fires
24291  * - N2O FFI + N2O waste + N2O open fires
24292  *-------------------------------------------------------------------------------
24293   
24295   
24296  * CH4, N2O waste emissions
24297  eqq_emi_waste_c_mena(waste,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
24298                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
24299   
24300  * n2o FFI
24301  eqq_emi_n2o_ffi_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
24302    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
24303                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
24304                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
24305                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
24306                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
24307                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
24308                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
24309                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
24310                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
24311                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
24312                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
24313                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
24314                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
24315                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
24316                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
24317                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
24318                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
24319                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
24320                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
24321                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
24322                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
24323                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
24324                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
24325                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
24326                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
24327                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
24328                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
24329                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
24330                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
24331                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
24332                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
24333   
24334  * ch4 FFI
24335  eqq_emi_ch4_ffi_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
24336    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
24339  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
24340  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
24341                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
24342                             smax(tt$(year(tt) eq 2015),
24343                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
24346  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
24347  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
24348                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
24349   
24350  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
24353  *-------------------------------------------------------------------------------
24354  * F-gases
24355  * - LLF
24356  * - SLF
24357  *-------------------------------------------------------------------------------
24358   
24360   
24361  * F-gases emissions
24362  eqq_emi_fgases_c_mena(fgases,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
24363                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
24364   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
24367  *-------------------------------------------------------------------------------
24368  * Landuse [simplified version of the land-use model]
24369  *-------------------------------------------------------------------------------
24370   
24372   
24373  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
24374  eq_wbio_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24375      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
24376   
24378  * Cost of all woody biomass produced for advanced biofuels and woody biomass
24379  eqcost_pes_wbio_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24380      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
24382   
24383  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
24386  *-------------------------------------------------------------------------------
24387  * Bioenergy power plant
24388  *-------------------------------------------------------------------------------
24389   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
24392  *-------------------------------------------------------------------------------
24393  * Traditional Biofuels
24394  * - Requires the precedence of mod_landuse
24395  *-------------------------------------------------------------------------------
24396   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
24399  *-------------------------------------------------------------------------------
24400  * Advanced biofuel
24401  * - Require the precedence of mod_landuse
24402  *-------------------------------------------------------------------------------
24403   
24405   
24406  * Limitations for nel backstops
24407  eqq_en_lim_advbiofuel_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
24408               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
24409               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
24410   
24411  * Peculiarity of advbiofuel
24412  eqmcost_fuel_advbiofuel_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24413                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
24414   
24415  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
24418  *-------------------------------------------------------------------------------
24419  * Carbon Capture and Sequestration
24420  *-------------------------------------------------------------------------------
24421   
24423   
24424  eqq_emi_ccs_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24425                  Q_EMI('ccs_plant',t,n) =e=
24426                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
24427                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
24428  ;
24429   
24430  eqcost_emi_sinks_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24431                  COST_EMI('ccs_plant',t,n) =e=
24432                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
24433                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
24434  ;
24435   
24436  eq_stor_ccs_cum_c_mena(ccs_stor,tp1,t,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
24437                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
24438  ;
24439   
24440  eq_emi_stor_ccs_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24441                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
24442  ;
24443   
24444  eq_emi_leak_ccs_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24445                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
24446   
24447  *-------------------------------------------------------------------------------
24449   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
24451  *-------------------------------------------------------------------------------
24452  * Coal for non-electric sectors
24453  * - Coke Plants
24454  * - Industrial and Commercial combined-heat-and-power (CHP)
24455  * - Others
24456  *-------------------------------------------------------------------------------
24457   
24459   
24460  eqcost_en_nelcoal_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24461           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
24462                                          nelcoal_max_abat(t,n) *
24463                                          (nelcoal_cmac(n,'a') *
24464                                            Q_EN('nelcoalabat',t,n) /
24465                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
24466                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
24467                                              (exp(nelcoal_cmac(n,'c') *
24468                                                (Q_EN('nelcoalabat',t,n)/
24469                                                  (nelcoal_max_abat(t,n) *
24470                                                      nelcoal_baseline(t,n))
24471                                                  ) - 1 )
24472                                              )
24473                                          );
24474   
24475  eqq_ncoalabat_monotone_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
24476          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
24477   
24478  * ensure Q_EN is lower than K_EN for CCS as not in jel
24479  eqq_en_nelcoalccs_max_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24480          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
24481   
24482  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
24485  *-------------------------------------------------------------------------------
24486  * Wind energy module
24487  * - onshore and offshore
24488  *-------------------------------------------------------------------------------
24489   
24491   
24492  * Capacity limits in the wind onshore electrical sector
24493  eqq_en_mu_windon_c_mena(wind_dist,wind_class,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
24494      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
24495   
24496  * Capacity limits in the wind offshore electrical sector
24497  eqq_en_mu_windoff_c_mena(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
24498      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
24499   
24500  * Wind onshore electrical generation plants (new)
24501  eqk_en_windon_c_mena(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
24502      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
24503                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
24504   
24505  * Wind offshore electrical generation plants (new)
24506  eqk_en_windoff_c_mena(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
24507      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
24508                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
24509   
24510  * Total onshore wind energy production
24511  eqq_en_windon_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24512                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
24513   
24514  * Total offshore wind energy production
24515  eqq_en_windoff_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24516                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
24517   
24518  * Total onshore wind capacity
24519  eqk_en_windon_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24520                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
24521   
24522  * Total offshore wind capacity
24523  eqk_en_windoff_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24524                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
24525   
24526  * Total onshore wind investment
24527  eqi_en_windon_sum_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
24528                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
24529   
24530  * Total offshore wind investment
24531  eqi_en_windoff_sum_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
24532                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
24533   
24534  *-------------------------------------------------------------------------------
24536   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
24538  *-------------------------------------------------------------------------------
24539  * Solar Powerplants (PV and CSP) to the electrical system
24540  *-------------------------------------------------------------------------------
24541   
24542  *-------------------------------------------------------------------------------
24544   
24545   
24546  * Capacity limits in the pv electrical sector
24547  eqq_en_mu_pv_c_mena(solar_dist,solar_class,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
24548                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
24549   
24550  * Capacity limits in the csp electrical sector
24551  eqq_en_mu_csp_c_mena(solar_dist,solar_class,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
24552                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
24553   
24554  * PV electrical generation plants (new)
24555  eqk_en_pv_c_mena(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
24556                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
24557                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
24558   
24559  * CSP electrical generation plants (new)
24560  eqk_en_csp_c_mena(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
24561                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
24562                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
24563   
24564  * Total PV energy production
24565  eqq_en_pv_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24566                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
24567   
24568  * Total CSP energy production
24569  eqq_en_csp_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24570                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
24571   
24572  * Total PV capacity
24573  eqk_en_pv_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24574                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
24575   
24576  * Total CSP capacity
24577  eqk_en_csp_sum_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24578                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
24579   
24580  * Total PV investment
24581  eqi_en_pv_sum_c_mena(t,tp1,n)$(map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
24582                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
24583   
24584  * Total CSP investment
24585  eqi_en_csp_sum_c_mena(t,tp1,n)$(map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
24586                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
24587   
24588  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
24589  eqk_en_solar_comp_c_mena(t,n,solar_dist)$(map_clt_n('c_mena',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
24590                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
24591                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
24592   
24593   
24594   
24595  *-------------------------------------------------------------------------------
24597   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
24599  *-------------------------------------------------------------------------------
24600  * Technology development scenarios
24601  *-------------------------------------------------------------------------------
24602   
24604   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
24606  *-------------------------------------------------------------------------------
24607  * Oil Extraction
24608  * Options:
24609  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
24610  *-------------------------------------------------------------------------------
24611   
24613   
24614  * Capacity
24615  eqoilcap_c_mena(t,tp1,n,oilg)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
24616      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
24617   
24618  * Production
24619  eqoilprod_c_mena(t,tp1,n,oilg)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
24620      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
24621   
24622  eqq_out_oil_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24623      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
24624   
24625  * Cumulative production
24626  eqcum_oil_c_mena(t,tp1,n,oilg)$((map_clt_n('c_mena',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
24627      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
24628   
24629  * Cost
24630  eqcost_oil_c_mena(t,tp1,n,oilg)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
24631      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
24632                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
24633                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
24634   
24635  * Investments
24636  eqi_oil_c_mena(t,tp1,n,oilg)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
24637      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
24638   
24639  * Total investment
24640  eqi_out_oil_c_mena(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
24641      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
24642   
24643  * Emissions
24644  eqq_emi_out_oil_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24645      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
24646   
24647  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
24650  *-------------------------------------------------------------------------------
24651  * Uranium Resources
24652  *-------------------------------------------------------------------------------
24653   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
24656  *-------------------------------------------------------------------------------
24657  * Gas Resources
24658  *-------------------------------------------------------------------------------
24659   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
24662  *-------------------------------------------------------------------------------
24663  * Coal Resources
24664  *-------------------------------------------------------------------------------
24665   
24667   
24668   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
24670  *-------------------------------------------------------------------------------
24671  * Climate
24672  *
24673  * Represents the climate
24674  * - based on the DICE model equations
24675  * - Radiative forcing for non CO2 ghgs
24676  * - parameters calibrated to reproduce MAGICC6.4 default response
24677  *
24678  *  Options:
24679  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
24680  * - $setglobal cooperate_on_climate {'YES','NO'}
24681  * - 'YES'(default): Countries within a coalition act in cooperation
24682  *   'NO': Countries within a coalition act individually
24683  *
24684  *-------------------------------------------------------------------------------
24685   
24687   
24689   
24690  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
24693  *-------------------------------------------------------------------------------
24694  * Long-run Damages from Climate Change
24695  * - Economic impacts
24696  * - Adaptation
24697  *-------------------------------------------------------------------------------
24698   
24700   
24702   
24703  *-------------------------------------------------------------------------------
24705   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
24707  *-------------------------------------------------------------------------------
24708  * Light-duty Vehicles for Personal Transport
24709  *-------------------------------------------------------------------------------
24710   
24712   
24713  *** newcode
24714  eqq_inv_red_ban_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24715      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
24716   
24717  ***
24718  *- Number of light duty vehicles
24719  eqnb_veh_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24720      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
24721   
24722  *- Yearly energy demand of vehicles
24723  eqq_en_veh_c_mena(jveh,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24724      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
24725   
24726  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
24727  eqq_el_edv_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24728      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
24729   
24730  *- Investment cost for hybrid vehicles
24731  eqmcost_inv_hybrid_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
24732                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
24733   
24734  *- Investment cost for plug-in hybrid vehicles
24735  eqmcost_inv_plghybrid_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
24736                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
24737   
24738  *- Investment cost for electric drive vehicles
24739  eqmcost_inv_edv_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
24740                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
24741   
24742  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
24745  *-------------------------------------------------------------------------------
24746  * Road Freight Transport
24747  *-------------------------------------------------------------------------------
24749   
24750  *-  Number of freight vehicles
24751  eqnb_frtveh_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
24752                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
24753   
24754  *-  Yearly fuel consumption of freight vehicles
24755  eqq_en_frtveh_c_mena(jfrt,t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24756                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
24757   
24758  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
24759  eqq_el_frtedv_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)))..
24760                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
24761   
24762  *-  Investment cost for hbd_stfr vehicle
24763  eqmcost_inv_hbd_stfr_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
24764                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
24765   
24766  *-  Investment cost for plug-in hbd_stfr vehicle
24767  eqmcost_inv_plghbd_stfr_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
24768                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
24769   
24770  *-  Investment cost for electric drive vehicle
24771  eqmcost_inv_edv_stfr_c_mena(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
24772                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
24773   
24774  *-------------------------------------------------------------------------------
24776   
24777   
24778   
24779   
24780   
24781   
24782  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
24784  *-------------------------------------------------------------------------------
24785  * Traditional Biomass
24786  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
24787  *  - require post_process to be launch before
24788  *-------------------------------------------------------------------------------
24789   
24791   
24792  * Optional modules
24793   
24794  * Policy modules
24795   
24796  * Calibration
24799   
24800   
24801  model witch_c_mena /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
24803  *-------------------------------------------------------------------------------
24804  * Call modules by order
24805  *-------------------------------------------------------------------------------
24809   
24810  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
24812  *-------------------------------------------------------------------------------
24813  * Algorithm
24814  *-------------------------------------------------------------------------------
24815   
24817   
24818  eqobj_c_mena
24819   
24820  *-------------------------------------------------------------------------------
24822   
24823  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
24825  *-------------------------------------------------------------------------------
24826  * Time
24827  * - Temporal structure
24828  * - Fixed time periods
24829  * - States of the world
24830  *-------------------------------------------------------------------------------
24831   
24833   
24834  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
24836  *-------------------------------------------------------------------------------
24837  * Geographic dimension and mapping with countries
24838  *-------------------------------------------------------------------------------
24839   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
24842  *-------------------------------------------------------------------------------
24843  * Non-Cooperative Setup
24844  *
24845  * Each region is defined as an individual coalition.
24846  *
24847  *-------------------------------------------------------------------------------
24848   
24850   
24851  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
24853  *-------------------------------------------------------------------------------
24854  * Welfare
24855  *-------------------------------------------------------------------------------
24856   
24858   
24859  equtility_c_mena
24860   
24861  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
24864  *-------------------------------------------------------------------------------
24865  * Economy
24866  * - Production and Consumption definition
24867  * - Top-level of the production function
24868  * Options:
24869  * --original_ssp=1 : original SSP population and GDP data
24870  *-------------------------------------------------------------------------------
24871   
24873   
24874  eqk_c_mena
24875  eqq_cc_c_mena
24876  eqq_fen_c_mena
24877  eqq_y_c_mena
24878   
24879  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
24882  *-------------------------------------------------------------------------------
24883  * Energy sector
24884  *-------------------------------------------------------------------------------
24885   
24887   
24888  eq_mkt_clearing_oil_c_mena
24889  eqcost_pes_c_mena
24890  eqcost_ses_c_mena
24891  eqk_en_c_mena
24892  eqq_ces_el_c_mena
24893  eqq_ces_nelgas_c_mena
24894  eqq_el2_c_mena
24895  eqq_el_c_mena
24896  eqq_elff_c_mena
24897  eqq_en_c_mena
24898  eqq_en_in_c_mena
24899  eqq_en_mu_c_mena
24900  eqq_en_tree_c_mena
24901  eqq_nel_c_mena
24902  eqq_nelog_c_mena
24903  eqq_fuel_c_mena
24904  eqq_elffren_c_mena
24905   
24906  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
24909  *-------------------------------------------------------------------------------
24910  * Carbon Emissions
24911  * - Total CO2 emissions and CO2 Fossil fuel and Industry
24912  * - CO2 emission costs
24913  * - GHG permit market
24914  *-------------------------------------------------------------------------------
24915   
24917   
24918  eqq_emi_lim_c_mena
24919  eqq_emi_tree_c_mena
24920  eqq_emi_co2ffi_c_mena
24921   
24922  eqcost_emi_co2_c_mena
24923   
24924  eq_mkt_clearing_nip_c_mena
24925   
24926  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
24929  *-------------------------------------------------------------------------------
24930  * Research & Development
24931  * Options:
24932  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
24933  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
24934  *-------------------------------------------------------------------------------
24935   
24937   
24938  eqk_rd_c_mena
24939  eqspill_coop_c_mena
24940  eqspill_lead_c_mena
24941  eqspill_foll_c_mena
24942  eqmcost_inv_back_c_mena
24943  eqmcost_inv_back_lbd_c_mena
24944   
24945  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
24948  *-------------------------------------------------------------------------------
24949  * Default Climate Policy Implementation
24950  *
24951  * Options:
24952  *    --policy={bau (default),ctax}
24953  *        Implement a climate policy setting
24954  *  [ --scen= ]
24955  *        Policy variant.
24956  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
24957  *          * XXX for a fixed percentage/yr (e.g. 5) growth
24958  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
24959  *  [ --ctax_year=2020 ]
24960  *        Starting year of the carbon tax
24961  *  [ --ctax_initial=30 ]
24962  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
24963  *
24964  *-------------------------------------------------------------------------------
24966   
24967  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
24969  *-------------------------------------------------------------------------------
24970  * Energy efficiency
24971  *-------------------------------------------------------------------------------
24972   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
24975  *-------------------------------------------------------------------------------
24976  * Hydro Power
24977  *-------------------------------------------------------------------------------
24978   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
24981  *-------------------------------------------------------------------------------
24982  * System Integration:
24983  * - Capacity constraint
24984  * - Flexibility constraint
24985  * - Grid Investment
24986  * - Capacity growth constraint
24987  *-------------------------------------------------------------------------------
24988   
24990   
24991  eqq_elintren_c_mena
24992  eqflex_c_mena
24993  eqk_en_grid_c_mena
24994  eqk_en_grid_to_k_en_c_mena
24995  eqfirm_capacity_c_mena
24996  eqcap_growth_c_mena
24997   
24998  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
25001  *-------------------------------------------------------------------------------
25002  * Nuclear power plants
25003  *-------------------------------------------------------------------------------
25004   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
25007  *-------------------------------------------------------------------------------
25008  * GHG module
25009  * - CH4 FFI + CH4 waste + CH4 open fires
25010  * - N2O FFI + N2O waste + N2O open fires
25011  *-------------------------------------------------------------------------------
25012   
25014   
25015  eqq_emi_waste_c_mena
25016  eqq_emi_n2o_ffi_c_mena
25017  eqq_emi_ch4_ffi_c_mena
25018   
25019  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
25022  *-------------------------------------------------------------------------------
25023  * F-gases
25024  * - LLF
25025  * - SLF
25026  *-------------------------------------------------------------------------------
25027   
25029   
25030  eqq_emi_fgases_c_mena
25031   
25032  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
25035  *-------------------------------------------------------------------------------
25036  * Landuse [simplified version of the land-use model]
25037  *-------------------------------------------------------------------------------
25038   
25040   
25041  eq_wbio_c_mena
25042  eqcost_pes_wbio_c_mena
25043   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
25046  *-------------------------------------------------------------------------------
25047  * Bioenergy power plant
25048  *-------------------------------------------------------------------------------
25049   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
25052  *-------------------------------------------------------------------------------
25053  * Traditional Biofuels
25054  * - Requires the precedence of mod_landuse
25055  *-------------------------------------------------------------------------------
25056   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
25059  *-------------------------------------------------------------------------------
25060  * Advanced biofuel
25061  * - Require the precedence of mod_landuse
25062  *-------------------------------------------------------------------------------
25063   
25065   
25066  eqq_en_lim_advbiofuel_c_mena
25067  eqmcost_fuel_advbiofuel_c_mena
25068   
25069  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
25072  *-------------------------------------------------------------------------------
25073  * Carbon Capture and Sequestration
25074  *-------------------------------------------------------------------------------
25075   
25077   
25078  eqq_emi_ccs_c_mena
25079  eqcost_emi_sinks_c_mena
25080  eq_stor_ccs_cum_c_mena
25081  eq_emi_stor_ccs_c_mena
25082  eq_emi_leak_ccs_c_mena
25083   
25084  *-------------------------------------------------------------------------------
25086   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
25088  *-------------------------------------------------------------------------------
25089  * Coal for non-electric sectors
25090  * - Coke Plants
25091  * - Industrial and Commercial combined-heat-and-power (CHP)
25092  * - Others
25093  *-------------------------------------------------------------------------------
25094   
25096   
25097  eqcost_en_nelcoal_c_mena
25098  eqq_ncoalabat_monotone_c_mena
25099  eqq_en_nelcoalccs_max_c_mena
25100   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
25103  *-------------------------------------------------------------------------------
25104  * Wind energy module
25105  * - onshore and offshore
25106  *-------------------------------------------------------------------------------
25107   
25109   
25110  eqq_en_mu_windon_c_mena
25111  eqq_en_mu_windoff_c_mena
25112  eqk_en_windon_c_mena
25113  eqk_en_windoff_c_mena
25114  eqq_en_windon_sum_c_mena
25115  eqq_en_windoff_sum_c_mena
25116  eqk_en_windon_sum_c_mena
25117  eqk_en_windoff_sum_c_mena
25118  eqi_en_windon_sum_c_mena
25119  eqi_en_windoff_sum_c_mena
25120   
25122   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
25124  *-------------------------------------------------------------------------------
25125  * Solar Powerplants (PV and CSP) to the electrical system
25126  *-------------------------------------------------------------------------------
25127   
25128  *-------------------------------------------------------------------------------
25130   
25131  eqq_en_mu_pv_c_mena
25132  eqq_en_mu_csp_c_mena
25133  eqk_en_pv_c_mena
25134  eqk_en_csp_c_mena
25135  eqq_en_pv_sum_c_mena
25136  eqq_en_csp_sum_c_mena
25137  eqk_en_pv_sum_c_mena
25138  eqk_en_csp_sum_c_mena
25139  eqi_en_pv_sum_c_mena
25140  eqi_en_csp_sum_c_mena
25141  eqk_en_solar_comp_c_mena
25142   
25143  *-------------------------------------------------------------------------------
25145   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
25147  *-------------------------------------------------------------------------------
25148  * Technology development scenarios
25149  *-------------------------------------------------------------------------------
25150   
25152   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
25154  *-------------------------------------------------------------------------------
25155  * Oil Extraction
25156  * Options:
25157  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
25158  *-------------------------------------------------------------------------------
25159   
25161   
25162  eqoilcap_c_mena
25163  eqoilprod_c_mena
25164  eqq_out_oil_c_mena
25165  eqcum_oil_c_mena
25166  eqcost_oil_c_mena
25167  eqi_oil_c_mena
25168  eqi_out_oil_c_mena
25169  eqq_emi_out_oil_c_mena
25170   
25171  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
25174  *-------------------------------------------------------------------------------
25175  * Uranium Resources
25176  *-------------------------------------------------------------------------------
25177   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
25180  *-------------------------------------------------------------------------------
25181  * Gas Resources
25182  *-------------------------------------------------------------------------------
25183   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
25186  *-------------------------------------------------------------------------------
25187  * Coal Resources
25188  *-------------------------------------------------------------------------------
25189   
25191   
25192   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
25194  *-------------------------------------------------------------------------------
25195  * Climate
25196  *
25197  * Represents the climate
25198  * - based on the DICE model equations
25199  * - Radiative forcing for non CO2 ghgs
25200  * - parameters calibrated to reproduce MAGICC6.4 default response
25201  *
25202  *  Options:
25203  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
25204  * - $setglobal cooperate_on_climate {'YES','NO'}
25205  * - 'YES'(default): Countries within a coalition act in cooperation
25206  *   'NO': Countries within a coalition act individually
25207  *
25208  *-------------------------------------------------------------------------------
25209   
25211   
25213   
25214  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
25217  *-------------------------------------------------------------------------------
25218  * Long-run Damages from Climate Change
25219  * - Economic impacts
25220  * - Adaptation
25221  *-------------------------------------------------------------------------------
25222   
25224   
25226   
25227  *-------------------------------------------------------------------------------
25229   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
25231  *-------------------------------------------------------------------------------
25232  * Light-duty Vehicles for Personal Transport
25233  *-------------------------------------------------------------------------------
25234   
25236   
25237  eqnb_veh_c_mena
25238  eqq_en_veh_c_mena
25239  eqq_el_edv_c_mena
25240  eqmcost_inv_hybrid_c_mena
25241  eqmcost_inv_plghybrid_c_mena
25242  eqmcost_inv_edv_c_mena
25243  *** newcode
25244  eqq_inv_red_ban_c_mena
25245  ***
25246  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
25249  *-------------------------------------------------------------------------------
25250  * Road Freight Transport
25251  *-------------------------------------------------------------------------------
25253   
25254  eqnb_frtveh_c_mena
25255  eqq_en_frtveh_c_mena
25256  eqq_el_frtedv_c_mena
25257  eqmcost_inv_hbd_stfr_c_mena
25258  eqmcost_inv_plghbd_stfr_c_mena
25259  eqmcost_inv_edv_stfr_c_mena
25260   
25261  *-------------------------------------------------------------------------------
25263   
25264   
25265   
25266   
25267   
25268   
25269  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
25271  *-------------------------------------------------------------------------------
25272  * Traditional Biomass
25273  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
25274  *  - require post_process to be launch before
25275  *-------------------------------------------------------------------------------
25276   
25278   
25279  * Optional modules
25280   
25281  * Policy modules
25282   
25283  * Calibration
25286  /;
25287   
25288  witch_c_mena.optfile=1;   # the option file solvername.opt is to be used
25289  witch_c_mena.holdfixed=1; # treat fixed values as constant
25290  witch_c_mena.scaleopt=1;  # Use scaling for better gradients estimation
25291  witch_c_mena.solvelink=3; # Use parallel or sequential solving
25292   
25297   
25298  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
25300  *-------------------------------------------------------------------------------
25301  * Call modules by order
25302  *-------------------------------------------------------------------------------
25306   
25307  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
25309  *-------------------------------------------------------------------------------
25310  * Algorithm
25311  *-------------------------------------------------------------------------------
25312   
25314   
25315  eqobj_c_mexico
25316   
25317  *-------------------------------------------------------------------------------
25319   
25320  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
25322  *-------------------------------------------------------------------------------
25323  * Time
25324  * - Temporal structure
25325  * - Fixed time periods
25326  * - States of the world
25327  *-------------------------------------------------------------------------------
25328   
25330   
25331  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
25333  *-------------------------------------------------------------------------------
25334  * Geographic dimension and mapping with countries
25335  *-------------------------------------------------------------------------------
25336   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
25339  *-------------------------------------------------------------------------------
25340  * Non-Cooperative Setup
25341  *
25342  * Each region is defined as an individual coalition.
25343  *
25344  *-------------------------------------------------------------------------------
25345   
25347   
25348  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
25350  *-------------------------------------------------------------------------------
25351  * Welfare
25352  *-------------------------------------------------------------------------------
25353   
25355   
25356  equtility_c_mexico
25357   
25358  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
25361  *-------------------------------------------------------------------------------
25362  * Economy
25363  * - Production and Consumption definition
25364  * - Top-level of the production function
25365  * Options:
25366  * --original_ssp=1 : original SSP population and GDP data
25367  *-------------------------------------------------------------------------------
25368   
25370   
25371  eqk_c_mexico
25372  eqq_cc_c_mexico
25373  eqq_fen_c_mexico
25374  eqq_y_c_mexico
25375   
25376  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
25379  *-------------------------------------------------------------------------------
25380  * Energy sector
25381  *-------------------------------------------------------------------------------
25382   
25384   
25385  eq_mkt_clearing_oil_c_mexico
25386  eqcost_pes_c_mexico
25387  eqcost_ses_c_mexico
25388  eqk_en_c_mexico
25389  eqq_ces_el_c_mexico
25390  eqq_ces_nelgas_c_mexico
25391  eqq_el2_c_mexico
25392  eqq_el_c_mexico
25393  eqq_elff_c_mexico
25394  eqq_en_c_mexico
25395  eqq_en_in_c_mexico
25396  eqq_en_mu_c_mexico
25397  eqq_en_tree_c_mexico
25398  eqq_nel_c_mexico
25399  eqq_nelog_c_mexico
25400  eqq_fuel_c_mexico
25401  eqq_elffren_c_mexico
25402   
25403  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
25406  *-------------------------------------------------------------------------------
25407  * Carbon Emissions
25408  * - Total CO2 emissions and CO2 Fossil fuel and Industry
25409  * - CO2 emission costs
25410  * - GHG permit market
25411  *-------------------------------------------------------------------------------
25412   
25414   
25415  eqq_emi_lim_c_mexico
25416  eqq_emi_tree_c_mexico
25417  eqq_emi_co2ffi_c_mexico
25418   
25419  eqcost_emi_co2_c_mexico
25420   
25421  eq_mkt_clearing_nip_c_mexico
25422   
25423  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
25426  *-------------------------------------------------------------------------------
25427  * Research & Development
25428  * Options:
25429  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
25430  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
25431  *-------------------------------------------------------------------------------
25432   
25434   
25435  eqk_rd_c_mexico
25436  eqspill_coop_c_mexico
25437  eqspill_lead_c_mexico
25438  eqspill_foll_c_mexico
25439  eqmcost_inv_back_c_mexico
25440  eqmcost_inv_back_lbd_c_mexico
25441   
25442  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
25445  *-------------------------------------------------------------------------------
25446  * Default Climate Policy Implementation
25447  *
25448  * Options:
25449  *    --policy={bau (default),ctax}
25450  *        Implement a climate policy setting
25451  *  [ --scen= ]
25452  *        Policy variant.
25453  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
25454  *          * XXX for a fixed percentage/yr (e.g. 5) growth
25455  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
25456  *  [ --ctax_year=2020 ]
25457  *        Starting year of the carbon tax
25458  *  [ --ctax_initial=30 ]
25459  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
25460  *
25461  *-------------------------------------------------------------------------------
25463   
25464  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
25466  *-------------------------------------------------------------------------------
25467  * Energy efficiency
25468  *-------------------------------------------------------------------------------
25469   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
25472  *-------------------------------------------------------------------------------
25473  * Hydro Power
25474  *-------------------------------------------------------------------------------
25475   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
25478  *-------------------------------------------------------------------------------
25479  * System Integration:
25480  * - Capacity constraint
25481  * - Flexibility constraint
25482  * - Grid Investment
25483  * - Capacity growth constraint
25484  *-------------------------------------------------------------------------------
25485   
25487   
25488  eqq_elintren_c_mexico
25489  eqflex_c_mexico
25490  eqk_en_grid_c_mexico
25491  eqk_en_grid_to_k_en_c_mexico
25492  eqfirm_capacity_c_mexico
25493  eqcap_growth_c_mexico
25494   
25495  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
25498  *-------------------------------------------------------------------------------
25499  * Nuclear power plants
25500  *-------------------------------------------------------------------------------
25501   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
25504  *-------------------------------------------------------------------------------
25505  * GHG module
25506  * - CH4 FFI + CH4 waste + CH4 open fires
25507  * - N2O FFI + N2O waste + N2O open fires
25508  *-------------------------------------------------------------------------------
25509   
25511   
25512  eqq_emi_waste_c_mexico
25513  eqq_emi_n2o_ffi_c_mexico
25514  eqq_emi_ch4_ffi_c_mexico
25515   
25516  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
25519  *-------------------------------------------------------------------------------
25520  * F-gases
25521  * - LLF
25522  * - SLF
25523  *-------------------------------------------------------------------------------
25524   
25526   
25527  eqq_emi_fgases_c_mexico
25528   
25529  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
25532  *-------------------------------------------------------------------------------
25533  * Landuse [simplified version of the land-use model]
25534  *-------------------------------------------------------------------------------
25535   
25537   
25538  eq_wbio_c_mexico
25539  eqcost_pes_wbio_c_mexico
25540   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
25543  *-------------------------------------------------------------------------------
25544  * Bioenergy power plant
25545  *-------------------------------------------------------------------------------
25546   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
25549  *-------------------------------------------------------------------------------
25550  * Traditional Biofuels
25551  * - Requires the precedence of mod_landuse
25552  *-------------------------------------------------------------------------------
25553   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
25556  *-------------------------------------------------------------------------------
25557  * Advanced biofuel
25558  * - Require the precedence of mod_landuse
25559  *-------------------------------------------------------------------------------
25560   
25562   
25563  eqq_en_lim_advbiofuel_c_mexico
25564  eqmcost_fuel_advbiofuel_c_mexico
25565   
25566  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
25569  *-------------------------------------------------------------------------------
25570  * Carbon Capture and Sequestration
25571  *-------------------------------------------------------------------------------
25572   
25574   
25575  eqq_emi_ccs_c_mexico
25576  eqcost_emi_sinks_c_mexico
25577  eq_stor_ccs_cum_c_mexico
25578  eq_emi_stor_ccs_c_mexico
25579  eq_emi_leak_ccs_c_mexico
25580   
25581  *-------------------------------------------------------------------------------
25583   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
25585  *-------------------------------------------------------------------------------
25586  * Coal for non-electric sectors
25587  * - Coke Plants
25588  * - Industrial and Commercial combined-heat-and-power (CHP)
25589  * - Others
25590  *-------------------------------------------------------------------------------
25591   
25593   
25594  eqcost_en_nelcoal_c_mexico
25595  eqq_ncoalabat_monotone_c_mexico
25596  eqq_en_nelcoalccs_max_c_mexico
25597   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
25600  *-------------------------------------------------------------------------------
25601  * Wind energy module
25602  * - onshore and offshore
25603  *-------------------------------------------------------------------------------
25604   
25606   
25607  eqq_en_mu_windon_c_mexico
25608  eqq_en_mu_windoff_c_mexico
25609  eqk_en_windon_c_mexico
25610  eqk_en_windoff_c_mexico
25611  eqq_en_windon_sum_c_mexico
25612  eqq_en_windoff_sum_c_mexico
25613  eqk_en_windon_sum_c_mexico
25614  eqk_en_windoff_sum_c_mexico
25615  eqi_en_windon_sum_c_mexico
25616  eqi_en_windoff_sum_c_mexico
25617   
25619   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
25621  *-------------------------------------------------------------------------------
25622  * Solar Powerplants (PV and CSP) to the electrical system
25623  *-------------------------------------------------------------------------------
25624   
25625  *-------------------------------------------------------------------------------
25627   
25628  eqq_en_mu_pv_c_mexico
25629  eqq_en_mu_csp_c_mexico
25630  eqk_en_pv_c_mexico
25631  eqk_en_csp_c_mexico
25632  eqq_en_pv_sum_c_mexico
25633  eqq_en_csp_sum_c_mexico
25634  eqk_en_pv_sum_c_mexico
25635  eqk_en_csp_sum_c_mexico
25636  eqi_en_pv_sum_c_mexico
25637  eqi_en_csp_sum_c_mexico
25638  eqk_en_solar_comp_c_mexico
25639   
25640  *-------------------------------------------------------------------------------
25642   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
25644  *-------------------------------------------------------------------------------
25645  * Technology development scenarios
25646  *-------------------------------------------------------------------------------
25647   
25649   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
25651  *-------------------------------------------------------------------------------
25652  * Oil Extraction
25653  * Options:
25654  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
25655  *-------------------------------------------------------------------------------
25656   
25658   
25659  eqoilcap_c_mexico
25660  eqoilprod_c_mexico
25661  eqq_out_oil_c_mexico
25662  eqcum_oil_c_mexico
25663  eqcost_oil_c_mexico
25664  eqi_oil_c_mexico
25665  eqi_out_oil_c_mexico
25666  eqq_emi_out_oil_c_mexico
25667   
25668  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
25671  *-------------------------------------------------------------------------------
25672  * Uranium Resources
25673  *-------------------------------------------------------------------------------
25674   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
25677  *-------------------------------------------------------------------------------
25678  * Gas Resources
25679  *-------------------------------------------------------------------------------
25680   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
25683  *-------------------------------------------------------------------------------
25684  * Coal Resources
25685  *-------------------------------------------------------------------------------
25686   
25688   
25689   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
25691  *-------------------------------------------------------------------------------
25692  * Climate
25693  *
25694  * Represents the climate
25695  * - based on the DICE model equations
25696  * - Radiative forcing for non CO2 ghgs
25697  * - parameters calibrated to reproduce MAGICC6.4 default response
25698  *
25699  *  Options:
25700  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
25701  * - $setglobal cooperate_on_climate {'YES','NO'}
25702  * - 'YES'(default): Countries within a coalition act in cooperation
25703  *   'NO': Countries within a coalition act individually
25704  *
25705  *-------------------------------------------------------------------------------
25706   
25708   
25710   
25711  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
25714  *-------------------------------------------------------------------------------
25715  * Long-run Damages from Climate Change
25716  * - Economic impacts
25717  * - Adaptation
25718  *-------------------------------------------------------------------------------
25719   
25721   
25723   
25724  *-------------------------------------------------------------------------------
25726   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
25728  *-------------------------------------------------------------------------------
25729  * Light-duty Vehicles for Personal Transport
25730  *-------------------------------------------------------------------------------
25731   
25733   
25734  eqnb_veh_c_mexico
25735  eqq_en_veh_c_mexico
25736  eqq_el_edv_c_mexico
25737  eqmcost_inv_hybrid_c_mexico
25738  eqmcost_inv_plghybrid_c_mexico
25739  eqmcost_inv_edv_c_mexico
25740  *** newcode
25741  eqq_inv_red_ban_c_mexico
25742  ***
25743  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
25746  *-------------------------------------------------------------------------------
25747  * Road Freight Transport
25748  *-------------------------------------------------------------------------------
25750   
25751  eqnb_frtveh_c_mexico
25752  eqq_en_frtveh_c_mexico
25753  eqq_el_frtedv_c_mexico
25754  eqmcost_inv_hbd_stfr_c_mexico
25755  eqmcost_inv_plghbd_stfr_c_mexico
25756  eqmcost_inv_edv_stfr_c_mexico
25757   
25758  *-------------------------------------------------------------------------------
25760   
25761   
25762   
25763   
25764   
25765   
25766  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
25768  *-------------------------------------------------------------------------------
25769  * Traditional Biomass
25770  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
25771  *  - require post_process to be launch before
25772  *-------------------------------------------------------------------------------
25773   
25775   
25776  * Optional modules
25777   
25778  * Policy modules
25779   
25780  * Calibration
25783  ;
25784   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
25786  *-------------------------------------------------------------------------------
25787  * Call modules by order
25788  *-------------------------------------------------------------------------------
25792   
25793  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
25795  *-------------------------------------------------------------------------------
25796  * Algorithm
25797  *-------------------------------------------------------------------------------
25798   
25800   
25802  * Add the component of the (maximized) objective function as required by the ADMM algorithm
25803  eqobj_c_mexico..
25804      OBJADMM =e= UTILITY -
25805          sum(t, rho_admm('oil',t) / 2 *
25806              sum(n$(map_clt_n('c_mexico',n) and trading_t('oil',t,n)),
25807                  power(
25808                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
25809                      x_admm('oil',t,n) +
25810                      xavg_admm('oil',t) +
25811                      u_admm('oil', t)
25812                  ,2)
25813              )) -
25814          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
25815              sum(n$(map_clt_n('c_mexico',n) and trading_t(c_mkt,t,n)),
25816                  power(
25817                      Q_EMI(c_mkt,t,n) -
25818                      x_admm(c_mkt,t,n) +
25819                      xavg_admm(c_mkt,t) +
25820                      u_admm(c_mkt,t)
25821                  ,2)
25822              ))
25823      ;
25825   
25826  *-------------------------------------------------------------------------------
25828   
25829  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
25831  *-------------------------------------------------------------------------------
25832  * Time
25833  * - Temporal structure
25834  * - Fixed time periods
25835  * - States of the world
25836  *-------------------------------------------------------------------------------
25837   
25839   
25840  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
25842  *-------------------------------------------------------------------------------
25843  * Geographic dimension and mapping with countries
25844  *-------------------------------------------------------------------------------
25845   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
25848  *-------------------------------------------------------------------------------
25849  * Non-Cooperative Setup
25850  *
25851  * Each region is defined as an individual coalition.
25852  *
25853  *-------------------------------------------------------------------------------
25854   
25856   
25857  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
25859  *-------------------------------------------------------------------------------
25860  * Welfare
25861  *-------------------------------------------------------------------------------
25862   
25864   
25865  * Objective function - Welfare to be maximized
25866  equtility_c_mexico..
25867      UTILITY =e=
25868   
25869  * Negishi SWF
25871   
25872  * Welfare functions based on CEBGE
25875                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
25876                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
25877                      ((sum(n$map_clt_n('c_mexico',n),
25878                        (l(t,n) / sum(nn$map_clt_n('c_mexico',nn), l(t,nn))) *
25879                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
25880                       )**(1 / (1 - gamma))
25881                      )**(1 - eta) ) +
25882                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
25883                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
25884                      ((sum(n$map_clt_n('c_mexico',n),
25885                        (l(t,n) / sum(nn$map_clt_n('c_mexico',nn), l(t,nn))) *
25886                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
25887                       )**(1 / (1 - gamma))
25888                      )**(1 - eta) )
25889                  )**(1/(1 - eta)) * 1e6
25892   
25893   
25894  ;
25895   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
25898  *-------------------------------------------------------------------------------
25899  * Economy
25900  * - Production and Consumption definition
25901  * - Top-level of the production function
25902  * Options:
25903  * --original_ssp=1 : original SSP population and GDP data
25904  *-------------------------------------------------------------------------------
25905   
25907   
25908  * Production
25909  eqq_y_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
25910   
25911      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
25912                     ## Climate feedback on economy
25914                     ## Net cost of Primary and Secondary Energy Sources
25915                     - sum(fuel, COST_FUEL(fuel,t,n))
25916                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
25917                     - sum(cce, COST_EMI(cce,t,n))
25918                     ## Carbon tax
25919                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
25920                     ## Additionnal costs on gross product
25921                     - sum(ccy, COST_Y(ccy,t,n))
25922  ;
25923   
25924  * Consumption
25925  eqq_cc_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
25926      Q('cc',t,n) =e= Q('y',t,n)
25927                      ## Investments in goods g (final good, adaptation)
25928                      -sum(g, I(g,t,n))
25929                      ## Investments in r&d
25930                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
25931                      ## Investments in energy technlogies
25932                      -sum(jinv, I_EN(jinv,t,n))
25933                       ## Investments in grid infrastructures
25934                      - I_EN_GRID(t,n)
25935                      ## Investments in extraction sector
25936                      -sum(extract(f), I_OUT(f,t,n))
25937                      ## O&M for energy technlogies
25938                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
25939                      ## O&M for extraction
25940                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
25941                      ## Energy technology penalty costs
25942                      -sum(jpenalty(j), COST_EN(j,t,n))
25943  ;
25944   
25945  * Capital accumulation
25946  eqk_c_mexico(g,t,tp1,n)$(map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
25947      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
25948   
25949  * Energy services
25950  eqq_fen_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
25951      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
25952   
25953  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
25956  *-------------------------------------------------------------------------------
25957  * Energy sector
25958  *-------------------------------------------------------------------------------
25959   
25961   
25962  *-------------------------------------------------------------------------------
25963  * Production - Energy sector
25964  *-------------------------------------------------------------------------------
25965   
25966  eqq_en_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
25967      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
25968   
25969  *-------------------------------------------------------------------------------
25970  * Production - Electrical sector
25971  *-------------------------------------------------------------------------------
25972   
25973  eqq_el_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
25974      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
25975   
25976  eqq_el2_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
25977      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
25978   
25979  eqq_elffren_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
25980      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
25981  eqq_elff_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
25982      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
25983   
25984  eqq_ces_el_c_mexico(ices_el,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
25985      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
25986  ;
25987   
25988  *-------------------------------------------------------------------------------
25989  * Production - Non-electrical sector
25990  *-------------------------------------------------------------------------------
25991   
25992  eqq_nel_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
25993      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
25994   
25995  eqq_nelog_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
25996      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
25997  ;
25998  eqq_ces_nelgas_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
25999      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
26000   
26001  *-------------------------------------------------------------------------------
26002  * PES and fuels
26003  *-------------------------------------------------------------------------------
26004   
26005  eqq_fuel_c_mexico(fuel,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
26006      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
26007   
26008  *-------------------------------------------------------------------------------
26009  * Cost
26010  *-------------------------------------------------------------------------------
26011   
26012  * Net cost of Primary Energy Supplies
26013  eqcost_pes_c_mexico(f,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
26014      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
26015                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
26016   
26017  * Net cost of Secondary Energy Supplies
26018  eqcost_ses_c_mexico(s,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26019      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
26020   
26021   
26022  *-------------------------------------------------------------------------------
26023  * Market balances
26024  *-------------------------------------------------------------------------------
26025   
26026  eq_mkt_clearing_oil_c_mexico(t,'c_mexico')$(internal('oil'))..
26027      sum( n$(map_clt_n('c_mexico',n) and trading_t('oil',t,n)),
26028          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
26029      ) =e= 0;
26030   
26031  *-------------------------------------------------------------------------------
26032  * New capital in the energy sector
26033  *-------------------------------------------------------------------------------
26034   
26035  * Electrical generation plants (new)
26036  eqk_en_c_mexico(jinv,t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
26037      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
26038                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
26039   
26040  *-------------------------------------------------------------------------------
26041  * ENERGY
26042  *-------------------------------------------------------------------------------
26043   
26044  * Capacity limits in the electrical sector
26045  eqq_en_mu_c_mexico(jel,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
26046      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
26047   
26048  * Efficiency of energy technology sector
26049  eqq_en_in_c_mexico(jfed,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
26050      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
26051                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
26052   
26053  * Energy generation "tree"
26054  eqq_en_tree_c_mexico(j,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
26055      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
26056   
26057  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
26060  *-------------------------------------------------------------------------------
26061  * Carbon Emissions
26062  * - Total CO2 emissions and CO2 Fossil fuel and Industry
26063  * - CO2 emission costs
26064  * - GHG permit market
26065  *-------------------------------------------------------------------------------
26066   
26068   
26069  * GHG emission cap
26070  eqq_emi_lim_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
26071      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
26072                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
26073   
26074  * Compute total and sectoral emissions
26075  eqq_emi_tree_c_mexico(t,n,e)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
26076      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
26077   
26078  * Industrial CO2 emissions
26079  eqq_emi_co2ffi_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26080      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
26081                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
26082                              # Emissions from biomass
26083                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
26084                              # Emissions from fuel extraction
26085                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
26086                              # Captured emissions
26087                              sum(sink, Q_EMI(sink,t,n));
26088   
26089  * CO2 emission costs
26090  eqcost_emi_co2_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26091      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
26092   
26093  * Emission permit market clearing for internal market
26094  eq_mkt_clearing_nip_c_mexico(c_mkt,t,'c_mexico')$(internal(c_mkt))..
26095      sum(n$(map_clt_n('c_mexico',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
26096   
26097  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
26100  *-------------------------------------------------------------------------------
26101  * Research & Development
26102  * Options:
26103  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
26104  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
26105  *-------------------------------------------------------------------------------
26106   
26108   
26109  * Knowledge stock accumulation
26110  eqk_rd_c_mexico(rd,t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
26111                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
26112                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
26113                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
26114                                        SPILL(rd,t,n)**rd_coef(rd,'d');
26115   
26116  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
26117  eqspill_coop_c_mexico(rd,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_mexico'))..
26118          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
26119                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_mexico',nn)), K_RD(rd,t,nn)) +
26120                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_mexico',nn))), K_RD.l(rd,t,nn))
26121                            ) *
26122                            (
26123                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_mexico',nn)), K_RD(rd,t,nn)) +
26124                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_mexico',nn))), K_RD.l(rd,t,nn))
26125                              ) - K_RD(rd,t,n)
26126                            );
26127   
26128  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
26129  eqspill_lead_c_mexico(rd,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_mexico')) and leadrd(rd,n))..
26130                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
26131   
26132  * No-cooperation : a follower sees is negative effect on the quantity he can grab
26133  eqspill_foll_c_mexico(rd,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_mexico')) and (not leadrd(rd,n)))..
26134                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
26135   
26136  *- Only LbR (without learning by doing)
26137  eqmcost_inv_back_c_mexico(jrd,t,tt,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
26138                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
26139                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
26140   
26141  *- LbR together with learning by doing ==> Two-factor learning curve
26142  eqmcost_inv_back_lbd_c_mexico(jrd,t,tt,tfirst,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
26143                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
26144                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
26145                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
26146   
26147  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
26150  *-------------------------------------------------------------------------------
26151  * Default Climate Policy Implementation
26152  *
26153  * Options:
26154  *    --policy={bau (default),ctax}
26155  *        Implement a climate policy setting
26156  *  [ --scen= ]
26157  *        Policy variant.
26158  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
26159  *          * XXX for a fixed percentage/yr (e.g. 5) growth
26160  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
26161  *  [ --ctax_year=2020 ]
26162  *        Starting year of the carbon tax
26163  *  [ --ctax_initial=30 ]
26164  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
26165  *
26166  *-------------------------------------------------------------------------------
26168   
26169  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
26171  *-------------------------------------------------------------------------------
26172  * Energy efficiency
26173  *-------------------------------------------------------------------------------
26174   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
26177  *-------------------------------------------------------------------------------
26178  * Hydro Power
26179  *-------------------------------------------------------------------------------
26180   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
26183  *-------------------------------------------------------------------------------
26184  * System Integration:
26185  * - Capacity constraint
26186  * - Flexibility constraint
26187  * - Grid Investment
26188  * - Capacity growth constraint
26189  *-------------------------------------------------------------------------------
26190   
26192   
26193   
26194  * Renewable CES
26195   
26196  * Definition of the renewable CES
26197  eqq_elintren_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26198      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
26199   
26200  * Capacity constraint
26201   
26203  eqfirm_capacity_c_mexico(t,n)$(map_clt_n('c_mexico',n) and (not tfix(t)) and year(t) gt 2005)..
26204                   sum(jel_firm, K_EN(jel_firm,t,n))
26205                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
26206                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
26207                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
26208                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
26209                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
26210                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
26211                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
26212                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
26213                                       ) / yearly_hours
26214  ;
26216   
26217  * Flexibility constraint
26218  eqflex_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26219          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
26220                             ( Q_EN('el',t,n) -
26221                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
26222                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
26223                             ) * flex_coeff('load')
26224  ;
26225   
26226  * Grid
26227   
26228  ** Grid depreciation and investments
26229  eqk_en_grid_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
26230                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
26231                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
26232   
26233  ** Grid adjustment to power capacity
26234  eqk_en_grid_to_k_en_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26235                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
26236                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
26237                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
26238                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
26239                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
26240                                     ) / grid_cost +
26241                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
26242                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
26243                                      K_EN('elcsp',t,n);
26244  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
26245   
26246  * Capacity growth constraint
26247  eqcap_growth_c_mexico(jinv,t,tp1,tp2,n)$((map_clt_n('c_mexico',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
26248                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
26249                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
26250   
26251  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
26254  *-------------------------------------------------------------------------------
26255  * Nuclear power plants
26256  *-------------------------------------------------------------------------------
26257   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
26260  *-------------------------------------------------------------------------------
26261  * GHG module
26262  * - CH4 FFI + CH4 waste + CH4 open fires
26263  * - N2O FFI + N2O waste + N2O open fires
26264  *-------------------------------------------------------------------------------
26265   
26267   
26268  * CH4, N2O waste emissions
26269  eqq_emi_waste_c_mexico(waste,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
26270                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
26271   
26272  * n2o FFI
26273  eqq_emi_n2o_ffi_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
26274    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
26275                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
26276                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
26277                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
26278                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
26279                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
26280                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
26281                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
26282                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
26283                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
26284                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
26285                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
26286                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
26287                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
26288                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
26289                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
26290                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
26291                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
26292                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
26293                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
26294                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
26295                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
26296                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
26297                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
26298                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
26299                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
26300                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
26301                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
26302                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
26303                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
26304                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
26305   
26306  * ch4 FFI
26307  eqq_emi_ch4_ffi_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
26308    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
26311  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
26312  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
26313                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
26314                             smax(tt$(year(tt) eq 2015),
26315                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
26318  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
26319  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
26320                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
26321   
26322  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
26325  *-------------------------------------------------------------------------------
26326  * F-gases
26327  * - LLF
26328  * - SLF
26329  *-------------------------------------------------------------------------------
26330   
26332   
26333  * F-gases emissions
26334  eqq_emi_fgases_c_mexico(fgases,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
26335                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
26336   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
26339  *-------------------------------------------------------------------------------
26340  * Landuse [simplified version of the land-use model]
26341  *-------------------------------------------------------------------------------
26342   
26344   
26345  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
26346  eq_wbio_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26347      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
26348   
26350  * Cost of all woody biomass produced for advanced biofuels and woody biomass
26351  eqcost_pes_wbio_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26352      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
26354   
26355  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
26358  *-------------------------------------------------------------------------------
26359  * Bioenergy power plant
26360  *-------------------------------------------------------------------------------
26361   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
26364  *-------------------------------------------------------------------------------
26365  * Traditional Biofuels
26366  * - Requires the precedence of mod_landuse
26367  *-------------------------------------------------------------------------------
26368   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
26371  *-------------------------------------------------------------------------------
26372  * Advanced biofuel
26373  * - Require the precedence of mod_landuse
26374  *-------------------------------------------------------------------------------
26375   
26377   
26378  * Limitations for nel backstops
26379  eqq_en_lim_advbiofuel_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
26380               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
26381               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
26382   
26383  * Peculiarity of advbiofuel
26384  eqmcost_fuel_advbiofuel_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26385                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
26386   
26387  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
26390  *-------------------------------------------------------------------------------
26391  * Carbon Capture and Sequestration
26392  *-------------------------------------------------------------------------------
26393   
26395   
26396  eqq_emi_ccs_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26397                  Q_EMI('ccs_plant',t,n) =e=
26398                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
26399                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
26400  ;
26401   
26402  eqcost_emi_sinks_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26403                  COST_EMI('ccs_plant',t,n) =e=
26404                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
26405                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
26406  ;
26407   
26408  eq_stor_ccs_cum_c_mexico(ccs_stor,tp1,t,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
26409                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
26410  ;
26411   
26412  eq_emi_stor_ccs_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26413                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
26414  ;
26415   
26416  eq_emi_leak_ccs_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26417                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
26418   
26419  *-------------------------------------------------------------------------------
26421   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
26423  *-------------------------------------------------------------------------------
26424  * Coal for non-electric sectors
26425  * - Coke Plants
26426  * - Industrial and Commercial combined-heat-and-power (CHP)
26427  * - Others
26428  *-------------------------------------------------------------------------------
26429   
26431   
26432  eqcost_en_nelcoal_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26433           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
26434                                          nelcoal_max_abat(t,n) *
26435                                          (nelcoal_cmac(n,'a') *
26436                                            Q_EN('nelcoalabat',t,n) /
26437                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
26438                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
26439                                              (exp(nelcoal_cmac(n,'c') *
26440                                                (Q_EN('nelcoalabat',t,n)/
26441                                                  (nelcoal_max_abat(t,n) *
26442                                                      nelcoal_baseline(t,n))
26443                                                  ) - 1 )
26444                                              )
26445                                          );
26446   
26447  eqq_ncoalabat_monotone_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
26448          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
26449   
26450  * ensure Q_EN is lower than K_EN for CCS as not in jel
26451  eqq_en_nelcoalccs_max_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26452          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
26453   
26454  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
26457  *-------------------------------------------------------------------------------
26458  * Wind energy module
26459  * - onshore and offshore
26460  *-------------------------------------------------------------------------------
26461   
26463   
26464  * Capacity limits in the wind onshore electrical sector
26465  eqq_en_mu_windon_c_mexico(wind_dist,wind_class,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
26466      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
26467   
26468  * Capacity limits in the wind offshore electrical sector
26469  eqq_en_mu_windoff_c_mexico(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
26470      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
26471   
26472  * Wind onshore electrical generation plants (new)
26473  eqk_en_windon_c_mexico(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
26474      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
26475                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
26476   
26477  * Wind offshore electrical generation plants (new)
26478  eqk_en_windoff_c_mexico(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
26479      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
26480                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
26481   
26482  * Total onshore wind energy production
26483  eqq_en_windon_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26484                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
26485   
26486  * Total offshore wind energy production
26487  eqq_en_windoff_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26488                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
26489   
26490  * Total onshore wind capacity
26491  eqk_en_windon_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26492                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
26493   
26494  * Total offshore wind capacity
26495  eqk_en_windoff_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26496                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
26497   
26498  * Total onshore wind investment
26499  eqi_en_windon_sum_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
26500                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
26501   
26502  * Total offshore wind investment
26503  eqi_en_windoff_sum_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
26504                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
26505   
26506  *-------------------------------------------------------------------------------
26508   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
26510  *-------------------------------------------------------------------------------
26511  * Solar Powerplants (PV and CSP) to the electrical system
26512  *-------------------------------------------------------------------------------
26513   
26514  *-------------------------------------------------------------------------------
26516   
26517   
26518  * Capacity limits in the pv electrical sector
26519  eqq_en_mu_pv_c_mexico(solar_dist,solar_class,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
26520                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
26521   
26522  * Capacity limits in the csp electrical sector
26523  eqq_en_mu_csp_c_mexico(solar_dist,solar_class,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
26524                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
26525   
26526  * PV electrical generation plants (new)
26527  eqk_en_pv_c_mexico(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
26528                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
26529                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
26530   
26531  * CSP electrical generation plants (new)
26532  eqk_en_csp_c_mexico(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
26533                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
26534                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
26535   
26536  * Total PV energy production
26537  eqq_en_pv_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26538                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
26539   
26540  * Total CSP energy production
26541  eqq_en_csp_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26542                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
26543   
26544  * Total PV capacity
26545  eqk_en_pv_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26546                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
26547   
26548  * Total CSP capacity
26549  eqk_en_csp_sum_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26550                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
26551   
26552  * Total PV investment
26553  eqi_en_pv_sum_c_mexico(t,tp1,n)$(map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
26554                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
26555   
26556  * Total CSP investment
26557  eqi_en_csp_sum_c_mexico(t,tp1,n)$(map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
26558                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
26559   
26560  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
26561  eqk_en_solar_comp_c_mexico(t,n,solar_dist)$(map_clt_n('c_mexico',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
26562                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
26563                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
26564   
26565   
26566   
26567  *-------------------------------------------------------------------------------
26569   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
26571  *-------------------------------------------------------------------------------
26572  * Technology development scenarios
26573  *-------------------------------------------------------------------------------
26574   
26576   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
26578  *-------------------------------------------------------------------------------
26579  * Oil Extraction
26580  * Options:
26581  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
26582  *-------------------------------------------------------------------------------
26583   
26585   
26586  * Capacity
26587  eqoilcap_c_mexico(t,tp1,n,oilg)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
26588      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
26589   
26590  * Production
26591  eqoilprod_c_mexico(t,tp1,n,oilg)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
26592      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
26593   
26594  eqq_out_oil_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26595      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
26596   
26597  * Cumulative production
26598  eqcum_oil_c_mexico(t,tp1,n,oilg)$((map_clt_n('c_mexico',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
26599      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
26600   
26601  * Cost
26602  eqcost_oil_c_mexico(t,tp1,n,oilg)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
26603      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
26604                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
26605                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
26606   
26607  * Investments
26608  eqi_oil_c_mexico(t,tp1,n,oilg)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
26609      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
26610   
26611  * Total investment
26612  eqi_out_oil_c_mexico(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
26613      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
26614   
26615  * Emissions
26616  eqq_emi_out_oil_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26617      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
26618   
26619  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
26622  *-------------------------------------------------------------------------------
26623  * Uranium Resources
26624  *-------------------------------------------------------------------------------
26625   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
26628  *-------------------------------------------------------------------------------
26629  * Gas Resources
26630  *-------------------------------------------------------------------------------
26631   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
26634  *-------------------------------------------------------------------------------
26635  * Coal Resources
26636  *-------------------------------------------------------------------------------
26637   
26639   
26640   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
26642  *-------------------------------------------------------------------------------
26643  * Climate
26644  *
26645  * Represents the climate
26646  * - based on the DICE model equations
26647  * - Radiative forcing for non CO2 ghgs
26648  * - parameters calibrated to reproduce MAGICC6.4 default response
26649  *
26650  *  Options:
26651  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
26652  * - $setglobal cooperate_on_climate {'YES','NO'}
26653  * - 'YES'(default): Countries within a coalition act in cooperation
26654  *   'NO': Countries within a coalition act individually
26655  *
26656  *-------------------------------------------------------------------------------
26657   
26659   
26661   
26662  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
26665  *-------------------------------------------------------------------------------
26666  * Long-run Damages from Climate Change
26667  * - Economic impacts
26668  * - Adaptation
26669  *-------------------------------------------------------------------------------
26670   
26672   
26674   
26675  *-------------------------------------------------------------------------------
26677   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
26679  *-------------------------------------------------------------------------------
26680  * Light-duty Vehicles for Personal Transport
26681  *-------------------------------------------------------------------------------
26682   
26684   
26685  *** newcode
26686  eqq_inv_red_ban_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26687      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
26688   
26689  ***
26690  *- Number of light duty vehicles
26691  eqnb_veh_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26692      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
26693   
26694  *- Yearly energy demand of vehicles
26695  eqq_en_veh_c_mexico(jveh,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26696      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
26697   
26698  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
26699  eqq_el_edv_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26700      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
26701   
26702  *- Investment cost for hybrid vehicles
26703  eqmcost_inv_hybrid_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
26704                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
26705   
26706  *- Investment cost for plug-in hybrid vehicles
26707  eqmcost_inv_plghybrid_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
26708                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
26709   
26710  *- Investment cost for electric drive vehicles
26711  eqmcost_inv_edv_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
26712                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
26713   
26714  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
26717  *-------------------------------------------------------------------------------
26718  * Road Freight Transport
26719  *-------------------------------------------------------------------------------
26721   
26722  *-  Number of freight vehicles
26723  eqnb_frtveh_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
26724                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
26725   
26726  *-  Yearly fuel consumption of freight vehicles
26727  eqq_en_frtveh_c_mexico(jfrt,t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26728                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
26729   
26730  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
26731  eqq_el_frtedv_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)))..
26732                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
26733   
26734  *-  Investment cost for hbd_stfr vehicle
26735  eqmcost_inv_hbd_stfr_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
26736                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
26737   
26738  *-  Investment cost for plug-in hbd_stfr vehicle
26739  eqmcost_inv_plghbd_stfr_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
26740                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
26741   
26742  *-  Investment cost for electric drive vehicle
26743  eqmcost_inv_edv_stfr_c_mexico(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
26744                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
26745   
26746  *-------------------------------------------------------------------------------
26748   
26749   
26750   
26751   
26752   
26753   
26754  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
26756  *-------------------------------------------------------------------------------
26757  * Traditional Biomass
26758  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
26759  *  - require post_process to be launch before
26760  *-------------------------------------------------------------------------------
26761   
26763   
26764  * Optional modules
26765   
26766  * Policy modules
26767   
26768  * Calibration
26771   
26772   
26773  model witch_c_mexico /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
26775  *-------------------------------------------------------------------------------
26776  * Call modules by order
26777  *-------------------------------------------------------------------------------
26781   
26782  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
26784  *-------------------------------------------------------------------------------
26785  * Algorithm
26786  *-------------------------------------------------------------------------------
26787   
26789   
26790  eqobj_c_mexico
26791   
26792  *-------------------------------------------------------------------------------
26794   
26795  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
26797  *-------------------------------------------------------------------------------
26798  * Time
26799  * - Temporal structure
26800  * - Fixed time periods
26801  * - States of the world
26802  *-------------------------------------------------------------------------------
26803   
26805   
26806  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
26808  *-------------------------------------------------------------------------------
26809  * Geographic dimension and mapping with countries
26810  *-------------------------------------------------------------------------------
26811   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
26814  *-------------------------------------------------------------------------------
26815  * Non-Cooperative Setup
26816  *
26817  * Each region is defined as an individual coalition.
26818  *
26819  *-------------------------------------------------------------------------------
26820   
26822   
26823  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
26825  *-------------------------------------------------------------------------------
26826  * Welfare
26827  *-------------------------------------------------------------------------------
26828   
26830   
26831  equtility_c_mexico
26832   
26833  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
26836  *-------------------------------------------------------------------------------
26837  * Economy
26838  * - Production and Consumption definition
26839  * - Top-level of the production function
26840  * Options:
26841  * --original_ssp=1 : original SSP population and GDP data
26842  *-------------------------------------------------------------------------------
26843   
26845   
26846  eqk_c_mexico
26847  eqq_cc_c_mexico
26848  eqq_fen_c_mexico
26849  eqq_y_c_mexico
26850   
26851  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
26854  *-------------------------------------------------------------------------------
26855  * Energy sector
26856  *-------------------------------------------------------------------------------
26857   
26859   
26860  eq_mkt_clearing_oil_c_mexico
26861  eqcost_pes_c_mexico
26862  eqcost_ses_c_mexico
26863  eqk_en_c_mexico
26864  eqq_ces_el_c_mexico
26865  eqq_ces_nelgas_c_mexico
26866  eqq_el2_c_mexico
26867  eqq_el_c_mexico
26868  eqq_elff_c_mexico
26869  eqq_en_c_mexico
26870  eqq_en_in_c_mexico
26871  eqq_en_mu_c_mexico
26872  eqq_en_tree_c_mexico
26873  eqq_nel_c_mexico
26874  eqq_nelog_c_mexico
26875  eqq_fuel_c_mexico
26876  eqq_elffren_c_mexico
26877   
26878  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
26881  *-------------------------------------------------------------------------------
26882  * Carbon Emissions
26883  * - Total CO2 emissions and CO2 Fossil fuel and Industry
26884  * - CO2 emission costs
26885  * - GHG permit market
26886  *-------------------------------------------------------------------------------
26887   
26889   
26890  eqq_emi_lim_c_mexico
26891  eqq_emi_tree_c_mexico
26892  eqq_emi_co2ffi_c_mexico
26893   
26894  eqcost_emi_co2_c_mexico
26895   
26896  eq_mkt_clearing_nip_c_mexico
26897   
26898  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
26901  *-------------------------------------------------------------------------------
26902  * Research & Development
26903  * Options:
26904  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
26905  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
26906  *-------------------------------------------------------------------------------
26907   
26909   
26910  eqk_rd_c_mexico
26911  eqspill_coop_c_mexico
26912  eqspill_lead_c_mexico
26913  eqspill_foll_c_mexico
26914  eqmcost_inv_back_c_mexico
26915  eqmcost_inv_back_lbd_c_mexico
26916   
26917  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
26920  *-------------------------------------------------------------------------------
26921  * Default Climate Policy Implementation
26922  *
26923  * Options:
26924  *    --policy={bau (default),ctax}
26925  *        Implement a climate policy setting
26926  *  [ --scen= ]
26927  *        Policy variant.
26928  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
26929  *          * XXX for a fixed percentage/yr (e.g. 5) growth
26930  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
26931  *  [ --ctax_year=2020 ]
26932  *        Starting year of the carbon tax
26933  *  [ --ctax_initial=30 ]
26934  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
26935  *
26936  *-------------------------------------------------------------------------------
26938   
26939  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
26941  *-------------------------------------------------------------------------------
26942  * Energy efficiency
26943  *-------------------------------------------------------------------------------
26944   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
26947  *-------------------------------------------------------------------------------
26948  * Hydro Power
26949  *-------------------------------------------------------------------------------
26950   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
26953  *-------------------------------------------------------------------------------
26954  * System Integration:
26955  * - Capacity constraint
26956  * - Flexibility constraint
26957  * - Grid Investment
26958  * - Capacity growth constraint
26959  *-------------------------------------------------------------------------------
26960   
26962   
26963  eqq_elintren_c_mexico
26964  eqflex_c_mexico
26965  eqk_en_grid_c_mexico
26966  eqk_en_grid_to_k_en_c_mexico
26967  eqfirm_capacity_c_mexico
26968  eqcap_growth_c_mexico
26969   
26970  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
26973  *-------------------------------------------------------------------------------
26974  * Nuclear power plants
26975  *-------------------------------------------------------------------------------
26976   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
26979  *-------------------------------------------------------------------------------
26980  * GHG module
26981  * - CH4 FFI + CH4 waste + CH4 open fires
26982  * - N2O FFI + N2O waste + N2O open fires
26983  *-------------------------------------------------------------------------------
26984   
26986   
26987  eqq_emi_waste_c_mexico
26988  eqq_emi_n2o_ffi_c_mexico
26989  eqq_emi_ch4_ffi_c_mexico
26990   
26991  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
26994  *-------------------------------------------------------------------------------
26995  * F-gases
26996  * - LLF
26997  * - SLF
26998  *-------------------------------------------------------------------------------
26999   
27001   
27002  eqq_emi_fgases_c_mexico
27003   
27004  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
27007  *-------------------------------------------------------------------------------
27008  * Landuse [simplified version of the land-use model]
27009  *-------------------------------------------------------------------------------
27010   
27012   
27013  eq_wbio_c_mexico
27014  eqcost_pes_wbio_c_mexico
27015   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
27018  *-------------------------------------------------------------------------------
27019  * Bioenergy power plant
27020  *-------------------------------------------------------------------------------
27021   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
27024  *-------------------------------------------------------------------------------
27025  * Traditional Biofuels
27026  * - Requires the precedence of mod_landuse
27027  *-------------------------------------------------------------------------------
27028   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
27031  *-------------------------------------------------------------------------------
27032  * Advanced biofuel
27033  * - Require the precedence of mod_landuse
27034  *-------------------------------------------------------------------------------
27035   
27037   
27038  eqq_en_lim_advbiofuel_c_mexico
27039  eqmcost_fuel_advbiofuel_c_mexico
27040   
27041  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
27044  *-------------------------------------------------------------------------------
27045  * Carbon Capture and Sequestration
27046  *-------------------------------------------------------------------------------
27047   
27049   
27050  eqq_emi_ccs_c_mexico
27051  eqcost_emi_sinks_c_mexico
27052  eq_stor_ccs_cum_c_mexico
27053  eq_emi_stor_ccs_c_mexico
27054  eq_emi_leak_ccs_c_mexico
27055   
27056  *-------------------------------------------------------------------------------
27058   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
27060  *-------------------------------------------------------------------------------
27061  * Coal for non-electric sectors
27062  * - Coke Plants
27063  * - Industrial and Commercial combined-heat-and-power (CHP)
27064  * - Others
27065  *-------------------------------------------------------------------------------
27066   
27068   
27069  eqcost_en_nelcoal_c_mexico
27070  eqq_ncoalabat_monotone_c_mexico
27071  eqq_en_nelcoalccs_max_c_mexico
27072   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
27075  *-------------------------------------------------------------------------------
27076  * Wind energy module
27077  * - onshore and offshore
27078  *-------------------------------------------------------------------------------
27079   
27081   
27082  eqq_en_mu_windon_c_mexico
27083  eqq_en_mu_windoff_c_mexico
27084  eqk_en_windon_c_mexico
27085  eqk_en_windoff_c_mexico
27086  eqq_en_windon_sum_c_mexico
27087  eqq_en_windoff_sum_c_mexico
27088  eqk_en_windon_sum_c_mexico
27089  eqk_en_windoff_sum_c_mexico
27090  eqi_en_windon_sum_c_mexico
27091  eqi_en_windoff_sum_c_mexico
27092   
27094   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
27096  *-------------------------------------------------------------------------------
27097  * Solar Powerplants (PV and CSP) to the electrical system
27098  *-------------------------------------------------------------------------------
27099   
27100  *-------------------------------------------------------------------------------
27102   
27103  eqq_en_mu_pv_c_mexico
27104  eqq_en_mu_csp_c_mexico
27105  eqk_en_pv_c_mexico
27106  eqk_en_csp_c_mexico
27107  eqq_en_pv_sum_c_mexico
27108  eqq_en_csp_sum_c_mexico
27109  eqk_en_pv_sum_c_mexico
27110  eqk_en_csp_sum_c_mexico
27111  eqi_en_pv_sum_c_mexico
27112  eqi_en_csp_sum_c_mexico
27113  eqk_en_solar_comp_c_mexico
27114   
27115  *-------------------------------------------------------------------------------
27117   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
27119  *-------------------------------------------------------------------------------
27120  * Technology development scenarios
27121  *-------------------------------------------------------------------------------
27122   
27124   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
27126  *-------------------------------------------------------------------------------
27127  * Oil Extraction
27128  * Options:
27129  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
27130  *-------------------------------------------------------------------------------
27131   
27133   
27134  eqoilcap_c_mexico
27135  eqoilprod_c_mexico
27136  eqq_out_oil_c_mexico
27137  eqcum_oil_c_mexico
27138  eqcost_oil_c_mexico
27139  eqi_oil_c_mexico
27140  eqi_out_oil_c_mexico
27141  eqq_emi_out_oil_c_mexico
27142   
27143  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
27146  *-------------------------------------------------------------------------------
27147  * Uranium Resources
27148  *-------------------------------------------------------------------------------
27149   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
27152  *-------------------------------------------------------------------------------
27153  * Gas Resources
27154  *-------------------------------------------------------------------------------
27155   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
27158  *-------------------------------------------------------------------------------
27159  * Coal Resources
27160  *-------------------------------------------------------------------------------
27161   
27163   
27164   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
27166  *-------------------------------------------------------------------------------
27167  * Climate
27168  *
27169  * Represents the climate
27170  * - based on the DICE model equations
27171  * - Radiative forcing for non CO2 ghgs
27172  * - parameters calibrated to reproduce MAGICC6.4 default response
27173  *
27174  *  Options:
27175  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
27176  * - $setglobal cooperate_on_climate {'YES','NO'}
27177  * - 'YES'(default): Countries within a coalition act in cooperation
27178  *   'NO': Countries within a coalition act individually
27179  *
27180  *-------------------------------------------------------------------------------
27181   
27183   
27185   
27186  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
27189  *-------------------------------------------------------------------------------
27190  * Long-run Damages from Climate Change
27191  * - Economic impacts
27192  * - Adaptation
27193  *-------------------------------------------------------------------------------
27194   
27196   
27198   
27199  *-------------------------------------------------------------------------------
27201   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
27203  *-------------------------------------------------------------------------------
27204  * Light-duty Vehicles for Personal Transport
27205  *-------------------------------------------------------------------------------
27206   
27208   
27209  eqnb_veh_c_mexico
27210  eqq_en_veh_c_mexico
27211  eqq_el_edv_c_mexico
27212  eqmcost_inv_hybrid_c_mexico
27213  eqmcost_inv_plghybrid_c_mexico
27214  eqmcost_inv_edv_c_mexico
27215  *** newcode
27216  eqq_inv_red_ban_c_mexico
27217  ***
27218  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
27221  *-------------------------------------------------------------------------------
27222  * Road Freight Transport
27223  *-------------------------------------------------------------------------------
27225   
27226  eqnb_frtveh_c_mexico
27227  eqq_en_frtveh_c_mexico
27228  eqq_el_frtedv_c_mexico
27229  eqmcost_inv_hbd_stfr_c_mexico
27230  eqmcost_inv_plghbd_stfr_c_mexico
27231  eqmcost_inv_edv_stfr_c_mexico
27232   
27233  *-------------------------------------------------------------------------------
27235   
27236   
27237   
27238   
27239   
27240   
27241  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
27243  *-------------------------------------------------------------------------------
27244  * Traditional Biomass
27245  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
27246  *  - require post_process to be launch before
27247  *-------------------------------------------------------------------------------
27248   
27250   
27251  * Optional modules
27252   
27253  * Policy modules
27254   
27255  * Calibration
27258  /;
27259   
27260  witch_c_mexico.optfile=1;   # the option file solvername.opt is to be used
27261  witch_c_mexico.holdfixed=1; # treat fixed values as constant
27262  witch_c_mexico.scaleopt=1;  # Use scaling for better gradients estimation
27263  witch_c_mexico.solvelink=3; # Use parallel or sequential solving
27264   
27269   
27270  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
27272  *-------------------------------------------------------------------------------
27273  * Call modules by order
27274  *-------------------------------------------------------------------------------
27278   
27279  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
27281  *-------------------------------------------------------------------------------
27282  * Algorithm
27283  *-------------------------------------------------------------------------------
27284   
27286   
27287  eqobj_c_oceania
27288   
27289  *-------------------------------------------------------------------------------
27291   
27292  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
27294  *-------------------------------------------------------------------------------
27295  * Time
27296  * - Temporal structure
27297  * - Fixed time periods
27298  * - States of the world
27299  *-------------------------------------------------------------------------------
27300   
27302   
27303  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
27305  *-------------------------------------------------------------------------------
27306  * Geographic dimension and mapping with countries
27307  *-------------------------------------------------------------------------------
27308   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
27311  *-------------------------------------------------------------------------------
27312  * Non-Cooperative Setup
27313  *
27314  * Each region is defined as an individual coalition.
27315  *
27316  *-------------------------------------------------------------------------------
27317   
27319   
27320  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
27322  *-------------------------------------------------------------------------------
27323  * Welfare
27324  *-------------------------------------------------------------------------------
27325   
27327   
27328  equtility_c_oceania
27329   
27330  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
27333  *-------------------------------------------------------------------------------
27334  * Economy
27335  * - Production and Consumption definition
27336  * - Top-level of the production function
27337  * Options:
27338  * --original_ssp=1 : original SSP population and GDP data
27339  *-------------------------------------------------------------------------------
27340   
27342   
27343  eqk_c_oceania
27344  eqq_cc_c_oceania
27345  eqq_fen_c_oceania
27346  eqq_y_c_oceania
27347   
27348  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
27351  *-------------------------------------------------------------------------------
27352  * Energy sector
27353  *-------------------------------------------------------------------------------
27354   
27356   
27357  eq_mkt_clearing_oil_c_oceania
27358  eqcost_pes_c_oceania
27359  eqcost_ses_c_oceania
27360  eqk_en_c_oceania
27361  eqq_ces_el_c_oceania
27362  eqq_ces_nelgas_c_oceania
27363  eqq_el2_c_oceania
27364  eqq_el_c_oceania
27365  eqq_elff_c_oceania
27366  eqq_en_c_oceania
27367  eqq_en_in_c_oceania
27368  eqq_en_mu_c_oceania
27369  eqq_en_tree_c_oceania
27370  eqq_nel_c_oceania
27371  eqq_nelog_c_oceania
27372  eqq_fuel_c_oceania
27373  eqq_elffren_c_oceania
27374   
27375  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
27378  *-------------------------------------------------------------------------------
27379  * Carbon Emissions
27380  * - Total CO2 emissions and CO2 Fossil fuel and Industry
27381  * - CO2 emission costs
27382  * - GHG permit market
27383  *-------------------------------------------------------------------------------
27384   
27386   
27387  eqq_emi_lim_c_oceania
27388  eqq_emi_tree_c_oceania
27389  eqq_emi_co2ffi_c_oceania
27390   
27391  eqcost_emi_co2_c_oceania
27392   
27393  eq_mkt_clearing_nip_c_oceania
27394   
27395  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
27398  *-------------------------------------------------------------------------------
27399  * Research & Development
27400  * Options:
27401  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
27402  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
27403  *-------------------------------------------------------------------------------
27404   
27406   
27407  eqk_rd_c_oceania
27408  eqspill_coop_c_oceania
27409  eqspill_lead_c_oceania
27410  eqspill_foll_c_oceania
27411  eqmcost_inv_back_c_oceania
27412  eqmcost_inv_back_lbd_c_oceania
27413   
27414  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
27417  *-------------------------------------------------------------------------------
27418  * Default Climate Policy Implementation
27419  *
27420  * Options:
27421  *    --policy={bau (default),ctax}
27422  *        Implement a climate policy setting
27423  *  [ --scen= ]
27424  *        Policy variant.
27425  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
27426  *          * XXX for a fixed percentage/yr (e.g. 5) growth
27427  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
27428  *  [ --ctax_year=2020 ]
27429  *        Starting year of the carbon tax
27430  *  [ --ctax_initial=30 ]
27431  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
27432  *
27433  *-------------------------------------------------------------------------------
27435   
27436  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
27438  *-------------------------------------------------------------------------------
27439  * Energy efficiency
27440  *-------------------------------------------------------------------------------
27441   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
27444  *-------------------------------------------------------------------------------
27445  * Hydro Power
27446  *-------------------------------------------------------------------------------
27447   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
27450  *-------------------------------------------------------------------------------
27451  * System Integration:
27452  * - Capacity constraint
27453  * - Flexibility constraint
27454  * - Grid Investment
27455  * - Capacity growth constraint
27456  *-------------------------------------------------------------------------------
27457   
27459   
27460  eqq_elintren_c_oceania
27461  eqflex_c_oceania
27462  eqk_en_grid_c_oceania
27463  eqk_en_grid_to_k_en_c_oceania
27464  eqfirm_capacity_c_oceania
27465  eqcap_growth_c_oceania
27466   
27467  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
27470  *-------------------------------------------------------------------------------
27471  * Nuclear power plants
27472  *-------------------------------------------------------------------------------
27473   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
27476  *-------------------------------------------------------------------------------
27477  * GHG module
27478  * - CH4 FFI + CH4 waste + CH4 open fires
27479  * - N2O FFI + N2O waste + N2O open fires
27480  *-------------------------------------------------------------------------------
27481   
27483   
27484  eqq_emi_waste_c_oceania
27485  eqq_emi_n2o_ffi_c_oceania
27486  eqq_emi_ch4_ffi_c_oceania
27487   
27488  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
27491  *-------------------------------------------------------------------------------
27492  * F-gases
27493  * - LLF
27494  * - SLF
27495  *-------------------------------------------------------------------------------
27496   
27498   
27499  eqq_emi_fgases_c_oceania
27500   
27501  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
27504  *-------------------------------------------------------------------------------
27505  * Landuse [simplified version of the land-use model]
27506  *-------------------------------------------------------------------------------
27507   
27509   
27510  eq_wbio_c_oceania
27511  eqcost_pes_wbio_c_oceania
27512   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
27515  *-------------------------------------------------------------------------------
27516  * Bioenergy power plant
27517  *-------------------------------------------------------------------------------
27518   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
27521  *-------------------------------------------------------------------------------
27522  * Traditional Biofuels
27523  * - Requires the precedence of mod_landuse
27524  *-------------------------------------------------------------------------------
27525   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
27528  *-------------------------------------------------------------------------------
27529  * Advanced biofuel
27530  * - Require the precedence of mod_landuse
27531  *-------------------------------------------------------------------------------
27532   
27534   
27535  eqq_en_lim_advbiofuel_c_oceania
27536  eqmcost_fuel_advbiofuel_c_oceania
27537   
27538  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
27541  *-------------------------------------------------------------------------------
27542  * Carbon Capture and Sequestration
27543  *-------------------------------------------------------------------------------
27544   
27546   
27547  eqq_emi_ccs_c_oceania
27548  eqcost_emi_sinks_c_oceania
27549  eq_stor_ccs_cum_c_oceania
27550  eq_emi_stor_ccs_c_oceania
27551  eq_emi_leak_ccs_c_oceania
27552   
27553  *-------------------------------------------------------------------------------
27555   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
27557  *-------------------------------------------------------------------------------
27558  * Coal for non-electric sectors
27559  * - Coke Plants
27560  * - Industrial and Commercial combined-heat-and-power (CHP)
27561  * - Others
27562  *-------------------------------------------------------------------------------
27563   
27565   
27566  eqcost_en_nelcoal_c_oceania
27567  eqq_ncoalabat_monotone_c_oceania
27568  eqq_en_nelcoalccs_max_c_oceania
27569   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
27572  *-------------------------------------------------------------------------------
27573  * Wind energy module
27574  * - onshore and offshore
27575  *-------------------------------------------------------------------------------
27576   
27578   
27579  eqq_en_mu_windon_c_oceania
27580  eqq_en_mu_windoff_c_oceania
27581  eqk_en_windon_c_oceania
27582  eqk_en_windoff_c_oceania
27583  eqq_en_windon_sum_c_oceania
27584  eqq_en_windoff_sum_c_oceania
27585  eqk_en_windon_sum_c_oceania
27586  eqk_en_windoff_sum_c_oceania
27587  eqi_en_windon_sum_c_oceania
27588  eqi_en_windoff_sum_c_oceania
27589   
27591   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
27593  *-------------------------------------------------------------------------------
27594  * Solar Powerplants (PV and CSP) to the electrical system
27595  *-------------------------------------------------------------------------------
27596   
27597  *-------------------------------------------------------------------------------
27599   
27600  eqq_en_mu_pv_c_oceania
27601  eqq_en_mu_csp_c_oceania
27602  eqk_en_pv_c_oceania
27603  eqk_en_csp_c_oceania
27604  eqq_en_pv_sum_c_oceania
27605  eqq_en_csp_sum_c_oceania
27606  eqk_en_pv_sum_c_oceania
27607  eqk_en_csp_sum_c_oceania
27608  eqi_en_pv_sum_c_oceania
27609  eqi_en_csp_sum_c_oceania
27610  eqk_en_solar_comp_c_oceania
27611   
27612  *-------------------------------------------------------------------------------
27614   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
27616  *-------------------------------------------------------------------------------
27617  * Technology development scenarios
27618  *-------------------------------------------------------------------------------
27619   
27621   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
27623  *-------------------------------------------------------------------------------
27624  * Oil Extraction
27625  * Options:
27626  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
27627  *-------------------------------------------------------------------------------
27628   
27630   
27631  eqoilcap_c_oceania
27632  eqoilprod_c_oceania
27633  eqq_out_oil_c_oceania
27634  eqcum_oil_c_oceania
27635  eqcost_oil_c_oceania
27636  eqi_oil_c_oceania
27637  eqi_out_oil_c_oceania
27638  eqq_emi_out_oil_c_oceania
27639   
27640  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
27643  *-------------------------------------------------------------------------------
27644  * Uranium Resources
27645  *-------------------------------------------------------------------------------
27646   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
27649  *-------------------------------------------------------------------------------
27650  * Gas Resources
27651  *-------------------------------------------------------------------------------
27652   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
27655  *-------------------------------------------------------------------------------
27656  * Coal Resources
27657  *-------------------------------------------------------------------------------
27658   
27660   
27661   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
27663  *-------------------------------------------------------------------------------
27664  * Climate
27665  *
27666  * Represents the climate
27667  * - based on the DICE model equations
27668  * - Radiative forcing for non CO2 ghgs
27669  * - parameters calibrated to reproduce MAGICC6.4 default response
27670  *
27671  *  Options:
27672  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
27673  * - $setglobal cooperate_on_climate {'YES','NO'}
27674  * - 'YES'(default): Countries within a coalition act in cooperation
27675  *   'NO': Countries within a coalition act individually
27676  *
27677  *-------------------------------------------------------------------------------
27678   
27680   
27682   
27683  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
27686  *-------------------------------------------------------------------------------
27687  * Long-run Damages from Climate Change
27688  * - Economic impacts
27689  * - Adaptation
27690  *-------------------------------------------------------------------------------
27691   
27693   
27695   
27696  *-------------------------------------------------------------------------------
27698   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
27700  *-------------------------------------------------------------------------------
27701  * Light-duty Vehicles for Personal Transport
27702  *-------------------------------------------------------------------------------
27703   
27705   
27706  eqnb_veh_c_oceania
27707  eqq_en_veh_c_oceania
27708  eqq_el_edv_c_oceania
27709  eqmcost_inv_hybrid_c_oceania
27710  eqmcost_inv_plghybrid_c_oceania
27711  eqmcost_inv_edv_c_oceania
27712  *** newcode
27713  eqq_inv_red_ban_c_oceania
27714  ***
27715  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
27718  *-------------------------------------------------------------------------------
27719  * Road Freight Transport
27720  *-------------------------------------------------------------------------------
27722   
27723  eqnb_frtveh_c_oceania
27724  eqq_en_frtveh_c_oceania
27725  eqq_el_frtedv_c_oceania
27726  eqmcost_inv_hbd_stfr_c_oceania
27727  eqmcost_inv_plghbd_stfr_c_oceania
27728  eqmcost_inv_edv_stfr_c_oceania
27729   
27730  *-------------------------------------------------------------------------------
27732   
27733   
27734   
27735   
27736   
27737   
27738  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
27740  *-------------------------------------------------------------------------------
27741  * Traditional Biomass
27742  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
27743  *  - require post_process to be launch before
27744  *-------------------------------------------------------------------------------
27745   
27747   
27748  * Optional modules
27749   
27750  * Policy modules
27751   
27752  * Calibration
27755  ;
27756   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
27758  *-------------------------------------------------------------------------------
27759  * Call modules by order
27760  *-------------------------------------------------------------------------------
27764   
27765  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
27767  *-------------------------------------------------------------------------------
27768  * Algorithm
27769  *-------------------------------------------------------------------------------
27770   
27772   
27774  * Add the component of the (maximized) objective function as required by the ADMM algorithm
27775  eqobj_c_oceania..
27776      OBJADMM =e= UTILITY -
27777          sum(t, rho_admm('oil',t) / 2 *
27778              sum(n$(map_clt_n('c_oceania',n) and trading_t('oil',t,n)),
27779                  power(
27780                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
27781                      x_admm('oil',t,n) +
27782                      xavg_admm('oil',t) +
27783                      u_admm('oil', t)
27784                  ,2)
27785              )) -
27786          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
27787              sum(n$(map_clt_n('c_oceania',n) and trading_t(c_mkt,t,n)),
27788                  power(
27789                      Q_EMI(c_mkt,t,n) -
27790                      x_admm(c_mkt,t,n) +
27791                      xavg_admm(c_mkt,t) +
27792                      u_admm(c_mkt,t)
27793                  ,2)
27794              ))
27795      ;
27797   
27798  *-------------------------------------------------------------------------------
27800   
27801  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
27803  *-------------------------------------------------------------------------------
27804  * Time
27805  * - Temporal structure
27806  * - Fixed time periods
27807  * - States of the world
27808  *-------------------------------------------------------------------------------
27809   
27811   
27812  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
27814  *-------------------------------------------------------------------------------
27815  * Geographic dimension and mapping with countries
27816  *-------------------------------------------------------------------------------
27817   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
27820  *-------------------------------------------------------------------------------
27821  * Non-Cooperative Setup
27822  *
27823  * Each region is defined as an individual coalition.
27824  *
27825  *-------------------------------------------------------------------------------
27826   
27828   
27829  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
27831  *-------------------------------------------------------------------------------
27832  * Welfare
27833  *-------------------------------------------------------------------------------
27834   
27836   
27837  * Objective function - Welfare to be maximized
27838  equtility_c_oceania..
27839      UTILITY =e=
27840   
27841  * Negishi SWF
27843   
27844  * Welfare functions based on CEBGE
27847                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
27848                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
27849                      ((sum(n$map_clt_n('c_oceania',n),
27850                        (l(t,n) / sum(nn$map_clt_n('c_oceania',nn), l(t,nn))) *
27851                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
27852                       )**(1 / (1 - gamma))
27853                      )**(1 - eta) ) +
27854                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
27855                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
27856                      ((sum(n$map_clt_n('c_oceania',n),
27857                        (l(t,n) / sum(nn$map_clt_n('c_oceania',nn), l(t,nn))) *
27858                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
27859                       )**(1 / (1 - gamma))
27860                      )**(1 - eta) )
27861                  )**(1/(1 - eta)) * 1e6
27864   
27865   
27866  ;
27867   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
27870  *-------------------------------------------------------------------------------
27871  * Economy
27872  * - Production and Consumption definition
27873  * - Top-level of the production function
27874  * Options:
27875  * --original_ssp=1 : original SSP population and GDP data
27876  *-------------------------------------------------------------------------------
27877   
27879   
27880  * Production
27881  eqq_y_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
27882   
27883      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
27884                     ## Climate feedback on economy
27886                     ## Net cost of Primary and Secondary Energy Sources
27887                     - sum(fuel, COST_FUEL(fuel,t,n))
27888                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
27889                     - sum(cce, COST_EMI(cce,t,n))
27890                     ## Carbon tax
27891                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
27892                     ## Additionnal costs on gross product
27893                     - sum(ccy, COST_Y(ccy,t,n))
27894  ;
27895   
27896  * Consumption
27897  eqq_cc_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
27898      Q('cc',t,n) =e= Q('y',t,n)
27899                      ## Investments in goods g (final good, adaptation)
27900                      -sum(g, I(g,t,n))
27901                      ## Investments in r&d
27902                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
27903                      ## Investments in energy technlogies
27904                      -sum(jinv, I_EN(jinv,t,n))
27905                       ## Investments in grid infrastructures
27906                      - I_EN_GRID(t,n)
27907                      ## Investments in extraction sector
27908                      -sum(extract(f), I_OUT(f,t,n))
27909                      ## O&M for energy technlogies
27910                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
27911                      ## O&M for extraction
27912                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
27913                      ## Energy technology penalty costs
27914                      -sum(jpenalty(j), COST_EN(j,t,n))
27915  ;
27916   
27917  * Capital accumulation
27918  eqk_c_oceania(g,t,tp1,n)$(map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
27919      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
27920   
27921  * Energy services
27922  eqq_fen_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
27923      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
27924   
27925  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
27928  *-------------------------------------------------------------------------------
27929  * Energy sector
27930  *-------------------------------------------------------------------------------
27931   
27933   
27934  *-------------------------------------------------------------------------------
27935  * Production - Energy sector
27936  *-------------------------------------------------------------------------------
27937   
27938  eqq_en_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
27939      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
27940   
27941  *-------------------------------------------------------------------------------
27942  * Production - Electrical sector
27943  *-------------------------------------------------------------------------------
27944   
27945  eqq_el_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
27946      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
27947   
27948  eqq_el2_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
27949      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
27950   
27951  eqq_elffren_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
27952      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
27953  eqq_elff_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
27954      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
27955   
27956  eqq_ces_el_c_oceania(ices_el,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
27957      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
27958  ;
27959   
27960  *-------------------------------------------------------------------------------
27961  * Production - Non-electrical sector
27962  *-------------------------------------------------------------------------------
27963   
27964  eqq_nel_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
27965      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
27966   
27967  eqq_nelog_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
27968      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
27969  ;
27970  eqq_ces_nelgas_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
27971      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
27972   
27973  *-------------------------------------------------------------------------------
27974  * PES and fuels
27975  *-------------------------------------------------------------------------------
27976   
27977  eqq_fuel_c_oceania(fuel,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
27978      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
27979   
27980  *-------------------------------------------------------------------------------
27981  * Cost
27982  *-------------------------------------------------------------------------------
27983   
27984  * Net cost of Primary Energy Supplies
27985  eqcost_pes_c_oceania(f,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
27986      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
27987                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
27988   
27989  * Net cost of Secondary Energy Supplies
27990  eqcost_ses_c_oceania(s,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
27991      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
27992   
27993   
27994  *-------------------------------------------------------------------------------
27995  * Market balances
27996  *-------------------------------------------------------------------------------
27997   
27998  eq_mkt_clearing_oil_c_oceania(t,'c_oceania')$(internal('oil'))..
27999      sum( n$(map_clt_n('c_oceania',n) and trading_t('oil',t,n)),
28000          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
28001      ) =e= 0;
28002   
28003  *-------------------------------------------------------------------------------
28004  * New capital in the energy sector
28005  *-------------------------------------------------------------------------------
28006   
28007  * Electrical generation plants (new)
28008  eqk_en_c_oceania(jinv,t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
28009      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
28010                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
28011   
28012  *-------------------------------------------------------------------------------
28013  * ENERGY
28014  *-------------------------------------------------------------------------------
28015   
28016  * Capacity limits in the electrical sector
28017  eqq_en_mu_c_oceania(jel,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
28018      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
28019   
28020  * Efficiency of energy technology sector
28021  eqq_en_in_c_oceania(jfed,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
28022      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
28023                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
28024   
28025  * Energy generation "tree"
28026  eqq_en_tree_c_oceania(j,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
28027      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
28028   
28029  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
28032  *-------------------------------------------------------------------------------
28033  * Carbon Emissions
28034  * - Total CO2 emissions and CO2 Fossil fuel and Industry
28035  * - CO2 emission costs
28036  * - GHG permit market
28037  *-------------------------------------------------------------------------------
28038   
28040   
28041  * GHG emission cap
28042  eqq_emi_lim_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
28043      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
28044                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
28045   
28046  * Compute total and sectoral emissions
28047  eqq_emi_tree_c_oceania(t,n,e)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
28048      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
28049   
28050  * Industrial CO2 emissions
28051  eqq_emi_co2ffi_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28052      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
28053                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
28054                              # Emissions from biomass
28055                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
28056                              # Emissions from fuel extraction
28057                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
28058                              # Captured emissions
28059                              sum(sink, Q_EMI(sink,t,n));
28060   
28061  * CO2 emission costs
28062  eqcost_emi_co2_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28063      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
28064   
28065  * Emission permit market clearing for internal market
28066  eq_mkt_clearing_nip_c_oceania(c_mkt,t,'c_oceania')$(internal(c_mkt))..
28067      sum(n$(map_clt_n('c_oceania',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
28068   
28069  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
28072  *-------------------------------------------------------------------------------
28073  * Research & Development
28074  * Options:
28075  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
28076  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
28077  *-------------------------------------------------------------------------------
28078   
28080   
28081  * Knowledge stock accumulation
28082  eqk_rd_c_oceania(rd,t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
28083                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
28084                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
28085                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
28086                                        SPILL(rd,t,n)**rd_coef(rd,'d');
28087   
28088  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
28089  eqspill_coop_c_oceania(rd,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_oceania'))..
28090          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
28091                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_oceania',nn)), K_RD(rd,t,nn)) +
28092                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_oceania',nn))), K_RD.l(rd,t,nn))
28093                            ) *
28094                            (
28095                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_oceania',nn)), K_RD(rd,t,nn)) +
28096                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_oceania',nn))), K_RD.l(rd,t,nn))
28097                              ) - K_RD(rd,t,n)
28098                            );
28099   
28100  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
28101  eqspill_lead_c_oceania(rd,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_oceania')) and leadrd(rd,n))..
28102                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
28103   
28104  * No-cooperation : a follower sees is negative effect on the quantity he can grab
28105  eqspill_foll_c_oceania(rd,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_oceania')) and (not leadrd(rd,n)))..
28106                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
28107   
28108  *- Only LbR (without learning by doing)
28109  eqmcost_inv_back_c_oceania(jrd,t,tt,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
28110                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
28111                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
28112   
28113  *- LbR together with learning by doing ==> Two-factor learning curve
28114  eqmcost_inv_back_lbd_c_oceania(jrd,t,tt,tfirst,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
28115                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
28116                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
28117                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
28118   
28119  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
28122  *-------------------------------------------------------------------------------
28123  * Default Climate Policy Implementation
28124  *
28125  * Options:
28126  *    --policy={bau (default),ctax}
28127  *        Implement a climate policy setting
28128  *  [ --scen= ]
28129  *        Policy variant.
28130  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
28131  *          * XXX for a fixed percentage/yr (e.g. 5) growth
28132  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
28133  *  [ --ctax_year=2020 ]
28134  *        Starting year of the carbon tax
28135  *  [ --ctax_initial=30 ]
28136  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
28137  *
28138  *-------------------------------------------------------------------------------
28140   
28141  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
28143  *-------------------------------------------------------------------------------
28144  * Energy efficiency
28145  *-------------------------------------------------------------------------------
28146   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
28149  *-------------------------------------------------------------------------------
28150  * Hydro Power
28151  *-------------------------------------------------------------------------------
28152   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
28155  *-------------------------------------------------------------------------------
28156  * System Integration:
28157  * - Capacity constraint
28158  * - Flexibility constraint
28159  * - Grid Investment
28160  * - Capacity growth constraint
28161  *-------------------------------------------------------------------------------
28162   
28164   
28165   
28166  * Renewable CES
28167   
28168  * Definition of the renewable CES
28169  eqq_elintren_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28170      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
28171   
28172  * Capacity constraint
28173   
28175  eqfirm_capacity_c_oceania(t,n)$(map_clt_n('c_oceania',n) and (not tfix(t)) and year(t) gt 2005)..
28176                   sum(jel_firm, K_EN(jel_firm,t,n))
28177                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
28178                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
28179                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
28180                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
28181                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
28182                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
28183                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
28184                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
28185                                       ) / yearly_hours
28186  ;
28188   
28189  * Flexibility constraint
28190  eqflex_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28191          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
28192                             ( Q_EN('el',t,n) -
28193                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
28194                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
28195                             ) * flex_coeff('load')
28196  ;
28197   
28198  * Grid
28199   
28200  ** Grid depreciation and investments
28201  eqk_en_grid_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
28202                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
28203                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
28204   
28205  ** Grid adjustment to power capacity
28206  eqk_en_grid_to_k_en_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28207                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
28208                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
28209                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
28210                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
28211                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
28212                                     ) / grid_cost +
28213                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
28214                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
28215                                      K_EN('elcsp',t,n);
28216  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
28217   
28218  * Capacity growth constraint
28219  eqcap_growth_c_oceania(jinv,t,tp1,tp2,n)$((map_clt_n('c_oceania',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
28220                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
28221                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
28222   
28223  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
28226  *-------------------------------------------------------------------------------
28227  * Nuclear power plants
28228  *-------------------------------------------------------------------------------
28229   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
28232  *-------------------------------------------------------------------------------
28233  * GHG module
28234  * - CH4 FFI + CH4 waste + CH4 open fires
28235  * - N2O FFI + N2O waste + N2O open fires
28236  *-------------------------------------------------------------------------------
28237   
28239   
28240  * CH4, N2O waste emissions
28241  eqq_emi_waste_c_oceania(waste,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
28242                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
28243   
28244  * n2o FFI
28245  eqq_emi_n2o_ffi_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
28246    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
28247                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
28248                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
28249                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
28250                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
28251                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
28252                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
28253                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
28254                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
28255                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
28256                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
28257                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
28258                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
28259                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
28260                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
28261                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
28262                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
28263                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
28264                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
28265                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
28266                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
28267                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
28268                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
28269                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
28270                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
28271                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
28272                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
28273                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
28274                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
28275                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
28276                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
28277   
28278  * ch4 FFI
28279  eqq_emi_ch4_ffi_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
28280    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
28283  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
28284  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
28285                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
28286                             smax(tt$(year(tt) eq 2015),
28287                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
28290  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
28291  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
28292                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
28293   
28294  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
28297  *-------------------------------------------------------------------------------
28298  * F-gases
28299  * - LLF
28300  * - SLF
28301  *-------------------------------------------------------------------------------
28302   
28304   
28305  * F-gases emissions
28306  eqq_emi_fgases_c_oceania(fgases,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
28307                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
28308   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
28311  *-------------------------------------------------------------------------------
28312  * Landuse [simplified version of the land-use model]
28313  *-------------------------------------------------------------------------------
28314   
28316   
28317  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
28318  eq_wbio_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28319      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
28320   
28322  * Cost of all woody biomass produced for advanced biofuels and woody biomass
28323  eqcost_pes_wbio_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28324      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
28326   
28327  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
28330  *-------------------------------------------------------------------------------
28331  * Bioenergy power plant
28332  *-------------------------------------------------------------------------------
28333   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
28336  *-------------------------------------------------------------------------------
28337  * Traditional Biofuels
28338  * - Requires the precedence of mod_landuse
28339  *-------------------------------------------------------------------------------
28340   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
28343  *-------------------------------------------------------------------------------
28344  * Advanced biofuel
28345  * - Require the precedence of mod_landuse
28346  *-------------------------------------------------------------------------------
28347   
28349   
28350  * Limitations for nel backstops
28351  eqq_en_lim_advbiofuel_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
28352               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
28353               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
28354   
28355  * Peculiarity of advbiofuel
28356  eqmcost_fuel_advbiofuel_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28357                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
28358   
28359  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
28362  *-------------------------------------------------------------------------------
28363  * Carbon Capture and Sequestration
28364  *-------------------------------------------------------------------------------
28365   
28367   
28368  eqq_emi_ccs_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28369                  Q_EMI('ccs_plant',t,n) =e=
28370                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
28371                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
28372  ;
28373   
28374  eqcost_emi_sinks_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28375                  COST_EMI('ccs_plant',t,n) =e=
28376                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
28377                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
28378  ;
28379   
28380  eq_stor_ccs_cum_c_oceania(ccs_stor,tp1,t,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
28381                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
28382  ;
28383   
28384  eq_emi_stor_ccs_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28385                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
28386  ;
28387   
28388  eq_emi_leak_ccs_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28389                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
28390   
28391  *-------------------------------------------------------------------------------
28393   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
28395  *-------------------------------------------------------------------------------
28396  * Coal for non-electric sectors
28397  * - Coke Plants
28398  * - Industrial and Commercial combined-heat-and-power (CHP)
28399  * - Others
28400  *-------------------------------------------------------------------------------
28401   
28403   
28404  eqcost_en_nelcoal_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28405           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
28406                                          nelcoal_max_abat(t,n) *
28407                                          (nelcoal_cmac(n,'a') *
28408                                            Q_EN('nelcoalabat',t,n) /
28409                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
28410                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
28411                                              (exp(nelcoal_cmac(n,'c') *
28412                                                (Q_EN('nelcoalabat',t,n)/
28413                                                  (nelcoal_max_abat(t,n) *
28414                                                      nelcoal_baseline(t,n))
28415                                                  ) - 1 )
28416                                              )
28417                                          );
28418   
28419  eqq_ncoalabat_monotone_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
28420          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
28421   
28422  * ensure Q_EN is lower than K_EN for CCS as not in jel
28423  eqq_en_nelcoalccs_max_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28424          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
28425   
28426  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
28429  *-------------------------------------------------------------------------------
28430  * Wind energy module
28431  * - onshore and offshore
28432  *-------------------------------------------------------------------------------
28433   
28435   
28436  * Capacity limits in the wind onshore electrical sector
28437  eqq_en_mu_windon_c_oceania(wind_dist,wind_class,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
28438      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
28439   
28440  * Capacity limits in the wind offshore electrical sector
28441  eqq_en_mu_windoff_c_oceania(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
28442      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
28443   
28444  * Wind onshore electrical generation plants (new)
28445  eqk_en_windon_c_oceania(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
28446      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
28447                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
28448   
28449  * Wind offshore electrical generation plants (new)
28450  eqk_en_windoff_c_oceania(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
28451      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
28452                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
28453   
28454  * Total onshore wind energy production
28455  eqq_en_windon_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28456                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
28457   
28458  * Total offshore wind energy production
28459  eqq_en_windoff_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28460                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
28461   
28462  * Total onshore wind capacity
28463  eqk_en_windon_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28464                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
28465   
28466  * Total offshore wind capacity
28467  eqk_en_windoff_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28468                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
28469   
28470  * Total onshore wind investment
28471  eqi_en_windon_sum_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
28472                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
28473   
28474  * Total offshore wind investment
28475  eqi_en_windoff_sum_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
28476                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
28477   
28478  *-------------------------------------------------------------------------------
28480   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
28482  *-------------------------------------------------------------------------------
28483  * Solar Powerplants (PV and CSP) to the electrical system
28484  *-------------------------------------------------------------------------------
28485   
28486  *-------------------------------------------------------------------------------
28488   
28489   
28490  * Capacity limits in the pv electrical sector
28491  eqq_en_mu_pv_c_oceania(solar_dist,solar_class,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
28492                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
28493   
28494  * Capacity limits in the csp electrical sector
28495  eqq_en_mu_csp_c_oceania(solar_dist,solar_class,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
28496                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
28497   
28498  * PV electrical generation plants (new)
28499  eqk_en_pv_c_oceania(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
28500                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
28501                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
28502   
28503  * CSP electrical generation plants (new)
28504  eqk_en_csp_c_oceania(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
28505                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
28506                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
28507   
28508  * Total PV energy production
28509  eqq_en_pv_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28510                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
28511   
28512  * Total CSP energy production
28513  eqq_en_csp_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28514                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
28515   
28516  * Total PV capacity
28517  eqk_en_pv_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28518                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
28519   
28520  * Total CSP capacity
28521  eqk_en_csp_sum_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28522                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
28523   
28524  * Total PV investment
28525  eqi_en_pv_sum_c_oceania(t,tp1,n)$(map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
28526                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
28527   
28528  * Total CSP investment
28529  eqi_en_csp_sum_c_oceania(t,tp1,n)$(map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
28530                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
28531   
28532  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
28533  eqk_en_solar_comp_c_oceania(t,n,solar_dist)$(map_clt_n('c_oceania',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
28534                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
28535                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
28536   
28537   
28538   
28539  *-------------------------------------------------------------------------------
28541   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
28543  *-------------------------------------------------------------------------------
28544  * Technology development scenarios
28545  *-------------------------------------------------------------------------------
28546   
28548   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
28550  *-------------------------------------------------------------------------------
28551  * Oil Extraction
28552  * Options:
28553  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
28554  *-------------------------------------------------------------------------------
28555   
28557   
28558  * Capacity
28559  eqoilcap_c_oceania(t,tp1,n,oilg)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
28560      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
28561   
28562  * Production
28563  eqoilprod_c_oceania(t,tp1,n,oilg)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
28564      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
28565   
28566  eqq_out_oil_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28567      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
28568   
28569  * Cumulative production
28570  eqcum_oil_c_oceania(t,tp1,n,oilg)$((map_clt_n('c_oceania',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
28571      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
28572   
28573  * Cost
28574  eqcost_oil_c_oceania(t,tp1,n,oilg)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
28575      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
28576                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
28577                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
28578   
28579  * Investments
28580  eqi_oil_c_oceania(t,tp1,n,oilg)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
28581      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
28582   
28583  * Total investment
28584  eqi_out_oil_c_oceania(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
28585      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
28586   
28587  * Emissions
28588  eqq_emi_out_oil_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28589      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
28590   
28591  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
28594  *-------------------------------------------------------------------------------
28595  * Uranium Resources
28596  *-------------------------------------------------------------------------------
28597   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
28600  *-------------------------------------------------------------------------------
28601  * Gas Resources
28602  *-------------------------------------------------------------------------------
28603   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
28606  *-------------------------------------------------------------------------------
28607  * Coal Resources
28608  *-------------------------------------------------------------------------------
28609   
28611   
28612   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
28614  *-------------------------------------------------------------------------------
28615  * Climate
28616  *
28617  * Represents the climate
28618  * - based on the DICE model equations
28619  * - Radiative forcing for non CO2 ghgs
28620  * - parameters calibrated to reproduce MAGICC6.4 default response
28621  *
28622  *  Options:
28623  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
28624  * - $setglobal cooperate_on_climate {'YES','NO'}
28625  * - 'YES'(default): Countries within a coalition act in cooperation
28626  *   'NO': Countries within a coalition act individually
28627  *
28628  *-------------------------------------------------------------------------------
28629   
28631   
28633   
28634  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
28637  *-------------------------------------------------------------------------------
28638  * Long-run Damages from Climate Change
28639  * - Economic impacts
28640  * - Adaptation
28641  *-------------------------------------------------------------------------------
28642   
28644   
28646   
28647  *-------------------------------------------------------------------------------
28649   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
28651  *-------------------------------------------------------------------------------
28652  * Light-duty Vehicles for Personal Transport
28653  *-------------------------------------------------------------------------------
28654   
28656   
28657  *** newcode
28658  eqq_inv_red_ban_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28659      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
28660   
28661  ***
28662  *- Number of light duty vehicles
28663  eqnb_veh_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28664      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
28665   
28666  *- Yearly energy demand of vehicles
28667  eqq_en_veh_c_oceania(jveh,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28668      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
28669   
28670  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
28671  eqq_el_edv_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28672      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
28673   
28674  *- Investment cost for hybrid vehicles
28675  eqmcost_inv_hybrid_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
28676                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
28677   
28678  *- Investment cost for plug-in hybrid vehicles
28679  eqmcost_inv_plghybrid_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
28680                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
28681   
28682  *- Investment cost for electric drive vehicles
28683  eqmcost_inv_edv_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
28684                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
28685   
28686  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
28689  *-------------------------------------------------------------------------------
28690  * Road Freight Transport
28691  *-------------------------------------------------------------------------------
28693   
28694  *-  Number of freight vehicles
28695  eqnb_frtveh_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
28696                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
28697   
28698  *-  Yearly fuel consumption of freight vehicles
28699  eqq_en_frtveh_c_oceania(jfrt,t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28700                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
28701   
28702  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
28703  eqq_el_frtedv_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)))..
28704                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
28705   
28706  *-  Investment cost for hbd_stfr vehicle
28707  eqmcost_inv_hbd_stfr_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
28708                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
28709   
28710  *-  Investment cost for plug-in hbd_stfr vehicle
28711  eqmcost_inv_plghbd_stfr_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
28712                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
28713   
28714  *-  Investment cost for electric drive vehicle
28715  eqmcost_inv_edv_stfr_c_oceania(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
28716                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
28717   
28718  *-------------------------------------------------------------------------------
28720   
28721   
28722   
28723   
28724   
28725   
28726  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
28728  *-------------------------------------------------------------------------------
28729  * Traditional Biomass
28730  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
28731  *  - require post_process to be launch before
28732  *-------------------------------------------------------------------------------
28733   
28735   
28736  * Optional modules
28737   
28738  * Policy modules
28739   
28740  * Calibration
28743   
28744   
28745  model witch_c_oceania /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
28747  *-------------------------------------------------------------------------------
28748  * Call modules by order
28749  *-------------------------------------------------------------------------------
28753   
28754  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
28756  *-------------------------------------------------------------------------------
28757  * Algorithm
28758  *-------------------------------------------------------------------------------
28759   
28761   
28762  eqobj_c_oceania
28763   
28764  *-------------------------------------------------------------------------------
28766   
28767  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
28769  *-------------------------------------------------------------------------------
28770  * Time
28771  * - Temporal structure
28772  * - Fixed time periods
28773  * - States of the world
28774  *-------------------------------------------------------------------------------
28775   
28777   
28778  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
28780  *-------------------------------------------------------------------------------
28781  * Geographic dimension and mapping with countries
28782  *-------------------------------------------------------------------------------
28783   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
28786  *-------------------------------------------------------------------------------
28787  * Non-Cooperative Setup
28788  *
28789  * Each region is defined as an individual coalition.
28790  *
28791  *-------------------------------------------------------------------------------
28792   
28794   
28795  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
28797  *-------------------------------------------------------------------------------
28798  * Welfare
28799  *-------------------------------------------------------------------------------
28800   
28802   
28803  equtility_c_oceania
28804   
28805  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
28808  *-------------------------------------------------------------------------------
28809  * Economy
28810  * - Production and Consumption definition
28811  * - Top-level of the production function
28812  * Options:
28813  * --original_ssp=1 : original SSP population and GDP data
28814  *-------------------------------------------------------------------------------
28815   
28817   
28818  eqk_c_oceania
28819  eqq_cc_c_oceania
28820  eqq_fen_c_oceania
28821  eqq_y_c_oceania
28822   
28823  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
28826  *-------------------------------------------------------------------------------
28827  * Energy sector
28828  *-------------------------------------------------------------------------------
28829   
28831   
28832  eq_mkt_clearing_oil_c_oceania
28833  eqcost_pes_c_oceania
28834  eqcost_ses_c_oceania
28835  eqk_en_c_oceania
28836  eqq_ces_el_c_oceania
28837  eqq_ces_nelgas_c_oceania
28838  eqq_el2_c_oceania
28839  eqq_el_c_oceania
28840  eqq_elff_c_oceania
28841  eqq_en_c_oceania
28842  eqq_en_in_c_oceania
28843  eqq_en_mu_c_oceania
28844  eqq_en_tree_c_oceania
28845  eqq_nel_c_oceania
28846  eqq_nelog_c_oceania
28847  eqq_fuel_c_oceania
28848  eqq_elffren_c_oceania
28849   
28850  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
28853  *-------------------------------------------------------------------------------
28854  * Carbon Emissions
28855  * - Total CO2 emissions and CO2 Fossil fuel and Industry
28856  * - CO2 emission costs
28857  * - GHG permit market
28858  *-------------------------------------------------------------------------------
28859   
28861   
28862  eqq_emi_lim_c_oceania
28863  eqq_emi_tree_c_oceania
28864  eqq_emi_co2ffi_c_oceania
28865   
28866  eqcost_emi_co2_c_oceania
28867   
28868  eq_mkt_clearing_nip_c_oceania
28869   
28870  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
28873  *-------------------------------------------------------------------------------
28874  * Research & Development
28875  * Options:
28876  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
28877  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
28878  *-------------------------------------------------------------------------------
28879   
28881   
28882  eqk_rd_c_oceania
28883  eqspill_coop_c_oceania
28884  eqspill_lead_c_oceania
28885  eqspill_foll_c_oceania
28886  eqmcost_inv_back_c_oceania
28887  eqmcost_inv_back_lbd_c_oceania
28888   
28889  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
28892  *-------------------------------------------------------------------------------
28893  * Default Climate Policy Implementation
28894  *
28895  * Options:
28896  *    --policy={bau (default),ctax}
28897  *        Implement a climate policy setting
28898  *  [ --scen= ]
28899  *        Policy variant.
28900  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
28901  *          * XXX for a fixed percentage/yr (e.g. 5) growth
28902  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
28903  *  [ --ctax_year=2020 ]
28904  *        Starting year of the carbon tax
28905  *  [ --ctax_initial=30 ]
28906  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
28907  *
28908  *-------------------------------------------------------------------------------
28910   
28911  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
28913  *-------------------------------------------------------------------------------
28914  * Energy efficiency
28915  *-------------------------------------------------------------------------------
28916   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
28919  *-------------------------------------------------------------------------------
28920  * Hydro Power
28921  *-------------------------------------------------------------------------------
28922   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
28925  *-------------------------------------------------------------------------------
28926  * System Integration:
28927  * - Capacity constraint
28928  * - Flexibility constraint
28929  * - Grid Investment
28930  * - Capacity growth constraint
28931  *-------------------------------------------------------------------------------
28932   
28934   
28935  eqq_elintren_c_oceania
28936  eqflex_c_oceania
28937  eqk_en_grid_c_oceania
28938  eqk_en_grid_to_k_en_c_oceania
28939  eqfirm_capacity_c_oceania
28940  eqcap_growth_c_oceania
28941   
28942  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
28945  *-------------------------------------------------------------------------------
28946  * Nuclear power plants
28947  *-------------------------------------------------------------------------------
28948   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
28951  *-------------------------------------------------------------------------------
28952  * GHG module
28953  * - CH4 FFI + CH4 waste + CH4 open fires
28954  * - N2O FFI + N2O waste + N2O open fires
28955  *-------------------------------------------------------------------------------
28956   
28958   
28959  eqq_emi_waste_c_oceania
28960  eqq_emi_n2o_ffi_c_oceania
28961  eqq_emi_ch4_ffi_c_oceania
28962   
28963  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
28966  *-------------------------------------------------------------------------------
28967  * F-gases
28968  * - LLF
28969  * - SLF
28970  *-------------------------------------------------------------------------------
28971   
28973   
28974  eqq_emi_fgases_c_oceania
28975   
28976  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
28979  *-------------------------------------------------------------------------------
28980  * Landuse [simplified version of the land-use model]
28981  *-------------------------------------------------------------------------------
28982   
28984   
28985  eq_wbio_c_oceania
28986  eqcost_pes_wbio_c_oceania
28987   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
28990  *-------------------------------------------------------------------------------
28991  * Bioenergy power plant
28992  *-------------------------------------------------------------------------------
28993   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
28996  *-------------------------------------------------------------------------------
28997  * Traditional Biofuels
28998  * - Requires the precedence of mod_landuse
28999  *-------------------------------------------------------------------------------
29000   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
29003  *-------------------------------------------------------------------------------
29004  * Advanced biofuel
29005  * - Require the precedence of mod_landuse
29006  *-------------------------------------------------------------------------------
29007   
29009   
29010  eqq_en_lim_advbiofuel_c_oceania
29011  eqmcost_fuel_advbiofuel_c_oceania
29012   
29013  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
29016  *-------------------------------------------------------------------------------
29017  * Carbon Capture and Sequestration
29018  *-------------------------------------------------------------------------------
29019   
29021   
29022  eqq_emi_ccs_c_oceania
29023  eqcost_emi_sinks_c_oceania
29024  eq_stor_ccs_cum_c_oceania
29025  eq_emi_stor_ccs_c_oceania
29026  eq_emi_leak_ccs_c_oceania
29027   
29028  *-------------------------------------------------------------------------------
29030   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
29032  *-------------------------------------------------------------------------------
29033  * Coal for non-electric sectors
29034  * - Coke Plants
29035  * - Industrial and Commercial combined-heat-and-power (CHP)
29036  * - Others
29037  *-------------------------------------------------------------------------------
29038   
29040   
29041  eqcost_en_nelcoal_c_oceania
29042  eqq_ncoalabat_monotone_c_oceania
29043  eqq_en_nelcoalccs_max_c_oceania
29044   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
29047  *-------------------------------------------------------------------------------
29048  * Wind energy module
29049  * - onshore and offshore
29050  *-------------------------------------------------------------------------------
29051   
29053   
29054  eqq_en_mu_windon_c_oceania
29055  eqq_en_mu_windoff_c_oceania
29056  eqk_en_windon_c_oceania
29057  eqk_en_windoff_c_oceania
29058  eqq_en_windon_sum_c_oceania
29059  eqq_en_windoff_sum_c_oceania
29060  eqk_en_windon_sum_c_oceania
29061  eqk_en_windoff_sum_c_oceania
29062  eqi_en_windon_sum_c_oceania
29063  eqi_en_windoff_sum_c_oceania
29064   
29066   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
29068  *-------------------------------------------------------------------------------
29069  * Solar Powerplants (PV and CSP) to the electrical system
29070  *-------------------------------------------------------------------------------
29071   
29072  *-------------------------------------------------------------------------------
29074   
29075  eqq_en_mu_pv_c_oceania
29076  eqq_en_mu_csp_c_oceania
29077  eqk_en_pv_c_oceania
29078  eqk_en_csp_c_oceania
29079  eqq_en_pv_sum_c_oceania
29080  eqq_en_csp_sum_c_oceania
29081  eqk_en_pv_sum_c_oceania
29082  eqk_en_csp_sum_c_oceania
29083  eqi_en_pv_sum_c_oceania
29084  eqi_en_csp_sum_c_oceania
29085  eqk_en_solar_comp_c_oceania
29086   
29087  *-------------------------------------------------------------------------------
29089   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
29091  *-------------------------------------------------------------------------------
29092  * Technology development scenarios
29093  *-------------------------------------------------------------------------------
29094   
29096   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
29098  *-------------------------------------------------------------------------------
29099  * Oil Extraction
29100  * Options:
29101  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
29102  *-------------------------------------------------------------------------------
29103   
29105   
29106  eqoilcap_c_oceania
29107  eqoilprod_c_oceania
29108  eqq_out_oil_c_oceania
29109  eqcum_oil_c_oceania
29110  eqcost_oil_c_oceania
29111  eqi_oil_c_oceania
29112  eqi_out_oil_c_oceania
29113  eqq_emi_out_oil_c_oceania
29114   
29115  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
29118  *-------------------------------------------------------------------------------
29119  * Uranium Resources
29120  *-------------------------------------------------------------------------------
29121   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
29124  *-------------------------------------------------------------------------------
29125  * Gas Resources
29126  *-------------------------------------------------------------------------------
29127   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
29130  *-------------------------------------------------------------------------------
29131  * Coal Resources
29132  *-------------------------------------------------------------------------------
29133   
29135   
29136   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
29138  *-------------------------------------------------------------------------------
29139  * Climate
29140  *
29141  * Represents the climate
29142  * - based on the DICE model equations
29143  * - Radiative forcing for non CO2 ghgs
29144  * - parameters calibrated to reproduce MAGICC6.4 default response
29145  *
29146  *  Options:
29147  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
29148  * - $setglobal cooperate_on_climate {'YES','NO'}
29149  * - 'YES'(default): Countries within a coalition act in cooperation
29150  *   'NO': Countries within a coalition act individually
29151  *
29152  *-------------------------------------------------------------------------------
29153   
29155   
29157   
29158  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
29161  *-------------------------------------------------------------------------------
29162  * Long-run Damages from Climate Change
29163  * - Economic impacts
29164  * - Adaptation
29165  *-------------------------------------------------------------------------------
29166   
29168   
29170   
29171  *-------------------------------------------------------------------------------
29173   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
29175  *-------------------------------------------------------------------------------
29176  * Light-duty Vehicles for Personal Transport
29177  *-------------------------------------------------------------------------------
29178   
29180   
29181  eqnb_veh_c_oceania
29182  eqq_en_veh_c_oceania
29183  eqq_el_edv_c_oceania
29184  eqmcost_inv_hybrid_c_oceania
29185  eqmcost_inv_plghybrid_c_oceania
29186  eqmcost_inv_edv_c_oceania
29187  *** newcode
29188  eqq_inv_red_ban_c_oceania
29189  ***
29190  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
29193  *-------------------------------------------------------------------------------
29194  * Road Freight Transport
29195  *-------------------------------------------------------------------------------
29197   
29198  eqnb_frtveh_c_oceania
29199  eqq_en_frtveh_c_oceania
29200  eqq_el_frtedv_c_oceania
29201  eqmcost_inv_hbd_stfr_c_oceania
29202  eqmcost_inv_plghbd_stfr_c_oceania
29203  eqmcost_inv_edv_stfr_c_oceania
29204   
29205  *-------------------------------------------------------------------------------
29207   
29208   
29209   
29210   
29211   
29212   
29213  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
29215  *-------------------------------------------------------------------------------
29216  * Traditional Biomass
29217  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
29218  *  - require post_process to be launch before
29219  *-------------------------------------------------------------------------------
29220   
29222   
29223  * Optional modules
29224   
29225  * Policy modules
29226   
29227  * Calibration
29230  /;
29231   
29232  witch_c_oceania.optfile=1;   # the option file solvername.opt is to be used
29233  witch_c_oceania.holdfixed=1; # treat fixed values as constant
29234  witch_c_oceania.scaleopt=1;  # Use scaling for better gradients estimation
29235  witch_c_oceania.solvelink=3; # Use parallel or sequential solving
29236   
29241   
29242  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
29244  *-------------------------------------------------------------------------------
29245  * Call modules by order
29246  *-------------------------------------------------------------------------------
29250   
29251  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
29253  *-------------------------------------------------------------------------------
29254  * Algorithm
29255  *-------------------------------------------------------------------------------
29256   
29258   
29259  eqobj_c_sasia
29260   
29261  *-------------------------------------------------------------------------------
29263   
29264  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
29266  *-------------------------------------------------------------------------------
29267  * Time
29268  * - Temporal structure
29269  * - Fixed time periods
29270  * - States of the world
29271  *-------------------------------------------------------------------------------
29272   
29274   
29275  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
29277  *-------------------------------------------------------------------------------
29278  * Geographic dimension and mapping with countries
29279  *-------------------------------------------------------------------------------
29280   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
29283  *-------------------------------------------------------------------------------
29284  * Non-Cooperative Setup
29285  *
29286  * Each region is defined as an individual coalition.
29287  *
29288  *-------------------------------------------------------------------------------
29289   
29291   
29292  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
29294  *-------------------------------------------------------------------------------
29295  * Welfare
29296  *-------------------------------------------------------------------------------
29297   
29299   
29300  equtility_c_sasia
29301   
29302  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
29305  *-------------------------------------------------------------------------------
29306  * Economy
29307  * - Production and Consumption definition
29308  * - Top-level of the production function
29309  * Options:
29310  * --original_ssp=1 : original SSP population and GDP data
29311  *-------------------------------------------------------------------------------
29312   
29314   
29315  eqk_c_sasia
29316  eqq_cc_c_sasia
29317  eqq_fen_c_sasia
29318  eqq_y_c_sasia
29319   
29320  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
29323  *-------------------------------------------------------------------------------
29324  * Energy sector
29325  *-------------------------------------------------------------------------------
29326   
29328   
29329  eq_mkt_clearing_oil_c_sasia
29330  eqcost_pes_c_sasia
29331  eqcost_ses_c_sasia
29332  eqk_en_c_sasia
29333  eqq_ces_el_c_sasia
29334  eqq_ces_nelgas_c_sasia
29335  eqq_el2_c_sasia
29336  eqq_el_c_sasia
29337  eqq_elff_c_sasia
29338  eqq_en_c_sasia
29339  eqq_en_in_c_sasia
29340  eqq_en_mu_c_sasia
29341  eqq_en_tree_c_sasia
29342  eqq_nel_c_sasia
29343  eqq_nelog_c_sasia
29344  eqq_fuel_c_sasia
29345  eqq_elffren_c_sasia
29346   
29347  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
29350  *-------------------------------------------------------------------------------
29351  * Carbon Emissions
29352  * - Total CO2 emissions and CO2 Fossil fuel and Industry
29353  * - CO2 emission costs
29354  * - GHG permit market
29355  *-------------------------------------------------------------------------------
29356   
29358   
29359  eqq_emi_lim_c_sasia
29360  eqq_emi_tree_c_sasia
29361  eqq_emi_co2ffi_c_sasia
29362   
29363  eqcost_emi_co2_c_sasia
29364   
29365  eq_mkt_clearing_nip_c_sasia
29366   
29367  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
29370  *-------------------------------------------------------------------------------
29371  * Research & Development
29372  * Options:
29373  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
29374  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
29375  *-------------------------------------------------------------------------------
29376   
29378   
29379  eqk_rd_c_sasia
29380  eqspill_coop_c_sasia
29381  eqspill_lead_c_sasia
29382  eqspill_foll_c_sasia
29383  eqmcost_inv_back_c_sasia
29384  eqmcost_inv_back_lbd_c_sasia
29385   
29386  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
29389  *-------------------------------------------------------------------------------
29390  * Default Climate Policy Implementation
29391  *
29392  * Options:
29393  *    --policy={bau (default),ctax}
29394  *        Implement a climate policy setting
29395  *  [ --scen= ]
29396  *        Policy variant.
29397  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
29398  *          * XXX for a fixed percentage/yr (e.g. 5) growth
29399  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
29400  *  [ --ctax_year=2020 ]
29401  *        Starting year of the carbon tax
29402  *  [ --ctax_initial=30 ]
29403  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
29404  *
29405  *-------------------------------------------------------------------------------
29407   
29408  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
29410  *-------------------------------------------------------------------------------
29411  * Energy efficiency
29412  *-------------------------------------------------------------------------------
29413   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
29416  *-------------------------------------------------------------------------------
29417  * Hydro Power
29418  *-------------------------------------------------------------------------------
29419   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
29422  *-------------------------------------------------------------------------------
29423  * System Integration:
29424  * - Capacity constraint
29425  * - Flexibility constraint
29426  * - Grid Investment
29427  * - Capacity growth constraint
29428  *-------------------------------------------------------------------------------
29429   
29431   
29432  eqq_elintren_c_sasia
29433  eqflex_c_sasia
29434  eqk_en_grid_c_sasia
29435  eqk_en_grid_to_k_en_c_sasia
29436  eqfirm_capacity_c_sasia
29437  eqcap_growth_c_sasia
29438   
29439  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
29442  *-------------------------------------------------------------------------------
29443  * Nuclear power plants
29444  *-------------------------------------------------------------------------------
29445   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
29448  *-------------------------------------------------------------------------------
29449  * GHG module
29450  * - CH4 FFI + CH4 waste + CH4 open fires
29451  * - N2O FFI + N2O waste + N2O open fires
29452  *-------------------------------------------------------------------------------
29453   
29455   
29456  eqq_emi_waste_c_sasia
29457  eqq_emi_n2o_ffi_c_sasia
29458  eqq_emi_ch4_ffi_c_sasia
29459   
29460  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
29463  *-------------------------------------------------------------------------------
29464  * F-gases
29465  * - LLF
29466  * - SLF
29467  *-------------------------------------------------------------------------------
29468   
29470   
29471  eqq_emi_fgases_c_sasia
29472   
29473  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
29476  *-------------------------------------------------------------------------------
29477  * Landuse [simplified version of the land-use model]
29478  *-------------------------------------------------------------------------------
29479   
29481   
29482  eq_wbio_c_sasia
29483  eqcost_pes_wbio_c_sasia
29484   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
29487  *-------------------------------------------------------------------------------
29488  * Bioenergy power plant
29489  *-------------------------------------------------------------------------------
29490   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
29493  *-------------------------------------------------------------------------------
29494  * Traditional Biofuels
29495  * - Requires the precedence of mod_landuse
29496  *-------------------------------------------------------------------------------
29497   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
29500  *-------------------------------------------------------------------------------
29501  * Advanced biofuel
29502  * - Require the precedence of mod_landuse
29503  *-------------------------------------------------------------------------------
29504   
29506   
29507  eqq_en_lim_advbiofuel_c_sasia
29508  eqmcost_fuel_advbiofuel_c_sasia
29509   
29510  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
29513  *-------------------------------------------------------------------------------
29514  * Carbon Capture and Sequestration
29515  *-------------------------------------------------------------------------------
29516   
29518   
29519  eqq_emi_ccs_c_sasia
29520  eqcost_emi_sinks_c_sasia
29521  eq_stor_ccs_cum_c_sasia
29522  eq_emi_stor_ccs_c_sasia
29523  eq_emi_leak_ccs_c_sasia
29524   
29525  *-------------------------------------------------------------------------------
29527   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
29529  *-------------------------------------------------------------------------------
29530  * Coal for non-electric sectors
29531  * - Coke Plants
29532  * - Industrial and Commercial combined-heat-and-power (CHP)
29533  * - Others
29534  *-------------------------------------------------------------------------------
29535   
29537   
29538  eqcost_en_nelcoal_c_sasia
29539  eqq_ncoalabat_monotone_c_sasia
29540  eqq_en_nelcoalccs_max_c_sasia
29541   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
29544  *-------------------------------------------------------------------------------
29545  * Wind energy module
29546  * - onshore and offshore
29547  *-------------------------------------------------------------------------------
29548   
29550   
29551  eqq_en_mu_windon_c_sasia
29552  eqq_en_mu_windoff_c_sasia
29553  eqk_en_windon_c_sasia
29554  eqk_en_windoff_c_sasia
29555  eqq_en_windon_sum_c_sasia
29556  eqq_en_windoff_sum_c_sasia
29557  eqk_en_windon_sum_c_sasia
29558  eqk_en_windoff_sum_c_sasia
29559  eqi_en_windon_sum_c_sasia
29560  eqi_en_windoff_sum_c_sasia
29561   
29563   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
29565  *-------------------------------------------------------------------------------
29566  * Solar Powerplants (PV and CSP) to the electrical system
29567  *-------------------------------------------------------------------------------
29568   
29569  *-------------------------------------------------------------------------------
29571   
29572  eqq_en_mu_pv_c_sasia
29573  eqq_en_mu_csp_c_sasia
29574  eqk_en_pv_c_sasia
29575  eqk_en_csp_c_sasia
29576  eqq_en_pv_sum_c_sasia
29577  eqq_en_csp_sum_c_sasia
29578  eqk_en_pv_sum_c_sasia
29579  eqk_en_csp_sum_c_sasia
29580  eqi_en_pv_sum_c_sasia
29581  eqi_en_csp_sum_c_sasia
29582  eqk_en_solar_comp_c_sasia
29583   
29584  *-------------------------------------------------------------------------------
29586   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
29588  *-------------------------------------------------------------------------------
29589  * Technology development scenarios
29590  *-------------------------------------------------------------------------------
29591   
29593   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
29595  *-------------------------------------------------------------------------------
29596  * Oil Extraction
29597  * Options:
29598  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
29599  *-------------------------------------------------------------------------------
29600   
29602   
29603  eqoilcap_c_sasia
29604  eqoilprod_c_sasia
29605  eqq_out_oil_c_sasia
29606  eqcum_oil_c_sasia
29607  eqcost_oil_c_sasia
29608  eqi_oil_c_sasia
29609  eqi_out_oil_c_sasia
29610  eqq_emi_out_oil_c_sasia
29611   
29612  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
29615  *-------------------------------------------------------------------------------
29616  * Uranium Resources
29617  *-------------------------------------------------------------------------------
29618   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
29621  *-------------------------------------------------------------------------------
29622  * Gas Resources
29623  *-------------------------------------------------------------------------------
29624   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
29627  *-------------------------------------------------------------------------------
29628  * Coal Resources
29629  *-------------------------------------------------------------------------------
29630   
29632   
29633   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
29635  *-------------------------------------------------------------------------------
29636  * Climate
29637  *
29638  * Represents the climate
29639  * - based on the DICE model equations
29640  * - Radiative forcing for non CO2 ghgs
29641  * - parameters calibrated to reproduce MAGICC6.4 default response
29642  *
29643  *  Options:
29644  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
29645  * - $setglobal cooperate_on_climate {'YES','NO'}
29646  * - 'YES'(default): Countries within a coalition act in cooperation
29647  *   'NO': Countries within a coalition act individually
29648  *
29649  *-------------------------------------------------------------------------------
29650   
29652   
29654   
29655  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
29658  *-------------------------------------------------------------------------------
29659  * Long-run Damages from Climate Change
29660  * - Economic impacts
29661  * - Adaptation
29662  *-------------------------------------------------------------------------------
29663   
29665   
29667   
29668  *-------------------------------------------------------------------------------
29670   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
29672  *-------------------------------------------------------------------------------
29673  * Light-duty Vehicles for Personal Transport
29674  *-------------------------------------------------------------------------------
29675   
29677   
29678  eqnb_veh_c_sasia
29679  eqq_en_veh_c_sasia
29680  eqq_el_edv_c_sasia
29681  eqmcost_inv_hybrid_c_sasia
29682  eqmcost_inv_plghybrid_c_sasia
29683  eqmcost_inv_edv_c_sasia
29684  *** newcode
29685  eqq_inv_red_ban_c_sasia
29686  ***
29687  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
29690  *-------------------------------------------------------------------------------
29691  * Road Freight Transport
29692  *-------------------------------------------------------------------------------
29694   
29695  eqnb_frtveh_c_sasia
29696  eqq_en_frtveh_c_sasia
29697  eqq_el_frtedv_c_sasia
29698  eqmcost_inv_hbd_stfr_c_sasia
29699  eqmcost_inv_plghbd_stfr_c_sasia
29700  eqmcost_inv_edv_stfr_c_sasia
29701   
29702  *-------------------------------------------------------------------------------
29704   
29705   
29706   
29707   
29708   
29709   
29710  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
29712  *-------------------------------------------------------------------------------
29713  * Traditional Biomass
29714  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
29715  *  - require post_process to be launch before
29716  *-------------------------------------------------------------------------------
29717   
29719   
29720  * Optional modules
29721   
29722  * Policy modules
29723   
29724  * Calibration
29727  ;
29728   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
29730  *-------------------------------------------------------------------------------
29731  * Call modules by order
29732  *-------------------------------------------------------------------------------
29736   
29737  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
29739  *-------------------------------------------------------------------------------
29740  * Algorithm
29741  *-------------------------------------------------------------------------------
29742   
29744   
29746  * Add the component of the (maximized) objective function as required by the ADMM algorithm
29747  eqobj_c_sasia..
29748      OBJADMM =e= UTILITY -
29749          sum(t, rho_admm('oil',t) / 2 *
29750              sum(n$(map_clt_n('c_sasia',n) and trading_t('oil',t,n)),
29751                  power(
29752                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
29753                      x_admm('oil',t,n) +
29754                      xavg_admm('oil',t) +
29755                      u_admm('oil', t)
29756                  ,2)
29757              )) -
29758          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
29759              sum(n$(map_clt_n('c_sasia',n) and trading_t(c_mkt,t,n)),
29760                  power(
29761                      Q_EMI(c_mkt,t,n) -
29762                      x_admm(c_mkt,t,n) +
29763                      xavg_admm(c_mkt,t) +
29764                      u_admm(c_mkt,t)
29765                  ,2)
29766              ))
29767      ;
29769   
29770  *-------------------------------------------------------------------------------
29772   
29773  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
29775  *-------------------------------------------------------------------------------
29776  * Time
29777  * - Temporal structure
29778  * - Fixed time periods
29779  * - States of the world
29780  *-------------------------------------------------------------------------------
29781   
29783   
29784  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
29786  *-------------------------------------------------------------------------------
29787  * Geographic dimension and mapping with countries
29788  *-------------------------------------------------------------------------------
29789   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
29792  *-------------------------------------------------------------------------------
29793  * Non-Cooperative Setup
29794  *
29795  * Each region is defined as an individual coalition.
29796  *
29797  *-------------------------------------------------------------------------------
29798   
29800   
29801  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
29803  *-------------------------------------------------------------------------------
29804  * Welfare
29805  *-------------------------------------------------------------------------------
29806   
29808   
29809  * Objective function - Welfare to be maximized
29810  equtility_c_sasia..
29811      UTILITY =e=
29812   
29813  * Negishi SWF
29815   
29816  * Welfare functions based on CEBGE
29819                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
29820                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
29821                      ((sum(n$map_clt_n('c_sasia',n),
29822                        (l(t,n) / sum(nn$map_clt_n('c_sasia',nn), l(t,nn))) *
29823                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
29824                       )**(1 / (1 - gamma))
29825                      )**(1 - eta) ) +
29826                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
29827                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
29828                      ((sum(n$map_clt_n('c_sasia',n),
29829                        (l(t,n) / sum(nn$map_clt_n('c_sasia',nn), l(t,nn))) *
29830                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
29831                       )**(1 / (1 - gamma))
29832                      )**(1 - eta) )
29833                  )**(1/(1 - eta)) * 1e6
29836   
29837   
29838  ;
29839   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
29842  *-------------------------------------------------------------------------------
29843  * Economy
29844  * - Production and Consumption definition
29845  * - Top-level of the production function
29846  * Options:
29847  * --original_ssp=1 : original SSP population and GDP data
29848  *-------------------------------------------------------------------------------
29849   
29851   
29852  * Production
29853  eqq_y_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
29854   
29855      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
29856                     ## Climate feedback on economy
29858                     ## Net cost of Primary and Secondary Energy Sources
29859                     - sum(fuel, COST_FUEL(fuel,t,n))
29860                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
29861                     - sum(cce, COST_EMI(cce,t,n))
29862                     ## Carbon tax
29863                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
29864                     ## Additionnal costs on gross product
29865                     - sum(ccy, COST_Y(ccy,t,n))
29866  ;
29867   
29868  * Consumption
29869  eqq_cc_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
29870      Q('cc',t,n) =e= Q('y',t,n)
29871                      ## Investments in goods g (final good, adaptation)
29872                      -sum(g, I(g,t,n))
29873                      ## Investments in r&d
29874                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
29875                      ## Investments in energy technlogies
29876                      -sum(jinv, I_EN(jinv,t,n))
29877                       ## Investments in grid infrastructures
29878                      - I_EN_GRID(t,n)
29879                      ## Investments in extraction sector
29880                      -sum(extract(f), I_OUT(f,t,n))
29881                      ## O&M for energy technlogies
29882                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
29883                      ## O&M for extraction
29884                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
29885                      ## Energy technology penalty costs
29886                      -sum(jpenalty(j), COST_EN(j,t,n))
29887  ;
29888   
29889  * Capital accumulation
29890  eqk_c_sasia(g,t,tp1,n)$(map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
29891      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
29892   
29893  * Energy services
29894  eqq_fen_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
29895      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
29896   
29897  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
29900  *-------------------------------------------------------------------------------
29901  * Energy sector
29902  *-------------------------------------------------------------------------------
29903   
29905   
29906  *-------------------------------------------------------------------------------
29907  * Production - Energy sector
29908  *-------------------------------------------------------------------------------
29909   
29910  eqq_en_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
29911      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
29912   
29913  *-------------------------------------------------------------------------------
29914  * Production - Electrical sector
29915  *-------------------------------------------------------------------------------
29916   
29917  eqq_el_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
29918      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
29919   
29920  eqq_el2_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
29921      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
29922   
29923  eqq_elffren_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
29924      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
29925  eqq_elff_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
29926      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
29927   
29928  eqq_ces_el_c_sasia(ices_el,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
29929      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
29930  ;
29931   
29932  *-------------------------------------------------------------------------------
29933  * Production - Non-electrical sector
29934  *-------------------------------------------------------------------------------
29935   
29936  eqq_nel_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
29937      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
29938   
29939  eqq_nelog_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
29940      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
29941  ;
29942  eqq_ces_nelgas_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
29943      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
29944   
29945  *-------------------------------------------------------------------------------
29946  * PES and fuels
29947  *-------------------------------------------------------------------------------
29948   
29949  eqq_fuel_c_sasia(fuel,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
29950      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
29951   
29952  *-------------------------------------------------------------------------------
29953  * Cost
29954  *-------------------------------------------------------------------------------
29955   
29956  * Net cost of Primary Energy Supplies
29957  eqcost_pes_c_sasia(f,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
29958      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
29959                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
29960   
29961  * Net cost of Secondary Energy Supplies
29962  eqcost_ses_c_sasia(s,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
29963      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
29964   
29965   
29966  *-------------------------------------------------------------------------------
29967  * Market balances
29968  *-------------------------------------------------------------------------------
29969   
29970  eq_mkt_clearing_oil_c_sasia(t,'c_sasia')$(internal('oil'))..
29971      sum( n$(map_clt_n('c_sasia',n) and trading_t('oil',t,n)),
29972          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
29973      ) =e= 0;
29974   
29975  *-------------------------------------------------------------------------------
29976  * New capital in the energy sector
29977  *-------------------------------------------------------------------------------
29978   
29979  * Electrical generation plants (new)
29980  eqk_en_c_sasia(jinv,t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
29981      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
29982                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
29983   
29984  *-------------------------------------------------------------------------------
29985  * ENERGY
29986  *-------------------------------------------------------------------------------
29987   
29988  * Capacity limits in the electrical sector
29989  eqq_en_mu_c_sasia(jel,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
29990      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
29991   
29992  * Efficiency of energy technology sector
29993  eqq_en_in_c_sasia(jfed,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
29994      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
29995                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
29996   
29997  * Energy generation "tree"
29998  eqq_en_tree_c_sasia(j,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
29999      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
30000   
30001  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
30004  *-------------------------------------------------------------------------------
30005  * Carbon Emissions
30006  * - Total CO2 emissions and CO2 Fossil fuel and Industry
30007  * - CO2 emission costs
30008  * - GHG permit market
30009  *-------------------------------------------------------------------------------
30010   
30012   
30013  * GHG emission cap
30014  eqq_emi_lim_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
30015      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
30016                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
30017   
30018  * Compute total and sectoral emissions
30019  eqq_emi_tree_c_sasia(t,n,e)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
30020      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
30021   
30022  * Industrial CO2 emissions
30023  eqq_emi_co2ffi_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30024      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
30025                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
30026                              # Emissions from biomass
30027                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
30028                              # Emissions from fuel extraction
30029                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
30030                              # Captured emissions
30031                              sum(sink, Q_EMI(sink,t,n));
30032   
30033  * CO2 emission costs
30034  eqcost_emi_co2_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30035      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
30036   
30037  * Emission permit market clearing for internal market
30038  eq_mkt_clearing_nip_c_sasia(c_mkt,t,'c_sasia')$(internal(c_mkt))..
30039      sum(n$(map_clt_n('c_sasia',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
30040   
30041  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
30044  *-------------------------------------------------------------------------------
30045  * Research & Development
30046  * Options:
30047  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
30048  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
30049  *-------------------------------------------------------------------------------
30050   
30052   
30053  * Knowledge stock accumulation
30054  eqk_rd_c_sasia(rd,t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
30055                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
30056                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
30057                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
30058                                        SPILL(rd,t,n)**rd_coef(rd,'d');
30059   
30060  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
30061  eqspill_coop_c_sasia(rd,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_sasia'))..
30062          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
30063                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_sasia',nn)), K_RD(rd,t,nn)) +
30064                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_sasia',nn))), K_RD.l(rd,t,nn))
30065                            ) *
30066                            (
30067                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_sasia',nn)), K_RD(rd,t,nn)) +
30068                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_sasia',nn))), K_RD.l(rd,t,nn))
30069                              ) - K_RD(rd,t,n)
30070                            );
30071   
30072  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
30073  eqspill_lead_c_sasia(rd,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_sasia')) and leadrd(rd,n))..
30074                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
30075   
30076  * No-cooperation : a follower sees is negative effect on the quantity he can grab
30077  eqspill_foll_c_sasia(rd,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_sasia')) and (not leadrd(rd,n)))..
30078                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
30079   
30080  *- Only LbR (without learning by doing)
30081  eqmcost_inv_back_c_sasia(jrd,t,tt,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
30082                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
30083                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
30084   
30085  *- LbR together with learning by doing ==> Two-factor learning curve
30086  eqmcost_inv_back_lbd_c_sasia(jrd,t,tt,tfirst,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
30087                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
30088                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
30089                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
30090   
30091  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
30094  *-------------------------------------------------------------------------------
30095  * Default Climate Policy Implementation
30096  *
30097  * Options:
30098  *    --policy={bau (default),ctax}
30099  *        Implement a climate policy setting
30100  *  [ --scen= ]
30101  *        Policy variant.
30102  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
30103  *          * XXX for a fixed percentage/yr (e.g. 5) growth
30104  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
30105  *  [ --ctax_year=2020 ]
30106  *        Starting year of the carbon tax
30107  *  [ --ctax_initial=30 ]
30108  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
30109  *
30110  *-------------------------------------------------------------------------------
30112   
30113  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
30115  *-------------------------------------------------------------------------------
30116  * Energy efficiency
30117  *-------------------------------------------------------------------------------
30118   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
30121  *-------------------------------------------------------------------------------
30122  * Hydro Power
30123  *-------------------------------------------------------------------------------
30124   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
30127  *-------------------------------------------------------------------------------
30128  * System Integration:
30129  * - Capacity constraint
30130  * - Flexibility constraint
30131  * - Grid Investment
30132  * - Capacity growth constraint
30133  *-------------------------------------------------------------------------------
30134   
30136   
30137   
30138  * Renewable CES
30139   
30140  * Definition of the renewable CES
30141  eqq_elintren_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30142      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
30143   
30144  * Capacity constraint
30145   
30147  eqfirm_capacity_c_sasia(t,n)$(map_clt_n('c_sasia',n) and (not tfix(t)) and year(t) gt 2005)..
30148                   sum(jel_firm, K_EN(jel_firm,t,n))
30149                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
30150                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
30151                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
30152                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
30153                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
30154                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
30155                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
30156                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
30157                                       ) / yearly_hours
30158  ;
30160   
30161  * Flexibility constraint
30162  eqflex_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30163          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
30164                             ( Q_EN('el',t,n) -
30165                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
30166                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
30167                             ) * flex_coeff('load')
30168  ;
30169   
30170  * Grid
30171   
30172  ** Grid depreciation and investments
30173  eqk_en_grid_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
30174                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
30175                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
30176   
30177  ** Grid adjustment to power capacity
30178  eqk_en_grid_to_k_en_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30179                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
30180                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
30181                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
30182                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
30183                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
30184                                     ) / grid_cost +
30185                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
30186                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
30187                                      K_EN('elcsp',t,n);
30188  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
30189   
30190  * Capacity growth constraint
30191  eqcap_growth_c_sasia(jinv,t,tp1,tp2,n)$((map_clt_n('c_sasia',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
30192                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
30193                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
30194   
30195  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
30198  *-------------------------------------------------------------------------------
30199  * Nuclear power plants
30200  *-------------------------------------------------------------------------------
30201   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
30204  *-------------------------------------------------------------------------------
30205  * GHG module
30206  * - CH4 FFI + CH4 waste + CH4 open fires
30207  * - N2O FFI + N2O waste + N2O open fires
30208  *-------------------------------------------------------------------------------
30209   
30211   
30212  * CH4, N2O waste emissions
30213  eqq_emi_waste_c_sasia(waste,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
30214                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
30215   
30216  * n2o FFI
30217  eqq_emi_n2o_ffi_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
30218    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
30219                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
30220                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
30221                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
30222                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
30223                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
30224                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
30225                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
30226                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
30227                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
30228                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
30229                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
30230                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
30231                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
30232                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
30233                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
30234                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
30235                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
30236                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
30237                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
30238                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
30239                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
30240                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
30241                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
30242                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
30243                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
30244                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
30245                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
30246                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
30247                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
30248                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
30249   
30250  * ch4 FFI
30251  eqq_emi_ch4_ffi_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
30252    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
30255  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
30256  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
30257                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
30258                             smax(tt$(year(tt) eq 2015),
30259                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
30262  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
30263  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
30264                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
30265   
30266  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
30269  *-------------------------------------------------------------------------------
30270  * F-gases
30271  * - LLF
30272  * - SLF
30273  *-------------------------------------------------------------------------------
30274   
30276   
30277  * F-gases emissions
30278  eqq_emi_fgases_c_sasia(fgases,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
30279                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
30280   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
30283  *-------------------------------------------------------------------------------
30284  * Landuse [simplified version of the land-use model]
30285  *-------------------------------------------------------------------------------
30286   
30288   
30289  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
30290  eq_wbio_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30291      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
30292   
30294  * Cost of all woody biomass produced for advanced biofuels and woody biomass
30295  eqcost_pes_wbio_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30296      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
30298   
30299  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
30302  *-------------------------------------------------------------------------------
30303  * Bioenergy power plant
30304  *-------------------------------------------------------------------------------
30305   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
30308  *-------------------------------------------------------------------------------
30309  * Traditional Biofuels
30310  * - Requires the precedence of mod_landuse
30311  *-------------------------------------------------------------------------------
30312   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
30315  *-------------------------------------------------------------------------------
30316  * Advanced biofuel
30317  * - Require the precedence of mod_landuse
30318  *-------------------------------------------------------------------------------
30319   
30321   
30322  * Limitations for nel backstops
30323  eqq_en_lim_advbiofuel_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
30324               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
30325               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
30326   
30327  * Peculiarity of advbiofuel
30328  eqmcost_fuel_advbiofuel_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30329                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
30330   
30331  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
30334  *-------------------------------------------------------------------------------
30335  * Carbon Capture and Sequestration
30336  *-------------------------------------------------------------------------------
30337   
30339   
30340  eqq_emi_ccs_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30341                  Q_EMI('ccs_plant',t,n) =e=
30342                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
30343                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
30344  ;
30345   
30346  eqcost_emi_sinks_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30347                  COST_EMI('ccs_plant',t,n) =e=
30348                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
30349                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
30350  ;
30351   
30352  eq_stor_ccs_cum_c_sasia(ccs_stor,tp1,t,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
30353                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
30354  ;
30355   
30356  eq_emi_stor_ccs_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30357                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
30358  ;
30359   
30360  eq_emi_leak_ccs_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30361                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
30362   
30363  *-------------------------------------------------------------------------------
30365   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
30367  *-------------------------------------------------------------------------------
30368  * Coal for non-electric sectors
30369  * - Coke Plants
30370  * - Industrial and Commercial combined-heat-and-power (CHP)
30371  * - Others
30372  *-------------------------------------------------------------------------------
30373   
30375   
30376  eqcost_en_nelcoal_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30377           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
30378                                          nelcoal_max_abat(t,n) *
30379                                          (nelcoal_cmac(n,'a') *
30380                                            Q_EN('nelcoalabat',t,n) /
30381                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
30382                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
30383                                              (exp(nelcoal_cmac(n,'c') *
30384                                                (Q_EN('nelcoalabat',t,n)/
30385                                                  (nelcoal_max_abat(t,n) *
30386                                                      nelcoal_baseline(t,n))
30387                                                  ) - 1 )
30388                                              )
30389                                          );
30390   
30391  eqq_ncoalabat_monotone_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
30392          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
30393   
30394  * ensure Q_EN is lower than K_EN for CCS as not in jel
30395  eqq_en_nelcoalccs_max_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30396          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
30397   
30398  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
30401  *-------------------------------------------------------------------------------
30402  * Wind energy module
30403  * - onshore and offshore
30404  *-------------------------------------------------------------------------------
30405   
30407   
30408  * Capacity limits in the wind onshore electrical sector
30409  eqq_en_mu_windon_c_sasia(wind_dist,wind_class,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
30410      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
30411   
30412  * Capacity limits in the wind offshore electrical sector
30413  eqq_en_mu_windoff_c_sasia(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
30414      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
30415   
30416  * Wind onshore electrical generation plants (new)
30417  eqk_en_windon_c_sasia(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
30418      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
30419                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
30420   
30421  * Wind offshore electrical generation plants (new)
30422  eqk_en_windoff_c_sasia(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
30423      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
30424                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
30425   
30426  * Total onshore wind energy production
30427  eqq_en_windon_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30428                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
30429   
30430  * Total offshore wind energy production
30431  eqq_en_windoff_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30432                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
30433   
30434  * Total onshore wind capacity
30435  eqk_en_windon_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30436                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
30437   
30438  * Total offshore wind capacity
30439  eqk_en_windoff_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30440                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
30441   
30442  * Total onshore wind investment
30443  eqi_en_windon_sum_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
30444                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
30445   
30446  * Total offshore wind investment
30447  eqi_en_windoff_sum_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
30448                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
30449   
30450  *-------------------------------------------------------------------------------
30452   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
30454  *-------------------------------------------------------------------------------
30455  * Solar Powerplants (PV and CSP) to the electrical system
30456  *-------------------------------------------------------------------------------
30457   
30458  *-------------------------------------------------------------------------------
30460   
30461   
30462  * Capacity limits in the pv electrical sector
30463  eqq_en_mu_pv_c_sasia(solar_dist,solar_class,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
30464                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
30465   
30466  * Capacity limits in the csp electrical sector
30467  eqq_en_mu_csp_c_sasia(solar_dist,solar_class,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
30468                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
30469   
30470  * PV electrical generation plants (new)
30471  eqk_en_pv_c_sasia(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
30472                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
30473                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
30474   
30475  * CSP electrical generation plants (new)
30476  eqk_en_csp_c_sasia(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
30477                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
30478                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
30479   
30480  * Total PV energy production
30481  eqq_en_pv_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30482                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
30483   
30484  * Total CSP energy production
30485  eqq_en_csp_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30486                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
30487   
30488  * Total PV capacity
30489  eqk_en_pv_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30490                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
30491   
30492  * Total CSP capacity
30493  eqk_en_csp_sum_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30494                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
30495   
30496  * Total PV investment
30497  eqi_en_pv_sum_c_sasia(t,tp1,n)$(map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
30498                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
30499   
30500  * Total CSP investment
30501  eqi_en_csp_sum_c_sasia(t,tp1,n)$(map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
30502                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
30503   
30504  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
30505  eqk_en_solar_comp_c_sasia(t,n,solar_dist)$(map_clt_n('c_sasia',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
30506                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
30507                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
30508   
30509   
30510   
30511  *-------------------------------------------------------------------------------
30513   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
30515  *-------------------------------------------------------------------------------
30516  * Technology development scenarios
30517  *-------------------------------------------------------------------------------
30518   
30520   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
30522  *-------------------------------------------------------------------------------
30523  * Oil Extraction
30524  * Options:
30525  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
30526  *-------------------------------------------------------------------------------
30527   
30529   
30530  * Capacity
30531  eqoilcap_c_sasia(t,tp1,n,oilg)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
30532      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
30533   
30534  * Production
30535  eqoilprod_c_sasia(t,tp1,n,oilg)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
30536      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
30537   
30538  eqq_out_oil_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30539      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
30540   
30541  * Cumulative production
30542  eqcum_oil_c_sasia(t,tp1,n,oilg)$((map_clt_n('c_sasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
30543      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
30544   
30545  * Cost
30546  eqcost_oil_c_sasia(t,tp1,n,oilg)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
30547      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
30548                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
30549                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
30550   
30551  * Investments
30552  eqi_oil_c_sasia(t,tp1,n,oilg)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
30553      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
30554   
30555  * Total investment
30556  eqi_out_oil_c_sasia(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
30557      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
30558   
30559  * Emissions
30560  eqq_emi_out_oil_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30561      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
30562   
30563  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
30566  *-------------------------------------------------------------------------------
30567  * Uranium Resources
30568  *-------------------------------------------------------------------------------
30569   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
30572  *-------------------------------------------------------------------------------
30573  * Gas Resources
30574  *-------------------------------------------------------------------------------
30575   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
30578  *-------------------------------------------------------------------------------
30579  * Coal Resources
30580  *-------------------------------------------------------------------------------
30581   
30583   
30584   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
30586  *-------------------------------------------------------------------------------
30587  * Climate
30588  *
30589  * Represents the climate
30590  * - based on the DICE model equations
30591  * - Radiative forcing for non CO2 ghgs
30592  * - parameters calibrated to reproduce MAGICC6.4 default response
30593  *
30594  *  Options:
30595  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
30596  * - $setglobal cooperate_on_climate {'YES','NO'}
30597  * - 'YES'(default): Countries within a coalition act in cooperation
30598  *   'NO': Countries within a coalition act individually
30599  *
30600  *-------------------------------------------------------------------------------
30601   
30603   
30605   
30606  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
30609  *-------------------------------------------------------------------------------
30610  * Long-run Damages from Climate Change
30611  * - Economic impacts
30612  * - Adaptation
30613  *-------------------------------------------------------------------------------
30614   
30616   
30618   
30619  *-------------------------------------------------------------------------------
30621   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
30623  *-------------------------------------------------------------------------------
30624  * Light-duty Vehicles for Personal Transport
30625  *-------------------------------------------------------------------------------
30626   
30628   
30629  *** newcode
30630  eqq_inv_red_ban_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30631      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
30632   
30633  ***
30634  *- Number of light duty vehicles
30635  eqnb_veh_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30636      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
30637   
30638  *- Yearly energy demand of vehicles
30639  eqq_en_veh_c_sasia(jveh,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30640      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
30641   
30642  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
30643  eqq_el_edv_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30644      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
30645   
30646  *- Investment cost for hybrid vehicles
30647  eqmcost_inv_hybrid_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
30648                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
30649   
30650  *- Investment cost for plug-in hybrid vehicles
30651  eqmcost_inv_plghybrid_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
30652                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
30653   
30654  *- Investment cost for electric drive vehicles
30655  eqmcost_inv_edv_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
30656                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
30657   
30658  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
30661  *-------------------------------------------------------------------------------
30662  * Road Freight Transport
30663  *-------------------------------------------------------------------------------
30665   
30666  *-  Number of freight vehicles
30667  eqnb_frtveh_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
30668                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
30669   
30670  *-  Yearly fuel consumption of freight vehicles
30671  eqq_en_frtveh_c_sasia(jfrt,t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30672                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
30673   
30674  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
30675  eqq_el_frtedv_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
30676                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
30677   
30678  *-  Investment cost for hbd_stfr vehicle
30679  eqmcost_inv_hbd_stfr_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
30680                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
30681   
30682  *-  Investment cost for plug-in hbd_stfr vehicle
30683  eqmcost_inv_plghbd_stfr_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
30684                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
30685   
30686  *-  Investment cost for electric drive vehicle
30687  eqmcost_inv_edv_stfr_c_sasia(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
30688                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
30689   
30690  *-------------------------------------------------------------------------------
30692   
30693   
30694   
30695   
30696   
30697   
30698  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
30700  *-------------------------------------------------------------------------------
30701  * Traditional Biomass
30702  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
30703  *  - require post_process to be launch before
30704  *-------------------------------------------------------------------------------
30705   
30707   
30708  * Optional modules
30709   
30710  * Policy modules
30711   
30712  * Calibration
30715   
30716   
30717  model witch_c_sasia /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
30719  *-------------------------------------------------------------------------------
30720  * Call modules by order
30721  *-------------------------------------------------------------------------------
30725   
30726  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
30728  *-------------------------------------------------------------------------------
30729  * Algorithm
30730  *-------------------------------------------------------------------------------
30731   
30733   
30734  eqobj_c_sasia
30735   
30736  *-------------------------------------------------------------------------------
30738   
30739  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
30741  *-------------------------------------------------------------------------------
30742  * Time
30743  * - Temporal structure
30744  * - Fixed time periods
30745  * - States of the world
30746  *-------------------------------------------------------------------------------
30747   
30749   
30750  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
30752  *-------------------------------------------------------------------------------
30753  * Geographic dimension and mapping with countries
30754  *-------------------------------------------------------------------------------
30755   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
30758  *-------------------------------------------------------------------------------
30759  * Non-Cooperative Setup
30760  *
30761  * Each region is defined as an individual coalition.
30762  *
30763  *-------------------------------------------------------------------------------
30764   
30766   
30767  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
30769  *-------------------------------------------------------------------------------
30770  * Welfare
30771  *-------------------------------------------------------------------------------
30772   
30774   
30775  equtility_c_sasia
30776   
30777  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
30780  *-------------------------------------------------------------------------------
30781  * Economy
30782  * - Production and Consumption definition
30783  * - Top-level of the production function
30784  * Options:
30785  * --original_ssp=1 : original SSP population and GDP data
30786  *-------------------------------------------------------------------------------
30787   
30789   
30790  eqk_c_sasia
30791  eqq_cc_c_sasia
30792  eqq_fen_c_sasia
30793  eqq_y_c_sasia
30794   
30795  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
30798  *-------------------------------------------------------------------------------
30799  * Energy sector
30800  *-------------------------------------------------------------------------------
30801   
30803   
30804  eq_mkt_clearing_oil_c_sasia
30805  eqcost_pes_c_sasia
30806  eqcost_ses_c_sasia
30807  eqk_en_c_sasia
30808  eqq_ces_el_c_sasia
30809  eqq_ces_nelgas_c_sasia
30810  eqq_el2_c_sasia
30811  eqq_el_c_sasia
30812  eqq_elff_c_sasia
30813  eqq_en_c_sasia
30814  eqq_en_in_c_sasia
30815  eqq_en_mu_c_sasia
30816  eqq_en_tree_c_sasia
30817  eqq_nel_c_sasia
30818  eqq_nelog_c_sasia
30819  eqq_fuel_c_sasia
30820  eqq_elffren_c_sasia
30821   
30822  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
30825  *-------------------------------------------------------------------------------
30826  * Carbon Emissions
30827  * - Total CO2 emissions and CO2 Fossil fuel and Industry
30828  * - CO2 emission costs
30829  * - GHG permit market
30830  *-------------------------------------------------------------------------------
30831   
30833   
30834  eqq_emi_lim_c_sasia
30835  eqq_emi_tree_c_sasia
30836  eqq_emi_co2ffi_c_sasia
30837   
30838  eqcost_emi_co2_c_sasia
30839   
30840  eq_mkt_clearing_nip_c_sasia
30841   
30842  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
30845  *-------------------------------------------------------------------------------
30846  * Research & Development
30847  * Options:
30848  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
30849  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
30850  *-------------------------------------------------------------------------------
30851   
30853   
30854  eqk_rd_c_sasia
30855  eqspill_coop_c_sasia
30856  eqspill_lead_c_sasia
30857  eqspill_foll_c_sasia
30858  eqmcost_inv_back_c_sasia
30859  eqmcost_inv_back_lbd_c_sasia
30860   
30861  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
30864  *-------------------------------------------------------------------------------
30865  * Default Climate Policy Implementation
30866  *
30867  * Options:
30868  *    --policy={bau (default),ctax}
30869  *        Implement a climate policy setting
30870  *  [ --scen= ]
30871  *        Policy variant.
30872  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
30873  *          * XXX for a fixed percentage/yr (e.g. 5) growth
30874  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
30875  *  [ --ctax_year=2020 ]
30876  *        Starting year of the carbon tax
30877  *  [ --ctax_initial=30 ]
30878  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
30879  *
30880  *-------------------------------------------------------------------------------
30882   
30883  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
30885  *-------------------------------------------------------------------------------
30886  * Energy efficiency
30887  *-------------------------------------------------------------------------------
30888   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
30891  *-------------------------------------------------------------------------------
30892  * Hydro Power
30893  *-------------------------------------------------------------------------------
30894   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
30897  *-------------------------------------------------------------------------------
30898  * System Integration:
30899  * - Capacity constraint
30900  * - Flexibility constraint
30901  * - Grid Investment
30902  * - Capacity growth constraint
30903  *-------------------------------------------------------------------------------
30904   
30906   
30907  eqq_elintren_c_sasia
30908  eqflex_c_sasia
30909  eqk_en_grid_c_sasia
30910  eqk_en_grid_to_k_en_c_sasia
30911  eqfirm_capacity_c_sasia
30912  eqcap_growth_c_sasia
30913   
30914  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
30917  *-------------------------------------------------------------------------------
30918  * Nuclear power plants
30919  *-------------------------------------------------------------------------------
30920   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
30923  *-------------------------------------------------------------------------------
30924  * GHG module
30925  * - CH4 FFI + CH4 waste + CH4 open fires
30926  * - N2O FFI + N2O waste + N2O open fires
30927  *-------------------------------------------------------------------------------
30928   
30930   
30931  eqq_emi_waste_c_sasia
30932  eqq_emi_n2o_ffi_c_sasia
30933  eqq_emi_ch4_ffi_c_sasia
30934   
30935  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
30938  *-------------------------------------------------------------------------------
30939  * F-gases
30940  * - LLF
30941  * - SLF
30942  *-------------------------------------------------------------------------------
30943   
30945   
30946  eqq_emi_fgases_c_sasia
30947   
30948  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
30951  *-------------------------------------------------------------------------------
30952  * Landuse [simplified version of the land-use model]
30953  *-------------------------------------------------------------------------------
30954   
30956   
30957  eq_wbio_c_sasia
30958  eqcost_pes_wbio_c_sasia
30959   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
30962  *-------------------------------------------------------------------------------
30963  * Bioenergy power plant
30964  *-------------------------------------------------------------------------------
30965   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
30968  *-------------------------------------------------------------------------------
30969  * Traditional Biofuels
30970  * - Requires the precedence of mod_landuse
30971  *-------------------------------------------------------------------------------
30972   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
30975  *-------------------------------------------------------------------------------
30976  * Advanced biofuel
30977  * - Require the precedence of mod_landuse
30978  *-------------------------------------------------------------------------------
30979   
30981   
30982  eqq_en_lim_advbiofuel_c_sasia
30983  eqmcost_fuel_advbiofuel_c_sasia
30984   
30985  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
30988  *-------------------------------------------------------------------------------
30989  * Carbon Capture and Sequestration
30990  *-------------------------------------------------------------------------------
30991   
30993   
30994  eqq_emi_ccs_c_sasia
30995  eqcost_emi_sinks_c_sasia
30996  eq_stor_ccs_cum_c_sasia
30997  eq_emi_stor_ccs_c_sasia
30998  eq_emi_leak_ccs_c_sasia
30999   
31000  *-------------------------------------------------------------------------------
31002   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
31004  *-------------------------------------------------------------------------------
31005  * Coal for non-electric sectors
31006  * - Coke Plants
31007  * - Industrial and Commercial combined-heat-and-power (CHP)
31008  * - Others
31009  *-------------------------------------------------------------------------------
31010   
31012   
31013  eqcost_en_nelcoal_c_sasia
31014  eqq_ncoalabat_monotone_c_sasia
31015  eqq_en_nelcoalccs_max_c_sasia
31016   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
31019  *-------------------------------------------------------------------------------
31020  * Wind energy module
31021  * - onshore and offshore
31022  *-------------------------------------------------------------------------------
31023   
31025   
31026  eqq_en_mu_windon_c_sasia
31027  eqq_en_mu_windoff_c_sasia
31028  eqk_en_windon_c_sasia
31029  eqk_en_windoff_c_sasia
31030  eqq_en_windon_sum_c_sasia
31031  eqq_en_windoff_sum_c_sasia
31032  eqk_en_windon_sum_c_sasia
31033  eqk_en_windoff_sum_c_sasia
31034  eqi_en_windon_sum_c_sasia
31035  eqi_en_windoff_sum_c_sasia
31036   
31038   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
31040  *-------------------------------------------------------------------------------
31041  * Solar Powerplants (PV and CSP) to the electrical system
31042  *-------------------------------------------------------------------------------
31043   
31044  *-------------------------------------------------------------------------------
31046   
31047  eqq_en_mu_pv_c_sasia
31048  eqq_en_mu_csp_c_sasia
31049  eqk_en_pv_c_sasia
31050  eqk_en_csp_c_sasia
31051  eqq_en_pv_sum_c_sasia
31052  eqq_en_csp_sum_c_sasia
31053  eqk_en_pv_sum_c_sasia
31054  eqk_en_csp_sum_c_sasia
31055  eqi_en_pv_sum_c_sasia
31056  eqi_en_csp_sum_c_sasia
31057  eqk_en_solar_comp_c_sasia
31058   
31059  *-------------------------------------------------------------------------------
31061   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
31063  *-------------------------------------------------------------------------------
31064  * Technology development scenarios
31065  *-------------------------------------------------------------------------------
31066   
31068   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
31070  *-------------------------------------------------------------------------------
31071  * Oil Extraction
31072  * Options:
31073  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
31074  *-------------------------------------------------------------------------------
31075   
31077   
31078  eqoilcap_c_sasia
31079  eqoilprod_c_sasia
31080  eqq_out_oil_c_sasia
31081  eqcum_oil_c_sasia
31082  eqcost_oil_c_sasia
31083  eqi_oil_c_sasia
31084  eqi_out_oil_c_sasia
31085  eqq_emi_out_oil_c_sasia
31086   
31087  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
31090  *-------------------------------------------------------------------------------
31091  * Uranium Resources
31092  *-------------------------------------------------------------------------------
31093   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
31096  *-------------------------------------------------------------------------------
31097  * Gas Resources
31098  *-------------------------------------------------------------------------------
31099   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
31102  *-------------------------------------------------------------------------------
31103  * Coal Resources
31104  *-------------------------------------------------------------------------------
31105   
31107   
31108   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
31110  *-------------------------------------------------------------------------------
31111  * Climate
31112  *
31113  * Represents the climate
31114  * - based on the DICE model equations
31115  * - Radiative forcing for non CO2 ghgs
31116  * - parameters calibrated to reproduce MAGICC6.4 default response
31117  *
31118  *  Options:
31119  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
31120  * - $setglobal cooperate_on_climate {'YES','NO'}
31121  * - 'YES'(default): Countries within a coalition act in cooperation
31122  *   'NO': Countries within a coalition act individually
31123  *
31124  *-------------------------------------------------------------------------------
31125   
31127   
31129   
31130  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
31133  *-------------------------------------------------------------------------------
31134  * Long-run Damages from Climate Change
31135  * - Economic impacts
31136  * - Adaptation
31137  *-------------------------------------------------------------------------------
31138   
31140   
31142   
31143  *-------------------------------------------------------------------------------
31145   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
31147  *-------------------------------------------------------------------------------
31148  * Light-duty Vehicles for Personal Transport
31149  *-------------------------------------------------------------------------------
31150   
31152   
31153  eqnb_veh_c_sasia
31154  eqq_en_veh_c_sasia
31155  eqq_el_edv_c_sasia
31156  eqmcost_inv_hybrid_c_sasia
31157  eqmcost_inv_plghybrid_c_sasia
31158  eqmcost_inv_edv_c_sasia
31159  *** newcode
31160  eqq_inv_red_ban_c_sasia
31161  ***
31162  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
31165  *-------------------------------------------------------------------------------
31166  * Road Freight Transport
31167  *-------------------------------------------------------------------------------
31169   
31170  eqnb_frtveh_c_sasia
31171  eqq_en_frtveh_c_sasia
31172  eqq_el_frtedv_c_sasia
31173  eqmcost_inv_hbd_stfr_c_sasia
31174  eqmcost_inv_plghbd_stfr_c_sasia
31175  eqmcost_inv_edv_stfr_c_sasia
31176   
31177  *-------------------------------------------------------------------------------
31179   
31180   
31181   
31182   
31183   
31184   
31185  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
31187  *-------------------------------------------------------------------------------
31188  * Traditional Biomass
31189  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
31190  *  - require post_process to be launch before
31191  *-------------------------------------------------------------------------------
31192   
31194   
31195  * Optional modules
31196   
31197  * Policy modules
31198   
31199  * Calibration
31202  /;
31203   
31204  witch_c_sasia.optfile=1;   # the option file solvername.opt is to be used
31205  witch_c_sasia.holdfixed=1; # treat fixed values as constant
31206  witch_c_sasia.scaleopt=1;  # Use scaling for better gradients estimation
31207  witch_c_sasia.solvelink=3; # Use parallel or sequential solving
31208   
31213   
31214  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
31216  *-------------------------------------------------------------------------------
31217  * Call modules by order
31218  *-------------------------------------------------------------------------------
31222   
31223  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
31225  *-------------------------------------------------------------------------------
31226  * Algorithm
31227  *-------------------------------------------------------------------------------
31228   
31230   
31231  eqobj_c_seasia
31232   
31233  *-------------------------------------------------------------------------------
31235   
31236  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
31238  *-------------------------------------------------------------------------------
31239  * Time
31240  * - Temporal structure
31241  * - Fixed time periods
31242  * - States of the world
31243  *-------------------------------------------------------------------------------
31244   
31246   
31247  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
31249  *-------------------------------------------------------------------------------
31250  * Geographic dimension and mapping with countries
31251  *-------------------------------------------------------------------------------
31252   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
31255  *-------------------------------------------------------------------------------
31256  * Non-Cooperative Setup
31257  *
31258  * Each region is defined as an individual coalition.
31259  *
31260  *-------------------------------------------------------------------------------
31261   
31263   
31264  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
31266  *-------------------------------------------------------------------------------
31267  * Welfare
31268  *-------------------------------------------------------------------------------
31269   
31271   
31272  equtility_c_seasia
31273   
31274  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
31277  *-------------------------------------------------------------------------------
31278  * Economy
31279  * - Production and Consumption definition
31280  * - Top-level of the production function
31281  * Options:
31282  * --original_ssp=1 : original SSP population and GDP data
31283  *-------------------------------------------------------------------------------
31284   
31286   
31287  eqk_c_seasia
31288  eqq_cc_c_seasia
31289  eqq_fen_c_seasia
31290  eqq_y_c_seasia
31291   
31292  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
31295  *-------------------------------------------------------------------------------
31296  * Energy sector
31297  *-------------------------------------------------------------------------------
31298   
31300   
31301  eq_mkt_clearing_oil_c_seasia
31302  eqcost_pes_c_seasia
31303  eqcost_ses_c_seasia
31304  eqk_en_c_seasia
31305  eqq_ces_el_c_seasia
31306  eqq_ces_nelgas_c_seasia
31307  eqq_el2_c_seasia
31308  eqq_el_c_seasia
31309  eqq_elff_c_seasia
31310  eqq_en_c_seasia
31311  eqq_en_in_c_seasia
31312  eqq_en_mu_c_seasia
31313  eqq_en_tree_c_seasia
31314  eqq_nel_c_seasia
31315  eqq_nelog_c_seasia
31316  eqq_fuel_c_seasia
31317  eqq_elffren_c_seasia
31318   
31319  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
31322  *-------------------------------------------------------------------------------
31323  * Carbon Emissions
31324  * - Total CO2 emissions and CO2 Fossil fuel and Industry
31325  * - CO2 emission costs
31326  * - GHG permit market
31327  *-------------------------------------------------------------------------------
31328   
31330   
31331  eqq_emi_lim_c_seasia
31332  eqq_emi_tree_c_seasia
31333  eqq_emi_co2ffi_c_seasia
31334   
31335  eqcost_emi_co2_c_seasia
31336   
31337  eq_mkt_clearing_nip_c_seasia
31338   
31339  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
31342  *-------------------------------------------------------------------------------
31343  * Research & Development
31344  * Options:
31345  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
31346  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
31347  *-------------------------------------------------------------------------------
31348   
31350   
31351  eqk_rd_c_seasia
31352  eqspill_coop_c_seasia
31353  eqspill_lead_c_seasia
31354  eqspill_foll_c_seasia
31355  eqmcost_inv_back_c_seasia
31356  eqmcost_inv_back_lbd_c_seasia
31357   
31358  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
31361  *-------------------------------------------------------------------------------
31362  * Default Climate Policy Implementation
31363  *
31364  * Options:
31365  *    --policy={bau (default),ctax}
31366  *        Implement a climate policy setting
31367  *  [ --scen= ]
31368  *        Policy variant.
31369  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
31370  *          * XXX for a fixed percentage/yr (e.g. 5) growth
31371  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
31372  *  [ --ctax_year=2020 ]
31373  *        Starting year of the carbon tax
31374  *  [ --ctax_initial=30 ]
31375  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
31376  *
31377  *-------------------------------------------------------------------------------
31379   
31380  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
31382  *-------------------------------------------------------------------------------
31383  * Energy efficiency
31384  *-------------------------------------------------------------------------------
31385   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
31388  *-------------------------------------------------------------------------------
31389  * Hydro Power
31390  *-------------------------------------------------------------------------------
31391   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
31394  *-------------------------------------------------------------------------------
31395  * System Integration:
31396  * - Capacity constraint
31397  * - Flexibility constraint
31398  * - Grid Investment
31399  * - Capacity growth constraint
31400  *-------------------------------------------------------------------------------
31401   
31403   
31404  eqq_elintren_c_seasia
31405  eqflex_c_seasia
31406  eqk_en_grid_c_seasia
31407  eqk_en_grid_to_k_en_c_seasia
31408  eqfirm_capacity_c_seasia
31409  eqcap_growth_c_seasia
31410   
31411  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
31414  *-------------------------------------------------------------------------------
31415  * Nuclear power plants
31416  *-------------------------------------------------------------------------------
31417   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
31420  *-------------------------------------------------------------------------------
31421  * GHG module
31422  * - CH4 FFI + CH4 waste + CH4 open fires
31423  * - N2O FFI + N2O waste + N2O open fires
31424  *-------------------------------------------------------------------------------
31425   
31427   
31428  eqq_emi_waste_c_seasia
31429  eqq_emi_n2o_ffi_c_seasia
31430  eqq_emi_ch4_ffi_c_seasia
31431   
31432  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
31435  *-------------------------------------------------------------------------------
31436  * F-gases
31437  * - LLF
31438  * - SLF
31439  *-------------------------------------------------------------------------------
31440   
31442   
31443  eqq_emi_fgases_c_seasia
31444   
31445  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
31448  *-------------------------------------------------------------------------------
31449  * Landuse [simplified version of the land-use model]
31450  *-------------------------------------------------------------------------------
31451   
31453   
31454  eq_wbio_c_seasia
31455  eqcost_pes_wbio_c_seasia
31456   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
31459  *-------------------------------------------------------------------------------
31460  * Bioenergy power plant
31461  *-------------------------------------------------------------------------------
31462   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
31465  *-------------------------------------------------------------------------------
31466  * Traditional Biofuels
31467  * - Requires the precedence of mod_landuse
31468  *-------------------------------------------------------------------------------
31469   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
31472  *-------------------------------------------------------------------------------
31473  * Advanced biofuel
31474  * - Require the precedence of mod_landuse
31475  *-------------------------------------------------------------------------------
31476   
31478   
31479  eqq_en_lim_advbiofuel_c_seasia
31480  eqmcost_fuel_advbiofuel_c_seasia
31481   
31482  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
31485  *-------------------------------------------------------------------------------
31486  * Carbon Capture and Sequestration
31487  *-------------------------------------------------------------------------------
31488   
31490   
31491  eqq_emi_ccs_c_seasia
31492  eqcost_emi_sinks_c_seasia
31493  eq_stor_ccs_cum_c_seasia
31494  eq_emi_stor_ccs_c_seasia
31495  eq_emi_leak_ccs_c_seasia
31496   
31497  *-------------------------------------------------------------------------------
31499   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
31501  *-------------------------------------------------------------------------------
31502  * Coal for non-electric sectors
31503  * - Coke Plants
31504  * - Industrial and Commercial combined-heat-and-power (CHP)
31505  * - Others
31506  *-------------------------------------------------------------------------------
31507   
31509   
31510  eqcost_en_nelcoal_c_seasia
31511  eqq_ncoalabat_monotone_c_seasia
31512  eqq_en_nelcoalccs_max_c_seasia
31513   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
31516  *-------------------------------------------------------------------------------
31517  * Wind energy module
31518  * - onshore and offshore
31519  *-------------------------------------------------------------------------------
31520   
31522   
31523  eqq_en_mu_windon_c_seasia
31524  eqq_en_mu_windoff_c_seasia
31525  eqk_en_windon_c_seasia
31526  eqk_en_windoff_c_seasia
31527  eqq_en_windon_sum_c_seasia
31528  eqq_en_windoff_sum_c_seasia
31529  eqk_en_windon_sum_c_seasia
31530  eqk_en_windoff_sum_c_seasia
31531  eqi_en_windon_sum_c_seasia
31532  eqi_en_windoff_sum_c_seasia
31533   
31535   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
31537  *-------------------------------------------------------------------------------
31538  * Solar Powerplants (PV and CSP) to the electrical system
31539  *-------------------------------------------------------------------------------
31540   
31541  *-------------------------------------------------------------------------------
31543   
31544  eqq_en_mu_pv_c_seasia
31545  eqq_en_mu_csp_c_seasia
31546  eqk_en_pv_c_seasia
31547  eqk_en_csp_c_seasia
31548  eqq_en_pv_sum_c_seasia
31549  eqq_en_csp_sum_c_seasia
31550  eqk_en_pv_sum_c_seasia
31551  eqk_en_csp_sum_c_seasia
31552  eqi_en_pv_sum_c_seasia
31553  eqi_en_csp_sum_c_seasia
31554  eqk_en_solar_comp_c_seasia
31555   
31556  *-------------------------------------------------------------------------------
31558   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
31560  *-------------------------------------------------------------------------------
31561  * Technology development scenarios
31562  *-------------------------------------------------------------------------------
31563   
31565   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
31567  *-------------------------------------------------------------------------------
31568  * Oil Extraction
31569  * Options:
31570  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
31571  *-------------------------------------------------------------------------------
31572   
31574   
31575  eqoilcap_c_seasia
31576  eqoilprod_c_seasia
31577  eqq_out_oil_c_seasia
31578  eqcum_oil_c_seasia
31579  eqcost_oil_c_seasia
31580  eqi_oil_c_seasia
31581  eqi_out_oil_c_seasia
31582  eqq_emi_out_oil_c_seasia
31583   
31584  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
31587  *-------------------------------------------------------------------------------
31588  * Uranium Resources
31589  *-------------------------------------------------------------------------------
31590   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
31593  *-------------------------------------------------------------------------------
31594  * Gas Resources
31595  *-------------------------------------------------------------------------------
31596   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
31599  *-------------------------------------------------------------------------------
31600  * Coal Resources
31601  *-------------------------------------------------------------------------------
31602   
31604   
31605   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
31607  *-------------------------------------------------------------------------------
31608  * Climate
31609  *
31610  * Represents the climate
31611  * - based on the DICE model equations
31612  * - Radiative forcing for non CO2 ghgs
31613  * - parameters calibrated to reproduce MAGICC6.4 default response
31614  *
31615  *  Options:
31616  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
31617  * - $setglobal cooperate_on_climate {'YES','NO'}
31618  * - 'YES'(default): Countries within a coalition act in cooperation
31619  *   'NO': Countries within a coalition act individually
31620  *
31621  *-------------------------------------------------------------------------------
31622   
31624   
31626   
31627  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
31630  *-------------------------------------------------------------------------------
31631  * Long-run Damages from Climate Change
31632  * - Economic impacts
31633  * - Adaptation
31634  *-------------------------------------------------------------------------------
31635   
31637   
31639   
31640  *-------------------------------------------------------------------------------
31642   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
31644  *-------------------------------------------------------------------------------
31645  * Light-duty Vehicles for Personal Transport
31646  *-------------------------------------------------------------------------------
31647   
31649   
31650  eqnb_veh_c_seasia
31651  eqq_en_veh_c_seasia
31652  eqq_el_edv_c_seasia
31653  eqmcost_inv_hybrid_c_seasia
31654  eqmcost_inv_plghybrid_c_seasia
31655  eqmcost_inv_edv_c_seasia
31656  *** newcode
31657  eqq_inv_red_ban_c_seasia
31658  ***
31659  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
31662  *-------------------------------------------------------------------------------
31663  * Road Freight Transport
31664  *-------------------------------------------------------------------------------
31666   
31667  eqnb_frtveh_c_seasia
31668  eqq_en_frtveh_c_seasia
31669  eqq_el_frtedv_c_seasia
31670  eqmcost_inv_hbd_stfr_c_seasia
31671  eqmcost_inv_plghbd_stfr_c_seasia
31672  eqmcost_inv_edv_stfr_c_seasia
31673   
31674  *-------------------------------------------------------------------------------
31676   
31677   
31678   
31679   
31680   
31681   
31682  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
31684  *-------------------------------------------------------------------------------
31685  * Traditional Biomass
31686  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
31687  *  - require post_process to be launch before
31688  *-------------------------------------------------------------------------------
31689   
31691   
31692  * Optional modules
31693   
31694  * Policy modules
31695   
31696  * Calibration
31699  ;
31700   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
31702  *-------------------------------------------------------------------------------
31703  * Call modules by order
31704  *-------------------------------------------------------------------------------
31708   
31709  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
31711  *-------------------------------------------------------------------------------
31712  * Algorithm
31713  *-------------------------------------------------------------------------------
31714   
31716   
31718  * Add the component of the (maximized) objective function as required by the ADMM algorithm
31719  eqobj_c_seasia..
31720      OBJADMM =e= UTILITY -
31721          sum(t, rho_admm('oil',t) / 2 *
31722              sum(n$(map_clt_n('c_seasia',n) and trading_t('oil',t,n)),
31723                  power(
31724                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
31725                      x_admm('oil',t,n) +
31726                      xavg_admm('oil',t) +
31727                      u_admm('oil', t)
31728                  ,2)
31729              )) -
31730          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
31731              sum(n$(map_clt_n('c_seasia',n) and trading_t(c_mkt,t,n)),
31732                  power(
31733                      Q_EMI(c_mkt,t,n) -
31734                      x_admm(c_mkt,t,n) +
31735                      xavg_admm(c_mkt,t) +
31736                      u_admm(c_mkt,t)
31737                  ,2)
31738              ))
31739      ;
31741   
31742  *-------------------------------------------------------------------------------
31744   
31745  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
31747  *-------------------------------------------------------------------------------
31748  * Time
31749  * - Temporal structure
31750  * - Fixed time periods
31751  * - States of the world
31752  *-------------------------------------------------------------------------------
31753   
31755   
31756  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
31758  *-------------------------------------------------------------------------------
31759  * Geographic dimension and mapping with countries
31760  *-------------------------------------------------------------------------------
31761   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
31764  *-------------------------------------------------------------------------------
31765  * Non-Cooperative Setup
31766  *
31767  * Each region is defined as an individual coalition.
31768  *
31769  *-------------------------------------------------------------------------------
31770   
31772   
31773  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
31775  *-------------------------------------------------------------------------------
31776  * Welfare
31777  *-------------------------------------------------------------------------------
31778   
31780   
31781  * Objective function - Welfare to be maximized
31782  equtility_c_seasia..
31783      UTILITY =e=
31784   
31785  * Negishi SWF
31787   
31788  * Welfare functions based on CEBGE
31791                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
31792                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
31793                      ((sum(n$map_clt_n('c_seasia',n),
31794                        (l(t,n) / sum(nn$map_clt_n('c_seasia',nn), l(t,nn))) *
31795                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
31796                       )**(1 / (1 - gamma))
31797                      )**(1 - eta) ) +
31798                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
31799                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
31800                      ((sum(n$map_clt_n('c_seasia',n),
31801                        (l(t,n) / sum(nn$map_clt_n('c_seasia',nn), l(t,nn))) *
31802                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
31803                       )**(1 / (1 - gamma))
31804                      )**(1 - eta) )
31805                  )**(1/(1 - eta)) * 1e6
31808   
31809   
31810  ;
31811   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
31814  *-------------------------------------------------------------------------------
31815  * Economy
31816  * - Production and Consumption definition
31817  * - Top-level of the production function
31818  * Options:
31819  * --original_ssp=1 : original SSP population and GDP data
31820  *-------------------------------------------------------------------------------
31821   
31823   
31824  * Production
31825  eqq_y_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31826   
31827      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
31828                     ## Climate feedback on economy
31830                     ## Net cost of Primary and Secondary Energy Sources
31831                     - sum(fuel, COST_FUEL(fuel,t,n))
31832                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
31833                     - sum(cce, COST_EMI(cce,t,n))
31834                     ## Carbon tax
31835                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
31836                     ## Additionnal costs on gross product
31837                     - sum(ccy, COST_Y(ccy,t,n))
31838  ;
31839   
31840  * Consumption
31841  eqq_cc_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
31842      Q('cc',t,n) =e= Q('y',t,n)
31843                      ## Investments in goods g (final good, adaptation)
31844                      -sum(g, I(g,t,n))
31845                      ## Investments in r&d
31846                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
31847                      ## Investments in energy technlogies
31848                      -sum(jinv, I_EN(jinv,t,n))
31849                       ## Investments in grid infrastructures
31850                      - I_EN_GRID(t,n)
31851                      ## Investments in extraction sector
31852                      -sum(extract(f), I_OUT(f,t,n))
31853                      ## O&M for energy technlogies
31854                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
31855                      ## O&M for extraction
31856                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
31857                      ## Energy technology penalty costs
31858                      -sum(jpenalty(j), COST_EN(j,t,n))
31859  ;
31860   
31861  * Capital accumulation
31862  eqk_c_seasia(g,t,tp1,n)$(map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
31863      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
31864   
31865  * Energy services
31866  eqq_fen_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31867      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
31868   
31869  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
31872  *-------------------------------------------------------------------------------
31873  * Energy sector
31874  *-------------------------------------------------------------------------------
31875   
31877   
31878  *-------------------------------------------------------------------------------
31879  * Production - Energy sector
31880  *-------------------------------------------------------------------------------
31881   
31882  eqq_en_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31883      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
31884   
31885  *-------------------------------------------------------------------------------
31886  * Production - Electrical sector
31887  *-------------------------------------------------------------------------------
31888   
31889  eqq_el_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31890      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
31891   
31892  eqq_el2_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31893      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
31894   
31895  eqq_elffren_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31896      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
31897  eqq_elff_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31898      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
31899   
31900  eqq_ces_el_c_seasia(ices_el,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
31901      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
31902  ;
31903   
31904  *-------------------------------------------------------------------------------
31905  * Production - Non-electrical sector
31906  *-------------------------------------------------------------------------------
31907   
31908  eqq_nel_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31909      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
31910   
31911  eqq_nelog_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31912      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
31913  ;
31914  eqq_ces_nelgas_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31915      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
31916   
31917  *-------------------------------------------------------------------------------
31918  * PES and fuels
31919  *-------------------------------------------------------------------------------
31920   
31921  eqq_fuel_c_seasia(fuel,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
31922      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
31923   
31924  *-------------------------------------------------------------------------------
31925  * Cost
31926  *-------------------------------------------------------------------------------
31927   
31928  * Net cost of Primary Energy Supplies
31929  eqcost_pes_c_seasia(f,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
31930      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
31931                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
31932   
31933  * Net cost of Secondary Energy Supplies
31934  eqcost_ses_c_seasia(s,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31935      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
31936   
31937   
31938  *-------------------------------------------------------------------------------
31939  * Market balances
31940  *-------------------------------------------------------------------------------
31941   
31942  eq_mkt_clearing_oil_c_seasia(t,'c_seasia')$(internal('oil'))..
31943      sum( n$(map_clt_n('c_seasia',n) and trading_t('oil',t,n)),
31944          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
31945      ) =e= 0;
31946   
31947  *-------------------------------------------------------------------------------
31948  * New capital in the energy sector
31949  *-------------------------------------------------------------------------------
31950   
31951  * Electrical generation plants (new)
31952  eqk_en_c_seasia(jinv,t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
31953      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
31954                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
31955   
31956  *-------------------------------------------------------------------------------
31957  * ENERGY
31958  *-------------------------------------------------------------------------------
31959   
31960  * Capacity limits in the electrical sector
31961  eqq_en_mu_c_seasia(jel,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
31962      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
31963   
31964  * Efficiency of energy technology sector
31965  eqq_en_in_c_seasia(jfed,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
31966      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
31967                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
31968   
31969  * Energy generation "tree"
31970  eqq_en_tree_c_seasia(j,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
31971      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
31972   
31973  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
31976  *-------------------------------------------------------------------------------
31977  * Carbon Emissions
31978  * - Total CO2 emissions and CO2 Fossil fuel and Industry
31979  * - CO2 emission costs
31980  * - GHG permit market
31981  *-------------------------------------------------------------------------------
31982   
31984   
31985  * GHG emission cap
31986  eqq_emi_lim_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
31987      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
31988                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
31989   
31990  * Compute total and sectoral emissions
31991  eqq_emi_tree_c_seasia(t,n,e)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
31992      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
31993   
31994  * Industrial CO2 emissions
31995  eqq_emi_co2ffi_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
31996      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
31997                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
31998                              # Emissions from biomass
31999                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
32000                              # Emissions from fuel extraction
32001                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
32002                              # Captured emissions
32003                              sum(sink, Q_EMI(sink,t,n));
32004   
32005  * CO2 emission costs
32006  eqcost_emi_co2_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32007      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
32008   
32009  * Emission permit market clearing for internal market
32010  eq_mkt_clearing_nip_c_seasia(c_mkt,t,'c_seasia')$(internal(c_mkt))..
32011      sum(n$(map_clt_n('c_seasia',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
32012   
32013  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
32016  *-------------------------------------------------------------------------------
32017  * Research & Development
32018  * Options:
32019  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
32020  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
32021  *-------------------------------------------------------------------------------
32022   
32024   
32025  * Knowledge stock accumulation
32026  eqk_rd_c_seasia(rd,t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
32027                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
32028                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
32029                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
32030                                        SPILL(rd,t,n)**rd_coef(rd,'d');
32031   
32032  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
32033  eqspill_coop_c_seasia(rd,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_seasia'))..
32034          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
32035                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_seasia',nn)), K_RD(rd,t,nn)) +
32036                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_seasia',nn))), K_RD.l(rd,t,nn))
32037                            ) *
32038                            (
32039                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_seasia',nn)), K_RD(rd,t,nn)) +
32040                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_seasia',nn))), K_RD.l(rd,t,nn))
32041                              ) - K_RD(rd,t,n)
32042                            );
32043   
32044  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
32045  eqspill_lead_c_seasia(rd,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_seasia')) and leadrd(rd,n))..
32046                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
32047   
32048  * No-cooperation : a follower sees is negative effect on the quantity he can grab
32049  eqspill_foll_c_seasia(rd,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_seasia')) and (not leadrd(rd,n)))..
32050                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
32051   
32052  *- Only LbR (without learning by doing)
32053  eqmcost_inv_back_c_seasia(jrd,t,tt,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
32054                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
32055                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
32056   
32057  *- LbR together with learning by doing ==> Two-factor learning curve
32058  eqmcost_inv_back_lbd_c_seasia(jrd,t,tt,tfirst,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
32059                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
32060                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
32061                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
32062   
32063  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
32066  *-------------------------------------------------------------------------------
32067  * Default Climate Policy Implementation
32068  *
32069  * Options:
32070  *    --policy={bau (default),ctax}
32071  *        Implement a climate policy setting
32072  *  [ --scen= ]
32073  *        Policy variant.
32074  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
32075  *          * XXX for a fixed percentage/yr (e.g. 5) growth
32076  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
32077  *  [ --ctax_year=2020 ]
32078  *        Starting year of the carbon tax
32079  *  [ --ctax_initial=30 ]
32080  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
32081  *
32082  *-------------------------------------------------------------------------------
32084   
32085  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
32087  *-------------------------------------------------------------------------------
32088  * Energy efficiency
32089  *-------------------------------------------------------------------------------
32090   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
32093  *-------------------------------------------------------------------------------
32094  * Hydro Power
32095  *-------------------------------------------------------------------------------
32096   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
32099  *-------------------------------------------------------------------------------
32100  * System Integration:
32101  * - Capacity constraint
32102  * - Flexibility constraint
32103  * - Grid Investment
32104  * - Capacity growth constraint
32105  *-------------------------------------------------------------------------------
32106   
32108   
32109   
32110  * Renewable CES
32111   
32112  * Definition of the renewable CES
32113  eqq_elintren_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32114      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
32115   
32116  * Capacity constraint
32117   
32119  eqfirm_capacity_c_seasia(t,n)$(map_clt_n('c_seasia',n) and (not tfix(t)) and year(t) gt 2005)..
32120                   sum(jel_firm, K_EN(jel_firm,t,n))
32121                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
32122                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
32123                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
32124                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
32125                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
32126                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
32127                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
32128                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
32129                                       ) / yearly_hours
32130  ;
32132   
32133  * Flexibility constraint
32134  eqflex_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32135          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
32136                             ( Q_EN('el',t,n) -
32137                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
32138                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
32139                             ) * flex_coeff('load')
32140  ;
32141   
32142  * Grid
32143   
32144  ** Grid depreciation and investments
32145  eqk_en_grid_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
32146                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
32147                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
32148   
32149  ** Grid adjustment to power capacity
32150  eqk_en_grid_to_k_en_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32151                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
32152                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
32153                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
32154                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
32155                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
32156                                     ) / grid_cost +
32157                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
32158                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
32159                                      K_EN('elcsp',t,n);
32160  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
32161   
32162  * Capacity growth constraint
32163  eqcap_growth_c_seasia(jinv,t,tp1,tp2,n)$((map_clt_n('c_seasia',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
32164                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
32165                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
32166   
32167  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
32170  *-------------------------------------------------------------------------------
32171  * Nuclear power plants
32172  *-------------------------------------------------------------------------------
32173   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
32176  *-------------------------------------------------------------------------------
32177  * GHG module
32178  * - CH4 FFI + CH4 waste + CH4 open fires
32179  * - N2O FFI + N2O waste + N2O open fires
32180  *-------------------------------------------------------------------------------
32181   
32183   
32184  * CH4, N2O waste emissions
32185  eqq_emi_waste_c_seasia(waste,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
32186                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
32187   
32188  * n2o FFI
32189  eqq_emi_n2o_ffi_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
32190    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
32191                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
32192                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
32193                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
32194                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
32195                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
32196                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
32197                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
32198                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
32199                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
32200                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
32201                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
32202                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
32203                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
32204                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
32205                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
32206                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
32207                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
32208                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
32209                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
32210                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
32211                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
32212                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
32213                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
32214                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
32215                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
32216                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
32217                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
32218                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
32219                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
32220                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
32221   
32222  * ch4 FFI
32223  eqq_emi_ch4_ffi_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
32224    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
32227  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
32228  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
32229                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
32230                             smax(tt$(year(tt) eq 2015),
32231                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
32234  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
32235  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
32236                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
32237   
32238  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
32241  *-------------------------------------------------------------------------------
32242  * F-gases
32243  * - LLF
32244  * - SLF
32245  *-------------------------------------------------------------------------------
32246   
32248   
32249  * F-gases emissions
32250  eqq_emi_fgases_c_seasia(fgases,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
32251                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
32252   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
32255  *-------------------------------------------------------------------------------
32256  * Landuse [simplified version of the land-use model]
32257  *-------------------------------------------------------------------------------
32258   
32260   
32261  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
32262  eq_wbio_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32263      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
32264   
32266  * Cost of all woody biomass produced for advanced biofuels and woody biomass
32267  eqcost_pes_wbio_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32268      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
32270   
32271  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
32274  *-------------------------------------------------------------------------------
32275  * Bioenergy power plant
32276  *-------------------------------------------------------------------------------
32277   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
32280  *-------------------------------------------------------------------------------
32281  * Traditional Biofuels
32282  * - Requires the precedence of mod_landuse
32283  *-------------------------------------------------------------------------------
32284   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
32287  *-------------------------------------------------------------------------------
32288  * Advanced biofuel
32289  * - Require the precedence of mod_landuse
32290  *-------------------------------------------------------------------------------
32291   
32293   
32294  * Limitations for nel backstops
32295  eqq_en_lim_advbiofuel_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
32296               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
32297               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
32298   
32299  * Peculiarity of advbiofuel
32300  eqmcost_fuel_advbiofuel_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32301                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
32302   
32303  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
32306  *-------------------------------------------------------------------------------
32307  * Carbon Capture and Sequestration
32308  *-------------------------------------------------------------------------------
32309   
32311   
32312  eqq_emi_ccs_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32313                  Q_EMI('ccs_plant',t,n) =e=
32314                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
32315                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
32316  ;
32317   
32318  eqcost_emi_sinks_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32319                  COST_EMI('ccs_plant',t,n) =e=
32320                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
32321                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
32322  ;
32323   
32324  eq_stor_ccs_cum_c_seasia(ccs_stor,tp1,t,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
32325                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
32326  ;
32327   
32328  eq_emi_stor_ccs_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32329                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
32330  ;
32331   
32332  eq_emi_leak_ccs_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32333                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
32334   
32335  *-------------------------------------------------------------------------------
32337   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
32339  *-------------------------------------------------------------------------------
32340  * Coal for non-electric sectors
32341  * - Coke Plants
32342  * - Industrial and Commercial combined-heat-and-power (CHP)
32343  * - Others
32344  *-------------------------------------------------------------------------------
32345   
32347   
32348  eqcost_en_nelcoal_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32349           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
32350                                          nelcoal_max_abat(t,n) *
32351                                          (nelcoal_cmac(n,'a') *
32352                                            Q_EN('nelcoalabat',t,n) /
32353                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
32354                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
32355                                              (exp(nelcoal_cmac(n,'c') *
32356                                                (Q_EN('nelcoalabat',t,n)/
32357                                                  (nelcoal_max_abat(t,n) *
32358                                                      nelcoal_baseline(t,n))
32359                                                  ) - 1 )
32360                                              )
32361                                          );
32362   
32363  eqq_ncoalabat_monotone_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
32364          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
32365   
32366  * ensure Q_EN is lower than K_EN for CCS as not in jel
32367  eqq_en_nelcoalccs_max_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32368          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
32369   
32370  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
32373  *-------------------------------------------------------------------------------
32374  * Wind energy module
32375  * - onshore and offshore
32376  *-------------------------------------------------------------------------------
32377   
32379   
32380  * Capacity limits in the wind onshore electrical sector
32381  eqq_en_mu_windon_c_seasia(wind_dist,wind_class,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
32382      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
32383   
32384  * Capacity limits in the wind offshore electrical sector
32385  eqq_en_mu_windoff_c_seasia(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
32386      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
32387   
32388  * Wind onshore electrical generation plants (new)
32389  eqk_en_windon_c_seasia(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
32390      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
32391                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
32392   
32393  * Wind offshore electrical generation plants (new)
32394  eqk_en_windoff_c_seasia(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
32395      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
32396                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
32397   
32398  * Total onshore wind energy production
32399  eqq_en_windon_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32400                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
32401   
32402  * Total offshore wind energy production
32403  eqq_en_windoff_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32404                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
32405   
32406  * Total onshore wind capacity
32407  eqk_en_windon_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32408                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
32409   
32410  * Total offshore wind capacity
32411  eqk_en_windoff_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32412                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
32413   
32414  * Total onshore wind investment
32415  eqi_en_windon_sum_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
32416                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
32417   
32418  * Total offshore wind investment
32419  eqi_en_windoff_sum_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
32420                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
32421   
32422  *-------------------------------------------------------------------------------
32424   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
32426  *-------------------------------------------------------------------------------
32427  * Solar Powerplants (PV and CSP) to the electrical system
32428  *-------------------------------------------------------------------------------
32429   
32430  *-------------------------------------------------------------------------------
32432   
32433   
32434  * Capacity limits in the pv electrical sector
32435  eqq_en_mu_pv_c_seasia(solar_dist,solar_class,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
32436                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
32437   
32438  * Capacity limits in the csp electrical sector
32439  eqq_en_mu_csp_c_seasia(solar_dist,solar_class,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
32440                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
32441   
32442  * PV electrical generation plants (new)
32443  eqk_en_pv_c_seasia(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
32444                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
32445                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
32446   
32447  * CSP electrical generation plants (new)
32448  eqk_en_csp_c_seasia(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
32449                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
32450                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
32451   
32452  * Total PV energy production
32453  eqq_en_pv_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32454                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
32455   
32456  * Total CSP energy production
32457  eqq_en_csp_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32458                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
32459   
32460  * Total PV capacity
32461  eqk_en_pv_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32462                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
32463   
32464  * Total CSP capacity
32465  eqk_en_csp_sum_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32466                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
32467   
32468  * Total PV investment
32469  eqi_en_pv_sum_c_seasia(t,tp1,n)$(map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
32470                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
32471   
32472  * Total CSP investment
32473  eqi_en_csp_sum_c_seasia(t,tp1,n)$(map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
32474                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
32475   
32476  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
32477  eqk_en_solar_comp_c_seasia(t,n,solar_dist)$(map_clt_n('c_seasia',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
32478                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
32479                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
32480   
32481   
32482   
32483  *-------------------------------------------------------------------------------
32485   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
32487  *-------------------------------------------------------------------------------
32488  * Technology development scenarios
32489  *-------------------------------------------------------------------------------
32490   
32492   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
32494  *-------------------------------------------------------------------------------
32495  * Oil Extraction
32496  * Options:
32497  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
32498  *-------------------------------------------------------------------------------
32499   
32501   
32502  * Capacity
32503  eqoilcap_c_seasia(t,tp1,n,oilg)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
32504      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
32505   
32506  * Production
32507  eqoilprod_c_seasia(t,tp1,n,oilg)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
32508      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
32509   
32510  eqq_out_oil_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32511      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
32512   
32513  * Cumulative production
32514  eqcum_oil_c_seasia(t,tp1,n,oilg)$((map_clt_n('c_seasia',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
32515      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
32516   
32517  * Cost
32518  eqcost_oil_c_seasia(t,tp1,n,oilg)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
32519      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
32520                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
32521                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
32522   
32523  * Investments
32524  eqi_oil_c_seasia(t,tp1,n,oilg)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
32525      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
32526   
32527  * Total investment
32528  eqi_out_oil_c_seasia(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
32529      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
32530   
32531  * Emissions
32532  eqq_emi_out_oil_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32533      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
32534   
32535  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
32538  *-------------------------------------------------------------------------------
32539  * Uranium Resources
32540  *-------------------------------------------------------------------------------
32541   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
32544  *-------------------------------------------------------------------------------
32545  * Gas Resources
32546  *-------------------------------------------------------------------------------
32547   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
32550  *-------------------------------------------------------------------------------
32551  * Coal Resources
32552  *-------------------------------------------------------------------------------
32553   
32555   
32556   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
32558  *-------------------------------------------------------------------------------
32559  * Climate
32560  *
32561  * Represents the climate
32562  * - based on the DICE model equations
32563  * - Radiative forcing for non CO2 ghgs
32564  * - parameters calibrated to reproduce MAGICC6.4 default response
32565  *
32566  *  Options:
32567  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
32568  * - $setglobal cooperate_on_climate {'YES','NO'}
32569  * - 'YES'(default): Countries within a coalition act in cooperation
32570  *   'NO': Countries within a coalition act individually
32571  *
32572  *-------------------------------------------------------------------------------
32573   
32575   
32577   
32578  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
32581  *-------------------------------------------------------------------------------
32582  * Long-run Damages from Climate Change
32583  * - Economic impacts
32584  * - Adaptation
32585  *-------------------------------------------------------------------------------
32586   
32588   
32590   
32591  *-------------------------------------------------------------------------------
32593   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
32595  *-------------------------------------------------------------------------------
32596  * Light-duty Vehicles for Personal Transport
32597  *-------------------------------------------------------------------------------
32598   
32600   
32601  *** newcode
32602  eqq_inv_red_ban_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32603      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
32604   
32605  ***
32606  *- Number of light duty vehicles
32607  eqnb_veh_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32608      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
32609   
32610  *- Yearly energy demand of vehicles
32611  eqq_en_veh_c_seasia(jveh,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32612      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
32613   
32614  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
32615  eqq_el_edv_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32616      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
32617   
32618  *- Investment cost for hybrid vehicles
32619  eqmcost_inv_hybrid_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
32620                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
32621   
32622  *- Investment cost for plug-in hybrid vehicles
32623  eqmcost_inv_plghybrid_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
32624                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
32625   
32626  *- Investment cost for electric drive vehicles
32627  eqmcost_inv_edv_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
32628                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
32629   
32630  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
32633  *-------------------------------------------------------------------------------
32634  * Road Freight Transport
32635  *-------------------------------------------------------------------------------
32637   
32638  *-  Number of freight vehicles
32639  eqnb_frtveh_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
32640                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
32641   
32642  *-  Yearly fuel consumption of freight vehicles
32643  eqq_en_frtveh_c_seasia(jfrt,t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32644                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
32645   
32646  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
32647  eqq_el_frtedv_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)))..
32648                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
32649   
32650  *-  Investment cost for hbd_stfr vehicle
32651  eqmcost_inv_hbd_stfr_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
32652                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
32653   
32654  *-  Investment cost for plug-in hbd_stfr vehicle
32655  eqmcost_inv_plghbd_stfr_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
32656                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
32657   
32658  *-  Investment cost for electric drive vehicle
32659  eqmcost_inv_edv_stfr_c_seasia(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
32660                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
32661   
32662  *-------------------------------------------------------------------------------
32664   
32665   
32666   
32667   
32668   
32669   
32670  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
32672  *-------------------------------------------------------------------------------
32673  * Traditional Biomass
32674  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
32675  *  - require post_process to be launch before
32676  *-------------------------------------------------------------------------------
32677   
32679   
32680  * Optional modules
32681   
32682  * Policy modules
32683   
32684  * Calibration
32687   
32688   
32689  model witch_c_seasia /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
32691  *-------------------------------------------------------------------------------
32692  * Call modules by order
32693  *-------------------------------------------------------------------------------
32697   
32698  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
32700  *-------------------------------------------------------------------------------
32701  * Algorithm
32702  *-------------------------------------------------------------------------------
32703   
32705   
32706  eqobj_c_seasia
32707   
32708  *-------------------------------------------------------------------------------
32710   
32711  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
32713  *-------------------------------------------------------------------------------
32714  * Time
32715  * - Temporal structure
32716  * - Fixed time periods
32717  * - States of the world
32718  *-------------------------------------------------------------------------------
32719   
32721   
32722  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
32724  *-------------------------------------------------------------------------------
32725  * Geographic dimension and mapping with countries
32726  *-------------------------------------------------------------------------------
32727   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
32730  *-------------------------------------------------------------------------------
32731  * Non-Cooperative Setup
32732  *
32733  * Each region is defined as an individual coalition.
32734  *
32735  *-------------------------------------------------------------------------------
32736   
32738   
32739  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
32741  *-------------------------------------------------------------------------------
32742  * Welfare
32743  *-------------------------------------------------------------------------------
32744   
32746   
32747  equtility_c_seasia
32748   
32749  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
32752  *-------------------------------------------------------------------------------
32753  * Economy
32754  * - Production and Consumption definition
32755  * - Top-level of the production function
32756  * Options:
32757  * --original_ssp=1 : original SSP population and GDP data
32758  *-------------------------------------------------------------------------------
32759   
32761   
32762  eqk_c_seasia
32763  eqq_cc_c_seasia
32764  eqq_fen_c_seasia
32765  eqq_y_c_seasia
32766   
32767  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
32770  *-------------------------------------------------------------------------------
32771  * Energy sector
32772  *-------------------------------------------------------------------------------
32773   
32775   
32776  eq_mkt_clearing_oil_c_seasia
32777  eqcost_pes_c_seasia
32778  eqcost_ses_c_seasia
32779  eqk_en_c_seasia
32780  eqq_ces_el_c_seasia
32781  eqq_ces_nelgas_c_seasia
32782  eqq_el2_c_seasia
32783  eqq_el_c_seasia
32784  eqq_elff_c_seasia
32785  eqq_en_c_seasia
32786  eqq_en_in_c_seasia
32787  eqq_en_mu_c_seasia
32788  eqq_en_tree_c_seasia
32789  eqq_nel_c_seasia
32790  eqq_nelog_c_seasia
32791  eqq_fuel_c_seasia
32792  eqq_elffren_c_seasia
32793   
32794  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
32797  *-------------------------------------------------------------------------------
32798  * Carbon Emissions
32799  * - Total CO2 emissions and CO2 Fossil fuel and Industry
32800  * - CO2 emission costs
32801  * - GHG permit market
32802  *-------------------------------------------------------------------------------
32803   
32805   
32806  eqq_emi_lim_c_seasia
32807  eqq_emi_tree_c_seasia
32808  eqq_emi_co2ffi_c_seasia
32809   
32810  eqcost_emi_co2_c_seasia
32811   
32812  eq_mkt_clearing_nip_c_seasia
32813   
32814  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
32817  *-------------------------------------------------------------------------------
32818  * Research & Development
32819  * Options:
32820  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
32821  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
32822  *-------------------------------------------------------------------------------
32823   
32825   
32826  eqk_rd_c_seasia
32827  eqspill_coop_c_seasia
32828  eqspill_lead_c_seasia
32829  eqspill_foll_c_seasia
32830  eqmcost_inv_back_c_seasia
32831  eqmcost_inv_back_lbd_c_seasia
32832   
32833  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
32836  *-------------------------------------------------------------------------------
32837  * Default Climate Policy Implementation
32838  *
32839  * Options:
32840  *    --policy={bau (default),ctax}
32841  *        Implement a climate policy setting
32842  *  [ --scen= ]
32843  *        Policy variant.
32844  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
32845  *          * XXX for a fixed percentage/yr (e.g. 5) growth
32846  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
32847  *  [ --ctax_year=2020 ]
32848  *        Starting year of the carbon tax
32849  *  [ --ctax_initial=30 ]
32850  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
32851  *
32852  *-------------------------------------------------------------------------------
32854   
32855  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
32857  *-------------------------------------------------------------------------------
32858  * Energy efficiency
32859  *-------------------------------------------------------------------------------
32860   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
32863  *-------------------------------------------------------------------------------
32864  * Hydro Power
32865  *-------------------------------------------------------------------------------
32866   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
32869  *-------------------------------------------------------------------------------
32870  * System Integration:
32871  * - Capacity constraint
32872  * - Flexibility constraint
32873  * - Grid Investment
32874  * - Capacity growth constraint
32875  *-------------------------------------------------------------------------------
32876   
32878   
32879  eqq_elintren_c_seasia
32880  eqflex_c_seasia
32881  eqk_en_grid_c_seasia
32882  eqk_en_grid_to_k_en_c_seasia
32883  eqfirm_capacity_c_seasia
32884  eqcap_growth_c_seasia
32885   
32886  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
32889  *-------------------------------------------------------------------------------
32890  * Nuclear power plants
32891  *-------------------------------------------------------------------------------
32892   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
32895  *-------------------------------------------------------------------------------
32896  * GHG module
32897  * - CH4 FFI + CH4 waste + CH4 open fires
32898  * - N2O FFI + N2O waste + N2O open fires
32899  *-------------------------------------------------------------------------------
32900   
32902   
32903  eqq_emi_waste_c_seasia
32904  eqq_emi_n2o_ffi_c_seasia
32905  eqq_emi_ch4_ffi_c_seasia
32906   
32907  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
32910  *-------------------------------------------------------------------------------
32911  * F-gases
32912  * - LLF
32913  * - SLF
32914  *-------------------------------------------------------------------------------
32915   
32917   
32918  eqq_emi_fgases_c_seasia
32919   
32920  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
32923  *-------------------------------------------------------------------------------
32924  * Landuse [simplified version of the land-use model]
32925  *-------------------------------------------------------------------------------
32926   
32928   
32929  eq_wbio_c_seasia
32930  eqcost_pes_wbio_c_seasia
32931   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
32934  *-------------------------------------------------------------------------------
32935  * Bioenergy power plant
32936  *-------------------------------------------------------------------------------
32937   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
32940  *-------------------------------------------------------------------------------
32941  * Traditional Biofuels
32942  * - Requires the precedence of mod_landuse
32943  *-------------------------------------------------------------------------------
32944   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
32947  *-------------------------------------------------------------------------------
32948  * Advanced biofuel
32949  * - Require the precedence of mod_landuse
32950  *-------------------------------------------------------------------------------
32951   
32953   
32954  eqq_en_lim_advbiofuel_c_seasia
32955  eqmcost_fuel_advbiofuel_c_seasia
32956   
32957  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
32960  *-------------------------------------------------------------------------------
32961  * Carbon Capture and Sequestration
32962  *-------------------------------------------------------------------------------
32963   
32965   
32966  eqq_emi_ccs_c_seasia
32967  eqcost_emi_sinks_c_seasia
32968  eq_stor_ccs_cum_c_seasia
32969  eq_emi_stor_ccs_c_seasia
32970  eq_emi_leak_ccs_c_seasia
32971   
32972  *-------------------------------------------------------------------------------
32974   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
32976  *-------------------------------------------------------------------------------
32977  * Coal for non-electric sectors
32978  * - Coke Plants
32979  * - Industrial and Commercial combined-heat-and-power (CHP)
32980  * - Others
32981  *-------------------------------------------------------------------------------
32982   
32984   
32985  eqcost_en_nelcoal_c_seasia
32986  eqq_ncoalabat_monotone_c_seasia
32987  eqq_en_nelcoalccs_max_c_seasia
32988   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
32991  *-------------------------------------------------------------------------------
32992  * Wind energy module
32993  * - onshore and offshore
32994  *-------------------------------------------------------------------------------
32995   
32997   
32998  eqq_en_mu_windon_c_seasia
32999  eqq_en_mu_windoff_c_seasia
33000  eqk_en_windon_c_seasia
33001  eqk_en_windoff_c_seasia
33002  eqq_en_windon_sum_c_seasia
33003  eqq_en_windoff_sum_c_seasia
33004  eqk_en_windon_sum_c_seasia
33005  eqk_en_windoff_sum_c_seasia
33006  eqi_en_windon_sum_c_seasia
33007  eqi_en_windoff_sum_c_seasia
33008   
33010   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
33012  *-------------------------------------------------------------------------------
33013  * Solar Powerplants (PV and CSP) to the electrical system
33014  *-------------------------------------------------------------------------------
33015   
33016  *-------------------------------------------------------------------------------
33018   
33019  eqq_en_mu_pv_c_seasia
33020  eqq_en_mu_csp_c_seasia
33021  eqk_en_pv_c_seasia
33022  eqk_en_csp_c_seasia
33023  eqq_en_pv_sum_c_seasia
33024  eqq_en_csp_sum_c_seasia
33025  eqk_en_pv_sum_c_seasia
33026  eqk_en_csp_sum_c_seasia
33027  eqi_en_pv_sum_c_seasia
33028  eqi_en_csp_sum_c_seasia
33029  eqk_en_solar_comp_c_seasia
33030   
33031  *-------------------------------------------------------------------------------
33033   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
33035  *-------------------------------------------------------------------------------
33036  * Technology development scenarios
33037  *-------------------------------------------------------------------------------
33038   
33040   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
33042  *-------------------------------------------------------------------------------
33043  * Oil Extraction
33044  * Options:
33045  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
33046  *-------------------------------------------------------------------------------
33047   
33049   
33050  eqoilcap_c_seasia
33051  eqoilprod_c_seasia
33052  eqq_out_oil_c_seasia
33053  eqcum_oil_c_seasia
33054  eqcost_oil_c_seasia
33055  eqi_oil_c_seasia
33056  eqi_out_oil_c_seasia
33057  eqq_emi_out_oil_c_seasia
33058   
33059  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
33062  *-------------------------------------------------------------------------------
33063  * Uranium Resources
33064  *-------------------------------------------------------------------------------
33065   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
33068  *-------------------------------------------------------------------------------
33069  * Gas Resources
33070  *-------------------------------------------------------------------------------
33071   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
33074  *-------------------------------------------------------------------------------
33075  * Coal Resources
33076  *-------------------------------------------------------------------------------
33077   
33079   
33080   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
33082  *-------------------------------------------------------------------------------
33083  * Climate
33084  *
33085  * Represents the climate
33086  * - based on the DICE model equations
33087  * - Radiative forcing for non CO2 ghgs
33088  * - parameters calibrated to reproduce MAGICC6.4 default response
33089  *
33090  *  Options:
33091  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
33092  * - $setglobal cooperate_on_climate {'YES','NO'}
33093  * - 'YES'(default): Countries within a coalition act in cooperation
33094  *   'NO': Countries within a coalition act individually
33095  *
33096  *-------------------------------------------------------------------------------
33097   
33099   
33101   
33102  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
33105  *-------------------------------------------------------------------------------
33106  * Long-run Damages from Climate Change
33107  * - Economic impacts
33108  * - Adaptation
33109  *-------------------------------------------------------------------------------
33110   
33112   
33114   
33115  *-------------------------------------------------------------------------------
33117   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
33119  *-------------------------------------------------------------------------------
33120  * Light-duty Vehicles for Personal Transport
33121  *-------------------------------------------------------------------------------
33122   
33124   
33125  eqnb_veh_c_seasia
33126  eqq_en_veh_c_seasia
33127  eqq_el_edv_c_seasia
33128  eqmcost_inv_hybrid_c_seasia
33129  eqmcost_inv_plghybrid_c_seasia
33130  eqmcost_inv_edv_c_seasia
33131  *** newcode
33132  eqq_inv_red_ban_c_seasia
33133  ***
33134  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
33137  *-------------------------------------------------------------------------------
33138  * Road Freight Transport
33139  *-------------------------------------------------------------------------------
33141   
33142  eqnb_frtveh_c_seasia
33143  eqq_en_frtveh_c_seasia
33144  eqq_el_frtedv_c_seasia
33145  eqmcost_inv_hbd_stfr_c_seasia
33146  eqmcost_inv_plghbd_stfr_c_seasia
33147  eqmcost_inv_edv_stfr_c_seasia
33148   
33149  *-------------------------------------------------------------------------------
33151   
33152   
33153   
33154   
33155   
33156   
33157  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
33159  *-------------------------------------------------------------------------------
33160  * Traditional Biomass
33161  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
33162  *  - require post_process to be launch before
33163  *-------------------------------------------------------------------------------
33164   
33166   
33167  * Optional modules
33168   
33169  * Policy modules
33170   
33171  * Calibration
33174  /;
33175   
33176  witch_c_seasia.optfile=1;   # the option file solvername.opt is to be used
33177  witch_c_seasia.holdfixed=1; # treat fixed values as constant
33178  witch_c_seasia.scaleopt=1;  # Use scaling for better gradients estimation
33179  witch_c_seasia.solvelink=3; # Use parallel or sequential solving
33180   
33185   
33186  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
33188  *-------------------------------------------------------------------------------
33189  * Call modules by order
33190  *-------------------------------------------------------------------------------
33194   
33195  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
33197  *-------------------------------------------------------------------------------
33198  * Algorithm
33199  *-------------------------------------------------------------------------------
33200   
33202   
33203  eqobj_c_southafrica
33204   
33205  *-------------------------------------------------------------------------------
33207   
33208  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
33210  *-------------------------------------------------------------------------------
33211  * Time
33212  * - Temporal structure
33213  * - Fixed time periods
33214  * - States of the world
33215  *-------------------------------------------------------------------------------
33216   
33218   
33219  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
33221  *-------------------------------------------------------------------------------
33222  * Geographic dimension and mapping with countries
33223  *-------------------------------------------------------------------------------
33224   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
33227  *-------------------------------------------------------------------------------
33228  * Non-Cooperative Setup
33229  *
33230  * Each region is defined as an individual coalition.
33231  *
33232  *-------------------------------------------------------------------------------
33233   
33235   
33236  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
33238  *-------------------------------------------------------------------------------
33239  * Welfare
33240  *-------------------------------------------------------------------------------
33241   
33243   
33244  equtility_c_southafrica
33245   
33246  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
33249  *-------------------------------------------------------------------------------
33250  * Economy
33251  * - Production and Consumption definition
33252  * - Top-level of the production function
33253  * Options:
33254  * --original_ssp=1 : original SSP population and GDP data
33255  *-------------------------------------------------------------------------------
33256   
33258   
33259  eqk_c_southafrica
33260  eqq_cc_c_southafrica
33261  eqq_fen_c_southafrica
33262  eqq_y_c_southafrica
33263   
33264  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
33267  *-------------------------------------------------------------------------------
33268  * Energy sector
33269  *-------------------------------------------------------------------------------
33270   
33272   
33273  eq_mkt_clearing_oil_c_southafrica
33274  eqcost_pes_c_southafrica
33275  eqcost_ses_c_southafrica
33276  eqk_en_c_southafrica
33277  eqq_ces_el_c_southafrica
33278  eqq_ces_nelgas_c_southafrica
33279  eqq_el2_c_southafrica
33280  eqq_el_c_southafrica
33281  eqq_elff_c_southafrica
33282  eqq_en_c_southafrica
33283  eqq_en_in_c_southafrica
33284  eqq_en_mu_c_southafrica
33285  eqq_en_tree_c_southafrica
33286  eqq_nel_c_southafrica
33287  eqq_nelog_c_southafrica
33288  eqq_fuel_c_southafrica
33289  eqq_elffren_c_southafrica
33290   
33291  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
33294  *-------------------------------------------------------------------------------
33295  * Carbon Emissions
33296  * - Total CO2 emissions and CO2 Fossil fuel and Industry
33297  * - CO2 emission costs
33298  * - GHG permit market
33299  *-------------------------------------------------------------------------------
33300   
33302   
33303  eqq_emi_lim_c_southafrica
33304  eqq_emi_tree_c_southafrica
33305  eqq_emi_co2ffi_c_southafrica
33306   
33307  eqcost_emi_co2_c_southafrica
33308   
33309  eq_mkt_clearing_nip_c_southafrica
33310   
33311  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
33314  *-------------------------------------------------------------------------------
33315  * Research & Development
33316  * Options:
33317  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
33318  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
33319  *-------------------------------------------------------------------------------
33320   
33322   
33323  eqk_rd_c_southafrica
33324  eqspill_coop_c_southafrica
33325  eqspill_lead_c_southafrica
33326  eqspill_foll_c_southafrica
33327  eqmcost_inv_back_c_southafrica
33328  eqmcost_inv_back_lbd_c_southafrica
33329   
33330  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
33333  *-------------------------------------------------------------------------------
33334  * Default Climate Policy Implementation
33335  *
33336  * Options:
33337  *    --policy={bau (default),ctax}
33338  *        Implement a climate policy setting
33339  *  [ --scen= ]
33340  *        Policy variant.
33341  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
33342  *          * XXX for a fixed percentage/yr (e.g. 5) growth
33343  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
33344  *  [ --ctax_year=2020 ]
33345  *        Starting year of the carbon tax
33346  *  [ --ctax_initial=30 ]
33347  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
33348  *
33349  *-------------------------------------------------------------------------------
33351   
33352  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
33354  *-------------------------------------------------------------------------------
33355  * Energy efficiency
33356  *-------------------------------------------------------------------------------
33357   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
33360  *-------------------------------------------------------------------------------
33361  * Hydro Power
33362  *-------------------------------------------------------------------------------
33363   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
33366  *-------------------------------------------------------------------------------
33367  * System Integration:
33368  * - Capacity constraint
33369  * - Flexibility constraint
33370  * - Grid Investment
33371  * - Capacity growth constraint
33372  *-------------------------------------------------------------------------------
33373   
33375   
33376  eqq_elintren_c_southafrica
33377  eqflex_c_southafrica
33378  eqk_en_grid_c_southafrica
33379  eqk_en_grid_to_k_en_c_southafrica
33380  eqfirm_capacity_c_southafrica
33381  eqcap_growth_c_southafrica
33382   
33383  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
33386  *-------------------------------------------------------------------------------
33387  * Nuclear power plants
33388  *-------------------------------------------------------------------------------
33389   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
33392  *-------------------------------------------------------------------------------
33393  * GHG module
33394  * - CH4 FFI + CH4 waste + CH4 open fires
33395  * - N2O FFI + N2O waste + N2O open fires
33396  *-------------------------------------------------------------------------------
33397   
33399   
33400  eqq_emi_waste_c_southafrica
33401  eqq_emi_n2o_ffi_c_southafrica
33402  eqq_emi_ch4_ffi_c_southafrica
33403   
33404  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
33407  *-------------------------------------------------------------------------------
33408  * F-gases
33409  * - LLF
33410  * - SLF
33411  *-------------------------------------------------------------------------------
33412   
33414   
33415  eqq_emi_fgases_c_southafrica
33416   
33417  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
33420  *-------------------------------------------------------------------------------
33421  * Landuse [simplified version of the land-use model]
33422  *-------------------------------------------------------------------------------
33423   
33425   
33426  eq_wbio_c_southafrica
33427  eqcost_pes_wbio_c_southafrica
33428   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
33431  *-------------------------------------------------------------------------------
33432  * Bioenergy power plant
33433  *-------------------------------------------------------------------------------
33434   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
33437  *-------------------------------------------------------------------------------
33438  * Traditional Biofuels
33439  * - Requires the precedence of mod_landuse
33440  *-------------------------------------------------------------------------------
33441   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
33444  *-------------------------------------------------------------------------------
33445  * Advanced biofuel
33446  * - Require the precedence of mod_landuse
33447  *-------------------------------------------------------------------------------
33448   
33450   
33451  eqq_en_lim_advbiofuel_c_southafrica
33452  eqmcost_fuel_advbiofuel_c_southafrica
33453   
33454  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
33457  *-------------------------------------------------------------------------------
33458  * Carbon Capture and Sequestration
33459  *-------------------------------------------------------------------------------
33460   
33462   
33463  eqq_emi_ccs_c_southafrica
33464  eqcost_emi_sinks_c_southafrica
33465  eq_stor_ccs_cum_c_southafrica
33466  eq_emi_stor_ccs_c_southafrica
33467  eq_emi_leak_ccs_c_southafrica
33468   
33469  *-------------------------------------------------------------------------------
33471   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
33473  *-------------------------------------------------------------------------------
33474  * Coal for non-electric sectors
33475  * - Coke Plants
33476  * - Industrial and Commercial combined-heat-and-power (CHP)
33477  * - Others
33478  *-------------------------------------------------------------------------------
33479   
33481   
33482  eqcost_en_nelcoal_c_southafrica
33483  eqq_ncoalabat_monotone_c_southafrica
33484  eqq_en_nelcoalccs_max_c_southafrica
33485   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
33488  *-------------------------------------------------------------------------------
33489  * Wind energy module
33490  * - onshore and offshore
33491  *-------------------------------------------------------------------------------
33492   
33494   
33495  eqq_en_mu_windon_c_southafrica
33496  eqq_en_mu_windoff_c_southafrica
33497  eqk_en_windon_c_southafrica
33498  eqk_en_windoff_c_southafrica
33499  eqq_en_windon_sum_c_southafrica
33500  eqq_en_windoff_sum_c_southafrica
33501  eqk_en_windon_sum_c_southafrica
33502  eqk_en_windoff_sum_c_southafrica
33503  eqi_en_windon_sum_c_southafrica
33504  eqi_en_windoff_sum_c_southafrica
33505   
33507   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
33509  *-------------------------------------------------------------------------------
33510  * Solar Powerplants (PV and CSP) to the electrical system
33511  *-------------------------------------------------------------------------------
33512   
33513  *-------------------------------------------------------------------------------
33515   
33516  eqq_en_mu_pv_c_southafrica
33517  eqq_en_mu_csp_c_southafrica
33518  eqk_en_pv_c_southafrica
33519  eqk_en_csp_c_southafrica
33520  eqq_en_pv_sum_c_southafrica
33521  eqq_en_csp_sum_c_southafrica
33522  eqk_en_pv_sum_c_southafrica
33523  eqk_en_csp_sum_c_southafrica
33524  eqi_en_pv_sum_c_southafrica
33525  eqi_en_csp_sum_c_southafrica
33526  eqk_en_solar_comp_c_southafrica
33527   
33528  *-------------------------------------------------------------------------------
33530   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
33532  *-------------------------------------------------------------------------------
33533  * Technology development scenarios
33534  *-------------------------------------------------------------------------------
33535   
33537   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
33539  *-------------------------------------------------------------------------------
33540  * Oil Extraction
33541  * Options:
33542  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
33543  *-------------------------------------------------------------------------------
33544   
33546   
33547  eqoilcap_c_southafrica
33548  eqoilprod_c_southafrica
33549  eqq_out_oil_c_southafrica
33550  eqcum_oil_c_southafrica
33551  eqcost_oil_c_southafrica
33552  eqi_oil_c_southafrica
33553  eqi_out_oil_c_southafrica
33554  eqq_emi_out_oil_c_southafrica
33555   
33556  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
33559  *-------------------------------------------------------------------------------
33560  * Uranium Resources
33561  *-------------------------------------------------------------------------------
33562   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
33565  *-------------------------------------------------------------------------------
33566  * Gas Resources
33567  *-------------------------------------------------------------------------------
33568   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
33571  *-------------------------------------------------------------------------------
33572  * Coal Resources
33573  *-------------------------------------------------------------------------------
33574   
33576   
33577   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
33579  *-------------------------------------------------------------------------------
33580  * Climate
33581  *
33582  * Represents the climate
33583  * - based on the DICE model equations
33584  * - Radiative forcing for non CO2 ghgs
33585  * - parameters calibrated to reproduce MAGICC6.4 default response
33586  *
33587  *  Options:
33588  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
33589  * - $setglobal cooperate_on_climate {'YES','NO'}
33590  * - 'YES'(default): Countries within a coalition act in cooperation
33591  *   'NO': Countries within a coalition act individually
33592  *
33593  *-------------------------------------------------------------------------------
33594   
33596   
33598   
33599  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
33602  *-------------------------------------------------------------------------------
33603  * Long-run Damages from Climate Change
33604  * - Economic impacts
33605  * - Adaptation
33606  *-------------------------------------------------------------------------------
33607   
33609   
33611   
33612  *-------------------------------------------------------------------------------
33614   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
33616  *-------------------------------------------------------------------------------
33617  * Light-duty Vehicles for Personal Transport
33618  *-------------------------------------------------------------------------------
33619   
33621   
33622  eqnb_veh_c_southafrica
33623  eqq_en_veh_c_southafrica
33624  eqq_el_edv_c_southafrica
33625  eqmcost_inv_hybrid_c_southafrica
33626  eqmcost_inv_plghybrid_c_southafrica
33627  eqmcost_inv_edv_c_southafrica
33628  *** newcode
33629  eqq_inv_red_ban_c_southafrica
33630  ***
33631  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
33634  *-------------------------------------------------------------------------------
33635  * Road Freight Transport
33636  *-------------------------------------------------------------------------------
33638   
33639  eqnb_frtveh_c_southafrica
33640  eqq_en_frtveh_c_southafrica
33641  eqq_el_frtedv_c_southafrica
33642  eqmcost_inv_hbd_stfr_c_southafrica
33643  eqmcost_inv_plghbd_stfr_c_southafrica
33644  eqmcost_inv_edv_stfr_c_southafrica
33645   
33646  *-------------------------------------------------------------------------------
33648   
33649   
33650   
33651   
33652   
33653   
33654  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
33656  *-------------------------------------------------------------------------------
33657  * Traditional Biomass
33658  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
33659  *  - require post_process to be launch before
33660  *-------------------------------------------------------------------------------
33661   
33663   
33664  * Optional modules
33665   
33666  * Policy modules
33667   
33668  * Calibration
33671  ;
33672   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
33674  *-------------------------------------------------------------------------------
33675  * Call modules by order
33676  *-------------------------------------------------------------------------------
33680   
33681  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
33683  *-------------------------------------------------------------------------------
33684  * Algorithm
33685  *-------------------------------------------------------------------------------
33686   
33688   
33690  * Add the component of the (maximized) objective function as required by the ADMM algorithm
33691  eqobj_c_southafrica..
33692      OBJADMM =e= UTILITY -
33693          sum(t, rho_admm('oil',t) / 2 *
33694              sum(n$(map_clt_n('c_southafrica',n) and trading_t('oil',t,n)),
33695                  power(
33696                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
33697                      x_admm('oil',t,n) +
33698                      xavg_admm('oil',t) +
33699                      u_admm('oil', t)
33700                  ,2)
33701              )) -
33702          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
33703              sum(n$(map_clt_n('c_southafrica',n) and trading_t(c_mkt,t,n)),
33704                  power(
33705                      Q_EMI(c_mkt,t,n) -
33706                      x_admm(c_mkt,t,n) +
33707                      xavg_admm(c_mkt,t) +
33708                      u_admm(c_mkt,t)
33709                  ,2)
33710              ))
33711      ;
33713   
33714  *-------------------------------------------------------------------------------
33716   
33717  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
33719  *-------------------------------------------------------------------------------
33720  * Time
33721  * - Temporal structure
33722  * - Fixed time periods
33723  * - States of the world
33724  *-------------------------------------------------------------------------------
33725   
33727   
33728  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
33730  *-------------------------------------------------------------------------------
33731  * Geographic dimension and mapping with countries
33732  *-------------------------------------------------------------------------------
33733   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
33736  *-------------------------------------------------------------------------------
33737  * Non-Cooperative Setup
33738  *
33739  * Each region is defined as an individual coalition.
33740  *
33741  *-------------------------------------------------------------------------------
33742   
33744   
33745  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
33747  *-------------------------------------------------------------------------------
33748  * Welfare
33749  *-------------------------------------------------------------------------------
33750   
33752   
33753  * Objective function - Welfare to be maximized
33754  equtility_c_southafrica..
33755      UTILITY =e=
33756   
33757  * Negishi SWF
33759   
33760  * Welfare functions based on CEBGE
33763                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
33764                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
33765                      ((sum(n$map_clt_n('c_southafrica',n),
33766                        (l(t,n) / sum(nn$map_clt_n('c_southafrica',nn), l(t,nn))) *
33767                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
33768                       )**(1 / (1 - gamma))
33769                      )**(1 - eta) ) +
33770                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
33771                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
33772                      ((sum(n$map_clt_n('c_southafrica',n),
33773                        (l(t,n) / sum(nn$map_clt_n('c_southafrica',nn), l(t,nn))) *
33774                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
33775                       )**(1 / (1 - gamma))
33776                      )**(1 - eta) )
33777                  )**(1/(1 - eta)) * 1e6
33780   
33781   
33782  ;
33783   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
33786  *-------------------------------------------------------------------------------
33787  * Economy
33788  * - Production and Consumption definition
33789  * - Top-level of the production function
33790  * Options:
33791  * --original_ssp=1 : original SSP population and GDP data
33792  *-------------------------------------------------------------------------------
33793   
33795   
33796  * Production
33797  eqq_y_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33798   
33799      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
33800                     ## Climate feedback on economy
33802                     ## Net cost of Primary and Secondary Energy Sources
33803                     - sum(fuel, COST_FUEL(fuel,t,n))
33804                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
33805                     - sum(cce, COST_EMI(cce,t,n))
33806                     ## Carbon tax
33807                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
33808                     ## Additionnal costs on gross product
33809                     - sum(ccy, COST_Y(ccy,t,n))
33810  ;
33811   
33812  * Consumption
33813  eqq_cc_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
33814      Q('cc',t,n) =e= Q('y',t,n)
33815                      ## Investments in goods g (final good, adaptation)
33816                      -sum(g, I(g,t,n))
33817                      ## Investments in r&d
33818                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
33819                      ## Investments in energy technlogies
33820                      -sum(jinv, I_EN(jinv,t,n))
33821                       ## Investments in grid infrastructures
33822                      - I_EN_GRID(t,n)
33823                      ## Investments in extraction sector
33824                      -sum(extract(f), I_OUT(f,t,n))
33825                      ## O&M for energy technlogies
33826                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
33827                      ## O&M for extraction
33828                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
33829                      ## Energy technology penalty costs
33830                      -sum(jpenalty(j), COST_EN(j,t,n))
33831  ;
33832   
33833  * Capital accumulation
33834  eqk_c_southafrica(g,t,tp1,n)$(map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
33835      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
33836   
33837  * Energy services
33838  eqq_fen_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33839      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
33840   
33841  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
33844  *-------------------------------------------------------------------------------
33845  * Energy sector
33846  *-------------------------------------------------------------------------------
33847   
33849   
33850  *-------------------------------------------------------------------------------
33851  * Production - Energy sector
33852  *-------------------------------------------------------------------------------
33853   
33854  eqq_en_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33855      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
33856   
33857  *-------------------------------------------------------------------------------
33858  * Production - Electrical sector
33859  *-------------------------------------------------------------------------------
33860   
33861  eqq_el_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33862      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
33863   
33864  eqq_el2_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33865      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
33866   
33867  eqq_elffren_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33868      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
33869  eqq_elff_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33870      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
33871   
33872  eqq_ces_el_c_southafrica(ices_el,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
33873      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
33874  ;
33875   
33876  *-------------------------------------------------------------------------------
33877  * Production - Non-electrical sector
33878  *-------------------------------------------------------------------------------
33879   
33880  eqq_nel_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33881      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
33882   
33883  eqq_nelog_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33884      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
33885  ;
33886  eqq_ces_nelgas_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33887      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
33888   
33889  *-------------------------------------------------------------------------------
33890  * PES and fuels
33891  *-------------------------------------------------------------------------------
33892   
33893  eqq_fuel_c_southafrica(fuel,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
33894      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
33895   
33896  *-------------------------------------------------------------------------------
33897  * Cost
33898  *-------------------------------------------------------------------------------
33899   
33900  * Net cost of Primary Energy Supplies
33901  eqcost_pes_c_southafrica(f,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
33902      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
33903                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
33904   
33905  * Net cost of Secondary Energy Supplies
33906  eqcost_ses_c_southafrica(s,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33907      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
33908   
33909   
33910  *-------------------------------------------------------------------------------
33911  * Market balances
33912  *-------------------------------------------------------------------------------
33913   
33914  eq_mkt_clearing_oil_c_southafrica(t,'c_southafrica')$(internal('oil'))..
33915      sum( n$(map_clt_n('c_southafrica',n) and trading_t('oil',t,n)),
33916          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
33917      ) =e= 0;
33918   
33919  *-------------------------------------------------------------------------------
33920  * New capital in the energy sector
33921  *-------------------------------------------------------------------------------
33922   
33923  * Electrical generation plants (new)
33924  eqk_en_c_southafrica(jinv,t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
33925      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
33926                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
33927   
33928  *-------------------------------------------------------------------------------
33929  * ENERGY
33930  *-------------------------------------------------------------------------------
33931   
33932  * Capacity limits in the electrical sector
33933  eqq_en_mu_c_southafrica(jel,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
33934      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
33935   
33936  * Efficiency of energy technology sector
33937  eqq_en_in_c_southafrica(jfed,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
33938      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
33939                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
33940   
33941  * Energy generation "tree"
33942  eqq_en_tree_c_southafrica(j,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
33943      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
33944   
33945  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
33948  *-------------------------------------------------------------------------------
33949  * Carbon Emissions
33950  * - Total CO2 emissions and CO2 Fossil fuel and Industry
33951  * - CO2 emission costs
33952  * - GHG permit market
33953  *-------------------------------------------------------------------------------
33954   
33956   
33957  * GHG emission cap
33958  eqq_emi_lim_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
33959      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
33960                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
33961   
33962  * Compute total and sectoral emissions
33963  eqq_emi_tree_c_southafrica(t,n,e)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
33964      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
33965   
33966  * Industrial CO2 emissions
33967  eqq_emi_co2ffi_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33968      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
33969                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
33970                              # Emissions from biomass
33971                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
33972                              # Emissions from fuel extraction
33973                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
33974                              # Captured emissions
33975                              sum(sink, Q_EMI(sink,t,n));
33976   
33977  * CO2 emission costs
33978  eqcost_emi_co2_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
33979      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
33980   
33981  * Emission permit market clearing for internal market
33982  eq_mkt_clearing_nip_c_southafrica(c_mkt,t,'c_southafrica')$(internal(c_mkt))..
33983      sum(n$(map_clt_n('c_southafrica',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
33984   
33985  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
33988  *-------------------------------------------------------------------------------
33989  * Research & Development
33990  * Options:
33991  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
33992  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
33993  *-------------------------------------------------------------------------------
33994   
33996   
33997  * Knowledge stock accumulation
33998  eqk_rd_c_southafrica(rd,t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
33999                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
34000                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
34001                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
34002                                        SPILL(rd,t,n)**rd_coef(rd,'d');
34003   
34004  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
34005  eqspill_coop_c_southafrica(rd,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_southafrica'))..
34006          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
34007                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_southafrica',nn)), K_RD(rd,t,nn)) +
34008                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_southafrica',nn))), K_RD.l(rd,t,nn))
34009                            ) *
34010                            (
34011                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_southafrica',nn)), K_RD(rd,t,nn)) +
34012                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_southafrica',nn))), K_RD.l(rd,t,nn))
34013                              ) - K_RD(rd,t,n)
34014                            );
34015   
34016  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
34017  eqspill_lead_c_southafrica(rd,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_southafrica')) and leadrd(rd,n))..
34018                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
34019   
34020  * No-cooperation : a follower sees is negative effect on the quantity he can grab
34021  eqspill_foll_c_southafrica(rd,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_southafrica')) and (not leadrd(rd,n)))..
34022                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
34023   
34024  *- Only LbR (without learning by doing)
34025  eqmcost_inv_back_c_southafrica(jrd,t,tt,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
34026                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
34027                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
34028   
34029  *- LbR together with learning by doing ==> Two-factor learning curve
34030  eqmcost_inv_back_lbd_c_southafrica(jrd,t,tt,tfirst,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
34031                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
34032                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
34033                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
34034   
34035  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
34038  *-------------------------------------------------------------------------------
34039  * Default Climate Policy Implementation
34040  *
34041  * Options:
34042  *    --policy={bau (default),ctax}
34043  *        Implement a climate policy setting
34044  *  [ --scen= ]
34045  *        Policy variant.
34046  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
34047  *          * XXX for a fixed percentage/yr (e.g. 5) growth
34048  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
34049  *  [ --ctax_year=2020 ]
34050  *        Starting year of the carbon tax
34051  *  [ --ctax_initial=30 ]
34052  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
34053  *
34054  *-------------------------------------------------------------------------------
34056   
34057  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
34059  *-------------------------------------------------------------------------------
34060  * Energy efficiency
34061  *-------------------------------------------------------------------------------
34062   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
34065  *-------------------------------------------------------------------------------
34066  * Hydro Power
34067  *-------------------------------------------------------------------------------
34068   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
34071  *-------------------------------------------------------------------------------
34072  * System Integration:
34073  * - Capacity constraint
34074  * - Flexibility constraint
34075  * - Grid Investment
34076  * - Capacity growth constraint
34077  *-------------------------------------------------------------------------------
34078   
34080   
34081   
34082  * Renewable CES
34083   
34084  * Definition of the renewable CES
34085  eqq_elintren_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34086      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
34087   
34088  * Capacity constraint
34089   
34091  eqfirm_capacity_c_southafrica(t,n)$(map_clt_n('c_southafrica',n) and (not tfix(t)) and year(t) gt 2005)..
34092                   sum(jel_firm, K_EN(jel_firm,t,n))
34093                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
34094                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
34095                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
34096                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
34097                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
34098                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
34099                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
34100                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
34101                                       ) / yearly_hours
34102  ;
34104   
34105  * Flexibility constraint
34106  eqflex_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34107          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
34108                             ( Q_EN('el',t,n) -
34109                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
34110                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
34111                             ) * flex_coeff('load')
34112  ;
34113   
34114  * Grid
34115   
34116  ** Grid depreciation and investments
34117  eqk_en_grid_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
34118                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
34119                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
34120   
34121  ** Grid adjustment to power capacity
34122  eqk_en_grid_to_k_en_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34123                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
34124                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
34125                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
34126                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
34127                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
34128                                     ) / grid_cost +
34129                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
34130                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
34131                                      K_EN('elcsp',t,n);
34132  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
34133   
34134  * Capacity growth constraint
34135  eqcap_growth_c_southafrica(jinv,t,tp1,tp2,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
34136                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
34137                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
34138   
34139  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
34142  *-------------------------------------------------------------------------------
34143  * Nuclear power plants
34144  *-------------------------------------------------------------------------------
34145   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
34148  *-------------------------------------------------------------------------------
34149  * GHG module
34150  * - CH4 FFI + CH4 waste + CH4 open fires
34151  * - N2O FFI + N2O waste + N2O open fires
34152  *-------------------------------------------------------------------------------
34153   
34155   
34156  * CH4, N2O waste emissions
34157  eqq_emi_waste_c_southafrica(waste,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
34158                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
34159   
34160  * n2o FFI
34161  eqq_emi_n2o_ffi_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
34162    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
34163                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
34164                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
34165                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
34166                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
34167                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
34168                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
34169                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
34170                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
34171                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
34172                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
34173                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
34174                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
34175                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
34176                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
34177                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
34178                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
34179                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
34180                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
34181                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
34182                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
34183                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
34184                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
34185                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
34186                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
34187                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
34188                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
34189                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
34190                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
34191                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
34192                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
34193   
34194  * ch4 FFI
34195  eqq_emi_ch4_ffi_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
34196    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
34199  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
34200  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
34201                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
34202                             smax(tt$(year(tt) eq 2015),
34203                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
34206  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
34207  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
34208                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
34209   
34210  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
34213  *-------------------------------------------------------------------------------
34214  * F-gases
34215  * - LLF
34216  * - SLF
34217  *-------------------------------------------------------------------------------
34218   
34220   
34221  * F-gases emissions
34222  eqq_emi_fgases_c_southafrica(fgases,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
34223                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
34224   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
34227  *-------------------------------------------------------------------------------
34228  * Landuse [simplified version of the land-use model]
34229  *-------------------------------------------------------------------------------
34230   
34232   
34233  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
34234  eq_wbio_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34235      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
34236   
34238  * Cost of all woody biomass produced for advanced biofuels and woody biomass
34239  eqcost_pes_wbio_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34240      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
34242   
34243  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
34246  *-------------------------------------------------------------------------------
34247  * Bioenergy power plant
34248  *-------------------------------------------------------------------------------
34249   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
34252  *-------------------------------------------------------------------------------
34253  * Traditional Biofuels
34254  * - Requires the precedence of mod_landuse
34255  *-------------------------------------------------------------------------------
34256   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
34259  *-------------------------------------------------------------------------------
34260  * Advanced biofuel
34261  * - Require the precedence of mod_landuse
34262  *-------------------------------------------------------------------------------
34263   
34265   
34266  * Limitations for nel backstops
34267  eqq_en_lim_advbiofuel_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
34268               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
34269               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
34270   
34271  * Peculiarity of advbiofuel
34272  eqmcost_fuel_advbiofuel_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34273                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
34274   
34275  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
34278  *-------------------------------------------------------------------------------
34279  * Carbon Capture and Sequestration
34280  *-------------------------------------------------------------------------------
34281   
34283   
34284  eqq_emi_ccs_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34285                  Q_EMI('ccs_plant',t,n) =e=
34286                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
34287                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
34288  ;
34289   
34290  eqcost_emi_sinks_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34291                  COST_EMI('ccs_plant',t,n) =e=
34292                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
34293                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
34294  ;
34295   
34296  eq_stor_ccs_cum_c_southafrica(ccs_stor,tp1,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
34297                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
34298  ;
34299   
34300  eq_emi_stor_ccs_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34301                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
34302  ;
34303   
34304  eq_emi_leak_ccs_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34305                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
34306   
34307  *-------------------------------------------------------------------------------
34309   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
34311  *-------------------------------------------------------------------------------
34312  * Coal for non-electric sectors
34313  * - Coke Plants
34314  * - Industrial and Commercial combined-heat-and-power (CHP)
34315  * - Others
34316  *-------------------------------------------------------------------------------
34317   
34319   
34320  eqcost_en_nelcoal_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34321           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
34322                                          nelcoal_max_abat(t,n) *
34323                                          (nelcoal_cmac(n,'a') *
34324                                            Q_EN('nelcoalabat',t,n) /
34325                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
34326                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
34327                                              (exp(nelcoal_cmac(n,'c') *
34328                                                (Q_EN('nelcoalabat',t,n)/
34329                                                  (nelcoal_max_abat(t,n) *
34330                                                      nelcoal_baseline(t,n))
34331                                                  ) - 1 )
34332                                              )
34333                                          );
34334   
34335  eqq_ncoalabat_monotone_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
34336          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
34337   
34338  * ensure Q_EN is lower than K_EN for CCS as not in jel
34339  eqq_en_nelcoalccs_max_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34340          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
34341   
34342  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
34345  *-------------------------------------------------------------------------------
34346  * Wind energy module
34347  * - onshore and offshore
34348  *-------------------------------------------------------------------------------
34349   
34351   
34352  * Capacity limits in the wind onshore electrical sector
34353  eqq_en_mu_windon_c_southafrica(wind_dist,wind_class,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
34354      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
34355   
34356  * Capacity limits in the wind offshore electrical sector
34357  eqq_en_mu_windoff_c_southafrica(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
34358      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
34359   
34360  * Wind onshore electrical generation plants (new)
34361  eqk_en_windon_c_southafrica(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
34362      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
34363                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
34364   
34365  * Wind offshore electrical generation plants (new)
34366  eqk_en_windoff_c_southafrica(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
34367      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
34368                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
34369   
34370  * Total onshore wind energy production
34371  eqq_en_windon_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34372                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
34373   
34374  * Total offshore wind energy production
34375  eqq_en_windoff_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34376                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
34377   
34378  * Total onshore wind capacity
34379  eqk_en_windon_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34380                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
34381   
34382  * Total offshore wind capacity
34383  eqk_en_windoff_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34384                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
34385   
34386  * Total onshore wind investment
34387  eqi_en_windon_sum_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
34388                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
34389   
34390  * Total offshore wind investment
34391  eqi_en_windoff_sum_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
34392                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
34393   
34394  *-------------------------------------------------------------------------------
34396   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
34398  *-------------------------------------------------------------------------------
34399  * Solar Powerplants (PV and CSP) to the electrical system
34400  *-------------------------------------------------------------------------------
34401   
34402  *-------------------------------------------------------------------------------
34404   
34405   
34406  * Capacity limits in the pv electrical sector
34407  eqq_en_mu_pv_c_southafrica(solar_dist,solar_class,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
34408                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
34409   
34410  * Capacity limits in the csp electrical sector
34411  eqq_en_mu_csp_c_southafrica(solar_dist,solar_class,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
34412                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
34413   
34414  * PV electrical generation plants (new)
34415  eqk_en_pv_c_southafrica(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
34416                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
34417                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
34418   
34419  * CSP electrical generation plants (new)
34420  eqk_en_csp_c_southafrica(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
34421                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
34422                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
34423   
34424  * Total PV energy production
34425  eqq_en_pv_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34426                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
34427   
34428  * Total CSP energy production
34429  eqq_en_csp_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34430                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
34431   
34432  * Total PV capacity
34433  eqk_en_pv_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34434                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
34435   
34436  * Total CSP capacity
34437  eqk_en_csp_sum_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34438                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
34439   
34440  * Total PV investment
34441  eqi_en_pv_sum_c_southafrica(t,tp1,n)$(map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
34442                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
34443   
34444  * Total CSP investment
34445  eqi_en_csp_sum_c_southafrica(t,tp1,n)$(map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
34446                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
34447   
34448  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
34449  eqk_en_solar_comp_c_southafrica(t,n,solar_dist)$(map_clt_n('c_southafrica',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
34450                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
34451                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
34452   
34453   
34454   
34455  *-------------------------------------------------------------------------------
34457   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
34459  *-------------------------------------------------------------------------------
34460  * Technology development scenarios
34461  *-------------------------------------------------------------------------------
34462   
34464   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
34466  *-------------------------------------------------------------------------------
34467  * Oil Extraction
34468  * Options:
34469  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
34470  *-------------------------------------------------------------------------------
34471   
34473   
34474  * Capacity
34475  eqoilcap_c_southafrica(t,tp1,n,oilg)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
34476      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
34477   
34478  * Production
34479  eqoilprod_c_southafrica(t,tp1,n,oilg)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
34480      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
34481   
34482  eqq_out_oil_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34483      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
34484   
34485  * Cumulative production
34486  eqcum_oil_c_southafrica(t,tp1,n,oilg)$((map_clt_n('c_southafrica',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
34487      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
34488   
34489  * Cost
34490  eqcost_oil_c_southafrica(t,tp1,n,oilg)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
34491      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
34492                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
34493                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
34494   
34495  * Investments
34496  eqi_oil_c_southafrica(t,tp1,n,oilg)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
34497      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
34498   
34499  * Total investment
34500  eqi_out_oil_c_southafrica(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
34501      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
34502   
34503  * Emissions
34504  eqq_emi_out_oil_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34505      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
34506   
34507  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
34510  *-------------------------------------------------------------------------------
34511  * Uranium Resources
34512  *-------------------------------------------------------------------------------
34513   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
34516  *-------------------------------------------------------------------------------
34517  * Gas Resources
34518  *-------------------------------------------------------------------------------
34519   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
34522  *-------------------------------------------------------------------------------
34523  * Coal Resources
34524  *-------------------------------------------------------------------------------
34525   
34527   
34528   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
34530  *-------------------------------------------------------------------------------
34531  * Climate
34532  *
34533  * Represents the climate
34534  * - based on the DICE model equations
34535  * - Radiative forcing for non CO2 ghgs
34536  * - parameters calibrated to reproduce MAGICC6.4 default response
34537  *
34538  *  Options:
34539  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
34540  * - $setglobal cooperate_on_climate {'YES','NO'}
34541  * - 'YES'(default): Countries within a coalition act in cooperation
34542  *   'NO': Countries within a coalition act individually
34543  *
34544  *-------------------------------------------------------------------------------
34545   
34547   
34549   
34550  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
34553  *-------------------------------------------------------------------------------
34554  * Long-run Damages from Climate Change
34555  * - Economic impacts
34556  * - Adaptation
34557  *-------------------------------------------------------------------------------
34558   
34560   
34562   
34563  *-------------------------------------------------------------------------------
34565   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
34567  *-------------------------------------------------------------------------------
34568  * Light-duty Vehicles for Personal Transport
34569  *-------------------------------------------------------------------------------
34570   
34572   
34573  *** newcode
34574  eqq_inv_red_ban_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34575      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
34576   
34577  ***
34578  *- Number of light duty vehicles
34579  eqnb_veh_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34580      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
34581   
34582  *- Yearly energy demand of vehicles
34583  eqq_en_veh_c_southafrica(jveh,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34584      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
34585   
34586  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
34587  eqq_el_edv_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34588      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
34589   
34590  *- Investment cost for hybrid vehicles
34591  eqmcost_inv_hybrid_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
34592                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
34593   
34594  *- Investment cost for plug-in hybrid vehicles
34595  eqmcost_inv_plghybrid_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
34596                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
34597   
34598  *- Investment cost for electric drive vehicles
34599  eqmcost_inv_edv_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
34600                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
34601   
34602  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
34605  *-------------------------------------------------------------------------------
34606  * Road Freight Transport
34607  *-------------------------------------------------------------------------------
34609   
34610  *-  Number of freight vehicles
34611  eqnb_frtveh_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
34612                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
34613   
34614  *-  Yearly fuel consumption of freight vehicles
34615  eqq_en_frtveh_c_southafrica(jfrt,t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34616                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
34617   
34618  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
34619  eqq_el_frtedv_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)))..
34620                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
34621   
34622  *-  Investment cost for hbd_stfr vehicle
34623  eqmcost_inv_hbd_stfr_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
34624                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
34625   
34626  *-  Investment cost for plug-in hbd_stfr vehicle
34627  eqmcost_inv_plghbd_stfr_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
34628                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
34629   
34630  *-  Investment cost for electric drive vehicle
34631  eqmcost_inv_edv_stfr_c_southafrica(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
34632                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
34633   
34634  *-------------------------------------------------------------------------------
34636   
34637   
34638   
34639   
34640   
34641   
34642  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
34644  *-------------------------------------------------------------------------------
34645  * Traditional Biomass
34646  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
34647  *  - require post_process to be launch before
34648  *-------------------------------------------------------------------------------
34649   
34651   
34652  * Optional modules
34653   
34654  * Policy modules
34655   
34656  * Calibration
34659   
34660   
34661  model witch_c_southafrica /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
34663  *-------------------------------------------------------------------------------
34664  * Call modules by order
34665  *-------------------------------------------------------------------------------
34669   
34670  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
34672  *-------------------------------------------------------------------------------
34673  * Algorithm
34674  *-------------------------------------------------------------------------------
34675   
34677   
34678  eqobj_c_southafrica
34679   
34680  *-------------------------------------------------------------------------------
34682   
34683  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
34685  *-------------------------------------------------------------------------------
34686  * Time
34687  * - Temporal structure
34688  * - Fixed time periods
34689  * - States of the world
34690  *-------------------------------------------------------------------------------
34691   
34693   
34694  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
34696  *-------------------------------------------------------------------------------
34697  * Geographic dimension and mapping with countries
34698  *-------------------------------------------------------------------------------
34699   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
34702  *-------------------------------------------------------------------------------
34703  * Non-Cooperative Setup
34704  *
34705  * Each region is defined as an individual coalition.
34706  *
34707  *-------------------------------------------------------------------------------
34708   
34710   
34711  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
34713  *-------------------------------------------------------------------------------
34714  * Welfare
34715  *-------------------------------------------------------------------------------
34716   
34718   
34719  equtility_c_southafrica
34720   
34721  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
34724  *-------------------------------------------------------------------------------
34725  * Economy
34726  * - Production and Consumption definition
34727  * - Top-level of the production function
34728  * Options:
34729  * --original_ssp=1 : original SSP population and GDP data
34730  *-------------------------------------------------------------------------------
34731   
34733   
34734  eqk_c_southafrica
34735  eqq_cc_c_southafrica
34736  eqq_fen_c_southafrica
34737  eqq_y_c_southafrica
34738   
34739  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
34742  *-------------------------------------------------------------------------------
34743  * Energy sector
34744  *-------------------------------------------------------------------------------
34745   
34747   
34748  eq_mkt_clearing_oil_c_southafrica
34749  eqcost_pes_c_southafrica
34750  eqcost_ses_c_southafrica
34751  eqk_en_c_southafrica
34752  eqq_ces_el_c_southafrica
34753  eqq_ces_nelgas_c_southafrica
34754  eqq_el2_c_southafrica
34755  eqq_el_c_southafrica
34756  eqq_elff_c_southafrica
34757  eqq_en_c_southafrica
34758  eqq_en_in_c_southafrica
34759  eqq_en_mu_c_southafrica
34760  eqq_en_tree_c_southafrica
34761  eqq_nel_c_southafrica
34762  eqq_nelog_c_southafrica
34763  eqq_fuel_c_southafrica
34764  eqq_elffren_c_southafrica
34765   
34766  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
34769  *-------------------------------------------------------------------------------
34770  * Carbon Emissions
34771  * - Total CO2 emissions and CO2 Fossil fuel and Industry
34772  * - CO2 emission costs
34773  * - GHG permit market
34774  *-------------------------------------------------------------------------------
34775   
34777   
34778  eqq_emi_lim_c_southafrica
34779  eqq_emi_tree_c_southafrica
34780  eqq_emi_co2ffi_c_southafrica
34781   
34782  eqcost_emi_co2_c_southafrica
34783   
34784  eq_mkt_clearing_nip_c_southafrica
34785   
34786  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
34789  *-------------------------------------------------------------------------------
34790  * Research & Development
34791  * Options:
34792  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
34793  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
34794  *-------------------------------------------------------------------------------
34795   
34797   
34798  eqk_rd_c_southafrica
34799  eqspill_coop_c_southafrica
34800  eqspill_lead_c_southafrica
34801  eqspill_foll_c_southafrica
34802  eqmcost_inv_back_c_southafrica
34803  eqmcost_inv_back_lbd_c_southafrica
34804   
34805  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
34808  *-------------------------------------------------------------------------------
34809  * Default Climate Policy Implementation
34810  *
34811  * Options:
34812  *    --policy={bau (default),ctax}
34813  *        Implement a climate policy setting
34814  *  [ --scen= ]
34815  *        Policy variant.
34816  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
34817  *          * XXX for a fixed percentage/yr (e.g. 5) growth
34818  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
34819  *  [ --ctax_year=2020 ]
34820  *        Starting year of the carbon tax
34821  *  [ --ctax_initial=30 ]
34822  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
34823  *
34824  *-------------------------------------------------------------------------------
34826   
34827  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
34829  *-------------------------------------------------------------------------------
34830  * Energy efficiency
34831  *-------------------------------------------------------------------------------
34832   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
34835  *-------------------------------------------------------------------------------
34836  * Hydro Power
34837  *-------------------------------------------------------------------------------
34838   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
34841  *-------------------------------------------------------------------------------
34842  * System Integration:
34843  * - Capacity constraint
34844  * - Flexibility constraint
34845  * - Grid Investment
34846  * - Capacity growth constraint
34847  *-------------------------------------------------------------------------------
34848   
34850   
34851  eqq_elintren_c_southafrica
34852  eqflex_c_southafrica
34853  eqk_en_grid_c_southafrica
34854  eqk_en_grid_to_k_en_c_southafrica
34855  eqfirm_capacity_c_southafrica
34856  eqcap_growth_c_southafrica
34857   
34858  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
34861  *-------------------------------------------------------------------------------
34862  * Nuclear power plants
34863  *-------------------------------------------------------------------------------
34864   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
34867  *-------------------------------------------------------------------------------
34868  * GHG module
34869  * - CH4 FFI + CH4 waste + CH4 open fires
34870  * - N2O FFI + N2O waste + N2O open fires
34871  *-------------------------------------------------------------------------------
34872   
34874   
34875  eqq_emi_waste_c_southafrica
34876  eqq_emi_n2o_ffi_c_southafrica
34877  eqq_emi_ch4_ffi_c_southafrica
34878   
34879  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
34882  *-------------------------------------------------------------------------------
34883  * F-gases
34884  * - LLF
34885  * - SLF
34886  *-------------------------------------------------------------------------------
34887   
34889   
34890  eqq_emi_fgases_c_southafrica
34891   
34892  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
34895  *-------------------------------------------------------------------------------
34896  * Landuse [simplified version of the land-use model]
34897  *-------------------------------------------------------------------------------
34898   
34900   
34901  eq_wbio_c_southafrica
34902  eqcost_pes_wbio_c_southafrica
34903   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
34906  *-------------------------------------------------------------------------------
34907  * Bioenergy power plant
34908  *-------------------------------------------------------------------------------
34909   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
34912  *-------------------------------------------------------------------------------
34913  * Traditional Biofuels
34914  * - Requires the precedence of mod_landuse
34915  *-------------------------------------------------------------------------------
34916   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
34919  *-------------------------------------------------------------------------------
34920  * Advanced biofuel
34921  * - Require the precedence of mod_landuse
34922  *-------------------------------------------------------------------------------
34923   
34925   
34926  eqq_en_lim_advbiofuel_c_southafrica
34927  eqmcost_fuel_advbiofuel_c_southafrica
34928   
34929  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
34932  *-------------------------------------------------------------------------------
34933  * Carbon Capture and Sequestration
34934  *-------------------------------------------------------------------------------
34935   
34937   
34938  eqq_emi_ccs_c_southafrica
34939  eqcost_emi_sinks_c_southafrica
34940  eq_stor_ccs_cum_c_southafrica
34941  eq_emi_stor_ccs_c_southafrica
34942  eq_emi_leak_ccs_c_southafrica
34943   
34944  *-------------------------------------------------------------------------------
34946   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
34948  *-------------------------------------------------------------------------------
34949  * Coal for non-electric sectors
34950  * - Coke Plants
34951  * - Industrial and Commercial combined-heat-and-power (CHP)
34952  * - Others
34953  *-------------------------------------------------------------------------------
34954   
34956   
34957  eqcost_en_nelcoal_c_southafrica
34958  eqq_ncoalabat_monotone_c_southafrica
34959  eqq_en_nelcoalccs_max_c_southafrica
34960   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
34963  *-------------------------------------------------------------------------------
34964  * Wind energy module
34965  * - onshore and offshore
34966  *-------------------------------------------------------------------------------
34967   
34969   
34970  eqq_en_mu_windon_c_southafrica
34971  eqq_en_mu_windoff_c_southafrica
34972  eqk_en_windon_c_southafrica
34973  eqk_en_windoff_c_southafrica
34974  eqq_en_windon_sum_c_southafrica
34975  eqq_en_windoff_sum_c_southafrica
34976  eqk_en_windon_sum_c_southafrica
34977  eqk_en_windoff_sum_c_southafrica
34978  eqi_en_windon_sum_c_southafrica
34979  eqi_en_windoff_sum_c_southafrica
34980   
34982   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
34984  *-------------------------------------------------------------------------------
34985  * Solar Powerplants (PV and CSP) to the electrical system
34986  *-------------------------------------------------------------------------------
34987   
34988  *-------------------------------------------------------------------------------
34990   
34991  eqq_en_mu_pv_c_southafrica
34992  eqq_en_mu_csp_c_southafrica
34993  eqk_en_pv_c_southafrica
34994  eqk_en_csp_c_southafrica
34995  eqq_en_pv_sum_c_southafrica
34996  eqq_en_csp_sum_c_southafrica
34997  eqk_en_pv_sum_c_southafrica
34998  eqk_en_csp_sum_c_southafrica
34999  eqi_en_pv_sum_c_southafrica
35000  eqi_en_csp_sum_c_southafrica
35001  eqk_en_solar_comp_c_southafrica
35002   
35003  *-------------------------------------------------------------------------------
35005   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
35007  *-------------------------------------------------------------------------------
35008  * Technology development scenarios
35009  *-------------------------------------------------------------------------------
35010   
35012   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
35014  *-------------------------------------------------------------------------------
35015  * Oil Extraction
35016  * Options:
35017  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
35018  *-------------------------------------------------------------------------------
35019   
35021   
35022  eqoilcap_c_southafrica
35023  eqoilprod_c_southafrica
35024  eqq_out_oil_c_southafrica
35025  eqcum_oil_c_southafrica
35026  eqcost_oil_c_southafrica
35027  eqi_oil_c_southafrica
35028  eqi_out_oil_c_southafrica
35029  eqq_emi_out_oil_c_southafrica
35030   
35031  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
35034  *-------------------------------------------------------------------------------
35035  * Uranium Resources
35036  *-------------------------------------------------------------------------------
35037   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
35040  *-------------------------------------------------------------------------------
35041  * Gas Resources
35042  *-------------------------------------------------------------------------------
35043   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
35046  *-------------------------------------------------------------------------------
35047  * Coal Resources
35048  *-------------------------------------------------------------------------------
35049   
35051   
35052   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
35054  *-------------------------------------------------------------------------------
35055  * Climate
35056  *
35057  * Represents the climate
35058  * - based on the DICE model equations
35059  * - Radiative forcing for non CO2 ghgs
35060  * - parameters calibrated to reproduce MAGICC6.4 default response
35061  *
35062  *  Options:
35063  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
35064  * - $setglobal cooperate_on_climate {'YES','NO'}
35065  * - 'YES'(default): Countries within a coalition act in cooperation
35066  *   'NO': Countries within a coalition act individually
35067  *
35068  *-------------------------------------------------------------------------------
35069   
35071   
35073   
35074  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
35077  *-------------------------------------------------------------------------------
35078  * Long-run Damages from Climate Change
35079  * - Economic impacts
35080  * - Adaptation
35081  *-------------------------------------------------------------------------------
35082   
35084   
35086   
35087  *-------------------------------------------------------------------------------
35089   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
35091  *-------------------------------------------------------------------------------
35092  * Light-duty Vehicles for Personal Transport
35093  *-------------------------------------------------------------------------------
35094   
35096   
35097  eqnb_veh_c_southafrica
35098  eqq_en_veh_c_southafrica
35099  eqq_el_edv_c_southafrica
35100  eqmcost_inv_hybrid_c_southafrica
35101  eqmcost_inv_plghybrid_c_southafrica
35102  eqmcost_inv_edv_c_southafrica
35103  *** newcode
35104  eqq_inv_red_ban_c_southafrica
35105  ***
35106  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
35109  *-------------------------------------------------------------------------------
35110  * Road Freight Transport
35111  *-------------------------------------------------------------------------------
35113   
35114  eqnb_frtveh_c_southafrica
35115  eqq_en_frtveh_c_southafrica
35116  eqq_el_frtedv_c_southafrica
35117  eqmcost_inv_hbd_stfr_c_southafrica
35118  eqmcost_inv_plghbd_stfr_c_southafrica
35119  eqmcost_inv_edv_stfr_c_southafrica
35120   
35121  *-------------------------------------------------------------------------------
35123   
35124   
35125   
35126   
35127   
35128   
35129  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
35131  *-------------------------------------------------------------------------------
35132  * Traditional Biomass
35133  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
35134  *  - require post_process to be launch before
35135  *-------------------------------------------------------------------------------
35136   
35138   
35139  * Optional modules
35140   
35141  * Policy modules
35142   
35143  * Calibration
35146  /;
35147   
35148  witch_c_southafrica.optfile=1;   # the option file solvername.opt is to be used
35149  witch_c_southafrica.holdfixed=1; # treat fixed values as constant
35150  witch_c_southafrica.scaleopt=1;  # Use scaling for better gradients estimation
35151  witch_c_southafrica.solvelink=3; # Use parallel or sequential solving
35152   
35157   
35158  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
35160  *-------------------------------------------------------------------------------
35161  * Call modules by order
35162  *-------------------------------------------------------------------------------
35166   
35167  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
35169  *-------------------------------------------------------------------------------
35170  * Algorithm
35171  *-------------------------------------------------------------------------------
35172   
35174   
35175  eqobj_c_ssa
35176   
35177  *-------------------------------------------------------------------------------
35179   
35180  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
35182  *-------------------------------------------------------------------------------
35183  * Time
35184  * - Temporal structure
35185  * - Fixed time periods
35186  * - States of the world
35187  *-------------------------------------------------------------------------------
35188   
35190   
35191  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
35193  *-------------------------------------------------------------------------------
35194  * Geographic dimension and mapping with countries
35195  *-------------------------------------------------------------------------------
35196   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
35199  *-------------------------------------------------------------------------------
35200  * Non-Cooperative Setup
35201  *
35202  * Each region is defined as an individual coalition.
35203  *
35204  *-------------------------------------------------------------------------------
35205   
35207   
35208  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
35210  *-------------------------------------------------------------------------------
35211  * Welfare
35212  *-------------------------------------------------------------------------------
35213   
35215   
35216  equtility_c_ssa
35217   
35218  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
35221  *-------------------------------------------------------------------------------
35222  * Economy
35223  * - Production and Consumption definition
35224  * - Top-level of the production function
35225  * Options:
35226  * --original_ssp=1 : original SSP population and GDP data
35227  *-------------------------------------------------------------------------------
35228   
35230   
35231  eqk_c_ssa
35232  eqq_cc_c_ssa
35233  eqq_fen_c_ssa
35234  eqq_y_c_ssa
35235   
35236  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
35239  *-------------------------------------------------------------------------------
35240  * Energy sector
35241  *-------------------------------------------------------------------------------
35242   
35244   
35245  eq_mkt_clearing_oil_c_ssa
35246  eqcost_pes_c_ssa
35247  eqcost_ses_c_ssa
35248  eqk_en_c_ssa
35249  eqq_ces_el_c_ssa
35250  eqq_ces_nelgas_c_ssa
35251  eqq_el2_c_ssa
35252  eqq_el_c_ssa
35253  eqq_elff_c_ssa
35254  eqq_en_c_ssa
35255  eqq_en_in_c_ssa
35256  eqq_en_mu_c_ssa
35257  eqq_en_tree_c_ssa
35258  eqq_nel_c_ssa
35259  eqq_nelog_c_ssa
35260  eqq_fuel_c_ssa
35261  eqq_elffren_c_ssa
35262   
35263  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
35266  *-------------------------------------------------------------------------------
35267  * Carbon Emissions
35268  * - Total CO2 emissions and CO2 Fossil fuel and Industry
35269  * - CO2 emission costs
35270  * - GHG permit market
35271  *-------------------------------------------------------------------------------
35272   
35274   
35275  eqq_emi_lim_c_ssa
35276  eqq_emi_tree_c_ssa
35277  eqq_emi_co2ffi_c_ssa
35278   
35279  eqcost_emi_co2_c_ssa
35280   
35281  eq_mkt_clearing_nip_c_ssa
35282   
35283  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
35286  *-------------------------------------------------------------------------------
35287  * Research & Development
35288  * Options:
35289  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
35290  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
35291  *-------------------------------------------------------------------------------
35292   
35294   
35295  eqk_rd_c_ssa
35296  eqspill_coop_c_ssa
35297  eqspill_lead_c_ssa
35298  eqspill_foll_c_ssa
35299  eqmcost_inv_back_c_ssa
35300  eqmcost_inv_back_lbd_c_ssa
35301   
35302  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
35305  *-------------------------------------------------------------------------------
35306  * Default Climate Policy Implementation
35307  *
35308  * Options:
35309  *    --policy={bau (default),ctax}
35310  *        Implement a climate policy setting
35311  *  [ --scen= ]
35312  *        Policy variant.
35313  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
35314  *          * XXX for a fixed percentage/yr (e.g. 5) growth
35315  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
35316  *  [ --ctax_year=2020 ]
35317  *        Starting year of the carbon tax
35318  *  [ --ctax_initial=30 ]
35319  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
35320  *
35321  *-------------------------------------------------------------------------------
35323   
35324  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
35326  *-------------------------------------------------------------------------------
35327  * Energy efficiency
35328  *-------------------------------------------------------------------------------
35329   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
35332  *-------------------------------------------------------------------------------
35333  * Hydro Power
35334  *-------------------------------------------------------------------------------
35335   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
35338  *-------------------------------------------------------------------------------
35339  * System Integration:
35340  * - Capacity constraint
35341  * - Flexibility constraint
35342  * - Grid Investment
35343  * - Capacity growth constraint
35344  *-------------------------------------------------------------------------------
35345   
35347   
35348  eqq_elintren_c_ssa
35349  eqflex_c_ssa
35350  eqk_en_grid_c_ssa
35351  eqk_en_grid_to_k_en_c_ssa
35352  eqfirm_capacity_c_ssa
35353  eqcap_growth_c_ssa
35354   
35355  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
35358  *-------------------------------------------------------------------------------
35359  * Nuclear power plants
35360  *-------------------------------------------------------------------------------
35361   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
35364  *-------------------------------------------------------------------------------
35365  * GHG module
35366  * - CH4 FFI + CH4 waste + CH4 open fires
35367  * - N2O FFI + N2O waste + N2O open fires
35368  *-------------------------------------------------------------------------------
35369   
35371   
35372  eqq_emi_waste_c_ssa
35373  eqq_emi_n2o_ffi_c_ssa
35374  eqq_emi_ch4_ffi_c_ssa
35375   
35376  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
35379  *-------------------------------------------------------------------------------
35380  * F-gases
35381  * - LLF
35382  * - SLF
35383  *-------------------------------------------------------------------------------
35384   
35386   
35387  eqq_emi_fgases_c_ssa
35388   
35389  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
35392  *-------------------------------------------------------------------------------
35393  * Landuse [simplified version of the land-use model]
35394  *-------------------------------------------------------------------------------
35395   
35397   
35398  eq_wbio_c_ssa
35399  eqcost_pes_wbio_c_ssa
35400   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
35403  *-------------------------------------------------------------------------------
35404  * Bioenergy power plant
35405  *-------------------------------------------------------------------------------
35406   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
35409  *-------------------------------------------------------------------------------
35410  * Traditional Biofuels
35411  * - Requires the precedence of mod_landuse
35412  *-------------------------------------------------------------------------------
35413   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
35416  *-------------------------------------------------------------------------------
35417  * Advanced biofuel
35418  * - Require the precedence of mod_landuse
35419  *-------------------------------------------------------------------------------
35420   
35422   
35423  eqq_en_lim_advbiofuel_c_ssa
35424  eqmcost_fuel_advbiofuel_c_ssa
35425   
35426  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
35429  *-------------------------------------------------------------------------------
35430  * Carbon Capture and Sequestration
35431  *-------------------------------------------------------------------------------
35432   
35434   
35435  eqq_emi_ccs_c_ssa
35436  eqcost_emi_sinks_c_ssa
35437  eq_stor_ccs_cum_c_ssa
35438  eq_emi_stor_ccs_c_ssa
35439  eq_emi_leak_ccs_c_ssa
35440   
35441  *-------------------------------------------------------------------------------
35443   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
35445  *-------------------------------------------------------------------------------
35446  * Coal for non-electric sectors
35447  * - Coke Plants
35448  * - Industrial and Commercial combined-heat-and-power (CHP)
35449  * - Others
35450  *-------------------------------------------------------------------------------
35451   
35453   
35454  eqcost_en_nelcoal_c_ssa
35455  eqq_ncoalabat_monotone_c_ssa
35456  eqq_en_nelcoalccs_max_c_ssa
35457   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
35460  *-------------------------------------------------------------------------------
35461  * Wind energy module
35462  * - onshore and offshore
35463  *-------------------------------------------------------------------------------
35464   
35466   
35467  eqq_en_mu_windon_c_ssa
35468  eqq_en_mu_windoff_c_ssa
35469  eqk_en_windon_c_ssa
35470  eqk_en_windoff_c_ssa
35471  eqq_en_windon_sum_c_ssa
35472  eqq_en_windoff_sum_c_ssa
35473  eqk_en_windon_sum_c_ssa
35474  eqk_en_windoff_sum_c_ssa
35475  eqi_en_windon_sum_c_ssa
35476  eqi_en_windoff_sum_c_ssa
35477   
35479   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
35481  *-------------------------------------------------------------------------------
35482  * Solar Powerplants (PV and CSP) to the electrical system
35483  *-------------------------------------------------------------------------------
35484   
35485  *-------------------------------------------------------------------------------
35487   
35488  eqq_en_mu_pv_c_ssa
35489  eqq_en_mu_csp_c_ssa
35490  eqk_en_pv_c_ssa
35491  eqk_en_csp_c_ssa
35492  eqq_en_pv_sum_c_ssa
35493  eqq_en_csp_sum_c_ssa
35494  eqk_en_pv_sum_c_ssa
35495  eqk_en_csp_sum_c_ssa
35496  eqi_en_pv_sum_c_ssa
35497  eqi_en_csp_sum_c_ssa
35498  eqk_en_solar_comp_c_ssa
35499   
35500  *-------------------------------------------------------------------------------
35502   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
35504  *-------------------------------------------------------------------------------
35505  * Technology development scenarios
35506  *-------------------------------------------------------------------------------
35507   
35509   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
35511  *-------------------------------------------------------------------------------
35512  * Oil Extraction
35513  * Options:
35514  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
35515  *-------------------------------------------------------------------------------
35516   
35518   
35519  eqoilcap_c_ssa
35520  eqoilprod_c_ssa
35521  eqq_out_oil_c_ssa
35522  eqcum_oil_c_ssa
35523  eqcost_oil_c_ssa
35524  eqi_oil_c_ssa
35525  eqi_out_oil_c_ssa
35526  eqq_emi_out_oil_c_ssa
35527   
35528  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
35531  *-------------------------------------------------------------------------------
35532  * Uranium Resources
35533  *-------------------------------------------------------------------------------
35534   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
35537  *-------------------------------------------------------------------------------
35538  * Gas Resources
35539  *-------------------------------------------------------------------------------
35540   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
35543  *-------------------------------------------------------------------------------
35544  * Coal Resources
35545  *-------------------------------------------------------------------------------
35546   
35548   
35549   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
35551  *-------------------------------------------------------------------------------
35552  * Climate
35553  *
35554  * Represents the climate
35555  * - based on the DICE model equations
35556  * - Radiative forcing for non CO2 ghgs
35557  * - parameters calibrated to reproduce MAGICC6.4 default response
35558  *
35559  *  Options:
35560  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
35561  * - $setglobal cooperate_on_climate {'YES','NO'}
35562  * - 'YES'(default): Countries within a coalition act in cooperation
35563  *   'NO': Countries within a coalition act individually
35564  *
35565  *-------------------------------------------------------------------------------
35566   
35568   
35570   
35571  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
35574  *-------------------------------------------------------------------------------
35575  * Long-run Damages from Climate Change
35576  * - Economic impacts
35577  * - Adaptation
35578  *-------------------------------------------------------------------------------
35579   
35581   
35583   
35584  *-------------------------------------------------------------------------------
35586   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
35588  *-------------------------------------------------------------------------------
35589  * Light-duty Vehicles for Personal Transport
35590  *-------------------------------------------------------------------------------
35591   
35593   
35594  eqnb_veh_c_ssa
35595  eqq_en_veh_c_ssa
35596  eqq_el_edv_c_ssa
35597  eqmcost_inv_hybrid_c_ssa
35598  eqmcost_inv_plghybrid_c_ssa
35599  eqmcost_inv_edv_c_ssa
35600  *** newcode
35601  eqq_inv_red_ban_c_ssa
35602  ***
35603  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
35606  *-------------------------------------------------------------------------------
35607  * Road Freight Transport
35608  *-------------------------------------------------------------------------------
35610   
35611  eqnb_frtveh_c_ssa
35612  eqq_en_frtveh_c_ssa
35613  eqq_el_frtedv_c_ssa
35614  eqmcost_inv_hbd_stfr_c_ssa
35615  eqmcost_inv_plghbd_stfr_c_ssa
35616  eqmcost_inv_edv_stfr_c_ssa
35617   
35618  *-------------------------------------------------------------------------------
35620   
35621   
35622   
35623   
35624   
35625   
35626  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
35628  *-------------------------------------------------------------------------------
35629  * Traditional Biomass
35630  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
35631  *  - require post_process to be launch before
35632  *-------------------------------------------------------------------------------
35633   
35635   
35636  * Optional modules
35637   
35638  * Policy modules
35639   
35640  * Calibration
35643  ;
35644   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
35646  *-------------------------------------------------------------------------------
35647  * Call modules by order
35648  *-------------------------------------------------------------------------------
35652   
35653  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
35655  *-------------------------------------------------------------------------------
35656  * Algorithm
35657  *-------------------------------------------------------------------------------
35658   
35660   
35662  * Add the component of the (maximized) objective function as required by the ADMM algorithm
35663  eqobj_c_ssa..
35664      OBJADMM =e= UTILITY -
35665          sum(t, rho_admm('oil',t) / 2 *
35666              sum(n$(map_clt_n('c_ssa',n) and trading_t('oil',t,n)),
35667                  power(
35668                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
35669                      x_admm('oil',t,n) +
35670                      xavg_admm('oil',t) +
35671                      u_admm('oil', t)
35672                  ,2)
35673              )) -
35674          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
35675              sum(n$(map_clt_n('c_ssa',n) and trading_t(c_mkt,t,n)),
35676                  power(
35677                      Q_EMI(c_mkt,t,n) -
35678                      x_admm(c_mkt,t,n) +
35679                      xavg_admm(c_mkt,t) +
35680                      u_admm(c_mkt,t)
35681                  ,2)
35682              ))
35683      ;
35685   
35686  *-------------------------------------------------------------------------------
35688   
35689  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
35691  *-------------------------------------------------------------------------------
35692  * Time
35693  * - Temporal structure
35694  * - Fixed time periods
35695  * - States of the world
35696  *-------------------------------------------------------------------------------
35697   
35699   
35700  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
35702  *-------------------------------------------------------------------------------
35703  * Geographic dimension and mapping with countries
35704  *-------------------------------------------------------------------------------
35705   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
35708  *-------------------------------------------------------------------------------
35709  * Non-Cooperative Setup
35710  *
35711  * Each region is defined as an individual coalition.
35712  *
35713  *-------------------------------------------------------------------------------
35714   
35716   
35717  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
35719  *-------------------------------------------------------------------------------
35720  * Welfare
35721  *-------------------------------------------------------------------------------
35722   
35724   
35725  * Objective function - Welfare to be maximized
35726  equtility_c_ssa..
35727      UTILITY =e=
35728   
35729  * Negishi SWF
35731   
35732  * Welfare functions based on CEBGE
35735                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
35736                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
35737                      ((sum(n$map_clt_n('c_ssa',n),
35738                        (l(t,n) / sum(nn$map_clt_n('c_ssa',nn), l(t,nn))) *
35739                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
35740                       )**(1 / (1 - gamma))
35741                      )**(1 - eta) ) +
35742                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
35743                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
35744                      ((sum(n$map_clt_n('c_ssa',n),
35745                        (l(t,n) / sum(nn$map_clt_n('c_ssa',nn), l(t,nn))) *
35746                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
35747                       )**(1 / (1 - gamma))
35748                      )**(1 - eta) )
35749                  )**(1/(1 - eta)) * 1e6
35752   
35753   
35754  ;
35755   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
35758  *-------------------------------------------------------------------------------
35759  * Economy
35760  * - Production and Consumption definition
35761  * - Top-level of the production function
35762  * Options:
35763  * --original_ssp=1 : original SSP population and GDP data
35764  *-------------------------------------------------------------------------------
35765   
35767   
35768  * Production
35769  eqq_y_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35770   
35771      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
35772                     ## Climate feedback on economy
35774                     ## Net cost of Primary and Secondary Energy Sources
35775                     - sum(fuel, COST_FUEL(fuel,t,n))
35776                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
35777                     - sum(cce, COST_EMI(cce,t,n))
35778                     ## Carbon tax
35779                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
35780                     ## Additionnal costs on gross product
35781                     - sum(ccy, COST_Y(ccy,t,n))
35782  ;
35783   
35784  * Consumption
35785  eqq_cc_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
35786      Q('cc',t,n) =e= Q('y',t,n)
35787                      ## Investments in goods g (final good, adaptation)
35788                      -sum(g, I(g,t,n))
35789                      ## Investments in r&d
35790                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
35791                      ## Investments in energy technlogies
35792                      -sum(jinv, I_EN(jinv,t,n))
35793                       ## Investments in grid infrastructures
35794                      - I_EN_GRID(t,n)
35795                      ## Investments in extraction sector
35796                      -sum(extract(f), I_OUT(f,t,n))
35797                      ## O&M for energy technlogies
35798                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
35799                      ## O&M for extraction
35800                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
35801                      ## Energy technology penalty costs
35802                      -sum(jpenalty(j), COST_EN(j,t,n))
35803  ;
35804   
35805  * Capital accumulation
35806  eqk_c_ssa(g,t,tp1,n)$(map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
35807      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
35808   
35809  * Energy services
35810  eqq_fen_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35811      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
35812   
35813  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
35816  *-------------------------------------------------------------------------------
35817  * Energy sector
35818  *-------------------------------------------------------------------------------
35819   
35821   
35822  *-------------------------------------------------------------------------------
35823  * Production - Energy sector
35824  *-------------------------------------------------------------------------------
35825   
35826  eqq_en_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35827      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
35828   
35829  *-------------------------------------------------------------------------------
35830  * Production - Electrical sector
35831  *-------------------------------------------------------------------------------
35832   
35833  eqq_el_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35834      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
35835   
35836  eqq_el2_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35837      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
35838   
35839  eqq_elffren_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35840      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
35841  eqq_elff_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35842      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
35843   
35844  eqq_ces_el_c_ssa(ices_el,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
35845      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
35846  ;
35847   
35848  *-------------------------------------------------------------------------------
35849  * Production - Non-electrical sector
35850  *-------------------------------------------------------------------------------
35851   
35852  eqq_nel_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35853      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
35854   
35855  eqq_nelog_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35856      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
35857  ;
35858  eqq_ces_nelgas_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35859      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
35860   
35861  *-------------------------------------------------------------------------------
35862  * PES and fuels
35863  *-------------------------------------------------------------------------------
35864   
35865  eqq_fuel_c_ssa(fuel,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
35866      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
35867   
35868  *-------------------------------------------------------------------------------
35869  * Cost
35870  *-------------------------------------------------------------------------------
35871   
35872  * Net cost of Primary Energy Supplies
35873  eqcost_pes_c_ssa(f,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
35874      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
35875                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
35876   
35877  * Net cost of Secondary Energy Supplies
35878  eqcost_ses_c_ssa(s,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35879      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
35880   
35881   
35882  *-------------------------------------------------------------------------------
35883  * Market balances
35884  *-------------------------------------------------------------------------------
35885   
35886  eq_mkt_clearing_oil_c_ssa(t,'c_ssa')$(internal('oil'))..
35887      sum( n$(map_clt_n('c_ssa',n) and trading_t('oil',t,n)),
35888          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
35889      ) =e= 0;
35890   
35891  *-------------------------------------------------------------------------------
35892  * New capital in the energy sector
35893  *-------------------------------------------------------------------------------
35894   
35895  * Electrical generation plants (new)
35896  eqk_en_c_ssa(jinv,t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
35897      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
35898                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
35899   
35900  *-------------------------------------------------------------------------------
35901  * ENERGY
35902  *-------------------------------------------------------------------------------
35903   
35904  * Capacity limits in the electrical sector
35905  eqq_en_mu_c_ssa(jel,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
35906      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
35907   
35908  * Efficiency of energy technology sector
35909  eqq_en_in_c_ssa(jfed,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
35910      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
35911                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
35912   
35913  * Energy generation "tree"
35914  eqq_en_tree_c_ssa(j,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
35915      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
35916   
35917  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
35920  *-------------------------------------------------------------------------------
35921  * Carbon Emissions
35922  * - Total CO2 emissions and CO2 Fossil fuel and Industry
35923  * - CO2 emission costs
35924  * - GHG permit market
35925  *-------------------------------------------------------------------------------
35926   
35928   
35929  * GHG emission cap
35930  eqq_emi_lim_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
35931      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
35932                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
35933   
35934  * Compute total and sectoral emissions
35935  eqq_emi_tree_c_ssa(t,n,e)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
35936      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
35937   
35938  * Industrial CO2 emissions
35939  eqq_emi_co2ffi_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35940      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
35941                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
35942                              # Emissions from biomass
35943                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
35944                              # Emissions from fuel extraction
35945                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
35946                              # Captured emissions
35947                              sum(sink, Q_EMI(sink,t,n));
35948   
35949  * CO2 emission costs
35950  eqcost_emi_co2_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
35951      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
35952   
35953  * Emission permit market clearing for internal market
35954  eq_mkt_clearing_nip_c_ssa(c_mkt,t,'c_ssa')$(internal(c_mkt))..
35955      sum(n$(map_clt_n('c_ssa',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
35956   
35957  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
35960  *-------------------------------------------------------------------------------
35961  * Research & Development
35962  * Options:
35963  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
35964  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
35965  *-------------------------------------------------------------------------------
35966   
35968   
35969  * Knowledge stock accumulation
35970  eqk_rd_c_ssa(rd,t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
35971                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
35972                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
35973                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
35974                                        SPILL(rd,t,n)**rd_coef(rd,'d');
35975   
35976  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
35977  eqspill_coop_c_ssa(rd,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_ssa'))..
35978          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
35979                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_ssa',nn)), K_RD(rd,t,nn)) +
35980                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_ssa',nn))), K_RD.l(rd,t,nn))
35981                            ) *
35982                            (
35983                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_ssa',nn)), K_RD(rd,t,nn)) +
35984                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_ssa',nn))), K_RD.l(rd,t,nn))
35985                              ) - K_RD(rd,t,n)
35986                            );
35987   
35988  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
35989  eqspill_lead_c_ssa(rd,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_ssa')) and leadrd(rd,n))..
35990                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
35991   
35992  * No-cooperation : a follower sees is negative effect on the quantity he can grab
35993  eqspill_foll_c_ssa(rd,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_ssa')) and (not leadrd(rd,n)))..
35994                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
35995   
35996  *- Only LbR (without learning by doing)
35997  eqmcost_inv_back_c_ssa(jrd,t,tt,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
35998                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
35999                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
36000   
36001  *- LbR together with learning by doing ==> Two-factor learning curve
36002  eqmcost_inv_back_lbd_c_ssa(jrd,t,tt,tfirst,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
36003                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
36004                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
36005                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
36006   
36007  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
36010  *-------------------------------------------------------------------------------
36011  * Default Climate Policy Implementation
36012  *
36013  * Options:
36014  *    --policy={bau (default),ctax}
36015  *        Implement a climate policy setting
36016  *  [ --scen= ]
36017  *        Policy variant.
36018  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
36019  *          * XXX for a fixed percentage/yr (e.g. 5) growth
36020  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
36021  *  [ --ctax_year=2020 ]
36022  *        Starting year of the carbon tax
36023  *  [ --ctax_initial=30 ]
36024  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
36025  *
36026  *-------------------------------------------------------------------------------
36028   
36029  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
36031  *-------------------------------------------------------------------------------
36032  * Energy efficiency
36033  *-------------------------------------------------------------------------------
36034   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
36037  *-------------------------------------------------------------------------------
36038  * Hydro Power
36039  *-------------------------------------------------------------------------------
36040   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
36043  *-------------------------------------------------------------------------------
36044  * System Integration:
36045  * - Capacity constraint
36046  * - Flexibility constraint
36047  * - Grid Investment
36048  * - Capacity growth constraint
36049  *-------------------------------------------------------------------------------
36050   
36052   
36053   
36054  * Renewable CES
36055   
36056  * Definition of the renewable CES
36057  eqq_elintren_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36058      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
36059   
36060  * Capacity constraint
36061   
36063  eqfirm_capacity_c_ssa(t,n)$(map_clt_n('c_ssa',n) and (not tfix(t)) and year(t) gt 2005)..
36064                   sum(jel_firm, K_EN(jel_firm,t,n))
36065                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
36066                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
36067                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
36068                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
36069                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
36070                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
36071                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
36072                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
36073                                       ) / yearly_hours
36074  ;
36076   
36077  * Flexibility constraint
36078  eqflex_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36079          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
36080                             ( Q_EN('el',t,n) -
36081                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
36082                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
36083                             ) * flex_coeff('load')
36084  ;
36085   
36086  * Grid
36087   
36088  ** Grid depreciation and investments
36089  eqk_en_grid_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
36090                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
36091                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
36092   
36093  ** Grid adjustment to power capacity
36094  eqk_en_grid_to_k_en_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36095                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
36096                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
36097                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
36098                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
36099                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
36100                                     ) / grid_cost +
36101                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
36102                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
36103                                      K_EN('elcsp',t,n);
36104  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
36105   
36106  * Capacity growth constraint
36107  eqcap_growth_c_ssa(jinv,t,tp1,tp2,n)$((map_clt_n('c_ssa',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
36108                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
36109                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
36110   
36111  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
36114  *-------------------------------------------------------------------------------
36115  * Nuclear power plants
36116  *-------------------------------------------------------------------------------
36117   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
36120  *-------------------------------------------------------------------------------
36121  * GHG module
36122  * - CH4 FFI + CH4 waste + CH4 open fires
36123  * - N2O FFI + N2O waste + N2O open fires
36124  *-------------------------------------------------------------------------------
36125   
36127   
36128  * CH4, N2O waste emissions
36129  eqq_emi_waste_c_ssa(waste,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
36130                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
36131   
36132  * n2o FFI
36133  eqq_emi_n2o_ffi_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
36134    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
36135                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
36136                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
36137                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
36138                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
36139                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
36140                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
36141                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
36142                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
36143                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
36144                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
36145                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
36146                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
36147                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
36148                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
36149                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
36150                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
36151                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
36152                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
36153                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
36154                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
36155                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
36156                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
36157                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
36158                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
36159                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
36160                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
36161                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
36162                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
36163                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
36164                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
36165   
36166  * ch4 FFI
36167  eqq_emi_ch4_ffi_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
36168    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
36171  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
36172  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
36173                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
36174                             smax(tt$(year(tt) eq 2015),
36175                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
36178  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
36179  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
36180                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
36181   
36182  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
36185  *-------------------------------------------------------------------------------
36186  * F-gases
36187  * - LLF
36188  * - SLF
36189  *-------------------------------------------------------------------------------
36190   
36192   
36193  * F-gases emissions
36194  eqq_emi_fgases_c_ssa(fgases,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
36195                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
36196   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
36199  *-------------------------------------------------------------------------------
36200  * Landuse [simplified version of the land-use model]
36201  *-------------------------------------------------------------------------------
36202   
36204   
36205  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
36206  eq_wbio_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36207      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
36208   
36210  * Cost of all woody biomass produced for advanced biofuels and woody biomass
36211  eqcost_pes_wbio_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36212      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
36214   
36215  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
36218  *-------------------------------------------------------------------------------
36219  * Bioenergy power plant
36220  *-------------------------------------------------------------------------------
36221   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
36224  *-------------------------------------------------------------------------------
36225  * Traditional Biofuels
36226  * - Requires the precedence of mod_landuse
36227  *-------------------------------------------------------------------------------
36228   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
36231  *-------------------------------------------------------------------------------
36232  * Advanced biofuel
36233  * - Require the precedence of mod_landuse
36234  *-------------------------------------------------------------------------------
36235   
36237   
36238  * Limitations for nel backstops
36239  eqq_en_lim_advbiofuel_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
36240               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
36241               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
36242   
36243  * Peculiarity of advbiofuel
36244  eqmcost_fuel_advbiofuel_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36245                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
36246   
36247  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
36250  *-------------------------------------------------------------------------------
36251  * Carbon Capture and Sequestration
36252  *-------------------------------------------------------------------------------
36253   
36255   
36256  eqq_emi_ccs_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36257                  Q_EMI('ccs_plant',t,n) =e=
36258                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
36259                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
36260  ;
36261   
36262  eqcost_emi_sinks_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36263                  COST_EMI('ccs_plant',t,n) =e=
36264                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
36265                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
36266  ;
36267   
36268  eq_stor_ccs_cum_c_ssa(ccs_stor,tp1,t,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
36269                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
36270  ;
36271   
36272  eq_emi_stor_ccs_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36273                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
36274  ;
36275   
36276  eq_emi_leak_ccs_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36277                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
36278   
36279  *-------------------------------------------------------------------------------
36281   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
36283  *-------------------------------------------------------------------------------
36284  * Coal for non-electric sectors
36285  * - Coke Plants
36286  * - Industrial and Commercial combined-heat-and-power (CHP)
36287  * - Others
36288  *-------------------------------------------------------------------------------
36289   
36291   
36292  eqcost_en_nelcoal_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36293           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
36294                                          nelcoal_max_abat(t,n) *
36295                                          (nelcoal_cmac(n,'a') *
36296                                            Q_EN('nelcoalabat',t,n) /
36297                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
36298                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
36299                                              (exp(nelcoal_cmac(n,'c') *
36300                                                (Q_EN('nelcoalabat',t,n)/
36301                                                  (nelcoal_max_abat(t,n) *
36302                                                      nelcoal_baseline(t,n))
36303                                                  ) - 1 )
36304                                              )
36305                                          );
36306   
36307  eqq_ncoalabat_monotone_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
36308          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
36309   
36310  * ensure Q_EN is lower than K_EN for CCS as not in jel
36311  eqq_en_nelcoalccs_max_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36312          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
36313   
36314  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
36317  *-------------------------------------------------------------------------------
36318  * Wind energy module
36319  * - onshore and offshore
36320  *-------------------------------------------------------------------------------
36321   
36323   
36324  * Capacity limits in the wind onshore electrical sector
36325  eqq_en_mu_windon_c_ssa(wind_dist,wind_class,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
36326      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
36327   
36328  * Capacity limits in the wind offshore electrical sector
36329  eqq_en_mu_windoff_c_ssa(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
36330      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
36331   
36332  * Wind onshore electrical generation plants (new)
36333  eqk_en_windon_c_ssa(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
36334      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
36335                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
36336   
36337  * Wind offshore electrical generation plants (new)
36338  eqk_en_windoff_c_ssa(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
36339      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
36340                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
36341   
36342  * Total onshore wind energy production
36343  eqq_en_windon_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36344                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
36345   
36346  * Total offshore wind energy production
36347  eqq_en_windoff_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36348                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
36349   
36350  * Total onshore wind capacity
36351  eqk_en_windon_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36352                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
36353   
36354  * Total offshore wind capacity
36355  eqk_en_windoff_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36356                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
36357   
36358  * Total onshore wind investment
36359  eqi_en_windon_sum_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
36360                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
36361   
36362  * Total offshore wind investment
36363  eqi_en_windoff_sum_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
36364                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
36365   
36366  *-------------------------------------------------------------------------------
36368   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
36370  *-------------------------------------------------------------------------------
36371  * Solar Powerplants (PV and CSP) to the electrical system
36372  *-------------------------------------------------------------------------------
36373   
36374  *-------------------------------------------------------------------------------
36376   
36377   
36378  * Capacity limits in the pv electrical sector
36379  eqq_en_mu_pv_c_ssa(solar_dist,solar_class,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
36380                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
36381   
36382  * Capacity limits in the csp electrical sector
36383  eqq_en_mu_csp_c_ssa(solar_dist,solar_class,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
36384                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
36385   
36386  * PV electrical generation plants (new)
36387  eqk_en_pv_c_ssa(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
36388                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
36389                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
36390   
36391  * CSP electrical generation plants (new)
36392  eqk_en_csp_c_ssa(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
36393                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
36394                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
36395   
36396  * Total PV energy production
36397  eqq_en_pv_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36398                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
36399   
36400  * Total CSP energy production
36401  eqq_en_csp_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36402                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
36403   
36404  * Total PV capacity
36405  eqk_en_pv_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36406                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
36407   
36408  * Total CSP capacity
36409  eqk_en_csp_sum_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36410                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
36411   
36412  * Total PV investment
36413  eqi_en_pv_sum_c_ssa(t,tp1,n)$(map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
36414                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
36415   
36416  * Total CSP investment
36417  eqi_en_csp_sum_c_ssa(t,tp1,n)$(map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
36418                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
36419   
36420  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
36421  eqk_en_solar_comp_c_ssa(t,n,solar_dist)$(map_clt_n('c_ssa',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
36422                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
36423                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
36424   
36425   
36426   
36427  *-------------------------------------------------------------------------------
36429   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
36431  *-------------------------------------------------------------------------------
36432  * Technology development scenarios
36433  *-------------------------------------------------------------------------------
36434   
36436   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
36438  *-------------------------------------------------------------------------------
36439  * Oil Extraction
36440  * Options:
36441  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
36442  *-------------------------------------------------------------------------------
36443   
36445   
36446  * Capacity
36447  eqoilcap_c_ssa(t,tp1,n,oilg)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
36448      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
36449   
36450  * Production
36451  eqoilprod_c_ssa(t,tp1,n,oilg)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
36452      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
36453   
36454  eqq_out_oil_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36455      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
36456   
36457  * Cumulative production
36458  eqcum_oil_c_ssa(t,tp1,n,oilg)$((map_clt_n('c_ssa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
36459      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
36460   
36461  * Cost
36462  eqcost_oil_c_ssa(t,tp1,n,oilg)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
36463      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
36464                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
36465                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
36466   
36467  * Investments
36468  eqi_oil_c_ssa(t,tp1,n,oilg)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
36469      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
36470   
36471  * Total investment
36472  eqi_out_oil_c_ssa(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
36473      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
36474   
36475  * Emissions
36476  eqq_emi_out_oil_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36477      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
36478   
36479  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
36482  *-------------------------------------------------------------------------------
36483  * Uranium Resources
36484  *-------------------------------------------------------------------------------
36485   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
36488  *-------------------------------------------------------------------------------
36489  * Gas Resources
36490  *-------------------------------------------------------------------------------
36491   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
36494  *-------------------------------------------------------------------------------
36495  * Coal Resources
36496  *-------------------------------------------------------------------------------
36497   
36499   
36500   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
36502  *-------------------------------------------------------------------------------
36503  * Climate
36504  *
36505  * Represents the climate
36506  * - based on the DICE model equations
36507  * - Radiative forcing for non CO2 ghgs
36508  * - parameters calibrated to reproduce MAGICC6.4 default response
36509  *
36510  *  Options:
36511  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
36512  * - $setglobal cooperate_on_climate {'YES','NO'}
36513  * - 'YES'(default): Countries within a coalition act in cooperation
36514  *   'NO': Countries within a coalition act individually
36515  *
36516  *-------------------------------------------------------------------------------
36517   
36519   
36521   
36522  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
36525  *-------------------------------------------------------------------------------
36526  * Long-run Damages from Climate Change
36527  * - Economic impacts
36528  * - Adaptation
36529  *-------------------------------------------------------------------------------
36530   
36532   
36534   
36535  *-------------------------------------------------------------------------------
36537   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
36539  *-------------------------------------------------------------------------------
36540  * Light-duty Vehicles for Personal Transport
36541  *-------------------------------------------------------------------------------
36542   
36544   
36545  *** newcode
36546  eqq_inv_red_ban_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36547      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
36548   
36549  ***
36550  *- Number of light duty vehicles
36551  eqnb_veh_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36552      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
36553   
36554  *- Yearly energy demand of vehicles
36555  eqq_en_veh_c_ssa(jveh,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36556      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
36557   
36558  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
36559  eqq_el_edv_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36560      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
36561   
36562  *- Investment cost for hybrid vehicles
36563  eqmcost_inv_hybrid_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
36564                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
36565   
36566  *- Investment cost for plug-in hybrid vehicles
36567  eqmcost_inv_plghybrid_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
36568                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
36569   
36570  *- Investment cost for electric drive vehicles
36571  eqmcost_inv_edv_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
36572                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
36573   
36574  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
36577  *-------------------------------------------------------------------------------
36578  * Road Freight Transport
36579  *-------------------------------------------------------------------------------
36581   
36582  *-  Number of freight vehicles
36583  eqnb_frtveh_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
36584                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
36585   
36586  *-  Yearly fuel consumption of freight vehicles
36587  eqq_en_frtveh_c_ssa(jfrt,t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36588                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
36589   
36590  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
36591  eqq_el_frtedv_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)))..
36592                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
36593   
36594  *-  Investment cost for hbd_stfr vehicle
36595  eqmcost_inv_hbd_stfr_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
36596                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
36597   
36598  *-  Investment cost for plug-in hbd_stfr vehicle
36599  eqmcost_inv_plghbd_stfr_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
36600                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
36601   
36602  *-  Investment cost for electric drive vehicle
36603  eqmcost_inv_edv_stfr_c_ssa(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
36604                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
36605   
36606  *-------------------------------------------------------------------------------
36608   
36609   
36610   
36611   
36612   
36613   
36614  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
36616  *-------------------------------------------------------------------------------
36617  * Traditional Biomass
36618  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
36619  *  - require post_process to be launch before
36620  *-------------------------------------------------------------------------------
36621   
36623   
36624  * Optional modules
36625   
36626  * Policy modules
36627   
36628  * Calibration
36631   
36632   
36633  model witch_c_ssa /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
36635  *-------------------------------------------------------------------------------
36636  * Call modules by order
36637  *-------------------------------------------------------------------------------
36641   
36642  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
36644  *-------------------------------------------------------------------------------
36645  * Algorithm
36646  *-------------------------------------------------------------------------------
36647   
36649   
36650  eqobj_c_ssa
36651   
36652  *-------------------------------------------------------------------------------
36654   
36655  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
36657  *-------------------------------------------------------------------------------
36658  * Time
36659  * - Temporal structure
36660  * - Fixed time periods
36661  * - States of the world
36662  *-------------------------------------------------------------------------------
36663   
36665   
36666  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
36668  *-------------------------------------------------------------------------------
36669  * Geographic dimension and mapping with countries
36670  *-------------------------------------------------------------------------------
36671   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
36674  *-------------------------------------------------------------------------------
36675  * Non-Cooperative Setup
36676  *
36677  * Each region is defined as an individual coalition.
36678  *
36679  *-------------------------------------------------------------------------------
36680   
36682   
36683  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
36685  *-------------------------------------------------------------------------------
36686  * Welfare
36687  *-------------------------------------------------------------------------------
36688   
36690   
36691  equtility_c_ssa
36692   
36693  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
36696  *-------------------------------------------------------------------------------
36697  * Economy
36698  * - Production and Consumption definition
36699  * - Top-level of the production function
36700  * Options:
36701  * --original_ssp=1 : original SSP population and GDP data
36702  *-------------------------------------------------------------------------------
36703   
36705   
36706  eqk_c_ssa
36707  eqq_cc_c_ssa
36708  eqq_fen_c_ssa
36709  eqq_y_c_ssa
36710   
36711  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
36714  *-------------------------------------------------------------------------------
36715  * Energy sector
36716  *-------------------------------------------------------------------------------
36717   
36719   
36720  eq_mkt_clearing_oil_c_ssa
36721  eqcost_pes_c_ssa
36722  eqcost_ses_c_ssa
36723  eqk_en_c_ssa
36724  eqq_ces_el_c_ssa
36725  eqq_ces_nelgas_c_ssa
36726  eqq_el2_c_ssa
36727  eqq_el_c_ssa
36728  eqq_elff_c_ssa
36729  eqq_en_c_ssa
36730  eqq_en_in_c_ssa
36731  eqq_en_mu_c_ssa
36732  eqq_en_tree_c_ssa
36733  eqq_nel_c_ssa
36734  eqq_nelog_c_ssa
36735  eqq_fuel_c_ssa
36736  eqq_elffren_c_ssa
36737   
36738  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
36741  *-------------------------------------------------------------------------------
36742  * Carbon Emissions
36743  * - Total CO2 emissions and CO2 Fossil fuel and Industry
36744  * - CO2 emission costs
36745  * - GHG permit market
36746  *-------------------------------------------------------------------------------
36747   
36749   
36750  eqq_emi_lim_c_ssa
36751  eqq_emi_tree_c_ssa
36752  eqq_emi_co2ffi_c_ssa
36753   
36754  eqcost_emi_co2_c_ssa
36755   
36756  eq_mkt_clearing_nip_c_ssa
36757   
36758  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
36761  *-------------------------------------------------------------------------------
36762  * Research & Development
36763  * Options:
36764  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
36765  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
36766  *-------------------------------------------------------------------------------
36767   
36769   
36770  eqk_rd_c_ssa
36771  eqspill_coop_c_ssa
36772  eqspill_lead_c_ssa
36773  eqspill_foll_c_ssa
36774  eqmcost_inv_back_c_ssa
36775  eqmcost_inv_back_lbd_c_ssa
36776   
36777  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
36780  *-------------------------------------------------------------------------------
36781  * Default Climate Policy Implementation
36782  *
36783  * Options:
36784  *    --policy={bau (default),ctax}
36785  *        Implement a climate policy setting
36786  *  [ --scen= ]
36787  *        Policy variant.
36788  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
36789  *          * XXX for a fixed percentage/yr (e.g. 5) growth
36790  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
36791  *  [ --ctax_year=2020 ]
36792  *        Starting year of the carbon tax
36793  *  [ --ctax_initial=30 ]
36794  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
36795  *
36796  *-------------------------------------------------------------------------------
36798   
36799  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
36801  *-------------------------------------------------------------------------------
36802  * Energy efficiency
36803  *-------------------------------------------------------------------------------
36804   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
36807  *-------------------------------------------------------------------------------
36808  * Hydro Power
36809  *-------------------------------------------------------------------------------
36810   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
36813  *-------------------------------------------------------------------------------
36814  * System Integration:
36815  * - Capacity constraint
36816  * - Flexibility constraint
36817  * - Grid Investment
36818  * - Capacity growth constraint
36819  *-------------------------------------------------------------------------------
36820   
36822   
36823  eqq_elintren_c_ssa
36824  eqflex_c_ssa
36825  eqk_en_grid_c_ssa
36826  eqk_en_grid_to_k_en_c_ssa
36827  eqfirm_capacity_c_ssa
36828  eqcap_growth_c_ssa
36829   
36830  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
36833  *-------------------------------------------------------------------------------
36834  * Nuclear power plants
36835  *-------------------------------------------------------------------------------
36836   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
36839  *-------------------------------------------------------------------------------
36840  * GHG module
36841  * - CH4 FFI + CH4 waste + CH4 open fires
36842  * - N2O FFI + N2O waste + N2O open fires
36843  *-------------------------------------------------------------------------------
36844   
36846   
36847  eqq_emi_waste_c_ssa
36848  eqq_emi_n2o_ffi_c_ssa
36849  eqq_emi_ch4_ffi_c_ssa
36850   
36851  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
36854  *-------------------------------------------------------------------------------
36855  * F-gases
36856  * - LLF
36857  * - SLF
36858  *-------------------------------------------------------------------------------
36859   
36861   
36862  eqq_emi_fgases_c_ssa
36863   
36864  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
36867  *-------------------------------------------------------------------------------
36868  * Landuse [simplified version of the land-use model]
36869  *-------------------------------------------------------------------------------
36870   
36872   
36873  eq_wbio_c_ssa
36874  eqcost_pes_wbio_c_ssa
36875   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
36878  *-------------------------------------------------------------------------------
36879  * Bioenergy power plant
36880  *-------------------------------------------------------------------------------
36881   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
36884  *-------------------------------------------------------------------------------
36885  * Traditional Biofuels
36886  * - Requires the precedence of mod_landuse
36887  *-------------------------------------------------------------------------------
36888   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
36891  *-------------------------------------------------------------------------------
36892  * Advanced biofuel
36893  * - Require the precedence of mod_landuse
36894  *-------------------------------------------------------------------------------
36895   
36897   
36898  eqq_en_lim_advbiofuel_c_ssa
36899  eqmcost_fuel_advbiofuel_c_ssa
36900   
36901  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
36904  *-------------------------------------------------------------------------------
36905  * Carbon Capture and Sequestration
36906  *-------------------------------------------------------------------------------
36907   
36909   
36910  eqq_emi_ccs_c_ssa
36911  eqcost_emi_sinks_c_ssa
36912  eq_stor_ccs_cum_c_ssa
36913  eq_emi_stor_ccs_c_ssa
36914  eq_emi_leak_ccs_c_ssa
36915   
36916  *-------------------------------------------------------------------------------
36918   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
36920  *-------------------------------------------------------------------------------
36921  * Coal for non-electric sectors
36922  * - Coke Plants
36923  * - Industrial and Commercial combined-heat-and-power (CHP)
36924  * - Others
36925  *-------------------------------------------------------------------------------
36926   
36928   
36929  eqcost_en_nelcoal_c_ssa
36930  eqq_ncoalabat_monotone_c_ssa
36931  eqq_en_nelcoalccs_max_c_ssa
36932   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
36935  *-------------------------------------------------------------------------------
36936  * Wind energy module
36937  * - onshore and offshore
36938  *-------------------------------------------------------------------------------
36939   
36941   
36942  eqq_en_mu_windon_c_ssa
36943  eqq_en_mu_windoff_c_ssa
36944  eqk_en_windon_c_ssa
36945  eqk_en_windoff_c_ssa
36946  eqq_en_windon_sum_c_ssa
36947  eqq_en_windoff_sum_c_ssa
36948  eqk_en_windon_sum_c_ssa
36949  eqk_en_windoff_sum_c_ssa
36950  eqi_en_windon_sum_c_ssa
36951  eqi_en_windoff_sum_c_ssa
36952   
36954   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
36956  *-------------------------------------------------------------------------------
36957  * Solar Powerplants (PV and CSP) to the electrical system
36958  *-------------------------------------------------------------------------------
36959   
36960  *-------------------------------------------------------------------------------
36962   
36963  eqq_en_mu_pv_c_ssa
36964  eqq_en_mu_csp_c_ssa
36965  eqk_en_pv_c_ssa
36966  eqk_en_csp_c_ssa
36967  eqq_en_pv_sum_c_ssa
36968  eqq_en_csp_sum_c_ssa
36969  eqk_en_pv_sum_c_ssa
36970  eqk_en_csp_sum_c_ssa
36971  eqi_en_pv_sum_c_ssa
36972  eqi_en_csp_sum_c_ssa
36973  eqk_en_solar_comp_c_ssa
36974   
36975  *-------------------------------------------------------------------------------
36977   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
36979  *-------------------------------------------------------------------------------
36980  * Technology development scenarios
36981  *-------------------------------------------------------------------------------
36982   
36984   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
36986  *-------------------------------------------------------------------------------
36987  * Oil Extraction
36988  * Options:
36989  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
36990  *-------------------------------------------------------------------------------
36991   
36993   
36994  eqoilcap_c_ssa
36995  eqoilprod_c_ssa
36996  eqq_out_oil_c_ssa
36997  eqcum_oil_c_ssa
36998  eqcost_oil_c_ssa
36999  eqi_oil_c_ssa
37000  eqi_out_oil_c_ssa
37001  eqq_emi_out_oil_c_ssa
37002   
37003  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
37006  *-------------------------------------------------------------------------------
37007  * Uranium Resources
37008  *-------------------------------------------------------------------------------
37009   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
37012  *-------------------------------------------------------------------------------
37013  * Gas Resources
37014  *-------------------------------------------------------------------------------
37015   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
37018  *-------------------------------------------------------------------------------
37019  * Coal Resources
37020  *-------------------------------------------------------------------------------
37021   
37023   
37024   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
37026  *-------------------------------------------------------------------------------
37027  * Climate
37028  *
37029  * Represents the climate
37030  * - based on the DICE model equations
37031  * - Radiative forcing for non CO2 ghgs
37032  * - parameters calibrated to reproduce MAGICC6.4 default response
37033  *
37034  *  Options:
37035  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
37036  * - $setglobal cooperate_on_climate {'YES','NO'}
37037  * - 'YES'(default): Countries within a coalition act in cooperation
37038  *   'NO': Countries within a coalition act individually
37039  *
37040  *-------------------------------------------------------------------------------
37041   
37043   
37045   
37046  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
37049  *-------------------------------------------------------------------------------
37050  * Long-run Damages from Climate Change
37051  * - Economic impacts
37052  * - Adaptation
37053  *-------------------------------------------------------------------------------
37054   
37056   
37058   
37059  *-------------------------------------------------------------------------------
37061   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
37063  *-------------------------------------------------------------------------------
37064  * Light-duty Vehicles for Personal Transport
37065  *-------------------------------------------------------------------------------
37066   
37068   
37069  eqnb_veh_c_ssa
37070  eqq_en_veh_c_ssa
37071  eqq_el_edv_c_ssa
37072  eqmcost_inv_hybrid_c_ssa
37073  eqmcost_inv_plghybrid_c_ssa
37074  eqmcost_inv_edv_c_ssa
37075  *** newcode
37076  eqq_inv_red_ban_c_ssa
37077  ***
37078  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
37081  *-------------------------------------------------------------------------------
37082  * Road Freight Transport
37083  *-------------------------------------------------------------------------------
37085   
37086  eqnb_frtveh_c_ssa
37087  eqq_en_frtveh_c_ssa
37088  eqq_el_frtedv_c_ssa
37089  eqmcost_inv_hbd_stfr_c_ssa
37090  eqmcost_inv_plghbd_stfr_c_ssa
37091  eqmcost_inv_edv_stfr_c_ssa
37092   
37093  *-------------------------------------------------------------------------------
37095   
37096   
37097   
37098   
37099   
37100   
37101  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
37103  *-------------------------------------------------------------------------------
37104  * Traditional Biomass
37105  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
37106  *  - require post_process to be launch before
37107  *-------------------------------------------------------------------------------
37108   
37110   
37111  * Optional modules
37112   
37113  * Policy modules
37114   
37115  * Calibration
37118  /;
37119   
37120  witch_c_ssa.optfile=1;   # the option file solvername.opt is to be used
37121  witch_c_ssa.holdfixed=1; # treat fixed values as constant
37122  witch_c_ssa.scaleopt=1;  # Use scaling for better gradients estimation
37123  witch_c_ssa.solvelink=3; # Use parallel or sequential solving
37124   
37129   
37130  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
37132  *-------------------------------------------------------------------------------
37133  * Call modules by order
37134  *-------------------------------------------------------------------------------
37138   
37139  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
37141  *-------------------------------------------------------------------------------
37142  * Algorithm
37143  *-------------------------------------------------------------------------------
37144   
37146   
37147  eqobj_c_te
37148   
37149  *-------------------------------------------------------------------------------
37151   
37152  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
37154  *-------------------------------------------------------------------------------
37155  * Time
37156  * - Temporal structure
37157  * - Fixed time periods
37158  * - States of the world
37159  *-------------------------------------------------------------------------------
37160   
37162   
37163  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
37165  *-------------------------------------------------------------------------------
37166  * Geographic dimension and mapping with countries
37167  *-------------------------------------------------------------------------------
37168   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
37171  *-------------------------------------------------------------------------------
37172  * Non-Cooperative Setup
37173  *
37174  * Each region is defined as an individual coalition.
37175  *
37176  *-------------------------------------------------------------------------------
37177   
37179   
37180  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
37182  *-------------------------------------------------------------------------------
37183  * Welfare
37184  *-------------------------------------------------------------------------------
37185   
37187   
37188  equtility_c_te
37189   
37190  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
37193  *-------------------------------------------------------------------------------
37194  * Economy
37195  * - Production and Consumption definition
37196  * - Top-level of the production function
37197  * Options:
37198  * --original_ssp=1 : original SSP population and GDP data
37199  *-------------------------------------------------------------------------------
37200   
37202   
37203  eqk_c_te
37204  eqq_cc_c_te
37205  eqq_fen_c_te
37206  eqq_y_c_te
37207   
37208  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
37211  *-------------------------------------------------------------------------------
37212  * Energy sector
37213  *-------------------------------------------------------------------------------
37214   
37216   
37217  eq_mkt_clearing_oil_c_te
37218  eqcost_pes_c_te
37219  eqcost_ses_c_te
37220  eqk_en_c_te
37221  eqq_ces_el_c_te
37222  eqq_ces_nelgas_c_te
37223  eqq_el2_c_te
37224  eqq_el_c_te
37225  eqq_elff_c_te
37226  eqq_en_c_te
37227  eqq_en_in_c_te
37228  eqq_en_mu_c_te
37229  eqq_en_tree_c_te
37230  eqq_nel_c_te
37231  eqq_nelog_c_te
37232  eqq_fuel_c_te
37233  eqq_elffren_c_te
37234   
37235  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
37238  *-------------------------------------------------------------------------------
37239  * Carbon Emissions
37240  * - Total CO2 emissions and CO2 Fossil fuel and Industry
37241  * - CO2 emission costs
37242  * - GHG permit market
37243  *-------------------------------------------------------------------------------
37244   
37246   
37247  eqq_emi_lim_c_te
37248  eqq_emi_tree_c_te
37249  eqq_emi_co2ffi_c_te
37250   
37251  eqcost_emi_co2_c_te
37252   
37253  eq_mkt_clearing_nip_c_te
37254   
37255  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
37258  *-------------------------------------------------------------------------------
37259  * Research & Development
37260  * Options:
37261  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
37262  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
37263  *-------------------------------------------------------------------------------
37264   
37266   
37267  eqk_rd_c_te
37268  eqspill_coop_c_te
37269  eqspill_lead_c_te
37270  eqspill_foll_c_te
37271  eqmcost_inv_back_c_te
37272  eqmcost_inv_back_lbd_c_te
37273   
37274  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
37277  *-------------------------------------------------------------------------------
37278  * Default Climate Policy Implementation
37279  *
37280  * Options:
37281  *    --policy={bau (default),ctax}
37282  *        Implement a climate policy setting
37283  *  [ --scen= ]
37284  *        Policy variant.
37285  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
37286  *          * XXX for a fixed percentage/yr (e.g. 5) growth
37287  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
37288  *  [ --ctax_year=2020 ]
37289  *        Starting year of the carbon tax
37290  *  [ --ctax_initial=30 ]
37291  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
37292  *
37293  *-------------------------------------------------------------------------------
37295   
37296  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
37298  *-------------------------------------------------------------------------------
37299  * Energy efficiency
37300  *-------------------------------------------------------------------------------
37301   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
37304  *-------------------------------------------------------------------------------
37305  * Hydro Power
37306  *-------------------------------------------------------------------------------
37307   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
37310  *-------------------------------------------------------------------------------
37311  * System Integration:
37312  * - Capacity constraint
37313  * - Flexibility constraint
37314  * - Grid Investment
37315  * - Capacity growth constraint
37316  *-------------------------------------------------------------------------------
37317   
37319   
37320  eqq_elintren_c_te
37321  eqflex_c_te
37322  eqk_en_grid_c_te
37323  eqk_en_grid_to_k_en_c_te
37324  eqfirm_capacity_c_te
37325  eqcap_growth_c_te
37326   
37327  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
37330  *-------------------------------------------------------------------------------
37331  * Nuclear power plants
37332  *-------------------------------------------------------------------------------
37333   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
37336  *-------------------------------------------------------------------------------
37337  * GHG module
37338  * - CH4 FFI + CH4 waste + CH4 open fires
37339  * - N2O FFI + N2O waste + N2O open fires
37340  *-------------------------------------------------------------------------------
37341   
37343   
37344  eqq_emi_waste_c_te
37345  eqq_emi_n2o_ffi_c_te
37346  eqq_emi_ch4_ffi_c_te
37347   
37348  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
37351  *-------------------------------------------------------------------------------
37352  * F-gases
37353  * - LLF
37354  * - SLF
37355  *-------------------------------------------------------------------------------
37356   
37358   
37359  eqq_emi_fgases_c_te
37360   
37361  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
37364  *-------------------------------------------------------------------------------
37365  * Landuse [simplified version of the land-use model]
37366  *-------------------------------------------------------------------------------
37367   
37369   
37370  eq_wbio_c_te
37371  eqcost_pes_wbio_c_te
37372   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
37375  *-------------------------------------------------------------------------------
37376  * Bioenergy power plant
37377  *-------------------------------------------------------------------------------
37378   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
37381  *-------------------------------------------------------------------------------
37382  * Traditional Biofuels
37383  * - Requires the precedence of mod_landuse
37384  *-------------------------------------------------------------------------------
37385   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
37388  *-------------------------------------------------------------------------------
37389  * Advanced biofuel
37390  * - Require the precedence of mod_landuse
37391  *-------------------------------------------------------------------------------
37392   
37394   
37395  eqq_en_lim_advbiofuel_c_te
37396  eqmcost_fuel_advbiofuel_c_te
37397   
37398  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
37401  *-------------------------------------------------------------------------------
37402  * Carbon Capture and Sequestration
37403  *-------------------------------------------------------------------------------
37404   
37406   
37407  eqq_emi_ccs_c_te
37408  eqcost_emi_sinks_c_te
37409  eq_stor_ccs_cum_c_te
37410  eq_emi_stor_ccs_c_te
37411  eq_emi_leak_ccs_c_te
37412   
37413  *-------------------------------------------------------------------------------
37415   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
37417  *-------------------------------------------------------------------------------
37418  * Coal for non-electric sectors
37419  * - Coke Plants
37420  * - Industrial and Commercial combined-heat-and-power (CHP)
37421  * - Others
37422  *-------------------------------------------------------------------------------
37423   
37425   
37426  eqcost_en_nelcoal_c_te
37427  eqq_ncoalabat_monotone_c_te
37428  eqq_en_nelcoalccs_max_c_te
37429   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
37432  *-------------------------------------------------------------------------------
37433  * Wind energy module
37434  * - onshore and offshore
37435  *-------------------------------------------------------------------------------
37436   
37438   
37439  eqq_en_mu_windon_c_te
37440  eqq_en_mu_windoff_c_te
37441  eqk_en_windon_c_te
37442  eqk_en_windoff_c_te
37443  eqq_en_windon_sum_c_te
37444  eqq_en_windoff_sum_c_te
37445  eqk_en_windon_sum_c_te
37446  eqk_en_windoff_sum_c_te
37447  eqi_en_windon_sum_c_te
37448  eqi_en_windoff_sum_c_te
37449   
37451   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
37453  *-------------------------------------------------------------------------------
37454  * Solar Powerplants (PV and CSP) to the electrical system
37455  *-------------------------------------------------------------------------------
37456   
37457  *-------------------------------------------------------------------------------
37459   
37460  eqq_en_mu_pv_c_te
37461  eqq_en_mu_csp_c_te
37462  eqk_en_pv_c_te
37463  eqk_en_csp_c_te
37464  eqq_en_pv_sum_c_te
37465  eqq_en_csp_sum_c_te
37466  eqk_en_pv_sum_c_te
37467  eqk_en_csp_sum_c_te
37468  eqi_en_pv_sum_c_te
37469  eqi_en_csp_sum_c_te
37470  eqk_en_solar_comp_c_te
37471   
37472  *-------------------------------------------------------------------------------
37474   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
37476  *-------------------------------------------------------------------------------
37477  * Technology development scenarios
37478  *-------------------------------------------------------------------------------
37479   
37481   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
37483  *-------------------------------------------------------------------------------
37484  * Oil Extraction
37485  * Options:
37486  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
37487  *-------------------------------------------------------------------------------
37488   
37490   
37491  eqoilcap_c_te
37492  eqoilprod_c_te
37493  eqq_out_oil_c_te
37494  eqcum_oil_c_te
37495  eqcost_oil_c_te
37496  eqi_oil_c_te
37497  eqi_out_oil_c_te
37498  eqq_emi_out_oil_c_te
37499   
37500  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
37503  *-------------------------------------------------------------------------------
37504  * Uranium Resources
37505  *-------------------------------------------------------------------------------
37506   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
37509  *-------------------------------------------------------------------------------
37510  * Gas Resources
37511  *-------------------------------------------------------------------------------
37512   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
37515  *-------------------------------------------------------------------------------
37516  * Coal Resources
37517  *-------------------------------------------------------------------------------
37518   
37520   
37521   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
37523  *-------------------------------------------------------------------------------
37524  * Climate
37525  *
37526  * Represents the climate
37527  * - based on the DICE model equations
37528  * - Radiative forcing for non CO2 ghgs
37529  * - parameters calibrated to reproduce MAGICC6.4 default response
37530  *
37531  *  Options:
37532  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
37533  * - $setglobal cooperate_on_climate {'YES','NO'}
37534  * - 'YES'(default): Countries within a coalition act in cooperation
37535  *   'NO': Countries within a coalition act individually
37536  *
37537  *-------------------------------------------------------------------------------
37538   
37540   
37542   
37543  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
37546  *-------------------------------------------------------------------------------
37547  * Long-run Damages from Climate Change
37548  * - Economic impacts
37549  * - Adaptation
37550  *-------------------------------------------------------------------------------
37551   
37553   
37555   
37556  *-------------------------------------------------------------------------------
37558   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
37560  *-------------------------------------------------------------------------------
37561  * Light-duty Vehicles for Personal Transport
37562  *-------------------------------------------------------------------------------
37563   
37565   
37566  eqnb_veh_c_te
37567  eqq_en_veh_c_te
37568  eqq_el_edv_c_te
37569  eqmcost_inv_hybrid_c_te
37570  eqmcost_inv_plghybrid_c_te
37571  eqmcost_inv_edv_c_te
37572  *** newcode
37573  eqq_inv_red_ban_c_te
37574  ***
37575  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
37578  *-------------------------------------------------------------------------------
37579  * Road Freight Transport
37580  *-------------------------------------------------------------------------------
37582   
37583  eqnb_frtveh_c_te
37584  eqq_en_frtveh_c_te
37585  eqq_el_frtedv_c_te
37586  eqmcost_inv_hbd_stfr_c_te
37587  eqmcost_inv_plghbd_stfr_c_te
37588  eqmcost_inv_edv_stfr_c_te
37589   
37590  *-------------------------------------------------------------------------------
37592   
37593   
37594   
37595   
37596   
37597   
37598  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
37600  *-------------------------------------------------------------------------------
37601  * Traditional Biomass
37602  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
37603  *  - require post_process to be launch before
37604  *-------------------------------------------------------------------------------
37605   
37607   
37608  * Optional modules
37609   
37610  * Policy modules
37611   
37612  * Calibration
37615  ;
37616   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
37618  *-------------------------------------------------------------------------------
37619  * Call modules by order
37620  *-------------------------------------------------------------------------------
37624   
37625  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
37627  *-------------------------------------------------------------------------------
37628  * Algorithm
37629  *-------------------------------------------------------------------------------
37630   
37632   
37634  * Add the component of the (maximized) objective function as required by the ADMM algorithm
37635  eqobj_c_te..
37636      OBJADMM =e= UTILITY -
37637          sum(t, rho_admm('oil',t) / 2 *
37638              sum(n$(map_clt_n('c_te',n) and trading_t('oil',t,n)),
37639                  power(
37640                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
37641                      x_admm('oil',t,n) +
37642                      xavg_admm('oil',t) +
37643                      u_admm('oil', t)
37644                  ,2)
37645              )) -
37646          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
37647              sum(n$(map_clt_n('c_te',n) and trading_t(c_mkt,t,n)),
37648                  power(
37649                      Q_EMI(c_mkt,t,n) -
37650                      x_admm(c_mkt,t,n) +
37651                      xavg_admm(c_mkt,t) +
37652                      u_admm(c_mkt,t)
37653                  ,2)
37654              ))
37655      ;
37657   
37658  *-------------------------------------------------------------------------------
37660   
37661  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
37663  *-------------------------------------------------------------------------------
37664  * Time
37665  * - Temporal structure
37666  * - Fixed time periods
37667  * - States of the world
37668  *-------------------------------------------------------------------------------
37669   
37671   
37672  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
37674  *-------------------------------------------------------------------------------
37675  * Geographic dimension and mapping with countries
37676  *-------------------------------------------------------------------------------
37677   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
37680  *-------------------------------------------------------------------------------
37681  * Non-Cooperative Setup
37682  *
37683  * Each region is defined as an individual coalition.
37684  *
37685  *-------------------------------------------------------------------------------
37686   
37688   
37689  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
37691  *-------------------------------------------------------------------------------
37692  * Welfare
37693  *-------------------------------------------------------------------------------
37694   
37696   
37697  * Objective function - Welfare to be maximized
37698  equtility_c_te..
37699      UTILITY =e=
37700   
37701  * Negishi SWF
37703   
37704  * Welfare functions based on CEBGE
37707                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
37708                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
37709                      ((sum(n$map_clt_n('c_te',n),
37710                        (l(t,n) / sum(nn$map_clt_n('c_te',nn), l(t,nn))) *
37711                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
37712                       )**(1 / (1 - gamma))
37713                      )**(1 - eta) ) +
37714                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
37715                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
37716                      ((sum(n$map_clt_n('c_te',n),
37717                        (l(t,n) / sum(nn$map_clt_n('c_te',nn), l(t,nn))) *
37718                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
37719                       )**(1 / (1 - gamma))
37720                      )**(1 - eta) )
37721                  )**(1/(1 - eta)) * 1e6
37724   
37725   
37726  ;
37727   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
37730  *-------------------------------------------------------------------------------
37731  * Economy
37732  * - Production and Consumption definition
37733  * - Top-level of the production function
37734  * Options:
37735  * --original_ssp=1 : original SSP population and GDP data
37736  *-------------------------------------------------------------------------------
37737   
37739   
37740  * Production
37741  eqq_y_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37742   
37743      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
37744                     ## Climate feedback on economy
37746                     ## Net cost of Primary and Secondary Energy Sources
37747                     - sum(fuel, COST_FUEL(fuel,t,n))
37748                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
37749                     - sum(cce, COST_EMI(cce,t,n))
37750                     ## Carbon tax
37751                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
37752                     ## Additionnal costs on gross product
37753                     - sum(ccy, COST_Y(ccy,t,n))
37754  ;
37755   
37756  * Consumption
37757  eqq_cc_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
37758      Q('cc',t,n) =e= Q('y',t,n)
37759                      ## Investments in goods g (final good, adaptation)
37760                      -sum(g, I(g,t,n))
37761                      ## Investments in r&d
37762                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
37763                      ## Investments in energy technlogies
37764                      -sum(jinv, I_EN(jinv,t,n))
37765                       ## Investments in grid infrastructures
37766                      - I_EN_GRID(t,n)
37767                      ## Investments in extraction sector
37768                      -sum(extract(f), I_OUT(f,t,n))
37769                      ## O&M for energy technlogies
37770                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
37771                      ## O&M for extraction
37772                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
37773                      ## Energy technology penalty costs
37774                      -sum(jpenalty(j), COST_EN(j,t,n))
37775  ;
37776   
37777  * Capital accumulation
37778  eqk_c_te(g,t,tp1,n)$(map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
37779      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
37780   
37781  * Energy services
37782  eqq_fen_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37783      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
37784   
37785  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
37788  *-------------------------------------------------------------------------------
37789  * Energy sector
37790  *-------------------------------------------------------------------------------
37791   
37793   
37794  *-------------------------------------------------------------------------------
37795  * Production - Energy sector
37796  *-------------------------------------------------------------------------------
37797   
37798  eqq_en_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37799      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
37800   
37801  *-------------------------------------------------------------------------------
37802  * Production - Electrical sector
37803  *-------------------------------------------------------------------------------
37804   
37805  eqq_el_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37806      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
37807   
37808  eqq_el2_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37809      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
37810   
37811  eqq_elffren_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37812      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
37813  eqq_elff_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37814      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
37815   
37816  eqq_ces_el_c_te(ices_el,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
37817      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
37818  ;
37819   
37820  *-------------------------------------------------------------------------------
37821  * Production - Non-electrical sector
37822  *-------------------------------------------------------------------------------
37823   
37824  eqq_nel_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37825      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
37826   
37827  eqq_nelog_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37828      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
37829  ;
37830  eqq_ces_nelgas_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37831      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
37832   
37833  *-------------------------------------------------------------------------------
37834  * PES and fuels
37835  *-------------------------------------------------------------------------------
37836   
37837  eqq_fuel_c_te(fuel,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
37838      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
37839   
37840  *-------------------------------------------------------------------------------
37841  * Cost
37842  *-------------------------------------------------------------------------------
37843   
37844  * Net cost of Primary Energy Supplies
37845  eqcost_pes_c_te(f,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
37846      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
37847                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
37848   
37849  * Net cost of Secondary Energy Supplies
37850  eqcost_ses_c_te(s,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37851      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
37852   
37853   
37854  *-------------------------------------------------------------------------------
37855  * Market balances
37856  *-------------------------------------------------------------------------------
37857   
37858  eq_mkt_clearing_oil_c_te(t,'c_te')$(internal('oil'))..
37859      sum( n$(map_clt_n('c_te',n) and trading_t('oil',t,n)),
37860          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
37861      ) =e= 0;
37862   
37863  *-------------------------------------------------------------------------------
37864  * New capital in the energy sector
37865  *-------------------------------------------------------------------------------
37866   
37867  * Electrical generation plants (new)
37868  eqk_en_c_te(jinv,t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
37869      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
37870                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
37871   
37872  *-------------------------------------------------------------------------------
37873  * ENERGY
37874  *-------------------------------------------------------------------------------
37875   
37876  * Capacity limits in the electrical sector
37877  eqq_en_mu_c_te(jel,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
37878      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
37879   
37880  * Efficiency of energy technology sector
37881  eqq_en_in_c_te(jfed,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
37882      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
37883                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
37884   
37885  * Energy generation "tree"
37886  eqq_en_tree_c_te(j,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
37887      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
37888   
37889  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
37892  *-------------------------------------------------------------------------------
37893  * Carbon Emissions
37894  * - Total CO2 emissions and CO2 Fossil fuel and Industry
37895  * - CO2 emission costs
37896  * - GHG permit market
37897  *-------------------------------------------------------------------------------
37898   
37900   
37901  * GHG emission cap
37902  eqq_emi_lim_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
37903      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
37904                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
37905   
37906  * Compute total and sectoral emissions
37907  eqq_emi_tree_c_te(t,n,e)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
37908      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
37909   
37910  * Industrial CO2 emissions
37911  eqq_emi_co2ffi_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37912      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
37913                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
37914                              # Emissions from biomass
37915                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
37916                              # Emissions from fuel extraction
37917                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
37918                              # Captured emissions
37919                              sum(sink, Q_EMI(sink,t,n));
37920   
37921  * CO2 emission costs
37922  eqcost_emi_co2_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
37923      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
37924   
37925  * Emission permit market clearing for internal market
37926  eq_mkt_clearing_nip_c_te(c_mkt,t,'c_te')$(internal(c_mkt))..
37927      sum(n$(map_clt_n('c_te',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
37928   
37929  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
37932  *-------------------------------------------------------------------------------
37933  * Research & Development
37934  * Options:
37935  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
37936  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
37937  *-------------------------------------------------------------------------------
37938   
37940   
37941  * Knowledge stock accumulation
37942  eqk_rd_c_te(rd,t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
37943                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
37944                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
37945                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
37946                                        SPILL(rd,t,n)**rd_coef(rd,'d');
37947   
37948  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
37949  eqspill_coop_c_te(rd,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_te'))..
37950          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
37951                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_te',nn)), K_RD(rd,t,nn)) +
37952                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_te',nn))), K_RD.l(rd,t,nn))
37953                            ) *
37954                            (
37955                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_te',nn)), K_RD(rd,t,nn)) +
37956                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_te',nn))), K_RD.l(rd,t,nn))
37957                              ) - K_RD(rd,t,n)
37958                            );
37959   
37960  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
37961  eqspill_lead_c_te(rd,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_te')) and leadrd(rd,n))..
37962                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
37963   
37964  * No-cooperation : a follower sees is negative effect on the quantity he can grab
37965  eqspill_foll_c_te(rd,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_te')) and (not leadrd(rd,n)))..
37966                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
37967   
37968  *- Only LbR (without learning by doing)
37969  eqmcost_inv_back_c_te(jrd,t,tt,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
37970                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
37971                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
37972   
37973  *- LbR together with learning by doing ==> Two-factor learning curve
37974  eqmcost_inv_back_lbd_c_te(jrd,t,tt,tfirst,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
37975                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
37976                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
37977                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
37978   
37979  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
37982  *-------------------------------------------------------------------------------
37983  * Default Climate Policy Implementation
37984  *
37985  * Options:
37986  *    --policy={bau (default),ctax}
37987  *        Implement a climate policy setting
37988  *  [ --scen= ]
37989  *        Policy variant.
37990  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
37991  *          * XXX for a fixed percentage/yr (e.g. 5) growth
37992  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
37993  *  [ --ctax_year=2020 ]
37994  *        Starting year of the carbon tax
37995  *  [ --ctax_initial=30 ]
37996  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
37997  *
37998  *-------------------------------------------------------------------------------
38000   
38001  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
38003  *-------------------------------------------------------------------------------
38004  * Energy efficiency
38005  *-------------------------------------------------------------------------------
38006   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
38009  *-------------------------------------------------------------------------------
38010  * Hydro Power
38011  *-------------------------------------------------------------------------------
38012   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
38015  *-------------------------------------------------------------------------------
38016  * System Integration:
38017  * - Capacity constraint
38018  * - Flexibility constraint
38019  * - Grid Investment
38020  * - Capacity growth constraint
38021  *-------------------------------------------------------------------------------
38022   
38024   
38025   
38026  * Renewable CES
38027   
38028  * Definition of the renewable CES
38029  eqq_elintren_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38030      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
38031   
38032  * Capacity constraint
38033   
38035  eqfirm_capacity_c_te(t,n)$(map_clt_n('c_te',n) and (not tfix(t)) and year(t) gt 2005)..
38036                   sum(jel_firm, K_EN(jel_firm,t,n))
38037                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
38038                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
38039                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
38040                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
38041                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
38042                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
38043                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
38044                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
38045                                       ) / yearly_hours
38046  ;
38048   
38049  * Flexibility constraint
38050  eqflex_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38051          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
38052                             ( Q_EN('el',t,n) -
38053                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
38054                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
38055                             ) * flex_coeff('load')
38056  ;
38057   
38058  * Grid
38059   
38060  ** Grid depreciation and investments
38061  eqk_en_grid_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
38062                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
38063                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
38064   
38065  ** Grid adjustment to power capacity
38066  eqk_en_grid_to_k_en_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38067                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
38068                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
38069                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
38070                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
38071                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
38072                                     ) / grid_cost +
38073                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
38074                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
38075                                      K_EN('elcsp',t,n);
38076  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
38077   
38078  * Capacity growth constraint
38079  eqcap_growth_c_te(jinv,t,tp1,tp2,n)$((map_clt_n('c_te',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
38080                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
38081                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
38082   
38083  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
38086  *-------------------------------------------------------------------------------
38087  * Nuclear power plants
38088  *-------------------------------------------------------------------------------
38089   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
38092  *-------------------------------------------------------------------------------
38093  * GHG module
38094  * - CH4 FFI + CH4 waste + CH4 open fires
38095  * - N2O FFI + N2O waste + N2O open fires
38096  *-------------------------------------------------------------------------------
38097   
38099   
38100  * CH4, N2O waste emissions
38101  eqq_emi_waste_c_te(waste,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
38102                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
38103   
38104  * n2o FFI
38105  eqq_emi_n2o_ffi_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
38106    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
38107                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
38108                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
38109                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
38110                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
38111                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
38112                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
38113                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
38114                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
38115                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
38116                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
38117                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
38118                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
38119                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
38120                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
38121                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
38122                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
38123                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
38124                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
38125                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
38126                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
38127                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
38128                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
38129                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
38130                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
38131                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
38132                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
38133                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
38134                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
38135                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
38136                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
38137   
38138  * ch4 FFI
38139  eqq_emi_ch4_ffi_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
38140    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
38143  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
38144  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
38145                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
38146                             smax(tt$(year(tt) eq 2015),
38147                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
38150  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
38151  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
38152                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
38153   
38154  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
38157  *-------------------------------------------------------------------------------
38158  * F-gases
38159  * - LLF
38160  * - SLF
38161  *-------------------------------------------------------------------------------
38162   
38164   
38165  * F-gases emissions
38166  eqq_emi_fgases_c_te(fgases,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
38167                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
38168   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
38171  *-------------------------------------------------------------------------------
38172  * Landuse [simplified version of the land-use model]
38173  *-------------------------------------------------------------------------------
38174   
38176   
38177  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
38178  eq_wbio_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38179      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
38180   
38182  * Cost of all woody biomass produced for advanced biofuels and woody biomass
38183  eqcost_pes_wbio_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38184      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
38186   
38187  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
38190  *-------------------------------------------------------------------------------
38191  * Bioenergy power plant
38192  *-------------------------------------------------------------------------------
38193   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
38196  *-------------------------------------------------------------------------------
38197  * Traditional Biofuels
38198  * - Requires the precedence of mod_landuse
38199  *-------------------------------------------------------------------------------
38200   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
38203  *-------------------------------------------------------------------------------
38204  * Advanced biofuel
38205  * - Require the precedence of mod_landuse
38206  *-------------------------------------------------------------------------------
38207   
38209   
38210  * Limitations for nel backstops
38211  eqq_en_lim_advbiofuel_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
38212               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
38213               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
38214   
38215  * Peculiarity of advbiofuel
38216  eqmcost_fuel_advbiofuel_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38217                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
38218   
38219  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
38222  *-------------------------------------------------------------------------------
38223  * Carbon Capture and Sequestration
38224  *-------------------------------------------------------------------------------
38225   
38227   
38228  eqq_emi_ccs_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38229                  Q_EMI('ccs_plant',t,n) =e=
38230                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
38231                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
38232  ;
38233   
38234  eqcost_emi_sinks_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38235                  COST_EMI('ccs_plant',t,n) =e=
38236                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
38237                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
38238  ;
38239   
38240  eq_stor_ccs_cum_c_te(ccs_stor,tp1,t,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
38241                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
38242  ;
38243   
38244  eq_emi_stor_ccs_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38245                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
38246  ;
38247   
38248  eq_emi_leak_ccs_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38249                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
38250   
38251  *-------------------------------------------------------------------------------
38253   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
38255  *-------------------------------------------------------------------------------
38256  * Coal for non-electric sectors
38257  * - Coke Plants
38258  * - Industrial and Commercial combined-heat-and-power (CHP)
38259  * - Others
38260  *-------------------------------------------------------------------------------
38261   
38263   
38264  eqcost_en_nelcoal_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38265           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
38266                                          nelcoal_max_abat(t,n) *
38267                                          (nelcoal_cmac(n,'a') *
38268                                            Q_EN('nelcoalabat',t,n) /
38269                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
38270                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
38271                                              (exp(nelcoal_cmac(n,'c') *
38272                                                (Q_EN('nelcoalabat',t,n)/
38273                                                  (nelcoal_max_abat(t,n) *
38274                                                      nelcoal_baseline(t,n))
38275                                                  ) - 1 )
38276                                              )
38277                                          );
38278   
38279  eqq_ncoalabat_monotone_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
38280          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
38281   
38282  * ensure Q_EN is lower than K_EN for CCS as not in jel
38283  eqq_en_nelcoalccs_max_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38284          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
38285   
38286  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
38289  *-------------------------------------------------------------------------------
38290  * Wind energy module
38291  * - onshore and offshore
38292  *-------------------------------------------------------------------------------
38293   
38295   
38296  * Capacity limits in the wind onshore electrical sector
38297  eqq_en_mu_windon_c_te(wind_dist,wind_class,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
38298      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
38299   
38300  * Capacity limits in the wind offshore electrical sector
38301  eqq_en_mu_windoff_c_te(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
38302      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
38303   
38304  * Wind onshore electrical generation plants (new)
38305  eqk_en_windon_c_te(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
38306      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
38307                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
38308   
38309  * Wind offshore electrical generation plants (new)
38310  eqk_en_windoff_c_te(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
38311      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
38312                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
38313   
38314  * Total onshore wind energy production
38315  eqq_en_windon_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38316                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
38317   
38318  * Total offshore wind energy production
38319  eqq_en_windoff_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38320                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
38321   
38322  * Total onshore wind capacity
38323  eqk_en_windon_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38324                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
38325   
38326  * Total offshore wind capacity
38327  eqk_en_windoff_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38328                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
38329   
38330  * Total onshore wind investment
38331  eqi_en_windon_sum_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
38332                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
38333   
38334  * Total offshore wind investment
38335  eqi_en_windoff_sum_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
38336                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
38337   
38338  *-------------------------------------------------------------------------------
38340   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
38342  *-------------------------------------------------------------------------------
38343  * Solar Powerplants (PV and CSP) to the electrical system
38344  *-------------------------------------------------------------------------------
38345   
38346  *-------------------------------------------------------------------------------
38348   
38349   
38350  * Capacity limits in the pv electrical sector
38351  eqq_en_mu_pv_c_te(solar_dist,solar_class,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
38352                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
38353   
38354  * Capacity limits in the csp electrical sector
38355  eqq_en_mu_csp_c_te(solar_dist,solar_class,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
38356                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
38357   
38358  * PV electrical generation plants (new)
38359  eqk_en_pv_c_te(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
38360                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
38361                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
38362   
38363  * CSP electrical generation plants (new)
38364  eqk_en_csp_c_te(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
38365                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
38366                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
38367   
38368  * Total PV energy production
38369  eqq_en_pv_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38370                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
38371   
38372  * Total CSP energy production
38373  eqq_en_csp_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38374                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
38375   
38376  * Total PV capacity
38377  eqk_en_pv_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38378                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
38379   
38380  * Total CSP capacity
38381  eqk_en_csp_sum_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38382                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
38383   
38384  * Total PV investment
38385  eqi_en_pv_sum_c_te(t,tp1,n)$(map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
38386                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
38387   
38388  * Total CSP investment
38389  eqi_en_csp_sum_c_te(t,tp1,n)$(map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
38390                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
38391   
38392  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
38393  eqk_en_solar_comp_c_te(t,n,solar_dist)$(map_clt_n('c_te',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
38394                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
38395                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
38396   
38397   
38398   
38399  *-------------------------------------------------------------------------------
38401   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
38403  *-------------------------------------------------------------------------------
38404  * Technology development scenarios
38405  *-------------------------------------------------------------------------------
38406   
38408   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
38410  *-------------------------------------------------------------------------------
38411  * Oil Extraction
38412  * Options:
38413  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
38414  *-------------------------------------------------------------------------------
38415   
38417   
38418  * Capacity
38419  eqoilcap_c_te(t,tp1,n,oilg)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
38420      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
38421   
38422  * Production
38423  eqoilprod_c_te(t,tp1,n,oilg)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
38424      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
38425   
38426  eqq_out_oil_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38427      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
38428   
38429  * Cumulative production
38430  eqcum_oil_c_te(t,tp1,n,oilg)$((map_clt_n('c_te',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
38431      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
38432   
38433  * Cost
38434  eqcost_oil_c_te(t,tp1,n,oilg)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
38435      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
38436                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
38437                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
38438   
38439  * Investments
38440  eqi_oil_c_te(t,tp1,n,oilg)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
38441      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
38442   
38443  * Total investment
38444  eqi_out_oil_c_te(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
38445      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
38446   
38447  * Emissions
38448  eqq_emi_out_oil_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38449      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
38450   
38451  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
38454  *-------------------------------------------------------------------------------
38455  * Uranium Resources
38456  *-------------------------------------------------------------------------------
38457   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
38460  *-------------------------------------------------------------------------------
38461  * Gas Resources
38462  *-------------------------------------------------------------------------------
38463   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
38466  *-------------------------------------------------------------------------------
38467  * Coal Resources
38468  *-------------------------------------------------------------------------------
38469   
38471   
38472   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
38474  *-------------------------------------------------------------------------------
38475  * Climate
38476  *
38477  * Represents the climate
38478  * - based on the DICE model equations
38479  * - Radiative forcing for non CO2 ghgs
38480  * - parameters calibrated to reproduce MAGICC6.4 default response
38481  *
38482  *  Options:
38483  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
38484  * - $setglobal cooperate_on_climate {'YES','NO'}
38485  * - 'YES'(default): Countries within a coalition act in cooperation
38486  *   'NO': Countries within a coalition act individually
38487  *
38488  *-------------------------------------------------------------------------------
38489   
38491   
38493   
38494  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
38497  *-------------------------------------------------------------------------------
38498  * Long-run Damages from Climate Change
38499  * - Economic impacts
38500  * - Adaptation
38501  *-------------------------------------------------------------------------------
38502   
38504   
38506   
38507  *-------------------------------------------------------------------------------
38509   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
38511  *-------------------------------------------------------------------------------
38512  * Light-duty Vehicles for Personal Transport
38513  *-------------------------------------------------------------------------------
38514   
38516   
38517  *** newcode
38518  eqq_inv_red_ban_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38519      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
38520   
38521  ***
38522  *- Number of light duty vehicles
38523  eqnb_veh_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38524      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
38525   
38526  *- Yearly energy demand of vehicles
38527  eqq_en_veh_c_te(jveh,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38528      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
38529   
38530  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
38531  eqq_el_edv_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38532      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
38533   
38534  *- Investment cost for hybrid vehicles
38535  eqmcost_inv_hybrid_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
38536                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
38537   
38538  *- Investment cost for plug-in hybrid vehicles
38539  eqmcost_inv_plghybrid_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
38540                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
38541   
38542  *- Investment cost for electric drive vehicles
38543  eqmcost_inv_edv_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
38544                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
38545   
38546  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
38549  *-------------------------------------------------------------------------------
38550  * Road Freight Transport
38551  *-------------------------------------------------------------------------------
38553   
38554  *-  Number of freight vehicles
38555  eqnb_frtveh_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
38556                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
38557   
38558  *-  Yearly fuel consumption of freight vehicles
38559  eqq_en_frtveh_c_te(jfrt,t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38560                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
38561   
38562  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
38563  eqq_el_frtedv_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)))..
38564                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
38565   
38566  *-  Investment cost for hbd_stfr vehicle
38567  eqmcost_inv_hbd_stfr_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
38568                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
38569   
38570  *-  Investment cost for plug-in hbd_stfr vehicle
38571  eqmcost_inv_plghbd_stfr_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
38572                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
38573   
38574  *-  Investment cost for electric drive vehicle
38575  eqmcost_inv_edv_stfr_c_te(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
38576                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
38577   
38578  *-------------------------------------------------------------------------------
38580   
38581   
38582   
38583   
38584   
38585   
38586  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
38588  *-------------------------------------------------------------------------------
38589  * Traditional Biomass
38590  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
38591  *  - require post_process to be launch before
38592  *-------------------------------------------------------------------------------
38593   
38595   
38596  * Optional modules
38597   
38598  * Policy modules
38599   
38600  * Calibration
38603   
38604   
38605  model witch_c_te /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
38607  *-------------------------------------------------------------------------------
38608  * Call modules by order
38609  *-------------------------------------------------------------------------------
38613   
38614  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
38616  *-------------------------------------------------------------------------------
38617  * Algorithm
38618  *-------------------------------------------------------------------------------
38619   
38621   
38622  eqobj_c_te
38623   
38624  *-------------------------------------------------------------------------------
38626   
38627  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
38629  *-------------------------------------------------------------------------------
38630  * Time
38631  * - Temporal structure
38632  * - Fixed time periods
38633  * - States of the world
38634  *-------------------------------------------------------------------------------
38635   
38637   
38638  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
38640  *-------------------------------------------------------------------------------
38641  * Geographic dimension and mapping with countries
38642  *-------------------------------------------------------------------------------
38643   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
38646  *-------------------------------------------------------------------------------
38647  * Non-Cooperative Setup
38648  *
38649  * Each region is defined as an individual coalition.
38650  *
38651  *-------------------------------------------------------------------------------
38652   
38654   
38655  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
38657  *-------------------------------------------------------------------------------
38658  * Welfare
38659  *-------------------------------------------------------------------------------
38660   
38662   
38663  equtility_c_te
38664   
38665  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
38668  *-------------------------------------------------------------------------------
38669  * Economy
38670  * - Production and Consumption definition
38671  * - Top-level of the production function
38672  * Options:
38673  * --original_ssp=1 : original SSP population and GDP data
38674  *-------------------------------------------------------------------------------
38675   
38677   
38678  eqk_c_te
38679  eqq_cc_c_te
38680  eqq_fen_c_te
38681  eqq_y_c_te
38682   
38683  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
38686  *-------------------------------------------------------------------------------
38687  * Energy sector
38688  *-------------------------------------------------------------------------------
38689   
38691   
38692  eq_mkt_clearing_oil_c_te
38693  eqcost_pes_c_te
38694  eqcost_ses_c_te
38695  eqk_en_c_te
38696  eqq_ces_el_c_te
38697  eqq_ces_nelgas_c_te
38698  eqq_el2_c_te
38699  eqq_el_c_te
38700  eqq_elff_c_te
38701  eqq_en_c_te
38702  eqq_en_in_c_te
38703  eqq_en_mu_c_te
38704  eqq_en_tree_c_te
38705  eqq_nel_c_te
38706  eqq_nelog_c_te
38707  eqq_fuel_c_te
38708  eqq_elffren_c_te
38709   
38710  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
38713  *-------------------------------------------------------------------------------
38714  * Carbon Emissions
38715  * - Total CO2 emissions and CO2 Fossil fuel and Industry
38716  * - CO2 emission costs
38717  * - GHG permit market
38718  *-------------------------------------------------------------------------------
38719   
38721   
38722  eqq_emi_lim_c_te
38723  eqq_emi_tree_c_te
38724  eqq_emi_co2ffi_c_te
38725   
38726  eqcost_emi_co2_c_te
38727   
38728  eq_mkt_clearing_nip_c_te
38729   
38730  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
38733  *-------------------------------------------------------------------------------
38734  * Research & Development
38735  * Options:
38736  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
38737  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
38738  *-------------------------------------------------------------------------------
38739   
38741   
38742  eqk_rd_c_te
38743  eqspill_coop_c_te
38744  eqspill_lead_c_te
38745  eqspill_foll_c_te
38746  eqmcost_inv_back_c_te
38747  eqmcost_inv_back_lbd_c_te
38748   
38749  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
38752  *-------------------------------------------------------------------------------
38753  * Default Climate Policy Implementation
38754  *
38755  * Options:
38756  *    --policy={bau (default),ctax}
38757  *        Implement a climate policy setting
38758  *  [ --scen= ]
38759  *        Policy variant.
38760  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
38761  *          * XXX for a fixed percentage/yr (e.g. 5) growth
38762  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
38763  *  [ --ctax_year=2020 ]
38764  *        Starting year of the carbon tax
38765  *  [ --ctax_initial=30 ]
38766  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
38767  *
38768  *-------------------------------------------------------------------------------
38770   
38771  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
38773  *-------------------------------------------------------------------------------
38774  * Energy efficiency
38775  *-------------------------------------------------------------------------------
38776   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
38779  *-------------------------------------------------------------------------------
38780  * Hydro Power
38781  *-------------------------------------------------------------------------------
38782   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
38785  *-------------------------------------------------------------------------------
38786  * System Integration:
38787  * - Capacity constraint
38788  * - Flexibility constraint
38789  * - Grid Investment
38790  * - Capacity growth constraint
38791  *-------------------------------------------------------------------------------
38792   
38794   
38795  eqq_elintren_c_te
38796  eqflex_c_te
38797  eqk_en_grid_c_te
38798  eqk_en_grid_to_k_en_c_te
38799  eqfirm_capacity_c_te
38800  eqcap_growth_c_te
38801   
38802  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
38805  *-------------------------------------------------------------------------------
38806  * Nuclear power plants
38807  *-------------------------------------------------------------------------------
38808   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
38811  *-------------------------------------------------------------------------------
38812  * GHG module
38813  * - CH4 FFI + CH4 waste + CH4 open fires
38814  * - N2O FFI + N2O waste + N2O open fires
38815  *-------------------------------------------------------------------------------
38816   
38818   
38819  eqq_emi_waste_c_te
38820  eqq_emi_n2o_ffi_c_te
38821  eqq_emi_ch4_ffi_c_te
38822   
38823  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
38826  *-------------------------------------------------------------------------------
38827  * F-gases
38828  * - LLF
38829  * - SLF
38830  *-------------------------------------------------------------------------------
38831   
38833   
38834  eqq_emi_fgases_c_te
38835   
38836  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
38839  *-------------------------------------------------------------------------------
38840  * Landuse [simplified version of the land-use model]
38841  *-------------------------------------------------------------------------------
38842   
38844   
38845  eq_wbio_c_te
38846  eqcost_pes_wbio_c_te
38847   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
38850  *-------------------------------------------------------------------------------
38851  * Bioenergy power plant
38852  *-------------------------------------------------------------------------------
38853   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
38856  *-------------------------------------------------------------------------------
38857  * Traditional Biofuels
38858  * - Requires the precedence of mod_landuse
38859  *-------------------------------------------------------------------------------
38860   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
38863  *-------------------------------------------------------------------------------
38864  * Advanced biofuel
38865  * - Require the precedence of mod_landuse
38866  *-------------------------------------------------------------------------------
38867   
38869   
38870  eqq_en_lim_advbiofuel_c_te
38871  eqmcost_fuel_advbiofuel_c_te
38872   
38873  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
38876  *-------------------------------------------------------------------------------
38877  * Carbon Capture and Sequestration
38878  *-------------------------------------------------------------------------------
38879   
38881   
38882  eqq_emi_ccs_c_te
38883  eqcost_emi_sinks_c_te
38884  eq_stor_ccs_cum_c_te
38885  eq_emi_stor_ccs_c_te
38886  eq_emi_leak_ccs_c_te
38887   
38888  *-------------------------------------------------------------------------------
38890   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
38892  *-------------------------------------------------------------------------------
38893  * Coal for non-electric sectors
38894  * - Coke Plants
38895  * - Industrial and Commercial combined-heat-and-power (CHP)
38896  * - Others
38897  *-------------------------------------------------------------------------------
38898   
38900   
38901  eqcost_en_nelcoal_c_te
38902  eqq_ncoalabat_monotone_c_te
38903  eqq_en_nelcoalccs_max_c_te
38904   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
38907  *-------------------------------------------------------------------------------
38908  * Wind energy module
38909  * - onshore and offshore
38910  *-------------------------------------------------------------------------------
38911   
38913   
38914  eqq_en_mu_windon_c_te
38915  eqq_en_mu_windoff_c_te
38916  eqk_en_windon_c_te
38917  eqk_en_windoff_c_te
38918  eqq_en_windon_sum_c_te
38919  eqq_en_windoff_sum_c_te
38920  eqk_en_windon_sum_c_te
38921  eqk_en_windoff_sum_c_te
38922  eqi_en_windon_sum_c_te
38923  eqi_en_windoff_sum_c_te
38924   
38926   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
38928  *-------------------------------------------------------------------------------
38929  * Solar Powerplants (PV and CSP) to the electrical system
38930  *-------------------------------------------------------------------------------
38931   
38932  *-------------------------------------------------------------------------------
38934   
38935  eqq_en_mu_pv_c_te
38936  eqq_en_mu_csp_c_te
38937  eqk_en_pv_c_te
38938  eqk_en_csp_c_te
38939  eqq_en_pv_sum_c_te
38940  eqq_en_csp_sum_c_te
38941  eqk_en_pv_sum_c_te
38942  eqk_en_csp_sum_c_te
38943  eqi_en_pv_sum_c_te
38944  eqi_en_csp_sum_c_te
38945  eqk_en_solar_comp_c_te
38946   
38947  *-------------------------------------------------------------------------------
38949   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
38951  *-------------------------------------------------------------------------------
38952  * Technology development scenarios
38953  *-------------------------------------------------------------------------------
38954   
38956   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
38958  *-------------------------------------------------------------------------------
38959  * Oil Extraction
38960  * Options:
38961  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
38962  *-------------------------------------------------------------------------------
38963   
38965   
38966  eqoilcap_c_te
38967  eqoilprod_c_te
38968  eqq_out_oil_c_te
38969  eqcum_oil_c_te
38970  eqcost_oil_c_te
38971  eqi_oil_c_te
38972  eqi_out_oil_c_te
38973  eqq_emi_out_oil_c_te
38974   
38975  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
38978  *-------------------------------------------------------------------------------
38979  * Uranium Resources
38980  *-------------------------------------------------------------------------------
38981   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
38984  *-------------------------------------------------------------------------------
38985  * Gas Resources
38986  *-------------------------------------------------------------------------------
38987   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
38990  *-------------------------------------------------------------------------------
38991  * Coal Resources
38992  *-------------------------------------------------------------------------------
38993   
38995   
38996   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
38998  *-------------------------------------------------------------------------------
38999  * Climate
39000  *
39001  * Represents the climate
39002  * - based on the DICE model equations
39003  * - Radiative forcing for non CO2 ghgs
39004  * - parameters calibrated to reproduce MAGICC6.4 default response
39005  *
39006  *  Options:
39007  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
39008  * - $setglobal cooperate_on_climate {'YES','NO'}
39009  * - 'YES'(default): Countries within a coalition act in cooperation
39010  *   'NO': Countries within a coalition act individually
39011  *
39012  *-------------------------------------------------------------------------------
39013   
39015   
39017   
39018  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
39021  *-------------------------------------------------------------------------------
39022  * Long-run Damages from Climate Change
39023  * - Economic impacts
39024  * - Adaptation
39025  *-------------------------------------------------------------------------------
39026   
39028   
39030   
39031  *-------------------------------------------------------------------------------
39033   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
39035  *-------------------------------------------------------------------------------
39036  * Light-duty Vehicles for Personal Transport
39037  *-------------------------------------------------------------------------------
39038   
39040   
39041  eqnb_veh_c_te
39042  eqq_en_veh_c_te
39043  eqq_el_edv_c_te
39044  eqmcost_inv_hybrid_c_te
39045  eqmcost_inv_plghybrid_c_te
39046  eqmcost_inv_edv_c_te
39047  *** newcode
39048  eqq_inv_red_ban_c_te
39049  ***
39050  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
39053  *-------------------------------------------------------------------------------
39054  * Road Freight Transport
39055  *-------------------------------------------------------------------------------
39057   
39058  eqnb_frtveh_c_te
39059  eqq_en_frtveh_c_te
39060  eqq_el_frtedv_c_te
39061  eqmcost_inv_hbd_stfr_c_te
39062  eqmcost_inv_plghbd_stfr_c_te
39063  eqmcost_inv_edv_stfr_c_te
39064   
39065  *-------------------------------------------------------------------------------
39067   
39068   
39069   
39070   
39071   
39072   
39073  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
39075  *-------------------------------------------------------------------------------
39076  * Traditional Biomass
39077  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
39078  *  - require post_process to be launch before
39079  *-------------------------------------------------------------------------------
39080   
39082   
39083  * Optional modules
39084   
39085  * Policy modules
39086   
39087  * Calibration
39090  /;
39091   
39092  witch_c_te.optfile=1;   # the option file solvername.opt is to be used
39093  witch_c_te.holdfixed=1; # treat fixed values as constant
39094  witch_c_te.scaleopt=1;  # Use scaling for better gradients estimation
39095  witch_c_te.solvelink=3; # Use parallel or sequential solving
39096   
39101   
39102  Equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
39104  *-------------------------------------------------------------------------------
39105  * Call modules by order
39106  *-------------------------------------------------------------------------------
39110   
39111  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
39113  *-------------------------------------------------------------------------------
39114  * Algorithm
39115  *-------------------------------------------------------------------------------
39116   
39118   
39119  eqobj_c_usa
39120   
39121  *-------------------------------------------------------------------------------
39123   
39124  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
39126  *-------------------------------------------------------------------------------
39127  * Time
39128  * - Temporal structure
39129  * - Fixed time periods
39130  * - States of the world
39131  *-------------------------------------------------------------------------------
39132   
39134   
39135  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
39137  *-------------------------------------------------------------------------------
39138  * Geographic dimension and mapping with countries
39139  *-------------------------------------------------------------------------------
39140   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
39143  *-------------------------------------------------------------------------------
39144  * Non-Cooperative Setup
39145  *
39146  * Each region is defined as an individual coalition.
39147  *
39148  *-------------------------------------------------------------------------------
39149   
39151   
39152  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
39154  *-------------------------------------------------------------------------------
39155  * Welfare
39156  *-------------------------------------------------------------------------------
39157   
39159   
39160  equtility_c_usa
39161   
39162  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
39165  *-------------------------------------------------------------------------------
39166  * Economy
39167  * - Production and Consumption definition
39168  * - Top-level of the production function
39169  * Options:
39170  * --original_ssp=1 : original SSP population and GDP data
39171  *-------------------------------------------------------------------------------
39172   
39174   
39175  eqk_c_usa
39176  eqq_cc_c_usa
39177  eqq_fen_c_usa
39178  eqq_y_c_usa
39179   
39180  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
39183  *-------------------------------------------------------------------------------
39184  * Energy sector
39185  *-------------------------------------------------------------------------------
39186   
39188   
39189  eq_mkt_clearing_oil_c_usa
39190  eqcost_pes_c_usa
39191  eqcost_ses_c_usa
39192  eqk_en_c_usa
39193  eqq_ces_el_c_usa
39194  eqq_ces_nelgas_c_usa
39195  eqq_el2_c_usa
39196  eqq_el_c_usa
39197  eqq_elff_c_usa
39198  eqq_en_c_usa
39199  eqq_en_in_c_usa
39200  eqq_en_mu_c_usa
39201  eqq_en_tree_c_usa
39202  eqq_nel_c_usa
39203  eqq_nelog_c_usa
39204  eqq_fuel_c_usa
39205  eqq_elffren_c_usa
39206   
39207  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
39210  *-------------------------------------------------------------------------------
39211  * Carbon Emissions
39212  * - Total CO2 emissions and CO2 Fossil fuel and Industry
39213  * - CO2 emission costs
39214  * - GHG permit market
39215  *-------------------------------------------------------------------------------
39216   
39218   
39219  eqq_emi_lim_c_usa
39220  eqq_emi_tree_c_usa
39221  eqq_emi_co2ffi_c_usa
39222   
39223  eqcost_emi_co2_c_usa
39224   
39225  eq_mkt_clearing_nip_c_usa
39226   
39227  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
39230  *-------------------------------------------------------------------------------
39231  * Research & Development
39232  * Options:
39233  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
39234  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
39235  *-------------------------------------------------------------------------------
39236   
39238   
39239  eqk_rd_c_usa
39240  eqspill_coop_c_usa
39241  eqspill_lead_c_usa
39242  eqspill_foll_c_usa
39243  eqmcost_inv_back_c_usa
39244  eqmcost_inv_back_lbd_c_usa
39245   
39246  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
39249  *-------------------------------------------------------------------------------
39250  * Default Climate Policy Implementation
39251  *
39252  * Options:
39253  *    --policy={bau (default),ctax}
39254  *        Implement a climate policy setting
39255  *  [ --scen= ]
39256  *        Policy variant.
39257  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
39258  *          * XXX for a fixed percentage/yr (e.g. 5) growth
39259  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
39260  *  [ --ctax_year=2020 ]
39261  *        Starting year of the carbon tax
39262  *  [ --ctax_initial=30 ]
39263  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
39264  *
39265  *-------------------------------------------------------------------------------
39267   
39268  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
39270  *-------------------------------------------------------------------------------
39271  * Energy efficiency
39272  *-------------------------------------------------------------------------------
39273   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
39276  *-------------------------------------------------------------------------------
39277  * Hydro Power
39278  *-------------------------------------------------------------------------------
39279   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
39282  *-------------------------------------------------------------------------------
39283  * System Integration:
39284  * - Capacity constraint
39285  * - Flexibility constraint
39286  * - Grid Investment
39287  * - Capacity growth constraint
39288  *-------------------------------------------------------------------------------
39289   
39291   
39292  eqq_elintren_c_usa
39293  eqflex_c_usa
39294  eqk_en_grid_c_usa
39295  eqk_en_grid_to_k_en_c_usa
39296  eqfirm_capacity_c_usa
39297  eqcap_growth_c_usa
39298   
39299  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
39302  *-------------------------------------------------------------------------------
39303  * Nuclear power plants
39304  *-------------------------------------------------------------------------------
39305   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
39308  *-------------------------------------------------------------------------------
39309  * GHG module
39310  * - CH4 FFI + CH4 waste + CH4 open fires
39311  * - N2O FFI + N2O waste + N2O open fires
39312  *-------------------------------------------------------------------------------
39313   
39315   
39316  eqq_emi_waste_c_usa
39317  eqq_emi_n2o_ffi_c_usa
39318  eqq_emi_ch4_ffi_c_usa
39319   
39320  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
39323  *-------------------------------------------------------------------------------
39324  * F-gases
39325  * - LLF
39326  * - SLF
39327  *-------------------------------------------------------------------------------
39328   
39330   
39331  eqq_emi_fgases_c_usa
39332   
39333  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
39336  *-------------------------------------------------------------------------------
39337  * Landuse [simplified version of the land-use model]
39338  *-------------------------------------------------------------------------------
39339   
39341   
39342  eq_wbio_c_usa
39343  eqcost_pes_wbio_c_usa
39344   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
39347  *-------------------------------------------------------------------------------
39348  * Bioenergy power plant
39349  *-------------------------------------------------------------------------------
39350   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
39353  *-------------------------------------------------------------------------------
39354  * Traditional Biofuels
39355  * - Requires the precedence of mod_landuse
39356  *-------------------------------------------------------------------------------
39357   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
39360  *-------------------------------------------------------------------------------
39361  * Advanced biofuel
39362  * - Require the precedence of mod_landuse
39363  *-------------------------------------------------------------------------------
39364   
39366   
39367  eqq_en_lim_advbiofuel_c_usa
39368  eqmcost_fuel_advbiofuel_c_usa
39369   
39370  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
39373  *-------------------------------------------------------------------------------
39374  * Carbon Capture and Sequestration
39375  *-------------------------------------------------------------------------------
39376   
39378   
39379  eqq_emi_ccs_c_usa
39380  eqcost_emi_sinks_c_usa
39381  eq_stor_ccs_cum_c_usa
39382  eq_emi_stor_ccs_c_usa
39383  eq_emi_leak_ccs_c_usa
39384   
39385  *-------------------------------------------------------------------------------
39387   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
39389  *-------------------------------------------------------------------------------
39390  * Coal for non-electric sectors
39391  * - Coke Plants
39392  * - Industrial and Commercial combined-heat-and-power (CHP)
39393  * - Others
39394  *-------------------------------------------------------------------------------
39395   
39397   
39398  eqcost_en_nelcoal_c_usa
39399  eqq_ncoalabat_monotone_c_usa
39400  eqq_en_nelcoalccs_max_c_usa
39401   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
39404  *-------------------------------------------------------------------------------
39405  * Wind energy module
39406  * - onshore and offshore
39407  *-------------------------------------------------------------------------------
39408   
39410   
39411  eqq_en_mu_windon_c_usa
39412  eqq_en_mu_windoff_c_usa
39413  eqk_en_windon_c_usa
39414  eqk_en_windoff_c_usa
39415  eqq_en_windon_sum_c_usa
39416  eqq_en_windoff_sum_c_usa
39417  eqk_en_windon_sum_c_usa
39418  eqk_en_windoff_sum_c_usa
39419  eqi_en_windon_sum_c_usa
39420  eqi_en_windoff_sum_c_usa
39421   
39423   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
39425  *-------------------------------------------------------------------------------
39426  * Solar Powerplants (PV and CSP) to the electrical system
39427  *-------------------------------------------------------------------------------
39428   
39429  *-------------------------------------------------------------------------------
39431   
39432  eqq_en_mu_pv_c_usa
39433  eqq_en_mu_csp_c_usa
39434  eqk_en_pv_c_usa
39435  eqk_en_csp_c_usa
39436  eqq_en_pv_sum_c_usa
39437  eqq_en_csp_sum_c_usa
39438  eqk_en_pv_sum_c_usa
39439  eqk_en_csp_sum_c_usa
39440  eqi_en_pv_sum_c_usa
39441  eqi_en_csp_sum_c_usa
39442  eqk_en_solar_comp_c_usa
39443   
39444  *-------------------------------------------------------------------------------
39446   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
39448  *-------------------------------------------------------------------------------
39449  * Technology development scenarios
39450  *-------------------------------------------------------------------------------
39451   
39453   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
39455  *-------------------------------------------------------------------------------
39456  * Oil Extraction
39457  * Options:
39458  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
39459  *-------------------------------------------------------------------------------
39460   
39462   
39463  eqoilcap_c_usa
39464  eqoilprod_c_usa
39465  eqq_out_oil_c_usa
39466  eqcum_oil_c_usa
39467  eqcost_oil_c_usa
39468  eqi_oil_c_usa
39469  eqi_out_oil_c_usa
39470  eqq_emi_out_oil_c_usa
39471   
39472  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
39475  *-------------------------------------------------------------------------------
39476  * Uranium Resources
39477  *-------------------------------------------------------------------------------
39478   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
39481  *-------------------------------------------------------------------------------
39482  * Gas Resources
39483  *-------------------------------------------------------------------------------
39484   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
39487  *-------------------------------------------------------------------------------
39488  * Coal Resources
39489  *-------------------------------------------------------------------------------
39490   
39492   
39493   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
39495  *-------------------------------------------------------------------------------
39496  * Climate
39497  *
39498  * Represents the climate
39499  * - based on the DICE model equations
39500  * - Radiative forcing for non CO2 ghgs
39501  * - parameters calibrated to reproduce MAGICC6.4 default response
39502  *
39503  *  Options:
39504  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
39505  * - $setglobal cooperate_on_climate {'YES','NO'}
39506  * - 'YES'(default): Countries within a coalition act in cooperation
39507  *   'NO': Countries within a coalition act individually
39508  *
39509  *-------------------------------------------------------------------------------
39510   
39512   
39514   
39515  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
39518  *-------------------------------------------------------------------------------
39519  * Long-run Damages from Climate Change
39520  * - Economic impacts
39521  * - Adaptation
39522  *-------------------------------------------------------------------------------
39523   
39525   
39527   
39528  *-------------------------------------------------------------------------------
39530   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
39532  *-------------------------------------------------------------------------------
39533  * Light-duty Vehicles for Personal Transport
39534  *-------------------------------------------------------------------------------
39535   
39537   
39538  eqnb_veh_c_usa
39539  eqq_en_veh_c_usa
39540  eqq_el_edv_c_usa
39541  eqmcost_inv_hybrid_c_usa
39542  eqmcost_inv_plghybrid_c_usa
39543  eqmcost_inv_edv_c_usa
39544  *** newcode
39545  eqq_inv_red_ban_c_usa
39546  ***
39547  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
39550  *-------------------------------------------------------------------------------
39551  * Road Freight Transport
39552  *-------------------------------------------------------------------------------
39554   
39555  eqnb_frtveh_c_usa
39556  eqq_en_frtveh_c_usa
39557  eqq_el_frtedv_c_usa
39558  eqmcost_inv_hbd_stfr_c_usa
39559  eqmcost_inv_plghbd_stfr_c_usa
39560  eqmcost_inv_edv_stfr_c_usa
39561   
39562  *-------------------------------------------------------------------------------
39564   
39565   
39566   
39567   
39568   
39569   
39570  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
39572  *-------------------------------------------------------------------------------
39573  * Traditional Biomass
39574  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
39575  *  - require post_process to be launch before
39576  *-------------------------------------------------------------------------------
39577   
39579   
39580  * Optional modules
39581   
39582  * Policy modules
39583   
39584  * Calibration
39587  ;
39588   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
39590  *-------------------------------------------------------------------------------
39591  * Call modules by order
39592  *-------------------------------------------------------------------------------
39596   
39597  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
39599  *-------------------------------------------------------------------------------
39600  * Algorithm
39601  *-------------------------------------------------------------------------------
39602   
39604   
39606  * Add the component of the (maximized) objective function as required by the ADMM algorithm
39607  eqobj_c_usa..
39608      OBJADMM =e= UTILITY -
39609          sum(t, rho_admm('oil',t) / 2 *
39610              sum(n$(map_clt_n('c_usa',n) and trading_t('oil',t,n)),
39611                  power(
39612                      (Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)) -
39613                      x_admm('oil',t,n) +
39614                      xavg_admm('oil',t) +
39615                      u_admm('oil', t)
39616                  ,2)
39617              )) -
39618          sum((c_mkt,t), rho_admm(c_mkt,t) / 2 *
39619              sum(n$(map_clt_n('c_usa',n) and trading_t(c_mkt,t,n)),
39620                  power(
39621                      Q_EMI(c_mkt,t,n) -
39622                      x_admm(c_mkt,t,n) +
39623                      xavg_admm(c_mkt,t) +
39624                      u_admm(c_mkt,t)
39625                  ,2)
39626              ))
39627      ;
39629   
39630  *-------------------------------------------------------------------------------
39632   
39633  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
39635  *-------------------------------------------------------------------------------
39636  * Time
39637  * - Temporal structure
39638  * - Fixed time periods
39639  * - States of the world
39640  *-------------------------------------------------------------------------------
39641   
39643   
39644  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
39646  *-------------------------------------------------------------------------------
39647  * Geographic dimension and mapping with countries
39648  *-------------------------------------------------------------------------------
39649   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
39652  *-------------------------------------------------------------------------------
39653  * Non-Cooperative Setup
39654  *
39655  * Each region is defined as an individual coalition.
39656  *
39657  *-------------------------------------------------------------------------------
39658   
39660   
39661  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
39663  *-------------------------------------------------------------------------------
39664  * Welfare
39665  *-------------------------------------------------------------------------------
39666   
39668   
39669  * Objective function - Welfare to be maximized
39670  equtility_c_usa..
39671      UTILITY =e=
39672   
39673  * Negishi SWF
39675   
39676  * Welfare functions based on CEBGE
39679                  (sum((t,tp1)$(((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))),
39680                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
39681                      ((sum(n$map_clt_n('c_usa',n),
39682                        (l(t,n) / sum(nn$map_clt_n('c_usa',nn), l(t,nn))) *
39683                        (Q('CC',t,n) / l(t,n))**(1 - gamma))
39684                       )**(1 / (1 - gamma))
39685                      )**(1 - eta) ) +
39686                  sum((t,tp1)$(tfix(tp1) and pre(t,tp1)),
39687                      PROB(t) * stpf(t) / sum(tt$(year(tt) le yeoh), PROB(tt) * stpf(tt)) *
39688                      ((sum(n$map_clt_n('c_usa',n),
39689                        (l(t,n) / sum(nn$map_clt_n('c_usa',nn), l(t,nn))) *
39690                        (Q.l('CC',t,n) / l(t,n))**(1 - gamma))
39691                       )**(1 / (1 - gamma))
39692                      )**(1 - eta) )
39693                  )**(1/(1 - eta)) * 1e6
39696   
39697   
39698  ;
39699   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
39702  *-------------------------------------------------------------------------------
39703  * Economy
39704  * - Production and Consumption definition
39705  * - Top-level of the production function
39706  * Options:
39707  * --original_ssp=1 : original SSP population and GDP data
39708  *-------------------------------------------------------------------------------
39709   
39711   
39712  * Production
39713  eqq_y_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39714   
39715      Q('y',t,n) =e=  q0('y',n)*( alpha('kl',n)*(tfpy(t,n)* q0('kl',n)*( (K('fg',t,n)/q0('k',n))**(alpha('k',n))* (l(t,n)/q0('l',n))**(alpha('l',n)) )/q0('kl',n))**rho('y',t)+ alpha('fen',n)*(Q('fen',t,n)/q0('fen',n))**rho('y',t) )**(1/rho('y',t))
39716                     ## Climate feedback on economy
39718                     ## Net cost of Primary and Secondary Energy Sources
39719                     - sum(fuel, COST_FUEL(fuel,t,n))
39720                     ## GHG emissions costs (co2 for nip, emac for abat mac, sink)
39721                     - sum(cce, COST_EMI(cce,t,n))
39722                     ## Carbon tax
39723                     - sum(ghg, ctax(ghg,t,n) * (Q_EMI(ghg,t,n) - Q_EMI.l(ghg,t,n)))
39724                     ## Additionnal costs on gross product
39725                     - sum(ccy, COST_Y(ccy,t,n))
39726  ;
39727   
39728  * Consumption
39729  eqq_cc_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
39730      Q('cc',t,n) =e= Q('y',t,n)
39731                      ## Investments in goods g (final good, adaptation)
39732                      -sum(g, I(g,t,n))
39733                      ## Investments in r&d
39734                      -sum(rd, I_RD(rd,t,n)) * rd_crowd_out
39735                      ## Investments in energy technlogies
39736                      -sum(jinv, I_EN(jinv,t,n))
39737                       ## Investments in grid infrastructures
39738                      - I_EN_GRID(t,n)
39739                      ## Investments in extraction sector
39740                      -sum(extract(f), I_OUT(f,t,n))
39741                      ## O&M for energy technlogies
39742                      -sum(jreal, oem(jreal,t,n) * K_EN(jreal,t,n))
39743                      ## O&M for extraction
39744                      -sum(extract(f), oem_ex(f) * Q_OUT(f,t,n))
39745                      ## Energy technology penalty costs
39746                      -sum(jpenalty(j), COST_EN(j,t,n))
39747  ;
39748   
39749  * Capital accumulation
39750  eqk_c_usa(g,t,tp1,n)$(map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))..
39751      K(g,tp1,n) =e= K(g,t,n)*(1-delta(g))**tlen(t) + tlen(t) * I(g,t,n);
39752   
39753  * Energy services
39754  eqq_fen_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39755      Q('fen',t,n) =e=  q0('fen',n)*( alpha('krd_en',n)*(K_RD('en',t,n)/q0('krd_en',n))**rho('fen',t)+ alpha('en',n)*(tfpn(t,n) * Q('en',t,n)/q0('en',n))**rho('fen',t) )**(1/rho('fen',t));
39756   
39757  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
39760  *-------------------------------------------------------------------------------
39761  * Energy sector
39762  *-------------------------------------------------------------------------------
39763   
39765   
39766  *-------------------------------------------------------------------------------
39767  * Production - Energy sector
39768  *-------------------------------------------------------------------------------
39769   
39770  eqq_en_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39771      Q('en',t,n)  =e=  q0('en',n)*( alpha('el',n)*(Q('el',t,n)/q0('el',n))**rho('en',t)+ alpha('nel',n)*(Q('nel',t,n)/q0('nel',n))**rho('en',t) )**(1/rho('en',t));
39772   
39773  *-------------------------------------------------------------------------------
39774  * Production - Electrical sector
39775  *-------------------------------------------------------------------------------
39776   
39777  eqq_el_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39778      Q('el',t,n) =e=  q0('el',n)*( alpha('el2',n)*(Q('el2',t,n)/q0('el2',n))+ alpha('elhydro',n)*(Q('ces_elhydro',t,n)/q0('elhydro',n)) );
39779   
39780  eqq_el2_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39781      Q('el2',t,n) =e=  q0('el2',n)*( alpha('elffren',n)*(Q('elffren',t,n)/q0('elffren',n))**rho('el2',t)+ alpha('elnuclearback',n)*(Q('ces_elnuclearback',t,n)/q0('elnuclearback',n))**rho('el2',t) )**(1/rho('el2',t));
39782   
39783  eqq_elffren_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39784      Q('elffren',t,n) =e=  q0('elffren',n)*( alpha('elff',n)*(Q('elff',t,n)/q0('elff',n))**rho('elffren',t)+ alpha('elintren',n)*(Q('ces_elintren',t,n)/q0('elintren',n))**rho('elffren',t) )**(1/rho('elffren',t));
39785  eqq_elff_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39786      Q('elff',t,n) =e=  q0('elff',n)*( alpha('elcoalwbio',n)*(Q('ces_elcoalwbio',t,n)/q0('elcoalwbio',n))**rho('elff',t)+ alpha('eloil',n)*(Q('ces_eloil',t,n)/q0('eloil',n))**rho('elff',t)+ alpha('elgas',n)*(Q('ces_elgas',t,n)/q0('elgas',n))**rho('elff',t) )**(1/rho('elff',t));
39787   
39788  eqq_ces_el_c_usa(ices_el,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(j$map_ices_el(ices_el,j),1) gt 0))..
39789      Q(ices_el,t,n) =e= sum(j$map_ices_el(ices_el,j), Q_EN(j,t,n)) - sum(el_out, QEL_OUT(el_out,ices_el,t,n))
39790  ;
39791   
39792  *-------------------------------------------------------------------------------
39793  * Production - Non-electrical sector
39794  *-------------------------------------------------------------------------------
39795   
39796  eqq_nel_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39797      Q('nel',t,n) =e=  q0('nel',n)*( alpha('nelcoal',n)*(Q_EN('nelcoal',t,n)/q0('nelcoal',n))+ alpha('nelog',n)*(Q('nelog',t,n)/q0('nelog',n))+ alpha('neltrbiomass',n)*(Q_EN('neltrbiomass',t,n)/q0('neltrbiomass',n)) );
39798   
39799  eqq_nelog_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39800      Q('nelog',t,n) =e=  q0('nelog',n)*( alpha('neloil',n)*(Q_EN('neloilback',t,n)/q0('neloil',n))**rho('nelog',t)+ alpha('nelgas',n)*(Q('ces_nelgas',t,n)/q0('nelgas',n))**rho('nelog',t) )**(1/rho('nelog',t))
39801  ;
39802  eqq_ces_nelgas_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39803      Q('ces_nelgas',t,n) =e= Q_EN('nelgas',t,n) - sum(nel_out,QNEL_OUT('nelgas',nel_out,t,n));
39804   
39805  *-------------------------------------------------------------------------------
39806  * PES and fuels
39807  *-------------------------------------------------------------------------------
39808   
39809  eqq_fuel_c_usa(fuel,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(fuel, 'wbio')))..
39810      Q_FUEL(fuel,t,n) =e= sum(jfed$(csi(fuel,jfed,t,n)), Q_IN(fuel,jfed,t,n));
39811   
39812  *-------------------------------------------------------------------------------
39813  * Cost
39814  *-------------------------------------------------------------------------------
39815   
39816  * Net cost of Primary Energy Supplies
39817  eqcost_pes_c_usa(f,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not sameas(f,'wbio')))..
39818      COST_FUEL(f,t,n) =e= MCOST_FUEL(f,t,n) * Q_FUEL(f,t,n) -
39819                              (FPRICE.l(f,t) * Q_OUT(f,t,n))$(extract(f));
39820   
39821  * Net cost of Secondary Energy Supplies
39822  eqcost_ses_c_usa(s,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39823      COST_FUEL(s,t,n) =e= MCOST_FUEL(s,t,n) * Q_FUEL(s,t,n);
39824   
39825   
39826  *-------------------------------------------------------------------------------
39827  * Market balances
39828  *-------------------------------------------------------------------------------
39829   
39830  eq_mkt_clearing_oil_c_usa(t,'c_usa')$(internal('oil'))..
39831      sum( n$(map_clt_n('c_usa',n) and trading_t('oil',t,n)),
39832          Q_FUEL('oil',t,n) - Q_OUT('oil',t,n)
39833      ) =e= 0;
39834   
39835  *-------------------------------------------------------------------------------
39836  * New capital in the energy sector
39837  *-------------------------------------------------------------------------------
39838   
39839  * Electrical generation plants (new)
39840  eqk_en_c_usa(jinv,t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and (not jinv_own_k(jinv)) and pre(t,tp1))..
39841      K_EN(jinv,tp1,n) =e= K_EN(jinv,t,n) * (1 - delta_en(jinv,tp1,n))**tlen(t) +
39842                              tlen(t) * I_EN(jinv,t,n) / MCOST_INV(jinv,t,n);
39843   
39844  *-------------------------------------------------------------------------------
39845  * ENERGY
39846  *-------------------------------------------------------------------------------
39847   
39848  * Capacity limits in the electrical sector
39849  eqq_en_mu_c_usa(jel,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not jel_own_mu(jel)))..
39850      Q_EN(jel,t,n) =l= mu(jel,t,n) * K_EN(jel,t,n);
39851   
39852  * Efficiency of energy technology sector
39853  eqq_en_in_c_usa(jfed,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(fuel$csi(fuel,jfed,t,n),1)))..
39854      Q_EN(jfed,t,n) =e= sum(fuel$csi(fuel,jfed,t,n),
39855                          csi(fuel,jfed,t,n) * Q_IN(fuel,jfed,t,n));
39856   
39857  * Energy generation "tree"
39858  eqq_en_tree_c_usa(j,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(jj$map_j(j,jj),1))) ..
39859      Q_EN(j,t,n) =e= sum(jj$map_j(j,jj), Q_EN(jj,t,n));
39860   
39861  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
39864  *-------------------------------------------------------------------------------
39865  * Carbon Emissions
39866  * - Total CO2 emissions and CO2 Fossil fuel and Industry
39867  * - CO2 emission costs
39868  * - GHG permit market
39869  *-------------------------------------------------------------------------------
39870   
39872   
39873  * GHG emission cap
39874  eqq_emi_lim_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and t_cap(t,n))..
39875      sum(e_cap(e), Q_EMI(e,t,n)) =l= emi_cap(t,n) +
39876                                   sum(c_mkt$trading_t(c_mkt,t,n), Q_EMI(c_mkt,t,n));
39877   
39878  * Compute total and sectoral emissions
39879  eqq_emi_tree_c_usa(t,n,e)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (sum(ee$map_e(e,ee),1)))..
39880      Q_EMI(e,t,n) =e= sum(ee$map_e(e,ee),Q_EMI(ee,t,n));
39881   
39882  * Industrial CO2 emissions
39883  eqq_emi_co2ffi_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39884      Q_EMI('co2ffi',t,n) =e= # Fossil fuel emissions
39885                              sum(f$emi_st(f), emi_st(f) * emi_sys('co2ffi',t,n) * Q_FUEL(f,t,n)) +
39886                              # Emissions from biomass
39887                              sum(jfed$csi('wbio',jfed,t,n), emi_bio_harv(t) * ccs_emi_capt('wbio') * emi_sys('co2ffi',t,n) * Q_IN('wbio',jfed,t,n)) +
39888                              # Emissions from fuel extraction
39889                              sum(extract(f), Q_EMI_OUT(f,t,n)) -
39890                              # Captured emissions
39891                              sum(sink, Q_EMI(sink,t,n));
39892   
39893  * CO2 emission costs
39894  eqcost_emi_co2_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
39895      COST_EMI('co2',t,n) =e= sum(c_mkt$trading_t(c_mkt,t,n), CPRICE.l(c_mkt,t)*Q_EMI(c_mkt,t,n));
39896   
39897  * Emission permit market clearing for internal market
39898  eq_mkt_clearing_nip_c_usa(c_mkt,t,'c_usa')$(internal(c_mkt))..
39899      sum(n$(map_clt_n('c_usa',n) and trading_t(c_mkt,t,n)), Q_EMI(c_mkt,t,n)) =e= 0;
39900   
39901  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
39904  *-------------------------------------------------------------------------------
39905  * Research & Development
39906  * Options:
39907  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
39908  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
39909  *-------------------------------------------------------------------------------
39910   
39912   
39913  * Knowledge stock accumulation
39914  eqk_rd_c_usa(rd,t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
39915                  K_RD(rd,tp1,n) =e= K_RD(rd,t,n)*(1-rd_delta(rd))**tlen(t)
39916                                        +tlen(t)*rd_coef(rd,'a')*I_RD(rd,t,n)**rd_coef(rd,'b') *
39917                                        K_RD(rd,t,n)**rd_coef(rd,'c') *
39918                                        SPILL(rd,t,n)**rd_coef(rd,'d');
39919   
39920  * Cooperation : internalize the externalities due the spillovers (but only optimize over the regions inside the coalition)
39921  eqspill_coop_c_usa(rd,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_cooperation(rd,'c_usa'))..
39922          SPILL(rd,t,n) =e= K_RD(rd,t,n) /
39923                            ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_usa',nn)), K_RD(rd,t,nn)) +
39924                              sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_usa',nn))), K_RD.l(rd,t,nn))
39925                            ) *
39926                            (
39927                              ( sum(nn$(leadrd(rd,nn) and map_clt_n('c_usa',nn)), K_RD(rd,t,nn)) +
39928                                sum(nn$(leadrd(rd,nn) and (not map_clt_n('c_usa',nn))), K_RD.l(rd,t,nn))
39929                              ) - K_RD(rd,t,n)
39930                            );
39931   
39932  * No-cooperation : a leader sees is negative effect when he is closed to the frontier
39933  eqspill_lead_c_usa(rd,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_usa')) and leadrd(rd,n))..
39934                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD(rd,t,n)) * krd_oth_lead_krd(rd,t,n);
39935   
39936  * No-cooperation : a follower sees is negative effect on the quantity he can grab
39937  eqspill_foll_c_usa(rd,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (not rd_cooperation(rd,'c_usa')) and (not leadrd(rd,n)))..
39938                  SPILL(rd,t,n) =e= K_RD(rd,t,n)/krd_lead(rd,t) * (krd_lead(rd,t)-K_RD(rd,t,n));
39939   
39940  *- Only LbR (without learning by doing)
39941  eqmcost_inv_back_c_usa(jrd,t,tt,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and (not jrd_lbd(jrd)))..
39942                  MCOST_INV(jrd,t,n) =e= sum(ttt$(year(ttt) eq rd_coef(jrd,'krd0_year')),MCOST_INV(jrd,ttt,n)) *
39943                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr');
39944   
39945  *- LbR together with learning by doing ==> Two-factor learning curve
39946  eqmcost_inv_back_lbd_c_usa(jrd,t,tt,tfirst,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and rd_tgap(jrd,t,tt) and jrd_lbd(jrd))..
39947                  MCOST_INV(jrd,t,n) =e= MCOST_INV(jrd,tfirst,n) *
39948                                         (sum(rd$(sameas(rd,jrd)), K_RD(rd,tt,n)/wkrd0(rd)))**rd_coef(jrd,'lbr') *
39949                                         (wcum(jrd,t)/wcum(jrd,tfirst))**rd_coef(jrd,'lbd');
39950   
39951  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
39954  *-------------------------------------------------------------------------------
39955  * Default Climate Policy Implementation
39956  *
39957  * Options:
39958  *    --policy={bau (default),ctax}
39959  *        Implement a climate policy setting
39960  *  [ --scen= ]
39961  *        Policy variant.
39962  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
39963  *          * XXX for a fixed percentage/yr (e.g. 5) growth
39964  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
39965  *  [ --ctax_year=2020 ]
39966  *        Starting year of the carbon tax
39967  *  [ --ctax_initial=30 ]
39968  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
39969  *
39970  *-------------------------------------------------------------------------------
39972   
39973  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
39975  *-------------------------------------------------------------------------------
39976  * Energy efficiency
39977  *-------------------------------------------------------------------------------
39978   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
39981  *-------------------------------------------------------------------------------
39982  * Hydro Power
39983  *-------------------------------------------------------------------------------
39984   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
39987  *-------------------------------------------------------------------------------
39988  * System Integration:
39989  * - Capacity constraint
39990  * - Flexibility constraint
39991  * - Grid Investment
39992  * - Capacity growth constraint
39993  *-------------------------------------------------------------------------------
39994   
39996   
39997   
39998  * Renewable CES
39999   
40000  * Definition of the renewable CES
40001  eqq_elintren_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40002      Q('ces_elintren',t,n) =e=  q0('elintren',n)*( alpha('elwind',n)*(Q('ces_elwind',t,n)/q0('elwind',n))**rho('elintren',t)+ alpha('elpv',n)*(Q('ces_elpv',t,n)/q0('elpv',n))**rho('elintren',t)+ alpha('elcsp',n)*(Q('ces_elcsp',t,n)/q0('elcsp',n))**rho('elintren',t) )**(1/rho('elintren',t));
40003   
40004  * Capacity constraint
40005   
40007  eqfirm_capacity_c_usa(t,n)$(map_clt_n('c_usa',n) and (not tfix(t)) and year(t) gt 2005)..
40008                   sum(jel_firm, K_EN(jel_firm,t,n))
40009                   + (sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n) * cap_factor(wind_class)) +
40010                      sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * cap_factor(wind_class))) *
40011                          cv_coeff * exp(cv_exp * Q_EN('elwind',t,n) / Q_EN.l('el',t,n))
40012                   + sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n) * solar_mu(solar_class,'elpv') / yearly_hours) *
40013                          cv_coeff * exp(cv_exp * Q_EN('elpv',t,n) / Q_EN.l('el',t,n))
40014                   =g= firm_coeff(n) * (Q_EN('el',t,n) -
40015                       sum(ices_el, QEL_OUT('edv',ices_el,t,n)) -
40016                       sum(ices_el, QEL_OUT('edvfr',ices_el,t,n))
40017                                       ) / yearly_hours
40018  ;
40020   
40021  * Flexibility constraint
40022  eqflex_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40023          Q_EL_FLEX(t,n) =e= sum(jel,Q_EN(jel,t,n) * flex_coeff(jel)) +
40024                             ( Q_EN('el',t,n) -
40025                             sum(ices_el,QEL_OUT('edv',ices_el,t,n)) -
40026                             sum(ices_el,QEL_OUT('edvfr',ices_el,t,n))
40027                             ) * flex_coeff('load')
40028  ;
40029   
40030  * Grid
40031   
40032  ** Grid depreciation and investments
40033  eqk_en_grid_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
40034                  K_EN_GRID(tp1,n) =e= K_EN_GRID(t,n)*(1-grid_delta(tp1,n))**tlen(t)
40035                                        + tlen(t) * I_EN_GRID(t,n) / grid_cost;
40036   
40037  ** Grid adjustment to power capacity
40038  eqk_en_grid_to_k_en_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40039                  K_EN_GRID(t,n) =e= sum(jel_stdgrid, K_EN(jel_stdgrid,t,n)) +
40040                                     ( sum((wind_dist,wind_class), K_EN_WINDON(wind_dist,wind_class,t,n) * grid_trans_cost('elwindon',wind_dist) +
40041                                       sum(wind_depth,K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * grid_trans_cost('elwindoff',wind_dist))) +
40042                                       sum(solar_class,K_EN_PV('far',solar_class,t,n) * grid_trans_cost('elpv','far'))+
40043                                       sum(solar_class,K_EN_CSP('far',solar_class,t,n) * grid_trans_cost('elcsp','far'))
40044                                     ) / grid_cost +
40045                                     (K_EN('elwindon',t,n) + K_EN('elwindoff',t,n)) * (1 + grid_coeff('elwind','mult') * (Q_EN('elwind',t,n) / Q_EN.l('el',t,n))**grid_coeff('elwind','exp')) +
40046                                      K_EN('elpv',t,n) * (1 + grid_coeff('elpv','mult') * (Q_EN('elpv',t,n) / Q_EN.l('el',t,n))**grid_coeff('elpv','exp')) +
40047                                      K_EN('elcsp',t,n);
40048  ** CSP accounts for itself without markups because the mark up here is related to the need for integration of VREs, but it is not a VRE...
40049   
40050  * Capacity growth constraint
40051  eqcap_growth_c_usa(jinv,t,tp1,tp2,n)$((map_clt_n('c_usa',n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh)) and mkt_growth_rate(jinv,tp1,n))..
40052                      I_EN(jinv,tp1,n) / MCOST_INV(jinv,tp1,n) =l= (I_EN(jinv,t,n) / MCOST_INV(jinv,t,n)) *
40053                      (1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3;
40054   
40055  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
40058  *-------------------------------------------------------------------------------
40059  * Nuclear power plants
40060  *-------------------------------------------------------------------------------
40061   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
40064  *-------------------------------------------------------------------------------
40065  * GHG module
40066  * - CH4 FFI + CH4 waste + CH4 open fires
40067  * - N2O FFI + N2O waste + N2O open fires
40068  *-------------------------------------------------------------------------------
40069   
40071   
40072  * CH4, N2O waste emissions
40073  eqq_emi_waste_c_usa(waste,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
40074                  Q_EMI(waste,t,n) =e= ghg_baseline(waste,t,n) - Q_EMI_ABAT(waste,t,n);
40075   
40076  * n2o FFI
40077  eqq_emi_n2o_ffi_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
40078    Q_EMI('n2o_ffi',t,n) =e= ( emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN('coal',jfed,t,n))) +
40079                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN('wbio',jfed,t,n))) +
40080                          emi_fac('n2o_ffi','elcigcc') * Q_IN('coal','elcigcc',t,n) +
40081                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN('coal','elpc_ccs',t,n) +
40082                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN('coal','elpc_oxy',t,n) +
40083                          emi_fac('n2o_ffi','elbigcc') * Q_IN('wbio','elbigcc',t,n) +
40084                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('oil',jfed,t,n)) +
40085                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,t,n) and sum(jel$sameas(jel,jfed),1)), Q_IN('gas',jfed,t,n)) +
40086                          emi_fac('n2o_ffi','nelgas') * Q_IN('gas','nelgas',t,n) +
40087                          emi_fac('n2o_ffi','nelcoal') * Q_IN('coal','nelcoaltr',t,n) +
40088                          emi_fac('n2o_ffi','neloil') * Q_IN('oil','neloil',t,n) +
40089                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN('oil',jfed,t,n)) +
40090                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN(fuel,jfed,t,n)) +
40091                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN('trbiofuel','neltrbiofuel',t,n) +
40092                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN('trbiomass','neltrbiomass',t,n)
40093                        ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('n2o_ffi',tt,n) /
40094                        (emi_fac('n2o_ffi','elpc') * sum(j$map_j('elpc',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('coal',jfed,tt,n))) +
40095                          emi_fac('n2o_ffi','elpb') * sum(j$map_j('elpb',j), sum(jfed$(sameas(jfed,j)), Q_IN.l('wbio',jfed,tt,n))) +
40096                          emi_fac('n2o_ffi','elcigcc') * Q_IN.l('coal','elcigcc',tt,n) +
40097                          emi_fac('n2o_ffi','elpc_ccs') * Q_IN.l('coal','elpc_ccs',tt,n) +
40098                          emi_fac('n2o_ffi','elpc_oxy') * Q_IN.l('coal','elpc_oxy',tt,n) +
40099                          emi_fac('n2o_ffi','elbigcc') * Q_IN.l('wbio','elbigcc',tt,n) +
40100                          emi_fac('n2o_ffi','eloil') * sum(jfed$(csi('oil',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('oil',jfed,tt,n)) +
40101                          emi_fac('n2o_ffi','elgas') * sum(jfed$(csi('gas',jfed,tt,n) and sum(jel$sameas(jel,jfed),1)), Q_IN.l('gas',jfed,tt,n)) +
40102                          emi_fac('n2o_ffi','nelgas') * Q_IN.l('gas','nelgas',tt,n) +
40103                          emi_fac('n2o_ffi','nelcoal') * Q_IN.l('coal','nelcoaltr',tt,n) +
40104                          emi_fac('n2o_ffi','neloil') * Q_IN.l('oil','neloil',tt,n) +
40105                          emi_fac('n2o_ffi','trad_cars') * sum(transp_qact('oil',jfed),Q_IN.l('oil',jfed,tt,n)) +
40106                          emi_fac('n2o_ffi','hybrid') * sum(transp_qact(fuel,jfed)$(sameas(fuel,'trbiofuel') or sameas(fuel,'advbiofuel')),Q_IN.l(fuel,jfed,tt,n)) +
40107                          emi_fac('n2o_ffi','neltrbiofuel') * Q_IN.l('trbiofuel','neltrbiofuel',tt,n) +
40108                          emi_fac('n2o_ffi','neltrbiomass') * Q_IN.l('trbiomass','neltrbiomass',tt,n))) - Q_EMI_ABAT('n2o_ffi',t,n);
40109   
40110  * ch4 FFI
40111  eqq_emi_ch4_ffi_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2015))..
40112    Q_EMI('ch4_ffi',t,n) =e= div0(( emi_ffac('ch4_ffi','oil',t,n) * Q_FUEL('oil',t,n) +
40115  emi_ffac('ch4_ffi','gas',t,n) * Q_OUT('gas',t,n) +
40116  emi_ffac('ch4_ffi','coal',t,n) * Q_OUT('coal',t,n)
40117                              ) * smax(tt$(year(tt) eq 2015), q_emi_valid_ghg('ch4_ffi',tt,n)) ,
40118                             smax(tt$(year(tt) eq 2015),
40119                               emi_ffac('ch4_ffi','oil',tt,n) * Q_FUEL.l('oil',tt,n) +
40122  emi_ffac('ch4_ffi','gas',tt,n) * Q_OUT.l('gas',tt,n) +
40123  emi_ffac('ch4_ffi','coal',tt,n) * Q_OUT.l('coal',tt,n)
40124                              ))  - Q_EMI_ABAT('ch4_ffi',t,n);
40125   
40126  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
40129  *-------------------------------------------------------------------------------
40130  * F-gases
40131  * - LLF
40132  * - SLF
40133  *-------------------------------------------------------------------------------
40134   
40136   
40137  * F-gases emissions
40138  eqq_emi_fgases_c_usa(fgases,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t)>2010))..
40139                  Q_EMI(fgases,t,n) =e= fgases_baseline(fgases,t,n) - Q_EMI_ABAT(fgases,t,n);
40140   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
40143  *-------------------------------------------------------------------------------
40144  * Landuse [simplified version of the land-use model]
40145  *-------------------------------------------------------------------------------
40146   
40148   
40149  * Quantity of woody biomass. distributed as solid biomass for biomass plant, advanced biofuel and traditional biofuel.
40150  eq_wbio_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40151      Q_FUEL('wbio',t,n) =e= sum(jfed$csi('wbio',jfed,t,n), Q_IN('wbio',jfed,t,n)) + Q_FUEL('advbiofuel',t,n) + Q_FUEL('trbiofuel',t,n);
40152   
40154  * Cost of all woody biomass produced for advanced biofuels and woody biomass
40155  eqcost_pes_wbio_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40156      COST_FUEL('wbio',t,n) =e= Q_FUEL('wbio',t,n) * Q_FUEL('wbio',t,n) * wbio2_price;
40158   
40159  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
40162  *-------------------------------------------------------------------------------
40163  * Bioenergy power plant
40164  *-------------------------------------------------------------------------------
40165   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
40168  *-------------------------------------------------------------------------------
40169  * Traditional Biofuels
40170  * - Requires the precedence of mod_landuse
40171  *-------------------------------------------------------------------------------
40172   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
40175  *-------------------------------------------------------------------------------
40176  * Advanced biofuel
40177  * - Require the precedence of mod_landuse
40178  *-------------------------------------------------------------------------------
40179   
40181   
40182  * Limitations for nel backstops
40183  eqq_en_lim_advbiofuel_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
40184               Q_FUEL('advbiofuel',tp1,n) - Q_FUEL('advbiofuel',t,n) =l=
40185               alp_nelback * (1-(Q_FUEL('advbiofuel',tp1,n)/Q_FUEL.up('advbiofuel',tp1,n))) * Q_FUEL('advbiofuel',tp1,n);
40186   
40187  * Peculiarity of advbiofuel
40188  eqmcost_fuel_advbiofuel_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40189                  MCOST_FUEL('advbiofuel',t,n) =e= MCOST_INV('nelback',t,n);
40190   
40191  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
40194  *-------------------------------------------------------------------------------
40195  * Carbon Capture and Sequestration
40196  *-------------------------------------------------------------------------------
40197   
40199   
40200  eqq_emi_ccs_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40201                  Q_EMI('ccs_plant',t,n) =e=
40202                                   sum((fuel,jfed)$(jccs(jfed) and csi(fuel,jfed,t,n)),
40203                                       Q_IN(fuel,jfed,t,n) * emi_sys('co2ffi',t,n) * ccs_emi_capt(fuel) * ccs_capture_eff(jfed))
40204  ;
40205   
40206  eqcost_emi_sinks_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40207                  COST_EMI('ccs_plant',t,n) =e=
40208                           sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_transp_coeff * c2co2 * 1e-3 * ccs_stor_dist_avg(n,ccs_stor) +
40209                                         Q_CCS('ccs_plant',ccs_stor,t,n) * ccs_stor_cost(ccs_stor,n) * c2co2)
40210  ;
40211   
40212  eq_stor_ccs_cum_c_usa(ccs_stor,tp1,t,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and tnofirst(t))..
40213                  CUM_Q_CCS(ccs_stor,tp1,n) =e= CUM_Q_CCS(ccs_stor,t,n) * (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t) + sum(sink, tlen(t) * Q_CCS(sink,ccs_stor,t,n))
40214  ;
40215   
40216  eq_emi_stor_ccs_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40217                  Q_EMI('ccs_plant',t,n) =e= sum(ccs_stor, Q_CCS('ccs_plant',ccs_stor,t,n))
40218  ;
40219   
40220  eq_emi_leak_ccs_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40221                  Q_EMI('co2leak',t,n) =e= sum(ccs_stor, (1 - (1 - ccs_leak_rate(ccs_stor,t,n))**tlen(t)) * CUM_Q_CCS(ccs_stor,t,n)) / tlen(t);
40222   
40223  *-------------------------------------------------------------------------------
40225   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
40227  *-------------------------------------------------------------------------------
40228  * Coal for non-electric sectors
40229  * - Coke Plants
40230  * - Industrial and Commercial combined-heat-and-power (CHP)
40231  * - Others
40232  *-------------------------------------------------------------------------------
40233   
40235   
40236  eqcost_en_nelcoal_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40237           COST_EN('nelcoalabat',t,n) =e= 10e-3 * nelcoal_baseline(t,n) * emi_st('coal') *
40238                                          nelcoal_max_abat(t,n) *
40239                                          (nelcoal_cmac(n,'a') *
40240                                            Q_EN('nelcoalabat',t,n) /
40241                                              (nelcoal_max_abat(t,n) * nelcoal_baseline(t,n)) +
40242                                            nelcoal_cmac(n,'b') / nelcoal_cmac(n,'c') *
40243                                              (exp(nelcoal_cmac(n,'c') *
40244                                                (Q_EN('nelcoalabat',t,n)/
40245                                                  (nelcoal_max_abat(t,n) *
40246                                                      nelcoal_baseline(t,n))
40247                                                  ) - 1 )
40248                                              )
40249                                          );
40250   
40251  eqq_ncoalabat_monotone_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)))..
40252          Q_EN('nelcoalabat',tp1,n) =g= Q_EN('nelcoalabat',t,n);
40253   
40254  * ensure Q_EN is lower than K_EN for CCS as not in jel
40255  eqq_en_nelcoalccs_max_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40256          Q_EN('nelcoalccs',t,n) =l= K_EN('nelcoalccs',t,n);
40257   
40258  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
40261  *-------------------------------------------------------------------------------
40262  * Wind energy module
40263  * - onshore and offshore
40264  *-------------------------------------------------------------------------------
40265   
40267   
40268  * Capacity limits in the wind onshore electrical sector
40269  eqq_en_mu_windon_c_usa(wind_dist,wind_class,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and windon_pot(n,wind_dist,wind_class))..
40270      Q_EN_WINDON(wind_dist,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDON(wind_dist,wind_class,t,n);
40271   
40272  * Capacity limits in the wind offshore electrical sector
40273  eqq_en_mu_windoff_c_usa(wind_dist,wind_depth,wind_class,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
40274      Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) =l= wind_mu(wind_class) * K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n);
40275   
40276  * Wind onshore electrical generation plants (new)
40277  eqk_en_windon_c_usa(wind_dist,wind_class,t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windon_pot(n,wind_dist,wind_class))..
40278      K_EN_WINDON(wind_dist,wind_class,tp1,n) =e= K_EN_WINDON(wind_dist,wind_class,t,n) * (1 - delta_en('elwindon',t,n))**tlen(t) +
40279                                                  tlen(t) * I_EN_WINDON(wind_dist,wind_class,t,n) / MCOST_INV('elwindon',t,n);
40280   
40281  * Wind offshore electrical generation plants (new)
40282  eqk_en_windoff_c_usa(wind_dist,wind_depth,wind_class,t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and windoff_pot(n,wind_dist,wind_depth,wind_class))..
40283      K_EN_WINDOFF(wind_dist,wind_depth,wind_class,tp1,n) =e= K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) * (1 - delta_en('elwindoff',t,n))**tlen(t) +
40284                                                              tlen(t) * I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n) / MCOST_INV_WINDOFF(wind_depth,t,n);
40285   
40286  * Total onshore wind energy production
40287  eqq_en_windon_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40288                  Q_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),Q_EN_WINDON(wind_dist,wind_class,t,n));
40289   
40290  * Total offshore wind energy production
40291  eqq_en_windoff_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40292                  Q_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),Q_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
40293   
40294  * Total onshore wind capacity
40295  eqk_en_windon_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40296                  K_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),K_EN_WINDON(wind_dist,wind_class,t,n));
40297   
40298  * Total offshore wind capacity
40299  eqk_en_windoff_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40300                  K_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),K_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
40301   
40302  * Total onshore wind investment
40303  eqi_en_windon_sum_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
40304                  I_EN('elwindon',t,n) =e= sum((wind_dist,wind_class),I_EN_WINDON(wind_dist,wind_class,t,n));
40305   
40306  * Total offshore wind investment
40307  eqi_en_windoff_sum_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
40308                  I_EN('elwindoff',t,n) =e= sum((wind_dist,wind_depth,wind_class),I_EN_WINDOFF(wind_dist,wind_depth,wind_class,t,n));
40309   
40310  *-------------------------------------------------------------------------------
40312   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
40314  *-------------------------------------------------------------------------------
40315  * Solar Powerplants (PV and CSP) to the electrical system
40316  *-------------------------------------------------------------------------------
40317   
40318  *-------------------------------------------------------------------------------
40320   
40321   
40322  * Capacity limits in the pv electrical sector
40323  eqq_en_mu_pv_c_usa(solar_dist,solar_class,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and pv_pot(n,solar_dist,solar_class))..
40324                  Q_EN_PV(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elpv')*K_EN_PV(solar_dist,solar_class,t,n);
40325   
40326  * Capacity limits in the csp electrical sector
40327  eqq_en_mu_csp_c_usa(solar_dist,solar_class,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and csp_pot(n,solar_dist,solar_class))..
40328                  Q_EN_CSP(solar_dist,solar_class,t,n) =l= solar_mu(solar_class,'elcsp')*K_EN_CSP(solar_dist,solar_class,t,n);
40329   
40330  * PV electrical generation plants (new)
40331  eqk_en_pv_c_usa(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and pv_pot(n,solar_dist,solar_class))..
40332                  K_EN_PV(solar_dist,solar_class,tp1,n) =e= K_EN_PV(solar_dist,solar_class,t,n)*(1-delta_en('elpv',t,n))**tlen(t)
40333                                                                          +tlen(t)*I_EN_PV(solar_dist,solar_class,t,n)/MCOST_INV('elpv',t,n);
40334   
40335  * CSP electrical generation plants (new)
40336  eqk_en_csp_c_usa(solar_dist,solar_class,t,tp1,n)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and csp_pot(n,solar_dist,solar_class))..
40337                  K_EN_CSP(solar_dist,solar_class,tp1,n) =e= K_EN_CSP(solar_dist,solar_class,t,n)*(1-delta_en('elcsp',t,n))**tlen(t)
40338                                                                          +tlen(t)*I_EN_CSP(solar_dist,solar_class,t,n)/MCOST_INV('elcsp',t,n);
40339   
40340  * Total PV energy production
40341  eqq_en_pv_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40342                  Q_EN('elpv',t,n) =e= sum((solar_dist,solar_class),Q_EN_PV(solar_dist,solar_class,t,n));
40343   
40344  * Total CSP energy production
40345  eqq_en_csp_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40346                  Q_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),Q_EN_CSP(solar_dist,solar_class,t,n));
40347   
40348  * Total PV capacity
40349  eqk_en_pv_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40350                  K_EN('elpv',t,n) =e= sum((solar_dist,solar_class),K_EN_PV(solar_dist,solar_class,t,n));
40351   
40352  * Total CSP capacity
40353  eqk_en_csp_sum_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40354                  K_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),K_EN_CSP(solar_dist,solar_class,t,n));
40355   
40356  * Total PV investment
40357  eqi_en_pv_sum_c_usa(t,tp1,n)$(map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
40358                  I_EN('elpv',t,n) =e= sum((solar_dist,solar_class),I_EN_PV(solar_dist,solar_class,t,n));
40359   
40360  * Total CSP investment
40361  eqi_en_csp_sum_c_usa(t,tp1,n)$(map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))..
40362                  I_EN('elcsp',t,n) =e= sum((solar_dist,solar_class),I_EN_CSP(solar_dist,solar_class,t,n));
40363   
40364  * Capacity constraint in the competition area (e.g. neweuro is excluded for computational reasons, but the constraint is practically irrelevant)
40365  eqk_en_solar_comp_c_usa(t,n,solar_dist)$(map_clt_n('c_usa',n) and (not tfix(t)) and (inst_area(n,solar_dist) gt 1))..
40366                   sum(solar_class,K_EN_PV(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elpv') +
40367                                   K_EN_CSP(solar_dist,solar_class,t,n)*1e6/inst_density(n,'elcsp')) =l= inst_area(n,solar_dist);
40368   
40369   
40370   
40371  *-------------------------------------------------------------------------------
40373   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
40375  *-------------------------------------------------------------------------------
40376  * Technology development scenarios
40377  *-------------------------------------------------------------------------------
40378   
40380   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
40382  *-------------------------------------------------------------------------------
40383  * Oil Extraction
40384  * Options:
40385  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
40386  *-------------------------------------------------------------------------------
40387   
40389   
40390  * Capacity
40391  eqoilcap_c_usa(t,tp1,n,oilg)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
40392      OILCAP(tp1,n,oilg) =e= OILCAP(t,n,oilg) * (1-delta_oilg)**tlen(t) + tlen(t) * ADDOILCAP(t,n,oilg);
40393   
40394  * Production
40395  eqoilprod_c_usa(t,tp1,n,oilg)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
40396      OILPROD(tp1,n,oilg) =l= OILCAP(tp1,n,oilg);
40397   
40398  eqq_out_oil_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40399      Q_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), OILPROD(t,n,oilg));
40400   
40401  * Cumulative production
40402  eqcum_oil_c_usa(t,tp1,n,oilg)$((map_clt_n('c_usa',n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) and valid_oilg(oilg))..
40403      CUM_OIL(tp1,n,oilg) =e= CUM_OIL(t,n,oilg) + tlen(t) * OILPROD(t,n,oilg);
40404   
40405  * Cost
40406  eqcost_oil_c_usa(t,tp1,n,oilg)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
40407      COST_OIL(t,n,oilg) =e= oil_cost(oilg,n) * (0.9 + 0.1 * tlen(t) * (ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**3) +
40408                             oil_cost(oilg,n) * 0.1 * (tlen(t) * ADDOILCAP(t,n,oilg) / (sum(oilgg$map_oilgrade(oilg,oilgg), oil_esp_capacity(oilgg,'M',n))))**(1/3) +
40409                             oil_cum(oilg,n) * ((tlen(t) * OILPROD(t,n,oilg) + CUM_OIL(t,n,oilg)) / ((sum(oilgg$map_oilgrade(oilg,oilgg), oil_reserve(oilgg,'M',n)))))**3;
40410   
40411  * Investments
40412  eqi_oil_c_usa(t,tp1,n,oilg)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))) and valid_oilg(oilg))..
40413      I_OIL(t,n,oilg) =e= ADDOILCAP(t,n,oilg) * COST_OIL(t,n,oilg);
40414   
40415  * Total investment
40416  eqi_out_oil_c_usa(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))))..
40417      I_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), I_OIL(t,n,oilg));
40418   
40419  * Emissions
40420  eqq_emi_out_oil_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40421      Q_EMI_OUT('oil',t,n) =e= sum(oilg$valid_oilg(oilg), (oil_emi_st(oilg,n) + emi_sys('extract',t,n)) * OILPROD(t,n,oilg));
40422   
40423  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
40426  *-------------------------------------------------------------------------------
40427  * Uranium Resources
40428  *-------------------------------------------------------------------------------
40429   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
40432  *-------------------------------------------------------------------------------
40433  * Gas Resources
40434  *-------------------------------------------------------------------------------
40435   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
40438  *-------------------------------------------------------------------------------
40439  * Coal Resources
40440  *-------------------------------------------------------------------------------
40441   
40443   
40444   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
40446  *-------------------------------------------------------------------------------
40447  * Climate
40448  *
40449  * Represents the climate
40450  * - based on the DICE model equations
40451  * - Radiative forcing for non CO2 ghgs
40452  * - parameters calibrated to reproduce MAGICC6.4 default response
40453  *
40454  *  Options:
40455  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
40456  * - $setglobal cooperate_on_climate {'YES','NO'}
40457  * - 'YES'(default): Countries within a coalition act in cooperation
40458  *   'NO': Countries within a coalition act individually
40459  *
40460  *-------------------------------------------------------------------------------
40461   
40463   
40465   
40466  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
40469  *-------------------------------------------------------------------------------
40470  * Long-run Damages from Climate Change
40471  * - Economic impacts
40472  * - Adaptation
40473  *-------------------------------------------------------------------------------
40474   
40476   
40478   
40479  *-------------------------------------------------------------------------------
40481   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
40483  *-------------------------------------------------------------------------------
40484  * Light-duty Vehicles for Personal Transport
40485  *-------------------------------------------------------------------------------
40486   
40488   
40489  *** newcode
40490  eqq_inv_red_ban_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40491      I_EN('trad_cars',t,n)$(year(t) ge 2025) =l= dec_inv(t,n)*I_EN('trad_cars',t-1,n)$(year(t) ge 2025);
40492   
40493  ***
40494  *- Number of light duty vehicles
40495  eqnb_veh_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40496      sum(jveh,K_EN(jveh,t,n)) =e= ldv_total(t,n);
40497   
40498  *- Yearly energy demand of vehicles
40499  eqq_en_veh_c_usa(jveh,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40500      Q_EN(jveh,t,n) =e= fuel_cons(jveh,t,n) * K_EN(jveh,t,n);
40501   
40502  *-  Electricity consumed by grid-connected electric vehicles (plg_hybrid and edv)
40503  eqq_el_edv_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40504      fuel_cons('edv',t,n) * K_EN('edv',t,n) + elec_plg(t,n) * K_EN('plg_hybrid',t,n) =e= sum(ices_el,QEL_OUT('edv',ices_el,t,n));
40505   
40506  *- Investment cost for hybrid vehicles
40507  eqmcost_inv_hybrid_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
40508                  MCOST_INV('hybrid',t,n) =e= (glider_manufacture_cost+(size_battery('hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('hybrid',n) + ELMOTOR_COST(t)*size_elmotor('hybrid') + ice_cost*size_ice('hybrid') + tank_cost('hybrid')))/(1e6*reg_discount_veh(n));
40509   
40510  *- Investment cost for plug-in hybrid vehicles
40511  eqmcost_inv_plghybrid_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
40512                  MCOST_INV('plg_hybrid',t,n) =e= (glider_manufacture_cost + (size_battery('plg_hybrid',n)*MCOST_INV('battery',t,n)*bat_multip('plg_hybrid',n)  + ELMOTOR_COST(t)*size_elmotor('plg_hybrid') + ice_cost*size_ice('plg_hybrid') + tank_cost('plg_hybrid') + charger_cost))/(1e6*reg_discount_veh(n));
40513   
40514  *- Investment cost for electric drive vehicles
40515  eqmcost_inv_edv_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
40516                  MCOST_INV('edv',t,n) =e= (glider_manufacture_cost + size_battery('edv',n) * MCOST_INV('battery',t,n) + ELMOTOR_COST(t)*size_elmotor('edv') + charger_cost + charging_station)/(1e6*reg_discount_veh(n));
40517   
40518  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
40521  *-------------------------------------------------------------------------------
40522  * Road Freight Transport
40523  *-------------------------------------------------------------------------------
40525   
40526  *-  Number of freight vehicles
40527  eqnb_frtveh_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and tnofirst(t))..
40528                  sum(jfrt,K_EN(jfrt,t,n)) =e= stfr_total(t,n);
40529   
40530  *-  Yearly fuel consumption of freight vehicles
40531  eqq_en_frtveh_c_usa(jfrt,t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40532                  Q_EN(jfrt,t,n) =e= fuel_cons_stfr(jfrt,t,n) * K_EN(jfrt,t,n);
40533   
40534  *-  Electricity consumed by grid-connected electric freight vehicles (plg_hbd_stfr and edv_stfr)
40535  eqq_el_frtedv_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)))..
40536                  fuel_cons_stfr('edv_stfr',t,n) * K_EN('edv_stfr',t,n) + elec_plg_stfr(t,n) * K_EN('plg_hbd_stfr',t,n) =e= sum(ices_el,QEL_OUT('edvfr',ices_el,t,n));
40537   
40538  *-  Investment cost for hbd_stfr vehicle
40539  eqmcost_inv_hbd_stfr_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
40540                  MCOST_INV('hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('hbd_stfr',n) * MCOST_INV('battery',t,n) * 1.2) + disutility_costs_stfr('hbd_stfr',t,n)) / (reg_discount_veh(n) * 1e6);
40541   
40542  *-  Investment cost for plug-in hbd_stfr vehicle
40543  eqmcost_inv_plghbd_stfr_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
40544                  MCOST_INV('plg_hbd_stfr',t,n) =e= (inv_cost_frt('trad_stfr') + (size_battery_freight('plg_hbd_stfr',n) * MCOST_INV('battery',t,n) * 2.23 ) + disutility_costs_stfr('plg_hbd_stfr',t,n)) * 1e-6;
40545   
40546  *-  Investment cost for electric drive vehicle
40547  eqmcost_inv_edv_stfr_c_usa(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh)) and (year(t) ge rd_time('battery','start')))..
40548                  MCOST_INV('edv_stfr',t,n) =e= (inv_cost_frt('trad_stfr') *0.95 + size_battery_freight('edv_stfr',n) * MCOST_INV('battery',t,n) * 1.7 + disutility_costs_stfr('edv_stfr',t,n)) * 1e-6;
40549   
40550  *-------------------------------------------------------------------------------
40552   
40553   
40554   
40555   
40556   
40557   
40558  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
40560  *-------------------------------------------------------------------------------
40561  * Traditional Biomass
40562  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
40563  *  - require post_process to be launch before
40564  *-------------------------------------------------------------------------------
40565   
40567   
40568  * Optional modules
40569   
40570  * Policy modules
40571   
40572  * Calibration
40575   
40576   
40577  model witch_c_usa /
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
40579  *-------------------------------------------------------------------------------
40580  * Call modules by order
40581  *-------------------------------------------------------------------------------
40585   
40586  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
40588  *-------------------------------------------------------------------------------
40589  * Algorithm
40590  *-------------------------------------------------------------------------------
40591   
40593   
40594  eqobj_c_usa
40595   
40596  *-------------------------------------------------------------------------------
40598   
40599  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
40601  *-------------------------------------------------------------------------------
40602  * Time
40603  * - Temporal structure
40604  * - Fixed time periods
40605  * - States of the world
40606  *-------------------------------------------------------------------------------
40607   
40609   
40610  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
40612  *-------------------------------------------------------------------------------
40613  * Geographic dimension and mapping with countries
40614  *-------------------------------------------------------------------------------
40615   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
40618  *-------------------------------------------------------------------------------
40619  * Non-Cooperative Setup
40620  *
40621  * Each region is defined as an individual coalition.
40622  *
40623  *-------------------------------------------------------------------------------
40624   
40626   
40627  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
40629  *-------------------------------------------------------------------------------
40630  * Welfare
40631  *-------------------------------------------------------------------------------
40632   
40634   
40635  equtility_c_usa
40636   
40637  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
40640  *-------------------------------------------------------------------------------
40641  * Economy
40642  * - Production and Consumption definition
40643  * - Top-level of the production function
40644  * Options:
40645  * --original_ssp=1 : original SSP population and GDP data
40646  *-------------------------------------------------------------------------------
40647   
40649   
40650  eqk_c_usa
40651  eqq_cc_c_usa
40652  eqq_fen_c_usa
40653  eqq_y_c_usa
40654   
40655  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
40658  *-------------------------------------------------------------------------------
40659  * Energy sector
40660  *-------------------------------------------------------------------------------
40661   
40663   
40664  eq_mkt_clearing_oil_c_usa
40665  eqcost_pes_c_usa
40666  eqcost_ses_c_usa
40667  eqk_en_c_usa
40668  eqq_ces_el_c_usa
40669  eqq_ces_nelgas_c_usa
40670  eqq_el2_c_usa
40671  eqq_el_c_usa
40672  eqq_elff_c_usa
40673  eqq_en_c_usa
40674  eqq_en_in_c_usa
40675  eqq_en_mu_c_usa
40676  eqq_en_tree_c_usa
40677  eqq_nel_c_usa
40678  eqq_nelog_c_usa
40679  eqq_fuel_c_usa
40680  eqq_elffren_c_usa
40681   
40682  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
40685  *-------------------------------------------------------------------------------
40686  * Carbon Emissions
40687  * - Total CO2 emissions and CO2 Fossil fuel and Industry
40688  * - CO2 emission costs
40689  * - GHG permit market
40690  *-------------------------------------------------------------------------------
40691   
40693   
40694  eqq_emi_lim_c_usa
40695  eqq_emi_tree_c_usa
40696  eqq_emi_co2ffi_c_usa
40697   
40698  eqcost_emi_co2_c_usa
40699   
40700  eq_mkt_clearing_nip_c_usa
40701   
40702  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
40705  *-------------------------------------------------------------------------------
40706  * Research & Development
40707  * Options:
40708  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
40709  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
40710  *-------------------------------------------------------------------------------
40711   
40713   
40714  eqk_rd_c_usa
40715  eqspill_coop_c_usa
40716  eqspill_lead_c_usa
40717  eqspill_foll_c_usa
40718  eqmcost_inv_back_c_usa
40719  eqmcost_inv_back_lbd_c_usa
40720   
40721  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
40724  *-------------------------------------------------------------------------------
40725  * Default Climate Policy Implementation
40726  *
40727  * Options:
40728  *    --policy={bau (default),ctax}
40729  *        Implement a climate policy setting
40730  *  [ --scen= ]
40731  *        Policy variant.
40732  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
40733  *          * XXX for a fixed percentage/yr (e.g. 5) growth
40734  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
40735  *  [ --ctax_year=2020 ]
40736  *        Starting year of the carbon tax
40737  *  [ --ctax_initial=30 ]
40738  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
40739  *
40740  *-------------------------------------------------------------------------------
40742   
40743  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
40745  *-------------------------------------------------------------------------------
40746  * Energy efficiency
40747  *-------------------------------------------------------------------------------
40748   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
40751  *-------------------------------------------------------------------------------
40752  * Hydro Power
40753  *-------------------------------------------------------------------------------
40754   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
40757  *-------------------------------------------------------------------------------
40758  * System Integration:
40759  * - Capacity constraint
40760  * - Flexibility constraint
40761  * - Grid Investment
40762  * - Capacity growth constraint
40763  *-------------------------------------------------------------------------------
40764   
40766   
40767  eqq_elintren_c_usa
40768  eqflex_c_usa
40769  eqk_en_grid_c_usa
40770  eqk_en_grid_to_k_en_c_usa
40771  eqfirm_capacity_c_usa
40772  eqcap_growth_c_usa
40773   
40774  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
40777  *-------------------------------------------------------------------------------
40778  * Nuclear power plants
40779  *-------------------------------------------------------------------------------
40780   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
40783  *-------------------------------------------------------------------------------
40784  * GHG module
40785  * - CH4 FFI + CH4 waste + CH4 open fires
40786  * - N2O FFI + N2O waste + N2O open fires
40787  *-------------------------------------------------------------------------------
40788   
40790   
40791  eqq_emi_waste_c_usa
40792  eqq_emi_n2o_ffi_c_usa
40793  eqq_emi_ch4_ffi_c_usa
40794   
40795  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
40798  *-------------------------------------------------------------------------------
40799  * F-gases
40800  * - LLF
40801  * - SLF
40802  *-------------------------------------------------------------------------------
40803   
40805   
40806  eqq_emi_fgases_c_usa
40807   
40808  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
40811  *-------------------------------------------------------------------------------
40812  * Landuse [simplified version of the land-use model]
40813  *-------------------------------------------------------------------------------
40814   
40816   
40817  eq_wbio_c_usa
40818  eqcost_pes_wbio_c_usa
40819   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
40822  *-------------------------------------------------------------------------------
40823  * Bioenergy power plant
40824  *-------------------------------------------------------------------------------
40825   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
40828  *-------------------------------------------------------------------------------
40829  * Traditional Biofuels
40830  * - Requires the precedence of mod_landuse
40831  *-------------------------------------------------------------------------------
40832   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
40835  *-------------------------------------------------------------------------------
40836  * Advanced biofuel
40837  * - Require the precedence of mod_landuse
40838  *-------------------------------------------------------------------------------
40839   
40841   
40842  eqq_en_lim_advbiofuel_c_usa
40843  eqmcost_fuel_advbiofuel_c_usa
40844   
40845  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
40848  *-------------------------------------------------------------------------------
40849  * Carbon Capture and Sequestration
40850  *-------------------------------------------------------------------------------
40851   
40853   
40854  eqq_emi_ccs_c_usa
40855  eqcost_emi_sinks_c_usa
40856  eq_stor_ccs_cum_c_usa
40857  eq_emi_stor_ccs_c_usa
40858  eq_emi_leak_ccs_c_usa
40859   
40860  *-------------------------------------------------------------------------------
40862   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
40864  *-------------------------------------------------------------------------------
40865  * Coal for non-electric sectors
40866  * - Coke Plants
40867  * - Industrial and Commercial combined-heat-and-power (CHP)
40868  * - Others
40869  *-------------------------------------------------------------------------------
40870   
40872   
40873  eqcost_en_nelcoal_c_usa
40874  eqq_ncoalabat_monotone_c_usa
40875  eqq_en_nelcoalccs_max_c_usa
40876   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
40879  *-------------------------------------------------------------------------------
40880  * Wind energy module
40881  * - onshore and offshore
40882  *-------------------------------------------------------------------------------
40883   
40885   
40886  eqq_en_mu_windon_c_usa
40887  eqq_en_mu_windoff_c_usa
40888  eqk_en_windon_c_usa
40889  eqk_en_windoff_c_usa
40890  eqq_en_windon_sum_c_usa
40891  eqq_en_windoff_sum_c_usa
40892  eqk_en_windon_sum_c_usa
40893  eqk_en_windoff_sum_c_usa
40894  eqi_en_windon_sum_c_usa
40895  eqi_en_windoff_sum_c_usa
40896   
40898   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
40900  *-------------------------------------------------------------------------------
40901  * Solar Powerplants (PV and CSP) to the electrical system
40902  *-------------------------------------------------------------------------------
40903   
40904  *-------------------------------------------------------------------------------
40906   
40907  eqq_en_mu_pv_c_usa
40908  eqq_en_mu_csp_c_usa
40909  eqk_en_pv_c_usa
40910  eqk_en_csp_c_usa
40911  eqq_en_pv_sum_c_usa
40912  eqq_en_csp_sum_c_usa
40913  eqk_en_pv_sum_c_usa
40914  eqk_en_csp_sum_c_usa
40915  eqi_en_pv_sum_c_usa
40916  eqi_en_csp_sum_c_usa
40917  eqk_en_solar_comp_c_usa
40918   
40919  *-------------------------------------------------------------------------------
40921   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
40923  *-------------------------------------------------------------------------------
40924  * Technology development scenarios
40925  *-------------------------------------------------------------------------------
40926   
40928   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
40930  *-------------------------------------------------------------------------------
40931  * Oil Extraction
40932  * Options:
40933  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
40934  *-------------------------------------------------------------------------------
40935   
40937   
40938  eqoilcap_c_usa
40939  eqoilprod_c_usa
40940  eqq_out_oil_c_usa
40941  eqcum_oil_c_usa
40942  eqcost_oil_c_usa
40943  eqi_oil_c_usa
40944  eqi_out_oil_c_usa
40945  eqq_emi_out_oil_c_usa
40946   
40947  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
40950  *-------------------------------------------------------------------------------
40951  * Uranium Resources
40952  *-------------------------------------------------------------------------------
40953   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
40956  *-------------------------------------------------------------------------------
40957  * Gas Resources
40958  *-------------------------------------------------------------------------------
40959   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
40962  *-------------------------------------------------------------------------------
40963  * Coal Resources
40964  *-------------------------------------------------------------------------------
40965   
40967   
40968   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
40970  *-------------------------------------------------------------------------------
40971  * Climate
40972  *
40973  * Represents the climate
40974  * - based on the DICE model equations
40975  * - Radiative forcing for non CO2 ghgs
40976  * - parameters calibrated to reproduce MAGICC6.4 default response
40977  *
40978  *  Options:
40979  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
40980  * - $setglobal cooperate_on_climate {'YES','NO'}
40981  * - 'YES'(default): Countries within a coalition act in cooperation
40982  *   'NO': Countries within a coalition act individually
40983  *
40984  *-------------------------------------------------------------------------------
40985   
40987   
40989   
40990  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
40993  *-------------------------------------------------------------------------------
40994  * Long-run Damages from Climate Change
40995  * - Economic impacts
40996  * - Adaptation
40997  *-------------------------------------------------------------------------------
40998   
41000   
41002   
41003  *-------------------------------------------------------------------------------
41005   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
41007  *-------------------------------------------------------------------------------
41008  * Light-duty Vehicles for Personal Transport
41009  *-------------------------------------------------------------------------------
41010   
41012   
41013  eqnb_veh_c_usa
41014  eqq_en_veh_c_usa
41015  eqq_el_edv_c_usa
41016  eqmcost_inv_hybrid_c_usa
41017  eqmcost_inv_plghybrid_c_usa
41018  eqmcost_inv_edv_c_usa
41019  *** newcode
41020  eqq_inv_red_ban_c_usa
41021  ***
41022  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
41025  *-------------------------------------------------------------------------------
41026  * Road Freight Transport
41027  *-------------------------------------------------------------------------------
41029   
41030  eqnb_frtveh_c_usa
41031  eqq_en_frtveh_c_usa
41032  eqq_el_frtedv_c_usa
41033  eqmcost_inv_hbd_stfr_c_usa
41034  eqmcost_inv_plghbd_stfr_c_usa
41035  eqmcost_inv_edv_stfr_c_usa
41036   
41037  *-------------------------------------------------------------------------------
41039   
41040   
41041   
41042   
41043   
41044   
41045  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
41047  *-------------------------------------------------------------------------------
41048  * Traditional Biomass
41049  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
41050  *  - require post_process to be launch before
41051  *-------------------------------------------------------------------------------
41052   
41054   
41055  * Optional modules
41056   
41057  * Policy modules
41058   
41059  * Calibration
41062  /;
41063   
41064  witch_c_usa.optfile=1;   # the option file solvername.opt is to be used
41065  witch_c_usa.holdfixed=1; # treat fixed values as constant
41066  witch_c_usa.scaleopt=1;  # Use scaling for better gradients estimation
41067  witch_c_usa.solvelink=3; # Use parallel or sequential solving
41068   
41073   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\forsameclt.gms
41075  $macro forsameclt(action,clt) \
41078    if(sameas(&clt,'c_brazil'), &action(c_brazil)); \
41083    if(sameas(&clt,'c_canada'), &action(c_canada)); \
41088    if(sameas(&clt,'c_china'), &action(c_china)); \
41093    if(sameas(&clt,'c_europe'), &action(c_europe)); \
41098    if(sameas(&clt,'c_india'), &action(c_india)); \
41103    if(sameas(&clt,'c_indonesia'), &action(c_indonesia)); \
41108    if(sameas(&clt,'c_jpnkor'), &action(c_jpnkor)); \
41113    if(sameas(&clt,'c_laca'), &action(c_laca)); \
41118    if(sameas(&clt,'c_mena'), &action(c_mena)); \
41123    if(sameas(&clt,'c_mexico'), &action(c_mexico)); \
41128    if(sameas(&clt,'c_oceania'), &action(c_oceania)); \
41133    if(sameas(&clt,'c_sasia'), &action(c_sasia)); \
41138    if(sameas(&clt,'c_seasia'), &action(c_seasia)); \
41143    if(sameas(&clt,'c_southafrica'), &action(c_southafrica)); \
41148    if(sameas(&clt,'c_ssa'), &action(c_ssa)); \
41153    if(sameas(&clt,'c_te'), &action(c_te)); \
41158    if(sameas(&clt,'c_usa'), &action(c_usa)); \
41163  ;
41164   
41165  *-------------------------------------------------------------------------------
41166  * Main loop
41167  *-------------------------------------------------------------------------------
41168   
41169  stop_run = 0;
41170  count_run = 1;
41171  loop(to_run(run)$(stop_run eq 0),
41172   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
41174  *-------------------------------------------------------------------------------
41175  * Report model progress
41176  *-------------------------------------------------------------------------------
41177   
41179   
41181   
41182  put errdat;
41183  * Horizontal separator with run text
41184  put '>' run.tl:3 ;
41185  put ' ----';
41186  loop(ierr,
41187      put '---------';
41188  );
41189  loop(timeiterrep,
41190      put '----------';
41191  );
41192  put /;
41193  putclose errdat;
41194   
41196   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
41198  *-------------------------------------------------------------------------------
41199  * Call modules by order
41200  *-------------------------------------------------------------------------------
41204   
41205  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
41207  *-------------------------------------------------------------------------------
41208  * Algorithm
41209  *-------------------------------------------------------------------------------
41210   
41212   
41213  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
41215  *-------------------------------------------------------------------------------
41216  * Time
41217  * - Temporal structure
41218  * - Fixed time periods
41219  * - States of the world
41220  *-------------------------------------------------------------------------------
41221   
41223   
41224  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
41226  *-------------------------------------------------------------------------------
41227  * Geographic dimension and mapping with countries
41228  *-------------------------------------------------------------------------------
41229   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
41232  *-------------------------------------------------------------------------------
41233  * Non-Cooperative Setup
41234  *
41235  * Each region is defined as an individual coalition.
41236  *
41237  *-------------------------------------------------------------------------------
41238   
41240   
41241  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
41243  *-------------------------------------------------------------------------------
41244  * Welfare
41245  *-------------------------------------------------------------------------------
41246   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
41249  *-------------------------------------------------------------------------------
41250  * Economy
41251  * - Production and Consumption definition
41252  * - Top-level of the production function
41253  * Options:
41254  * --original_ssp=1 : original SSP population and GDP data
41255  *-------------------------------------------------------------------------------
41256   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
41259  *-------------------------------------------------------------------------------
41260  * Energy sector
41261  *-------------------------------------------------------------------------------
41262   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
41265  *-------------------------------------------------------------------------------
41266  * Carbon Emissions
41267  * - Total CO2 emissions and CO2 Fossil fuel and Industry
41268  * - CO2 emission costs
41269  * - GHG permit market
41270  *-------------------------------------------------------------------------------
41271   
41273   
41274  Q_EMI.up(c_mkt,t,n)$((not tfix(t)) and (trading_t(c_mkt,t,n))) = 15;
41275  Q_EMI.lo(c_mkt,t,n)$((not tfix(t)) and (trading_t(c_mkt,t,n))) = -15;
41276  Q_EMI.fx(c_mkt,t,n)$((not tfix(t)) and (not trading_t(c_mkt,t,n))) = 0;
41277   
41278  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
41281  *-------------------------------------------------------------------------------
41282  * Research & Development
41283  * Options:
41284  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
41285  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
41286  *-------------------------------------------------------------------------------
41287   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
41290  *-------------------------------------------------------------------------------
41291  * Default Climate Policy Implementation
41292  *
41293  * Options:
41294  *    --policy={bau (default),ctax}
41295  *        Implement a climate policy setting
41296  *  [ --scen= ]
41297  *        Policy variant.
41298  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
41299  *          * XXX for a fixed percentage/yr (e.g. 5) growth
41300  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
41301  *  [ --ctax_year=2020 ]
41302  *        Starting year of the carbon tax
41303  *  [ --ctax_initial=30 ]
41304  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
41305  *
41306  *-------------------------------------------------------------------------------
41308   
41309  internal_clt(c_mkt,clt)$(internal(c_mkt) and (sum((t,n)$(map_clt_n(clt,n) and trading_t(c_mkt,t,n)),1) ge 1)) = yes;
41310  internal_clt(f_mkt,clt)$(internal(f_mkt) and (sum((t,n)$(map_clt_n(clt,n) and trading_t(f_mkt,t,n)),1) ge 1)) = yes;
41311   
41312  trading_t(c_mkt,t,n) = yes$(trading_t(c_mkt,t,n) and (not tfix(t)));
41313   
41314  * By default no trading -> no cap, if t_cap was not set
41315  if(card(t_cap) eq 0,
41316    t_cap(t,n) = yes$(sum(c_mkt$trading_t(c_mkt,t,n),1));
41317  );
41318   
41320   
41321  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
41323  *-------------------------------------------------------------------------------
41324  * Energy efficiency
41325  *-------------------------------------------------------------------------------
41326   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
41329  *-------------------------------------------------------------------------------
41330  * Hydro Power
41331  *-------------------------------------------------------------------------------
41332   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
41335  *-------------------------------------------------------------------------------
41336  * System Integration:
41337  * - Capacity constraint
41338  * - Flexibility constraint
41339  * - Grid Investment
41340  * - Capacity growth constraint
41341  *-------------------------------------------------------------------------------
41342   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
41345  *-------------------------------------------------------------------------------
41346  * Nuclear power plants
41347  *-------------------------------------------------------------------------------
41348   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
41351  *-------------------------------------------------------------------------------
41352  * GHG module
41353  * - CH4 FFI + CH4 waste + CH4 open fires
41354  * - N2O FFI + N2O waste + N2O open fires
41355  *-------------------------------------------------------------------------------
41356   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
41359  *-------------------------------------------------------------------------------
41360  * F-gases
41361  * - LLF
41362  * - SLF
41363  *-------------------------------------------------------------------------------
41364   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
41367  *-------------------------------------------------------------------------------
41368  * Landuse [simplified version of the land-use model]
41369  *-------------------------------------------------------------------------------
41370   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
41373  *-------------------------------------------------------------------------------
41374  * Bioenergy power plant
41375  *-------------------------------------------------------------------------------
41376   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
41379  *-------------------------------------------------------------------------------
41380  * Traditional Biofuels
41381  * - Requires the precedence of mod_landuse
41382  *-------------------------------------------------------------------------------
41383   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
41386  *-------------------------------------------------------------------------------
41387  * Advanced biofuel
41388  * - Require the precedence of mod_landuse
41389  *-------------------------------------------------------------------------------
41390   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
41393  *-------------------------------------------------------------------------------
41394  * Carbon Capture and Sequestration
41395  *-------------------------------------------------------------------------------
41396   
41398   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
41400  *-------------------------------------------------------------------------------
41401  * Coal for non-electric sectors
41402  * - Coke Plants
41403  * - Industrial and Commercial combined-heat-and-power (CHP)
41404  * - Others
41405  *-------------------------------------------------------------------------------
41406   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
41409  *-------------------------------------------------------------------------------
41410  * Wind energy module
41411  * - onshore and offshore
41412  *-------------------------------------------------------------------------------
41413   
41415   
41416  wcum(jreal_wind,tfirst) = sum(n,K_EN.l(jreal_wind,tfirst,n));
41417   
41418  *-------------------------------------------------------------------------------
41420   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
41422  *-------------------------------------------------------------------------------
41423  * Solar Powerplants (PV and CSP) to the electrical system
41424  *-------------------------------------------------------------------------------
41425   
41426  *-------------------------------------------------------------------------------
41428   
41429  wcum(jreal_solar,tfirst) = sum(n,K_EN.l(jreal_solar,tfirst,n));
41430   
41431  *-------------------------------------------------------------------------------
41433   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
41435  *-------------------------------------------------------------------------------
41436  * Technology development scenarios
41437  *-------------------------------------------------------------------------------
41438   
41440   
41441  if(tech_scen('nuclear')= low,
41442  MCOST_INV.fx('elnuclear_new',t,n)$((not tfix(t)) and (year(t) ge 2015)) = mcost_inv0('elnuclear_new',n)*(1+tech_cost_var)**(tlen(t)*(tperiod(t)-2));
41443  );
41444   
41445  if(tech_scen('nuclear')= high_oecd,
41446  MCOST_INV.fx('elnuclear_new',t,oecd)$((not tfix(t)) and (year(t) ge 2015)) = mcost_inv0('elnuclear_new',oecd)*(1-tech_cost_var)**(tlen(t)*(tperiod(t)-2));
41447  );
41448   
41449  if(tech_scen('nuclear')= high_non_oecd,
41450  MCOST_INV.fx('elnuclear_new',t,non_oecd)$((not tfix(t)) and (year(t) ge 2015)) = mcost_inv0('elnuclear_new',non_oecd)*(1-tech_cost_var)**(tlen(t)*(tperiod(t)-2));
41451  );
41452   
41453  * Additional SSP specificities
41454  * For SSP5, disable nelback
41456   
41457  * For SSP5, disable Energy RnD
41459   
41461   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
41463  *-------------------------------------------------------------------------------
41464  * Oil Extraction
41465  * Options:
41466  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
41467  *-------------------------------------------------------------------------------
41468   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
41471  *-------------------------------------------------------------------------------
41472  * Uranium Resources
41473  *-------------------------------------------------------------------------------
41474   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
41477  *-------------------------------------------------------------------------------
41478  * Gas Resources
41479  *-------------------------------------------------------------------------------
41480   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
41483  *-------------------------------------------------------------------------------
41484  * Coal Resources
41485  *-------------------------------------------------------------------------------
41486   
41488   
41489   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
41491  *-------------------------------------------------------------------------------
41492  * Climate
41493  *
41494  * Represents the climate
41495  * - based on the DICE model equations
41496  * - Radiative forcing for non CO2 ghgs
41497  * - parameters calibrated to reproduce MAGICC6.4 default response
41498  *
41499  *  Options:
41500  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
41501  * - $setglobal cooperate_on_climate {'YES','NO'}
41502  * - 'YES'(default): Countries within a coalition act in cooperation
41503  *   'NO': Countries within a coalition act individually
41504  *
41505  *-------------------------------------------------------------------------------
41506   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
41509  *-------------------------------------------------------------------------------
41510  * Long-run Damages from Climate Change
41511  * - Economic impacts
41512  * - Adaptation
41513  *-------------------------------------------------------------------------------
41514   
41516   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
41518  *-------------------------------------------------------------------------------
41519  * Light-duty Vehicles for Personal Transport
41520  *-------------------------------------------------------------------------------
41521   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
41524  *-------------------------------------------------------------------------------
41525  * Road Freight Transport
41526  *-------------------------------------------------------------------------------
41528   
41529   
41530   
41531   
41532   
41533   
41534  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
41536  *-------------------------------------------------------------------------------
41537  * Traditional Biomass
41538  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
41539  *  - require post_process to be launch before
41540  *-------------------------------------------------------------------------------
41541   
41543   
41544  * Optional modules
41545   
41546  * Policy modules
41547   
41548  * Calibration
41551   
41552  *-------------------------------------------------------------------------------
41553  * Nash loop
41554  *-------------------------------------------------------------------------------
41555   
41556  stop_nash = 0;
41557  loop(siter$((stop_nash eq 0) or (ord(siter) le 1)),
41558   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
41560  *-------------------------------------------------------------------------------
41561  * Call modules by order
41562  *-------------------------------------------------------------------------------
41566   
41567  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
41569  *-------------------------------------------------------------------------------
41570  * Algorithm
41571  *-------------------------------------------------------------------------------
41572   
41574   
41575  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
41577  *-------------------------------------------------------------------------------
41578  * Time
41579  * - Temporal structure
41580  * - Fixed time periods
41581  * - States of the world
41582  *-------------------------------------------------------------------------------
41583   
41585   
41586  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
41588  *-------------------------------------------------------------------------------
41589  * Geographic dimension and mapping with countries
41590  *-------------------------------------------------------------------------------
41591   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
41594  *-------------------------------------------------------------------------------
41595  * Non-Cooperative Setup
41596  *
41597  * Each region is defined as an individual coalition.
41598  *
41599  *-------------------------------------------------------------------------------
41600   
41602   
41603  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
41605  *-------------------------------------------------------------------------------
41606  * Welfare
41607  *-------------------------------------------------------------------------------
41608   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
41611  *-------------------------------------------------------------------------------
41612  * Economy
41613  * - Production and Consumption definition
41614  * - Top-level of the production function
41615  * Options:
41616  * --original_ssp=1 : original SSP population and GDP data
41617  *-------------------------------------------------------------------------------
41618   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
41621  *-------------------------------------------------------------------------------
41622  * Energy sector
41623  *-------------------------------------------------------------------------------
41624   
41626   
41627  * World cumulative fuel demand
41628  loop((tnofirst(t),tm1)$pre(tm1,t),
41629      wcum(f,t) = wcum(f,tm1) + tlen(t) * sum(n, Q_FUEL.l(f,tm1,n) * 1e-6);
41630  );
41631   
41632  tpes(t,n) = sum(f, Q_FUEL.l(f,t,n)) + Q_EN.l('elhydro',t,n) + Q_EN.l('elwind',t,n) + Q_EN.l('elsolar',t,n);
41633   
41634  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
41637  *-------------------------------------------------------------------------------
41638  * Carbon Emissions
41639  * - Total CO2 emissions and CO2 Fossil fuel and Industry
41640  * - CO2 emission costs
41641  * - GHG permit market
41642  *-------------------------------------------------------------------------------
41643   
41645   
41646  loop(c_mkt,
41647  carbonprice(t,n)$trading_t(c_mkt,t,n) = CPRICE.l(c_mkt,t);
41648  );
41649  carbonprice(t,n)$(ctax('co2',t,n)) = ctax('co2',t,n);
41650   
41651  * Accounting for electrification in the transport sector
41652  * Reference for default carbon efficiency rate: Fajardy and Daggash (2017)
41653  emi_bio_harv(t) = 0.25 * (1 -
41654                     sum((n,ices_el), QEL_OUT.l('edv',ices_el,t,n) + QEL_OUT.l('edvfr',ices_el,t,n)) /
41655                     (sum((f,n,jfed)$(csi(f,jfed,t,n) and (jveh(jfed) or jfrt(jfed))),
41656                        Q_IN.l(f,jfed,t,n)) +
41657                        sum((n,ices_el), QEL_OUT.l('edv',ices_el,t,n) +
41658                                         QEL_OUT.l('edvfr',ices_el,t,n))
41659                      ))**2;
41660   
41661  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
41664  *-------------------------------------------------------------------------------
41665  * Research & Development
41666  * Options:
41667  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
41668  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
41669  *-------------------------------------------------------------------------------
41670   
41672   
41673  wkrd0(rd) = sum(n$leadrd(rd,n), krd0(rd,n)) / sum(n$leadrd(rd,n), 1);
41674   
41676   
41677  *- updating externalities
41678  krd_lead(rd,t) = sum(n$leadrd(rd,n), K_RD.l(rd,t,n));
41679  krd_oth_lead_krd(rd,t,n)$leadrd(rd,n) = krd_lead(rd,t) - K_RD.l(rd,t,n);
41680   
41681  *-initialisation of the SPILL variable
41682  if(ord(siter) eq 1,
41683  SPILL.l(rd,t,n)$((not tfix(t)) and (leadrd(rd,n))) = K_RD.l(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD.l(rd,t,n))*krd_oth_lead_krd(rd,t,n);
41684  SPILL.l(rd,t,n)$((not tfix(t)) and (not leadrd(rd,n))) = K_RD.l(rd,t,n) /krd_lead(rd,t)*(krd_lead(rd,t)-K_RD.l(rd,t,n));
41685  );
41686   
41687  wlspill_k_rd(rd,t,n) = smax(nn, K_RD.l(rd,t,nn)) - K_RD.l(rd,t,n);
41688   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
41691  *-------------------------------------------------------------------------------
41692  * Default Climate Policy Implementation
41693  *
41694  * Options:
41695  *    --policy={bau (default),ctax}
41696  *        Implement a climate policy setting
41697  *  [ --scen= ]
41698  *        Policy variant.
41699  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
41700  *          * XXX for a fixed percentage/yr (e.g. 5) growth
41701  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
41702  *  [ --ctax_year=2020 ]
41703  *        Starting year of the carbon tax
41704  *  [ --ctax_initial=30 ]
41705  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
41706  *
41707  *-------------------------------------------------------------------------------
41709   
41710  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
41712  *-------------------------------------------------------------------------------
41713  * Energy efficiency
41714  *-------------------------------------------------------------------------------
41715   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
41718  *-------------------------------------------------------------------------------
41719  * Hydro Power
41720  *-------------------------------------------------------------------------------
41721   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
41724  *-------------------------------------------------------------------------------
41725  * System Integration:
41726  * - Capacity constraint
41727  * - Flexibility constraint
41728  * - Grid Investment
41729  * - Capacity growth constraint
41730  *-------------------------------------------------------------------------------
41731   
41733   
41734  * If
41735  * - K_EN.lo is not -infinity
41736  * - K_EN(t) and K_EN(t+1) are fixed
41737  * - a mkt_growth_rate is set
41738  * then make sure that the minimum additional capacity in t+1 is compatible with
41739  * with the necessary capacity to go from K_EN(t) to K_EN(t+1). If this is not the case,
41740  * disable the mkt growth constraint, assuming that the K_EN.lo/fx override
41741  * the mkt growth assumptions.
41742  loop((jinv,n,t,tp1,tp2)$(mkt_growth_rate(jinv,tp2,n) and
41743      (K_EN.lo(jinv,tp2,n) gt 0) and
41744      (K_EN.lo(jinv,tp1,n) eq K_EN.up(jinv,tp1,n)) and
41745      (K_EN.lo(jinv,t,n) eq K_EN.up(jinv,t,n)) and
41746      pre(t,tp1) and pre(tp1,tp2)),
41747      jtn_incompatible_with_mkt_growth_cap(jinv,tp1,n) = yes$(((K_EN.lo(jinv,tp2,n)-K_EN.lo(jinv,tp1,n)*(1-delta_en(jinv,tp2,n))**tlen(tp1))/tlen(tp1)) ge
41748          (((K_EN.lo(jinv,tp1,n)-K_EN.lo(jinv,t,n)*(1-delta_en(jinv,tp1,n))**tlen(t))/tlen(t))*(1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3)
41749          );
41750      mkt_growth_rate(jinv,tp1,n)$jtn_incompatible_with_mkt_growth_cap(jinv,tp1,n) = 0;
41751  );
41752   
41753  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
41756  *-------------------------------------------------------------------------------
41757  * Nuclear power plants
41758  *-------------------------------------------------------------------------------
41759   
41761   
41762  if(sum((tt,n)$tfirst(tt),Q_EN.l('elnuclear',tt,n)) gt 0,
41763      wastemgm(t,n) =  cwaste_reg('alpha',n) *
41764                       ( sum(nn, Q_EN.l('elnuclear',t,nn)) /
41765                         sum((tt,nn)$tfirst(tt),Q_EN.l('elnuclear',tt,nn))
41766                       )**cwaste_reg('rho',n);
41767  );
41768  oem(jreal,t,n)$(map_j('elnuclear',jreal)) = oem0(jreal,n) + wastemgm(t,n);
41769   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
41772  *-------------------------------------------------------------------------------
41773  * GHG module
41774  * - CH4 FFI + CH4 waste + CH4 open fires
41775  * - N2O FFI + N2O waste + N2O open fires
41776  *-------------------------------------------------------------------------------
41777   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
41780  *-------------------------------------------------------------------------------
41781  * F-gases
41782  * - LLF
41783  * - SLF
41784  *-------------------------------------------------------------------------------
41785   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
41788  *-------------------------------------------------------------------------------
41789  * Landuse [simplified version of the land-use model]
41790  *-------------------------------------------------------------------------------
41791   
41793   
41794  MCOST_FUEL.fx('wbio',t,n)$(not tfix(t)) = div0(COST_FUEL.l('wbio',t,n),Q_FUEL.l('wbio',t,n));
41795   
41796  * Set the price of co2lu emissions according to the applied policy
41797  loop(c_mkt,
41798  cluprice(t_lu,n)$trading_t(c_mkt,t_lu,n) = CPRICE.l(c_mkt,t_lu);
41799  );
41800  cluprice(t_lu,n)$(ctax('co2',t_lu,n)) = ctax('co2',t_lu,n);
41801  cluprice(t_lu,n)$(nocluprice(t_lu,n)) = 0; # force LU non pricing
41802   
41803  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
41806  *-------------------------------------------------------------------------------
41807  * Bioenergy power plant
41808  *-------------------------------------------------------------------------------
41809   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
41812  *-------------------------------------------------------------------------------
41813  * Traditional Biofuels
41814  * - Requires the precedence of mod_landuse
41815  *-------------------------------------------------------------------------------
41816   
41818   
41819  * If more world demand than world production potential, adjust bounds
41820  loop(t$(not tfix(t) and year(t)<=2100),
41821  if( sum(n, Q_FUEL.l('trbiofuel',t,n)) > sum(n,trbiofuel_max(n)) ,
41822   
41823  else
41824   
41825  Q_FUEL.up('trbiofuel',t,n) = sum(nn,trbiofuel_max(nn));
41826   
41827  );
41828  );
41829   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
41832  *-------------------------------------------------------------------------------
41833  * Advanced biofuel
41834  * - Require the precedence of mod_landuse
41835  *-------------------------------------------------------------------------------
41836   
41838   
41839  loop((t,tp1)$pre(t,tp1),
41840    wcum('nelback',tp1) = wcum('nelback',t) + tlen(t) * sum(n, Q_FUEL.l('advbiofuel',t,n));
41841  );
41842   
41843  Q_FUEL.up('advbiofuel',t,n)$(not tfix(t)) = Q_FUEL.up('wbio',t,n);
41844   
41845  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
41848  *-------------------------------------------------------------------------------
41849  * Carbon Capture and Sequestration
41850  *-------------------------------------------------------------------------------
41851   
41853   
41854  MCOST_EMI.fx('ccs',t,n) = div0(COST_EMI.l('ccs',t,n), Q_EMI.l('ccs',t,n));
41855  MCOST_EMI.fx('ccs_plant',t,n) = div0(COST_EMI.l('ccs_plant',t,n), Q_EMI.l('ccs_plant',t,n));
41856   
41857  * World capital in CCS plant
41858  wcum(jlccs,tfirst) = sum(n,K_EN.l(jlccs,tfirst,n));
41859  loop((tnofirst(t),tm1)$pre(tm1,t),
41860  wcum(jlccs,t) = wcum(jlccs,tm1) + tlen(tm1) * sum(n, I_EN.l(jlccs,tm1,n) / MCOST_INV.l(jlccs,tm1,n));
41861  );
41862   
41863  ccs_wcum_spill(jlccs,t)=sum(jllccs, ccs_spill_factor(jlccs,jllccs)*(wcum(jllccs,t)));
41864   
41865  MCOST_INV.fx(jlccs,t,n)$(ccs_wcum_spill(jlccs,t) gt ccs_wcum0(jlccs)) = max(ccs_floor_cost(jlccs,n), mcost_inv0(jlccs,n) * (ccs_wcum_spill(jlccs,t)/ccs_wcum0(jlccs))**(-ccs_learn(jlccs,t)));
41866   
41867  *-------------------------------------------------------------------------------
41869   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
41871  *-------------------------------------------------------------------------------
41872  * Coal for non-electric sectors
41873  * - Coke Plants
41874  * - Industrial and Commercial combined-heat-and-power (CHP)
41875  * - Others
41876  *-------------------------------------------------------------------------------
41877   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
41880  *-------------------------------------------------------------------------------
41881  * Wind energy module
41882  * - onshore and offshore
41883  *-------------------------------------------------------------------------------
41884   
41886   
41887  loop((tnofirst(t),tm1)$pre(tm1,t),
41888  wcum(jinv_wind,t) = wcum(jinv_wind,tm1) + tlen(t) * sum(n, I_EN.l(jinv_wind,tm1,n) / MCOST_INV.l(jinv_wind,tm1,n));
41889  );
41890   
41891  MCOST_INV.fx('elwindon',t,n)$(not tfix(t) and year(t) le 2020) = mcost_inv_valid_wind('elwindon',t,n);
41892  MCOST_INV_WINDOFF.fx(wind_depth,t,n)$(not tfix(t) and year(t) le 2020) = mcost_inv_valid_wind('elwindoff',t,n) * windoff_costinv(wind_depth);
41893   
41894  MCOST_INV.fx('elwindon',t,n)$(not tfix(t) and year(t) gt 2020) = max(floor_cost('elwindon'),
41895                                             (smax(tt$(year(tt) eq 2020), MCOST_INV.l('elwindon',tt,n))) *
41896                                             ((wcum('elwindon',t) + wind_spill_wcum * (wcum('elwindoff',t))) /
41897                                              ((smax(tt$(year(tt) eq 2020), wcum('elwindon',tt))) + wind_spill_wcum * ((smax(tt$(year(tt) eq 2020), wcum('elwindoff',tt))))))**rd_coef('elwindon','lbd'));
41898  MCOST_INV_WINDOFF.fx(wind_depth,t,n)$(not tfix(t) and year(t) gt 2020) = max(floor_cost('elwindoff'),
41899                                             (smax(tt$(year(tt) eq 2020), MCOST_INV_WINDOFF.l(wind_depth,tt,n))) *
41900                                             ((wcum('elwindoff',t) + wind_spill_wcum*(wcum('elwindon',t))) /
41901                                              ((smax(tt$(year(tt) eq 2020), wcum('elwindoff',tt))) + wind_spill_wcum * ((smax(tt$(year(tt) eq 2020), wcum('elwindon',tt))))))**rd_coef('elwindoff','lbd'));
41902   
41903  MCOST_INV.fx('elwindoff',t,n)$((not tfix(t)) and (K_EN.l('elwindoff',t,n) ne 0)) = sum(wind_depth,MCOST_INV_WINDOFF.l(wind_depth,t,n) * sum((wind_dist,wind_class),K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n))) / K_EN.l('elwindoff',t,n);
41904  MCOST_INV.fx('elwindoff',t,n)$((not tfix(t)) and (K_EN.l('elwindoff',t,n) eq 0)) = smin(wind_depth,MCOST_INV_WINDOFF.l(wind_depth,t,n));
41905   
41906  *-------------------------------------------------------------------------------
41908   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
41910  *-------------------------------------------------------------------------------
41911  * Solar Powerplants (PV and CSP) to the electrical system
41912  *-------------------------------------------------------------------------------
41913   
41914  *-------------------------------------------------------------------------------
41916   
41917  * World cumulative capacities of solar plants
41918  loop((tnofirst(t),tm1)$pre(tm1,t),
41919    wcum(jinv_solar,t) = wcum(jinv_solar,tm1) + tlen(t) * sum(n, I_EN.l(jinv_solar,tm1,n) / MCOST_INV.l(jinv_solar,tm1,n));
41920  );
41921   
41922  * Investment costs of solar plants
41923  MCOST_INV.fx(jreal_solar,t,n)$(not tfix(t) and year(t) le 2020) = mcost_inv_valid_solar(jreal_solar,t,n);
41924  MCOST_INV.fx(jreal_solar,t,n)$(not tfix(t) and year(t) gt 2020) = max(floor_cost(jreal_solar),
41925                                                    (smax(tt$(year(tt) eq 2020), mcost_inv_valid_solar(jreal_solar,tt,n))) *
41926                                                    (wcum(jreal_solar,t) / (smax(tt$(year(tt) eq 2020), wcum(jreal_solar,tt))))**rd_coef(jreal_solar,'lbd'));
41927   
41928  *-------------------------------------------------------------------------------
41930   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
41932  *-------------------------------------------------------------------------------
41933  * Technology development scenarios
41934  *-------------------------------------------------------------------------------
41935   
41937   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
41939  *-------------------------------------------------------------------------------
41940  * Oil Extraction
41941  * Options:
41942  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
41943  *-------------------------------------------------------------------------------
41944   
41946   
41947  MCOST_FUEL.fx('oil',t,n)$(not tfix(t)) = max(sum(tfirst, FPRICE.l('oil',tfirst))*0.1, FPRICE.l('oil',t) + p_mkup('oil',t,n));
41948   
41949  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
41952  *-------------------------------------------------------------------------------
41953  * Uranium Resources
41954  *-------------------------------------------------------------------------------
41955   
41957   
41958  FPRICE.l('uranium',t)$(not tfix(t)) = cexs('uranium','scl') *
41959                          (cexs('uranium','a') +
41960                           cexs('uranium','c') *
41961                           (wcum('uranium',t) /
41962                              (cexs('uranium','fast') * res('uranium',t))
41963                           )**2
41964                          ) + cexs('uranium','extra');
41965   
41966  MCOST_FUEL.fx('uranium',t,n)$(not tfix(t)) = FPRICE.l('uranium',t) + p_mkup('uranium',t,n);
41967   
41968  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
41971  *-------------------------------------------------------------------------------
41972  * Gas Resources
41973  *-------------------------------------------------------------------------------
41974   
41976   
41977  FPRICE.l('gas',t)$(not tfix(t)) = max((smax(tt$(year(tt) eq 2005), FPRICE.l('gas',tt))), sum(polydeg$(cgas(polydeg,'M')), (cgas(polydeg,'M'))*((wcum('gas',t) - cexs('gas','cum0')))**(ord(polydeg)-1)));
41978   
41979  * Calculate cumulative production (by means of polynomial functions)
41980  cum_prodpp('gas',t,n) = max(0, trade_scale_gas('M') *
41981                                 sum(polydeg$(trade_poly_gas(polydeg,'M',N)), (trade_poly_gas(polydeg,'M',N))*(FPRICE.l('gas',t)/(twh2ej/1000))**(ord(polydeg)-1))
41982                             );
41983   
41984  * Ensure cumulative production in 2005 = 0
41985  cum_prodpp('gas',t,n)$(tfirst(t))= 0;
41986   
41987   
41988  * This is to avoid negative production (cumulative production declining)
41989  loop((t,tp1)$(pre(t,tp1)),
41990    cum_prodpp('gas',tp1,n)=max(cum_prodpp('gas',t,n)+1e-5*tlen(t), cum_prodpp('gas',tp1,n) )
41991  );
41992   
41993  ** Calculate annual production
41994  loop((t,tp1)$(pre(t,tp1)),
41995    prodpp('gas',t,n) = (cum_prodpp('gas',tp1,n) - cum_prodpp('gas',t,n))/tlen(t)
41996  );
41997   
41998  prodpp('gas',t,n)$(year(t) > 2100) = sum(nn,Q_FUEL.l('gas',t,nn)) * (smax(tt$(year(tt) eq 2100), (prodpp('gas',tt,n)/sum(nn,prodpp('gas',tt,nn)))));
41999   
42001  Q_OUT.fx('gas',t,n)$(not tfix(t)) = prodpp('gas',t,n);
42003   
42004  MCOST_FUEL.fx('gas',t,n)$(not tfix(t)) = FPRICE.l('gas',t) + p_mkup('gas',t,n);
42005   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
42008  *-------------------------------------------------------------------------------
42009  * Coal Resources
42010  *-------------------------------------------------------------------------------
42011   
42013   
42014  FPRICE.l('coal',t)$(not tfix(t)) = max((smax(tt$(year(tt) eq 2005), FPRICE.l('coal',tt))), sum(polydeg$(ccoal(polydeg,'M')), (ccoal(polydeg,'M'))*((wcum('coal',t) - cexs('coal','cum0')))**(ord(polydeg)-1)));
42015   
42016  * Calculate cumulative production (by means of polynomial functions)
42017  cum_prodpp('coal',t,n) = max(0, trade_scale_coal('M') *
42018                                  sum(polydeg$(trade_poly_coal(polydeg,'M',N)), (trade_poly_coal(polydeg,'M',N))*(FPRICE.l('coal',t)/(twh2ej/1000))**(ord(polydeg)-1))
42019                              );
42020   
42021  * Ensure cumulative production in 2005 = 0
42022  cum_prodpp('coal',t,n)$(tfirst(t))= 0;
42023   
42024   
42025  * This is to avoid negative production (cumulative production declining)
42026  loop((t,tp1)$(pre(t,tp1)),
42027    cum_prodpp('coal',tp1,n)=max(cum_prodpp('coal',t,n)+1e-5*tlen(t), cum_prodpp('coal',tp1,n) )
42028  );
42029   
42030  ** Calculate annual production
42031  loop((t,tp1)$(pre(t,tp1)),
42032    prodpp('coal',t,n) = (cum_prodpp('coal',tp1,n) - cum_prodpp('coal',t,n))/tlen(t)
42033  );
42034   
42035  prodpp('coal',t,n)$(year(t) > 2100) = sum(nn,Q_FUEL.l('coal',t,nn)) * (smax(tt$(year(tt) eq 2100), (prodpp('coal',tt,n)/sum(nn,prodpp('coal',tt,nn)))));
42036   
42038  Q_OUT.fx('coal',t,n)$(not tfix(t)) = prodpp('coal',t,n);
42040   
42041  MCOST_FUEL.fx('coal',t,n)$(not tfix(t)) = FPRICE.l('coal',t) + p_mkup('coal',t,n);
42042   
42043  *-------------------------------------------------------------------------------
42045   
42046   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
42048  *-------------------------------------------------------------------------------
42049  * Climate
42050  *
42051  * Represents the climate
42052  * - based on the DICE model equations
42053  * - Radiative forcing for non CO2 ghgs
42054  * - parameters calibrated to reproduce MAGICC6.4 default response
42055  *
42056  *  Options:
42057  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
42058  * - $setglobal cooperate_on_climate {'YES','NO'}
42059  * - 'YES'(default): Countries within a coalition act in cooperation
42060  *   'NO': Countries within a coalition act individually
42061  *
42062  *-------------------------------------------------------------------------------
42063   
42065   
42066  wemi(ghg(e),t) = sum(n, Q_EMI.l(e,t,n)) / wemi2qemi(e) + sum((n,ee)$(map_e_bunk(e,ee)), W_EMI.l(ee,t,n)) / card(n);
42067   
42068  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
42071  *-------------------------------------------------------------------------------
42072  * Long-run Damages from Climate Change
42073  * - Economic impacts
42074  * - Adaptation
42075  *-------------------------------------------------------------------------------
42076   
42078   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
42080  *-------------------------------------------------------------------------------
42081  * Light-duty Vehicles for Personal Transport
42082  *-------------------------------------------------------------------------------
42083   
42085   
42086  loop((t,tp1)$(pre(t,tp1)),
42087             wcum('battery',tp1) = sum(n,(div0(I_EN.l('hybrid',t,n),MCOST_INV.l('hybrid',t,n)) +
42088                                          div0(I_EN.l('plg_hybrid',t,n),MCOST_INV.l('plg_hybrid',t,n)) +
42089                                          div0(I_EN.l('edv',t,n),MCOST_INV.l('edv',t,n)) +
42090                                          div0(I_EN.l('hbd_stfr',t,n),MCOST_INV.l('hbd_stfr',t,n)) +
42091                                          div0(I_EN.l('plg_hbd_stfr',t,n),MCOST_INV.l('plg_hbd_stfr',t,n)) +
42092                                          div0(I_EN.l('edv_stfr',t,n),MCOST_INV.l('edv_stfr',t,n))) * tlen(t)) +
42093                                          wcum('battery',t)
42094  );
42095   
42097   
42098   
42099  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
42102  *-------------------------------------------------------------------------------
42103  * Road Freight Transport
42104  *-------------------------------------------------------------------------------
42106   
42107   
42108   
42109   
42110   
42111   
42112  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
42114  *-------------------------------------------------------------------------------
42115  * Traditional Biomass
42116  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
42117  *  - require post_process to be launch before
42118  *-------------------------------------------------------------------------------
42119   
42121   
42122  MCOST_FUEL.fx('trbiomass',t,n)$(not tfix(t)) = FPRICE.l('trbiomass',t) + p_mkup('trbiomass',t,n);
42123   
42125   
42126  trbio_ctr('phi',n)$trbio_countries(n)  = sum(tfirst,(neltrbiomass0(tfirst,n)/tpes(tfirst,n))/ min(1,trbio_ctr('beta',n)*log(mer2ppp(tfirst,n)*1e6*Q.l('y',tfirst,n)/l(tfirst,n))+trbio_ctr('alpha',n)));
42127  trbio_gdp_fun(t,n) = trbio_ctr('phi',n)*(1- min(1,trbio_ctr('beta',n)*log(mer2ppp(t,n)*1e6*Q.l('y',t,n)/l(t,n))+trbio_ctr('alpha',n)));
42128  scale_trbiomass(n)$trbio_countries(n)  = q0('neltrbiomass',n) / ((tpes(tfirst,n) - q0('neltrbiomass',n))*trbio_gdp_fun(tfirst,n)/(1-trbio_gdp_fun(tfirst,n)));
42129   
42130  Q_FUEL.fx('trbiomass',t,n)$((not tfix(t)) and tfirst(t)) = q0('neltrbiomass',n);
42131  Q_FUEL.fx('trbiomass',t,n)$((not tfix(t)) and (tnofirst(t) and trbio_countries(n))) = scale_trbiomass(n) * (tpes(t,n)-Q_FUEL.l('trbiomass',t,n))*trbio_gdp_fun(t,n)/(1-trbio_gdp_fun(t,n));
42132  Q_IN.fx('trbiomass','neltrbiomass',t,n)$(not tfix(t)) = Q_FUEL.l('trbiomass',t,n);
42133  Q_EN.fx('neltrbiomass',t,n)$(not tfix(t))             = Q_FUEL.l('trbiomass',t,n);
42134   
42135  * Safeguard against bad behavior, usually when a startgdx has wrong values.
42136  loop((t,n)$(Q_FUEL.lo('trbiomass',t,n)<0),
42137          Q_IN.fx('trbiomass','neltrbiomass',t,n)$(not tfix(t)) = neltrbiomass0(t,n);
42138          Q_FUEL.fx('trbiomass',t,n)$(not tfix(t))              = neltrbiomass0(t,n);
42139          Q_EN.fx('neltrbiomass',t,n)$(not tfix(t))             = neltrbiomass0(t,n);
42140  );
42141   
42143   
42145   
42146  * Optional modules
42147   
42148  * Policy modules
42149   
42150  * Calibration
42153   
42155   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
42157  *-------------------------------------------------------------------------------
42158  * Convergence algorithm
42159  *-------------------------------------------------------------------------------
42161   
42162  *-------------------------------------------------------------------------------
42164   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
42166  *-------------------------------------------------------------------------------
42167  * ADMM algorithm
42168  *-------------------------------------------------------------------------------
42170   
42171  *-------------------------------------------------------------------------------
42173   
42174  t_admm(mkt,t) = yes$(sum(n$trading_t(mkt,t,n),1) gt 0);
42175   
42176  if(ord(siter) eq 1,
42177      z_admm(mkt,t,n)$(t_admm(mkt,t)) = 0;
42178      u_admm(mkt,t)$(t_admm(mkt,t) and sum(f_mkt$sameas(f_mkt,mkt),1)) = sum(f_mkt$(sameas(f_mkt,mkt)), FPRICE.l(f_mkt,t))/rho_admm(mkt,t);
42179      u_admm(mkt,t)$(t_admm(mkt,t) and sum(c_mkt$sameas(c_mkt,mkt),1)) = sum(c_mkt$(sameas(c_mkt,mkt)), CPRICE.l(c_mkt,t))/rho_admm(mkt,t);
42180      x_admm(mkt,t,n)$(trading_t(mkt,t,n) and sum(f_mkt$sameas(f_mkt,mkt),1)) = sum(f$(sameas(f,mkt)), (Q_FUEL.l(f,t,n) - Q_OUT.l(f,t,n)));
42181      x_admm(mkt,t,n)$(trading_t(mkt,t,n) and sum(c_mkt$sameas(c_mkt,mkt),1)) = sum(e$(sameas(e,mkt)), (Q_EMI.l(e,t,n)));
42182      xavg_admm(mkt,t)$(t_admm(mkt,t)) = (sum(n$trading_t(mkt,t,n),x_admm(mkt,t,n)))/(sum(n$trading_t(mkt,t,n),1));
42183  );
42184   
42185  *-------------------------------------------------------------------------------
42187   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\solve.gms
42189  *-------------------------------------------------------------------------------
42190  * Interface with the CONOPT Solver
42191  *-------------------------------------------------------------------------------
42193   
42194  *-------------------------------------------------------------------------------
42195  * Save old state
42196  *-------------------------------------------------------------------------------
42197   
42198  LAST_I.l('fg',t,n)           = I.l('fg',t,n);
42199  LAST_I_EN.l(jinv,t,n)        = I_EN.l(jinv,t,n);
42200  LAST_I_RD.l(rd,t,n)          = I_RD.l(rd,t,n);
42201  LAST_I_OUT.l(extract(f),t,n) = I_OUT.l(f,t,n);
42202  LAST_COST_FUEL.l(f,t,n)      = COST_FUEL.l(f,t,n);
42203   
42204  *-------------------------------------------------------------------------------
42205  * Solver macro
42206  *-------------------------------------------------------------------------------
42208  $macro launchsolve(clt) \
42209  solve witch_&clt maximizing OBJADMM using nlp; \
42210  if((witch_&clt.solvelink eq 6) or (witch_&clt.solvelink eq 3), \
42211    remh('&clt') = witch_&clt.handle; \
42212  else savereport(&clt); \
42213    checkforproblems('&clt'));
42214   
42215  *-------------------------------------------------------------------------------
42216  * Initialization solver parameters
42217  *-------------------------------------------------------------------------------
42218  option nlp      = conopt;
42219  option dnlp     = conopt;
42220  option cns      = conopt;
42221  option iterlim  = 1e8;
42222  option reslim   = 1e7;
42223  option decimals = 8; # default number of decimal to be printed
42224  option sysout   = off; # Do not incorporate solver output into LST
42225  option limcol   = 0;  # number of cases displayed in LST per var
42226  option limrow   = 0;  # number of cases displayed in LST per equ
42229  timer            = timeelapsed;
42230  solrep(clt,irep) = na;
42231  remh(clt)        = 0;
42232  cproblem(clt)    = no;
42233   
42234  *-------------------------------------------------------------------------------
42235  * Check if everything is OK
42236  *-------------------------------------------------------------------------------
42237   
42238  abort$(execerror gt 0) 'Please check execution errors!';
42239   
42240  *-------------------------------------------------------------------------------
42241  * Launch a solver for each coalition
42242  *-------------------------------------------------------------------------------
42243   
42246   solve witch_c_brazil maximizing OBJADMM using nlp; if((witch_c_brazil.solvelink eq 6) or (witch_c_brazil.solvelink eq 3), remh('c_brazil') = witch_c_brazil.handle; else solrep('c_brazil','objval')=witch_c_brazil.objval;solrep('c_brazil','solvestat')=witch_c_brazil.solvestat;solrep('c_brazil','modelstat')=witch_c_brazil.modelstat;solrep('c_brazil','iterusd')=witch_c_brazil.iterusd;solrep('c_brazil','resusd')=witch_c_brazil.resusd;solrep('c_brazil','numvar')=witch_c_brazil.numvar;solrep('c_brazil','numequ')=witch_c_brazil.numequ;solrep('c_brazil','numnz')=witch_c_brazil.numnz;solrep('c_brazil','numvarproj')=witch_c_brazil.numvarproj;solrep('c_brazil','numinfes')=witch_c_brazil.numinfes;solrep('c_brazil','numnopt')=witch_c_brazil.numnopt;solrep('c_brazil','domusd')=witch_c_brazil.domusd;;  if((solrep('c_brazil','solvestat') ne 1) or (solrep('c_brazil','modelstat') ne 2), cproblem('c_brazil') = yes; else cproblem('c_brazil') = no;));
42251   solve witch_c_canada maximizing OBJADMM using nlp; if((witch_c_canada.solvelink eq 6) or (witch_c_canada.solvelink eq 3), remh('c_canada') = witch_c_canada.handle; else solrep('c_canada','objval')=witch_c_canada.objval;solrep('c_canada','solvestat')=witch_c_canada.solvestat;solrep('c_canada','modelstat')=witch_c_canada.modelstat;solrep('c_canada','iterusd')=witch_c_canada.iterusd;solrep('c_canada','resusd')=witch_c_canada.resusd;solrep('c_canada','numvar')=witch_c_canada.numvar;solrep('c_canada','numequ')=witch_c_canada.numequ;solrep('c_canada','numnz')=witch_c_canada.numnz;solrep('c_canada','numvarproj')=witch_c_canada.numvarproj;solrep('c_canada','numinfes')=witch_c_canada.numinfes;solrep('c_canada','numnopt')=witch_c_canada.numnopt;solrep('c_canada','domusd')=witch_c_canada.domusd;;  if((solrep('c_canada','solvestat') ne 1) or (solrep('c_canada','modelstat') ne 2), cproblem('c_canada') = yes; else cproblem('c_canada') = no;));
42256   solve witch_c_china maximizing OBJADMM using nlp; if((witch_c_china.solvelink eq 6) or (witch_c_china.solvelink eq 3), remh('c_china') = witch_c_china.handle; else solrep('c_china','objval')=witch_c_china.objval;solrep('c_china','solvestat')=witch_c_china.solvestat;solrep('c_china','modelstat')=witch_c_china.modelstat;solrep('c_china','iterusd')=witch_c_china.iterusd;solrep('c_china','resusd')=witch_c_china.resusd;solrep('c_china','numvar')=witch_c_china.numvar;solrep('c_china','numequ')=witch_c_china.numequ;solrep('c_china','numnz')=witch_c_china.numnz;solrep('c_china','numvarproj')=witch_c_china.numvarproj;solrep('c_china','numinfes')=witch_c_china.numinfes;solrep('c_china','numnopt')=witch_c_china.numnopt;solrep('c_china','domusd')=witch_c_china.domusd;;  if((solrep('c_china','solvestat') ne 1) or (solrep('c_china','modelstat') ne 2), cproblem('c_china') = yes; else cproblem('c_china') = no;));
42261   solve witch_c_europe maximizing OBJADMM using nlp; if((witch_c_europe.solvelink eq 6) or (witch_c_europe.solvelink eq 3), remh('c_europe') = witch_c_europe.handle; else solrep('c_europe','objval')=witch_c_europe.objval;solrep('c_europe','solvestat')=witch_c_europe.solvestat;solrep('c_europe','modelstat')=witch_c_europe.modelstat;solrep('c_europe','iterusd')=witch_c_europe.iterusd;solrep('c_europe','resusd')=witch_c_europe.resusd;solrep('c_europe','numvar')=witch_c_europe.numvar;solrep('c_europe','numequ')=witch_c_europe.numequ;solrep('c_europe','numnz')=witch_c_europe.numnz;solrep('c_europe','numvarproj')=witch_c_europe.numvarproj;solrep('c_europe','numinfes')=witch_c_europe.numinfes;solrep('c_europe','numnopt')=witch_c_europe.numnopt;solrep('c_europe','domusd')=witch_c_europe.domusd;;  if((solrep('c_europe','solvestat') ne 1) or (solrep('c_europe','modelstat') ne 2), cproblem('c_europe') = yes; else cproblem('c_europe') = no;));
42266   solve witch_c_india maximizing OBJADMM using nlp; if((witch_c_india.solvelink eq 6) or (witch_c_india.solvelink eq 3), remh('c_india') = witch_c_india.handle; else solrep('c_india','objval')=witch_c_india.objval;solrep('c_india','solvestat')=witch_c_india.solvestat;solrep('c_india','modelstat')=witch_c_india.modelstat;solrep('c_india','iterusd')=witch_c_india.iterusd;solrep('c_india','resusd')=witch_c_india.resusd;solrep('c_india','numvar')=witch_c_india.numvar;solrep('c_india','numequ')=witch_c_india.numequ;solrep('c_india','numnz')=witch_c_india.numnz;solrep('c_india','numvarproj')=witch_c_india.numvarproj;solrep('c_india','numinfes')=witch_c_india.numinfes;solrep('c_india','numnopt')=witch_c_india.numnopt;solrep('c_india','domusd')=witch_c_india.domusd;;  if((solrep('c_india','solvestat') ne 1) or (solrep('c_india','modelstat') ne 2), cproblem('c_india') = yes; else cproblem('c_india') = no;));
42271   solve witch_c_indonesia maximizing OBJADMM using nlp; if((witch_c_indonesia.solvelink eq 6) or (witch_c_indonesia.solvelink eq 3), remh('c_indonesia') = witch_c_indonesia.handle; else solrep('c_indonesia','objval')=witch_c_indonesia.objval;solrep('c_indonesia','solvestat')=witch_c_indonesia.solvestat;solrep('c_indonesia','modelstat')=witch_c_indonesia.modelstat;solrep('c_indonesia','iterusd')=witch_c_indonesia.iterusd;solrep('c_indonesia','resusd')=witch_c_indonesia.resusd;solrep('c_indonesia','numvar')=witch_c_indonesia.numvar;solrep('c_indonesia','numequ')=witch_c_indonesia.numequ;solrep('c_indonesia','numnz')=witch_c_indonesia.numnz;solrep('c_indonesia','numvarproj')=witch_c_indonesia.numvarproj;solrep('c_indonesia','numinfes')=witch_c_indonesia.numinfes;solrep('c_indonesia','numnopt')=witch_c_indonesia.numnopt;solrep('c_indonesia','domusd')=witch_c_indonesia.domusd;;  if((solrep('c_indonesia','solvestat') ne 1) or (solrep('c_indonesia','modelstat') ne 2), cproblem('c_indonesia') = yes; else cproblem('c_indonesia') = no;));
42276   solve witch_c_jpnkor maximizing OBJADMM using nlp; if((witch_c_jpnkor.solvelink eq 6) or (witch_c_jpnkor.solvelink eq 3), remh('c_jpnkor') = witch_c_jpnkor.handle; else solrep('c_jpnkor','objval')=witch_c_jpnkor.objval;solrep('c_jpnkor','solvestat')=witch_c_jpnkor.solvestat;solrep('c_jpnkor','modelstat')=witch_c_jpnkor.modelstat;solrep('c_jpnkor','iterusd')=witch_c_jpnkor.iterusd;solrep('c_jpnkor','resusd')=witch_c_jpnkor.resusd;solrep('c_jpnkor','numvar')=witch_c_jpnkor.numvar;solrep('c_jpnkor','numequ')=witch_c_jpnkor.numequ;solrep('c_jpnkor','numnz')=witch_c_jpnkor.numnz;solrep('c_jpnkor','numvarproj')=witch_c_jpnkor.numvarproj;solrep('c_jpnkor','numinfes')=witch_c_jpnkor.numinfes;solrep('c_jpnkor','numnopt')=witch_c_jpnkor.numnopt;solrep('c_jpnkor','domusd')=witch_c_jpnkor.domusd;;  if((solrep('c_jpnkor','solvestat') ne 1) or (solrep('c_jpnkor','modelstat') ne 2), cproblem('c_jpnkor') = yes; else cproblem('c_jpnkor') = no;));
42281   solve witch_c_laca maximizing OBJADMM using nlp; if((witch_c_laca.solvelink eq 6) or (witch_c_laca.solvelink eq 3), remh('c_laca') = witch_c_laca.handle; else solrep('c_laca','objval')=witch_c_laca.objval;solrep('c_laca','solvestat')=witch_c_laca.solvestat;solrep('c_laca','modelstat')=witch_c_laca.modelstat;solrep('c_laca','iterusd')=witch_c_laca.iterusd;solrep('c_laca','resusd')=witch_c_laca.resusd;solrep('c_laca','numvar')=witch_c_laca.numvar;solrep('c_laca','numequ')=witch_c_laca.numequ;solrep('c_laca','numnz')=witch_c_laca.numnz;solrep('c_laca','numvarproj')=witch_c_laca.numvarproj;solrep('c_laca','numinfes')=witch_c_laca.numinfes;solrep('c_laca','numnopt')=witch_c_laca.numnopt;solrep('c_laca','domusd')=witch_c_laca.domusd;;  if((solrep('c_laca','solvestat') ne 1) or (solrep('c_laca','modelstat') ne 2), cproblem('c_laca') = yes; else cproblem('c_laca') = no;));
42286   solve witch_c_mena maximizing OBJADMM using nlp; if((witch_c_mena.solvelink eq 6) or (witch_c_mena.solvelink eq 3), remh('c_mena') = witch_c_mena.handle; else solrep('c_mena','objval')=witch_c_mena.objval;solrep('c_mena','solvestat')=witch_c_mena.solvestat;solrep('c_mena','modelstat')=witch_c_mena.modelstat;solrep('c_mena','iterusd')=witch_c_mena.iterusd;solrep('c_mena','resusd')=witch_c_mena.resusd;solrep('c_mena','numvar')=witch_c_mena.numvar;solrep('c_mena','numequ')=witch_c_mena.numequ;solrep('c_mena','numnz')=witch_c_mena.numnz;solrep('c_mena','numvarproj')=witch_c_mena.numvarproj;solrep('c_mena','numinfes')=witch_c_mena.numinfes;solrep('c_mena','numnopt')=witch_c_mena.numnopt;solrep('c_mena','domusd')=witch_c_mena.domusd;;  if((solrep('c_mena','solvestat') ne 1) or (solrep('c_mena','modelstat') ne 2), cproblem('c_mena') = yes; else cproblem('c_mena') = no;));
42291   solve witch_c_mexico maximizing OBJADMM using nlp; if((witch_c_mexico.solvelink eq 6) or (witch_c_mexico.solvelink eq 3), remh('c_mexico') = witch_c_mexico.handle; else solrep('c_mexico','objval')=witch_c_mexico.objval;solrep('c_mexico','solvestat')=witch_c_mexico.solvestat;solrep('c_mexico','modelstat')=witch_c_mexico.modelstat;solrep('c_mexico','iterusd')=witch_c_mexico.iterusd;solrep('c_mexico','resusd')=witch_c_mexico.resusd;solrep('c_mexico','numvar')=witch_c_mexico.numvar;solrep('c_mexico','numequ')=witch_c_mexico.numequ;solrep('c_mexico','numnz')=witch_c_mexico.numnz;solrep('c_mexico','numvarproj')=witch_c_mexico.numvarproj;solrep('c_mexico','numinfes')=witch_c_mexico.numinfes;solrep('c_mexico','numnopt')=witch_c_mexico.numnopt;solrep('c_mexico','domusd')=witch_c_mexico.domusd;;  if((solrep('c_mexico','solvestat') ne 1) or (solrep('c_mexico','modelstat') ne 2), cproblem('c_mexico') = yes; else cproblem('c_mexico') = no;));
42296   solve witch_c_oceania maximizing OBJADMM using nlp; if((witch_c_oceania.solvelink eq 6) or (witch_c_oceania.solvelink eq 3), remh('c_oceania') = witch_c_oceania.handle; else solrep('c_oceania','objval')=witch_c_oceania.objval;solrep('c_oceania','solvestat')=witch_c_oceania.solvestat;solrep('c_oceania','modelstat')=witch_c_oceania.modelstat;solrep('c_oceania','iterusd')=witch_c_oceania.iterusd;solrep('c_oceania','resusd')=witch_c_oceania.resusd;solrep('c_oceania','numvar')=witch_c_oceania.numvar;solrep('c_oceania','numequ')=witch_c_oceania.numequ;solrep('c_oceania','numnz')=witch_c_oceania.numnz;solrep('c_oceania','numvarproj')=witch_c_oceania.numvarproj;solrep('c_oceania','numinfes')=witch_c_oceania.numinfes;solrep('c_oceania','numnopt')=witch_c_oceania.numnopt;solrep('c_oceania','domusd')=witch_c_oceania.domusd;;  if((solrep('c_oceania','solvestat') ne 1) or (solrep('c_oceania','modelstat') ne 2), cproblem('c_oceania') = yes; else cproblem('c_oceania') = no;));
42301   solve witch_c_sasia maximizing OBJADMM using nlp; if((witch_c_sasia.solvelink eq 6) or (witch_c_sasia.solvelink eq 3), remh('c_sasia') = witch_c_sasia.handle; else solrep('c_sasia','objval')=witch_c_sasia.objval;solrep('c_sasia','solvestat')=witch_c_sasia.solvestat;solrep('c_sasia','modelstat')=witch_c_sasia.modelstat;solrep('c_sasia','iterusd')=witch_c_sasia.iterusd;solrep('c_sasia','resusd')=witch_c_sasia.resusd;solrep('c_sasia','numvar')=witch_c_sasia.numvar;solrep('c_sasia','numequ')=witch_c_sasia.numequ;solrep('c_sasia','numnz')=witch_c_sasia.numnz;solrep('c_sasia','numvarproj')=witch_c_sasia.numvarproj;solrep('c_sasia','numinfes')=witch_c_sasia.numinfes;solrep('c_sasia','numnopt')=witch_c_sasia.numnopt;solrep('c_sasia','domusd')=witch_c_sasia.domusd;;  if((solrep('c_sasia','solvestat') ne 1) or (solrep('c_sasia','modelstat') ne 2), cproblem('c_sasia') = yes; else cproblem('c_sasia') = no;));
42306   solve witch_c_seasia maximizing OBJADMM using nlp; if((witch_c_seasia.solvelink eq 6) or (witch_c_seasia.solvelink eq 3), remh('c_seasia') = witch_c_seasia.handle; else solrep('c_seasia','objval')=witch_c_seasia.objval;solrep('c_seasia','solvestat')=witch_c_seasia.solvestat;solrep('c_seasia','modelstat')=witch_c_seasia.modelstat;solrep('c_seasia','iterusd')=witch_c_seasia.iterusd;solrep('c_seasia','resusd')=witch_c_seasia.resusd;solrep('c_seasia','numvar')=witch_c_seasia.numvar;solrep('c_seasia','numequ')=witch_c_seasia.numequ;solrep('c_seasia','numnz')=witch_c_seasia.numnz;solrep('c_seasia','numvarproj')=witch_c_seasia.numvarproj;solrep('c_seasia','numinfes')=witch_c_seasia.numinfes;solrep('c_seasia','numnopt')=witch_c_seasia.numnopt;solrep('c_seasia','domusd')=witch_c_seasia.domusd;;  if((solrep('c_seasia','solvestat') ne 1) or (solrep('c_seasia','modelstat') ne 2), cproblem('c_seasia') = yes; else cproblem('c_seasia') = no;));
42311   solve witch_c_southafrica maximizing OBJADMM using nlp; if((witch_c_southafrica.solvelink eq 6) or (witch_c_southafrica.solvelink eq 3), remh('c_southafrica') = witch_c_southafrica.handle; else solrep('c_southafrica','objval')=witch_c_southafrica.objval;solrep('c_southafrica','solvestat')=witch_c_southafrica.solvestat;solrep('c_southafrica','modelstat')=witch_c_southafrica.modelstat;solrep('c_southafrica','iterusd')=witch_c_southafrica.iterusd;solrep('c_southafrica','resusd')=witch_c_southafrica.resusd;solrep('c_southafrica','numvar')=witch_c_southafrica.numvar;solrep('c_southafrica','numequ')=witch_c_southafrica.numequ;solrep('c_southafrica','numnz')=witch_c_southafrica.numnz;solrep('c_southafrica','numvarproj')=witch_c_southafrica.numvarproj;solrep('c_southafrica','numinfes')=witch_c_southafrica.numinfes;solrep('c_southafrica','numnopt')=witch_c_southafrica.numnopt;solrep('c_southafrica','domusd')=witch_c_southafrica.domusd;;  if((solrep('c_southafrica','solvestat') ne 1) or (solrep('c_southafrica','modelstat') ne 2), cproblem('c_southafrica') = yes; else cproblem('c_southafrica') = no;));
42316   solve witch_c_ssa maximizing OBJADMM using nlp; if((witch_c_ssa.solvelink eq 6) or (witch_c_ssa.solvelink eq 3), remh('c_ssa') = witch_c_ssa.handle; else solrep('c_ssa','objval')=witch_c_ssa.objval;solrep('c_ssa','solvestat')=witch_c_ssa.solvestat;solrep('c_ssa','modelstat')=witch_c_ssa.modelstat;solrep('c_ssa','iterusd')=witch_c_ssa.iterusd;solrep('c_ssa','resusd')=witch_c_ssa.resusd;solrep('c_ssa','numvar')=witch_c_ssa.numvar;solrep('c_ssa','numequ')=witch_c_ssa.numequ;solrep('c_ssa','numnz')=witch_c_ssa.numnz;solrep('c_ssa','numvarproj')=witch_c_ssa.numvarproj;solrep('c_ssa','numinfes')=witch_c_ssa.numinfes;solrep('c_ssa','numnopt')=witch_c_ssa.numnopt;solrep('c_ssa','domusd')=witch_c_ssa.domusd;;  if((solrep('c_ssa','solvestat') ne 1) or (solrep('c_ssa','modelstat') ne 2), cproblem('c_ssa') = yes; else cproblem('c_ssa') = no;));
42321   solve witch_c_te maximizing OBJADMM using nlp; if((witch_c_te.solvelink eq 6) or (witch_c_te.solvelink eq 3), remh('c_te') = witch_c_te.handle; else solrep('c_te','objval')=witch_c_te.objval;solrep('c_te','solvestat')=witch_c_te.solvestat;solrep('c_te','modelstat')=witch_c_te.modelstat;solrep('c_te','iterusd')=witch_c_te.iterusd;solrep('c_te','resusd')=witch_c_te.resusd;solrep('c_te','numvar')=witch_c_te.numvar;solrep('c_te','numequ')=witch_c_te.numequ;solrep('c_te','numnz')=witch_c_te.numnz;solrep('c_te','numvarproj')=witch_c_te.numvarproj;solrep('c_te','numinfes')=witch_c_te.numinfes;solrep('c_te','numnopt')=witch_c_te.numnopt;solrep('c_te','domusd')=witch_c_te.domusd;;  if((solrep('c_te','solvestat') ne 1) or (solrep('c_te','modelstat') ne 2), cproblem('c_te') = yes; else cproblem('c_te') = no;));
42326   solve witch_c_usa maximizing OBJADMM using nlp; if((witch_c_usa.solvelink eq 6) or (witch_c_usa.solvelink eq 3), remh('c_usa') = witch_c_usa.handle; else solrep('c_usa','objval')=witch_c_usa.objval;solrep('c_usa','solvestat')=witch_c_usa.solvestat;solrep('c_usa','modelstat')=witch_c_usa.modelstat;solrep('c_usa','iterusd')=witch_c_usa.iterusd;solrep('c_usa','resusd')=witch_c_usa.resusd;solrep('c_usa','numvar')=witch_c_usa.numvar;solrep('c_usa','numequ')=witch_c_usa.numequ;solrep('c_usa','numnz')=witch_c_usa.numnz;solrep('c_usa','numvarproj')=witch_c_usa.numvarproj;solrep('c_usa','numinfes')=witch_c_usa.numinfes;solrep('c_usa','numnopt')=witch_c_usa.numnopt;solrep('c_usa','domusd')=witch_c_usa.domusd;;  if((solrep('c_usa','solvestat') ne 1) or (solrep('c_usa','modelstat') ne 2), cproblem('c_usa') = yes; else cproblem('c_usa') = no;));
42331   
42332  *-------------------------------------------------------------------------------
42333  * Retrieve solution in parallel model
42334  *-------------------------------------------------------------------------------
42335  repeat
42336      rcjob = readyCollect(remh);
42337      display$rcjob rcjob;
42338      abort$(rcjob>1)  'Problem waiting for model';
42339      loop(clt$handlecollect(remh(clt)),
42340          solrep(clt,'status') = handlestatus(remh(clt));
42341           if(sameas(clt,'c_brazil'), solrep('c_brazil','objval')=witch_c_brazil.objval;solrep('c_brazil','solvestat')=witch_c_brazil.solvestat;solrep('c_brazil','modelstat')=witch_c_brazil.modelstat;solrep('c_brazil','iterusd')=witch_c_brazil.iterusd;solrep('c_brazil','resusd')=witch_c_brazil.resusd;solrep('c_brazil','numvar')=witch_c_brazil.numvar;solrep('c_brazil','numequ')=witch_c_brazil.numequ;solrep('c_brazil','numnz')=witch_c_brazil.numnz;solrep('c_brazil','numvarproj')=witch_c_brazil.numvarproj;solrep('c_brazil','numinfes')=witch_c_brazil.numinfes;solrep('c_brazil','numnopt')=witch_c_brazil.numnopt;solrep('c_brazil','domusd')=witch_c_brazil.domusd;); if(sameas(clt,'c_canada'), solrep('c_canada','objval')=witch_c_canada.objval;solrep('c_canada','solvestat')=witch_c_canada.solvestat;solrep('c_canada','modelstat')=witch_c_canada.modelstat;solrep('c_canada','iterusd')=witch_c_canada.iterusd;solrep('c_canada','resusd')=witch_c_canada.resusd;solrep('c_canada','numvar')=witch_c_canada.numvar;solrep('c_canada','numequ')=witch_c_canada.numequ;solrep('c_canada','numnz')=witch_c_canada.numnz;solrep('c_canada','numvarproj')=witch_c_canada.numvarproj;solrep('c_canada','numinfes')=witch_c_canada.numinfes;solrep('c_canada','numnopt')=witch_c_canada.numnopt;solrep('c_canada','domusd')=witch_c_canada.domusd;); if(sameas(clt,'c_china'), solrep('c_china','objval')=witch_c_china.objval;solrep('c_china','solvestat')=witch_c_china.solvestat;solrep('c_china','modelstat')=witch_c_china.modelstat;solrep('c_china','iterusd')=witch_c_china.iterusd;solrep('c_china','resusd')=witch_c_china.resusd;solrep('c_china','numvar')=witch_c_china.numvar;solrep('c_china','numequ')=witch_c_china.numequ;solrep('c_china','numnz')=witch_c_china.numnz;solrep('c_china','numvarproj')=witch_c_china.numvarproj;solrep('c_china','numinfes')=witch_c_china.numinfes;solrep('c_china','numnopt')=witch_c_china.numnopt;solrep('c_china','domusd')=witch_c_china.domusd;); if(sameas(clt,'c_europe'), solrep('c_europe','objval')=witch_c_europe.objval;solrep('c_europe','solvestat')=witch_c_europe.solvestat;solrep('c_europe','modelstat')=witch_c_europe.modelstat;solrep('c_europe','iterusd')=witch_c_europe.iterusd;solrep('c_europe','resusd')=witch_c_europe.resusd;solrep('c_europe','numvar')=witch_c_europe.numvar;solrep('c_europe','numequ')=witch_c_europe.numequ;solrep('c_europe','numnz')=witch_c_europe.numnz;solrep('c_europe','numvarproj')=witch_c_europe.numvarproj;solrep('c_europe','numinfes')=witch_c_europe.numinfes;solrep('c_europe','numnopt')=witch_c_europe.numnopt;solrep('c_europe','domusd')=witch_c_europe.domusd;); if(sameas(clt,'c_india'), solrep('c_india','objval')=witch_c_india.objval;solrep('c_india','solvestat')=witch_c_india.solvestat;solrep('c_india','modelstat')=witch_c_india.modelstat;solrep('c_india','iterusd')=witch_c_india.iterusd;solrep('c_india','resusd')=witch_c_india.resusd;solrep('c_india','numvar')=witch_c_india.numvar;solrep('c_india','numequ')=witch_c_india.numequ;solrep('c_india','numnz')=witch_c_india.numnz;solrep('c_india','numvarproj')=witch_c_india.numvarproj;solrep('c_india','numinfes')=witch_c_india.numinfes;solrep('c_india','numnopt')=witch_c_india.numnopt;solrep('c_india','domusd')=witch_c_india.domusd;); if(sameas(clt,'c_indonesia'), solrep('c_indonesia','objval')=witch_c_indonesia.objval;solrep('c_indonesia','solvestat')=witch_c_indonesia.solvestat;solrep('c_indonesia','modelstat')=witch_c_indonesia.modelstat;solrep('c_indonesia','iterusd')=witch_c_indonesia.iterusd;solrep('c_indonesia','resusd')=witch_c_indonesia.resusd;solrep('c_indonesia','numvar')=witch_c_indonesia.numvar;solrep('c_indonesia','numequ')=witch_c_indonesia.numequ;solrep('c_indonesia','numnz')=witch_c_indonesia.numnz;solrep('c_indonesia','numvarproj')=witch_c_indonesia.numvarproj;solrep('c_indonesia','numinfes')=witch_c_indonesia.numinfes;solrep('c_indonesia','numnopt')=witch_c_indonesia.numnopt;solrep('c_indonesia','domusd')=witch_c_indonesia.domusd;); if(sameas(clt,'c_jpnkor'), solrep('c_jpnkor','objval')=witch_c_jpnkor.objval;solrep('c_jpnkor','solvestat')=witch_c_jpnkor.solvestat;solrep('c_jpnkor','modelstat')=witch_c_jpnkor.modelstat;solrep('c_jpnkor','iterusd')=witch_c_jpnkor.iterusd;solrep('c_jpnkor','resusd')=witch_c_jpnkor.resusd;solrep('c_jpnkor','numvar')=witch_c_jpnkor.numvar;solrep('c_jpnkor','numequ')=witch_c_jpnkor.numequ;solrep('c_jpnkor','numnz')=witch_c_jpnkor.numnz;solrep('c_jpnkor','numvarproj')=witch_c_jpnkor.numvarproj;solrep('c_jpnkor','numinfes')=witch_c_jpnkor.numinfes;solrep('c_jpnkor','numnopt')=witch_c_jpnkor.numnopt;solrep('c_jpnkor','domusd')=witch_c_jpnkor.domusd;); if(sameas(clt,'c_laca'), solrep('c_laca','objval')=witch_c_laca.objval;solrep('c_laca','solvestat')=witch_c_laca.solvestat;solrep('c_laca','modelstat')=witch_c_laca.modelstat;solrep('c_laca','iterusd')=witch_c_laca.iterusd;solrep('c_laca','resusd')=witch_c_laca.resusd;solrep('c_laca','numvar')=witch_c_laca.numvar;solrep('c_laca','numequ')=witch_c_laca.numequ;solrep('c_laca','numnz')=witch_c_laca.numnz;solrep('c_laca','numvarproj')=witch_c_laca.numvarproj;solrep('c_laca','numinfes')=witch_c_laca.numinfes;solrep('c_laca','numnopt')=witch_c_laca.numnopt;solrep('c_laca','domusd')=witch_c_laca.domusd;); if(sameas(clt,'c_mena'), solrep('c_mena','objval')=witch_c_mena.objval;solrep('c_mena','solvestat')=witch_c_mena.solvestat;solrep('c_mena','modelstat')=witch_c_mena.modelstat;solrep('c_mena','iterusd')=witch_c_mena.iterusd;solrep('c_mena','resusd')=witch_c_mena.resusd;solrep('c_mena','numvar')=witch_c_mena.numvar;solrep('c_mena','numequ')=witch_c_mena.numequ;solrep('c_mena','numnz')=witch_c_mena.numnz;solrep('c_mena','numvarproj')=witch_c_mena.numvarproj;solrep('c_mena','numinfes')=witch_c_mena.numinfes;solrep('c_mena','numnopt')=witch_c_mena.numnopt;solrep('c_mena','domusd')=witch_c_mena.domusd;); if(sameas(clt,'c_mexico'), solrep('c_mexico','objval')=witch_c_mexico.objval;solrep('c_mexico','solvestat')=witch_c_mexico.solvestat;solrep('c_mexico','modelstat')=witch_c_mexico.modelstat;solrep('c_mexico','iterusd')=witch_c_mexico.iterusd;solrep('c_mexico','resusd')=witch_c_mexico.resusd;solrep('c_mexico','numvar')=witch_c_mexico.numvar;solrep('c_mexico','numequ')=witch_c_mexico.numequ;solrep('c_mexico','numnz')=witch_c_mexico.numnz;solrep('c_mexico','numvarproj')=witch_c_mexico.numvarproj;solrep('c_mexico','numinfes')=witch_c_mexico.numinfes;solrep('c_mexico','numnopt')=witch_c_mexico.numnopt;solrep('c_mexico','domusd')=witch_c_mexico.domusd;); if(sameas(clt,'c_oceania'), solrep('c_oceania','objval')=witch_c_oceania.objval;solrep('c_oceania','solvestat')=witch_c_oceania.solvestat;solrep('c_oceania','modelstat')=witch_c_oceania.modelstat;solrep('c_oceania','iterusd')=witch_c_oceania.iterusd;solrep('c_oceania','resusd')=witch_c_oceania.resusd;solrep('c_oceania','numvar')=witch_c_oceania.numvar;solrep('c_oceania','numequ')=witch_c_oceania.numequ;solrep('c_oceania','numnz')=witch_c_oceania.numnz;solrep('c_oceania','numvarproj')=witch_c_oceania.numvarproj;solrep('c_oceania','numinfes')=witch_c_oceania.numinfes;solrep('c_oceania','numnopt')=witch_c_oceania.numnopt;solrep('c_oceania','domusd')=witch_c_oceania.domusd;); if(sameas(clt,'c_sasia'), solrep('c_sasia','objval')=witch_c_sasia.objval;solrep('c_sasia','solvestat')=witch_c_sasia.solvestat;solrep('c_sasia','modelstat')=witch_c_sasia.modelstat;solrep('c_sasia','iterusd')=witch_c_sasia.iterusd;solrep('c_sasia','resusd')=witch_c_sasia.resusd;solrep('c_sasia','numvar')=witch_c_sasia.numvar;solrep('c_sasia','numequ')=witch_c_sasia.numequ;solrep('c_sasia','numnz')=witch_c_sasia.numnz;solrep('c_sasia','numvarproj')=witch_c_sasia.numvarproj;solrep('c_sasia','numinfes')=witch_c_sasia.numinfes;solrep('c_sasia','numnopt')=witch_c_sasia.numnopt;solrep('c_sasia','domusd')=witch_c_sasia.domusd;); if(sameas(clt,'c_seasia'), solrep('c_seasia','objval')=witch_c_seasia.objval;solrep('c_seasia','solvestat')=witch_c_seasia.solvestat;solrep('c_seasia','modelstat')=witch_c_seasia.modelstat;solrep('c_seasia','iterusd')=witch_c_seasia.iterusd;solrep('c_seasia','resusd')=witch_c_seasia.resusd;solrep('c_seasia','numvar')=witch_c_seasia.numvar;solrep('c_seasia','numequ')=witch_c_seasia.numequ;solrep('c_seasia','numnz')=witch_c_seasia.numnz;solrep('c_seasia','numvarproj')=witch_c_seasia.numvarproj;solrep('c_seasia','numinfes')=witch_c_seasia.numinfes;solrep('c_seasia','numnopt')=witch_c_seasia.numnopt;solrep('c_seasia','domusd')=witch_c_seasia.domusd;); if(sameas(clt,'c_southafrica'), solrep('c_southafrica','objval')=witch_c_southafrica.objval;solrep('c_southafrica','solvestat')=witch_c_southafrica.solvestat;solrep('c_southafrica','modelstat')=witch_c_southafrica.modelstat;solrep('c_southafrica','iterusd')=witch_c_southafrica.iterusd;solrep('c_southafrica','resusd')=witch_c_southafrica.resusd;solrep('c_southafrica','numvar')=witch_c_southafrica.numvar;solrep('c_southafrica','numequ')=witch_c_southafrica.numequ;solrep('c_southafrica','numnz')=witch_c_southafrica.numnz;solrep('c_southafrica','numvarproj')=witch_c_southafrica.numvarproj;solrep('c_southafrica','numinfes')=witch_c_southafrica.numinfes;solrep('c_southafrica','numnopt')=witch_c_southafrica.numnopt;solrep('c_southafrica','domusd')=witch_c_southafrica.domusd;); if(sameas(clt,'c_ssa'), solrep('c_ssa','objval')=witch_c_ssa.objval;solrep('c_ssa','solvestat')=witch_c_ssa.solvestat;solrep('c_ssa','modelstat')=witch_c_ssa.modelstat;solrep('c_ssa','iterusd')=witch_c_ssa.iterusd;solrep('c_ssa','resusd')=witch_c_ssa.resusd;solrep('c_ssa','numvar')=witch_c_ssa.numvar;solrep('c_ssa','numequ')=witch_c_ssa.numequ;solrep('c_ssa','numnz')=witch_c_ssa.numnz;solrep('c_ssa','numvarproj')=witch_c_ssa.numvarproj;solrep('c_ssa','numinfes')=witch_c_ssa.numinfes;solrep('c_ssa','numnopt')=witch_c_ssa.numnopt;solrep('c_ssa','domusd')=witch_c_ssa.domusd;); if(sameas(clt,'c_te'), solrep('c_te','objval')=witch_c_te.objval;solrep('c_te','solvestat')=witch_c_te.solvestat;solrep('c_te','modelstat')=witch_c_te.modelstat;solrep('c_te','iterusd')=witch_c_te.iterusd;solrep('c_te','resusd')=witch_c_te.resusd;solrep('c_te','numvar')=witch_c_te.numvar;solrep('c_te','numequ')=witch_c_te.numequ;solrep('c_te','numnz')=witch_c_te.numnz;solrep('c_te','numvarproj')=witch_c_te.numvarproj;solrep('c_te','numinfes')=witch_c_te.numinfes;solrep('c_te','numnopt')=witch_c_te.numnopt;solrep('c_te','domusd')=witch_c_te.domusd;); if(sameas(clt,'c_usa'), solrep('c_usa','objval')=witch_c_usa.objval;solrep('c_usa','solvestat')=witch_c_usa.solvestat;solrep('c_usa','modelstat')=witch_c_usa.modelstat;solrep('c_usa','iterusd')=witch_c_usa.iterusd;solrep('c_usa','resusd')=witch_c_usa.resusd;solrep('c_usa','numvar')=witch_c_usa.numvar;solrep('c_usa','numequ')=witch_c_usa.numequ;solrep('c_usa','numnz')=witch_c_usa.numnz;solrep('c_usa','numvarproj')=witch_c_usa.numvarproj;solrep('c_usa','numinfes')=witch_c_usa.numinfes;solrep('c_usa','numnopt')=witch_c_usa.numnopt;solrep('c_usa','domusd')=witch_c_usa.domusd;); ;;
42342          abort$handledelete(remh(clt)) 'ERROR: problem deleting handles' ;
42343          remh(clt)=0;
42344           if((solrep(clt,'solvestat') ne 1) or (solrep(clt,'modelstat') ne 2), cproblem(clt) = yes; else cproblem(clt) = no;);
42345      );
42346  until ((card(remh) eq 0) or ((timeelapsed-timer) gt 1e7));
42347   
42348  if(card(remh) gt 0,
42349    display 'TIME OUT: 1e7 seconds elapsed and not all solves are complete';
42350    cproblem(clt)$(remh(clt)) = yes;
42351  );
42352   
42353  *-------------------------------------------------------------------------------
42354  * Rerun individual problem in case of infeasibility
42355  *-------------------------------------------------------------------------------
42356   
42358   
42359  $macro seqsolve(clt) \
42360    witch_&clt.solvelink = 0; \
42361    launchsolve(&clt); \
42362    witch_&clt.solvelink = 3;
42363   
42364  * rerun models solved with errors
42365  if(card(cproblem) gt 0,
42366    loop(retry$((card(cproblem) gt 0) and (ord(retry) le 2) ),
42367        cproblem2(clt) = yes$cproblem(clt);
42368        loop(cproblem2(clt),
42369             if(sameas(clt,'c_brazil'),  witch_c_brazil.solvelink = 0;  solve witch_c_brazil maximizing OBJADMM using nlp; if((witch_c_brazil.solvelink eq 6) or (witch_c_brazil.solvelink eq 3), remh('c_brazil') = witch_c_brazil.handle; else solrep('c_brazil','objval')=witch_c_brazil.objval;solrep('c_brazil','solvestat')=witch_c_brazil.solvestat;solrep('c_brazil','modelstat')=witch_c_brazil.modelstat;solrep('c_brazil','iterusd')=witch_c_brazil.iterusd;solrep('c_brazil','resusd')=witch_c_brazil.resusd;solrep('c_brazil','numvar')=witch_c_brazil.numvar;solrep('c_brazil','numequ')=witch_c_brazil.numequ;solrep('c_brazil','numnz')=witch_c_brazil.numnz;solrep('c_brazil','numvarproj')=witch_c_brazil.numvarproj;solrep('c_brazil','numinfes')=witch_c_brazil.numinfes;solrep('c_brazil','numnopt')=witch_c_brazil.numnopt;solrep('c_brazil','domusd')=witch_c_brazil.domusd;;  if((solrep('c_brazil','solvestat') ne 1) or (solrep('c_brazil','modelstat') ne 2), cproblem('c_brazil') = yes; else cproblem('c_brazil') = no;));; witch_c_brazil.solvelink = 3;); if(sameas(clt,'c_canada'),  witch_c_canada.solvelink = 0;  solve witch_c_canada maximizing OBJADMM using nlp; if((witch_c_canada.solvelink eq 6) or (witch_c_canada.solvelink eq 3), remh('c_canada') = witch_c_canada.handle; else solrep('c_canada','objval')=witch_c_canada.objval;solrep('c_canada','solvestat')=witch_c_canada.solvestat;solrep('c_canada','modelstat')=witch_c_canada.modelstat;solrep('c_canada','iterusd')=witch_c_canada.iterusd;solrep('c_canada','resusd')=witch_c_canada.resusd;solrep('c_canada','numvar')=witch_c_canada.numvar;solrep('c_canada','numequ')=witch_c_canada.numequ;solrep('c_canada','numnz')=witch_c_canada.numnz;solrep('c_canada','numvarproj')=witch_c_canada.numvarproj;solrep('c_canada','numinfes')=witch_c_canada.numinfes;solrep('c_canada','numnopt')=witch_c_canada.numnopt;solrep('c_canada','domusd')=witch_c_canada.domusd;;  if((solrep('c_canada','solvestat') ne 1) or (solrep('c_canada','modelstat') ne 2), cproblem('c_canada') = yes; else cproblem('c_canada') = no;));; witch_c_canada.solvelink = 3;); if(sameas(clt,'c_china'),  witch_c_china.solvelink = 0;  solve witch_c_china maximizing OBJADMM using nlp; if((witch_c_china.solvelink eq 6) or (witch_c_china.solvelink eq 3), remh('c_china') = witch_c_china.handle; else solrep('c_china','objval')=witch_c_china.objval;solrep('c_china','solvestat')=witch_c_china.solvestat;solrep('c_china','modelstat')=witch_c_china.modelstat;solrep('c_china','iterusd')=witch_c_china.iterusd;solrep('c_china','resusd')=witch_c_china.resusd;solrep('c_china','numvar')=witch_c_china.numvar;solrep('c_china','numequ')=witch_c_china.numequ;solrep('c_china','numnz')=witch_c_china.numnz;solrep('c_china','numvarproj')=witch_c_china.numvarproj;solrep('c_china','numinfes')=witch_c_china.numinfes;solrep('c_china','numnopt')=witch_c_china.numnopt;solrep('c_china','domusd')=witch_c_china.domusd;;  if((solrep('c_china','solvestat') ne 1) or (solrep('c_china','modelstat') ne 2), cproblem('c_china') = yes; else cproblem('c_china') = no;));; witch_c_china.solvelink = 3;); if(sameas(clt,'c_europe'),  witch_c_europe.solvelink = 0;  solve witch_c_europe maximizing OBJADMM using nlp; if((witch_c_europe.solvelink eq 6) or (witch_c_europe.solvelink eq 3), remh('c_europe') = witch_c_europe.handle; else solrep('c_europe','objval')=witch_c_europe.objval;solrep('c_europe','solvestat')=witch_c_europe.solvestat;solrep('c_europe','modelstat')=witch_c_europe.modelstat;solrep('c_europe','iterusd')=witch_c_europe.iterusd;solrep('c_europe','resusd')=witch_c_europe.resusd;solrep('c_europe','numvar')=witch_c_europe.numvar;solrep('c_europe','numequ')=witch_c_europe.numequ;solrep('c_europe','numnz')=witch_c_europe.numnz;solrep('c_europe','numvarproj')=witch_c_europe.numvarproj;solrep('c_europe','numinfes')=witch_c_europe.numinfes;solrep('c_europe','numnopt')=witch_c_europe.numnopt;solrep('c_europe','domusd')=witch_c_europe.domusd;;  if((solrep('c_europe','solvestat') ne 1) or (solrep('c_europe','modelstat') ne 2), cproblem('c_europe') = yes; else cproblem('c_europe') = no;));; witch_c_europe.solvelink = 3;); if(sameas(clt,'c_india'),  witch_c_india.solvelink = 0;  solve witch_c_india maximizing OBJADMM using nlp; if((witch_c_india.solvelink eq 6) or (witch_c_india.solvelink eq 3), remh('c_india') = witch_c_india.handle; else solrep('c_india','objval')=witch_c_india.objval;solrep('c_india','solvestat')=witch_c_india.solvestat;solrep('c_india','modelstat')=witch_c_india.modelstat;solrep('c_india','iterusd')=witch_c_india.iterusd;solrep('c_india','resusd')=witch_c_india.resusd;solrep('c_india','numvar')=witch_c_india.numvar;solrep('c_india','numequ')=witch_c_india.numequ;solrep('c_india','numnz')=witch_c_india.numnz;solrep('c_india','numvarproj')=witch_c_india.numvarproj;solrep('c_india','numinfes')=witch_c_india.numinfes;solrep('c_india','numnopt')=witch_c_india.numnopt;solrep('c_india','domusd')=witch_c_india.domusd;;  if((solrep('c_india','solvestat') ne 1) or (solrep('c_india','modelstat') ne 2), cproblem('c_india') = yes; else cproblem('c_india') = no;));; witch_c_india.solvelink = 3;); if(sameas(clt,'c_indonesia'),  witch_c_indonesia.solvelink = 0;  solve witch_c_indonesia maximizing OBJADMM using nlp; if((witch_c_indonesia.solvelink eq 6) or (witch_c_indonesia.solvelink eq 3), remh('c_indonesia') = witch_c_indonesia.handle; else solrep('c_indonesia','objval')=witch_c_indonesia.objval;solrep('c_indonesia','solvestat')=witch_c_indonesia.solvestat;solrep('c_indonesia','modelstat')=witch_c_indonesia.modelstat;solrep('c_indonesia','iterusd')=witch_c_indonesia.iterusd;solrep('c_indonesia','resusd')=witch_c_indonesia.resusd;solrep('c_indonesia','numvar')=witch_c_indonesia.numvar;solrep('c_indonesia','numequ')=witch_c_indonesia.numequ;solrep('c_indonesia','numnz')=witch_c_indonesia.numnz;solrep('c_indonesia','numvarproj')=witch_c_indonesia.numvarproj;solrep('c_indonesia','numinfes')=witch_c_indonesia.numinfes;solrep('c_indonesia','numnopt')=witch_c_indonesia.numnopt;solrep('c_indonesia','domusd')=witch_c_indonesia.domusd;;  if((solrep('c_indonesia','solvestat') ne 1) or (solrep('c_indonesia','modelstat') ne 2), cproblem('c_indonesia') = yes; else cproblem('c_indonesia') = no;));; witch_c_indonesia.solvelink = 3;); if(sameas(clt,'c_jpnkor'),  witch_c_jpnkor.solvelink = 0;  solve witch_c_jpnkor maximizing OBJADMM using nlp; if((witch_c_jpnkor.solvelink eq 6) or (witch_c_jpnkor.solvelink eq 3), remh('c_jpnkor') = witch_c_jpnkor.handle; else solrep('c_jpnkor','objval')=witch_c_jpnkor.objval;solrep('c_jpnkor','solvestat')=witch_c_jpnkor.solvestat;solrep('c_jpnkor','modelstat')=witch_c_jpnkor.modelstat;solrep('c_jpnkor','iterusd')=witch_c_jpnkor.iterusd;solrep('c_jpnkor','resusd')=witch_c_jpnkor.resusd;solrep('c_jpnkor','numvar')=witch_c_jpnkor.numvar;solrep('c_jpnkor','numequ')=witch_c_jpnkor.numequ;solrep('c_jpnkor','numnz')=witch_c_jpnkor.numnz;solrep('c_jpnkor','numvarproj')=witch_c_jpnkor.numvarproj;solrep('c_jpnkor','numinfes')=witch_c_jpnkor.numinfes;solrep('c_jpnkor','numnopt')=witch_c_jpnkor.numnopt;solrep('c_jpnkor','domusd')=witch_c_jpnkor.domusd;;  if((solrep('c_jpnkor','solvestat') ne 1) or (solrep('c_jpnkor','modelstat') ne 2), cproblem('c_jpnkor') = yes; else cproblem('c_jpnkor') = no;));; witch_c_jpnkor.solvelink = 3;); if(sameas(clt,'c_laca'),  witch_c_laca.solvelink = 0;  solve witch_c_laca maximizing OBJADMM using nlp; if((witch_c_laca.solvelink eq 6) or (witch_c_laca.solvelink eq 3), remh('c_laca') = witch_c_laca.handle; else solrep('c_laca','objval')=witch_c_laca.objval;solrep('c_laca','solvestat')=witch_c_laca.solvestat;solrep('c_laca','modelstat')=witch_c_laca.modelstat;solrep('c_laca','iterusd')=witch_c_laca.iterusd;solrep('c_laca','resusd')=witch_c_laca.resusd;solrep('c_laca','numvar')=witch_c_laca.numvar;solrep('c_laca','numequ')=witch_c_laca.numequ;solrep('c_laca','numnz')=witch_c_laca.numnz;solrep('c_laca','numvarproj')=witch_c_laca.numvarproj;solrep('c_laca','numinfes')=witch_c_laca.numinfes;solrep('c_laca','numnopt')=witch_c_laca.numnopt;solrep('c_laca','domusd')=witch_c_laca.domusd;;  if((solrep('c_laca','solvestat') ne 1) or (solrep('c_laca','modelstat') ne 2), cproblem('c_laca') = yes; else cproblem('c_laca') = no;));; witch_c_laca.solvelink = 3;); if(sameas(clt,'c_mena'),  witch_c_mena.solvelink = 0;  solve witch_c_mena maximizing OBJADMM using nlp; if((witch_c_mena.solvelink eq 6) or (witch_c_mena.solvelink eq 3), remh('c_mena') = witch_c_mena.handle; else solrep('c_mena','objval')=witch_c_mena.objval;solrep('c_mena','solvestat')=witch_c_mena.solvestat;solrep('c_mena','modelstat')=witch_c_mena.modelstat;solrep('c_mena','iterusd')=witch_c_mena.iterusd;solrep('c_mena','resusd')=witch_c_mena.resusd;solrep('c_mena','numvar')=witch_c_mena.numvar;solrep('c_mena','numequ')=witch_c_mena.numequ;solrep('c_mena','numnz')=witch_c_mena.numnz;solrep('c_mena','numvarproj')=witch_c_mena.numvarproj;solrep('c_mena','numinfes')=witch_c_mena.numinfes;solrep('c_mena','numnopt')=witch_c_mena.numnopt;solrep('c_mena','domusd')=witch_c_mena.domusd;;  if((solrep('c_mena','solvestat') ne 1) or (solrep('c_mena','modelstat') ne 2), cproblem('c_mena') = yes; else cproblem('c_mena') = no;));; witch_c_mena.solvelink = 3;); if(sameas(clt,'c_mexico'),  witch_c_mexico.solvelink = 0;  solve witch_c_mexico maximizing OBJADMM using nlp; if((witch_c_mexico.solvelink eq 6) or (witch_c_mexico.solvelink eq 3), remh('c_mexico') = witch_c_mexico.handle; else solrep('c_mexico','objval')=witch_c_mexico.objval;solrep('c_mexico','solvestat')=witch_c_mexico.solvestat;solrep('c_mexico','modelstat')=witch_c_mexico.modelstat;solrep('c_mexico','iterusd')=witch_c_mexico.iterusd;solrep('c_mexico','resusd')=witch_c_mexico.resusd;solrep('c_mexico','numvar')=witch_c_mexico.numvar;solrep('c_mexico','numequ')=witch_c_mexico.numequ;solrep('c_mexico','numnz')=witch_c_mexico.numnz;solrep('c_mexico','numvarproj')=witch_c_mexico.numvarproj;solrep('c_mexico','numinfes')=witch_c_mexico.numinfes;solrep('c_mexico','numnopt')=witch_c_mexico.numnopt;solrep('c_mexico','domusd')=witch_c_mexico.domusd;;  if((solrep('c_mexico','solvestat') ne 1) or (solrep('c_mexico','modelstat') ne 2), cproblem('c_mexico') = yes; else cproblem('c_mexico') = no;));; witch_c_mexico.solvelink = 3;); if(sameas(clt,'c_oceania'),  witch_c_oceania.solvelink = 0;  solve witch_c_oceania maximizing OBJADMM using nlp; if((witch_c_oceania.solvelink eq 6) or (witch_c_oceania.solvelink eq 3), remh('c_oceania') = witch_c_oceania.handle; else solrep('c_oceania','objval')=witch_c_oceania.objval;solrep('c_oceania','solvestat')=witch_c_oceania.solvestat;solrep('c_oceania','modelstat')=witch_c_oceania.modelstat;solrep('c_oceania','iterusd')=witch_c_oceania.iterusd;solrep('c_oceania','resusd')=witch_c_oceania.resusd;solrep('c_oceania','numvar')=witch_c_oceania.numvar;solrep('c_oceania','numequ')=witch_c_oceania.numequ;solrep('c_oceania','numnz')=witch_c_oceania.numnz;solrep('c_oceania','numvarproj')=witch_c_oceania.numvarproj;solrep('c_oceania','numinfes')=witch_c_oceania.numinfes;solrep('c_oceania','numnopt')=witch_c_oceania.numnopt;solrep('c_oceania','domusd')=witch_c_oceania.domusd;;  if((solrep('c_oceania','solvestat') ne 1) or (solrep('c_oceania','modelstat') ne 2), cproblem('c_oceania') = yes; else cproblem('c_oceania') = no;));; witch_c_oceania.solvelink = 3;); if(sameas(clt,'c_sasia'),  witch_c_sasia.solvelink = 0;  solve witch_c_sasia maximizing OBJADMM using nlp; if((witch_c_sasia.solvelink eq 6) or (witch_c_sasia.solvelink eq 3), remh('c_sasia') = witch_c_sasia.handle; else solrep('c_sasia','objval')=witch_c_sasia.objval;solrep('c_sasia','solvestat')=witch_c_sasia.solvestat;solrep('c_sasia','modelstat')=witch_c_sasia.modelstat;solrep('c_sasia','iterusd')=witch_c_sasia.iterusd;solrep('c_sasia','resusd')=witch_c_sasia.resusd;solrep('c_sasia','numvar')=witch_c_sasia.numvar;solrep('c_sasia','numequ')=witch_c_sasia.numequ;solrep('c_sasia','numnz')=witch_c_sasia.numnz;solrep('c_sasia','numvarproj')=witch_c_sasia.numvarproj;solrep('c_sasia','numinfes')=witch_c_sasia.numinfes;solrep('c_sasia','numnopt')=witch_c_sasia.numnopt;solrep('c_sasia','domusd')=witch_c_sasia.domusd;;  if((solrep('c_sasia','solvestat') ne 1) or (solrep('c_sasia','modelstat') ne 2), cproblem('c_sasia') = yes; else cproblem('c_sasia') = no;));; witch_c_sasia.solvelink = 3;); if(sameas(clt,'c_seasia'),  witch_c_seasia.solvelink = 0;  solve witch_c_seasia maximizing OBJADMM using nlp; if((witch_c_seasia.solvelink eq 6) or (witch_c_seasia.solvelink eq 3), remh('c_seasia') = witch_c_seasia.handle; else solrep('c_seasia','objval')=witch_c_seasia.objval;solrep('c_seasia','solvestat')=witch_c_seasia.solvestat;solrep('c_seasia','modelstat')=witch_c_seasia.modelstat;solrep('c_seasia','iterusd')=witch_c_seasia.iterusd;solrep('c_seasia','resusd')=witch_c_seasia.resusd;solrep('c_seasia','numvar')=witch_c_seasia.numvar;solrep('c_seasia','numequ')=witch_c_seasia.numequ;solrep('c_seasia','numnz')=witch_c_seasia.numnz;solrep('c_seasia','numvarproj')=witch_c_seasia.numvarproj;solrep('c_seasia','numinfes')=witch_c_seasia.numinfes;solrep('c_seasia','numnopt')=witch_c_seasia.numnopt;solrep('c_seasia','domusd')=witch_c_seasia.domusd;;  if((solrep('c_seasia','solvestat') ne 1) or (solrep('c_seasia','modelstat') ne 2), cproblem('c_seasia') = yes; else cproblem('c_seasia') = no;));; witch_c_seasia.solvelink = 3;); if(sameas(clt,'c_southafrica'),  witch_c_southafrica.solvelink = 0;  solve witch_c_southafrica maximizing OBJADMM using nlp; if((witch_c_southafrica.solvelink eq 6) or (witch_c_southafrica.solvelink eq 3), remh('c_southafrica') = witch_c_southafrica.handle; else solrep('c_southafrica','objval')=witch_c_southafrica.objval;solrep('c_southafrica','solvestat')=witch_c_southafrica.solvestat;solrep('c_southafrica','modelstat')=witch_c_southafrica.modelstat;solrep('c_southafrica','iterusd')=witch_c_southafrica.iterusd;solrep('c_southafrica','resusd')=witch_c_southafrica.resusd;solrep('c_southafrica','numvar')=witch_c_southafrica.numvar;solrep('c_southafrica','numequ')=witch_c_southafrica.numequ;solrep('c_southafrica','numnz')=witch_c_southafrica.numnz;solrep('c_southafrica','numvarproj')=witch_c_southafrica.numvarproj;solrep('c_southafrica','numinfes')=witch_c_southafrica.numinfes;solrep('c_southafrica','numnopt')=witch_c_southafrica.numnopt;solrep('c_southafrica','domusd')=witch_c_southafrica.domusd;;  if((solrep('c_southafrica','solvestat') ne 1) or (solrep('c_southafrica','modelstat') ne 2), cproblem('c_southafrica') = yes; else cproblem('c_southafrica') = no;));; witch_c_southafrica.solvelink = 3;); if(sameas(clt,'c_ssa'),  witch_c_ssa.solvelink = 0;  solve witch_c_ssa maximizing OBJADMM using nlp; if((witch_c_ssa.solvelink eq 6) or (witch_c_ssa.solvelink eq 3), remh('c_ssa') = witch_c_ssa.handle; else solrep('c_ssa','objval')=witch_c_ssa.objval;solrep('c_ssa','solvestat')=witch_c_ssa.solvestat;solrep('c_ssa','modelstat')=witch_c_ssa.modelstat;solrep('c_ssa','iterusd')=witch_c_ssa.iterusd;solrep('c_ssa','resusd')=witch_c_ssa.resusd;solrep('c_ssa','numvar')=witch_c_ssa.numvar;solrep('c_ssa','numequ')=witch_c_ssa.numequ;solrep('c_ssa','numnz')=witch_c_ssa.numnz;solrep('c_ssa','numvarproj')=witch_c_ssa.numvarproj;solrep('c_ssa','numinfes')=witch_c_ssa.numinfes;solrep('c_ssa','numnopt')=witch_c_ssa.numnopt;solrep('c_ssa','domusd')=witch_c_ssa.domusd;;  if((solrep('c_ssa','solvestat') ne 1) or (solrep('c_ssa','modelstat') ne 2), cproblem('c_ssa') = yes; else cproblem('c_ssa') = no;));; witch_c_ssa.solvelink = 3;); if(sameas(clt,'c_te'),  witch_c_te.solvelink = 0;  solve witch_c_te maximizing OBJADMM using nlp; if((witch_c_te.solvelink eq 6) or (witch_c_te.solvelink eq 3), remh('c_te') = witch_c_te.handle; else solrep('c_te','objval')=witch_c_te.objval;solrep('c_te','solvestat')=witch_c_te.solvestat;solrep('c_te','modelstat')=witch_c_te.modelstat;solrep('c_te','iterusd')=witch_c_te.iterusd;solrep('c_te','resusd')=witch_c_te.resusd;solrep('c_te','numvar')=witch_c_te.numvar;solrep('c_te','numequ')=witch_c_te.numequ;solrep('c_te','numnz')=witch_c_te.numnz;solrep('c_te','numvarproj')=witch_c_te.numvarproj;solrep('c_te','numinfes')=witch_c_te.numinfes;solrep('c_te','numnopt')=witch_c_te.numnopt;solrep('c_te','domusd')=witch_c_te.domusd;;  if((solrep('c_te','solvestat') ne 1) or (solrep('c_te','modelstat') ne 2), cproblem('c_te') = yes; else cproblem('c_te') = no;));; witch_c_te.solvelink = 3;); if(sameas(clt,'c_usa'),  witch_c_usa.solvelink = 0;  solve witch_c_usa maximizing OBJADMM using nlp; if((witch_c_usa.solvelink eq 6) or (witch_c_usa.solvelink eq 3), remh('c_usa') = witch_c_usa.handle; else solrep('c_usa','objval')=witch_c_usa.objval;solrep('c_usa','solvestat')=witch_c_usa.solvestat;solrep('c_usa','modelstat')=witch_c_usa.modelstat;solrep('c_usa','iterusd')=witch_c_usa.iterusd;solrep('c_usa','resusd')=witch_c_usa.resusd;solrep('c_usa','numvar')=witch_c_usa.numvar;solrep('c_usa','numequ')=witch_c_usa.numequ;solrep('c_usa','numnz')=witch_c_usa.numnz;solrep('c_usa','numvarproj')=witch_c_usa.numvarproj;solrep('c_usa','numinfes')=witch_c_usa.numinfes;solrep('c_usa','numnopt')=witch_c_usa.numnopt;solrep('c_usa','domusd')=witch_c_usa.domusd;;  if((solrep('c_usa','solvestat') ne 1) or (solrep('c_usa','modelstat') ne 2), cproblem('c_usa') = yes; else cproblem('c_usa') = no;));; witch_c_usa.solvelink = 3;); ;;
42370        );
42371    );
42372  );
42373   
42374  * Store model status
42375  * optimal: optimal (code=1) or locally optimal (code=2)
42376  * feasible: locally optimal (code=2) or feasible solution excluding discrete variables (code=7)
42377  all_optimal(run,siter)   = yes$(sum(clt,solrep(clt,'modelstat')) le sum(clt,2));
42378  all_feasible(run,siter)  = yes$(sum(clt$((solrep(clt,'modelstat') eq 2) or (solrep(clt,'modelstat') eq 7)),1) eq card(clt));
42379  nb_clt_infes(run,siter) = sum(clt$(solrep(clt,'modelstat') eq 4  or solrep(clt,'modelstat') eq 5  or solrep(clt,'modelstat') eq 6),1);
42380  nb_clt_noopt(run,siter) = sum(clt$(solrep(clt,'modelstat') eq 7),1);
42381  nb_tot_infes(run,siter) = sum(clt,solrep(clt,'numinfes'));
42382   
42384   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\compute_marginal.gms
42386  *-------------------------------------------------------------------------------
42387  * Retrive Marginal Values for the convergence algorithm
42388  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
42390  *-------------------------------------------------------------------------------
42391  * Extract the marginal value from equation
42392  * Usage:
42393  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
42394  *-------------------------------------------------------------------------------
42395   
42403  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_brazil') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_brazil.m(t,clt);
42413  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_canada') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_canada.m(t,clt);
42423  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_china') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_china.m(t,clt);
42433  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_europe') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_europe.m(t,clt);
42443  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_india') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_india.m(t,clt);
42453  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_indonesia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_indonesia.m(t,clt);
42463  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_jpnkor') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_jpnkor.m(t,clt);
42473  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_laca') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_laca.m(t,clt);
42483  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_mena') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_mena.m(t,clt);
42493  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_mexico') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_mexico.m(t,clt);
42503  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_oceania') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_oceania.m(t,clt);
42513  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_sasia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_sasia.m(t,clt);
42523  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_seasia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_seasia.m(t,clt);
42533  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_southafrica') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_southafrica.m(t,clt);
42543  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_ssa') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_ssa.m(t,clt);
42553  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_te') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_te.m(t,clt);
42563  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_usa') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_usa.m(t,clt);
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
42572  *-------------------------------------------------------------------------------
42573  * Extract the marginal value from equation
42574  * Usage:
42575  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
42576  *-------------------------------------------------------------------------------
42577   
42585  m_eqq_cc(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_brazil.m(t,tp1,n);
42595  m_eqq_cc(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_canada.m(t,tp1,n);
42605  m_eqq_cc(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_china.m(t,tp1,n);
42615  m_eqq_cc(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_europe.m(t,tp1,n);
42625  m_eqq_cc(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_india.m(t,tp1,n);
42635  m_eqq_cc(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_indonesia.m(t,tp1,n);
42645  m_eqq_cc(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_jpnkor.m(t,tp1,n);
42655  m_eqq_cc(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_laca.m(t,tp1,n);
42665  m_eqq_cc(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_mena.m(t,tp1,n);
42675  m_eqq_cc(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_mexico.m(t,tp1,n);
42685  m_eqq_cc(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_oceania.m(t,tp1,n);
42695  m_eqq_cc(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_sasia.m(t,tp1,n);
42705  m_eqq_cc(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_seasia.m(t,tp1,n);
42715  m_eqq_cc(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_southafrica.m(t,tp1,n);
42725  m_eqq_cc(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_ssa.m(t,tp1,n);
42735  m_eqq_cc(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_te.m(t,tp1,n);
42745  m_eqq_cc(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_usa.m(t,tp1,n);
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
42754  *-------------------------------------------------------------------------------
42755  * Extract the marginal value from equation
42756  * Usage:
42757  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
42758  *-------------------------------------------------------------------------------
42759   
42767  m_eqq_emi_lim(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_brazil.m(t,n);
42777  m_eqq_emi_lim(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_canada.m(t,n);
42787  m_eqq_emi_lim(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_china.m(t,n);
42797  m_eqq_emi_lim(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_europe.m(t,n);
42807  m_eqq_emi_lim(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_india.m(t,n);
42817  m_eqq_emi_lim(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_indonesia.m(t,n);
42827  m_eqq_emi_lim(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_jpnkor.m(t,n);
42837  m_eqq_emi_lim(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_laca.m(t,n);
42847  m_eqq_emi_lim(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_mena.m(t,n);
42857  m_eqq_emi_lim(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_mexico.m(t,n);
42867  m_eqq_emi_lim(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_oceania.m(t,n);
42877  m_eqq_emi_lim(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_sasia.m(t,n);
42887  m_eqq_emi_lim(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_seasia.m(t,n);
42897  m_eqq_emi_lim(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_southafrica.m(t,n);
42907  m_eqq_emi_lim(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_ssa.m(t,n);
42917  m_eqq_emi_lim(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_te.m(t,n);
42927  m_eqq_emi_lim(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_lim_c_usa.m(t,n);
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
42936  *-------------------------------------------------------------------------------
42937  * Extract the marginal value from equation
42938  * Usage:
42939  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
42940  *-------------------------------------------------------------------------------
42941   
42949  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_brazil.m(t,n,e);
42959  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_canada.m(t,n,e);
42969  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_china.m(t,n,e);
42979  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_europe.m(t,n,e);
42989  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_india.m(t,n,e);
42999  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_indonesia.m(t,n,e);
43009  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_jpnkor.m(t,n,e);
43019  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_laca.m(t,n,e);
43029  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_mena.m(t,n,e);
43039  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_mexico.m(t,n,e);
43049  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_oceania.m(t,n,e);
43059  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_sasia.m(t,n,e);
43069  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_seasia.m(t,n,e);
43079  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_southafrica.m(t,n,e);
43089  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_ssa.m(t,n,e);
43099  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_te.m(t,n,e);
43109  m_eqq_emi_tree(t,n,e)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_emi_tree_c_usa.m(t,n,e);
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
43118  *-------------------------------------------------------------------------------
43119  * Extract the marginal value from equation
43120  * Usage:
43121  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
43122  *-------------------------------------------------------------------------------
43123   
43131  m_eqq_y(t,n)$((map_clt_n('c_brazil',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_brazil.m(t,n);
43141  m_eqq_y(t,n)$((map_clt_n('c_canada',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_canada.m(t,n);
43151  m_eqq_y(t,n)$((map_clt_n('c_china',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_china.m(t,n);
43161  m_eqq_y(t,n)$((map_clt_n('c_europe',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_europe.m(t,n);
43171  m_eqq_y(t,n)$((map_clt_n('c_india',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_india.m(t,n);
43181  m_eqq_y(t,n)$((map_clt_n('c_indonesia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_indonesia.m(t,n);
43191  m_eqq_y(t,n)$((map_clt_n('c_jpnkor',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_jpnkor.m(t,n);
43201  m_eqq_y(t,n)$((map_clt_n('c_laca',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_laca.m(t,n);
43211  m_eqq_y(t,n)$((map_clt_n('c_mena',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_mena.m(t,n);
43221  m_eqq_y(t,n)$((map_clt_n('c_mexico',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_mexico.m(t,n);
43231  m_eqq_y(t,n)$((map_clt_n('c_oceania',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_oceania.m(t,n);
43241  m_eqq_y(t,n)$((map_clt_n('c_sasia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_sasia.m(t,n);
43251  m_eqq_y(t,n)$((map_clt_n('c_seasia',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_seasia.m(t,n);
43261  m_eqq_y(t,n)$((map_clt_n('c_southafrica',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_southafrica.m(t,n);
43271  m_eqq_y(t,n)$((map_clt_n('c_ssa',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_ssa.m(t,n);
43281  m_eqq_y(t,n)$((map_clt_n('c_te',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_te.m(t,n);
43291  m_eqq_y(t,n)$((map_clt_n('c_usa',n) and (not tfix(t)) and (year(t) le yeoh))) = eqq_y_c_usa.m(t,n);
43299   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
43301  *-------------------------------------------------------------------------------
43302  * Convergence algorithm
43303  *-------------------------------------------------------------------------------
43305   
43306  *-------------------------------------------------------------------------------
43308   
43309  * delta price is equal to the dual of the market clearing equation
43310  * Oil Market
43311  if(internal('oil'),
43312   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
43314  *-------------------------------------------------------------------------------
43315  * Extract the marginal value from equation
43316  * Usage:
43317  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
43318  *-------------------------------------------------------------------------------
43319   
43327  m_eqq_cc(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_brazil.m(t,tp1,n);
43337  m_eqq_cc(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_canada.m(t,tp1,n);
43347  m_eqq_cc(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_china.m(t,tp1,n);
43357  m_eqq_cc(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_europe.m(t,tp1,n);
43367  m_eqq_cc(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_india.m(t,tp1,n);
43377  m_eqq_cc(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_indonesia.m(t,tp1,n);
43387  m_eqq_cc(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_jpnkor.m(t,tp1,n);
43397  m_eqq_cc(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_laca.m(t,tp1,n);
43407  m_eqq_cc(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_mena.m(t,tp1,n);
43417  m_eqq_cc(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_mexico.m(t,tp1,n);
43427  m_eqq_cc(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_oceania.m(t,tp1,n);
43437  m_eqq_cc(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_sasia.m(t,tp1,n);
43447  m_eqq_cc(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_seasia.m(t,tp1,n);
43457  m_eqq_cc(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_southafrica.m(t,tp1,n);
43467  m_eqq_cc(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_ssa.m(t,tp1,n);
43477  m_eqq_cc(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_te.m(t,tp1,n);
43487  m_eqq_cc(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_usa.m(t,tp1,n);
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
43496  *-------------------------------------------------------------------------------
43497  * Extract the marginal value from equation
43498  * Usage:
43499  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
43500  *-------------------------------------------------------------------------------
43501   
43509  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_brazil') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_brazil.m(t,clt);
43519  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_canada') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_canada.m(t,clt);
43529  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_china') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_china.m(t,clt);
43539  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_europe') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_europe.m(t,clt);
43549  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_india') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_india.m(t,clt);
43559  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_indonesia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_indonesia.m(t,clt);
43569  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_jpnkor') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_jpnkor.m(t,clt);
43579  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_laca') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_laca.m(t,clt);
43589  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_mena') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_mena.m(t,clt);
43599  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_mexico') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_mexico.m(t,clt);
43609  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_oceania') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_oceania.m(t,clt);
43619  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_sasia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_sasia.m(t,clt);
43629  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_seasia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_seasia.m(t,clt);
43639  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_southafrica') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_southafrica.m(t,clt);
43649  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_ssa') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_ssa.m(t,clt);
43659  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_te') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_te.m(t,clt);
43669  m_eq_mkt_clearing_oil(t,clt)$(sameas(clt,'c_usa') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_oil_c_usa.m(t,clt);
43677   
43678  m_consumption(t,clt) = sum((n,tp1)$(map_clt_n(clt,n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))),m_eqq_cc(t,tp1,n))/sum(n$map_clt_n(clt,n),1);
43679  delta_price(run,siter,'oil',t)$(not tfix(t)) = (sum(clt$internal_clt('oil',clt),m_eq_mkt_clearing_oil(t,clt)/m_consumption(t,clt)))$(smin(clt$internal_clt('oil',clt),m_consumption(t,clt)) gt eps);
43680   
43681  );
43682  * Permit Markets
43683  loop(c_mkt$internal(c_mkt),
43684   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
43686  *-------------------------------------------------------------------------------
43687  * Extract the marginal value from equation
43688  * Usage:
43689  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
43690  *-------------------------------------------------------------------------------
43691   
43699  m_eqq_cc(t,tp1,n)$((map_clt_n('c_brazil',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_brazil.m(t,tp1,n);
43709  m_eqq_cc(t,tp1,n)$((map_clt_n('c_canada',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_canada.m(t,tp1,n);
43719  m_eqq_cc(t,tp1,n)$((map_clt_n('c_china',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_china.m(t,tp1,n);
43729  m_eqq_cc(t,tp1,n)$((map_clt_n('c_europe',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_europe.m(t,tp1,n);
43739  m_eqq_cc(t,tp1,n)$((map_clt_n('c_india',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_india.m(t,tp1,n);
43749  m_eqq_cc(t,tp1,n)$((map_clt_n('c_indonesia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_indonesia.m(t,tp1,n);
43759  m_eqq_cc(t,tp1,n)$((map_clt_n('c_jpnkor',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_jpnkor.m(t,tp1,n);
43769  m_eqq_cc(t,tp1,n)$((map_clt_n('c_laca',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_laca.m(t,tp1,n);
43779  m_eqq_cc(t,tp1,n)$((map_clt_n('c_mena',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_mena.m(t,tp1,n);
43789  m_eqq_cc(t,tp1,n)$((map_clt_n('c_mexico',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_mexico.m(t,tp1,n);
43799  m_eqq_cc(t,tp1,n)$((map_clt_n('c_oceania',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_oceania.m(t,tp1,n);
43809  m_eqq_cc(t,tp1,n)$((map_clt_n('c_sasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_sasia.m(t,tp1,n);
43819  m_eqq_cc(t,tp1,n)$((map_clt_n('c_seasia',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_seasia.m(t,tp1,n);
43829  m_eqq_cc(t,tp1,n)$((map_clt_n('c_southafrica',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_southafrica.m(t,tp1,n);
43839  m_eqq_cc(t,tp1,n)$((map_clt_n('c_ssa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_ssa.m(t,tp1,n);
43849  m_eqq_cc(t,tp1,n)$((map_clt_n('c_te',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_te.m(t,tp1,n);
43859  m_eqq_cc(t,tp1,n)$((map_clt_n('c_usa',n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))) = eqq_cc_c_usa.m(t,tp1,n);
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
43868  *-------------------------------------------------------------------------------
43869  * Extract the marginal value from equation
43870  * Usage:
43871  * $batinclude get_marginal eq_name set_dep (regional|coalitional) coalitions_list
43872  *-------------------------------------------------------------------------------
43873   
43881  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_brazil') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_brazil.m(c_mkt,t,clt);
43891  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_canada') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_canada.m(c_mkt,t,clt);
43901  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_china') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_china.m(c_mkt,t,clt);
43911  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_europe') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_europe.m(c_mkt,t,clt);
43921  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_india') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_india.m(c_mkt,t,clt);
43931  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_indonesia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_indonesia.m(c_mkt,t,clt);
43941  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_jpnkor') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_jpnkor.m(c_mkt,t,clt);
43951  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_laca') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_laca.m(c_mkt,t,clt);
43961  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_mena') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_mena.m(c_mkt,t,clt);
43971  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_mexico') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_mexico.m(c_mkt,t,clt);
43981  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_oceania') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_oceania.m(c_mkt,t,clt);
43991  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_sasia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_sasia.m(c_mkt,t,clt);
44001  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_seasia') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_seasia.m(c_mkt,t,clt);
44011  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_southafrica') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_southafrica.m(c_mkt,t,clt);
44021  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_ssa') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_ssa.m(c_mkt,t,clt);
44031  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_te') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_te.m(c_mkt,t,clt);
44041  m_eq_mkt_clearing_nip(c_mkt,t,clt)$(sameas(clt,'c_usa') and (not tfix(t)) and (year(t) le yeoh)) = eq_mkt_clearing_nip_c_usa.m(c_mkt,t,clt);
44049   
44050  m_consumption(t,clt) = sum((n,tp1)$(map_clt_n(clt,n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))),m_eqq_cc(t,tp1,n))/sum(n$map_clt_n(clt,n),1);
44051  delta_price(run,siter,c_mkt,t)$(not tfix(t)) = (sum(clt$internal_clt(c_mkt,clt),m_eq_mkt_clearing_nip(c_mkt,t,clt)/m_consumption(t,clt)))$(smin(clt$internal_clt(c_mkt,clt),m_consumption(t,clt)) gt eps);
44052   
44053  );
44054   
44055  *-------------------------------------------------------------------------------
44057   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
44059  *-------------------------------------------------------------------------------
44060  * ADMM algorithm
44061  *-------------------------------------------------------------------------------
44063   
44064  *-------------------------------------------------------------------------------
44066   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
44068  *-------------------------------------------------------------------------------
44069  * Convergence algorithm
44070  *-------------------------------------------------------------------------------
44072   
44073  *-------------------------------------------------------------------------------
44075   
44076  loop((t,n),
44077    if(sum(clt$(map_clt_n(clt,n) and negishi_coop(clt,n)),1) eq 0,
44078      w_negishi(t,n) = 1;
44079    else
44080      w_negishi(t,n) = ((Q.l('CC',t,n)/l(t,n))**(eta)) / sum((nn,clt)$(map_clt_n(clt,n) and map_clt_n(clt,nn)),(Q.l('cc',t,nn)/l(t,nn))**(eta))
44081    )
44082  );
44083  w_negishi_iter(run,siter+1,t,n) = w_negishi(t,n);
44084   
44085  *-------------------------------------------------------------------------------
44087   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
44089  *-------------------------------------------------------------------------------
44090  * ADMM algorithm
44091  *-------------------------------------------------------------------------------
44093   
44094  *-------------------------------------------------------------------------------
44096   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
44098  *-------------------------------------------------------------------------------
44099  * Convergence algorithm
44100  *-------------------------------------------------------------------------------
44102   
44103  *-------------------------------------------------------------------------------
44105   
44106  * Relative variation in investments
44107  * expressed in terms of [% of current total investment].
44108  allerr(run,siter,'inv') = 100 * sum((t,n)$(tcheck(t)),
44109                                abs(I.l('fg',t,n)-LAST_I.l('fg',t,n)) +
44110                                sum(jinv, abs(I_EN.l(jinv,t,n)-LAST_I_EN.l(jinv,t,n))) +
44111                                sum(rd, abs(I_RD.l(rd,t,n)-LAST_I_RD.l(rd,t,n))) +
44112                                sum(extract(f), abs(I_OUT.l(f,t,n)-LAST_I_OUT.l(f,t,n)))
44113                                ) /
44114                              sum((t,n)$(tcheck(t)),
44115                                I.l('fg',t,n) +
44116                                sum(rd,I_RD.l(rd,t,n)) * rd_crowd_out +
44117                                sum(jinv, I_EN.l(jinv,t,n)) +
44118                                sum(extract(f), I_OUT.l(f,t,n))
44119                                );
44120   
44121  * Variation in COST_FUEL
44122  * expressed in terms of [% of total level of consumption].
44123  allerr(run,siter,'pes') = 100 * sum((t,f,n)$(tcheck(t)), abs(COST_FUEL.l(f,t,n)-LAST_COST_FUEL.l(f,t,n))) / sum((t,n)$(tcheck(t)),Q.l('CC',t,n));
44124   
44125  * External markets [market between coalitions]
44126  * Variation in cost of oil
44127  * expressed in terms of [% of total level of consumption].
44128  errtrade('oil',tcheck(t)) = sum(n$trading_t('oil',t,n), Q_FUEL.l('oil',t,n) - Q_OUT.l('oil',t,n));
44129  allerr(run,siter,'oil')$(external('oil')) = 100 * sum(tcheck(t)$(sum(n$(trading_t('oil',t,n)),1)>0),
44130                                                   abs(errtrade('oil',t)) * FPRICE.l('oil',t)
44131                                                   ) / (sum((tcheck(t),n)$(trading_t('oil',t,n)),Q.l('CC',t,n)) + 1e-5);
44132   
44133  * Variation in cost of nip
44134  * expressed in terms of [% of total level of consumption].
44135  errtrade(c_mkt,tcheck(t)) = sum(n$trading_t(c_mkt,t,n), Q_EMI.l(c_mkt,t,n));
44136  allerr(run,siter,c_mkt)$(external(c_mkt)) = 100 * sum(tcheck(t)$(sum(n$(trading_t(c_mkt,t,n)),1)>0),
44137                                                   abs(errtrade(c_mkt,t)) * CPRICE.l(c_mkt,t)
44138                                                   ) / (sum((tcheck(t),n)$(trading_t(c_mkt,t,n)),Q.l('CC',t,n)) + 1e-5);
44139   
44140  * Internal markets [market within coalition]
44141  * Price variation
44142  * expressed in terms of [% of world price].
44143  allerr(run,siter,c_mkt)$(internal(c_mkt)) = 100 * sum(tcheck(t)$(sum(n$(trading_t(c_mkt,t,n)),1)>0), div0(abs(delta_price(run,siter,c_mkt,t)),CPRICE.l(c_mkt,t)));
44144  allerr(run,siter,f_mkt)$(internal(f_mkt)) = 100 * sum(tcheck(t)$(sum(n$(trading_t(f_mkt,t,n)),1)>0), div0(abs(delta_price(run,siter,f_mkt,t)),FPRICE.l(f_mkt,t)));
44145   
44146  * Excess permits of CO2
44147  * expressed in terms of [% of total of allowed emission].
44148  if(sum((c_mkt,t,n)$trading_t(c_mkt,t,n),1),
44149    allerr(run,siter, 'co2') = 100 * sum((tcheck(t),c_mkt), abs(errtrade(c_mkt,t))) /
44150                                 sum((tcheck(t),n,c_mkt)$trading_t(c_mkt,t,n),emi_cap(t,n))
44151  );
44152   
44153  * Relative variation in Negishi weigths
44154  * expressed in terms of [% of last seen value].
44155  allerr(run,siter,'wgt') = 100 * sum((tcheck(t), n)$w_negishi_iter(run,siter+1, t, n), abs(w_negishi_iter(run,siter+1, t, n) - w_negishi_iter(run,siter, t, n)) / w_negishi_iter(run,siter+1, t, n));
44156   
44157  *-------------------------------------------------------------------------------
44159   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
44161  *-------------------------------------------------------------------------------
44162  * ADMM algorithm
44163  *-------------------------------------------------------------------------------
44165   
44166  *-------------------------------------------------------------------------------
44168   
44169  allerr_admm(run,siter,'oil',t)$(external('oil') and tcheck(t) and (sum(n$(trading_t('oil',t,n)),1)>0)) = 100 *
44170                                                      abs(errtrade('oil',t)) * FPRICE.l('oil',t) /
44171                                                      (sum(n$trading_t('oil',t,n),Q.l('CC',t,n)) + 1e-5);
44172   
44173  allerr_admm(run,siter,c_mkt,tcheck(t))$(external('oil') and (sum(n$(trading_t(c_mkt,t,n)),1)>0)) = 100 *
44174                                                      abs(errtrade(c_mkt,t)) * CPRICE.l(c_mkt,t) /
44175                                                      (sum(n$trading_t(c_mkt,t,n),Q.l('CC',t,n)) + 1e-5);
44176   
44177  *-------------------------------------------------------------------------------
44179   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
44181  *-------------------------------------------------------------------------------
44182  * Convergence algorithm
44183  *-------------------------------------------------------------------------------
44185   
44186  *-------------------------------------------------------------------------------
44188   
44189  price_iter(run,siter,f_mkt, t) = FPRICE.l(f_mkt, t);
44190  price_iter(run,siter,c_mkt, t) = CPRICE.l(c_mkt, t);
44191   
44192  * External markets [market between coalitions]
44193  mprofit(run,siter, 'oil', t,n)$(trading_t('oil', t, n)) = -(Q_FUEL.l('oil',t,n) - Q_OUT.l('oil',t,n)) * FPRICE.l('oil',t);
44194  mprofit(run,siter, c_mkt, t,n)$(trading_t(c_mkt, t, n)) = -Q_EMI.l(c_mkt,t,n) * CPRICE.l(c_mkt,t);
44195   
44196  mbalance(run,siter, 'oil', t) = sum(n$trading_t('oil',t,n), Q_FUEL.l('oil',t,n) - Q_OUT.l('oil',t,n));
44197  mbalance(run,siter, c_mkt, t) = sum(n$trading_t(c_mkt,t,n), Q_EMI.l(c_mkt,t,n));
44198   
44199  price_eq(run,siter, c_mkt, t)$(external(c_mkt) and all_optimal(run,siter) and (sum(n$trading_t(c_mkt,t,n),1) gt 0) ) = CPRICE.l(c_mkt,t) * sum(n$trading_t(c_mkt,t,n), Q.l('CC',t,n) - mprofit(run,siter,c_mkt,t,n))/sum(n$trading_t(c_mkt,t,n), Q.l('CC',t,n));
44200  price_eq(run,siter, f_mkt, t)$(external(f_mkt) and all_optimal(run,siter) and (sum(n$trading_t(f_mkt,t,n),1) gt 0) ) = FPRICE.l(f_mkt,t) * sum(n$trading_t(f_mkt,t,n), Q.l('CC',t,n) - mprofit(run,siter,f_mkt,t,n))/sum(n$trading_t(f_mkt,t,n), Q.l('CC',t,n));
44201   
44202  *-------------------------------------------------------------------------------
44204   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
44206  *-------------------------------------------------------------------------------
44207  * ADMM algorithm
44208  *-------------------------------------------------------------------------------
44210   
44211  *-------------------------------------------------------------------------------
44213   
44214  * Follow http://stanford.edu/~boyd/papers/pdf/admm_distr_stats.pdf (pp.56-60)
44215  loop((mkt)$(external(mkt) and (sum((t,n)$trading_t(mkt,t,n),1) gt 0)),
44216      x_admmiter(siter,mkt,t,n)$trading_t(mkt,t,n) = x_admm(mkt,t,n);
44217      x_admm(mkt,t,n)$(trading_t(mkt,t,n) and sum(f_mkt$sameas(f_mkt,mkt),1)) = sum(f$(sameas(f,mkt)), (Q_FUEL.l(f,t,n) - Q_OUT.l(f,t,n)));
44218      x_admm(mkt,t,n)$(trading_t(mkt,t,n) and sum(c_mkt$sameas(c_mkt,mkt),1)) = sum(e$(sameas(e,mkt)), (Q_EMI.l(e,t,n)));
44219      u_admmiter(siter,mkt,t)$(t_admm(mkt,t)) = u_admm(mkt,t);
44220      xavg_admmiter(siter,mkt,t)$(t_admm(mkt,t)) = xavg_admm(mkt,t);
44221      xavg_admm(mkt,t)$(t_admm(mkt,t)) = sum(n$trading_t(mkt,t,n), x_admm(mkt,t,n))/sum(n$trading_t(mkt,t,n), 1);
44222      u_admm(mkt,t)$(t_admm(mkt,t)) = u_admm(mkt,t) + xavg_admm(mkt,t);
44223      z_admmiter(siter,mkt,t,n)$trading_t(mkt,t,n) = z_admm(mkt,t,n);
44224      z_admm(mkt,t,n)$trading_t(mkt,t,n) = u_admmiter(siter,mkt,t) - u_admm(mkt,t) + x_admm(mkt,t,n);
44225      r_admm(siter,mkt) = sum((t,n)$(trading_t(mkt,t,n) and tcheck(t)), power(u_admm(mkt,t) - u_admmiter(siter,mkt,t), 2));
44226      rrel_admm(siter,mkt) = div0(
44227          r_admm(siter,mkt), max(
44228              sum((t,n)$(trading_t(mkt,t,n) and tcheck(t)), power(x_admm(mkt,t,n), 2)),
44229              sum((t,n)$(trading_t(mkt,t,n) and tcheck(t)), power(u_admm(mkt,t), 2))
44230          ));
44231      s_admm(siter,mkt) = sum((t,n)$(trading_t(mkt,t,n) and tcheck(t)), power(rho_admm(mkt,t)*(z_admm(mkt,t,n) - z_admmiter(siter,mkt,t,n)), 2));
44232      srel_admm(siter,mkt) = div0(
44233          sum((t,n)$(trading_t(mkt,t,n) and tcheck(t)), power((z_admm(mkt,t,n) - z_admmiter(siter,mkt,t,n)), 2)),
44234          sum((t,n)$(trading_t(mkt,t,n) and tcheck(t)), power(u_admm(mkt,t), 2))
44235          );
44236      do_price_eq(run,siter,mkt,t) = yes$(t_admm(mkt,t));
44237      if(ord(siter) eq 1,
44238          delta_price_off(t)$sum(f_mkt$sameas(f_mkt,mkt),1) = sum(f_mkt$(sameas(f_mkt,mkt)), FPRICE.l(f_mkt,t));
44239          delta_price_off(t)$sum(c_mkt$sameas(c_mkt,mkt),1) = sum(c_mkt$(sameas(c_mkt,mkt)), CPRICE.l(c_mkt,t));
44240      else
44241          delta_price_off(t) = price_iter(run,siter,mkt,t);
44242      );
44243      delta_price(run,siter,mkt,t)$(t_admm(mkt,t)) = max(u_admm(mkt,t)*rho_admm(mkt,t), sum(tfirst, 0.1*delta_price_off(tfirst))) - delta_price_off(t);
44244      allrho_admm(run,siter,mkt,t) = rho_admm(mkt,t);
44245  * See https://arxiv.org/pdf/1704.06209.pdf
44247      admm_tau(siter,mkt) = 2;
44249      if(rrel_admm(siter,mkt) gt admm_mu*srel_admm(siter,mkt)*csi_admm(mkt),
44250          rho_admm(mkt,t) = admm_tau(siter,mkt)*rho_admm(mkt,t);
44251      elseif srel_admm(siter,mkt)*csi_admm(mkt) gt admm_mu*rrel_admm(siter,mkt),
44252          rho_admm(mkt,t) = 1/admm_tau(siter,mkt)*rho_admm(mkt,t);
44253      );
44254      u_admm(mkt,t)$(t_admm(mkt,t)) = allrho_admm(run,siter,mkt,t)/rho_admm(mkt,t)*u_admm(mkt,t);
44255      z_admm(mkt,t,n)$trading_t(mkt,t,n) = allrho_admm(run,siter,mkt,t)/rho_admm(mkt,t)*u_admmiter(siter,mkt,t) - u_admm(mkt,t) + x_admm(mkt,t,n);
44256  );
44257   
44259   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
44261  *-------------------------------------------------------------------------------
44262  * Convergence algorithm
44263  *-------------------------------------------------------------------------------
44265   
44266  *-------------------------------------------------------------------------------
44268   
44269  * Update fuel price
44270  loop(f_mkt,
44271    if ( (ord(siter) eq 1) and external(f_mkt),
44272      FPRICE.l(f_mkt,t)$(do_price_eq(run,siter,f_mkt,t) and (not tfix(t))) = FPRICE.l(f_mkt,t) + delta_price(run,siter,f_mkt,t);
44273      FPRICE.l(f_mkt,t)$((not do_price_eq(run,siter,f_mkt,t)) and (not tfix(t)))= price_iter(run,siter,f_mkt,t)+sign(mbalance(run,siter,f_mkt,t))*0.05*price_iter(run,siter,f_mkt,t);
44274      trust_region(run,siter,f_mkt,t)$(not tfix(t)) = abs(0.05 * price_iter(run,siter,f_mkt,t));
44275    else
44276      FPRICE.l(f_mkt,t)$(not tfix(t)) = price_iter(run,siter,f_mkt,t) + delta_price(run,siter,f_mkt,t);
44277    );
44278    FPRICE.l(f_mkt,t)$((sum(n$trading_t(f_mkt,t,n),1) eq 0) and (not tfix(t))) = 0;
44279    price_iter(run,siter+1,f_mkt,t) = FPRICE.l(f_mkt,t);
44280  );
44281   
44282  * Update permit price
44283  loop(c_mkt,
44284    if ( (ord(siter) eq 1) and external(c_mkt),
44285      CPRICE.l(c_mkt,t)$(do_price_eq(run,siter,c_mkt,t) and (not tfix(t))) = CPRICE.l(c_mkt,t) + delta_price(run,siter,c_mkt,t);
44286      CPRICE.l(c_mkt,t)$((not do_price_eq(run,siter,c_mkt,t)) and (not tfix(t)))= price_iter(run,siter,c_mkt,t)+sign(mbalance(run,siter,c_mkt,t))*0.05*price_iter(run,siter,c_mkt,t);
44287      trust_region(run,siter,c_mkt,t)$(not tfix(t)) = abs(0.05 * price_iter(run,siter,c_mkt,t));
44288    else
44289      CPRICE.l(c_mkt,t)$(not tfix(t)) = price_iter(run,siter,c_mkt,t) + delta_price(run,siter,c_mkt,t);
44290    );
44291    CPRICE.l(c_mkt,t)$((sum(n$trading_t(c_mkt,t,n),1) eq 0) and (not tfix(t))) = 0;
44292    price_iter(run,siter+1,c_mkt,t) = CPRICE.l(c_mkt,t);
44293  );
44294   
44296   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
44298  *-------------------------------------------------------------------------------
44299  * ADMM algorithm
44300  *-------------------------------------------------------------------------------
44302   
44303  *-------------------------------------------------------------------------------
44305   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
44307  *-------------------------------------------------------------------------------
44308  * Call modules by order
44309  *-------------------------------------------------------------------------------
44313   
44314  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
44316  *-------------------------------------------------------------------------------
44317  * Algorithm
44318  *-------------------------------------------------------------------------------
44319   
44321   
44322  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
44324  *-------------------------------------------------------------------------------
44325  * Time
44326  * - Temporal structure
44327  * - Fixed time periods
44328  * - States of the world
44329  *-------------------------------------------------------------------------------
44330   
44332   
44333  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
44335  *-------------------------------------------------------------------------------
44336  * Geographic dimension and mapping with countries
44337  *-------------------------------------------------------------------------------
44338   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
44341  *-------------------------------------------------------------------------------
44342  * Non-Cooperative Setup
44343  *
44344  * Each region is defined as an individual coalition.
44345  *
44346  *-------------------------------------------------------------------------------
44347   
44349   
44350  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
44352  *-------------------------------------------------------------------------------
44353  * Welfare
44354  *-------------------------------------------------------------------------------
44355   
44357   
44358  * CEBGE global for tn welfare function and gamma
44359  utility_cebge_global =
44360    (sum(t$(year(t) le yeoh), PROB.l(t) * stpf(t) /
44361             (sum(tt$(year(tt) le yeoh), PROB.l(tt) * stpf(tt))) *
44362             (sum(n, l(t,n) / sum(nn, l(t,nn)) *
44363             (Q.l('CC',t,n) / l(t,n))**(1 - gamma)))**(1 / (1 - gamma))**(1 - eta)
44364          ))**(1 / (1 - eta)) /
44365    ((sum(t$(year(t) le yeoh), sum(n, l(t,n)) * PROB.l(t) * stpf(t) * (1 + 0.00)**((1 - eta) * (year(t) - 2005))) /
44366     (sum(t$(year(t) le yeoh), sum(n, l(t,n)) * PROB.l(t) * stpf(t))))**(1 / (1 - eta))
44367    ) * 1e6;
44368   
44369  * Utility per region (based on Utilitarian CEBGE_g0 welfare function, eta throughout all three dimensions)
44370  utility_cebge_regional(n) =
44371    (sum(t$(year(t) le yeoh), PROB.l(t) * stpf(t) * l(t,n) * ((Q.l('CC',t,n) / l(t,n))**(1 - eta))) /
44372            (sum(tt$(year(tt) le yeoh), l(tt,n) * PROB.l(tt) * stpf(tt)))
44373    )**(1 / (1 - eta)) * 1e6;
44374   
44375  * Policy costs based on CEBGE
44376  utility_cebge_pc_global = utility_cebge_global /
44377    ((sum(t$(year(t) le yeoh), PROB.l(t) * stpf(t) /
44378             (sum(tt$(year(tt) le yeoh),PROB.l(tt) * stpf(tt))) *
44379             (sum(n, l(t,n) / sum(nn, l(t,nn)) *
44380             (BAU_Q.l('CC',t,n) / l(t,n))**(1 - gamma)))**(1 / (1 - gamma))**(1 - eta))
44381    )**(1 / (1 - eta)) /
44382    ((sum(t$(year(t) le yeoh), sum(n,l(t,n)) * PROB.l(t) * stpf(t) * (1 + 0.00)**((1 - eta) * (year(t) - 2005))) /
44383      (sum(t$(year(t) le yeoh), sum(n, l(t,n)) * PROB.l(t) * stpf(t))))**(1 / (1 - eta))
44384    ) * 1e6) - 1;
44385   
44386  utility_cebge_pc_regional(n) = utility_cebge_regional(n) /
44387    (( sum(t$(year(t) le yeoh),PROB.l(t)*stpf(t)*l(t,n)*((BAU_Q.l('CC',t,n)/l(t,n))**(1-eta))) /
44388      (sum(tt$(year(tt) le yeoh), l(tt,n)*PROB.l(tt)*stpf(tt))) )**(1/(1-eta)) * 1e6
44389    ) - 1;
44390   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
44393  *-------------------------------------------------------------------------------
44394  * Economy
44395  * - Production and Consumption definition
44396  * - Top-level of the production function
44397  * Options:
44398  * --original_ssp=1 : original SSP population and GDP data
44399  *-------------------------------------------------------------------------------
44400   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
44403  *-------------------------------------------------------------------------------
44404  * Energy sector
44405  *-------------------------------------------------------------------------------
44406   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
44409  *-------------------------------------------------------------------------------
44410  * Carbon Emissions
44411  * - Total CO2 emissions and CO2 Fossil fuel and Industry
44412  * - CO2 emission costs
44413  * - GHG permit market
44414  *-------------------------------------------------------------------------------
44415   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
44418  *-------------------------------------------------------------------------------
44419  * Research & Development
44420  * Options:
44421  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
44422  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
44423  *-------------------------------------------------------------------------------
44424   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
44427  *-------------------------------------------------------------------------------
44428  * Default Climate Policy Implementation
44429  *
44430  * Options:
44431  *    --policy={bau (default),ctax}
44432  *        Implement a climate policy setting
44433  *  [ --scen= ]
44434  *        Policy variant.
44435  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
44436  *          * XXX for a fixed percentage/yr (e.g. 5) growth
44437  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
44438  *  [ --ctax_year=2020 ]
44439  *        Starting year of the carbon tax
44440  *  [ --ctax_initial=30 ]
44441  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
44442  *
44443  *-------------------------------------------------------------------------------
44445   
44446  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
44448  *-------------------------------------------------------------------------------
44449  * Energy efficiency
44450  *-------------------------------------------------------------------------------
44451   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
44454  *-------------------------------------------------------------------------------
44455  * Hydro Power
44456  *-------------------------------------------------------------------------------
44457   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
44460  *-------------------------------------------------------------------------------
44461  * System Integration:
44462  * - Capacity constraint
44463  * - Flexibility constraint
44464  * - Grid Investment
44465  * - Capacity growth constraint
44466  *-------------------------------------------------------------------------------
44467   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
44470  *-------------------------------------------------------------------------------
44471  * Nuclear power plants
44472  *-------------------------------------------------------------------------------
44473   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
44476  *-------------------------------------------------------------------------------
44477  * GHG module
44478  * - CH4 FFI + CH4 waste + CH4 open fires
44479  * - N2O FFI + N2O waste + N2O open fires
44480  *-------------------------------------------------------------------------------
44481   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
44484  *-------------------------------------------------------------------------------
44485  * F-gases
44486  * - LLF
44487  * - SLF
44488  *-------------------------------------------------------------------------------
44489   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
44492  *-------------------------------------------------------------------------------
44493  * Landuse [simplified version of the land-use model]
44494  *-------------------------------------------------------------------------------
44495   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
44498  *-------------------------------------------------------------------------------
44499  * Bioenergy power plant
44500  *-------------------------------------------------------------------------------
44501   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
44504  *-------------------------------------------------------------------------------
44505  * Traditional Biofuels
44506  * - Requires the precedence of mod_landuse
44507  *-------------------------------------------------------------------------------
44508   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
44511  *-------------------------------------------------------------------------------
44512  * Advanced biofuel
44513  * - Require the precedence of mod_landuse
44514  *-------------------------------------------------------------------------------
44515   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
44518  *-------------------------------------------------------------------------------
44519  * Carbon Capture and Sequestration
44520  *-------------------------------------------------------------------------------
44521   
44523   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
44525  *-------------------------------------------------------------------------------
44526  * Coal for non-electric sectors
44527  * - Coke Plants
44528  * - Industrial and Commercial combined-heat-and-power (CHP)
44529  * - Others
44530  *-------------------------------------------------------------------------------
44531   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
44534  *-------------------------------------------------------------------------------
44535  * Wind energy module
44536  * - onshore and offshore
44537  *-------------------------------------------------------------------------------
44538   
44540   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
44542  *-------------------------------------------------------------------------------
44543  * Solar Powerplants (PV and CSP) to the electrical system
44544  *-------------------------------------------------------------------------------
44545   
44546  *-------------------------------------------------------------------------------
44548   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
44550  *-------------------------------------------------------------------------------
44551  * Technology development scenarios
44552  *-------------------------------------------------------------------------------
44553   
44555   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
44557  *-------------------------------------------------------------------------------
44558  * Oil Extraction
44559  * Options:
44560  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
44561  *-------------------------------------------------------------------------------
44562   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
44565  *-------------------------------------------------------------------------------
44566  * Uranium Resources
44567  *-------------------------------------------------------------------------------
44568   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
44571  *-------------------------------------------------------------------------------
44572  * Gas Resources
44573  *-------------------------------------------------------------------------------
44574   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
44577  *-------------------------------------------------------------------------------
44578  * Coal Resources
44579  *-------------------------------------------------------------------------------
44580   
44582   
44583   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
44585  *-------------------------------------------------------------------------------
44586  * Climate
44587  *
44588  * Represents the climate
44589  * - based on the DICE model equations
44590  * - Radiative forcing for non CO2 ghgs
44591  * - parameters calibrated to reproduce MAGICC6.4 default response
44592  *
44593  *  Options:
44594  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
44595  * - $setglobal cooperate_on_climate {'YES','NO'}
44596  * - 'YES'(default): Countries within a coalition act in cooperation
44597  *   'NO': Countries within a coalition act individually
44598  *
44599  *-------------------------------------------------------------------------------
44600   
44602   
44603  wemi(ghg(e),t) = sum(n, Q_EMI.l(e,t,n)) / wemi2qemi(e) + sum((n,ee)$(map_e_bunk(e,ee)), W_EMI.l(ee,t,n)) / card(n);
44604   
44606   
44607  W_EMI.l(ghg,t,n)$(not tfix(t)) = wemi(ghg,t);
44608   
44609  loop((t,tp1)$(pre(t,tp1)),
44610   
44611  WCUM_EMI.l('co2',m,tp1,n)$(not tfix(tp1)) = sum(mm, cmphi(mm,m) * WCUM_EMI.l('co2',mm,t,n)) +
44612                              ( tlen(t) * wemi('co2',t) )$( sameas(m,'atm') );
44613   
44614  WCUM_EMI.l(oghg,'atm',tp1,n)$(not tfix(tp1)) = WCUM_EMI.l(oghg,'atm',t,n)*cmdec1(oghg)**tlen(t)
44615                                   +cmdec2(oghg)*(wemi(oghg,t) +wemi(oghg,tp1))/2
44616                                   +(1-cmdec1(oghg)**tlen(t))*wcum_emi_eq(oghg);
44617  );
44618   
44619   
44620  RF.l('co2',t,n)$(not tfix(t)) = rfc('co2','alpha')*(log(WCUM_EMI.l('co2','atm',t,n))- log(rfc('co2','beta')));
44621   
44622  RF.l(oghg,t,n)$(not tfix(t)) = rfc(oghg,'inter')*rfc(oghg,'fac')*((rfc(oghg,'stm')*WCUM_EMI.l(oghg,'atm',t,n))**rfc(oghg,'ex')
44623                                          -(rfc(oghg,'stm')*emi_preind(oghg))**rfc(oghg,'ex'));
44624   
44625  TRF.l(t,n)$(not tfix(t)) = sum(ghg,RF.l(ghg,t,n)) + rfaerosols(t)
44627                  ;
44628   
44629  loop((t,tp1)$pre(t,tp1),
44630  TEMP.l('atm',tp1,n)$(not tfix(tp1)) = TEMP.l('atm',t,n) +
44631                                             tempc('sigma1') *
44632                                              (TRF.l(t,n) -
44633                                               tempc('lambda') * TEMP.l('atm',t,n) -
44634                                               tempc('sigma2') * (TEMP.l('atm',t,n) - TEMP.l('low',t,n)));
44635   
44636  TEMP.l('low',tp1,n)$(not tfix(tp1)) = TEMP.l('low',t,n) + tempc('heat_ocean') * (TEMP.l('atm',t,n) - TEMP.l('low',t,n));
44637  );
44638   
44640   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
44643  *-------------------------------------------------------------------------------
44644  * Long-run Damages from Climate Change
44645  * - Economic impacts
44646  * - Adaptation
44647  *-------------------------------------------------------------------------------
44648   
44650   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
44652  *-------------------------------------------------------------------------------
44653  * Light-duty Vehicles for Personal Transport
44654  *-------------------------------------------------------------------------------
44655   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
44658  *-------------------------------------------------------------------------------
44659  * Road Freight Transport
44660  *-------------------------------------------------------------------------------
44662   
44663   
44664   
44665   
44666   
44667   
44668  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
44670  *-------------------------------------------------------------------------------
44671  * Traditional Biomass
44672  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
44673  *  - require post_process to be launch before
44674  *-------------------------------------------------------------------------------
44675   
44677   
44678  * Optional modules
44679   
44680  * Policy modules
44681   
44682  * Calibration
44685   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
44687  *-------------------------------------------------------------------------------
44688  * Report model progress
44689  *-------------------------------------------------------------------------------
44690   
44692   
44694   
44695  * Get information
44696  infoiter('infes')     = sum(clt$((solrep(clt,'modelstat') eq 4) or (solrep(clt,'modelstat') eq 5) or (solrep(clt,'modelstat') eq 6)), 1);
44697  infoiter('nonopt')    = sum(clt$((solrep(clt,'modelstat') eq 7)), 1);
44698  infoiter('itertime')  = (timeelapsed-timer);
44699  infoiter('tottime')   = timeelapsed;
44700  allinfoiter(run,siter,iterrep) = infoiter(iterrep);
44701   
44702  put errdat;
44703  errdat.ap=1;
44704   
44705  put ord(siter):<4:0
44706  put ' ';
44707  put all_optimal(run,siter):1:0;
44708  if(nb_clt_noopt(run,siter) eq 0,
44709    put '0';
44710  );
44711  if(nb_clt_noopt(run,siter) ge 1 and nb_clt_noopt(run,siter) le 9,
44712    put nb_clt_noopt(run,siter):1:0;
44713  );
44714  if(nb_clt_noopt(run,siter) gt 9,
44715    put 'X';
44716  );
44717  if(nb_clt_infes(run,siter) eq 0,
44718    put '0';
44719  );
44720  if(nb_clt_infes(run,siter) ge 1 and nb_clt_infes(run,siter) le 9,
44721    put nb_clt_infes(run,siter):1:0;
44722  );
44723  if(nb_clt_infes(run,siter) gt 9,
44724    put 'X';
44725  );
44726  if(nb_tot_infes(run,siter) eq 0,
44727    put '0';
44728  );
44729  if(nb_tot_infes(run,siter) ge 1 and nb_tot_infes(run,siter) lt 9.8e+9,
44730    put log10(nb_tot_infes(run,siter)):1:0;
44731  );
44732  if(nb_tot_infes(run,siter) ge 9.8e+9,
44733    put 'X';
44734  );
44735  loop(ierr,
44736    put allerr(run,siter,ierr):9:3;
44737  );
44738  loop(iterrep$timeiterrep(iterrep),
44739      put ' ';
44740      # hours
44741      if(floor(allinfoiter(run,siter,iterrep)/3600)>0,
44742        put (floor(allinfoiter(run,siter,iterrep)/3600)):3:0, ':';
44743      else
44744        put '  0:';
44745      );
44746      # minutes
44747      if(floor(mod(allinfoiter(run,siter,iterrep),3600)/60)>0,
44748        if(floor(mod(allinfoiter(run,siter,iterrep),3600)/60)>9,
44749          put (floor(mod(allinfoiter(run,siter,iterrep),3600)/60)):2:0, ':';
44750        else
44751          put '0' (floor(mod(allinfoiter(run,siter,iterrep),3600)/60)):1:0, ':';
44752      );
44753      else
44754        put '00:';
44755      );
44756      # seconds
44757      if(floor(mod(allinfoiter(run,siter,iterrep),60))>9,
44758          put (floor(mod(allinfoiter(run,siter,iterrep),60))):2:0;
44759        else
44760          put '0' (floor(mod(allinfoiter(run,siter,iterrep),60))):1:0;
44761      );
44762  );
44763  put /;
44764  putclose errdat;
44765   
44767   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
44769  *-------------------------------------------------------------------------------
44770  * Report model progress
44771  *-------------------------------------------------------------------------------
44772   
44774   
44776   
44777  * write temp gdx
44778  execute_unload 'C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\all_data_temp_emicap_usa_1e-3_500notusa.gdx';
44779   
44780  * write iter gdx
44782   
44784   
44785  * Stop if all converged
44786  if( (sum(ierr, 1$(allerr(run,siter,ierr) le errtol(ierr))) eq (card(ierr))) and all_optimal(run,siter),
44787    stop_nash = 1;
44788  );
44789   
44790  * End of nash loop
44791  );
44792   
44793  loop(siter$(ord(siter) eq card(siter)),
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
44795  *-------------------------------------------------------------------------------
44796  * Call modules by order
44797  *-------------------------------------------------------------------------------
44801   
44802  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
44804  *-------------------------------------------------------------------------------
44805  * Algorithm
44806  *-------------------------------------------------------------------------------
44807   
44809   
44810  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
44812  *-------------------------------------------------------------------------------
44813  * Time
44814  * - Temporal structure
44815  * - Fixed time periods
44816  * - States of the world
44817  *-------------------------------------------------------------------------------
44818   
44820   
44821  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
44823  *-------------------------------------------------------------------------------
44824  * Geographic dimension and mapping with countries
44825  *-------------------------------------------------------------------------------
44826   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
44829  *-------------------------------------------------------------------------------
44830  * Non-Cooperative Setup
44831  *
44832  * Each region is defined as an individual coalition.
44833  *
44834  *-------------------------------------------------------------------------------
44835   
44837   
44838  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
44840  *-------------------------------------------------------------------------------
44841  * Welfare
44842  *-------------------------------------------------------------------------------
44843   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
44846  *-------------------------------------------------------------------------------
44847  * Economy
44848  * - Production and Consumption definition
44849  * - Top-level of the production function
44850  * Options:
44851  * --original_ssp=1 : original SSP population and GDP data
44852  *-------------------------------------------------------------------------------
44853   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
44856  *-------------------------------------------------------------------------------
44857  * Energy sector
44858  *-------------------------------------------------------------------------------
44859   
44861   
44862  * World cumulative fuel demand
44863  loop((tnofirst(t),tm1)$pre(tm1,t),
44864      wcum(f,t) = wcum(f,tm1) + tlen(t) * sum(n, Q_FUEL.l(f,tm1,n) * 1e-6);
44865  );
44866   
44867  tpes(t,n) = sum(f, Q_FUEL.l(f,t,n)) + Q_EN.l('elhydro',t,n) + Q_EN.l('elwind',t,n) + Q_EN.l('elsolar',t,n);
44868   
44869  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
44872  *-------------------------------------------------------------------------------
44873  * Carbon Emissions
44874  * - Total CO2 emissions and CO2 Fossil fuel and Industry
44875  * - CO2 emission costs
44876  * - GHG permit market
44877  *-------------------------------------------------------------------------------
44878   
44880   
44881  loop(c_mkt,
44882  carbonprice(t,n)$trading_t(c_mkt,t,n) = CPRICE.l(c_mkt,t);
44883  );
44884  carbonprice(t,n)$(ctax('co2',t,n)) = ctax('co2',t,n);
44885   
44886  * Accounting for electrification in the transport sector
44887  * Reference for default carbon efficiency rate: Fajardy and Daggash (2017)
44888  emi_bio_harv(t) = 0.25 * (1 -
44889                     sum((n,ices_el), QEL_OUT.l('edv',ices_el,t,n) + QEL_OUT.l('edvfr',ices_el,t,n)) /
44890                     (sum((f,n,jfed)$(csi(f,jfed,t,n) and (jveh(jfed) or jfrt(jfed))),
44891                        Q_IN.l(f,jfed,t,n)) +
44892                        sum((n,ices_el), QEL_OUT.l('edv',ices_el,t,n) +
44893                                         QEL_OUT.l('edvfr',ices_el,t,n))
44894                      ))**2;
44895   
44896  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
44899  *-------------------------------------------------------------------------------
44900  * Research & Development
44901  * Options:
44902  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
44903  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
44904  *-------------------------------------------------------------------------------
44905   
44907   
44908  wkrd0(rd) = sum(n$leadrd(rd,n), krd0(rd,n)) / sum(n$leadrd(rd,n), 1);
44909   
44911   
44912  *- updating externalities
44913  krd_lead(rd,t) = sum(n$leadrd(rd,n), K_RD.l(rd,t,n));
44914  krd_oth_lead_krd(rd,t,n)$leadrd(rd,n) = krd_lead(rd,t) - K_RD.l(rd,t,n);
44915   
44916  *-initialisation of the SPILL variable
44917  if(ord(siter) eq 1,
44918  SPILL.l(rd,t,n)$((not tfix(t)) and (leadrd(rd,n))) = K_RD.l(rd,t,n)/(krd_oth_lead_krd(rd,t,n)+K_RD.l(rd,t,n))*krd_oth_lead_krd(rd,t,n);
44919  SPILL.l(rd,t,n)$((not tfix(t)) and (not leadrd(rd,n))) = K_RD.l(rd,t,n) /krd_lead(rd,t)*(krd_lead(rd,t)-K_RD.l(rd,t,n));
44920  );
44921   
44922  wlspill_k_rd(rd,t,n) = smax(nn, K_RD.l(rd,t,nn)) - K_RD.l(rd,t,n);
44923   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
44926  *-------------------------------------------------------------------------------
44927  * Default Climate Policy Implementation
44928  *
44929  * Options:
44930  *    --policy={bau (default),ctax}
44931  *        Implement a climate policy setting
44932  *  [ --scen= ]
44933  *        Policy variant.
44934  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
44935  *          * XXX for a fixed percentage/yr (e.g. 5) growth
44936  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
44937  *  [ --ctax_year=2020 ]
44938  *        Starting year of the carbon tax
44939  *  [ --ctax_initial=30 ]
44940  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
44941  *
44942  *-------------------------------------------------------------------------------
44944   
44945  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
44947  *-------------------------------------------------------------------------------
44948  * Energy efficiency
44949  *-------------------------------------------------------------------------------
44950   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
44953  *-------------------------------------------------------------------------------
44954  * Hydro Power
44955  *-------------------------------------------------------------------------------
44956   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
44959  *-------------------------------------------------------------------------------
44960  * System Integration:
44961  * - Capacity constraint
44962  * - Flexibility constraint
44963  * - Grid Investment
44964  * - Capacity growth constraint
44965  *-------------------------------------------------------------------------------
44966   
44968   
44969  * If
44970  * - K_EN.lo is not -infinity
44971  * - K_EN(t) and K_EN(t+1) are fixed
44972  * - a mkt_growth_rate is set
44973  * then make sure that the minimum additional capacity in t+1 is compatible with
44974  * with the necessary capacity to go from K_EN(t) to K_EN(t+1). If this is not the case,
44975  * disable the mkt growth constraint, assuming that the K_EN.lo/fx override
44976  * the mkt growth assumptions.
44977  loop((jinv,n,t,tp1,tp2)$(mkt_growth_rate(jinv,tp2,n) and
44978      (K_EN.lo(jinv,tp2,n) gt 0) and
44979      (K_EN.lo(jinv,tp1,n) eq K_EN.up(jinv,tp1,n)) and
44980      (K_EN.lo(jinv,t,n) eq K_EN.up(jinv,t,n)) and
44981      pre(t,tp1) and pre(tp1,tp2)),
44982      jtn_incompatible_with_mkt_growth_cap(jinv,tp1,n) = yes$(((K_EN.lo(jinv,tp2,n)-K_EN.lo(jinv,tp1,n)*(1-delta_en(jinv,tp2,n))**tlen(tp1))/tlen(tp1)) ge
44983          (((K_EN.lo(jinv,tp1,n)-K_EN.lo(jinv,t,n)*(1-delta_en(jinv,tp1,n))**tlen(t))/tlen(t))*(1 + mkt_growth_rate(jinv,tp1,n))**tlen(t) + tlen(t) * el_free_cap(n) / 1e3)
44984          );
44985      mkt_growth_rate(jinv,tp1,n)$jtn_incompatible_with_mkt_growth_cap(jinv,tp1,n) = 0;
44986  );
44987   
44988  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
44991  *-------------------------------------------------------------------------------
44992  * Nuclear power plants
44993  *-------------------------------------------------------------------------------
44994   
44996   
44997  if(sum((tt,n)$tfirst(tt),Q_EN.l('elnuclear',tt,n)) gt 0,
44998      wastemgm(t,n) =  cwaste_reg('alpha',n) *
44999                       ( sum(nn, Q_EN.l('elnuclear',t,nn)) /
45000                         sum((tt,nn)$tfirst(tt),Q_EN.l('elnuclear',tt,nn))
45001                       )**cwaste_reg('rho',n);
45002  );
45003  oem(jreal,t,n)$(map_j('elnuclear',jreal)) = oem0(jreal,n) + wastemgm(t,n);
45004   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
45007  *-------------------------------------------------------------------------------
45008  * GHG module
45009  * - CH4 FFI + CH4 waste + CH4 open fires
45010  * - N2O FFI + N2O waste + N2O open fires
45011  *-------------------------------------------------------------------------------
45012   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
45015  *-------------------------------------------------------------------------------
45016  * F-gases
45017  * - LLF
45018  * - SLF
45019  *-------------------------------------------------------------------------------
45020   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
45023  *-------------------------------------------------------------------------------
45024  * Landuse [simplified version of the land-use model]
45025  *-------------------------------------------------------------------------------
45026   
45028   
45029  MCOST_FUEL.fx('wbio',t,n)$(not tfix(t)) = div0(COST_FUEL.l('wbio',t,n),Q_FUEL.l('wbio',t,n));
45030   
45031  * Set the price of co2lu emissions according to the applied policy
45032  loop(c_mkt,
45033  cluprice(t_lu,n)$trading_t(c_mkt,t_lu,n) = CPRICE.l(c_mkt,t_lu);
45034  );
45035  cluprice(t_lu,n)$(ctax('co2',t_lu,n)) = ctax('co2',t_lu,n);
45036  cluprice(t_lu,n)$(nocluprice(t_lu,n)) = 0; # force LU non pricing
45037   
45038  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
45041  *-------------------------------------------------------------------------------
45042  * Bioenergy power plant
45043  *-------------------------------------------------------------------------------
45044   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
45047  *-------------------------------------------------------------------------------
45048  * Traditional Biofuels
45049  * - Requires the precedence of mod_landuse
45050  *-------------------------------------------------------------------------------
45051   
45053   
45054  * If more world demand than world production potential, adjust bounds
45055  loop(t$(not tfix(t) and year(t)<=2100),
45056  if( sum(n, Q_FUEL.l('trbiofuel',t,n)) > sum(n,trbiofuel_max(n)) ,
45057   
45058  else
45059   
45060  Q_FUEL.up('trbiofuel',t,n) = sum(nn,trbiofuel_max(nn));
45061   
45062  );
45063  );
45064   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
45067  *-------------------------------------------------------------------------------
45068  * Advanced biofuel
45069  * - Require the precedence of mod_landuse
45070  *-------------------------------------------------------------------------------
45071   
45073   
45074  loop((t,tp1)$pre(t,tp1),
45075    wcum('nelback',tp1) = wcum('nelback',t) + tlen(t) * sum(n, Q_FUEL.l('advbiofuel',t,n));
45076  );
45077   
45078  Q_FUEL.up('advbiofuel',t,n)$(not tfix(t)) = Q_FUEL.up('wbio',t,n);
45079   
45080  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
45083  *-------------------------------------------------------------------------------
45084  * Carbon Capture and Sequestration
45085  *-------------------------------------------------------------------------------
45086   
45088   
45089  MCOST_EMI.fx('ccs',t,n) = div0(COST_EMI.l('ccs',t,n), Q_EMI.l('ccs',t,n));
45090  MCOST_EMI.fx('ccs_plant',t,n) = div0(COST_EMI.l('ccs_plant',t,n), Q_EMI.l('ccs_plant',t,n));
45091   
45092  * World capital in CCS plant
45093  wcum(jlccs,tfirst) = sum(n,K_EN.l(jlccs,tfirst,n));
45094  loop((tnofirst(t),tm1)$pre(tm1,t),
45095  wcum(jlccs,t) = wcum(jlccs,tm1) + tlen(tm1) * sum(n, I_EN.l(jlccs,tm1,n) / MCOST_INV.l(jlccs,tm1,n));
45096  );
45097   
45098  ccs_wcum_spill(jlccs,t)=sum(jllccs, ccs_spill_factor(jlccs,jllccs)*(wcum(jllccs,t)));
45099   
45100  MCOST_INV.fx(jlccs,t,n)$(ccs_wcum_spill(jlccs,t) gt ccs_wcum0(jlccs)) = max(ccs_floor_cost(jlccs,n), mcost_inv0(jlccs,n) * (ccs_wcum_spill(jlccs,t)/ccs_wcum0(jlccs))**(-ccs_learn(jlccs,t)));
45101   
45102  *-------------------------------------------------------------------------------
45104   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
45106  *-------------------------------------------------------------------------------
45107  * Coal for non-electric sectors
45108  * - Coke Plants
45109  * - Industrial and Commercial combined-heat-and-power (CHP)
45110  * - Others
45111  *-------------------------------------------------------------------------------
45112   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
45115  *-------------------------------------------------------------------------------
45116  * Wind energy module
45117  * - onshore and offshore
45118  *-------------------------------------------------------------------------------
45119   
45121   
45122  loop((tnofirst(t),tm1)$pre(tm1,t),
45123  wcum(jinv_wind,t) = wcum(jinv_wind,tm1) + tlen(t) * sum(n, I_EN.l(jinv_wind,tm1,n) / MCOST_INV.l(jinv_wind,tm1,n));
45124  );
45125   
45126  MCOST_INV.fx('elwindon',t,n)$(not tfix(t) and year(t) le 2020) = mcost_inv_valid_wind('elwindon',t,n);
45127  MCOST_INV_WINDOFF.fx(wind_depth,t,n)$(not tfix(t) and year(t) le 2020) = mcost_inv_valid_wind('elwindoff',t,n) * windoff_costinv(wind_depth);
45128   
45129  MCOST_INV.fx('elwindon',t,n)$(not tfix(t) and year(t) gt 2020) = max(floor_cost('elwindon'),
45130                                             (smax(tt$(year(tt) eq 2020), MCOST_INV.l('elwindon',tt,n))) *
45131                                             ((wcum('elwindon',t) + wind_spill_wcum * (wcum('elwindoff',t))) /
45132                                              ((smax(tt$(year(tt) eq 2020), wcum('elwindon',tt))) + wind_spill_wcum * ((smax(tt$(year(tt) eq 2020), wcum('elwindoff',tt))))))**rd_coef('elwindon','lbd'));
45133  MCOST_INV_WINDOFF.fx(wind_depth,t,n)$(not tfix(t) and year(t) gt 2020) = max(floor_cost('elwindoff'),
45134                                             (smax(tt$(year(tt) eq 2020), MCOST_INV_WINDOFF.l(wind_depth,tt,n))) *
45135                                             ((wcum('elwindoff',t) + wind_spill_wcum*(wcum('elwindon',t))) /
45136                                              ((smax(tt$(year(tt) eq 2020), wcum('elwindoff',tt))) + wind_spill_wcum * ((smax(tt$(year(tt) eq 2020), wcum('elwindon',tt))))))**rd_coef('elwindoff','lbd'));
45137   
45138  MCOST_INV.fx('elwindoff',t,n)$((not tfix(t)) and (K_EN.l('elwindoff',t,n) ne 0)) = sum(wind_depth,MCOST_INV_WINDOFF.l(wind_depth,t,n) * sum((wind_dist,wind_class),K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n))) / K_EN.l('elwindoff',t,n);
45139  MCOST_INV.fx('elwindoff',t,n)$((not tfix(t)) and (K_EN.l('elwindoff',t,n) eq 0)) = smin(wind_depth,MCOST_INV_WINDOFF.l(wind_depth,t,n));
45140   
45141  *-------------------------------------------------------------------------------
45143   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
45145  *-------------------------------------------------------------------------------
45146  * Solar Powerplants (PV and CSP) to the electrical system
45147  *-------------------------------------------------------------------------------
45148   
45149  *-------------------------------------------------------------------------------
45151   
45152  * World cumulative capacities of solar plants
45153  loop((tnofirst(t),tm1)$pre(tm1,t),
45154    wcum(jinv_solar,t) = wcum(jinv_solar,tm1) + tlen(t) * sum(n, I_EN.l(jinv_solar,tm1,n) / MCOST_INV.l(jinv_solar,tm1,n));
45155  );
45156   
45157  * Investment costs of solar plants
45158  MCOST_INV.fx(jreal_solar,t,n)$(not tfix(t) and year(t) le 2020) = mcost_inv_valid_solar(jreal_solar,t,n);
45159  MCOST_INV.fx(jreal_solar,t,n)$(not tfix(t) and year(t) gt 2020) = max(floor_cost(jreal_solar),
45160                                                    (smax(tt$(year(tt) eq 2020), mcost_inv_valid_solar(jreal_solar,tt,n))) *
45161                                                    (wcum(jreal_solar,t) / (smax(tt$(year(tt) eq 2020), wcum(jreal_solar,tt))))**rd_coef(jreal_solar,'lbd'));
45162   
45163  *-------------------------------------------------------------------------------
45165   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
45167  *-------------------------------------------------------------------------------
45168  * Technology development scenarios
45169  *-------------------------------------------------------------------------------
45170   
45172   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
45174  *-------------------------------------------------------------------------------
45175  * Oil Extraction
45176  * Options:
45177  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
45178  *-------------------------------------------------------------------------------
45179   
45181   
45182  MCOST_FUEL.fx('oil',t,n)$(not tfix(t)) = max(sum(tfirst, FPRICE.l('oil',tfirst))*0.1, FPRICE.l('oil',t) + p_mkup('oil',t,n));
45183   
45184  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
45187  *-------------------------------------------------------------------------------
45188  * Uranium Resources
45189  *-------------------------------------------------------------------------------
45190   
45192   
45193  FPRICE.l('uranium',t)$(not tfix(t)) = cexs('uranium','scl') *
45194                          (cexs('uranium','a') +
45195                           cexs('uranium','c') *
45196                           (wcum('uranium',t) /
45197                              (cexs('uranium','fast') * res('uranium',t))
45198                           )**2
45199                          ) + cexs('uranium','extra');
45200   
45201  MCOST_FUEL.fx('uranium',t,n)$(not tfix(t)) = FPRICE.l('uranium',t) + p_mkup('uranium',t,n);
45202   
45203  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
45206  *-------------------------------------------------------------------------------
45207  * Gas Resources
45208  *-------------------------------------------------------------------------------
45209   
45211   
45212  FPRICE.l('gas',t)$(not tfix(t)) = max((smax(tt$(year(tt) eq 2005), FPRICE.l('gas',tt))), sum(polydeg$(cgas(polydeg,'M')), (cgas(polydeg,'M'))*((wcum('gas',t) - cexs('gas','cum0')))**(ord(polydeg)-1)));
45213   
45214  * Calculate cumulative production (by means of polynomial functions)
45215  cum_prodpp('gas',t,n) = max(0, trade_scale_gas('M') *
45216                                 sum(polydeg$(trade_poly_gas(polydeg,'M',N)), (trade_poly_gas(polydeg,'M',N))*(FPRICE.l('gas',t)/(twh2ej/1000))**(ord(polydeg)-1))
45217                             );
45218   
45219  * Ensure cumulative production in 2005 = 0
45220  cum_prodpp('gas',t,n)$(tfirst(t))= 0;
45221   
45222   
45223  * This is to avoid negative production (cumulative production declining)
45224  loop((t,tp1)$(pre(t,tp1)),
45225    cum_prodpp('gas',tp1,n)=max(cum_prodpp('gas',t,n)+1e-5*tlen(t), cum_prodpp('gas',tp1,n) )
45226  );
45227   
45228  ** Calculate annual production
45229  loop((t,tp1)$(pre(t,tp1)),
45230    prodpp('gas',t,n) = (cum_prodpp('gas',tp1,n) - cum_prodpp('gas',t,n))/tlen(t)
45231  );
45232   
45233  prodpp('gas',t,n)$(year(t) > 2100) = sum(nn,Q_FUEL.l('gas',t,nn)) * (smax(tt$(year(tt) eq 2100), (prodpp('gas',tt,n)/sum(nn,prodpp('gas',tt,nn)))));
45234   
45236  Q_OUT.fx('gas',t,n)$(not tfix(t)) = prodpp('gas',t,n);
45238   
45239  MCOST_FUEL.fx('gas',t,n)$(not tfix(t)) = FPRICE.l('gas',t) + p_mkup('gas',t,n);
45240   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
45243  *-------------------------------------------------------------------------------
45244  * Coal Resources
45245  *-------------------------------------------------------------------------------
45246   
45248   
45249  FPRICE.l('coal',t)$(not tfix(t)) = max((smax(tt$(year(tt) eq 2005), FPRICE.l('coal',tt))), sum(polydeg$(ccoal(polydeg,'M')), (ccoal(polydeg,'M'))*((wcum('coal',t) - cexs('coal','cum0')))**(ord(polydeg)-1)));
45250   
45251  * Calculate cumulative production (by means of polynomial functions)
45252  cum_prodpp('coal',t,n) = max(0, trade_scale_coal('M') *
45253                                  sum(polydeg$(trade_poly_coal(polydeg,'M',N)), (trade_poly_coal(polydeg,'M',N))*(FPRICE.l('coal',t)/(twh2ej/1000))**(ord(polydeg)-1))
45254                              );
45255   
45256  * Ensure cumulative production in 2005 = 0
45257  cum_prodpp('coal',t,n)$(tfirst(t))= 0;
45258   
45259   
45260  * This is to avoid negative production (cumulative production declining)
45261  loop((t,tp1)$(pre(t,tp1)),
45262    cum_prodpp('coal',tp1,n)=max(cum_prodpp('coal',t,n)+1e-5*tlen(t), cum_prodpp('coal',tp1,n) )
45263  );
45264   
45265  ** Calculate annual production
45266  loop((t,tp1)$(pre(t,tp1)),
45267    prodpp('coal',t,n) = (cum_prodpp('coal',tp1,n) - cum_prodpp('coal',t,n))/tlen(t)
45268  );
45269   
45270  prodpp('coal',t,n)$(year(t) > 2100) = sum(nn,Q_FUEL.l('coal',t,nn)) * (smax(tt$(year(tt) eq 2100), (prodpp('coal',tt,n)/sum(nn,prodpp('coal',tt,nn)))));
45271   
45273  Q_OUT.fx('coal',t,n)$(not tfix(t)) = prodpp('coal',t,n);
45275   
45276  MCOST_FUEL.fx('coal',t,n)$(not tfix(t)) = FPRICE.l('coal',t) + p_mkup('coal',t,n);
45277   
45278  *-------------------------------------------------------------------------------
45280   
45281   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
45283  *-------------------------------------------------------------------------------
45284  * Climate
45285  *
45286  * Represents the climate
45287  * - based on the DICE model equations
45288  * - Radiative forcing for non CO2 ghgs
45289  * - parameters calibrated to reproduce MAGICC6.4 default response
45290  *
45291  *  Options:
45292  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
45293  * - $setglobal cooperate_on_climate {'YES','NO'}
45294  * - 'YES'(default): Countries within a coalition act in cooperation
45295  *   'NO': Countries within a coalition act individually
45296  *
45297  *-------------------------------------------------------------------------------
45298   
45300   
45301  wemi(ghg(e),t) = sum(n, Q_EMI.l(e,t,n)) / wemi2qemi(e) + sum((n,ee)$(map_e_bunk(e,ee)), W_EMI.l(ee,t,n)) / card(n);
45302   
45303  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
45306  *-------------------------------------------------------------------------------
45307  * Long-run Damages from Climate Change
45308  * - Economic impacts
45309  * - Adaptation
45310  *-------------------------------------------------------------------------------
45311   
45313   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
45315  *-------------------------------------------------------------------------------
45316  * Light-duty Vehicles for Personal Transport
45317  *-------------------------------------------------------------------------------
45318   
45320   
45321  loop((t,tp1)$(pre(t,tp1)),
45322             wcum('battery',tp1) = sum(n,(div0(I_EN.l('hybrid',t,n),MCOST_INV.l('hybrid',t,n)) +
45323                                          div0(I_EN.l('plg_hybrid',t,n),MCOST_INV.l('plg_hybrid',t,n)) +
45324                                          div0(I_EN.l('edv',t,n),MCOST_INV.l('edv',t,n)) +
45325                                          div0(I_EN.l('hbd_stfr',t,n),MCOST_INV.l('hbd_stfr',t,n)) +
45326                                          div0(I_EN.l('plg_hbd_stfr',t,n),MCOST_INV.l('plg_hbd_stfr',t,n)) +
45327                                          div0(I_EN.l('edv_stfr',t,n),MCOST_INV.l('edv_stfr',t,n))) * tlen(t)) +
45328                                          wcum('battery',t)
45329  );
45330   
45332   
45333   
45334  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
45337  *-------------------------------------------------------------------------------
45338  * Road Freight Transport
45339  *-------------------------------------------------------------------------------
45341   
45342   
45343   
45344   
45345   
45346   
45347  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
45349  *-------------------------------------------------------------------------------
45350  * Traditional Biomass
45351  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
45352  *  - require post_process to be launch before
45353  *-------------------------------------------------------------------------------
45354   
45356   
45357  MCOST_FUEL.fx('trbiomass',t,n)$(not tfix(t)) = FPRICE.l('trbiomass',t) + p_mkup('trbiomass',t,n);
45358   
45360   
45361  trbio_ctr('phi',n)$trbio_countries(n)  = sum(tfirst,(neltrbiomass0(tfirst,n)/tpes(tfirst,n))/ min(1,trbio_ctr('beta',n)*log(mer2ppp(tfirst,n)*1e6*Q.l('y',tfirst,n)/l(tfirst,n))+trbio_ctr('alpha',n)));
45362  trbio_gdp_fun(t,n) = trbio_ctr('phi',n)*(1- min(1,trbio_ctr('beta',n)*log(mer2ppp(t,n)*1e6*Q.l('y',t,n)/l(t,n))+trbio_ctr('alpha',n)));
45363  scale_trbiomass(n)$trbio_countries(n)  = q0('neltrbiomass',n) / ((tpes(tfirst,n) - q0('neltrbiomass',n))*trbio_gdp_fun(tfirst,n)/(1-trbio_gdp_fun(tfirst,n)));
45364   
45365  Q_FUEL.fx('trbiomass',t,n)$((not tfix(t)) and tfirst(t)) = q0('neltrbiomass',n);
45366  Q_FUEL.fx('trbiomass',t,n)$((not tfix(t)) and (tnofirst(t) and trbio_countries(n))) = scale_trbiomass(n) * (tpes(t,n)-Q_FUEL.l('trbiomass',t,n))*trbio_gdp_fun(t,n)/(1-trbio_gdp_fun(t,n));
45367  Q_IN.fx('trbiomass','neltrbiomass',t,n)$(not tfix(t)) = Q_FUEL.l('trbiomass',t,n);
45368  Q_EN.fx('neltrbiomass',t,n)$(not tfix(t))             = Q_FUEL.l('trbiomass',t,n);
45369   
45370  * Safeguard against bad behavior, usually when a startgdx has wrong values.
45371  loop((t,n)$(Q_FUEL.lo('trbiomass',t,n)<0),
45372          Q_IN.fx('trbiomass','neltrbiomass',t,n)$(not tfix(t)) = neltrbiomass0(t,n);
45373          Q_FUEL.fx('trbiomass',t,n)$(not tfix(t))              = neltrbiomass0(t,n);
45374          Q_EN.fx('neltrbiomass',t,n)$(not tfix(t))             = neltrbiomass0(t,n);
45375  );
45376   
45378   
45380   
45381  * Optional modules
45382   
45383  * Policy modules
45384   
45385  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
45390  *-------------------------------------------------------------------------------
45391  * Call modules by order
45392  *-------------------------------------------------------------------------------
45396   
45397  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
45399  *-------------------------------------------------------------------------------
45400  * Algorithm
45401  *-------------------------------------------------------------------------------
45402   
45404   
45405  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
45407  *-------------------------------------------------------------------------------
45408  * Time
45409  * - Temporal structure
45410  * - Fixed time periods
45411  * - States of the world
45412  *-------------------------------------------------------------------------------
45413   
45415   
45416  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
45418  *-------------------------------------------------------------------------------
45419  * Geographic dimension and mapping with countries
45420  *-------------------------------------------------------------------------------
45421   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
45424  *-------------------------------------------------------------------------------
45425  * Non-Cooperative Setup
45426  *
45427  * Each region is defined as an individual coalition.
45428  *
45429  *-------------------------------------------------------------------------------
45430   
45432   
45433  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
45435  *-------------------------------------------------------------------------------
45436  * Welfare
45437  *-------------------------------------------------------------------------------
45438   
45440   
45441  * CEBGE global for tn welfare function and gamma
45442  utility_cebge_global =
45443    (sum(t$(year(t) le yeoh), PROB.l(t) * stpf(t) /
45444             (sum(tt$(year(tt) le yeoh), PROB.l(tt) * stpf(tt))) *
45445             (sum(n, l(t,n) / sum(nn, l(t,nn)) *
45446             (Q.l('CC',t,n) / l(t,n))**(1 - gamma)))**(1 / (1 - gamma))**(1 - eta)
45447          ))**(1 / (1 - eta)) /
45448    ((sum(t$(year(t) le yeoh), sum(n, l(t,n)) * PROB.l(t) * stpf(t) * (1 + 0.00)**((1 - eta) * (year(t) - 2005))) /
45449     (sum(t$(year(t) le yeoh), sum(n, l(t,n)) * PROB.l(t) * stpf(t))))**(1 / (1 - eta))
45450    ) * 1e6;
45451   
45452  * Utility per region (based on Utilitarian CEBGE_g0 welfare function, eta throughout all three dimensions)
45453  utility_cebge_regional(n) =
45454    (sum(t$(year(t) le yeoh), PROB.l(t) * stpf(t) * l(t,n) * ((Q.l('CC',t,n) / l(t,n))**(1 - eta))) /
45455            (sum(tt$(year(tt) le yeoh), l(tt,n) * PROB.l(tt) * stpf(tt)))
45456    )**(1 / (1 - eta)) * 1e6;
45457   
45458  * Policy costs based on CEBGE
45459  utility_cebge_pc_global = utility_cebge_global /
45460    ((sum(t$(year(t) le yeoh), PROB.l(t) * stpf(t) /
45461             (sum(tt$(year(tt) le yeoh),PROB.l(tt) * stpf(tt))) *
45462             (sum(n, l(t,n) / sum(nn, l(t,nn)) *
45463             (BAU_Q.l('CC',t,n) / l(t,n))**(1 - gamma)))**(1 / (1 - gamma))**(1 - eta))
45464    )**(1 / (1 - eta)) /
45465    ((sum(t$(year(t) le yeoh), sum(n,l(t,n)) * PROB.l(t) * stpf(t) * (1 + 0.00)**((1 - eta) * (year(t) - 2005))) /
45466      (sum(t$(year(t) le yeoh), sum(n, l(t,n)) * PROB.l(t) * stpf(t))))**(1 / (1 - eta))
45467    ) * 1e6) - 1;
45468   
45469  utility_cebge_pc_regional(n) = utility_cebge_regional(n) /
45470    (( sum(t$(year(t) le yeoh),PROB.l(t)*stpf(t)*l(t,n)*((BAU_Q.l('CC',t,n)/l(t,n))**(1-eta))) /
45471      (sum(tt$(year(tt) le yeoh), l(tt,n)*PROB.l(tt)*stpf(tt))) )**(1/(1-eta)) * 1e6
45472    ) - 1;
45473   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
45476  *-------------------------------------------------------------------------------
45477  * Economy
45478  * - Production and Consumption definition
45479  * - Top-level of the production function
45480  * Options:
45481  * --original_ssp=1 : original SSP population and GDP data
45482  *-------------------------------------------------------------------------------
45483   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
45486  *-------------------------------------------------------------------------------
45487  * Energy sector
45488  *-------------------------------------------------------------------------------
45489   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
45492  *-------------------------------------------------------------------------------
45493  * Carbon Emissions
45494  * - Total CO2 emissions and CO2 Fossil fuel and Industry
45495  * - CO2 emission costs
45496  * - GHG permit market
45497  *-------------------------------------------------------------------------------
45498   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
45501  *-------------------------------------------------------------------------------
45502  * Research & Development
45503  * Options:
45504  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
45505  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
45506  *-------------------------------------------------------------------------------
45507   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
45510  *-------------------------------------------------------------------------------
45511  * Default Climate Policy Implementation
45512  *
45513  * Options:
45514  *    --policy={bau (default),ctax}
45515  *        Implement a climate policy setting
45516  *  [ --scen= ]
45517  *        Policy variant.
45518  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
45519  *          * XXX for a fixed percentage/yr (e.g. 5) growth
45520  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
45521  *  [ --ctax_year=2020 ]
45522  *        Starting year of the carbon tax
45523  *  [ --ctax_initial=30 ]
45524  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
45525  *
45526  *-------------------------------------------------------------------------------
45528   
45529  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
45531  *-------------------------------------------------------------------------------
45532  * Energy efficiency
45533  *-------------------------------------------------------------------------------
45534   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
45537  *-------------------------------------------------------------------------------
45538  * Hydro Power
45539  *-------------------------------------------------------------------------------
45540   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
45543  *-------------------------------------------------------------------------------
45544  * System Integration:
45545  * - Capacity constraint
45546  * - Flexibility constraint
45547  * - Grid Investment
45548  * - Capacity growth constraint
45549  *-------------------------------------------------------------------------------
45550   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
45553  *-------------------------------------------------------------------------------
45554  * Nuclear power plants
45555  *-------------------------------------------------------------------------------
45556   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
45559  *-------------------------------------------------------------------------------
45560  * GHG module
45561  * - CH4 FFI + CH4 waste + CH4 open fires
45562  * - N2O FFI + N2O waste + N2O open fires
45563  *-------------------------------------------------------------------------------
45564   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
45567  *-------------------------------------------------------------------------------
45568  * F-gases
45569  * - LLF
45570  * - SLF
45571  *-------------------------------------------------------------------------------
45572   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
45575  *-------------------------------------------------------------------------------
45576  * Landuse [simplified version of the land-use model]
45577  *-------------------------------------------------------------------------------
45578   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
45581  *-------------------------------------------------------------------------------
45582  * Bioenergy power plant
45583  *-------------------------------------------------------------------------------
45584   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
45587  *-------------------------------------------------------------------------------
45588  * Traditional Biofuels
45589  * - Requires the precedence of mod_landuse
45590  *-------------------------------------------------------------------------------
45591   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
45594  *-------------------------------------------------------------------------------
45595  * Advanced biofuel
45596  * - Require the precedence of mod_landuse
45597  *-------------------------------------------------------------------------------
45598   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
45601  *-------------------------------------------------------------------------------
45602  * Carbon Capture and Sequestration
45603  *-------------------------------------------------------------------------------
45604   
45606   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
45608  *-------------------------------------------------------------------------------
45609  * Coal for non-electric sectors
45610  * - Coke Plants
45611  * - Industrial and Commercial combined-heat-and-power (CHP)
45612  * - Others
45613  *-------------------------------------------------------------------------------
45614   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
45617  *-------------------------------------------------------------------------------
45618  * Wind energy module
45619  * - onshore and offshore
45620  *-------------------------------------------------------------------------------
45621   
45623   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
45625  *-------------------------------------------------------------------------------
45626  * Solar Powerplants (PV and CSP) to the electrical system
45627  *-------------------------------------------------------------------------------
45628   
45629  *-------------------------------------------------------------------------------
45631   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
45633  *-------------------------------------------------------------------------------
45634  * Technology development scenarios
45635  *-------------------------------------------------------------------------------
45636   
45638   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
45640  *-------------------------------------------------------------------------------
45641  * Oil Extraction
45642  * Options:
45643  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
45644  *-------------------------------------------------------------------------------
45645   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
45648  *-------------------------------------------------------------------------------
45649  * Uranium Resources
45650  *-------------------------------------------------------------------------------
45651   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
45654  *-------------------------------------------------------------------------------
45655  * Gas Resources
45656  *-------------------------------------------------------------------------------
45657   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
45660  *-------------------------------------------------------------------------------
45661  * Coal Resources
45662  *-------------------------------------------------------------------------------
45663   
45665   
45666   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
45668  *-------------------------------------------------------------------------------
45669  * Climate
45670  *
45671  * Represents the climate
45672  * - based on the DICE model equations
45673  * - Radiative forcing for non CO2 ghgs
45674  * - parameters calibrated to reproduce MAGICC6.4 default response
45675  *
45676  *  Options:
45677  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
45678  * - $setglobal cooperate_on_climate {'YES','NO'}
45679  * - 'YES'(default): Countries within a coalition act in cooperation
45680  *   'NO': Countries within a coalition act individually
45681  *
45682  *-------------------------------------------------------------------------------
45683   
45685   
45686  wemi(ghg(e),t) = sum(n, Q_EMI.l(e,t,n)) / wemi2qemi(e) + sum((n,ee)$(map_e_bunk(e,ee)), W_EMI.l(ee,t,n)) / card(n);
45687   
45689   
45690  W_EMI.l(ghg,t,n)$(not tfix(t)) = wemi(ghg,t);
45691   
45692  loop((t,tp1)$(pre(t,tp1)),
45693   
45694  WCUM_EMI.l('co2',m,tp1,n)$(not tfix(tp1)) = sum(mm, cmphi(mm,m) * WCUM_EMI.l('co2',mm,t,n)) +
45695                              ( tlen(t) * wemi('co2',t) )$( sameas(m,'atm') );
45696   
45697  WCUM_EMI.l(oghg,'atm',tp1,n)$(not tfix(tp1)) = WCUM_EMI.l(oghg,'atm',t,n)*cmdec1(oghg)**tlen(t)
45698                                   +cmdec2(oghg)*(wemi(oghg,t) +wemi(oghg,tp1))/2
45699                                   +(1-cmdec1(oghg)**tlen(t))*wcum_emi_eq(oghg);
45700  );
45701   
45702   
45703  RF.l('co2',t,n)$(not tfix(t)) = rfc('co2','alpha')*(log(WCUM_EMI.l('co2','atm',t,n))- log(rfc('co2','beta')));
45704   
45705  RF.l(oghg,t,n)$(not tfix(t)) = rfc(oghg,'inter')*rfc(oghg,'fac')*((rfc(oghg,'stm')*WCUM_EMI.l(oghg,'atm',t,n))**rfc(oghg,'ex')
45706                                          -(rfc(oghg,'stm')*emi_preind(oghg))**rfc(oghg,'ex'));
45707   
45708  TRF.l(t,n)$(not tfix(t)) = sum(ghg,RF.l(ghg,t,n)) + rfaerosols(t)
45710                  ;
45711   
45712  loop((t,tp1)$pre(t,tp1),
45713  TEMP.l('atm',tp1,n)$(not tfix(tp1)) = TEMP.l('atm',t,n) +
45714                                             tempc('sigma1') *
45715                                              (TRF.l(t,n) -
45716                                               tempc('lambda') * TEMP.l('atm',t,n) -
45717                                               tempc('sigma2') * (TEMP.l('atm',t,n) - TEMP.l('low',t,n)));
45718   
45719  TEMP.l('low',tp1,n)$(not tfix(tp1)) = TEMP.l('low',t,n) + tempc('heat_ocean') * (TEMP.l('atm',t,n) - TEMP.l('low',t,n));
45720  );
45721   
45723   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
45726  *-------------------------------------------------------------------------------
45727  * Long-run Damages from Climate Change
45728  * - Economic impacts
45729  * - Adaptation
45730  *-------------------------------------------------------------------------------
45731   
45733   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
45735  *-------------------------------------------------------------------------------
45736  * Light-duty Vehicles for Personal Transport
45737  *-------------------------------------------------------------------------------
45738   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
45741  *-------------------------------------------------------------------------------
45742  * Road Freight Transport
45743  *-------------------------------------------------------------------------------
45745   
45746   
45747   
45748   
45749   
45750   
45751  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
45753  *-------------------------------------------------------------------------------
45754  * Traditional Biomass
45755  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
45756  *  - require post_process to be launch before
45757  *-------------------------------------------------------------------------------
45758   
45760   
45761  * Optional modules
45762   
45763  * Policy modules
45764   
45765  * Calibration
45768  );
45769   
45770  loop(siter$((stop_nash eq 0) and (ord(siter) eq card(siter))),
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
45772  *-------------------------------------------------------------------------------
45773  * Report model progress
45774  *-------------------------------------------------------------------------------
45775   
45777   
45779   
45780  put errdat;
45781  * Horizontal separator
45782  put '----';
45783  put '-----';
45784  loop(ierr,
45785  put '---------';
45786  );
45787  loop(timeiterrep,
45788  put '----------';
45789  );
45790  put /;
45791  put '> reach max_iter!';
45792  put /;
45793  putclose errdat;
45794   
45796  );
45797   
45798  if(stop_nash eq 1,
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
45800  *-------------------------------------------------------------------------------
45801  * Report model progress
45802  *-------------------------------------------------------------------------------
45803   
45805   
45807   
45808  put errdat;
45809  * Horizontal separator
45810  put '----';
45811  put '-----';
45812  loop(ierr,
45813  put '---------';
45814  );
45815  loop(timeiterrep,
45816  put '----------';
45817  );
45818  put /;
45819  put '> Convergence criteria met!';
45820  put /;
45821  putclose errdat;
45822   
45824  );
45825   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
45827  *-------------------------------------------------------------------------------
45828  * Call modules by order
45829  *-------------------------------------------------------------------------------
45833   
45834  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
45836  *-------------------------------------------------------------------------------
45837  * Algorithm
45838  *-------------------------------------------------------------------------------
45839   
45841   
45842  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
45844  *-------------------------------------------------------------------------------
45845  * Time
45846  * - Temporal structure
45847  * - Fixed time periods
45848  * - States of the world
45849  *-------------------------------------------------------------------------------
45850   
45852   
45853  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
45855  *-------------------------------------------------------------------------------
45856  * Geographic dimension and mapping with countries
45857  *-------------------------------------------------------------------------------
45858   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
45861  *-------------------------------------------------------------------------------
45862  * Non-Cooperative Setup
45863  *
45864  * Each region is defined as an individual coalition.
45865  *
45866  *-------------------------------------------------------------------------------
45867   
45869   
45870  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
45872  *-------------------------------------------------------------------------------
45873  * Welfare
45874  *-------------------------------------------------------------------------------
45875   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
45878  *-------------------------------------------------------------------------------
45879  * Economy
45880  * - Production and Consumption definition
45881  * - Top-level of the production function
45882  * Options:
45883  * --original_ssp=1 : original SSP population and GDP data
45884  *-------------------------------------------------------------------------------
45885   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
45888  *-------------------------------------------------------------------------------
45889  * Energy sector
45890  *-------------------------------------------------------------------------------
45891   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
45894  *-------------------------------------------------------------------------------
45895  * Carbon Emissions
45896  * - Total CO2 emissions and CO2 Fossil fuel and Industry
45897  * - CO2 emission costs
45898  * - GHG permit market
45899  *-------------------------------------------------------------------------------
45900   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
45903  *-------------------------------------------------------------------------------
45904  * Research & Development
45905  * Options:
45906  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
45907  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
45908  *-------------------------------------------------------------------------------
45909   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
45912  *-------------------------------------------------------------------------------
45913  * Default Climate Policy Implementation
45914  *
45915  * Options:
45916  *    --policy={bau (default),ctax}
45917  *        Implement a climate policy setting
45918  *  [ --scen= ]
45919  *        Policy variant.
45920  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
45921  *          * XXX for a fixed percentage/yr (e.g. 5) growth
45922  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
45923  *  [ --ctax_year=2020 ]
45924  *        Starting year of the carbon tax
45925  *  [ --ctax_initial=30 ]
45926  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
45927  *
45928  *-------------------------------------------------------------------------------
45930   
45931  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
45933  *-------------------------------------------------------------------------------
45934  * Energy efficiency
45935  *-------------------------------------------------------------------------------
45936   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
45939  *-------------------------------------------------------------------------------
45940  * Hydro Power
45941  *-------------------------------------------------------------------------------
45942   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
45945  *-------------------------------------------------------------------------------
45946  * System Integration:
45947  * - Capacity constraint
45948  * - Flexibility constraint
45949  * - Grid Investment
45950  * - Capacity growth constraint
45951  *-------------------------------------------------------------------------------
45952   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
45955  *-------------------------------------------------------------------------------
45956  * Nuclear power plants
45957  *-------------------------------------------------------------------------------
45958   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
45961  *-------------------------------------------------------------------------------
45962  * GHG module
45963  * - CH4 FFI + CH4 waste + CH4 open fires
45964  * - N2O FFI + N2O waste + N2O open fires
45965  *-------------------------------------------------------------------------------
45966   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
45969  *-------------------------------------------------------------------------------
45970  * F-gases
45971  * - LLF
45972  * - SLF
45973  *-------------------------------------------------------------------------------
45974   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
45977  *-------------------------------------------------------------------------------
45978  * Landuse [simplified version of the land-use model]
45979  *-------------------------------------------------------------------------------
45980   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
45983  *-------------------------------------------------------------------------------
45984  * Bioenergy power plant
45985  *-------------------------------------------------------------------------------
45986   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
45989  *-------------------------------------------------------------------------------
45990  * Traditional Biofuels
45991  * - Requires the precedence of mod_landuse
45992  *-------------------------------------------------------------------------------
45993   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
45996  *-------------------------------------------------------------------------------
45997  * Advanced biofuel
45998  * - Require the precedence of mod_landuse
45999  *-------------------------------------------------------------------------------
46000   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
46003  *-------------------------------------------------------------------------------
46004  * Carbon Capture and Sequestration
46005  *-------------------------------------------------------------------------------
46006   
46008   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
46010  *-------------------------------------------------------------------------------
46011  * Coal for non-electric sectors
46012  * - Coke Plants
46013  * - Industrial and Commercial combined-heat-and-power (CHP)
46014  * - Others
46015  *-------------------------------------------------------------------------------
46016   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
46019  *-------------------------------------------------------------------------------
46020  * Wind energy module
46021  * - onshore and offshore
46022  *-------------------------------------------------------------------------------
46023   
46025   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
46027  *-------------------------------------------------------------------------------
46028  * Solar Powerplants (PV and CSP) to the electrical system
46029  *-------------------------------------------------------------------------------
46030   
46031  *-------------------------------------------------------------------------------
46033   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
46035  *-------------------------------------------------------------------------------
46036  * Technology development scenarios
46037  *-------------------------------------------------------------------------------
46038   
46040   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
46042  *-------------------------------------------------------------------------------
46043  * Oil Extraction
46044  * Options:
46045  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
46046  *-------------------------------------------------------------------------------
46047   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
46050  *-------------------------------------------------------------------------------
46051  * Uranium Resources
46052  *-------------------------------------------------------------------------------
46053   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
46056  *-------------------------------------------------------------------------------
46057  * Gas Resources
46058  *-------------------------------------------------------------------------------
46059   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
46062  *-------------------------------------------------------------------------------
46063  * Coal Resources
46064  *-------------------------------------------------------------------------------
46065   
46067   
46068   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
46070  *-------------------------------------------------------------------------------
46071  * Climate
46072  *
46073  * Represents the climate
46074  * - based on the DICE model equations
46075  * - Radiative forcing for non CO2 ghgs
46076  * - parameters calibrated to reproduce MAGICC6.4 default response
46077  *
46078  *  Options:
46079  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
46080  * - $setglobal cooperate_on_climate {'YES','NO'}
46081  * - 'YES'(default): Countries within a coalition act in cooperation
46082  *   'NO': Countries within a coalition act individually
46083  *
46084  *-------------------------------------------------------------------------------
46085   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
46088  *-------------------------------------------------------------------------------
46089  * Long-run Damages from Climate Change
46090  * - Economic impacts
46091  * - Adaptation
46092  *-------------------------------------------------------------------------------
46093   
46095   
46096  OMEGA.l(t,n)$(not tfix(t)) = 1;
46097   
46099   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
46101  *-------------------------------------------------------------------------------
46102  * Light-duty Vehicles for Personal Transport
46103  *-------------------------------------------------------------------------------
46104   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
46107  *-------------------------------------------------------------------------------
46108  * Road Freight Transport
46109  *-------------------------------------------------------------------------------
46111   
46112   
46113   
46114   
46115   
46116   
46117  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
46119  *-------------------------------------------------------------------------------
46120  * Traditional Biomass
46121  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
46122  *  - require post_process to be launch before
46123  *-------------------------------------------------------------------------------
46124   
46126   
46127  * Optional modules
46128   
46129  * Policy modules
46130   
46131  * Calibration
46134   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
46136  *-------------------------------------------------------------------------------
46137  * Report model progress
46138  *-------------------------------------------------------------------------------
46139   
46141   
46143   
46144  * End of run loop
46145  count_run = count_run + 1;
46146  );
46147   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
46149  *-------------------------------------------------------------------------------
46150  * Report model progress
46151  *-------------------------------------------------------------------------------
46152   
46154   
46156   
46157  put errdat;
46158  * Horizontal separator
46159  put '====';
46160  put '=====';
46161  loop(ierr,
46162  put '=========';
46163  );
46164  loop(timeiterrep,
46165  put '==========';
46166  );
46167  put /;
46168  putclose errdat;
46169   
46171   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
46173  *-------------------------------------------------------------------------------
46174  * Call modules by order
46175  *-------------------------------------------------------------------------------
46179   
46180  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
46182  *-------------------------------------------------------------------------------
46183  * Algorithm
46184  *-------------------------------------------------------------------------------
46185   
46187   
46188  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
46190  *-------------------------------------------------------------------------------
46191  * Time
46192  * - Temporal structure
46193  * - Fixed time periods
46194  * - States of the world
46195  *-------------------------------------------------------------------------------
46196   
46198   
46199  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
46201  *-------------------------------------------------------------------------------
46202  * Geographic dimension and mapping with countries
46203  *-------------------------------------------------------------------------------
46204   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
46207  *-------------------------------------------------------------------------------
46208  * Non-Cooperative Setup
46209  *
46210  * Each region is defined as an individual coalition.
46211  *
46212  *-------------------------------------------------------------------------------
46213   
46215   
46216  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
46218  *-------------------------------------------------------------------------------
46219  * Welfare
46220  *-------------------------------------------------------------------------------
46221   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
46224  *-------------------------------------------------------------------------------
46225  * Economy
46226  * - Production and Consumption definition
46227  * - Top-level of the production function
46228  * Options:
46229  * --original_ssp=1 : original SSP population and GDP data
46230  *-------------------------------------------------------------------------------
46231   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
46234  *-------------------------------------------------------------------------------
46235  * Energy sector
46236  *-------------------------------------------------------------------------------
46237   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
46240  *-------------------------------------------------------------------------------
46241  * Carbon Emissions
46242  * - Total CO2 emissions and CO2 Fossil fuel and Industry
46243  * - CO2 emission costs
46244  * - GHG permit market
46245  *-------------------------------------------------------------------------------
46246   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
46249  *-------------------------------------------------------------------------------
46250  * Research & Development
46251  * Options:
46252  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
46253  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
46254  *-------------------------------------------------------------------------------
46255   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
46258  *-------------------------------------------------------------------------------
46259  * Default Climate Policy Implementation
46260  *
46261  * Options:
46262  *    --policy={bau (default),ctax}
46263  *        Implement a climate policy setting
46264  *  [ --scen= ]
46265  *        Policy variant.
46266  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
46267  *          * XXX for a fixed percentage/yr (e.g. 5) growth
46268  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
46269  *  [ --ctax_year=2020 ]
46270  *        Starting year of the carbon tax
46271  *  [ --ctax_initial=30 ]
46272  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
46273  *
46274  *-------------------------------------------------------------------------------
46276   
46277  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
46279  *-------------------------------------------------------------------------------
46280  * Energy efficiency
46281  *-------------------------------------------------------------------------------
46282   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
46285  *-------------------------------------------------------------------------------
46286  * Hydro Power
46287  *-------------------------------------------------------------------------------
46288   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
46291  *-------------------------------------------------------------------------------
46292  * System Integration:
46293  * - Capacity constraint
46294  * - Flexibility constraint
46295  * - Grid Investment
46296  * - Capacity growth constraint
46297  *-------------------------------------------------------------------------------
46298   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
46301  *-------------------------------------------------------------------------------
46302  * Nuclear power plants
46303  *-------------------------------------------------------------------------------
46304   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
46307  *-------------------------------------------------------------------------------
46308  * GHG module
46309  * - CH4 FFI + CH4 waste + CH4 open fires
46310  * - N2O FFI + N2O waste + N2O open fires
46311  *-------------------------------------------------------------------------------
46312   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
46315  *-------------------------------------------------------------------------------
46316  * F-gases
46317  * - LLF
46318  * - SLF
46319  *-------------------------------------------------------------------------------
46320   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
46323  *-------------------------------------------------------------------------------
46324  * Landuse [simplified version of the land-use model]
46325  *-------------------------------------------------------------------------------
46326   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
46329  *-------------------------------------------------------------------------------
46330  * Bioenergy power plant
46331  *-------------------------------------------------------------------------------
46332   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
46335  *-------------------------------------------------------------------------------
46336  * Traditional Biofuels
46337  * - Requires the precedence of mod_landuse
46338  *-------------------------------------------------------------------------------
46339   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
46342  *-------------------------------------------------------------------------------
46343  * Advanced biofuel
46344  * - Require the precedence of mod_landuse
46345  *-------------------------------------------------------------------------------
46346   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
46349  *-------------------------------------------------------------------------------
46350  * Carbon Capture and Sequestration
46351  *-------------------------------------------------------------------------------
46352   
46354   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
46356  *-------------------------------------------------------------------------------
46357  * Coal for non-electric sectors
46358  * - Coke Plants
46359  * - Industrial and Commercial combined-heat-and-power (CHP)
46360  * - Others
46361  *-------------------------------------------------------------------------------
46362   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
46365  *-------------------------------------------------------------------------------
46366  * Wind energy module
46367  * - onshore and offshore
46368  *-------------------------------------------------------------------------------
46369   
46371   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
46373  *-------------------------------------------------------------------------------
46374  * Solar Powerplants (PV and CSP) to the electrical system
46375  *-------------------------------------------------------------------------------
46376   
46377  *-------------------------------------------------------------------------------
46379   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
46381  *-------------------------------------------------------------------------------
46382  * Technology development scenarios
46383  *-------------------------------------------------------------------------------
46384   
46386   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
46388  *-------------------------------------------------------------------------------
46389  * Oil Extraction
46390  * Options:
46391  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
46392  *-------------------------------------------------------------------------------
46393   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
46396  *-------------------------------------------------------------------------------
46397  * Uranium Resources
46398  *-------------------------------------------------------------------------------
46399   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
46402  *-------------------------------------------------------------------------------
46403  * Gas Resources
46404  *-------------------------------------------------------------------------------
46405   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
46408  *-------------------------------------------------------------------------------
46409  * Coal Resources
46410  *-------------------------------------------------------------------------------
46411   
46413   
46414   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
46416  *-------------------------------------------------------------------------------
46417  * Climate
46418  *
46419  * Represents the climate
46420  * - based on the DICE model equations
46421  * - Radiative forcing for non CO2 ghgs
46422  * - parameters calibrated to reproduce MAGICC6.4 default response
46423  *
46424  *  Options:
46425  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
46426  * - $setglobal cooperate_on_climate {'YES','NO'}
46427  * - 'YES'(default): Countries within a coalition act in cooperation
46428  *   'NO': Countries within a coalition act individually
46429  *
46430  *-------------------------------------------------------------------------------
46431   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
46434  *-------------------------------------------------------------------------------
46435  * Long-run Damages from Climate Change
46436  * - Economic impacts
46437  * - Adaptation
46438  *-------------------------------------------------------------------------------
46439   
46441   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
46443  *-------------------------------------------------------------------------------
46444  * Light-duty Vehicles for Personal Transport
46445  *-------------------------------------------------------------------------------
46446   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
46449  *-------------------------------------------------------------------------------
46450  * Road Freight Transport
46451  *-------------------------------------------------------------------------------
46453   
46454   
46455   
46456   
46457   
46458   
46459  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
46461  *-------------------------------------------------------------------------------
46462  * Traditional Biomass
46463  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
46464  *  - require post_process to be launch before
46465  *-------------------------------------------------------------------------------
46466   
46468   
46469  * Optional modules
46470   
46471  * Policy modules
46472   
46473  * Calibration
46476   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
46478  *-------------------------------------------------------------------------------
46479  * Call modules by order
46480  *-------------------------------------------------------------------------------
46484   
46485  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
46487  *-------------------------------------------------------------------------------
46488  * Algorithm
46489  *-------------------------------------------------------------------------------
46490   
46492   
46493  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
46495  *-------------------------------------------------------------------------------
46496  * Time
46497  * - Temporal structure
46498  * - Fixed time periods
46499  * - States of the world
46500  *-------------------------------------------------------------------------------
46501   
46503   
46504  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
46506  *-------------------------------------------------------------------------------
46507  * Geographic dimension and mapping with countries
46508  *-------------------------------------------------------------------------------
46509   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
46512  *-------------------------------------------------------------------------------
46513  * Non-Cooperative Setup
46514  *
46515  * Each region is defined as an individual coalition.
46516  *
46517  *-------------------------------------------------------------------------------
46518   
46520   
46521  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
46523  *-------------------------------------------------------------------------------
46524  * Welfare
46525  *-------------------------------------------------------------------------------
46526   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
46529  *-------------------------------------------------------------------------------
46530  * Economy
46531  * - Production and Consumption definition
46532  * - Top-level of the production function
46533  * Options:
46534  * --original_ssp=1 : original SSP population and GDP data
46535  *-------------------------------------------------------------------------------
46536   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
46539  *-------------------------------------------------------------------------------
46540  * Energy sector
46541  *-------------------------------------------------------------------------------
46542   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
46545  *-------------------------------------------------------------------------------
46546  * Carbon Emissions
46547  * - Total CO2 emissions and CO2 Fossil fuel and Industry
46548  * - CO2 emission costs
46549  * - GHG permit market
46550  *-------------------------------------------------------------------------------
46551   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
46554  *-------------------------------------------------------------------------------
46555  * Research & Development
46556  * Options:
46557  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
46558  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
46559  *-------------------------------------------------------------------------------
46560   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
46563  *-------------------------------------------------------------------------------
46564  * Default Climate Policy Implementation
46565  *
46566  * Options:
46567  *    --policy={bau (default),ctax}
46568  *        Implement a climate policy setting
46569  *  [ --scen= ]
46570  *        Policy variant.
46571  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
46572  *          * XXX for a fixed percentage/yr (e.g. 5) growth
46573  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
46574  *  [ --ctax_year=2020 ]
46575  *        Starting year of the carbon tax
46576  *  [ --ctax_initial=30 ]
46577  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
46578  *
46579  *-------------------------------------------------------------------------------
46581   
46582  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
46584  *-------------------------------------------------------------------------------
46585  * Energy efficiency
46586  *-------------------------------------------------------------------------------
46587   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
46590  *-------------------------------------------------------------------------------
46591  * Hydro Power
46592  *-------------------------------------------------------------------------------
46593   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
46596  *-------------------------------------------------------------------------------
46597  * System Integration:
46598  * - Capacity constraint
46599  * - Flexibility constraint
46600  * - Grid Investment
46601  * - Capacity growth constraint
46602  *-------------------------------------------------------------------------------
46603   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
46606  *-------------------------------------------------------------------------------
46607  * Nuclear power plants
46608  *-------------------------------------------------------------------------------
46609   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
46612  *-------------------------------------------------------------------------------
46613  * GHG module
46614  * - CH4 FFI + CH4 waste + CH4 open fires
46615  * - N2O FFI + N2O waste + N2O open fires
46616  *-------------------------------------------------------------------------------
46617   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
46620  *-------------------------------------------------------------------------------
46621  * F-gases
46622  * - LLF
46623  * - SLF
46624  *-------------------------------------------------------------------------------
46625   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
46628  *-------------------------------------------------------------------------------
46629  * Landuse [simplified version of the land-use model]
46630  *-------------------------------------------------------------------------------
46631   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
46634  *-------------------------------------------------------------------------------
46635  * Bioenergy power plant
46636  *-------------------------------------------------------------------------------
46637   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
46640  *-------------------------------------------------------------------------------
46641  * Traditional Biofuels
46642  * - Requires the precedence of mod_landuse
46643  *-------------------------------------------------------------------------------
46644   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
46647  *-------------------------------------------------------------------------------
46648  * Advanced biofuel
46649  * - Require the precedence of mod_landuse
46650  *-------------------------------------------------------------------------------
46651   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
46654  *-------------------------------------------------------------------------------
46655  * Carbon Capture and Sequestration
46656  *-------------------------------------------------------------------------------
46657   
46659   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
46661  *-------------------------------------------------------------------------------
46662  * Coal for non-electric sectors
46663  * - Coke Plants
46664  * - Industrial and Commercial combined-heat-and-power (CHP)
46665  * - Others
46666  *-------------------------------------------------------------------------------
46667   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
46670  *-------------------------------------------------------------------------------
46671  * Wind energy module
46672  * - onshore and offshore
46673  *-------------------------------------------------------------------------------
46674   
46676   
46677  parameter k_en_windon_norm(wind_dist,wind_class,t,n);
46678  parameter k_en_windoff_norm(wind_dist,wind_depth,wind_class,t,n);
46679  parameter k_en_wind_norm_sum(jel_wind,t,n);
46680  parameter wind_mu_marginal(jel_wind,t,n);
46681   
46682  k_en_windon_norm(wind_dist,wind_class,t,n) = K_EN_WINDON.l(wind_dist,wind_class,t,n) / K_EN_WINDON.up(wind_dist,wind_class,t,n);
46683  k_en_windoff_norm(wind_dist,wind_depth,wind_class,t,n) = K_EN_WINDOFF.l(wind_dist,wind_depth,wind_class,t,n) / K_EN_WINDOFF.up(wind_dist,wind_depth,wind_class,t,n);
46684  k_en_wind_norm_sum('elwindon',t,n) = sum(wind_class, k_en_windon_norm('near',wind_class,t,n));
46685  k_en_wind_norm_sum('elwindoff',t,n) = sum(wind_class, k_en_windoff_norm('near','shallow',wind_class,t,n));
46686  loop(wind_class,
46687      wind_mu_marginal(jel_wind,t,n)$(k_en_wind_norm_sum(jel_wind,t,n) gt (ord(wind_class)-1)) = sum(wind_class2$(ord(wind_class2) eq (card(wind_class)-ord(wind_class)+1)), wind_mu(wind_class2));
46688  );
46689   
46690  wind_mu_marginal(jel_wind,tfirst,n) = smax(tt$(year(tt) eq 2010),wind_mu_marginal(jel_wind,tt,n));
46691   
46692  *-------------------------------------------------------------------------------
46694   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
46696  *-------------------------------------------------------------------------------
46697  * Solar Powerplants (PV and CSP) to the electrical system
46698  *-------------------------------------------------------------------------------
46699   
46700  *-------------------------------------------------------------------------------
46702   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
46704  *-------------------------------------------------------------------------------
46705  * Technology development scenarios
46706  *-------------------------------------------------------------------------------
46707   
46709   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
46711  *-------------------------------------------------------------------------------
46712  * Oil Extraction
46713  * Options:
46714  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
46715  *-------------------------------------------------------------------------------
46716   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
46719  *-------------------------------------------------------------------------------
46720  * Uranium Resources
46721  *-------------------------------------------------------------------------------
46722   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
46725  *-------------------------------------------------------------------------------
46726  * Gas Resources
46727  *-------------------------------------------------------------------------------
46728   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
46731  *-------------------------------------------------------------------------------
46732  * Coal Resources
46733  *-------------------------------------------------------------------------------
46734   
46736   
46737   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
46739  *-------------------------------------------------------------------------------
46740  * Climate
46741  *
46742  * Represents the climate
46743  * - based on the DICE model equations
46744  * - Radiative forcing for non CO2 ghgs
46745  * - parameters calibrated to reproduce MAGICC6.4 default response
46746  *
46747  *  Options:
46748  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
46749  * - $setglobal cooperate_on_climate {'YES','NO'}
46750  * - 'YES'(default): Countries within a coalition act in cooperation
46751  *   'NO': Countries within a coalition act individually
46752  *
46753  *-------------------------------------------------------------------------------
46754   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
46757  *-------------------------------------------------------------------------------
46758  * Long-run Damages from Climate Change
46759  * - Economic impacts
46760  * - Adaptation
46761  *-------------------------------------------------------------------------------
46762   
46764   
46765  parameter resdam(t,n) 'Residual damage [T$]';
46766  resdam(t, n) = Q.l('y', t, n) * (OMEGA.l(t, n) - 1);
46767   
46768  parameter grossdam(t,n) 'Gross damage [T$]';
46769  grossdam(t,n) = Q.l('y', t, n) * ((comega_neg('climcost',n, 'deg1') + comega_pos('climcost',n, 'deg1')) * TEMP.l('atm', t, n) +
46770                                  (comega_neg('climcost',n, 'deg2') + comega_pos('climcost',n, 'deg2')) * TEMP.l('atm', t, n) ** comega_neg('climcost',n,'deg3') +
46771                                  (comega_neg('climcost',n, 'deg4') + comega_pos('climcost',n, 'deg4'))
46772                                 );
46773   
46774  parameter dam_rep(t,n,*) 'Damages in terms of OMEGA approx %GDP loss' ;
46776   
46778   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
46780  *-------------------------------------------------------------------------------
46781  * Light-duty Vehicles for Personal Transport
46782  *-------------------------------------------------------------------------------
46783   
46785   
46786  parameter transp_world_ldv_fleet(jveh,t);
46787  parameter transp_ldv_ice_feeding(fuel,jfedveh,t,n);
46788  parameter transp_world_ldv_ice_feeding(fuel,jfedveh,t);
46789  parameter transp_ldv_biofuel_feed_share(jfedveh,t,n);
46790  parameter co2_transport(t,n);
46791   
46792  transp_world_ldv_fleet(jveh,t) = sum(n, K_EN.l(jveh,t,n));
46793  transp_ldv_ice_feeding(fuel,jfedveh,t,n) = Q_IN.l(fuel,jfedveh,t,n);
46794  transp_world_ldv_ice_feeding(fuel,jfedveh,t) = sum(n, Q_IN.l(fuel,jfedveh,t,n));
46795  transp_ldv_biofuel_feed_share(jfedveh,t,n) = (Q_IN.l('trbiofuel',jfedveh,t,n)+Q_IN.l('advbiofuel',jfedveh,t,n))/(Q_IN.l('oil',jfedveh,t,n)+Q_IN.l('trbiofuel',jfedveh,t,n)+Q_IN.l('advbiofuel',jfedveh,t,n));
46796   
46797  co2_transport(t,n) = sum((fuel,jfed)$(csi(fuel,jfed,t,n) and (jveh(jfed) or jfrt(jfed))),Q_IN.l(fuel,jfed,t,n)*emi_st(fuel)*emi_sys('co2ffi',t,n));
46798   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
46801  *-------------------------------------------------------------------------------
46802  * Road Freight Transport
46803  *-------------------------------------------------------------------------------
46805   
46806   
46807   
46808   
46809   
46810   
46811  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
46813  *-------------------------------------------------------------------------------
46814  * Traditional Biomass
46815  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
46816  *  - require post_process to be launch before
46817  *-------------------------------------------------------------------------------
46818   
46820   
46821  * Optional modules
46822   
46823  * Policy modules
46824   
46825  * Calibration
46828   
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\post\gdx.gms
46830  *-------------------------------------------------------------------------------
46831  * Write output GDX
46832  *-------------------------------------------------------------------------------
46833   
46834  execute_unload 'C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\results_emicap_usa_1e-3_500notusa.gdx'
46835   
46836  * item list
INCLUDE    C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\algoitemlist.txt
46838  all_feasible
46839  all_optimal
46840  nb_clt_infes
46841  nb_clt_noopt
46842  nb_tot_infes
46843  allerr
46844  allinfoiter
46845  delta_price
46846  errtrade
46847  infoiter
46848  irep
46849  iterrep
46850  m_consumption
46851  mbalance
46852  mprofit
46853  price_iter
46854  solrep
46855  tcheck
46856  timer
46857  trust_region
46858   
46859  * equations
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\post\gdx_eql.gms
46861  *-------------------------------------------------------------------------------
46862  * post_gdx_eql.gms
46863  *
46864  * Get list of equations from all coalitions for outputs
46865  *-------------------------------------------------------------------------------
46866   
46869   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
46871  *-------------------------------------------------------------------------------
46872  * Call modules by order
46873  *-------------------------------------------------------------------------------
46877   
46878  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
46880  *-------------------------------------------------------------------------------
46881  * Algorithm
46882  *-------------------------------------------------------------------------------
46883   
46885   
46886  eqobj_c_brazil
46887   
46888  *-------------------------------------------------------------------------------
46890   
46891  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
46893  *-------------------------------------------------------------------------------
46894  * Time
46895  * - Temporal structure
46896  * - Fixed time periods
46897  * - States of the world
46898  *-------------------------------------------------------------------------------
46899   
46901   
46902  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
46904  *-------------------------------------------------------------------------------
46905  * Geographic dimension and mapping with countries
46906  *-------------------------------------------------------------------------------
46907   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
46910  *-------------------------------------------------------------------------------
46911  * Non-Cooperative Setup
46912  *
46913  * Each region is defined as an individual coalition.
46914  *
46915  *-------------------------------------------------------------------------------
46916   
46918   
46919  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
46921  *-------------------------------------------------------------------------------
46922  * Welfare
46923  *-------------------------------------------------------------------------------
46924   
46926   
46927  equtility_c_brazil
46928   
46929  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
46932  *-------------------------------------------------------------------------------
46933  * Economy
46934  * - Production and Consumption definition
46935  * - Top-level of the production function
46936  * Options:
46937  * --original_ssp=1 : original SSP population and GDP data
46938  *-------------------------------------------------------------------------------
46939   
46941   
46942  eqk_c_brazil
46943  eqq_cc_c_brazil
46944  eqq_fen_c_brazil
46945  eqq_y_c_brazil
46946   
46947  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
46950  *-------------------------------------------------------------------------------
46951  * Energy sector
46952  *-------------------------------------------------------------------------------
46953   
46955   
46956  eq_mkt_clearing_oil_c_brazil
46957  eqcost_pes_c_brazil
46958  eqcost_ses_c_brazil
46959  eqk_en_c_brazil
46960  eqq_ces_el_c_brazil
46961  eqq_ces_nelgas_c_brazil
46962  eqq_el2_c_brazil
46963  eqq_el_c_brazil
46964  eqq_elff_c_brazil
46965  eqq_en_c_brazil
46966  eqq_en_in_c_brazil
46967  eqq_en_mu_c_brazil
46968  eqq_en_tree_c_brazil
46969  eqq_nel_c_brazil
46970  eqq_nelog_c_brazil
46971  eqq_fuel_c_brazil
46972  eqq_elffren_c_brazil
46973   
46974  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
46977  *-------------------------------------------------------------------------------
46978  * Carbon Emissions
46979  * - Total CO2 emissions and CO2 Fossil fuel and Industry
46980  * - CO2 emission costs
46981  * - GHG permit market
46982  *-------------------------------------------------------------------------------
46983   
46985   
46986  eqq_emi_lim_c_brazil
46987  eqq_emi_tree_c_brazil
46988  eqq_emi_co2ffi_c_brazil
46989   
46990  eqcost_emi_co2_c_brazil
46991   
46992  eq_mkt_clearing_nip_c_brazil
46993   
46994  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
46997  *-------------------------------------------------------------------------------
46998  * Research & Development
46999  * Options:
47000  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
47001  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
47002  *-------------------------------------------------------------------------------
47003   
47005   
47006  eqk_rd_c_brazil
47007  eqspill_coop_c_brazil
47008  eqspill_lead_c_brazil
47009  eqspill_foll_c_brazil
47010  eqmcost_inv_back_c_brazil
47011  eqmcost_inv_back_lbd_c_brazil
47012   
47013  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
47016  *-------------------------------------------------------------------------------
47017  * Default Climate Policy Implementation
47018  *
47019  * Options:
47020  *    --policy={bau (default),ctax}
47021  *        Implement a climate policy setting
47022  *  [ --scen= ]
47023  *        Policy variant.
47024  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
47025  *          * XXX for a fixed percentage/yr (e.g. 5) growth
47026  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
47027  *  [ --ctax_year=2020 ]
47028  *        Starting year of the carbon tax
47029  *  [ --ctax_initial=30 ]
47030  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
47031  *
47032  *-------------------------------------------------------------------------------
47034   
47035  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
47037  *-------------------------------------------------------------------------------
47038  * Energy efficiency
47039  *-------------------------------------------------------------------------------
47040   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
47043  *-------------------------------------------------------------------------------
47044  * Hydro Power
47045  *-------------------------------------------------------------------------------
47046   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
47049  *-------------------------------------------------------------------------------
47050  * System Integration:
47051  * - Capacity constraint
47052  * - Flexibility constraint
47053  * - Grid Investment
47054  * - Capacity growth constraint
47055  *-------------------------------------------------------------------------------
47056   
47058   
47059  eqq_elintren_c_brazil
47060  eqflex_c_brazil
47061  eqk_en_grid_c_brazil
47062  eqk_en_grid_to_k_en_c_brazil
47063  eqfirm_capacity_c_brazil
47064  eqcap_growth_c_brazil
47065   
47066  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
47069  *-------------------------------------------------------------------------------
47070  * Nuclear power plants
47071  *-------------------------------------------------------------------------------
47072   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
47075  *-------------------------------------------------------------------------------
47076  * GHG module
47077  * - CH4 FFI + CH4 waste + CH4 open fires
47078  * - N2O FFI + N2O waste + N2O open fires
47079  *-------------------------------------------------------------------------------
47080   
47082   
47083  eqq_emi_waste_c_brazil
47084  eqq_emi_n2o_ffi_c_brazil
47085  eqq_emi_ch4_ffi_c_brazil
47086   
47087  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
47090  *-------------------------------------------------------------------------------
47091  * F-gases
47092  * - LLF
47093  * - SLF
47094  *-------------------------------------------------------------------------------
47095   
47097   
47098  eqq_emi_fgases_c_brazil
47099   
47100  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
47103  *-------------------------------------------------------------------------------
47104  * Landuse [simplified version of the land-use model]
47105  *-------------------------------------------------------------------------------
47106   
47108   
47109  eq_wbio_c_brazil
47110  eqcost_pes_wbio_c_brazil
47111   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
47114  *-------------------------------------------------------------------------------
47115  * Bioenergy power plant
47116  *-------------------------------------------------------------------------------
47117   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
47120  *-------------------------------------------------------------------------------
47121  * Traditional Biofuels
47122  * - Requires the precedence of mod_landuse
47123  *-------------------------------------------------------------------------------
47124   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
47127  *-------------------------------------------------------------------------------
47128  * Advanced biofuel
47129  * - Require the precedence of mod_landuse
47130  *-------------------------------------------------------------------------------
47131   
47133   
47134  eqq_en_lim_advbiofuel_c_brazil
47135  eqmcost_fuel_advbiofuel_c_brazil
47136   
47137  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
47140  *-------------------------------------------------------------------------------
47141  * Carbon Capture and Sequestration
47142  *-------------------------------------------------------------------------------
47143   
47145   
47146  eqq_emi_ccs_c_brazil
47147  eqcost_emi_sinks_c_brazil
47148  eq_stor_ccs_cum_c_brazil
47149  eq_emi_stor_ccs_c_brazil
47150  eq_emi_leak_ccs_c_brazil
47151   
47152  *-------------------------------------------------------------------------------
47154   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
47156  *-------------------------------------------------------------------------------
47157  * Coal for non-electric sectors
47158  * - Coke Plants
47159  * - Industrial and Commercial combined-heat-and-power (CHP)
47160  * - Others
47161  *-------------------------------------------------------------------------------
47162   
47164   
47165  eqcost_en_nelcoal_c_brazil
47166  eqq_ncoalabat_monotone_c_brazil
47167  eqq_en_nelcoalccs_max_c_brazil
47168   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
47171  *-------------------------------------------------------------------------------
47172  * Wind energy module
47173  * - onshore and offshore
47174  *-------------------------------------------------------------------------------
47175   
47177   
47178  eqq_en_mu_windon_c_brazil
47179  eqq_en_mu_windoff_c_brazil
47180  eqk_en_windon_c_brazil
47181  eqk_en_windoff_c_brazil
47182  eqq_en_windon_sum_c_brazil
47183  eqq_en_windoff_sum_c_brazil
47184  eqk_en_windon_sum_c_brazil
47185  eqk_en_windoff_sum_c_brazil
47186  eqi_en_windon_sum_c_brazil
47187  eqi_en_windoff_sum_c_brazil
47188   
47190   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
47192  *-------------------------------------------------------------------------------
47193  * Solar Powerplants (PV and CSP) to the electrical system
47194  *-------------------------------------------------------------------------------
47195   
47196  *-------------------------------------------------------------------------------
47198   
47199  eqq_en_mu_pv_c_brazil
47200  eqq_en_mu_csp_c_brazil
47201  eqk_en_pv_c_brazil
47202  eqk_en_csp_c_brazil
47203  eqq_en_pv_sum_c_brazil
47204  eqq_en_csp_sum_c_brazil
47205  eqk_en_pv_sum_c_brazil
47206  eqk_en_csp_sum_c_brazil
47207  eqi_en_pv_sum_c_brazil
47208  eqi_en_csp_sum_c_brazil
47209  eqk_en_solar_comp_c_brazil
47210   
47211  *-------------------------------------------------------------------------------
47213   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
47215  *-------------------------------------------------------------------------------
47216  * Technology development scenarios
47217  *-------------------------------------------------------------------------------
47218   
47220   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
47222  *-------------------------------------------------------------------------------
47223  * Oil Extraction
47224  * Options:
47225  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
47226  *-------------------------------------------------------------------------------
47227   
47229   
47230  eqoilcap_c_brazil
47231  eqoilprod_c_brazil
47232  eqq_out_oil_c_brazil
47233  eqcum_oil_c_brazil
47234  eqcost_oil_c_brazil
47235  eqi_oil_c_brazil
47236  eqi_out_oil_c_brazil
47237  eqq_emi_out_oil_c_brazil
47238   
47239  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
47242  *-------------------------------------------------------------------------------
47243  * Uranium Resources
47244  *-------------------------------------------------------------------------------
47245   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
47248  *-------------------------------------------------------------------------------
47249  * Gas Resources
47250  *-------------------------------------------------------------------------------
47251   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
47254  *-------------------------------------------------------------------------------
47255  * Coal Resources
47256  *-------------------------------------------------------------------------------
47257   
47259   
47260   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
47262  *-------------------------------------------------------------------------------
47263  * Climate
47264  *
47265  * Represents the climate
47266  * - based on the DICE model equations
47267  * - Radiative forcing for non CO2 ghgs
47268  * - parameters calibrated to reproduce MAGICC6.4 default response
47269  *
47270  *  Options:
47271  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
47272  * - $setglobal cooperate_on_climate {'YES','NO'}
47273  * - 'YES'(default): Countries within a coalition act in cooperation
47274  *   'NO': Countries within a coalition act individually
47275  *
47276  *-------------------------------------------------------------------------------
47277   
47279   
47281   
47282  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
47285  *-------------------------------------------------------------------------------
47286  * Long-run Damages from Climate Change
47287  * - Economic impacts
47288  * - Adaptation
47289  *-------------------------------------------------------------------------------
47290   
47292   
47294   
47295  *-------------------------------------------------------------------------------
47297   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
47299  *-------------------------------------------------------------------------------
47300  * Light-duty Vehicles for Personal Transport
47301  *-------------------------------------------------------------------------------
47302   
47304   
47305  eqnb_veh_c_brazil
47306  eqq_en_veh_c_brazil
47307  eqq_el_edv_c_brazil
47308  eqmcost_inv_hybrid_c_brazil
47309  eqmcost_inv_plghybrid_c_brazil
47310  eqmcost_inv_edv_c_brazil
47311  *** newcode
47312  eqq_inv_red_ban_c_brazil
47313  ***
47314  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
47317  *-------------------------------------------------------------------------------
47318  * Road Freight Transport
47319  *-------------------------------------------------------------------------------
47321   
47322  eqnb_frtveh_c_brazil
47323  eqq_en_frtveh_c_brazil
47324  eqq_el_frtedv_c_brazil
47325  eqmcost_inv_hbd_stfr_c_brazil
47326  eqmcost_inv_plghbd_stfr_c_brazil
47327  eqmcost_inv_edv_stfr_c_brazil
47328   
47329  *-------------------------------------------------------------------------------
47331   
47332   
47333   
47334   
47335   
47336   
47337  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
47339  *-------------------------------------------------------------------------------
47340  * Traditional Biomass
47341  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
47342  *  - require post_process to be launch before
47343  *-------------------------------------------------------------------------------
47344   
47346   
47347  * Optional modules
47348   
47349  * Policy modules
47350   
47351  * Calibration
47354   
47359   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
47361  *-------------------------------------------------------------------------------
47362  * Call modules by order
47363  *-------------------------------------------------------------------------------
47367   
47368  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
47370  *-------------------------------------------------------------------------------
47371  * Algorithm
47372  *-------------------------------------------------------------------------------
47373   
47375   
47376  eqobj_c_canada
47377   
47378  *-------------------------------------------------------------------------------
47380   
47381  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
47383  *-------------------------------------------------------------------------------
47384  * Time
47385  * - Temporal structure
47386  * - Fixed time periods
47387  * - States of the world
47388  *-------------------------------------------------------------------------------
47389   
47391   
47392  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
47394  *-------------------------------------------------------------------------------
47395  * Geographic dimension and mapping with countries
47396  *-------------------------------------------------------------------------------
47397   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
47400  *-------------------------------------------------------------------------------
47401  * Non-Cooperative Setup
47402  *
47403  * Each region is defined as an individual coalition.
47404  *
47405  *-------------------------------------------------------------------------------
47406   
47408   
47409  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
47411  *-------------------------------------------------------------------------------
47412  * Welfare
47413  *-------------------------------------------------------------------------------
47414   
47416   
47417  equtility_c_canada
47418   
47419  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
47422  *-------------------------------------------------------------------------------
47423  * Economy
47424  * - Production and Consumption definition
47425  * - Top-level of the production function
47426  * Options:
47427  * --original_ssp=1 : original SSP population and GDP data
47428  *-------------------------------------------------------------------------------
47429   
47431   
47432  eqk_c_canada
47433  eqq_cc_c_canada
47434  eqq_fen_c_canada
47435  eqq_y_c_canada
47436   
47437  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
47440  *-------------------------------------------------------------------------------
47441  * Energy sector
47442  *-------------------------------------------------------------------------------
47443   
47445   
47446  eq_mkt_clearing_oil_c_canada
47447  eqcost_pes_c_canada
47448  eqcost_ses_c_canada
47449  eqk_en_c_canada
47450  eqq_ces_el_c_canada
47451  eqq_ces_nelgas_c_canada
47452  eqq_el2_c_canada
47453  eqq_el_c_canada
47454  eqq_elff_c_canada
47455  eqq_en_c_canada
47456  eqq_en_in_c_canada
47457  eqq_en_mu_c_canada
47458  eqq_en_tree_c_canada
47459  eqq_nel_c_canada
47460  eqq_nelog_c_canada
47461  eqq_fuel_c_canada
47462  eqq_elffren_c_canada
47463   
47464  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
47467  *-------------------------------------------------------------------------------
47468  * Carbon Emissions
47469  * - Total CO2 emissions and CO2 Fossil fuel and Industry
47470  * - CO2 emission costs
47471  * - GHG permit market
47472  *-------------------------------------------------------------------------------
47473   
47475   
47476  eqq_emi_lim_c_canada
47477  eqq_emi_tree_c_canada
47478  eqq_emi_co2ffi_c_canada
47479   
47480  eqcost_emi_co2_c_canada
47481   
47482  eq_mkt_clearing_nip_c_canada
47483   
47484  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
47487  *-------------------------------------------------------------------------------
47488  * Research & Development
47489  * Options:
47490  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
47491  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
47492  *-------------------------------------------------------------------------------
47493   
47495   
47496  eqk_rd_c_canada
47497  eqspill_coop_c_canada
47498  eqspill_lead_c_canada
47499  eqspill_foll_c_canada
47500  eqmcost_inv_back_c_canada
47501  eqmcost_inv_back_lbd_c_canada
47502   
47503  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
47506  *-------------------------------------------------------------------------------
47507  * Default Climate Policy Implementation
47508  *
47509  * Options:
47510  *    --policy={bau (default),ctax}
47511  *        Implement a climate policy setting
47512  *  [ --scen= ]
47513  *        Policy variant.
47514  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
47515  *          * XXX for a fixed percentage/yr (e.g. 5) growth
47516  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
47517  *  [ --ctax_year=2020 ]
47518  *        Starting year of the carbon tax
47519  *  [ --ctax_initial=30 ]
47520  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
47521  *
47522  *-------------------------------------------------------------------------------
47524   
47525  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
47527  *-------------------------------------------------------------------------------
47528  * Energy efficiency
47529  *-------------------------------------------------------------------------------
47530   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
47533  *-------------------------------------------------------------------------------
47534  * Hydro Power
47535  *-------------------------------------------------------------------------------
47536   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
47539  *-------------------------------------------------------------------------------
47540  * System Integration:
47541  * - Capacity constraint
47542  * - Flexibility constraint
47543  * - Grid Investment
47544  * - Capacity growth constraint
47545  *-------------------------------------------------------------------------------
47546   
47548   
47549  eqq_elintren_c_canada
47550  eqflex_c_canada
47551  eqk_en_grid_c_canada
47552  eqk_en_grid_to_k_en_c_canada
47553  eqfirm_capacity_c_canada
47554  eqcap_growth_c_canada
47555   
47556  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
47559  *-------------------------------------------------------------------------------
47560  * Nuclear power plants
47561  *-------------------------------------------------------------------------------
47562   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
47565  *-------------------------------------------------------------------------------
47566  * GHG module
47567  * - CH4 FFI + CH4 waste + CH4 open fires
47568  * - N2O FFI + N2O waste + N2O open fires
47569  *-------------------------------------------------------------------------------
47570   
47572   
47573  eqq_emi_waste_c_canada
47574  eqq_emi_n2o_ffi_c_canada
47575  eqq_emi_ch4_ffi_c_canada
47576   
47577  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
47580  *-------------------------------------------------------------------------------
47581  * F-gases
47582  * - LLF
47583  * - SLF
47584  *-------------------------------------------------------------------------------
47585   
47587   
47588  eqq_emi_fgases_c_canada
47589   
47590  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
47593  *-------------------------------------------------------------------------------
47594  * Landuse [simplified version of the land-use model]
47595  *-------------------------------------------------------------------------------
47596   
47598   
47599  eq_wbio_c_canada
47600  eqcost_pes_wbio_c_canada
47601   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
47604  *-------------------------------------------------------------------------------
47605  * Bioenergy power plant
47606  *-------------------------------------------------------------------------------
47607   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
47610  *-------------------------------------------------------------------------------
47611  * Traditional Biofuels
47612  * - Requires the precedence of mod_landuse
47613  *-------------------------------------------------------------------------------
47614   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
47617  *-------------------------------------------------------------------------------
47618  * Advanced biofuel
47619  * - Require the precedence of mod_landuse
47620  *-------------------------------------------------------------------------------
47621   
47623   
47624  eqq_en_lim_advbiofuel_c_canada
47625  eqmcost_fuel_advbiofuel_c_canada
47626   
47627  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
47630  *-------------------------------------------------------------------------------
47631  * Carbon Capture and Sequestration
47632  *-------------------------------------------------------------------------------
47633   
47635   
47636  eqq_emi_ccs_c_canada
47637  eqcost_emi_sinks_c_canada
47638  eq_stor_ccs_cum_c_canada
47639  eq_emi_stor_ccs_c_canada
47640  eq_emi_leak_ccs_c_canada
47641   
47642  *-------------------------------------------------------------------------------
47644   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
47646  *-------------------------------------------------------------------------------
47647  * Coal for non-electric sectors
47648  * - Coke Plants
47649  * - Industrial and Commercial combined-heat-and-power (CHP)
47650  * - Others
47651  *-------------------------------------------------------------------------------
47652   
47654   
47655  eqcost_en_nelcoal_c_canada
47656  eqq_ncoalabat_monotone_c_canada
47657  eqq_en_nelcoalccs_max_c_canada
47658   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
47661  *-------------------------------------------------------------------------------
47662  * Wind energy module
47663  * - onshore and offshore
47664  *-------------------------------------------------------------------------------
47665   
47667   
47668  eqq_en_mu_windon_c_canada
47669  eqq_en_mu_windoff_c_canada
47670  eqk_en_windon_c_canada
47671  eqk_en_windoff_c_canada
47672  eqq_en_windon_sum_c_canada
47673  eqq_en_windoff_sum_c_canada
47674  eqk_en_windon_sum_c_canada
47675  eqk_en_windoff_sum_c_canada
47676  eqi_en_windon_sum_c_canada
47677  eqi_en_windoff_sum_c_canada
47678   
47680   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
47682  *-------------------------------------------------------------------------------
47683  * Solar Powerplants (PV and CSP) to the electrical system
47684  *-------------------------------------------------------------------------------
47685   
47686  *-------------------------------------------------------------------------------
47688   
47689  eqq_en_mu_pv_c_canada
47690  eqq_en_mu_csp_c_canada
47691  eqk_en_pv_c_canada
47692  eqk_en_csp_c_canada
47693  eqq_en_pv_sum_c_canada
47694  eqq_en_csp_sum_c_canada
47695  eqk_en_pv_sum_c_canada
47696  eqk_en_csp_sum_c_canada
47697  eqi_en_pv_sum_c_canada
47698  eqi_en_csp_sum_c_canada
47699  eqk_en_solar_comp_c_canada
47700   
47701  *-------------------------------------------------------------------------------
47703   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
47705  *-------------------------------------------------------------------------------
47706  * Technology development scenarios
47707  *-------------------------------------------------------------------------------
47708   
47710   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
47712  *-------------------------------------------------------------------------------
47713  * Oil Extraction
47714  * Options:
47715  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
47716  *-------------------------------------------------------------------------------
47717   
47719   
47720  eqoilcap_c_canada
47721  eqoilprod_c_canada
47722  eqq_out_oil_c_canada
47723  eqcum_oil_c_canada
47724  eqcost_oil_c_canada
47725  eqi_oil_c_canada
47726  eqi_out_oil_c_canada
47727  eqq_emi_out_oil_c_canada
47728   
47729  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
47732  *-------------------------------------------------------------------------------
47733  * Uranium Resources
47734  *-------------------------------------------------------------------------------
47735   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
47738  *-------------------------------------------------------------------------------
47739  * Gas Resources
47740  *-------------------------------------------------------------------------------
47741   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
47744  *-------------------------------------------------------------------------------
47745  * Coal Resources
47746  *-------------------------------------------------------------------------------
47747   
47749   
47750   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
47752  *-------------------------------------------------------------------------------
47753  * Climate
47754  *
47755  * Represents the climate
47756  * - based on the DICE model equations
47757  * - Radiative forcing for non CO2 ghgs
47758  * - parameters calibrated to reproduce MAGICC6.4 default response
47759  *
47760  *  Options:
47761  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
47762  * - $setglobal cooperate_on_climate {'YES','NO'}
47763  * - 'YES'(default): Countries within a coalition act in cooperation
47764  *   'NO': Countries within a coalition act individually
47765  *
47766  *-------------------------------------------------------------------------------
47767   
47769   
47771   
47772  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
47775  *-------------------------------------------------------------------------------
47776  * Long-run Damages from Climate Change
47777  * - Economic impacts
47778  * - Adaptation
47779  *-------------------------------------------------------------------------------
47780   
47782   
47784   
47785  *-------------------------------------------------------------------------------
47787   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
47789  *-------------------------------------------------------------------------------
47790  * Light-duty Vehicles for Personal Transport
47791  *-------------------------------------------------------------------------------
47792   
47794   
47795  eqnb_veh_c_canada
47796  eqq_en_veh_c_canada
47797  eqq_el_edv_c_canada
47798  eqmcost_inv_hybrid_c_canada
47799  eqmcost_inv_plghybrid_c_canada
47800  eqmcost_inv_edv_c_canada
47801  *** newcode
47802  eqq_inv_red_ban_c_canada
47803  ***
47804  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
47807  *-------------------------------------------------------------------------------
47808  * Road Freight Transport
47809  *-------------------------------------------------------------------------------
47811   
47812  eqnb_frtveh_c_canada
47813  eqq_en_frtveh_c_canada
47814  eqq_el_frtedv_c_canada
47815  eqmcost_inv_hbd_stfr_c_canada
47816  eqmcost_inv_plghbd_stfr_c_canada
47817  eqmcost_inv_edv_stfr_c_canada
47818   
47819  *-------------------------------------------------------------------------------
47821   
47822   
47823   
47824   
47825   
47826   
47827  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
47829  *-------------------------------------------------------------------------------
47830  * Traditional Biomass
47831  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
47832  *  - require post_process to be launch before
47833  *-------------------------------------------------------------------------------
47834   
47836   
47837  * Optional modules
47838   
47839  * Policy modules
47840   
47841  * Calibration
47844   
47849   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
47851  *-------------------------------------------------------------------------------
47852  * Call modules by order
47853  *-------------------------------------------------------------------------------
47857   
47858  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
47860  *-------------------------------------------------------------------------------
47861  * Algorithm
47862  *-------------------------------------------------------------------------------
47863   
47865   
47866  eqobj_c_china
47867   
47868  *-------------------------------------------------------------------------------
47870   
47871  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
47873  *-------------------------------------------------------------------------------
47874  * Time
47875  * - Temporal structure
47876  * - Fixed time periods
47877  * - States of the world
47878  *-------------------------------------------------------------------------------
47879   
47881   
47882  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
47884  *-------------------------------------------------------------------------------
47885  * Geographic dimension and mapping with countries
47886  *-------------------------------------------------------------------------------
47887   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
47890  *-------------------------------------------------------------------------------
47891  * Non-Cooperative Setup
47892  *
47893  * Each region is defined as an individual coalition.
47894  *
47895  *-------------------------------------------------------------------------------
47896   
47898   
47899  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
47901  *-------------------------------------------------------------------------------
47902  * Welfare
47903  *-------------------------------------------------------------------------------
47904   
47906   
47907  equtility_c_china
47908   
47909  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
47912  *-------------------------------------------------------------------------------
47913  * Economy
47914  * - Production and Consumption definition
47915  * - Top-level of the production function
47916  * Options:
47917  * --original_ssp=1 : original SSP population and GDP data
47918  *-------------------------------------------------------------------------------
47919   
47921   
47922  eqk_c_china
47923  eqq_cc_c_china
47924  eqq_fen_c_china
47925  eqq_y_c_china
47926   
47927  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
47930  *-------------------------------------------------------------------------------
47931  * Energy sector
47932  *-------------------------------------------------------------------------------
47933   
47935   
47936  eq_mkt_clearing_oil_c_china
47937  eqcost_pes_c_china
47938  eqcost_ses_c_china
47939  eqk_en_c_china
47940  eqq_ces_el_c_china
47941  eqq_ces_nelgas_c_china
47942  eqq_el2_c_china
47943  eqq_el_c_china
47944  eqq_elff_c_china
47945  eqq_en_c_china
47946  eqq_en_in_c_china
47947  eqq_en_mu_c_china
47948  eqq_en_tree_c_china
47949  eqq_nel_c_china
47950  eqq_nelog_c_china
47951  eqq_fuel_c_china
47952  eqq_elffren_c_china
47953   
47954  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
47957  *-------------------------------------------------------------------------------
47958  * Carbon Emissions
47959  * - Total CO2 emissions and CO2 Fossil fuel and Industry
47960  * - CO2 emission costs
47961  * - GHG permit market
47962  *-------------------------------------------------------------------------------
47963   
47965   
47966  eqq_emi_lim_c_china
47967  eqq_emi_tree_c_china
47968  eqq_emi_co2ffi_c_china
47969   
47970  eqcost_emi_co2_c_china
47971   
47972  eq_mkt_clearing_nip_c_china
47973   
47974  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
47977  *-------------------------------------------------------------------------------
47978  * Research & Development
47979  * Options:
47980  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
47981  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
47982  *-------------------------------------------------------------------------------
47983   
47985   
47986  eqk_rd_c_china
47987  eqspill_coop_c_china
47988  eqspill_lead_c_china
47989  eqspill_foll_c_china
47990  eqmcost_inv_back_c_china
47991  eqmcost_inv_back_lbd_c_china
47992   
47993  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
47996  *-------------------------------------------------------------------------------
47997  * Default Climate Policy Implementation
47998  *
47999  * Options:
48000  *    --policy={bau (default),ctax}
48001  *        Implement a climate policy setting
48002  *  [ --scen= ]
48003  *        Policy variant.
48004  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
48005  *          * XXX for a fixed percentage/yr (e.g. 5) growth
48006  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
48007  *  [ --ctax_year=2020 ]
48008  *        Starting year of the carbon tax
48009  *  [ --ctax_initial=30 ]
48010  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
48011  *
48012  *-------------------------------------------------------------------------------
48014   
48015  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
48017  *-------------------------------------------------------------------------------
48018  * Energy efficiency
48019  *-------------------------------------------------------------------------------
48020   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
48023  *-------------------------------------------------------------------------------
48024  * Hydro Power
48025  *-------------------------------------------------------------------------------
48026   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
48029  *-------------------------------------------------------------------------------
48030  * System Integration:
48031  * - Capacity constraint
48032  * - Flexibility constraint
48033  * - Grid Investment
48034  * - Capacity growth constraint
48035  *-------------------------------------------------------------------------------
48036   
48038   
48039  eqq_elintren_c_china
48040  eqflex_c_china
48041  eqk_en_grid_c_china
48042  eqk_en_grid_to_k_en_c_china
48043  eqfirm_capacity_c_china
48044  eqcap_growth_c_china
48045   
48046  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
48049  *-------------------------------------------------------------------------------
48050  * Nuclear power plants
48051  *-------------------------------------------------------------------------------
48052   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
48055  *-------------------------------------------------------------------------------
48056  * GHG module
48057  * - CH4 FFI + CH4 waste + CH4 open fires
48058  * - N2O FFI + N2O waste + N2O open fires
48059  *-------------------------------------------------------------------------------
48060   
48062   
48063  eqq_emi_waste_c_china
48064  eqq_emi_n2o_ffi_c_china
48065  eqq_emi_ch4_ffi_c_china
48066   
48067  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
48070  *-------------------------------------------------------------------------------
48071  * F-gases
48072  * - LLF
48073  * - SLF
48074  *-------------------------------------------------------------------------------
48075   
48077   
48078  eqq_emi_fgases_c_china
48079   
48080  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
48083  *-------------------------------------------------------------------------------
48084  * Landuse [simplified version of the land-use model]
48085  *-------------------------------------------------------------------------------
48086   
48088   
48089  eq_wbio_c_china
48090  eqcost_pes_wbio_c_china
48091   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
48094  *-------------------------------------------------------------------------------
48095  * Bioenergy power plant
48096  *-------------------------------------------------------------------------------
48097   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
48100  *-------------------------------------------------------------------------------
48101  * Traditional Biofuels
48102  * - Requires the precedence of mod_landuse
48103  *-------------------------------------------------------------------------------
48104   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
48107  *-------------------------------------------------------------------------------
48108  * Advanced biofuel
48109  * - Require the precedence of mod_landuse
48110  *-------------------------------------------------------------------------------
48111   
48113   
48114  eqq_en_lim_advbiofuel_c_china
48115  eqmcost_fuel_advbiofuel_c_china
48116   
48117  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
48120  *-------------------------------------------------------------------------------
48121  * Carbon Capture and Sequestration
48122  *-------------------------------------------------------------------------------
48123   
48125   
48126  eqq_emi_ccs_c_china
48127  eqcost_emi_sinks_c_china
48128  eq_stor_ccs_cum_c_china
48129  eq_emi_stor_ccs_c_china
48130  eq_emi_leak_ccs_c_china
48131   
48132  *-------------------------------------------------------------------------------
48134   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
48136  *-------------------------------------------------------------------------------
48137  * Coal for non-electric sectors
48138  * - Coke Plants
48139  * - Industrial and Commercial combined-heat-and-power (CHP)
48140  * - Others
48141  *-------------------------------------------------------------------------------
48142   
48144   
48145  eqcost_en_nelcoal_c_china
48146  eqq_ncoalabat_monotone_c_china
48147  eqq_en_nelcoalccs_max_c_china
48148   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
48151  *-------------------------------------------------------------------------------
48152  * Wind energy module
48153  * - onshore and offshore
48154  *-------------------------------------------------------------------------------
48155   
48157   
48158  eqq_en_mu_windon_c_china
48159  eqq_en_mu_windoff_c_china
48160  eqk_en_windon_c_china
48161  eqk_en_windoff_c_china
48162  eqq_en_windon_sum_c_china
48163  eqq_en_windoff_sum_c_china
48164  eqk_en_windon_sum_c_china
48165  eqk_en_windoff_sum_c_china
48166  eqi_en_windon_sum_c_china
48167  eqi_en_windoff_sum_c_china
48168   
48170   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
48172  *-------------------------------------------------------------------------------
48173  * Solar Powerplants (PV and CSP) to the electrical system
48174  *-------------------------------------------------------------------------------
48175   
48176  *-------------------------------------------------------------------------------
48178   
48179  eqq_en_mu_pv_c_china
48180  eqq_en_mu_csp_c_china
48181  eqk_en_pv_c_china
48182  eqk_en_csp_c_china
48183  eqq_en_pv_sum_c_china
48184  eqq_en_csp_sum_c_china
48185  eqk_en_pv_sum_c_china
48186  eqk_en_csp_sum_c_china
48187  eqi_en_pv_sum_c_china
48188  eqi_en_csp_sum_c_china
48189  eqk_en_solar_comp_c_china
48190   
48191  *-------------------------------------------------------------------------------
48193   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
48195  *-------------------------------------------------------------------------------
48196  * Technology development scenarios
48197  *-------------------------------------------------------------------------------
48198   
48200   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
48202  *-------------------------------------------------------------------------------
48203  * Oil Extraction
48204  * Options:
48205  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
48206  *-------------------------------------------------------------------------------
48207   
48209   
48210  eqoilcap_c_china
48211  eqoilprod_c_china
48212  eqq_out_oil_c_china
48213  eqcum_oil_c_china
48214  eqcost_oil_c_china
48215  eqi_oil_c_china
48216  eqi_out_oil_c_china
48217  eqq_emi_out_oil_c_china
48218   
48219  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
48222  *-------------------------------------------------------------------------------
48223  * Uranium Resources
48224  *-------------------------------------------------------------------------------
48225   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
48228  *-------------------------------------------------------------------------------
48229  * Gas Resources
48230  *-------------------------------------------------------------------------------
48231   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
48234  *-------------------------------------------------------------------------------
48235  * Coal Resources
48236  *-------------------------------------------------------------------------------
48237   
48239   
48240   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
48242  *-------------------------------------------------------------------------------
48243  * Climate
48244  *
48245  * Represents the climate
48246  * - based on the DICE model equations
48247  * - Radiative forcing for non CO2 ghgs
48248  * - parameters calibrated to reproduce MAGICC6.4 default response
48249  *
48250  *  Options:
48251  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
48252  * - $setglobal cooperate_on_climate {'YES','NO'}
48253  * - 'YES'(default): Countries within a coalition act in cooperation
48254  *   'NO': Countries within a coalition act individually
48255  *
48256  *-------------------------------------------------------------------------------
48257   
48259   
48261   
48262  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
48265  *-------------------------------------------------------------------------------
48266  * Long-run Damages from Climate Change
48267  * - Economic impacts
48268  * - Adaptation
48269  *-------------------------------------------------------------------------------
48270   
48272   
48274   
48275  *-------------------------------------------------------------------------------
48277   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
48279  *-------------------------------------------------------------------------------
48280  * Light-duty Vehicles for Personal Transport
48281  *-------------------------------------------------------------------------------
48282   
48284   
48285  eqnb_veh_c_china
48286  eqq_en_veh_c_china
48287  eqq_el_edv_c_china
48288  eqmcost_inv_hybrid_c_china
48289  eqmcost_inv_plghybrid_c_china
48290  eqmcost_inv_edv_c_china
48291  *** newcode
48292  eqq_inv_red_ban_c_china
48293  ***
48294  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
48297  *-------------------------------------------------------------------------------
48298  * Road Freight Transport
48299  *-------------------------------------------------------------------------------
48301   
48302  eqnb_frtveh_c_china
48303  eqq_en_frtveh_c_china
48304  eqq_el_frtedv_c_china
48305  eqmcost_inv_hbd_stfr_c_china
48306  eqmcost_inv_plghbd_stfr_c_china
48307  eqmcost_inv_edv_stfr_c_china
48308   
48309  *-------------------------------------------------------------------------------
48311   
48312   
48313   
48314   
48315   
48316   
48317  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
48319  *-------------------------------------------------------------------------------
48320  * Traditional Biomass
48321  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
48322  *  - require post_process to be launch before
48323  *-------------------------------------------------------------------------------
48324   
48326   
48327  * Optional modules
48328   
48329  * Policy modules
48330   
48331  * Calibration
48334   
48339   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
48341  *-------------------------------------------------------------------------------
48342  * Call modules by order
48343  *-------------------------------------------------------------------------------
48347   
48348  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
48350  *-------------------------------------------------------------------------------
48351  * Algorithm
48352  *-------------------------------------------------------------------------------
48353   
48355   
48356  eqobj_c_europe
48357   
48358  *-------------------------------------------------------------------------------
48360   
48361  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
48363  *-------------------------------------------------------------------------------
48364  * Time
48365  * - Temporal structure
48366  * - Fixed time periods
48367  * - States of the world
48368  *-------------------------------------------------------------------------------
48369   
48371   
48372  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
48374  *-------------------------------------------------------------------------------
48375  * Geographic dimension and mapping with countries
48376  *-------------------------------------------------------------------------------
48377   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
48380  *-------------------------------------------------------------------------------
48381  * Non-Cooperative Setup
48382  *
48383  * Each region is defined as an individual coalition.
48384  *
48385  *-------------------------------------------------------------------------------
48386   
48388   
48389  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
48391  *-------------------------------------------------------------------------------
48392  * Welfare
48393  *-------------------------------------------------------------------------------
48394   
48396   
48397  equtility_c_europe
48398   
48399  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
48402  *-------------------------------------------------------------------------------
48403  * Economy
48404  * - Production and Consumption definition
48405  * - Top-level of the production function
48406  * Options:
48407  * --original_ssp=1 : original SSP population and GDP data
48408  *-------------------------------------------------------------------------------
48409   
48411   
48412  eqk_c_europe
48413  eqq_cc_c_europe
48414  eqq_fen_c_europe
48415  eqq_y_c_europe
48416   
48417  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
48420  *-------------------------------------------------------------------------------
48421  * Energy sector
48422  *-------------------------------------------------------------------------------
48423   
48425   
48426  eq_mkt_clearing_oil_c_europe
48427  eqcost_pes_c_europe
48428  eqcost_ses_c_europe
48429  eqk_en_c_europe
48430  eqq_ces_el_c_europe
48431  eqq_ces_nelgas_c_europe
48432  eqq_el2_c_europe
48433  eqq_el_c_europe
48434  eqq_elff_c_europe
48435  eqq_en_c_europe
48436  eqq_en_in_c_europe
48437  eqq_en_mu_c_europe
48438  eqq_en_tree_c_europe
48439  eqq_nel_c_europe
48440  eqq_nelog_c_europe
48441  eqq_fuel_c_europe
48442  eqq_elffren_c_europe
48443   
48444  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
48447  *-------------------------------------------------------------------------------
48448  * Carbon Emissions
48449  * - Total CO2 emissions and CO2 Fossil fuel and Industry
48450  * - CO2 emission costs
48451  * - GHG permit market
48452  *-------------------------------------------------------------------------------
48453   
48455   
48456  eqq_emi_lim_c_europe
48457  eqq_emi_tree_c_europe
48458  eqq_emi_co2ffi_c_europe
48459   
48460  eqcost_emi_co2_c_europe
48461   
48462  eq_mkt_clearing_nip_c_europe
48463   
48464  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
48467  *-------------------------------------------------------------------------------
48468  * Research & Development
48469  * Options:
48470  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
48471  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
48472  *-------------------------------------------------------------------------------
48473   
48475   
48476  eqk_rd_c_europe
48477  eqspill_coop_c_europe
48478  eqspill_lead_c_europe
48479  eqspill_foll_c_europe
48480  eqmcost_inv_back_c_europe
48481  eqmcost_inv_back_lbd_c_europe
48482   
48483  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
48486  *-------------------------------------------------------------------------------
48487  * Default Climate Policy Implementation
48488  *
48489  * Options:
48490  *    --policy={bau (default),ctax}
48491  *        Implement a climate policy setting
48492  *  [ --scen= ]
48493  *        Policy variant.
48494  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
48495  *          * XXX for a fixed percentage/yr (e.g. 5) growth
48496  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
48497  *  [ --ctax_year=2020 ]
48498  *        Starting year of the carbon tax
48499  *  [ --ctax_initial=30 ]
48500  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
48501  *
48502  *-------------------------------------------------------------------------------
48504   
48505  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
48507  *-------------------------------------------------------------------------------
48508  * Energy efficiency
48509  *-------------------------------------------------------------------------------
48510   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
48513  *-------------------------------------------------------------------------------
48514  * Hydro Power
48515  *-------------------------------------------------------------------------------
48516   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
48519  *-------------------------------------------------------------------------------
48520  * System Integration:
48521  * - Capacity constraint
48522  * - Flexibility constraint
48523  * - Grid Investment
48524  * - Capacity growth constraint
48525  *-------------------------------------------------------------------------------
48526   
48528   
48529  eqq_elintren_c_europe
48530  eqflex_c_europe
48531  eqk_en_grid_c_europe
48532  eqk_en_grid_to_k_en_c_europe
48533  eqfirm_capacity_c_europe
48534  eqcap_growth_c_europe
48535   
48536  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
48539  *-------------------------------------------------------------------------------
48540  * Nuclear power plants
48541  *-------------------------------------------------------------------------------
48542   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
48545  *-------------------------------------------------------------------------------
48546  * GHG module
48547  * - CH4 FFI + CH4 waste + CH4 open fires
48548  * - N2O FFI + N2O waste + N2O open fires
48549  *-------------------------------------------------------------------------------
48550   
48552   
48553  eqq_emi_waste_c_europe
48554  eqq_emi_n2o_ffi_c_europe
48555  eqq_emi_ch4_ffi_c_europe
48556   
48557  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
48560  *-------------------------------------------------------------------------------
48561  * F-gases
48562  * - LLF
48563  * - SLF
48564  *-------------------------------------------------------------------------------
48565   
48567   
48568  eqq_emi_fgases_c_europe
48569   
48570  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
48573  *-------------------------------------------------------------------------------
48574  * Landuse [simplified version of the land-use model]
48575  *-------------------------------------------------------------------------------
48576   
48578   
48579  eq_wbio_c_europe
48580  eqcost_pes_wbio_c_europe
48581   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
48584  *-------------------------------------------------------------------------------
48585  * Bioenergy power plant
48586  *-------------------------------------------------------------------------------
48587   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
48590  *-------------------------------------------------------------------------------
48591  * Traditional Biofuels
48592  * - Requires the precedence of mod_landuse
48593  *-------------------------------------------------------------------------------
48594   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
48597  *-------------------------------------------------------------------------------
48598  * Advanced biofuel
48599  * - Require the precedence of mod_landuse
48600  *-------------------------------------------------------------------------------
48601   
48603   
48604  eqq_en_lim_advbiofuel_c_europe
48605  eqmcost_fuel_advbiofuel_c_europe
48606   
48607  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
48610  *-------------------------------------------------------------------------------
48611  * Carbon Capture and Sequestration
48612  *-------------------------------------------------------------------------------
48613   
48615   
48616  eqq_emi_ccs_c_europe
48617  eqcost_emi_sinks_c_europe
48618  eq_stor_ccs_cum_c_europe
48619  eq_emi_stor_ccs_c_europe
48620  eq_emi_leak_ccs_c_europe
48621   
48622  *-------------------------------------------------------------------------------
48624   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
48626  *-------------------------------------------------------------------------------
48627  * Coal for non-electric sectors
48628  * - Coke Plants
48629  * - Industrial and Commercial combined-heat-and-power (CHP)
48630  * - Others
48631  *-------------------------------------------------------------------------------
48632   
48634   
48635  eqcost_en_nelcoal_c_europe
48636  eqq_ncoalabat_monotone_c_europe
48637  eqq_en_nelcoalccs_max_c_europe
48638   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
48641  *-------------------------------------------------------------------------------
48642  * Wind energy module
48643  * - onshore and offshore
48644  *-------------------------------------------------------------------------------
48645   
48647   
48648  eqq_en_mu_windon_c_europe
48649  eqq_en_mu_windoff_c_europe
48650  eqk_en_windon_c_europe
48651  eqk_en_windoff_c_europe
48652  eqq_en_windon_sum_c_europe
48653  eqq_en_windoff_sum_c_europe
48654  eqk_en_windon_sum_c_europe
48655  eqk_en_windoff_sum_c_europe
48656  eqi_en_windon_sum_c_europe
48657  eqi_en_windoff_sum_c_europe
48658   
48660   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
48662  *-------------------------------------------------------------------------------
48663  * Solar Powerplants (PV and CSP) to the electrical system
48664  *-------------------------------------------------------------------------------
48665   
48666  *-------------------------------------------------------------------------------
48668   
48669  eqq_en_mu_pv_c_europe
48670  eqq_en_mu_csp_c_europe
48671  eqk_en_pv_c_europe
48672  eqk_en_csp_c_europe
48673  eqq_en_pv_sum_c_europe
48674  eqq_en_csp_sum_c_europe
48675  eqk_en_pv_sum_c_europe
48676  eqk_en_csp_sum_c_europe
48677  eqi_en_pv_sum_c_europe
48678  eqi_en_csp_sum_c_europe
48679  eqk_en_solar_comp_c_europe
48680   
48681  *-------------------------------------------------------------------------------
48683   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
48685  *-------------------------------------------------------------------------------
48686  * Technology development scenarios
48687  *-------------------------------------------------------------------------------
48688   
48690   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
48692  *-------------------------------------------------------------------------------
48693  * Oil Extraction
48694  * Options:
48695  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
48696  *-------------------------------------------------------------------------------
48697   
48699   
48700  eqoilcap_c_europe
48701  eqoilprod_c_europe
48702  eqq_out_oil_c_europe
48703  eqcum_oil_c_europe
48704  eqcost_oil_c_europe
48705  eqi_oil_c_europe
48706  eqi_out_oil_c_europe
48707  eqq_emi_out_oil_c_europe
48708   
48709  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
48712  *-------------------------------------------------------------------------------
48713  * Uranium Resources
48714  *-------------------------------------------------------------------------------
48715   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
48718  *-------------------------------------------------------------------------------
48719  * Gas Resources
48720  *-------------------------------------------------------------------------------
48721   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
48724  *-------------------------------------------------------------------------------
48725  * Coal Resources
48726  *-------------------------------------------------------------------------------
48727   
48729   
48730   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
48732  *-------------------------------------------------------------------------------
48733  * Climate
48734  *
48735  * Represents the climate
48736  * - based on the DICE model equations
48737  * - Radiative forcing for non CO2 ghgs
48738  * - parameters calibrated to reproduce MAGICC6.4 default response
48739  *
48740  *  Options:
48741  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
48742  * - $setglobal cooperate_on_climate {'YES','NO'}
48743  * - 'YES'(default): Countries within a coalition act in cooperation
48744  *   'NO': Countries within a coalition act individually
48745  *
48746  *-------------------------------------------------------------------------------
48747   
48749   
48751   
48752  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
48755  *-------------------------------------------------------------------------------
48756  * Long-run Damages from Climate Change
48757  * - Economic impacts
48758  * - Adaptation
48759  *-------------------------------------------------------------------------------
48760   
48762   
48764   
48765  *-------------------------------------------------------------------------------
48767   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
48769  *-------------------------------------------------------------------------------
48770  * Light-duty Vehicles for Personal Transport
48771  *-------------------------------------------------------------------------------
48772   
48774   
48775  eqnb_veh_c_europe
48776  eqq_en_veh_c_europe
48777  eqq_el_edv_c_europe
48778  eqmcost_inv_hybrid_c_europe
48779  eqmcost_inv_plghybrid_c_europe
48780  eqmcost_inv_edv_c_europe
48781  *** newcode
48782  eqq_inv_red_ban_c_europe
48783  ***
48784  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
48787  *-------------------------------------------------------------------------------
48788  * Road Freight Transport
48789  *-------------------------------------------------------------------------------
48791   
48792  eqnb_frtveh_c_europe
48793  eqq_en_frtveh_c_europe
48794  eqq_el_frtedv_c_europe
48795  eqmcost_inv_hbd_stfr_c_europe
48796  eqmcost_inv_plghbd_stfr_c_europe
48797  eqmcost_inv_edv_stfr_c_europe
48798   
48799  *-------------------------------------------------------------------------------
48801   
48802   
48803   
48804   
48805   
48806   
48807  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
48809  *-------------------------------------------------------------------------------
48810  * Traditional Biomass
48811  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
48812  *  - require post_process to be launch before
48813  *-------------------------------------------------------------------------------
48814   
48816   
48817  * Optional modules
48818   
48819  * Policy modules
48820   
48821  * Calibration
48824   
48829   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
48831  *-------------------------------------------------------------------------------
48832  * Call modules by order
48833  *-------------------------------------------------------------------------------
48837   
48838  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
48840  *-------------------------------------------------------------------------------
48841  * Algorithm
48842  *-------------------------------------------------------------------------------
48843   
48845   
48846  eqobj_c_india
48847   
48848  *-------------------------------------------------------------------------------
48850   
48851  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
48853  *-------------------------------------------------------------------------------
48854  * Time
48855  * - Temporal structure
48856  * - Fixed time periods
48857  * - States of the world
48858  *-------------------------------------------------------------------------------
48859   
48861   
48862  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
48864  *-------------------------------------------------------------------------------
48865  * Geographic dimension and mapping with countries
48866  *-------------------------------------------------------------------------------
48867   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
48870  *-------------------------------------------------------------------------------
48871  * Non-Cooperative Setup
48872  *
48873  * Each region is defined as an individual coalition.
48874  *
48875  *-------------------------------------------------------------------------------
48876   
48878   
48879  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
48881  *-------------------------------------------------------------------------------
48882  * Welfare
48883  *-------------------------------------------------------------------------------
48884   
48886   
48887  equtility_c_india
48888   
48889  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
48892  *-------------------------------------------------------------------------------
48893  * Economy
48894  * - Production and Consumption definition
48895  * - Top-level of the production function
48896  * Options:
48897  * --original_ssp=1 : original SSP population and GDP data
48898  *-------------------------------------------------------------------------------
48899   
48901   
48902  eqk_c_india
48903  eqq_cc_c_india
48904  eqq_fen_c_india
48905  eqq_y_c_india
48906   
48907  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
48910  *-------------------------------------------------------------------------------
48911  * Energy sector
48912  *-------------------------------------------------------------------------------
48913   
48915   
48916  eq_mkt_clearing_oil_c_india
48917  eqcost_pes_c_india
48918  eqcost_ses_c_india
48919  eqk_en_c_india
48920  eqq_ces_el_c_india
48921  eqq_ces_nelgas_c_india
48922  eqq_el2_c_india
48923  eqq_el_c_india
48924  eqq_elff_c_india
48925  eqq_en_c_india
48926  eqq_en_in_c_india
48927  eqq_en_mu_c_india
48928  eqq_en_tree_c_india
48929  eqq_nel_c_india
48930  eqq_nelog_c_india
48931  eqq_fuel_c_india
48932  eqq_elffren_c_india
48933   
48934  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
48937  *-------------------------------------------------------------------------------
48938  * Carbon Emissions
48939  * - Total CO2 emissions and CO2 Fossil fuel and Industry
48940  * - CO2 emission costs
48941  * - GHG permit market
48942  *-------------------------------------------------------------------------------
48943   
48945   
48946  eqq_emi_lim_c_india
48947  eqq_emi_tree_c_india
48948  eqq_emi_co2ffi_c_india
48949   
48950  eqcost_emi_co2_c_india
48951   
48952  eq_mkt_clearing_nip_c_india
48953   
48954  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
48957  *-------------------------------------------------------------------------------
48958  * Research & Development
48959  * Options:
48960  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
48961  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
48962  *-------------------------------------------------------------------------------
48963   
48965   
48966  eqk_rd_c_india
48967  eqspill_coop_c_india
48968  eqspill_lead_c_india
48969  eqspill_foll_c_india
48970  eqmcost_inv_back_c_india
48971  eqmcost_inv_back_lbd_c_india
48972   
48973  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
48976  *-------------------------------------------------------------------------------
48977  * Default Climate Policy Implementation
48978  *
48979  * Options:
48980  *    --policy={bau (default),ctax}
48981  *        Implement a climate policy setting
48982  *  [ --scen= ]
48983  *        Policy variant.
48984  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
48985  *          * XXX for a fixed percentage/yr (e.g. 5) growth
48986  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
48987  *  [ --ctax_year=2020 ]
48988  *        Starting year of the carbon tax
48989  *  [ --ctax_initial=30 ]
48990  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
48991  *
48992  *-------------------------------------------------------------------------------
48994   
48995  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
48997  *-------------------------------------------------------------------------------
48998  * Energy efficiency
48999  *-------------------------------------------------------------------------------
49000   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
49003  *-------------------------------------------------------------------------------
49004  * Hydro Power
49005  *-------------------------------------------------------------------------------
49006   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
49009  *-------------------------------------------------------------------------------
49010  * System Integration:
49011  * - Capacity constraint
49012  * - Flexibility constraint
49013  * - Grid Investment
49014  * - Capacity growth constraint
49015  *-------------------------------------------------------------------------------
49016   
49018   
49019  eqq_elintren_c_india
49020  eqflex_c_india
49021  eqk_en_grid_c_india
49022  eqk_en_grid_to_k_en_c_india
49023  eqfirm_capacity_c_india
49024  eqcap_growth_c_india
49025   
49026  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
49029  *-------------------------------------------------------------------------------
49030  * Nuclear power plants
49031  *-------------------------------------------------------------------------------
49032   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
49035  *-------------------------------------------------------------------------------
49036  * GHG module
49037  * - CH4 FFI + CH4 waste + CH4 open fires
49038  * - N2O FFI + N2O waste + N2O open fires
49039  *-------------------------------------------------------------------------------
49040   
49042   
49043  eqq_emi_waste_c_india
49044  eqq_emi_n2o_ffi_c_india
49045  eqq_emi_ch4_ffi_c_india
49046   
49047  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
49050  *-------------------------------------------------------------------------------
49051  * F-gases
49052  * - LLF
49053  * - SLF
49054  *-------------------------------------------------------------------------------
49055   
49057   
49058  eqq_emi_fgases_c_india
49059   
49060  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
49063  *-------------------------------------------------------------------------------
49064  * Landuse [simplified version of the land-use model]
49065  *-------------------------------------------------------------------------------
49066   
49068   
49069  eq_wbio_c_india
49070  eqcost_pes_wbio_c_india
49071   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
49074  *-------------------------------------------------------------------------------
49075  * Bioenergy power plant
49076  *-------------------------------------------------------------------------------
49077   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
49080  *-------------------------------------------------------------------------------
49081  * Traditional Biofuels
49082  * - Requires the precedence of mod_landuse
49083  *-------------------------------------------------------------------------------
49084   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
49087  *-------------------------------------------------------------------------------
49088  * Advanced biofuel
49089  * - Require the precedence of mod_landuse
49090  *-------------------------------------------------------------------------------
49091   
49093   
49094  eqq_en_lim_advbiofuel_c_india
49095  eqmcost_fuel_advbiofuel_c_india
49096   
49097  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
49100  *-------------------------------------------------------------------------------
49101  * Carbon Capture and Sequestration
49102  *-------------------------------------------------------------------------------
49103   
49105   
49106  eqq_emi_ccs_c_india
49107  eqcost_emi_sinks_c_india
49108  eq_stor_ccs_cum_c_india
49109  eq_emi_stor_ccs_c_india
49110  eq_emi_leak_ccs_c_india
49111   
49112  *-------------------------------------------------------------------------------
49114   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
49116  *-------------------------------------------------------------------------------
49117  * Coal for non-electric sectors
49118  * - Coke Plants
49119  * - Industrial and Commercial combined-heat-and-power (CHP)
49120  * - Others
49121  *-------------------------------------------------------------------------------
49122   
49124   
49125  eqcost_en_nelcoal_c_india
49126  eqq_ncoalabat_monotone_c_india
49127  eqq_en_nelcoalccs_max_c_india
49128   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
49131  *-------------------------------------------------------------------------------
49132  * Wind energy module
49133  * - onshore and offshore
49134  *-------------------------------------------------------------------------------
49135   
49137   
49138  eqq_en_mu_windon_c_india
49139  eqq_en_mu_windoff_c_india
49140  eqk_en_windon_c_india
49141  eqk_en_windoff_c_india
49142  eqq_en_windon_sum_c_india
49143  eqq_en_windoff_sum_c_india
49144  eqk_en_windon_sum_c_india
49145  eqk_en_windoff_sum_c_india
49146  eqi_en_windon_sum_c_india
49147  eqi_en_windoff_sum_c_india
49148   
49150   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
49152  *-------------------------------------------------------------------------------
49153  * Solar Powerplants (PV and CSP) to the electrical system
49154  *-------------------------------------------------------------------------------
49155   
49156  *-------------------------------------------------------------------------------
49158   
49159  eqq_en_mu_pv_c_india
49160  eqq_en_mu_csp_c_india
49161  eqk_en_pv_c_india
49162  eqk_en_csp_c_india
49163  eqq_en_pv_sum_c_india
49164  eqq_en_csp_sum_c_india
49165  eqk_en_pv_sum_c_india
49166  eqk_en_csp_sum_c_india
49167  eqi_en_pv_sum_c_india
49168  eqi_en_csp_sum_c_india
49169  eqk_en_solar_comp_c_india
49170   
49171  *-------------------------------------------------------------------------------
49173   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
49175  *-------------------------------------------------------------------------------
49176  * Technology development scenarios
49177  *-------------------------------------------------------------------------------
49178   
49180   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
49182  *-------------------------------------------------------------------------------
49183  * Oil Extraction
49184  * Options:
49185  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
49186  *-------------------------------------------------------------------------------
49187   
49189   
49190  eqoilcap_c_india
49191  eqoilprod_c_india
49192  eqq_out_oil_c_india
49193  eqcum_oil_c_india
49194  eqcost_oil_c_india
49195  eqi_oil_c_india
49196  eqi_out_oil_c_india
49197  eqq_emi_out_oil_c_india
49198   
49199  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
49202  *-------------------------------------------------------------------------------
49203  * Uranium Resources
49204  *-------------------------------------------------------------------------------
49205   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
49208  *-------------------------------------------------------------------------------
49209  * Gas Resources
49210  *-------------------------------------------------------------------------------
49211   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
49214  *-------------------------------------------------------------------------------
49215  * Coal Resources
49216  *-------------------------------------------------------------------------------
49217   
49219   
49220   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
49222  *-------------------------------------------------------------------------------
49223  * Climate
49224  *
49225  * Represents the climate
49226  * - based on the DICE model equations
49227  * - Radiative forcing for non CO2 ghgs
49228  * - parameters calibrated to reproduce MAGICC6.4 default response
49229  *
49230  *  Options:
49231  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
49232  * - $setglobal cooperate_on_climate {'YES','NO'}
49233  * - 'YES'(default): Countries within a coalition act in cooperation
49234  *   'NO': Countries within a coalition act individually
49235  *
49236  *-------------------------------------------------------------------------------
49237   
49239   
49241   
49242  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
49245  *-------------------------------------------------------------------------------
49246  * Long-run Damages from Climate Change
49247  * - Economic impacts
49248  * - Adaptation
49249  *-------------------------------------------------------------------------------
49250   
49252   
49254   
49255  *-------------------------------------------------------------------------------
49257   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
49259  *-------------------------------------------------------------------------------
49260  * Light-duty Vehicles for Personal Transport
49261  *-------------------------------------------------------------------------------
49262   
49264   
49265  eqnb_veh_c_india
49266  eqq_en_veh_c_india
49267  eqq_el_edv_c_india
49268  eqmcost_inv_hybrid_c_india
49269  eqmcost_inv_plghybrid_c_india
49270  eqmcost_inv_edv_c_india
49271  *** newcode
49272  eqq_inv_red_ban_c_india
49273  ***
49274  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
49277  *-------------------------------------------------------------------------------
49278  * Road Freight Transport
49279  *-------------------------------------------------------------------------------
49281   
49282  eqnb_frtveh_c_india
49283  eqq_en_frtveh_c_india
49284  eqq_el_frtedv_c_india
49285  eqmcost_inv_hbd_stfr_c_india
49286  eqmcost_inv_plghbd_stfr_c_india
49287  eqmcost_inv_edv_stfr_c_india
49288   
49289  *-------------------------------------------------------------------------------
49291   
49292   
49293   
49294   
49295   
49296   
49297  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
49299  *-------------------------------------------------------------------------------
49300  * Traditional Biomass
49301  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
49302  *  - require post_process to be launch before
49303  *-------------------------------------------------------------------------------
49304   
49306   
49307  * Optional modules
49308   
49309  * Policy modules
49310   
49311  * Calibration
49314   
49319   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
49321  *-------------------------------------------------------------------------------
49322  * Call modules by order
49323  *-------------------------------------------------------------------------------
49327   
49328  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
49330  *-------------------------------------------------------------------------------
49331  * Algorithm
49332  *-------------------------------------------------------------------------------
49333   
49335   
49336  eqobj_c_indonesia
49337   
49338  *-------------------------------------------------------------------------------
49340   
49341  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
49343  *-------------------------------------------------------------------------------
49344  * Time
49345  * - Temporal structure
49346  * - Fixed time periods
49347  * - States of the world
49348  *-------------------------------------------------------------------------------
49349   
49351   
49352  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
49354  *-------------------------------------------------------------------------------
49355  * Geographic dimension and mapping with countries
49356  *-------------------------------------------------------------------------------
49357   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
49360  *-------------------------------------------------------------------------------
49361  * Non-Cooperative Setup
49362  *
49363  * Each region is defined as an individual coalition.
49364  *
49365  *-------------------------------------------------------------------------------
49366   
49368   
49369  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
49371  *-------------------------------------------------------------------------------
49372  * Welfare
49373  *-------------------------------------------------------------------------------
49374   
49376   
49377  equtility_c_indonesia
49378   
49379  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
49382  *-------------------------------------------------------------------------------
49383  * Economy
49384  * - Production and Consumption definition
49385  * - Top-level of the production function
49386  * Options:
49387  * --original_ssp=1 : original SSP population and GDP data
49388  *-------------------------------------------------------------------------------
49389   
49391   
49392  eqk_c_indonesia
49393  eqq_cc_c_indonesia
49394  eqq_fen_c_indonesia
49395  eqq_y_c_indonesia
49396   
49397  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
49400  *-------------------------------------------------------------------------------
49401  * Energy sector
49402  *-------------------------------------------------------------------------------
49403   
49405   
49406  eq_mkt_clearing_oil_c_indonesia
49407  eqcost_pes_c_indonesia
49408  eqcost_ses_c_indonesia
49409  eqk_en_c_indonesia
49410  eqq_ces_el_c_indonesia
49411  eqq_ces_nelgas_c_indonesia
49412  eqq_el2_c_indonesia
49413  eqq_el_c_indonesia
49414  eqq_elff_c_indonesia
49415  eqq_en_c_indonesia
49416  eqq_en_in_c_indonesia
49417  eqq_en_mu_c_indonesia
49418  eqq_en_tree_c_indonesia
49419  eqq_nel_c_indonesia
49420  eqq_nelog_c_indonesia
49421  eqq_fuel_c_indonesia
49422  eqq_elffren_c_indonesia
49423   
49424  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
49427  *-------------------------------------------------------------------------------
49428  * Carbon Emissions
49429  * - Total CO2 emissions and CO2 Fossil fuel and Industry
49430  * - CO2 emission costs
49431  * - GHG permit market
49432  *-------------------------------------------------------------------------------
49433   
49435   
49436  eqq_emi_lim_c_indonesia
49437  eqq_emi_tree_c_indonesia
49438  eqq_emi_co2ffi_c_indonesia
49439   
49440  eqcost_emi_co2_c_indonesia
49441   
49442  eq_mkt_clearing_nip_c_indonesia
49443   
49444  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
49447  *-------------------------------------------------------------------------------
49448  * Research & Development
49449  * Options:
49450  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
49451  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
49452  *-------------------------------------------------------------------------------
49453   
49455   
49456  eqk_rd_c_indonesia
49457  eqspill_coop_c_indonesia
49458  eqspill_lead_c_indonesia
49459  eqspill_foll_c_indonesia
49460  eqmcost_inv_back_c_indonesia
49461  eqmcost_inv_back_lbd_c_indonesia
49462   
49463  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
49466  *-------------------------------------------------------------------------------
49467  * Default Climate Policy Implementation
49468  *
49469  * Options:
49470  *    --policy={bau (default),ctax}
49471  *        Implement a climate policy setting
49472  *  [ --scen= ]
49473  *        Policy variant.
49474  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
49475  *          * XXX for a fixed percentage/yr (e.g. 5) growth
49476  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
49477  *  [ --ctax_year=2020 ]
49478  *        Starting year of the carbon tax
49479  *  [ --ctax_initial=30 ]
49480  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
49481  *
49482  *-------------------------------------------------------------------------------
49484   
49485  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
49487  *-------------------------------------------------------------------------------
49488  * Energy efficiency
49489  *-------------------------------------------------------------------------------
49490   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
49493  *-------------------------------------------------------------------------------
49494  * Hydro Power
49495  *-------------------------------------------------------------------------------
49496   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
49499  *-------------------------------------------------------------------------------
49500  * System Integration:
49501  * - Capacity constraint
49502  * - Flexibility constraint
49503  * - Grid Investment
49504  * - Capacity growth constraint
49505  *-------------------------------------------------------------------------------
49506   
49508   
49509  eqq_elintren_c_indonesia
49510  eqflex_c_indonesia
49511  eqk_en_grid_c_indonesia
49512  eqk_en_grid_to_k_en_c_indonesia
49513  eqfirm_capacity_c_indonesia
49514  eqcap_growth_c_indonesia
49515   
49516  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
49519  *-------------------------------------------------------------------------------
49520  * Nuclear power plants
49521  *-------------------------------------------------------------------------------
49522   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
49525  *-------------------------------------------------------------------------------
49526  * GHG module
49527  * - CH4 FFI + CH4 waste + CH4 open fires
49528  * - N2O FFI + N2O waste + N2O open fires
49529  *-------------------------------------------------------------------------------
49530   
49532   
49533  eqq_emi_waste_c_indonesia
49534  eqq_emi_n2o_ffi_c_indonesia
49535  eqq_emi_ch4_ffi_c_indonesia
49536   
49537  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
49540  *-------------------------------------------------------------------------------
49541  * F-gases
49542  * - LLF
49543  * - SLF
49544  *-------------------------------------------------------------------------------
49545   
49547   
49548  eqq_emi_fgases_c_indonesia
49549   
49550  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
49553  *-------------------------------------------------------------------------------
49554  * Landuse [simplified version of the land-use model]
49555  *-------------------------------------------------------------------------------
49556   
49558   
49559  eq_wbio_c_indonesia
49560  eqcost_pes_wbio_c_indonesia
49561   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
49564  *-------------------------------------------------------------------------------
49565  * Bioenergy power plant
49566  *-------------------------------------------------------------------------------
49567   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
49570  *-------------------------------------------------------------------------------
49571  * Traditional Biofuels
49572  * - Requires the precedence of mod_landuse
49573  *-------------------------------------------------------------------------------
49574   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
49577  *-------------------------------------------------------------------------------
49578  * Advanced biofuel
49579  * - Require the precedence of mod_landuse
49580  *-------------------------------------------------------------------------------
49581   
49583   
49584  eqq_en_lim_advbiofuel_c_indonesia
49585  eqmcost_fuel_advbiofuel_c_indonesia
49586   
49587  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
49590  *-------------------------------------------------------------------------------
49591  * Carbon Capture and Sequestration
49592  *-------------------------------------------------------------------------------
49593   
49595   
49596  eqq_emi_ccs_c_indonesia
49597  eqcost_emi_sinks_c_indonesia
49598  eq_stor_ccs_cum_c_indonesia
49599  eq_emi_stor_ccs_c_indonesia
49600  eq_emi_leak_ccs_c_indonesia
49601   
49602  *-------------------------------------------------------------------------------
49604   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
49606  *-------------------------------------------------------------------------------
49607  * Coal for non-electric sectors
49608  * - Coke Plants
49609  * - Industrial and Commercial combined-heat-and-power (CHP)
49610  * - Others
49611  *-------------------------------------------------------------------------------
49612   
49614   
49615  eqcost_en_nelcoal_c_indonesia
49616  eqq_ncoalabat_monotone_c_indonesia
49617  eqq_en_nelcoalccs_max_c_indonesia
49618   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
49621  *-------------------------------------------------------------------------------
49622  * Wind energy module
49623  * - onshore and offshore
49624  *-------------------------------------------------------------------------------
49625   
49627   
49628  eqq_en_mu_windon_c_indonesia
49629  eqq_en_mu_windoff_c_indonesia
49630  eqk_en_windon_c_indonesia
49631  eqk_en_windoff_c_indonesia
49632  eqq_en_windon_sum_c_indonesia
49633  eqq_en_windoff_sum_c_indonesia
49634  eqk_en_windon_sum_c_indonesia
49635  eqk_en_windoff_sum_c_indonesia
49636  eqi_en_windon_sum_c_indonesia
49637  eqi_en_windoff_sum_c_indonesia
49638   
49640   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
49642  *-------------------------------------------------------------------------------
49643  * Solar Powerplants (PV and CSP) to the electrical system
49644  *-------------------------------------------------------------------------------
49645   
49646  *-------------------------------------------------------------------------------
49648   
49649  eqq_en_mu_pv_c_indonesia
49650  eqq_en_mu_csp_c_indonesia
49651  eqk_en_pv_c_indonesia
49652  eqk_en_csp_c_indonesia
49653  eqq_en_pv_sum_c_indonesia
49654  eqq_en_csp_sum_c_indonesia
49655  eqk_en_pv_sum_c_indonesia
49656  eqk_en_csp_sum_c_indonesia
49657  eqi_en_pv_sum_c_indonesia
49658  eqi_en_csp_sum_c_indonesia
49659  eqk_en_solar_comp_c_indonesia
49660   
49661  *-------------------------------------------------------------------------------
49663   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
49665  *-------------------------------------------------------------------------------
49666  * Technology development scenarios
49667  *-------------------------------------------------------------------------------
49668   
49670   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
49672  *-------------------------------------------------------------------------------
49673  * Oil Extraction
49674  * Options:
49675  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
49676  *-------------------------------------------------------------------------------
49677   
49679   
49680  eqoilcap_c_indonesia
49681  eqoilprod_c_indonesia
49682  eqq_out_oil_c_indonesia
49683  eqcum_oil_c_indonesia
49684  eqcost_oil_c_indonesia
49685  eqi_oil_c_indonesia
49686  eqi_out_oil_c_indonesia
49687  eqq_emi_out_oil_c_indonesia
49688   
49689  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
49692  *-------------------------------------------------------------------------------
49693  * Uranium Resources
49694  *-------------------------------------------------------------------------------
49695   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
49698  *-------------------------------------------------------------------------------
49699  * Gas Resources
49700  *-------------------------------------------------------------------------------
49701   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
49704  *-------------------------------------------------------------------------------
49705  * Coal Resources
49706  *-------------------------------------------------------------------------------
49707   
49709   
49710   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
49712  *-------------------------------------------------------------------------------
49713  * Climate
49714  *
49715  * Represents the climate
49716  * - based on the DICE model equations
49717  * - Radiative forcing for non CO2 ghgs
49718  * - parameters calibrated to reproduce MAGICC6.4 default response
49719  *
49720  *  Options:
49721  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
49722  * - $setglobal cooperate_on_climate {'YES','NO'}
49723  * - 'YES'(default): Countries within a coalition act in cooperation
49724  *   'NO': Countries within a coalition act individually
49725  *
49726  *-------------------------------------------------------------------------------
49727   
49729   
49731   
49732  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
49735  *-------------------------------------------------------------------------------
49736  * Long-run Damages from Climate Change
49737  * - Economic impacts
49738  * - Adaptation
49739  *-------------------------------------------------------------------------------
49740   
49742   
49744   
49745  *-------------------------------------------------------------------------------
49747   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
49749  *-------------------------------------------------------------------------------
49750  * Light-duty Vehicles for Personal Transport
49751  *-------------------------------------------------------------------------------
49752   
49754   
49755  eqnb_veh_c_indonesia
49756  eqq_en_veh_c_indonesia
49757  eqq_el_edv_c_indonesia
49758  eqmcost_inv_hybrid_c_indonesia
49759  eqmcost_inv_plghybrid_c_indonesia
49760  eqmcost_inv_edv_c_indonesia
49761  *** newcode
49762  eqq_inv_red_ban_c_indonesia
49763  ***
49764  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
49767  *-------------------------------------------------------------------------------
49768  * Road Freight Transport
49769  *-------------------------------------------------------------------------------
49771   
49772  eqnb_frtveh_c_indonesia
49773  eqq_en_frtveh_c_indonesia
49774  eqq_el_frtedv_c_indonesia
49775  eqmcost_inv_hbd_stfr_c_indonesia
49776  eqmcost_inv_plghbd_stfr_c_indonesia
49777  eqmcost_inv_edv_stfr_c_indonesia
49778   
49779  *-------------------------------------------------------------------------------
49781   
49782   
49783   
49784   
49785   
49786   
49787  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
49789  *-------------------------------------------------------------------------------
49790  * Traditional Biomass
49791  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
49792  *  - require post_process to be launch before
49793  *-------------------------------------------------------------------------------
49794   
49796   
49797  * Optional modules
49798   
49799  * Policy modules
49800   
49801  * Calibration
49804   
49809   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
49811  *-------------------------------------------------------------------------------
49812  * Call modules by order
49813  *-------------------------------------------------------------------------------
49817   
49818  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
49820  *-------------------------------------------------------------------------------
49821  * Algorithm
49822  *-------------------------------------------------------------------------------
49823   
49825   
49826  eqobj_c_jpnkor
49827   
49828  *-------------------------------------------------------------------------------
49830   
49831  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
49833  *-------------------------------------------------------------------------------
49834  * Time
49835  * - Temporal structure
49836  * - Fixed time periods
49837  * - States of the world
49838  *-------------------------------------------------------------------------------
49839   
49841   
49842  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
49844  *-------------------------------------------------------------------------------
49845  * Geographic dimension and mapping with countries
49846  *-------------------------------------------------------------------------------
49847   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
49850  *-------------------------------------------------------------------------------
49851  * Non-Cooperative Setup
49852  *
49853  * Each region is defined as an individual coalition.
49854  *
49855  *-------------------------------------------------------------------------------
49856   
49858   
49859  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
49861  *-------------------------------------------------------------------------------
49862  * Welfare
49863  *-------------------------------------------------------------------------------
49864   
49866   
49867  equtility_c_jpnkor
49868   
49869  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
49872  *-------------------------------------------------------------------------------
49873  * Economy
49874  * - Production and Consumption definition
49875  * - Top-level of the production function
49876  * Options:
49877  * --original_ssp=1 : original SSP population and GDP data
49878  *-------------------------------------------------------------------------------
49879   
49881   
49882  eqk_c_jpnkor
49883  eqq_cc_c_jpnkor
49884  eqq_fen_c_jpnkor
49885  eqq_y_c_jpnkor
49886   
49887  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
49890  *-------------------------------------------------------------------------------
49891  * Energy sector
49892  *-------------------------------------------------------------------------------
49893   
49895   
49896  eq_mkt_clearing_oil_c_jpnkor
49897  eqcost_pes_c_jpnkor
49898  eqcost_ses_c_jpnkor
49899  eqk_en_c_jpnkor
49900  eqq_ces_el_c_jpnkor
49901  eqq_ces_nelgas_c_jpnkor
49902  eqq_el2_c_jpnkor
49903  eqq_el_c_jpnkor
49904  eqq_elff_c_jpnkor
49905  eqq_en_c_jpnkor
49906  eqq_en_in_c_jpnkor
49907  eqq_en_mu_c_jpnkor
49908  eqq_en_tree_c_jpnkor
49909  eqq_nel_c_jpnkor
49910  eqq_nelog_c_jpnkor
49911  eqq_fuel_c_jpnkor
49912  eqq_elffren_c_jpnkor
49913   
49914  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
49917  *-------------------------------------------------------------------------------
49918  * Carbon Emissions
49919  * - Total CO2 emissions and CO2 Fossil fuel and Industry
49920  * - CO2 emission costs
49921  * - GHG permit market
49922  *-------------------------------------------------------------------------------
49923   
49925   
49926  eqq_emi_lim_c_jpnkor
49927  eqq_emi_tree_c_jpnkor
49928  eqq_emi_co2ffi_c_jpnkor
49929   
49930  eqcost_emi_co2_c_jpnkor
49931   
49932  eq_mkt_clearing_nip_c_jpnkor
49933   
49934  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
49937  *-------------------------------------------------------------------------------
49938  * Research & Development
49939  * Options:
49940  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
49941  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
49942  *-------------------------------------------------------------------------------
49943   
49945   
49946  eqk_rd_c_jpnkor
49947  eqspill_coop_c_jpnkor
49948  eqspill_lead_c_jpnkor
49949  eqspill_foll_c_jpnkor
49950  eqmcost_inv_back_c_jpnkor
49951  eqmcost_inv_back_lbd_c_jpnkor
49952   
49953  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
49956  *-------------------------------------------------------------------------------
49957  * Default Climate Policy Implementation
49958  *
49959  * Options:
49960  *    --policy={bau (default),ctax}
49961  *        Implement a climate policy setting
49962  *  [ --scen= ]
49963  *        Policy variant.
49964  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
49965  *          * XXX for a fixed percentage/yr (e.g. 5) growth
49966  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
49967  *  [ --ctax_year=2020 ]
49968  *        Starting year of the carbon tax
49969  *  [ --ctax_initial=30 ]
49970  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
49971  *
49972  *-------------------------------------------------------------------------------
49974   
49975  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
49977  *-------------------------------------------------------------------------------
49978  * Energy efficiency
49979  *-------------------------------------------------------------------------------
49980   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
49983  *-------------------------------------------------------------------------------
49984  * Hydro Power
49985  *-------------------------------------------------------------------------------
49986   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
49989  *-------------------------------------------------------------------------------
49990  * System Integration:
49991  * - Capacity constraint
49992  * - Flexibility constraint
49993  * - Grid Investment
49994  * - Capacity growth constraint
49995  *-------------------------------------------------------------------------------
49996   
49998   
49999  eqq_elintren_c_jpnkor
50000  eqflex_c_jpnkor
50001  eqk_en_grid_c_jpnkor
50002  eqk_en_grid_to_k_en_c_jpnkor
50003  eqfirm_capacity_c_jpnkor
50004  eqcap_growth_c_jpnkor
50005   
50006  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
50009  *-------------------------------------------------------------------------------
50010  * Nuclear power plants
50011  *-------------------------------------------------------------------------------
50012   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
50015  *-------------------------------------------------------------------------------
50016  * GHG module
50017  * - CH4 FFI + CH4 waste + CH4 open fires
50018  * - N2O FFI + N2O waste + N2O open fires
50019  *-------------------------------------------------------------------------------
50020   
50022   
50023  eqq_emi_waste_c_jpnkor
50024  eqq_emi_n2o_ffi_c_jpnkor
50025  eqq_emi_ch4_ffi_c_jpnkor
50026   
50027  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
50030  *-------------------------------------------------------------------------------
50031  * F-gases
50032  * - LLF
50033  * - SLF
50034  *-------------------------------------------------------------------------------
50035   
50037   
50038  eqq_emi_fgases_c_jpnkor
50039   
50040  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
50043  *-------------------------------------------------------------------------------
50044  * Landuse [simplified version of the land-use model]
50045  *-------------------------------------------------------------------------------
50046   
50048   
50049  eq_wbio_c_jpnkor
50050  eqcost_pes_wbio_c_jpnkor
50051   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
50054  *-------------------------------------------------------------------------------
50055  * Bioenergy power plant
50056  *-------------------------------------------------------------------------------
50057   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
50060  *-------------------------------------------------------------------------------
50061  * Traditional Biofuels
50062  * - Requires the precedence of mod_landuse
50063  *-------------------------------------------------------------------------------
50064   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
50067  *-------------------------------------------------------------------------------
50068  * Advanced biofuel
50069  * - Require the precedence of mod_landuse
50070  *-------------------------------------------------------------------------------
50071   
50073   
50074  eqq_en_lim_advbiofuel_c_jpnkor
50075  eqmcost_fuel_advbiofuel_c_jpnkor
50076   
50077  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
50080  *-------------------------------------------------------------------------------
50081  * Carbon Capture and Sequestration
50082  *-------------------------------------------------------------------------------
50083   
50085   
50086  eqq_emi_ccs_c_jpnkor
50087  eqcost_emi_sinks_c_jpnkor
50088  eq_stor_ccs_cum_c_jpnkor
50089  eq_emi_stor_ccs_c_jpnkor
50090  eq_emi_leak_ccs_c_jpnkor
50091   
50092  *-------------------------------------------------------------------------------
50094   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
50096  *-------------------------------------------------------------------------------
50097  * Coal for non-electric sectors
50098  * - Coke Plants
50099  * - Industrial and Commercial combined-heat-and-power (CHP)
50100  * - Others
50101  *-------------------------------------------------------------------------------
50102   
50104   
50105  eqcost_en_nelcoal_c_jpnkor
50106  eqq_ncoalabat_monotone_c_jpnkor
50107  eqq_en_nelcoalccs_max_c_jpnkor
50108   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
50111  *-------------------------------------------------------------------------------
50112  * Wind energy module
50113  * - onshore and offshore
50114  *-------------------------------------------------------------------------------
50115   
50117   
50118  eqq_en_mu_windon_c_jpnkor
50119  eqq_en_mu_windoff_c_jpnkor
50120  eqk_en_windon_c_jpnkor
50121  eqk_en_windoff_c_jpnkor
50122  eqq_en_windon_sum_c_jpnkor
50123  eqq_en_windoff_sum_c_jpnkor
50124  eqk_en_windon_sum_c_jpnkor
50125  eqk_en_windoff_sum_c_jpnkor
50126  eqi_en_windon_sum_c_jpnkor
50127  eqi_en_windoff_sum_c_jpnkor
50128   
50130   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
50132  *-------------------------------------------------------------------------------
50133  * Solar Powerplants (PV and CSP) to the electrical system
50134  *-------------------------------------------------------------------------------
50135   
50136  *-------------------------------------------------------------------------------
50138   
50139  eqq_en_mu_pv_c_jpnkor
50140  eqq_en_mu_csp_c_jpnkor
50141  eqk_en_pv_c_jpnkor
50142  eqk_en_csp_c_jpnkor
50143  eqq_en_pv_sum_c_jpnkor
50144  eqq_en_csp_sum_c_jpnkor
50145  eqk_en_pv_sum_c_jpnkor
50146  eqk_en_csp_sum_c_jpnkor
50147  eqi_en_pv_sum_c_jpnkor
50148  eqi_en_csp_sum_c_jpnkor
50149  eqk_en_solar_comp_c_jpnkor
50150   
50151  *-------------------------------------------------------------------------------
50153   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
50155  *-------------------------------------------------------------------------------
50156  * Technology development scenarios
50157  *-------------------------------------------------------------------------------
50158   
50160   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
50162  *-------------------------------------------------------------------------------
50163  * Oil Extraction
50164  * Options:
50165  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
50166  *-------------------------------------------------------------------------------
50167   
50169   
50170  eqoilcap_c_jpnkor
50171  eqoilprod_c_jpnkor
50172  eqq_out_oil_c_jpnkor
50173  eqcum_oil_c_jpnkor
50174  eqcost_oil_c_jpnkor
50175  eqi_oil_c_jpnkor
50176  eqi_out_oil_c_jpnkor
50177  eqq_emi_out_oil_c_jpnkor
50178   
50179  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
50182  *-------------------------------------------------------------------------------
50183  * Uranium Resources
50184  *-------------------------------------------------------------------------------
50185   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
50188  *-------------------------------------------------------------------------------
50189  * Gas Resources
50190  *-------------------------------------------------------------------------------
50191   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
50194  *-------------------------------------------------------------------------------
50195  * Coal Resources
50196  *-------------------------------------------------------------------------------
50197   
50199   
50200   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
50202  *-------------------------------------------------------------------------------
50203  * Climate
50204  *
50205  * Represents the climate
50206  * - based on the DICE model equations
50207  * - Radiative forcing for non CO2 ghgs
50208  * - parameters calibrated to reproduce MAGICC6.4 default response
50209  *
50210  *  Options:
50211  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
50212  * - $setglobal cooperate_on_climate {'YES','NO'}
50213  * - 'YES'(default): Countries within a coalition act in cooperation
50214  *   'NO': Countries within a coalition act individually
50215  *
50216  *-------------------------------------------------------------------------------
50217   
50219   
50221   
50222  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
50225  *-------------------------------------------------------------------------------
50226  * Long-run Damages from Climate Change
50227  * - Economic impacts
50228  * - Adaptation
50229  *-------------------------------------------------------------------------------
50230   
50232   
50234   
50235  *-------------------------------------------------------------------------------
50237   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
50239  *-------------------------------------------------------------------------------
50240  * Light-duty Vehicles for Personal Transport
50241  *-------------------------------------------------------------------------------
50242   
50244   
50245  eqnb_veh_c_jpnkor
50246  eqq_en_veh_c_jpnkor
50247  eqq_el_edv_c_jpnkor
50248  eqmcost_inv_hybrid_c_jpnkor
50249  eqmcost_inv_plghybrid_c_jpnkor
50250  eqmcost_inv_edv_c_jpnkor
50251  *** newcode
50252  eqq_inv_red_ban_c_jpnkor
50253  ***
50254  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
50257  *-------------------------------------------------------------------------------
50258  * Road Freight Transport
50259  *-------------------------------------------------------------------------------
50261   
50262  eqnb_frtveh_c_jpnkor
50263  eqq_en_frtveh_c_jpnkor
50264  eqq_el_frtedv_c_jpnkor
50265  eqmcost_inv_hbd_stfr_c_jpnkor
50266  eqmcost_inv_plghbd_stfr_c_jpnkor
50267  eqmcost_inv_edv_stfr_c_jpnkor
50268   
50269  *-------------------------------------------------------------------------------
50271   
50272   
50273   
50274   
50275   
50276   
50277  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
50279  *-------------------------------------------------------------------------------
50280  * Traditional Biomass
50281  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
50282  *  - require post_process to be launch before
50283  *-------------------------------------------------------------------------------
50284   
50286   
50287  * Optional modules
50288   
50289  * Policy modules
50290   
50291  * Calibration
50294   
50299   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
50301  *-------------------------------------------------------------------------------
50302  * Call modules by order
50303  *-------------------------------------------------------------------------------
50307   
50308  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
50310  *-------------------------------------------------------------------------------
50311  * Algorithm
50312  *-------------------------------------------------------------------------------
50313   
50315   
50316  eqobj_c_laca
50317   
50318  *-------------------------------------------------------------------------------
50320   
50321  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
50323  *-------------------------------------------------------------------------------
50324  * Time
50325  * - Temporal structure
50326  * - Fixed time periods
50327  * - States of the world
50328  *-------------------------------------------------------------------------------
50329   
50331   
50332  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
50334  *-------------------------------------------------------------------------------
50335  * Geographic dimension and mapping with countries
50336  *-------------------------------------------------------------------------------
50337   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
50340  *-------------------------------------------------------------------------------
50341  * Non-Cooperative Setup
50342  *
50343  * Each region is defined as an individual coalition.
50344  *
50345  *-------------------------------------------------------------------------------
50346   
50348   
50349  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
50351  *-------------------------------------------------------------------------------
50352  * Welfare
50353  *-------------------------------------------------------------------------------
50354   
50356   
50357  equtility_c_laca
50358   
50359  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
50362  *-------------------------------------------------------------------------------
50363  * Economy
50364  * - Production and Consumption definition
50365  * - Top-level of the production function
50366  * Options:
50367  * --original_ssp=1 : original SSP population and GDP data
50368  *-------------------------------------------------------------------------------
50369   
50371   
50372  eqk_c_laca
50373  eqq_cc_c_laca
50374  eqq_fen_c_laca
50375  eqq_y_c_laca
50376   
50377  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
50380  *-------------------------------------------------------------------------------
50381  * Energy sector
50382  *-------------------------------------------------------------------------------
50383   
50385   
50386  eq_mkt_clearing_oil_c_laca
50387  eqcost_pes_c_laca
50388  eqcost_ses_c_laca
50389  eqk_en_c_laca
50390  eqq_ces_el_c_laca
50391  eqq_ces_nelgas_c_laca
50392  eqq_el2_c_laca
50393  eqq_el_c_laca
50394  eqq_elff_c_laca
50395  eqq_en_c_laca
50396  eqq_en_in_c_laca
50397  eqq_en_mu_c_laca
50398  eqq_en_tree_c_laca
50399  eqq_nel_c_laca
50400  eqq_nelog_c_laca
50401  eqq_fuel_c_laca
50402  eqq_elffren_c_laca
50403   
50404  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
50407  *-------------------------------------------------------------------------------
50408  * Carbon Emissions
50409  * - Total CO2 emissions and CO2 Fossil fuel and Industry
50410  * - CO2 emission costs
50411  * - GHG permit market
50412  *-------------------------------------------------------------------------------
50413   
50415   
50416  eqq_emi_lim_c_laca
50417  eqq_emi_tree_c_laca
50418  eqq_emi_co2ffi_c_laca
50419   
50420  eqcost_emi_co2_c_laca
50421   
50422  eq_mkt_clearing_nip_c_laca
50423   
50424  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
50427  *-------------------------------------------------------------------------------
50428  * Research & Development
50429  * Options:
50430  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
50431  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
50432  *-------------------------------------------------------------------------------
50433   
50435   
50436  eqk_rd_c_laca
50437  eqspill_coop_c_laca
50438  eqspill_lead_c_laca
50439  eqspill_foll_c_laca
50440  eqmcost_inv_back_c_laca
50441  eqmcost_inv_back_lbd_c_laca
50442   
50443  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
50446  *-------------------------------------------------------------------------------
50447  * Default Climate Policy Implementation
50448  *
50449  * Options:
50450  *    --policy={bau (default),ctax}
50451  *        Implement a climate policy setting
50452  *  [ --scen= ]
50453  *        Policy variant.
50454  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
50455  *          * XXX for a fixed percentage/yr (e.g. 5) growth
50456  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
50457  *  [ --ctax_year=2020 ]
50458  *        Starting year of the carbon tax
50459  *  [ --ctax_initial=30 ]
50460  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
50461  *
50462  *-------------------------------------------------------------------------------
50464   
50465  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
50467  *-------------------------------------------------------------------------------
50468  * Energy efficiency
50469  *-------------------------------------------------------------------------------
50470   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
50473  *-------------------------------------------------------------------------------
50474  * Hydro Power
50475  *-------------------------------------------------------------------------------
50476   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
50479  *-------------------------------------------------------------------------------
50480  * System Integration:
50481  * - Capacity constraint
50482  * - Flexibility constraint
50483  * - Grid Investment
50484  * - Capacity growth constraint
50485  *-------------------------------------------------------------------------------
50486   
50488   
50489  eqq_elintren_c_laca
50490  eqflex_c_laca
50491  eqk_en_grid_c_laca
50492  eqk_en_grid_to_k_en_c_laca
50493  eqfirm_capacity_c_laca
50494  eqcap_growth_c_laca
50495   
50496  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
50499  *-------------------------------------------------------------------------------
50500  * Nuclear power plants
50501  *-------------------------------------------------------------------------------
50502   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
50505  *-------------------------------------------------------------------------------
50506  * GHG module
50507  * - CH4 FFI + CH4 waste + CH4 open fires
50508  * - N2O FFI + N2O waste + N2O open fires
50509  *-------------------------------------------------------------------------------
50510   
50512   
50513  eqq_emi_waste_c_laca
50514  eqq_emi_n2o_ffi_c_laca
50515  eqq_emi_ch4_ffi_c_laca
50516   
50517  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
50520  *-------------------------------------------------------------------------------
50521  * F-gases
50522  * - LLF
50523  * - SLF
50524  *-------------------------------------------------------------------------------
50525   
50527   
50528  eqq_emi_fgases_c_laca
50529   
50530  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
50533  *-------------------------------------------------------------------------------
50534  * Landuse [simplified version of the land-use model]
50535  *-------------------------------------------------------------------------------
50536   
50538   
50539  eq_wbio_c_laca
50540  eqcost_pes_wbio_c_laca
50541   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
50544  *-------------------------------------------------------------------------------
50545  * Bioenergy power plant
50546  *-------------------------------------------------------------------------------
50547   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
50550  *-------------------------------------------------------------------------------
50551  * Traditional Biofuels
50552  * - Requires the precedence of mod_landuse
50553  *-------------------------------------------------------------------------------
50554   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
50557  *-------------------------------------------------------------------------------
50558  * Advanced biofuel
50559  * - Require the precedence of mod_landuse
50560  *-------------------------------------------------------------------------------
50561   
50563   
50564  eqq_en_lim_advbiofuel_c_laca
50565  eqmcost_fuel_advbiofuel_c_laca
50566   
50567  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
50570  *-------------------------------------------------------------------------------
50571  * Carbon Capture and Sequestration
50572  *-------------------------------------------------------------------------------
50573   
50575   
50576  eqq_emi_ccs_c_laca
50577  eqcost_emi_sinks_c_laca
50578  eq_stor_ccs_cum_c_laca
50579  eq_emi_stor_ccs_c_laca
50580  eq_emi_leak_ccs_c_laca
50581   
50582  *-------------------------------------------------------------------------------
50584   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
50586  *-------------------------------------------------------------------------------
50587  * Coal for non-electric sectors
50588  * - Coke Plants
50589  * - Industrial and Commercial combined-heat-and-power (CHP)
50590  * - Others
50591  *-------------------------------------------------------------------------------
50592   
50594   
50595  eqcost_en_nelcoal_c_laca
50596  eqq_ncoalabat_monotone_c_laca
50597  eqq_en_nelcoalccs_max_c_laca
50598   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
50601  *-------------------------------------------------------------------------------
50602  * Wind energy module
50603  * - onshore and offshore
50604  *-------------------------------------------------------------------------------
50605   
50607   
50608  eqq_en_mu_windon_c_laca
50609  eqq_en_mu_windoff_c_laca
50610  eqk_en_windon_c_laca
50611  eqk_en_windoff_c_laca
50612  eqq_en_windon_sum_c_laca
50613  eqq_en_windoff_sum_c_laca
50614  eqk_en_windon_sum_c_laca
50615  eqk_en_windoff_sum_c_laca
50616  eqi_en_windon_sum_c_laca
50617  eqi_en_windoff_sum_c_laca
50618   
50620   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
50622  *-------------------------------------------------------------------------------
50623  * Solar Powerplants (PV and CSP) to the electrical system
50624  *-------------------------------------------------------------------------------
50625   
50626  *-------------------------------------------------------------------------------
50628   
50629  eqq_en_mu_pv_c_laca
50630  eqq_en_mu_csp_c_laca
50631  eqk_en_pv_c_laca
50632  eqk_en_csp_c_laca
50633  eqq_en_pv_sum_c_laca
50634  eqq_en_csp_sum_c_laca
50635  eqk_en_pv_sum_c_laca
50636  eqk_en_csp_sum_c_laca
50637  eqi_en_pv_sum_c_laca
50638  eqi_en_csp_sum_c_laca
50639  eqk_en_solar_comp_c_laca
50640   
50641  *-------------------------------------------------------------------------------
50643   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
50645  *-------------------------------------------------------------------------------
50646  * Technology development scenarios
50647  *-------------------------------------------------------------------------------
50648   
50650   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
50652  *-------------------------------------------------------------------------------
50653  * Oil Extraction
50654  * Options:
50655  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
50656  *-------------------------------------------------------------------------------
50657   
50659   
50660  eqoilcap_c_laca
50661  eqoilprod_c_laca
50662  eqq_out_oil_c_laca
50663  eqcum_oil_c_laca
50664  eqcost_oil_c_laca
50665  eqi_oil_c_laca
50666  eqi_out_oil_c_laca
50667  eqq_emi_out_oil_c_laca
50668   
50669  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
50672  *-------------------------------------------------------------------------------
50673  * Uranium Resources
50674  *-------------------------------------------------------------------------------
50675   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
50678  *-------------------------------------------------------------------------------
50679  * Gas Resources
50680  *-------------------------------------------------------------------------------
50681   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
50684  *-------------------------------------------------------------------------------
50685  * Coal Resources
50686  *-------------------------------------------------------------------------------
50687   
50689   
50690   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
50692  *-------------------------------------------------------------------------------
50693  * Climate
50694  *
50695  * Represents the climate
50696  * - based on the DICE model equations
50697  * - Radiative forcing for non CO2 ghgs
50698  * - parameters calibrated to reproduce MAGICC6.4 default response
50699  *
50700  *  Options:
50701  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
50702  * - $setglobal cooperate_on_climate {'YES','NO'}
50703  * - 'YES'(default): Countries within a coalition act in cooperation
50704  *   'NO': Countries within a coalition act individually
50705  *
50706  *-------------------------------------------------------------------------------
50707   
50709   
50711   
50712  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
50715  *-------------------------------------------------------------------------------
50716  * Long-run Damages from Climate Change
50717  * - Economic impacts
50718  * - Adaptation
50719  *-------------------------------------------------------------------------------
50720   
50722   
50724   
50725  *-------------------------------------------------------------------------------
50727   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
50729  *-------------------------------------------------------------------------------
50730  * Light-duty Vehicles for Personal Transport
50731  *-------------------------------------------------------------------------------
50732   
50734   
50735  eqnb_veh_c_laca
50736  eqq_en_veh_c_laca
50737  eqq_el_edv_c_laca
50738  eqmcost_inv_hybrid_c_laca
50739  eqmcost_inv_plghybrid_c_laca
50740  eqmcost_inv_edv_c_laca
50741  *** newcode
50742  eqq_inv_red_ban_c_laca
50743  ***
50744  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
50747  *-------------------------------------------------------------------------------
50748  * Road Freight Transport
50749  *-------------------------------------------------------------------------------
50751   
50752  eqnb_frtveh_c_laca
50753  eqq_en_frtveh_c_laca
50754  eqq_el_frtedv_c_laca
50755  eqmcost_inv_hbd_stfr_c_laca
50756  eqmcost_inv_plghbd_stfr_c_laca
50757  eqmcost_inv_edv_stfr_c_laca
50758   
50759  *-------------------------------------------------------------------------------
50761   
50762   
50763   
50764   
50765   
50766   
50767  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
50769  *-------------------------------------------------------------------------------
50770  * Traditional Biomass
50771  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
50772  *  - require post_process to be launch before
50773  *-------------------------------------------------------------------------------
50774   
50776   
50777  * Optional modules
50778   
50779  * Policy modules
50780   
50781  * Calibration
50784   
50789   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
50791  *-------------------------------------------------------------------------------
50792  * Call modules by order
50793  *-------------------------------------------------------------------------------
50797   
50798  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
50800  *-------------------------------------------------------------------------------
50801  * Algorithm
50802  *-------------------------------------------------------------------------------
50803   
50805   
50806  eqobj_c_mena
50807   
50808  *-------------------------------------------------------------------------------
50810   
50811  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
50813  *-------------------------------------------------------------------------------
50814  * Time
50815  * - Temporal structure
50816  * - Fixed time periods
50817  * - States of the world
50818  *-------------------------------------------------------------------------------
50819   
50821   
50822  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
50824  *-------------------------------------------------------------------------------
50825  * Geographic dimension and mapping with countries
50826  *-------------------------------------------------------------------------------
50827   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
50830  *-------------------------------------------------------------------------------
50831  * Non-Cooperative Setup
50832  *
50833  * Each region is defined as an individual coalition.
50834  *
50835  *-------------------------------------------------------------------------------
50836   
50838   
50839  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
50841  *-------------------------------------------------------------------------------
50842  * Welfare
50843  *-------------------------------------------------------------------------------
50844   
50846   
50847  equtility_c_mena
50848   
50849  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
50852  *-------------------------------------------------------------------------------
50853  * Economy
50854  * - Production and Consumption definition
50855  * - Top-level of the production function
50856  * Options:
50857  * --original_ssp=1 : original SSP population and GDP data
50858  *-------------------------------------------------------------------------------
50859   
50861   
50862  eqk_c_mena
50863  eqq_cc_c_mena
50864  eqq_fen_c_mena
50865  eqq_y_c_mena
50866   
50867  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
50870  *-------------------------------------------------------------------------------
50871  * Energy sector
50872  *-------------------------------------------------------------------------------
50873   
50875   
50876  eq_mkt_clearing_oil_c_mena
50877  eqcost_pes_c_mena
50878  eqcost_ses_c_mena
50879  eqk_en_c_mena
50880  eqq_ces_el_c_mena
50881  eqq_ces_nelgas_c_mena
50882  eqq_el2_c_mena
50883  eqq_el_c_mena
50884  eqq_elff_c_mena
50885  eqq_en_c_mena
50886  eqq_en_in_c_mena
50887  eqq_en_mu_c_mena
50888  eqq_en_tree_c_mena
50889  eqq_nel_c_mena
50890  eqq_nelog_c_mena
50891  eqq_fuel_c_mena
50892  eqq_elffren_c_mena
50893   
50894  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
50897  *-------------------------------------------------------------------------------
50898  * Carbon Emissions
50899  * - Total CO2 emissions and CO2 Fossil fuel and Industry
50900  * - CO2 emission costs
50901  * - GHG permit market
50902  *-------------------------------------------------------------------------------
50903   
50905   
50906  eqq_emi_lim_c_mena
50907  eqq_emi_tree_c_mena
50908  eqq_emi_co2ffi_c_mena
50909   
50910  eqcost_emi_co2_c_mena
50911   
50912  eq_mkt_clearing_nip_c_mena
50913   
50914  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
50917  *-------------------------------------------------------------------------------
50918  * Research & Development
50919  * Options:
50920  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
50921  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
50922  *-------------------------------------------------------------------------------
50923   
50925   
50926  eqk_rd_c_mena
50927  eqspill_coop_c_mena
50928  eqspill_lead_c_mena
50929  eqspill_foll_c_mena
50930  eqmcost_inv_back_c_mena
50931  eqmcost_inv_back_lbd_c_mena
50932   
50933  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
50936  *-------------------------------------------------------------------------------
50937  * Default Climate Policy Implementation
50938  *
50939  * Options:
50940  *    --policy={bau (default),ctax}
50941  *        Implement a climate policy setting
50942  *  [ --scen= ]
50943  *        Policy variant.
50944  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
50945  *          * XXX for a fixed percentage/yr (e.g. 5) growth
50946  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
50947  *  [ --ctax_year=2020 ]
50948  *        Starting year of the carbon tax
50949  *  [ --ctax_initial=30 ]
50950  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
50951  *
50952  *-------------------------------------------------------------------------------
50954   
50955  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
50957  *-------------------------------------------------------------------------------
50958  * Energy efficiency
50959  *-------------------------------------------------------------------------------
50960   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
50963  *-------------------------------------------------------------------------------
50964  * Hydro Power
50965  *-------------------------------------------------------------------------------
50966   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
50969  *-------------------------------------------------------------------------------
50970  * System Integration:
50971  * - Capacity constraint
50972  * - Flexibility constraint
50973  * - Grid Investment
50974  * - Capacity growth constraint
50975  *-------------------------------------------------------------------------------
50976   
50978   
50979  eqq_elintren_c_mena
50980  eqflex_c_mena
50981  eqk_en_grid_c_mena
50982  eqk_en_grid_to_k_en_c_mena
50983  eqfirm_capacity_c_mena
50984  eqcap_growth_c_mena
50985   
50986  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
50989  *-------------------------------------------------------------------------------
50990  * Nuclear power plants
50991  *-------------------------------------------------------------------------------
50992   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
50995  *-------------------------------------------------------------------------------
50996  * GHG module
50997  * - CH4 FFI + CH4 waste + CH4 open fires
50998  * - N2O FFI + N2O waste + N2O open fires
50999  *-------------------------------------------------------------------------------
51000   
51002   
51003  eqq_emi_waste_c_mena
51004  eqq_emi_n2o_ffi_c_mena
51005  eqq_emi_ch4_ffi_c_mena
51006   
51007  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
51010  *-------------------------------------------------------------------------------
51011  * F-gases
51012  * - LLF
51013  * - SLF
51014  *-------------------------------------------------------------------------------
51015   
51017   
51018  eqq_emi_fgases_c_mena
51019   
51020  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
51023  *-------------------------------------------------------------------------------
51024  * Landuse [simplified version of the land-use model]
51025  *-------------------------------------------------------------------------------
51026   
51028   
51029  eq_wbio_c_mena
51030  eqcost_pes_wbio_c_mena
51031   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
51034  *-------------------------------------------------------------------------------
51035  * Bioenergy power plant
51036  *-------------------------------------------------------------------------------
51037   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
51040  *-------------------------------------------------------------------------------
51041  * Traditional Biofuels
51042  * - Requires the precedence of mod_landuse
51043  *-------------------------------------------------------------------------------
51044   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
51047  *-------------------------------------------------------------------------------
51048  * Advanced biofuel
51049  * - Require the precedence of mod_landuse
51050  *-------------------------------------------------------------------------------
51051   
51053   
51054  eqq_en_lim_advbiofuel_c_mena
51055  eqmcost_fuel_advbiofuel_c_mena
51056   
51057  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
51060  *-------------------------------------------------------------------------------
51061  * Carbon Capture and Sequestration
51062  *-------------------------------------------------------------------------------
51063   
51065   
51066  eqq_emi_ccs_c_mena
51067  eqcost_emi_sinks_c_mena
51068  eq_stor_ccs_cum_c_mena
51069  eq_emi_stor_ccs_c_mena
51070  eq_emi_leak_ccs_c_mena
51071   
51072  *-------------------------------------------------------------------------------
51074   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
51076  *-------------------------------------------------------------------------------
51077  * Coal for non-electric sectors
51078  * - Coke Plants
51079  * - Industrial and Commercial combined-heat-and-power (CHP)
51080  * - Others
51081  *-------------------------------------------------------------------------------
51082   
51084   
51085  eqcost_en_nelcoal_c_mena
51086  eqq_ncoalabat_monotone_c_mena
51087  eqq_en_nelcoalccs_max_c_mena
51088   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
51091  *-------------------------------------------------------------------------------
51092  * Wind energy module
51093  * - onshore and offshore
51094  *-------------------------------------------------------------------------------
51095   
51097   
51098  eqq_en_mu_windon_c_mena
51099  eqq_en_mu_windoff_c_mena
51100  eqk_en_windon_c_mena
51101  eqk_en_windoff_c_mena
51102  eqq_en_windon_sum_c_mena
51103  eqq_en_windoff_sum_c_mena
51104  eqk_en_windon_sum_c_mena
51105  eqk_en_windoff_sum_c_mena
51106  eqi_en_windon_sum_c_mena
51107  eqi_en_windoff_sum_c_mena
51108   
51110   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
51112  *-------------------------------------------------------------------------------
51113  * Solar Powerplants (PV and CSP) to the electrical system
51114  *-------------------------------------------------------------------------------
51115   
51116  *-------------------------------------------------------------------------------
51118   
51119  eqq_en_mu_pv_c_mena
51120  eqq_en_mu_csp_c_mena
51121  eqk_en_pv_c_mena
51122  eqk_en_csp_c_mena
51123  eqq_en_pv_sum_c_mena
51124  eqq_en_csp_sum_c_mena
51125  eqk_en_pv_sum_c_mena
51126  eqk_en_csp_sum_c_mena
51127  eqi_en_pv_sum_c_mena
51128  eqi_en_csp_sum_c_mena
51129  eqk_en_solar_comp_c_mena
51130   
51131  *-------------------------------------------------------------------------------
51133   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
51135  *-------------------------------------------------------------------------------
51136  * Technology development scenarios
51137  *-------------------------------------------------------------------------------
51138   
51140   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
51142  *-------------------------------------------------------------------------------
51143  * Oil Extraction
51144  * Options:
51145  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
51146  *-------------------------------------------------------------------------------
51147   
51149   
51150  eqoilcap_c_mena
51151  eqoilprod_c_mena
51152  eqq_out_oil_c_mena
51153  eqcum_oil_c_mena
51154  eqcost_oil_c_mena
51155  eqi_oil_c_mena
51156  eqi_out_oil_c_mena
51157  eqq_emi_out_oil_c_mena
51158   
51159  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
51162  *-------------------------------------------------------------------------------
51163  * Uranium Resources
51164  *-------------------------------------------------------------------------------
51165   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
51168  *-------------------------------------------------------------------------------
51169  * Gas Resources
51170  *-------------------------------------------------------------------------------
51171   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
51174  *-------------------------------------------------------------------------------
51175  * Coal Resources
51176  *-------------------------------------------------------------------------------
51177   
51179   
51180   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
51182  *-------------------------------------------------------------------------------
51183  * Climate
51184  *
51185  * Represents the climate
51186  * - based on the DICE model equations
51187  * - Radiative forcing for non CO2 ghgs
51188  * - parameters calibrated to reproduce MAGICC6.4 default response
51189  *
51190  *  Options:
51191  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
51192  * - $setglobal cooperate_on_climate {'YES','NO'}
51193  * - 'YES'(default): Countries within a coalition act in cooperation
51194  *   'NO': Countries within a coalition act individually
51195  *
51196  *-------------------------------------------------------------------------------
51197   
51199   
51201   
51202  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
51205  *-------------------------------------------------------------------------------
51206  * Long-run Damages from Climate Change
51207  * - Economic impacts
51208  * - Adaptation
51209  *-------------------------------------------------------------------------------
51210   
51212   
51214   
51215  *-------------------------------------------------------------------------------
51217   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
51219  *-------------------------------------------------------------------------------
51220  * Light-duty Vehicles for Personal Transport
51221  *-------------------------------------------------------------------------------
51222   
51224   
51225  eqnb_veh_c_mena
51226  eqq_en_veh_c_mena
51227  eqq_el_edv_c_mena
51228  eqmcost_inv_hybrid_c_mena
51229  eqmcost_inv_plghybrid_c_mena
51230  eqmcost_inv_edv_c_mena
51231  *** newcode
51232  eqq_inv_red_ban_c_mena
51233  ***
51234  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
51237  *-------------------------------------------------------------------------------
51238  * Road Freight Transport
51239  *-------------------------------------------------------------------------------
51241   
51242  eqnb_frtveh_c_mena
51243  eqq_en_frtveh_c_mena
51244  eqq_el_frtedv_c_mena
51245  eqmcost_inv_hbd_stfr_c_mena
51246  eqmcost_inv_plghbd_stfr_c_mena
51247  eqmcost_inv_edv_stfr_c_mena
51248   
51249  *-------------------------------------------------------------------------------
51251   
51252   
51253   
51254   
51255   
51256   
51257  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
51259  *-------------------------------------------------------------------------------
51260  * Traditional Biomass
51261  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
51262  *  - require post_process to be launch before
51263  *-------------------------------------------------------------------------------
51264   
51266   
51267  * Optional modules
51268   
51269  * Policy modules
51270   
51271  * Calibration
51274   
51279   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
51281  *-------------------------------------------------------------------------------
51282  * Call modules by order
51283  *-------------------------------------------------------------------------------
51287   
51288  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
51290  *-------------------------------------------------------------------------------
51291  * Algorithm
51292  *-------------------------------------------------------------------------------
51293   
51295   
51296  eqobj_c_mexico
51297   
51298  *-------------------------------------------------------------------------------
51300   
51301  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
51303  *-------------------------------------------------------------------------------
51304  * Time
51305  * - Temporal structure
51306  * - Fixed time periods
51307  * - States of the world
51308  *-------------------------------------------------------------------------------
51309   
51311   
51312  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
51314  *-------------------------------------------------------------------------------
51315  * Geographic dimension and mapping with countries
51316  *-------------------------------------------------------------------------------
51317   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
51320  *-------------------------------------------------------------------------------
51321  * Non-Cooperative Setup
51322  *
51323  * Each region is defined as an individual coalition.
51324  *
51325  *-------------------------------------------------------------------------------
51326   
51328   
51329  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
51331  *-------------------------------------------------------------------------------
51332  * Welfare
51333  *-------------------------------------------------------------------------------
51334   
51336   
51337  equtility_c_mexico
51338   
51339  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
51342  *-------------------------------------------------------------------------------
51343  * Economy
51344  * - Production and Consumption definition
51345  * - Top-level of the production function
51346  * Options:
51347  * --original_ssp=1 : original SSP population and GDP data
51348  *-------------------------------------------------------------------------------
51349   
51351   
51352  eqk_c_mexico
51353  eqq_cc_c_mexico
51354  eqq_fen_c_mexico
51355  eqq_y_c_mexico
51356   
51357  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
51360  *-------------------------------------------------------------------------------
51361  * Energy sector
51362  *-------------------------------------------------------------------------------
51363   
51365   
51366  eq_mkt_clearing_oil_c_mexico
51367  eqcost_pes_c_mexico
51368  eqcost_ses_c_mexico
51369  eqk_en_c_mexico
51370  eqq_ces_el_c_mexico
51371  eqq_ces_nelgas_c_mexico
51372  eqq_el2_c_mexico
51373  eqq_el_c_mexico
51374  eqq_elff_c_mexico
51375  eqq_en_c_mexico
51376  eqq_en_in_c_mexico
51377  eqq_en_mu_c_mexico
51378  eqq_en_tree_c_mexico
51379  eqq_nel_c_mexico
51380  eqq_nelog_c_mexico
51381  eqq_fuel_c_mexico
51382  eqq_elffren_c_mexico
51383   
51384  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
51387  *-------------------------------------------------------------------------------
51388  * Carbon Emissions
51389  * - Total CO2 emissions and CO2 Fossil fuel and Industry
51390  * - CO2 emission costs
51391  * - GHG permit market
51392  *-------------------------------------------------------------------------------
51393   
51395   
51396  eqq_emi_lim_c_mexico
51397  eqq_emi_tree_c_mexico
51398  eqq_emi_co2ffi_c_mexico
51399   
51400  eqcost_emi_co2_c_mexico
51401   
51402  eq_mkt_clearing_nip_c_mexico
51403   
51404  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
51407  *-------------------------------------------------------------------------------
51408  * Research & Development
51409  * Options:
51410  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
51411  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
51412  *-------------------------------------------------------------------------------
51413   
51415   
51416  eqk_rd_c_mexico
51417  eqspill_coop_c_mexico
51418  eqspill_lead_c_mexico
51419  eqspill_foll_c_mexico
51420  eqmcost_inv_back_c_mexico
51421  eqmcost_inv_back_lbd_c_mexico
51422   
51423  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
51426  *-------------------------------------------------------------------------------
51427  * Default Climate Policy Implementation
51428  *
51429  * Options:
51430  *    --policy={bau (default),ctax}
51431  *        Implement a climate policy setting
51432  *  [ --scen= ]
51433  *        Policy variant.
51434  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
51435  *          * XXX for a fixed percentage/yr (e.g. 5) growth
51436  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
51437  *  [ --ctax_year=2020 ]
51438  *        Starting year of the carbon tax
51439  *  [ --ctax_initial=30 ]
51440  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
51441  *
51442  *-------------------------------------------------------------------------------
51444   
51445  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
51447  *-------------------------------------------------------------------------------
51448  * Energy efficiency
51449  *-------------------------------------------------------------------------------
51450   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
51453  *-------------------------------------------------------------------------------
51454  * Hydro Power
51455  *-------------------------------------------------------------------------------
51456   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
51459  *-------------------------------------------------------------------------------
51460  * System Integration:
51461  * - Capacity constraint
51462  * - Flexibility constraint
51463  * - Grid Investment
51464  * - Capacity growth constraint
51465  *-------------------------------------------------------------------------------
51466   
51468   
51469  eqq_elintren_c_mexico
51470  eqflex_c_mexico
51471  eqk_en_grid_c_mexico
51472  eqk_en_grid_to_k_en_c_mexico
51473  eqfirm_capacity_c_mexico
51474  eqcap_growth_c_mexico
51475   
51476  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
51479  *-------------------------------------------------------------------------------
51480  * Nuclear power plants
51481  *-------------------------------------------------------------------------------
51482   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
51485  *-------------------------------------------------------------------------------
51486  * GHG module
51487  * - CH4 FFI + CH4 waste + CH4 open fires
51488  * - N2O FFI + N2O waste + N2O open fires
51489  *-------------------------------------------------------------------------------
51490   
51492   
51493  eqq_emi_waste_c_mexico
51494  eqq_emi_n2o_ffi_c_mexico
51495  eqq_emi_ch4_ffi_c_mexico
51496   
51497  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
51500  *-------------------------------------------------------------------------------
51501  * F-gases
51502  * - LLF
51503  * - SLF
51504  *-------------------------------------------------------------------------------
51505   
51507   
51508  eqq_emi_fgases_c_mexico
51509   
51510  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
51513  *-------------------------------------------------------------------------------
51514  * Landuse [simplified version of the land-use model]
51515  *-------------------------------------------------------------------------------
51516   
51518   
51519  eq_wbio_c_mexico
51520  eqcost_pes_wbio_c_mexico
51521   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
51524  *-------------------------------------------------------------------------------
51525  * Bioenergy power plant
51526  *-------------------------------------------------------------------------------
51527   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
51530  *-------------------------------------------------------------------------------
51531  * Traditional Biofuels
51532  * - Requires the precedence of mod_landuse
51533  *-------------------------------------------------------------------------------
51534   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
51537  *-------------------------------------------------------------------------------
51538  * Advanced biofuel
51539  * - Require the precedence of mod_landuse
51540  *-------------------------------------------------------------------------------
51541   
51543   
51544  eqq_en_lim_advbiofuel_c_mexico
51545  eqmcost_fuel_advbiofuel_c_mexico
51546   
51547  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
51550  *-------------------------------------------------------------------------------
51551  * Carbon Capture and Sequestration
51552  *-------------------------------------------------------------------------------
51553   
51555   
51556  eqq_emi_ccs_c_mexico
51557  eqcost_emi_sinks_c_mexico
51558  eq_stor_ccs_cum_c_mexico
51559  eq_emi_stor_ccs_c_mexico
51560  eq_emi_leak_ccs_c_mexico
51561   
51562  *-------------------------------------------------------------------------------
51564   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
51566  *-------------------------------------------------------------------------------
51567  * Coal for non-electric sectors
51568  * - Coke Plants
51569  * - Industrial and Commercial combined-heat-and-power (CHP)
51570  * - Others
51571  *-------------------------------------------------------------------------------
51572   
51574   
51575  eqcost_en_nelcoal_c_mexico
51576  eqq_ncoalabat_monotone_c_mexico
51577  eqq_en_nelcoalccs_max_c_mexico
51578   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
51581  *-------------------------------------------------------------------------------
51582  * Wind energy module
51583  * - onshore and offshore
51584  *-------------------------------------------------------------------------------
51585   
51587   
51588  eqq_en_mu_windon_c_mexico
51589  eqq_en_mu_windoff_c_mexico
51590  eqk_en_windon_c_mexico
51591  eqk_en_windoff_c_mexico
51592  eqq_en_windon_sum_c_mexico
51593  eqq_en_windoff_sum_c_mexico
51594  eqk_en_windon_sum_c_mexico
51595  eqk_en_windoff_sum_c_mexico
51596  eqi_en_windon_sum_c_mexico
51597  eqi_en_windoff_sum_c_mexico
51598   
51600   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
51602  *-------------------------------------------------------------------------------
51603  * Solar Powerplants (PV and CSP) to the electrical system
51604  *-------------------------------------------------------------------------------
51605   
51606  *-------------------------------------------------------------------------------
51608   
51609  eqq_en_mu_pv_c_mexico
51610  eqq_en_mu_csp_c_mexico
51611  eqk_en_pv_c_mexico
51612  eqk_en_csp_c_mexico
51613  eqq_en_pv_sum_c_mexico
51614  eqq_en_csp_sum_c_mexico
51615  eqk_en_pv_sum_c_mexico
51616  eqk_en_csp_sum_c_mexico
51617  eqi_en_pv_sum_c_mexico
51618  eqi_en_csp_sum_c_mexico
51619  eqk_en_solar_comp_c_mexico
51620   
51621  *-------------------------------------------------------------------------------
51623   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
51625  *-------------------------------------------------------------------------------
51626  * Technology development scenarios
51627  *-------------------------------------------------------------------------------
51628   
51630   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
51632  *-------------------------------------------------------------------------------
51633  * Oil Extraction
51634  * Options:
51635  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
51636  *-------------------------------------------------------------------------------
51637   
51639   
51640  eqoilcap_c_mexico
51641  eqoilprod_c_mexico
51642  eqq_out_oil_c_mexico
51643  eqcum_oil_c_mexico
51644  eqcost_oil_c_mexico
51645  eqi_oil_c_mexico
51646  eqi_out_oil_c_mexico
51647  eqq_emi_out_oil_c_mexico
51648   
51649  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
51652  *-------------------------------------------------------------------------------
51653  * Uranium Resources
51654  *-------------------------------------------------------------------------------
51655   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
51658  *-------------------------------------------------------------------------------
51659  * Gas Resources
51660  *-------------------------------------------------------------------------------
51661   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
51664  *-------------------------------------------------------------------------------
51665  * Coal Resources
51666  *-------------------------------------------------------------------------------
51667   
51669   
51670   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
51672  *-------------------------------------------------------------------------------
51673  * Climate
51674  *
51675  * Represents the climate
51676  * - based on the DICE model equations
51677  * - Radiative forcing for non CO2 ghgs
51678  * - parameters calibrated to reproduce MAGICC6.4 default response
51679  *
51680  *  Options:
51681  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
51682  * - $setglobal cooperate_on_climate {'YES','NO'}
51683  * - 'YES'(default): Countries within a coalition act in cooperation
51684  *   'NO': Countries within a coalition act individually
51685  *
51686  *-------------------------------------------------------------------------------
51687   
51689   
51691   
51692  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
51695  *-------------------------------------------------------------------------------
51696  * Long-run Damages from Climate Change
51697  * - Economic impacts
51698  * - Adaptation
51699  *-------------------------------------------------------------------------------
51700   
51702   
51704   
51705  *-------------------------------------------------------------------------------
51707   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
51709  *-------------------------------------------------------------------------------
51710  * Light-duty Vehicles for Personal Transport
51711  *-------------------------------------------------------------------------------
51712   
51714   
51715  eqnb_veh_c_mexico
51716  eqq_en_veh_c_mexico
51717  eqq_el_edv_c_mexico
51718  eqmcost_inv_hybrid_c_mexico
51719  eqmcost_inv_plghybrid_c_mexico
51720  eqmcost_inv_edv_c_mexico
51721  *** newcode
51722  eqq_inv_red_ban_c_mexico
51723  ***
51724  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
51727  *-------------------------------------------------------------------------------
51728  * Road Freight Transport
51729  *-------------------------------------------------------------------------------
51731   
51732  eqnb_frtveh_c_mexico
51733  eqq_en_frtveh_c_mexico
51734  eqq_el_frtedv_c_mexico
51735  eqmcost_inv_hbd_stfr_c_mexico
51736  eqmcost_inv_plghbd_stfr_c_mexico
51737  eqmcost_inv_edv_stfr_c_mexico
51738   
51739  *-------------------------------------------------------------------------------
51741   
51742   
51743   
51744   
51745   
51746   
51747  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
51749  *-------------------------------------------------------------------------------
51750  * Traditional Biomass
51751  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
51752  *  - require post_process to be launch before
51753  *-------------------------------------------------------------------------------
51754   
51756   
51757  * Optional modules
51758   
51759  * Policy modules
51760   
51761  * Calibration
51764   
51769   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
51771  *-------------------------------------------------------------------------------
51772  * Call modules by order
51773  *-------------------------------------------------------------------------------
51777   
51778  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
51780  *-------------------------------------------------------------------------------
51781  * Algorithm
51782  *-------------------------------------------------------------------------------
51783   
51785   
51786  eqobj_c_oceania
51787   
51788  *-------------------------------------------------------------------------------
51790   
51791  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
51793  *-------------------------------------------------------------------------------
51794  * Time
51795  * - Temporal structure
51796  * - Fixed time periods
51797  * - States of the world
51798  *-------------------------------------------------------------------------------
51799   
51801   
51802  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
51804  *-------------------------------------------------------------------------------
51805  * Geographic dimension and mapping with countries
51806  *-------------------------------------------------------------------------------
51807   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
51810  *-------------------------------------------------------------------------------
51811  * Non-Cooperative Setup
51812  *
51813  * Each region is defined as an individual coalition.
51814  *
51815  *-------------------------------------------------------------------------------
51816   
51818   
51819  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
51821  *-------------------------------------------------------------------------------
51822  * Welfare
51823  *-------------------------------------------------------------------------------
51824   
51826   
51827  equtility_c_oceania
51828   
51829  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
51832  *-------------------------------------------------------------------------------
51833  * Economy
51834  * - Production and Consumption definition
51835  * - Top-level of the production function
51836  * Options:
51837  * --original_ssp=1 : original SSP population and GDP data
51838  *-------------------------------------------------------------------------------
51839   
51841   
51842  eqk_c_oceania
51843  eqq_cc_c_oceania
51844  eqq_fen_c_oceania
51845  eqq_y_c_oceania
51846   
51847  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
51850  *-------------------------------------------------------------------------------
51851  * Energy sector
51852  *-------------------------------------------------------------------------------
51853   
51855   
51856  eq_mkt_clearing_oil_c_oceania
51857  eqcost_pes_c_oceania
51858  eqcost_ses_c_oceania
51859  eqk_en_c_oceania
51860  eqq_ces_el_c_oceania
51861  eqq_ces_nelgas_c_oceania
51862  eqq_el2_c_oceania
51863  eqq_el_c_oceania
51864  eqq_elff_c_oceania
51865  eqq_en_c_oceania
51866  eqq_en_in_c_oceania
51867  eqq_en_mu_c_oceania
51868  eqq_en_tree_c_oceania
51869  eqq_nel_c_oceania
51870  eqq_nelog_c_oceania
51871  eqq_fuel_c_oceania
51872  eqq_elffren_c_oceania
51873   
51874  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
51877  *-------------------------------------------------------------------------------
51878  * Carbon Emissions
51879  * - Total CO2 emissions and CO2 Fossil fuel and Industry
51880  * - CO2 emission costs
51881  * - GHG permit market
51882  *-------------------------------------------------------------------------------
51883   
51885   
51886  eqq_emi_lim_c_oceania
51887  eqq_emi_tree_c_oceania
51888  eqq_emi_co2ffi_c_oceania
51889   
51890  eqcost_emi_co2_c_oceania
51891   
51892  eq_mkt_clearing_nip_c_oceania
51893   
51894  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
51897  *-------------------------------------------------------------------------------
51898  * Research & Development
51899  * Options:
51900  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
51901  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
51902  *-------------------------------------------------------------------------------
51903   
51905   
51906  eqk_rd_c_oceania
51907  eqspill_coop_c_oceania
51908  eqspill_lead_c_oceania
51909  eqspill_foll_c_oceania
51910  eqmcost_inv_back_c_oceania
51911  eqmcost_inv_back_lbd_c_oceania
51912   
51913  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
51916  *-------------------------------------------------------------------------------
51917  * Default Climate Policy Implementation
51918  *
51919  * Options:
51920  *    --policy={bau (default),ctax}
51921  *        Implement a climate policy setting
51922  *  [ --scen= ]
51923  *        Policy variant.
51924  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
51925  *          * XXX for a fixed percentage/yr (e.g. 5) growth
51926  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
51927  *  [ --ctax_year=2020 ]
51928  *        Starting year of the carbon tax
51929  *  [ --ctax_initial=30 ]
51930  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
51931  *
51932  *-------------------------------------------------------------------------------
51934   
51935  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
51937  *-------------------------------------------------------------------------------
51938  * Energy efficiency
51939  *-------------------------------------------------------------------------------
51940   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
51943  *-------------------------------------------------------------------------------
51944  * Hydro Power
51945  *-------------------------------------------------------------------------------
51946   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
51949  *-------------------------------------------------------------------------------
51950  * System Integration:
51951  * - Capacity constraint
51952  * - Flexibility constraint
51953  * - Grid Investment
51954  * - Capacity growth constraint
51955  *-------------------------------------------------------------------------------
51956   
51958   
51959  eqq_elintren_c_oceania
51960  eqflex_c_oceania
51961  eqk_en_grid_c_oceania
51962  eqk_en_grid_to_k_en_c_oceania
51963  eqfirm_capacity_c_oceania
51964  eqcap_growth_c_oceania
51965   
51966  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
51969  *-------------------------------------------------------------------------------
51970  * Nuclear power plants
51971  *-------------------------------------------------------------------------------
51972   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
51975  *-------------------------------------------------------------------------------
51976  * GHG module
51977  * - CH4 FFI + CH4 waste + CH4 open fires
51978  * - N2O FFI + N2O waste + N2O open fires
51979  *-------------------------------------------------------------------------------
51980   
51982   
51983  eqq_emi_waste_c_oceania
51984  eqq_emi_n2o_ffi_c_oceania
51985  eqq_emi_ch4_ffi_c_oceania
51986   
51987  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
51990  *-------------------------------------------------------------------------------
51991  * F-gases
51992  * - LLF
51993  * - SLF
51994  *-------------------------------------------------------------------------------
51995   
51997   
51998  eqq_emi_fgases_c_oceania
51999   
52000  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
52003  *-------------------------------------------------------------------------------
52004  * Landuse [simplified version of the land-use model]
52005  *-------------------------------------------------------------------------------
52006   
52008   
52009  eq_wbio_c_oceania
52010  eqcost_pes_wbio_c_oceania
52011   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
52014  *-------------------------------------------------------------------------------
52015  * Bioenergy power plant
52016  *-------------------------------------------------------------------------------
52017   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
52020  *-------------------------------------------------------------------------------
52021  * Traditional Biofuels
52022  * - Requires the precedence of mod_landuse
52023  *-------------------------------------------------------------------------------
52024   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
52027  *-------------------------------------------------------------------------------
52028  * Advanced biofuel
52029  * - Require the precedence of mod_landuse
52030  *-------------------------------------------------------------------------------
52031   
52033   
52034  eqq_en_lim_advbiofuel_c_oceania
52035  eqmcost_fuel_advbiofuel_c_oceania
52036   
52037  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
52040  *-------------------------------------------------------------------------------
52041  * Carbon Capture and Sequestration
52042  *-------------------------------------------------------------------------------
52043   
52045   
52046  eqq_emi_ccs_c_oceania
52047  eqcost_emi_sinks_c_oceania
52048  eq_stor_ccs_cum_c_oceania
52049  eq_emi_stor_ccs_c_oceania
52050  eq_emi_leak_ccs_c_oceania
52051   
52052  *-------------------------------------------------------------------------------
52054   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
52056  *-------------------------------------------------------------------------------
52057  * Coal for non-electric sectors
52058  * - Coke Plants
52059  * - Industrial and Commercial combined-heat-and-power (CHP)
52060  * - Others
52061  *-------------------------------------------------------------------------------
52062   
52064   
52065  eqcost_en_nelcoal_c_oceania
52066  eqq_ncoalabat_monotone_c_oceania
52067  eqq_en_nelcoalccs_max_c_oceania
52068   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
52071  *-------------------------------------------------------------------------------
52072  * Wind energy module
52073  * - onshore and offshore
52074  *-------------------------------------------------------------------------------
52075   
52077   
52078  eqq_en_mu_windon_c_oceania
52079  eqq_en_mu_windoff_c_oceania
52080  eqk_en_windon_c_oceania
52081  eqk_en_windoff_c_oceania
52082  eqq_en_windon_sum_c_oceania
52083  eqq_en_windoff_sum_c_oceania
52084  eqk_en_windon_sum_c_oceania
52085  eqk_en_windoff_sum_c_oceania
52086  eqi_en_windon_sum_c_oceania
52087  eqi_en_windoff_sum_c_oceania
52088   
52090   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
52092  *-------------------------------------------------------------------------------
52093  * Solar Powerplants (PV and CSP) to the electrical system
52094  *-------------------------------------------------------------------------------
52095   
52096  *-------------------------------------------------------------------------------
52098   
52099  eqq_en_mu_pv_c_oceania
52100  eqq_en_mu_csp_c_oceania
52101  eqk_en_pv_c_oceania
52102  eqk_en_csp_c_oceania
52103  eqq_en_pv_sum_c_oceania
52104  eqq_en_csp_sum_c_oceania
52105  eqk_en_pv_sum_c_oceania
52106  eqk_en_csp_sum_c_oceania
52107  eqi_en_pv_sum_c_oceania
52108  eqi_en_csp_sum_c_oceania
52109  eqk_en_solar_comp_c_oceania
52110   
52111  *-------------------------------------------------------------------------------
52113   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
52115  *-------------------------------------------------------------------------------
52116  * Technology development scenarios
52117  *-------------------------------------------------------------------------------
52118   
52120   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
52122  *-------------------------------------------------------------------------------
52123  * Oil Extraction
52124  * Options:
52125  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
52126  *-------------------------------------------------------------------------------
52127   
52129   
52130  eqoilcap_c_oceania
52131  eqoilprod_c_oceania
52132  eqq_out_oil_c_oceania
52133  eqcum_oil_c_oceania
52134  eqcost_oil_c_oceania
52135  eqi_oil_c_oceania
52136  eqi_out_oil_c_oceania
52137  eqq_emi_out_oil_c_oceania
52138   
52139  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
52142  *-------------------------------------------------------------------------------
52143  * Uranium Resources
52144  *-------------------------------------------------------------------------------
52145   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
52148  *-------------------------------------------------------------------------------
52149  * Gas Resources
52150  *-------------------------------------------------------------------------------
52151   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
52154  *-------------------------------------------------------------------------------
52155  * Coal Resources
52156  *-------------------------------------------------------------------------------
52157   
52159   
52160   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
52162  *-------------------------------------------------------------------------------
52163  * Climate
52164  *
52165  * Represents the climate
52166  * - based on the DICE model equations
52167  * - Radiative forcing for non CO2 ghgs
52168  * - parameters calibrated to reproduce MAGICC6.4 default response
52169  *
52170  *  Options:
52171  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
52172  * - $setglobal cooperate_on_climate {'YES','NO'}
52173  * - 'YES'(default): Countries within a coalition act in cooperation
52174  *   'NO': Countries within a coalition act individually
52175  *
52176  *-------------------------------------------------------------------------------
52177   
52179   
52181   
52182  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
52185  *-------------------------------------------------------------------------------
52186  * Long-run Damages from Climate Change
52187  * - Economic impacts
52188  * - Adaptation
52189  *-------------------------------------------------------------------------------
52190   
52192   
52194   
52195  *-------------------------------------------------------------------------------
52197   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
52199  *-------------------------------------------------------------------------------
52200  * Light-duty Vehicles for Personal Transport
52201  *-------------------------------------------------------------------------------
52202   
52204   
52205  eqnb_veh_c_oceania
52206  eqq_en_veh_c_oceania
52207  eqq_el_edv_c_oceania
52208  eqmcost_inv_hybrid_c_oceania
52209  eqmcost_inv_plghybrid_c_oceania
52210  eqmcost_inv_edv_c_oceania
52211  *** newcode
52212  eqq_inv_red_ban_c_oceania
52213  ***
52214  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
52217  *-------------------------------------------------------------------------------
52218  * Road Freight Transport
52219  *-------------------------------------------------------------------------------
52221   
52222  eqnb_frtveh_c_oceania
52223  eqq_en_frtveh_c_oceania
52224  eqq_el_frtedv_c_oceania
52225  eqmcost_inv_hbd_stfr_c_oceania
52226  eqmcost_inv_plghbd_stfr_c_oceania
52227  eqmcost_inv_edv_stfr_c_oceania
52228   
52229  *-------------------------------------------------------------------------------
52231   
52232   
52233   
52234   
52235   
52236   
52237  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
52239  *-------------------------------------------------------------------------------
52240  * Traditional Biomass
52241  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
52242  *  - require post_process to be launch before
52243  *-------------------------------------------------------------------------------
52244   
52246   
52247  * Optional modules
52248   
52249  * Policy modules
52250   
52251  * Calibration
52254   
52259   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
52261  *-------------------------------------------------------------------------------
52262  * Call modules by order
52263  *-------------------------------------------------------------------------------
52267   
52268  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
52270  *-------------------------------------------------------------------------------
52271  * Algorithm
52272  *-------------------------------------------------------------------------------
52273   
52275   
52276  eqobj_c_sasia
52277   
52278  *-------------------------------------------------------------------------------
52280   
52281  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
52283  *-------------------------------------------------------------------------------
52284  * Time
52285  * - Temporal structure
52286  * - Fixed time periods
52287  * - States of the world
52288  *-------------------------------------------------------------------------------
52289   
52291   
52292  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
52294  *-------------------------------------------------------------------------------
52295  * Geographic dimension and mapping with countries
52296  *-------------------------------------------------------------------------------
52297   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
52300  *-------------------------------------------------------------------------------
52301  * Non-Cooperative Setup
52302  *
52303  * Each region is defined as an individual coalition.
52304  *
52305  *-------------------------------------------------------------------------------
52306   
52308   
52309  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
52311  *-------------------------------------------------------------------------------
52312  * Welfare
52313  *-------------------------------------------------------------------------------
52314   
52316   
52317  equtility_c_sasia
52318   
52319  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
52322  *-------------------------------------------------------------------------------
52323  * Economy
52324  * - Production and Consumption definition
52325  * - Top-level of the production function
52326  * Options:
52327  * --original_ssp=1 : original SSP population and GDP data
52328  *-------------------------------------------------------------------------------
52329   
52331   
52332  eqk_c_sasia
52333  eqq_cc_c_sasia
52334  eqq_fen_c_sasia
52335  eqq_y_c_sasia
52336   
52337  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
52340  *-------------------------------------------------------------------------------
52341  * Energy sector
52342  *-------------------------------------------------------------------------------
52343   
52345   
52346  eq_mkt_clearing_oil_c_sasia
52347  eqcost_pes_c_sasia
52348  eqcost_ses_c_sasia
52349  eqk_en_c_sasia
52350  eqq_ces_el_c_sasia
52351  eqq_ces_nelgas_c_sasia
52352  eqq_el2_c_sasia
52353  eqq_el_c_sasia
52354  eqq_elff_c_sasia
52355  eqq_en_c_sasia
52356  eqq_en_in_c_sasia
52357  eqq_en_mu_c_sasia
52358  eqq_en_tree_c_sasia
52359  eqq_nel_c_sasia
52360  eqq_nelog_c_sasia
52361  eqq_fuel_c_sasia
52362  eqq_elffren_c_sasia
52363   
52364  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
52367  *-------------------------------------------------------------------------------
52368  * Carbon Emissions
52369  * - Total CO2 emissions and CO2 Fossil fuel and Industry
52370  * - CO2 emission costs
52371  * - GHG permit market
52372  *-------------------------------------------------------------------------------
52373   
52375   
52376  eqq_emi_lim_c_sasia
52377  eqq_emi_tree_c_sasia
52378  eqq_emi_co2ffi_c_sasia
52379   
52380  eqcost_emi_co2_c_sasia
52381   
52382  eq_mkt_clearing_nip_c_sasia
52383   
52384  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
52387  *-------------------------------------------------------------------------------
52388  * Research & Development
52389  * Options:
52390  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
52391  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
52392  *-------------------------------------------------------------------------------
52393   
52395   
52396  eqk_rd_c_sasia
52397  eqspill_coop_c_sasia
52398  eqspill_lead_c_sasia
52399  eqspill_foll_c_sasia
52400  eqmcost_inv_back_c_sasia
52401  eqmcost_inv_back_lbd_c_sasia
52402   
52403  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
52406  *-------------------------------------------------------------------------------
52407  * Default Climate Policy Implementation
52408  *
52409  * Options:
52410  *    --policy={bau (default),ctax}
52411  *        Implement a climate policy setting
52412  *  [ --scen= ]
52413  *        Policy variant.
52414  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
52415  *          * XXX for a fixed percentage/yr (e.g. 5) growth
52416  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
52417  *  [ --ctax_year=2020 ]
52418  *        Starting year of the carbon tax
52419  *  [ --ctax_initial=30 ]
52420  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
52421  *
52422  *-------------------------------------------------------------------------------
52424   
52425  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
52427  *-------------------------------------------------------------------------------
52428  * Energy efficiency
52429  *-------------------------------------------------------------------------------
52430   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
52433  *-------------------------------------------------------------------------------
52434  * Hydro Power
52435  *-------------------------------------------------------------------------------
52436   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
52439  *-------------------------------------------------------------------------------
52440  * System Integration:
52441  * - Capacity constraint
52442  * - Flexibility constraint
52443  * - Grid Investment
52444  * - Capacity growth constraint
52445  *-------------------------------------------------------------------------------
52446   
52448   
52449  eqq_elintren_c_sasia
52450  eqflex_c_sasia
52451  eqk_en_grid_c_sasia
52452  eqk_en_grid_to_k_en_c_sasia
52453  eqfirm_capacity_c_sasia
52454  eqcap_growth_c_sasia
52455   
52456  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
52459  *-------------------------------------------------------------------------------
52460  * Nuclear power plants
52461  *-------------------------------------------------------------------------------
52462   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
52465  *-------------------------------------------------------------------------------
52466  * GHG module
52467  * - CH4 FFI + CH4 waste + CH4 open fires
52468  * - N2O FFI + N2O waste + N2O open fires
52469  *-------------------------------------------------------------------------------
52470   
52472   
52473  eqq_emi_waste_c_sasia
52474  eqq_emi_n2o_ffi_c_sasia
52475  eqq_emi_ch4_ffi_c_sasia
52476   
52477  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
52480  *-------------------------------------------------------------------------------
52481  * F-gases
52482  * - LLF
52483  * - SLF
52484  *-------------------------------------------------------------------------------
52485   
52487   
52488  eqq_emi_fgases_c_sasia
52489   
52490  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
52493  *-------------------------------------------------------------------------------
52494  * Landuse [simplified version of the land-use model]
52495  *-------------------------------------------------------------------------------
52496   
52498   
52499  eq_wbio_c_sasia
52500  eqcost_pes_wbio_c_sasia
52501   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
52504  *-------------------------------------------------------------------------------
52505  * Bioenergy power plant
52506  *-------------------------------------------------------------------------------
52507   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
52510  *-------------------------------------------------------------------------------
52511  * Traditional Biofuels
52512  * - Requires the precedence of mod_landuse
52513  *-------------------------------------------------------------------------------
52514   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
52517  *-------------------------------------------------------------------------------
52518  * Advanced biofuel
52519  * - Require the precedence of mod_landuse
52520  *-------------------------------------------------------------------------------
52521   
52523   
52524  eqq_en_lim_advbiofuel_c_sasia
52525  eqmcost_fuel_advbiofuel_c_sasia
52526   
52527  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
52530  *-------------------------------------------------------------------------------
52531  * Carbon Capture and Sequestration
52532  *-------------------------------------------------------------------------------
52533   
52535   
52536  eqq_emi_ccs_c_sasia
52537  eqcost_emi_sinks_c_sasia
52538  eq_stor_ccs_cum_c_sasia
52539  eq_emi_stor_ccs_c_sasia
52540  eq_emi_leak_ccs_c_sasia
52541   
52542  *-------------------------------------------------------------------------------
52544   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
52546  *-------------------------------------------------------------------------------
52547  * Coal for non-electric sectors
52548  * - Coke Plants
52549  * - Industrial and Commercial combined-heat-and-power (CHP)
52550  * - Others
52551  *-------------------------------------------------------------------------------
52552   
52554   
52555  eqcost_en_nelcoal_c_sasia
52556  eqq_ncoalabat_monotone_c_sasia
52557  eqq_en_nelcoalccs_max_c_sasia
52558   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
52561  *-------------------------------------------------------------------------------
52562  * Wind energy module
52563  * - onshore and offshore
52564  *-------------------------------------------------------------------------------
52565   
52567   
52568  eqq_en_mu_windon_c_sasia
52569  eqq_en_mu_windoff_c_sasia
52570  eqk_en_windon_c_sasia
52571  eqk_en_windoff_c_sasia
52572  eqq_en_windon_sum_c_sasia
52573  eqq_en_windoff_sum_c_sasia
52574  eqk_en_windon_sum_c_sasia
52575  eqk_en_windoff_sum_c_sasia
52576  eqi_en_windon_sum_c_sasia
52577  eqi_en_windoff_sum_c_sasia
52578   
52580   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
52582  *-------------------------------------------------------------------------------
52583  * Solar Powerplants (PV and CSP) to the electrical system
52584  *-------------------------------------------------------------------------------
52585   
52586  *-------------------------------------------------------------------------------
52588   
52589  eqq_en_mu_pv_c_sasia
52590  eqq_en_mu_csp_c_sasia
52591  eqk_en_pv_c_sasia
52592  eqk_en_csp_c_sasia
52593  eqq_en_pv_sum_c_sasia
52594  eqq_en_csp_sum_c_sasia
52595  eqk_en_pv_sum_c_sasia
52596  eqk_en_csp_sum_c_sasia
52597  eqi_en_pv_sum_c_sasia
52598  eqi_en_csp_sum_c_sasia
52599  eqk_en_solar_comp_c_sasia
52600   
52601  *-------------------------------------------------------------------------------
52603   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
52605  *-------------------------------------------------------------------------------
52606  * Technology development scenarios
52607  *-------------------------------------------------------------------------------
52608   
52610   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
52612  *-------------------------------------------------------------------------------
52613  * Oil Extraction
52614  * Options:
52615  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
52616  *-------------------------------------------------------------------------------
52617   
52619   
52620  eqoilcap_c_sasia
52621  eqoilprod_c_sasia
52622  eqq_out_oil_c_sasia
52623  eqcum_oil_c_sasia
52624  eqcost_oil_c_sasia
52625  eqi_oil_c_sasia
52626  eqi_out_oil_c_sasia
52627  eqq_emi_out_oil_c_sasia
52628   
52629  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
52632  *-------------------------------------------------------------------------------
52633  * Uranium Resources
52634  *-------------------------------------------------------------------------------
52635   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
52638  *-------------------------------------------------------------------------------
52639  * Gas Resources
52640  *-------------------------------------------------------------------------------
52641   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
52644  *-------------------------------------------------------------------------------
52645  * Coal Resources
52646  *-------------------------------------------------------------------------------
52647   
52649   
52650   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
52652  *-------------------------------------------------------------------------------
52653  * Climate
52654  *
52655  * Represents the climate
52656  * - based on the DICE model equations
52657  * - Radiative forcing for non CO2 ghgs
52658  * - parameters calibrated to reproduce MAGICC6.4 default response
52659  *
52660  *  Options:
52661  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
52662  * - $setglobal cooperate_on_climate {'YES','NO'}
52663  * - 'YES'(default): Countries within a coalition act in cooperation
52664  *   'NO': Countries within a coalition act individually
52665  *
52666  *-------------------------------------------------------------------------------
52667   
52669   
52671   
52672  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
52675  *-------------------------------------------------------------------------------
52676  * Long-run Damages from Climate Change
52677  * - Economic impacts
52678  * - Adaptation
52679  *-------------------------------------------------------------------------------
52680   
52682   
52684   
52685  *-------------------------------------------------------------------------------
52687   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
52689  *-------------------------------------------------------------------------------
52690  * Light-duty Vehicles for Personal Transport
52691  *-------------------------------------------------------------------------------
52692   
52694   
52695  eqnb_veh_c_sasia
52696  eqq_en_veh_c_sasia
52697  eqq_el_edv_c_sasia
52698  eqmcost_inv_hybrid_c_sasia
52699  eqmcost_inv_plghybrid_c_sasia
52700  eqmcost_inv_edv_c_sasia
52701  *** newcode
52702  eqq_inv_red_ban_c_sasia
52703  ***
52704  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
52707  *-------------------------------------------------------------------------------
52708  * Road Freight Transport
52709  *-------------------------------------------------------------------------------
52711   
52712  eqnb_frtveh_c_sasia
52713  eqq_en_frtveh_c_sasia
52714  eqq_el_frtedv_c_sasia
52715  eqmcost_inv_hbd_stfr_c_sasia
52716  eqmcost_inv_plghbd_stfr_c_sasia
52717  eqmcost_inv_edv_stfr_c_sasia
52718   
52719  *-------------------------------------------------------------------------------
52721   
52722   
52723   
52724   
52725   
52726   
52727  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
52729  *-------------------------------------------------------------------------------
52730  * Traditional Biomass
52731  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
52732  *  - require post_process to be launch before
52733  *-------------------------------------------------------------------------------
52734   
52736   
52737  * Optional modules
52738   
52739  * Policy modules
52740   
52741  * Calibration
52744   
52749   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
52751  *-------------------------------------------------------------------------------
52752  * Call modules by order
52753  *-------------------------------------------------------------------------------
52757   
52758  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
52760  *-------------------------------------------------------------------------------
52761  * Algorithm
52762  *-------------------------------------------------------------------------------
52763   
52765   
52766  eqobj_c_seasia
52767   
52768  *-------------------------------------------------------------------------------
52770   
52771  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
52773  *-------------------------------------------------------------------------------
52774  * Time
52775  * - Temporal structure
52776  * - Fixed time periods
52777  * - States of the world
52778  *-------------------------------------------------------------------------------
52779   
52781   
52782  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
52784  *-------------------------------------------------------------------------------
52785  * Geographic dimension and mapping with countries
52786  *-------------------------------------------------------------------------------
52787   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
52790  *-------------------------------------------------------------------------------
52791  * Non-Cooperative Setup
52792  *
52793  * Each region is defined as an individual coalition.
52794  *
52795  *-------------------------------------------------------------------------------
52796   
52798   
52799  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
52801  *-------------------------------------------------------------------------------
52802  * Welfare
52803  *-------------------------------------------------------------------------------
52804   
52806   
52807  equtility_c_seasia
52808   
52809  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
52812  *-------------------------------------------------------------------------------
52813  * Economy
52814  * - Production and Consumption definition
52815  * - Top-level of the production function
52816  * Options:
52817  * --original_ssp=1 : original SSP population and GDP data
52818  *-------------------------------------------------------------------------------
52819   
52821   
52822  eqk_c_seasia
52823  eqq_cc_c_seasia
52824  eqq_fen_c_seasia
52825  eqq_y_c_seasia
52826   
52827  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
52830  *-------------------------------------------------------------------------------
52831  * Energy sector
52832  *-------------------------------------------------------------------------------
52833   
52835   
52836  eq_mkt_clearing_oil_c_seasia
52837  eqcost_pes_c_seasia
52838  eqcost_ses_c_seasia
52839  eqk_en_c_seasia
52840  eqq_ces_el_c_seasia
52841  eqq_ces_nelgas_c_seasia
52842  eqq_el2_c_seasia
52843  eqq_el_c_seasia
52844  eqq_elff_c_seasia
52845  eqq_en_c_seasia
52846  eqq_en_in_c_seasia
52847  eqq_en_mu_c_seasia
52848  eqq_en_tree_c_seasia
52849  eqq_nel_c_seasia
52850  eqq_nelog_c_seasia
52851  eqq_fuel_c_seasia
52852  eqq_elffren_c_seasia
52853   
52854  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
52857  *-------------------------------------------------------------------------------
52858  * Carbon Emissions
52859  * - Total CO2 emissions and CO2 Fossil fuel and Industry
52860  * - CO2 emission costs
52861  * - GHG permit market
52862  *-------------------------------------------------------------------------------
52863   
52865   
52866  eqq_emi_lim_c_seasia
52867  eqq_emi_tree_c_seasia
52868  eqq_emi_co2ffi_c_seasia
52869   
52870  eqcost_emi_co2_c_seasia
52871   
52872  eq_mkt_clearing_nip_c_seasia
52873   
52874  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
52877  *-------------------------------------------------------------------------------
52878  * Research & Development
52879  * Options:
52880  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
52881  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
52882  *-------------------------------------------------------------------------------
52883   
52885   
52886  eqk_rd_c_seasia
52887  eqspill_coop_c_seasia
52888  eqspill_lead_c_seasia
52889  eqspill_foll_c_seasia
52890  eqmcost_inv_back_c_seasia
52891  eqmcost_inv_back_lbd_c_seasia
52892   
52893  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
52896  *-------------------------------------------------------------------------------
52897  * Default Climate Policy Implementation
52898  *
52899  * Options:
52900  *    --policy={bau (default),ctax}
52901  *        Implement a climate policy setting
52902  *  [ --scen= ]
52903  *        Policy variant.
52904  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
52905  *          * XXX for a fixed percentage/yr (e.g. 5) growth
52906  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
52907  *  [ --ctax_year=2020 ]
52908  *        Starting year of the carbon tax
52909  *  [ --ctax_initial=30 ]
52910  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
52911  *
52912  *-------------------------------------------------------------------------------
52914   
52915  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
52917  *-------------------------------------------------------------------------------
52918  * Energy efficiency
52919  *-------------------------------------------------------------------------------
52920   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
52923  *-------------------------------------------------------------------------------
52924  * Hydro Power
52925  *-------------------------------------------------------------------------------
52926   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
52929  *-------------------------------------------------------------------------------
52930  * System Integration:
52931  * - Capacity constraint
52932  * - Flexibility constraint
52933  * - Grid Investment
52934  * - Capacity growth constraint
52935  *-------------------------------------------------------------------------------
52936   
52938   
52939  eqq_elintren_c_seasia
52940  eqflex_c_seasia
52941  eqk_en_grid_c_seasia
52942  eqk_en_grid_to_k_en_c_seasia
52943  eqfirm_capacity_c_seasia
52944  eqcap_growth_c_seasia
52945   
52946  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
52949  *-------------------------------------------------------------------------------
52950  * Nuclear power plants
52951  *-------------------------------------------------------------------------------
52952   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
52955  *-------------------------------------------------------------------------------
52956  * GHG module
52957  * - CH4 FFI + CH4 waste + CH4 open fires
52958  * - N2O FFI + N2O waste + N2O open fires
52959  *-------------------------------------------------------------------------------
52960   
52962   
52963  eqq_emi_waste_c_seasia
52964  eqq_emi_n2o_ffi_c_seasia
52965  eqq_emi_ch4_ffi_c_seasia
52966   
52967  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
52970  *-------------------------------------------------------------------------------
52971  * F-gases
52972  * - LLF
52973  * - SLF
52974  *-------------------------------------------------------------------------------
52975   
52977   
52978  eqq_emi_fgases_c_seasia
52979   
52980  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
52983  *-------------------------------------------------------------------------------
52984  * Landuse [simplified version of the land-use model]
52985  *-------------------------------------------------------------------------------
52986   
52988   
52989  eq_wbio_c_seasia
52990  eqcost_pes_wbio_c_seasia
52991   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
52994  *-------------------------------------------------------------------------------
52995  * Bioenergy power plant
52996  *-------------------------------------------------------------------------------
52997   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
53000  *-------------------------------------------------------------------------------
53001  * Traditional Biofuels
53002  * - Requires the precedence of mod_landuse
53003  *-------------------------------------------------------------------------------
53004   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
53007  *-------------------------------------------------------------------------------
53008  * Advanced biofuel
53009  * - Require the precedence of mod_landuse
53010  *-------------------------------------------------------------------------------
53011   
53013   
53014  eqq_en_lim_advbiofuel_c_seasia
53015  eqmcost_fuel_advbiofuel_c_seasia
53016   
53017  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
53020  *-------------------------------------------------------------------------------
53021  * Carbon Capture and Sequestration
53022  *-------------------------------------------------------------------------------
53023   
53025   
53026  eqq_emi_ccs_c_seasia
53027  eqcost_emi_sinks_c_seasia
53028  eq_stor_ccs_cum_c_seasia
53029  eq_emi_stor_ccs_c_seasia
53030  eq_emi_leak_ccs_c_seasia
53031   
53032  *-------------------------------------------------------------------------------
53034   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
53036  *-------------------------------------------------------------------------------
53037  * Coal for non-electric sectors
53038  * - Coke Plants
53039  * - Industrial and Commercial combined-heat-and-power (CHP)
53040  * - Others
53041  *-------------------------------------------------------------------------------
53042   
53044   
53045  eqcost_en_nelcoal_c_seasia
53046  eqq_ncoalabat_monotone_c_seasia
53047  eqq_en_nelcoalccs_max_c_seasia
53048   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
53051  *-------------------------------------------------------------------------------
53052  * Wind energy module
53053  * - onshore and offshore
53054  *-------------------------------------------------------------------------------
53055   
53057   
53058  eqq_en_mu_windon_c_seasia
53059  eqq_en_mu_windoff_c_seasia
53060  eqk_en_windon_c_seasia
53061  eqk_en_windoff_c_seasia
53062  eqq_en_windon_sum_c_seasia
53063  eqq_en_windoff_sum_c_seasia
53064  eqk_en_windon_sum_c_seasia
53065  eqk_en_windoff_sum_c_seasia
53066  eqi_en_windon_sum_c_seasia
53067  eqi_en_windoff_sum_c_seasia
53068   
53070   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
53072  *-------------------------------------------------------------------------------
53073  * Solar Powerplants (PV and CSP) to the electrical system
53074  *-------------------------------------------------------------------------------
53075   
53076  *-------------------------------------------------------------------------------
53078   
53079  eqq_en_mu_pv_c_seasia
53080  eqq_en_mu_csp_c_seasia
53081  eqk_en_pv_c_seasia
53082  eqk_en_csp_c_seasia
53083  eqq_en_pv_sum_c_seasia
53084  eqq_en_csp_sum_c_seasia
53085  eqk_en_pv_sum_c_seasia
53086  eqk_en_csp_sum_c_seasia
53087  eqi_en_pv_sum_c_seasia
53088  eqi_en_csp_sum_c_seasia
53089  eqk_en_solar_comp_c_seasia
53090   
53091  *-------------------------------------------------------------------------------
53093   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
53095  *-------------------------------------------------------------------------------
53096  * Technology development scenarios
53097  *-------------------------------------------------------------------------------
53098   
53100   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
53102  *-------------------------------------------------------------------------------
53103  * Oil Extraction
53104  * Options:
53105  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
53106  *-------------------------------------------------------------------------------
53107   
53109   
53110  eqoilcap_c_seasia
53111  eqoilprod_c_seasia
53112  eqq_out_oil_c_seasia
53113  eqcum_oil_c_seasia
53114  eqcost_oil_c_seasia
53115  eqi_oil_c_seasia
53116  eqi_out_oil_c_seasia
53117  eqq_emi_out_oil_c_seasia
53118   
53119  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
53122  *-------------------------------------------------------------------------------
53123  * Uranium Resources
53124  *-------------------------------------------------------------------------------
53125   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
53128  *-------------------------------------------------------------------------------
53129  * Gas Resources
53130  *-------------------------------------------------------------------------------
53131   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
53134  *-------------------------------------------------------------------------------
53135  * Coal Resources
53136  *-------------------------------------------------------------------------------
53137   
53139   
53140   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
53142  *-------------------------------------------------------------------------------
53143  * Climate
53144  *
53145  * Represents the climate
53146  * - based on the DICE model equations
53147  * - Radiative forcing for non CO2 ghgs
53148  * - parameters calibrated to reproduce MAGICC6.4 default response
53149  *
53150  *  Options:
53151  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
53152  * - $setglobal cooperate_on_climate {'YES','NO'}
53153  * - 'YES'(default): Countries within a coalition act in cooperation
53154  *   'NO': Countries within a coalition act individually
53155  *
53156  *-------------------------------------------------------------------------------
53157   
53159   
53161   
53162  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
53165  *-------------------------------------------------------------------------------
53166  * Long-run Damages from Climate Change
53167  * - Economic impacts
53168  * - Adaptation
53169  *-------------------------------------------------------------------------------
53170   
53172   
53174   
53175  *-------------------------------------------------------------------------------
53177   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
53179  *-------------------------------------------------------------------------------
53180  * Light-duty Vehicles for Personal Transport
53181  *-------------------------------------------------------------------------------
53182   
53184   
53185  eqnb_veh_c_seasia
53186  eqq_en_veh_c_seasia
53187  eqq_el_edv_c_seasia
53188  eqmcost_inv_hybrid_c_seasia
53189  eqmcost_inv_plghybrid_c_seasia
53190  eqmcost_inv_edv_c_seasia
53191  *** newcode
53192  eqq_inv_red_ban_c_seasia
53193  ***
53194  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
53197  *-------------------------------------------------------------------------------
53198  * Road Freight Transport
53199  *-------------------------------------------------------------------------------
53201   
53202  eqnb_frtveh_c_seasia
53203  eqq_en_frtveh_c_seasia
53204  eqq_el_frtedv_c_seasia
53205  eqmcost_inv_hbd_stfr_c_seasia
53206  eqmcost_inv_plghbd_stfr_c_seasia
53207  eqmcost_inv_edv_stfr_c_seasia
53208   
53209  *-------------------------------------------------------------------------------
53211   
53212   
53213   
53214   
53215   
53216   
53217  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
53219  *-------------------------------------------------------------------------------
53220  * Traditional Biomass
53221  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
53222  *  - require post_process to be launch before
53223  *-------------------------------------------------------------------------------
53224   
53226   
53227  * Optional modules
53228   
53229  * Policy modules
53230   
53231  * Calibration
53234   
53239   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
53241  *-------------------------------------------------------------------------------
53242  * Call modules by order
53243  *-------------------------------------------------------------------------------
53247   
53248  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
53250  *-------------------------------------------------------------------------------
53251  * Algorithm
53252  *-------------------------------------------------------------------------------
53253   
53255   
53256  eqobj_c_southafrica
53257   
53258  *-------------------------------------------------------------------------------
53260   
53261  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
53263  *-------------------------------------------------------------------------------
53264  * Time
53265  * - Temporal structure
53266  * - Fixed time periods
53267  * - States of the world
53268  *-------------------------------------------------------------------------------
53269   
53271   
53272  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
53274  *-------------------------------------------------------------------------------
53275  * Geographic dimension and mapping with countries
53276  *-------------------------------------------------------------------------------
53277   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
53280  *-------------------------------------------------------------------------------
53281  * Non-Cooperative Setup
53282  *
53283  * Each region is defined as an individual coalition.
53284  *
53285  *-------------------------------------------------------------------------------
53286   
53288   
53289  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
53291  *-------------------------------------------------------------------------------
53292  * Welfare
53293  *-------------------------------------------------------------------------------
53294   
53296   
53297  equtility_c_southafrica
53298   
53299  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
53302  *-------------------------------------------------------------------------------
53303  * Economy
53304  * - Production and Consumption definition
53305  * - Top-level of the production function
53306  * Options:
53307  * --original_ssp=1 : original SSP population and GDP data
53308  *-------------------------------------------------------------------------------
53309   
53311   
53312  eqk_c_southafrica
53313  eqq_cc_c_southafrica
53314  eqq_fen_c_southafrica
53315  eqq_y_c_southafrica
53316   
53317  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
53320  *-------------------------------------------------------------------------------
53321  * Energy sector
53322  *-------------------------------------------------------------------------------
53323   
53325   
53326  eq_mkt_clearing_oil_c_southafrica
53327  eqcost_pes_c_southafrica
53328  eqcost_ses_c_southafrica
53329  eqk_en_c_southafrica
53330  eqq_ces_el_c_southafrica
53331  eqq_ces_nelgas_c_southafrica
53332  eqq_el2_c_southafrica
53333  eqq_el_c_southafrica
53334  eqq_elff_c_southafrica
53335  eqq_en_c_southafrica
53336  eqq_en_in_c_southafrica
53337  eqq_en_mu_c_southafrica
53338  eqq_en_tree_c_southafrica
53339  eqq_nel_c_southafrica
53340  eqq_nelog_c_southafrica
53341  eqq_fuel_c_southafrica
53342  eqq_elffren_c_southafrica
53343   
53344  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
53347  *-------------------------------------------------------------------------------
53348  * Carbon Emissions
53349  * - Total CO2 emissions and CO2 Fossil fuel and Industry
53350  * - CO2 emission costs
53351  * - GHG permit market
53352  *-------------------------------------------------------------------------------
53353   
53355   
53356  eqq_emi_lim_c_southafrica
53357  eqq_emi_tree_c_southafrica
53358  eqq_emi_co2ffi_c_southafrica
53359   
53360  eqcost_emi_co2_c_southafrica
53361   
53362  eq_mkt_clearing_nip_c_southafrica
53363   
53364  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
53367  *-------------------------------------------------------------------------------
53368  * Research & Development
53369  * Options:
53370  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
53371  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
53372  *-------------------------------------------------------------------------------
53373   
53375   
53376  eqk_rd_c_southafrica
53377  eqspill_coop_c_southafrica
53378  eqspill_lead_c_southafrica
53379  eqspill_foll_c_southafrica
53380  eqmcost_inv_back_c_southafrica
53381  eqmcost_inv_back_lbd_c_southafrica
53382   
53383  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
53386  *-------------------------------------------------------------------------------
53387  * Default Climate Policy Implementation
53388  *
53389  * Options:
53390  *    --policy={bau (default),ctax}
53391  *        Implement a climate policy setting
53392  *  [ --scen= ]
53393  *        Policy variant.
53394  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
53395  *          * XXX for a fixed percentage/yr (e.g. 5) growth
53396  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
53397  *  [ --ctax_year=2020 ]
53398  *        Starting year of the carbon tax
53399  *  [ --ctax_initial=30 ]
53400  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
53401  *
53402  *-------------------------------------------------------------------------------
53404   
53405  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
53407  *-------------------------------------------------------------------------------
53408  * Energy efficiency
53409  *-------------------------------------------------------------------------------
53410   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
53413  *-------------------------------------------------------------------------------
53414  * Hydro Power
53415  *-------------------------------------------------------------------------------
53416   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
53419  *-------------------------------------------------------------------------------
53420  * System Integration:
53421  * - Capacity constraint
53422  * - Flexibility constraint
53423  * - Grid Investment
53424  * - Capacity growth constraint
53425  *-------------------------------------------------------------------------------
53426   
53428   
53429  eqq_elintren_c_southafrica
53430  eqflex_c_southafrica
53431  eqk_en_grid_c_southafrica
53432  eqk_en_grid_to_k_en_c_southafrica
53433  eqfirm_capacity_c_southafrica
53434  eqcap_growth_c_southafrica
53435   
53436  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
53439  *-------------------------------------------------------------------------------
53440  * Nuclear power plants
53441  *-------------------------------------------------------------------------------
53442   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
53445  *-------------------------------------------------------------------------------
53446  * GHG module
53447  * - CH4 FFI + CH4 waste + CH4 open fires
53448  * - N2O FFI + N2O waste + N2O open fires
53449  *-------------------------------------------------------------------------------
53450   
53452   
53453  eqq_emi_waste_c_southafrica
53454  eqq_emi_n2o_ffi_c_southafrica
53455  eqq_emi_ch4_ffi_c_southafrica
53456   
53457  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
53460  *-------------------------------------------------------------------------------
53461  * F-gases
53462  * - LLF
53463  * - SLF
53464  *-------------------------------------------------------------------------------
53465   
53467   
53468  eqq_emi_fgases_c_southafrica
53469   
53470  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
53473  *-------------------------------------------------------------------------------
53474  * Landuse [simplified version of the land-use model]
53475  *-------------------------------------------------------------------------------
53476   
53478   
53479  eq_wbio_c_southafrica
53480  eqcost_pes_wbio_c_southafrica
53481   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
53484  *-------------------------------------------------------------------------------
53485  * Bioenergy power plant
53486  *-------------------------------------------------------------------------------
53487   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
53490  *-------------------------------------------------------------------------------
53491  * Traditional Biofuels
53492  * - Requires the precedence of mod_landuse
53493  *-------------------------------------------------------------------------------
53494   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
53497  *-------------------------------------------------------------------------------
53498  * Advanced biofuel
53499  * - Require the precedence of mod_landuse
53500  *-------------------------------------------------------------------------------
53501   
53503   
53504  eqq_en_lim_advbiofuel_c_southafrica
53505  eqmcost_fuel_advbiofuel_c_southafrica
53506   
53507  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
53510  *-------------------------------------------------------------------------------
53511  * Carbon Capture and Sequestration
53512  *-------------------------------------------------------------------------------
53513   
53515   
53516  eqq_emi_ccs_c_southafrica
53517  eqcost_emi_sinks_c_southafrica
53518  eq_stor_ccs_cum_c_southafrica
53519  eq_emi_stor_ccs_c_southafrica
53520  eq_emi_leak_ccs_c_southafrica
53521   
53522  *-------------------------------------------------------------------------------
53524   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
53526  *-------------------------------------------------------------------------------
53527  * Coal for non-electric sectors
53528  * - Coke Plants
53529  * - Industrial and Commercial combined-heat-and-power (CHP)
53530  * - Others
53531  *-------------------------------------------------------------------------------
53532   
53534   
53535  eqcost_en_nelcoal_c_southafrica
53536  eqq_ncoalabat_monotone_c_southafrica
53537  eqq_en_nelcoalccs_max_c_southafrica
53538   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
53541  *-------------------------------------------------------------------------------
53542  * Wind energy module
53543  * - onshore and offshore
53544  *-------------------------------------------------------------------------------
53545   
53547   
53548  eqq_en_mu_windon_c_southafrica
53549  eqq_en_mu_windoff_c_southafrica
53550  eqk_en_windon_c_southafrica
53551  eqk_en_windoff_c_southafrica
53552  eqq_en_windon_sum_c_southafrica
53553  eqq_en_windoff_sum_c_southafrica
53554  eqk_en_windon_sum_c_southafrica
53555  eqk_en_windoff_sum_c_southafrica
53556  eqi_en_windon_sum_c_southafrica
53557  eqi_en_windoff_sum_c_southafrica
53558   
53560   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
53562  *-------------------------------------------------------------------------------
53563  * Solar Powerplants (PV and CSP) to the electrical system
53564  *-------------------------------------------------------------------------------
53565   
53566  *-------------------------------------------------------------------------------
53568   
53569  eqq_en_mu_pv_c_southafrica
53570  eqq_en_mu_csp_c_southafrica
53571  eqk_en_pv_c_southafrica
53572  eqk_en_csp_c_southafrica
53573  eqq_en_pv_sum_c_southafrica
53574  eqq_en_csp_sum_c_southafrica
53575  eqk_en_pv_sum_c_southafrica
53576  eqk_en_csp_sum_c_southafrica
53577  eqi_en_pv_sum_c_southafrica
53578  eqi_en_csp_sum_c_southafrica
53579  eqk_en_solar_comp_c_southafrica
53580   
53581  *-------------------------------------------------------------------------------
53583   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
53585  *-------------------------------------------------------------------------------
53586  * Technology development scenarios
53587  *-------------------------------------------------------------------------------
53588   
53590   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
53592  *-------------------------------------------------------------------------------
53593  * Oil Extraction
53594  * Options:
53595  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
53596  *-------------------------------------------------------------------------------
53597   
53599   
53600  eqoilcap_c_southafrica
53601  eqoilprod_c_southafrica
53602  eqq_out_oil_c_southafrica
53603  eqcum_oil_c_southafrica
53604  eqcost_oil_c_southafrica
53605  eqi_oil_c_southafrica
53606  eqi_out_oil_c_southafrica
53607  eqq_emi_out_oil_c_southafrica
53608   
53609  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
53612  *-------------------------------------------------------------------------------
53613  * Uranium Resources
53614  *-------------------------------------------------------------------------------
53615   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
53618  *-------------------------------------------------------------------------------
53619  * Gas Resources
53620  *-------------------------------------------------------------------------------
53621   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
53624  *-------------------------------------------------------------------------------
53625  * Coal Resources
53626  *-------------------------------------------------------------------------------
53627   
53629   
53630   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
53632  *-------------------------------------------------------------------------------
53633  * Climate
53634  *
53635  * Represents the climate
53636  * - based on the DICE model equations
53637  * - Radiative forcing for non CO2 ghgs
53638  * - parameters calibrated to reproduce MAGICC6.4 default response
53639  *
53640  *  Options:
53641  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
53642  * - $setglobal cooperate_on_climate {'YES','NO'}
53643  * - 'YES'(default): Countries within a coalition act in cooperation
53644  *   'NO': Countries within a coalition act individually
53645  *
53646  *-------------------------------------------------------------------------------
53647   
53649   
53651   
53652  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
53655  *-------------------------------------------------------------------------------
53656  * Long-run Damages from Climate Change
53657  * - Economic impacts
53658  * - Adaptation
53659  *-------------------------------------------------------------------------------
53660   
53662   
53664   
53665  *-------------------------------------------------------------------------------
53667   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
53669  *-------------------------------------------------------------------------------
53670  * Light-duty Vehicles for Personal Transport
53671  *-------------------------------------------------------------------------------
53672   
53674   
53675  eqnb_veh_c_southafrica
53676  eqq_en_veh_c_southafrica
53677  eqq_el_edv_c_southafrica
53678  eqmcost_inv_hybrid_c_southafrica
53679  eqmcost_inv_plghybrid_c_southafrica
53680  eqmcost_inv_edv_c_southafrica
53681  *** newcode
53682  eqq_inv_red_ban_c_southafrica
53683  ***
53684  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
53687  *-------------------------------------------------------------------------------
53688  * Road Freight Transport
53689  *-------------------------------------------------------------------------------
53691   
53692  eqnb_frtveh_c_southafrica
53693  eqq_en_frtveh_c_southafrica
53694  eqq_el_frtedv_c_southafrica
53695  eqmcost_inv_hbd_stfr_c_southafrica
53696  eqmcost_inv_plghbd_stfr_c_southafrica
53697  eqmcost_inv_edv_stfr_c_southafrica
53698   
53699  *-------------------------------------------------------------------------------
53701   
53702   
53703   
53704   
53705   
53706   
53707  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
53709  *-------------------------------------------------------------------------------
53710  * Traditional Biomass
53711  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
53712  *  - require post_process to be launch before
53713  *-------------------------------------------------------------------------------
53714   
53716   
53717  * Optional modules
53718   
53719  * Policy modules
53720   
53721  * Calibration
53724   
53729   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
53731  *-------------------------------------------------------------------------------
53732  * Call modules by order
53733  *-------------------------------------------------------------------------------
53737   
53738  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
53740  *-------------------------------------------------------------------------------
53741  * Algorithm
53742  *-------------------------------------------------------------------------------
53743   
53745   
53746  eqobj_c_ssa
53747   
53748  *-------------------------------------------------------------------------------
53750   
53751  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
53753  *-------------------------------------------------------------------------------
53754  * Time
53755  * - Temporal structure
53756  * - Fixed time periods
53757  * - States of the world
53758  *-------------------------------------------------------------------------------
53759   
53761   
53762  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
53764  *-------------------------------------------------------------------------------
53765  * Geographic dimension and mapping with countries
53766  *-------------------------------------------------------------------------------
53767   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
53770  *-------------------------------------------------------------------------------
53771  * Non-Cooperative Setup
53772  *
53773  * Each region is defined as an individual coalition.
53774  *
53775  *-------------------------------------------------------------------------------
53776   
53778   
53779  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
53781  *-------------------------------------------------------------------------------
53782  * Welfare
53783  *-------------------------------------------------------------------------------
53784   
53786   
53787  equtility_c_ssa
53788   
53789  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
53792  *-------------------------------------------------------------------------------
53793  * Economy
53794  * - Production and Consumption definition
53795  * - Top-level of the production function
53796  * Options:
53797  * --original_ssp=1 : original SSP population and GDP data
53798  *-------------------------------------------------------------------------------
53799   
53801   
53802  eqk_c_ssa
53803  eqq_cc_c_ssa
53804  eqq_fen_c_ssa
53805  eqq_y_c_ssa
53806   
53807  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
53810  *-------------------------------------------------------------------------------
53811  * Energy sector
53812  *-------------------------------------------------------------------------------
53813   
53815   
53816  eq_mkt_clearing_oil_c_ssa
53817  eqcost_pes_c_ssa
53818  eqcost_ses_c_ssa
53819  eqk_en_c_ssa
53820  eqq_ces_el_c_ssa
53821  eqq_ces_nelgas_c_ssa
53822  eqq_el2_c_ssa
53823  eqq_el_c_ssa
53824  eqq_elff_c_ssa
53825  eqq_en_c_ssa
53826  eqq_en_in_c_ssa
53827  eqq_en_mu_c_ssa
53828  eqq_en_tree_c_ssa
53829  eqq_nel_c_ssa
53830  eqq_nelog_c_ssa
53831  eqq_fuel_c_ssa
53832  eqq_elffren_c_ssa
53833   
53834  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
53837  *-------------------------------------------------------------------------------
53838  * Carbon Emissions
53839  * - Total CO2 emissions and CO2 Fossil fuel and Industry
53840  * - CO2 emission costs
53841  * - GHG permit market
53842  *-------------------------------------------------------------------------------
53843   
53845   
53846  eqq_emi_lim_c_ssa
53847  eqq_emi_tree_c_ssa
53848  eqq_emi_co2ffi_c_ssa
53849   
53850  eqcost_emi_co2_c_ssa
53851   
53852  eq_mkt_clearing_nip_c_ssa
53853   
53854  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
53857  *-------------------------------------------------------------------------------
53858  * Research & Development
53859  * Options:
53860  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
53861  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
53862  *-------------------------------------------------------------------------------
53863   
53865   
53866  eqk_rd_c_ssa
53867  eqspill_coop_c_ssa
53868  eqspill_lead_c_ssa
53869  eqspill_foll_c_ssa
53870  eqmcost_inv_back_c_ssa
53871  eqmcost_inv_back_lbd_c_ssa
53872   
53873  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
53876  *-------------------------------------------------------------------------------
53877  * Default Climate Policy Implementation
53878  *
53879  * Options:
53880  *    --policy={bau (default),ctax}
53881  *        Implement a climate policy setting
53882  *  [ --scen= ]
53883  *        Policy variant.
53884  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
53885  *          * XXX for a fixed percentage/yr (e.g. 5) growth
53886  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
53887  *  [ --ctax_year=2020 ]
53888  *        Starting year of the carbon tax
53889  *  [ --ctax_initial=30 ]
53890  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
53891  *
53892  *-------------------------------------------------------------------------------
53894   
53895  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
53897  *-------------------------------------------------------------------------------
53898  * Energy efficiency
53899  *-------------------------------------------------------------------------------
53900   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
53903  *-------------------------------------------------------------------------------
53904  * Hydro Power
53905  *-------------------------------------------------------------------------------
53906   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
53909  *-------------------------------------------------------------------------------
53910  * System Integration:
53911  * - Capacity constraint
53912  * - Flexibility constraint
53913  * - Grid Investment
53914  * - Capacity growth constraint
53915  *-------------------------------------------------------------------------------
53916   
53918   
53919  eqq_elintren_c_ssa
53920  eqflex_c_ssa
53921  eqk_en_grid_c_ssa
53922  eqk_en_grid_to_k_en_c_ssa
53923  eqfirm_capacity_c_ssa
53924  eqcap_growth_c_ssa
53925   
53926  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
53929  *-------------------------------------------------------------------------------
53930  * Nuclear power plants
53931  *-------------------------------------------------------------------------------
53932   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
53935  *-------------------------------------------------------------------------------
53936  * GHG module
53937  * - CH4 FFI + CH4 waste + CH4 open fires
53938  * - N2O FFI + N2O waste + N2O open fires
53939  *-------------------------------------------------------------------------------
53940   
53942   
53943  eqq_emi_waste_c_ssa
53944  eqq_emi_n2o_ffi_c_ssa
53945  eqq_emi_ch4_ffi_c_ssa
53946   
53947  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
53950  *-------------------------------------------------------------------------------
53951  * F-gases
53952  * - LLF
53953  * - SLF
53954  *-------------------------------------------------------------------------------
53955   
53957   
53958  eqq_emi_fgases_c_ssa
53959   
53960  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
53963  *-------------------------------------------------------------------------------
53964  * Landuse [simplified version of the land-use model]
53965  *-------------------------------------------------------------------------------
53966   
53968   
53969  eq_wbio_c_ssa
53970  eqcost_pes_wbio_c_ssa
53971   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
53974  *-------------------------------------------------------------------------------
53975  * Bioenergy power plant
53976  *-------------------------------------------------------------------------------
53977   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
53980  *-------------------------------------------------------------------------------
53981  * Traditional Biofuels
53982  * - Requires the precedence of mod_landuse
53983  *-------------------------------------------------------------------------------
53984   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
53987  *-------------------------------------------------------------------------------
53988  * Advanced biofuel
53989  * - Require the precedence of mod_landuse
53990  *-------------------------------------------------------------------------------
53991   
53993   
53994  eqq_en_lim_advbiofuel_c_ssa
53995  eqmcost_fuel_advbiofuel_c_ssa
53996   
53997  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
54000  *-------------------------------------------------------------------------------
54001  * Carbon Capture and Sequestration
54002  *-------------------------------------------------------------------------------
54003   
54005   
54006  eqq_emi_ccs_c_ssa
54007  eqcost_emi_sinks_c_ssa
54008  eq_stor_ccs_cum_c_ssa
54009  eq_emi_stor_ccs_c_ssa
54010  eq_emi_leak_ccs_c_ssa
54011   
54012  *-------------------------------------------------------------------------------
54014   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
54016  *-------------------------------------------------------------------------------
54017  * Coal for non-electric sectors
54018  * - Coke Plants
54019  * - Industrial and Commercial combined-heat-and-power (CHP)
54020  * - Others
54021  *-------------------------------------------------------------------------------
54022   
54024   
54025  eqcost_en_nelcoal_c_ssa
54026  eqq_ncoalabat_monotone_c_ssa
54027  eqq_en_nelcoalccs_max_c_ssa
54028   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
54031  *-------------------------------------------------------------------------------
54032  * Wind energy module
54033  * - onshore and offshore
54034  *-------------------------------------------------------------------------------
54035   
54037   
54038  eqq_en_mu_windon_c_ssa
54039  eqq_en_mu_windoff_c_ssa
54040  eqk_en_windon_c_ssa
54041  eqk_en_windoff_c_ssa
54042  eqq_en_windon_sum_c_ssa
54043  eqq_en_windoff_sum_c_ssa
54044  eqk_en_windon_sum_c_ssa
54045  eqk_en_windoff_sum_c_ssa
54046  eqi_en_windon_sum_c_ssa
54047  eqi_en_windoff_sum_c_ssa
54048   
54050   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
54052  *-------------------------------------------------------------------------------
54053  * Solar Powerplants (PV and CSP) to the electrical system
54054  *-------------------------------------------------------------------------------
54055   
54056  *-------------------------------------------------------------------------------
54058   
54059  eqq_en_mu_pv_c_ssa
54060  eqq_en_mu_csp_c_ssa
54061  eqk_en_pv_c_ssa
54062  eqk_en_csp_c_ssa
54063  eqq_en_pv_sum_c_ssa
54064  eqq_en_csp_sum_c_ssa
54065  eqk_en_pv_sum_c_ssa
54066  eqk_en_csp_sum_c_ssa
54067  eqi_en_pv_sum_c_ssa
54068  eqi_en_csp_sum_c_ssa
54069  eqk_en_solar_comp_c_ssa
54070   
54071  *-------------------------------------------------------------------------------
54073   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
54075  *-------------------------------------------------------------------------------
54076  * Technology development scenarios
54077  *-------------------------------------------------------------------------------
54078   
54080   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
54082  *-------------------------------------------------------------------------------
54083  * Oil Extraction
54084  * Options:
54085  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
54086  *-------------------------------------------------------------------------------
54087   
54089   
54090  eqoilcap_c_ssa
54091  eqoilprod_c_ssa
54092  eqq_out_oil_c_ssa
54093  eqcum_oil_c_ssa
54094  eqcost_oil_c_ssa
54095  eqi_oil_c_ssa
54096  eqi_out_oil_c_ssa
54097  eqq_emi_out_oil_c_ssa
54098   
54099  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
54102  *-------------------------------------------------------------------------------
54103  * Uranium Resources
54104  *-------------------------------------------------------------------------------
54105   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
54108  *-------------------------------------------------------------------------------
54109  * Gas Resources
54110  *-------------------------------------------------------------------------------
54111   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
54114  *-------------------------------------------------------------------------------
54115  * Coal Resources
54116  *-------------------------------------------------------------------------------
54117   
54119   
54120   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
54122  *-------------------------------------------------------------------------------
54123  * Climate
54124  *
54125  * Represents the climate
54126  * - based on the DICE model equations
54127  * - Radiative forcing for non CO2 ghgs
54128  * - parameters calibrated to reproduce MAGICC6.4 default response
54129  *
54130  *  Options:
54131  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
54132  * - $setglobal cooperate_on_climate {'YES','NO'}
54133  * - 'YES'(default): Countries within a coalition act in cooperation
54134  *   'NO': Countries within a coalition act individually
54135  *
54136  *-------------------------------------------------------------------------------
54137   
54139   
54141   
54142  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
54145  *-------------------------------------------------------------------------------
54146  * Long-run Damages from Climate Change
54147  * - Economic impacts
54148  * - Adaptation
54149  *-------------------------------------------------------------------------------
54150   
54152   
54154   
54155  *-------------------------------------------------------------------------------
54157   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
54159  *-------------------------------------------------------------------------------
54160  * Light-duty Vehicles for Personal Transport
54161  *-------------------------------------------------------------------------------
54162   
54164   
54165  eqnb_veh_c_ssa
54166  eqq_en_veh_c_ssa
54167  eqq_el_edv_c_ssa
54168  eqmcost_inv_hybrid_c_ssa
54169  eqmcost_inv_plghybrid_c_ssa
54170  eqmcost_inv_edv_c_ssa
54171  *** newcode
54172  eqq_inv_red_ban_c_ssa
54173  ***
54174  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
54177  *-------------------------------------------------------------------------------
54178  * Road Freight Transport
54179  *-------------------------------------------------------------------------------
54181   
54182  eqnb_frtveh_c_ssa
54183  eqq_en_frtveh_c_ssa
54184  eqq_el_frtedv_c_ssa
54185  eqmcost_inv_hbd_stfr_c_ssa
54186  eqmcost_inv_plghbd_stfr_c_ssa
54187  eqmcost_inv_edv_stfr_c_ssa
54188   
54189  *-------------------------------------------------------------------------------
54191   
54192   
54193   
54194   
54195   
54196   
54197  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
54199  *-------------------------------------------------------------------------------
54200  * Traditional Biomass
54201  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
54202  *  - require post_process to be launch before
54203  *-------------------------------------------------------------------------------
54204   
54206   
54207  * Optional modules
54208   
54209  * Policy modules
54210   
54211  * Calibration
54214   
54219   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
54221  *-------------------------------------------------------------------------------
54222  * Call modules by order
54223  *-------------------------------------------------------------------------------
54227   
54228  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
54230  *-------------------------------------------------------------------------------
54231  * Algorithm
54232  *-------------------------------------------------------------------------------
54233   
54235   
54236  eqobj_c_te
54237   
54238  *-------------------------------------------------------------------------------
54240   
54241  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
54243  *-------------------------------------------------------------------------------
54244  * Time
54245  * - Temporal structure
54246  * - Fixed time periods
54247  * - States of the world
54248  *-------------------------------------------------------------------------------
54249   
54251   
54252  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
54254  *-------------------------------------------------------------------------------
54255  * Geographic dimension and mapping with countries
54256  *-------------------------------------------------------------------------------
54257   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
54260  *-------------------------------------------------------------------------------
54261  * Non-Cooperative Setup
54262  *
54263  * Each region is defined as an individual coalition.
54264  *
54265  *-------------------------------------------------------------------------------
54266   
54268   
54269  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
54271  *-------------------------------------------------------------------------------
54272  * Welfare
54273  *-------------------------------------------------------------------------------
54274   
54276   
54277  equtility_c_te
54278   
54279  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
54282  *-------------------------------------------------------------------------------
54283  * Economy
54284  * - Production and Consumption definition
54285  * - Top-level of the production function
54286  * Options:
54287  * --original_ssp=1 : original SSP population and GDP data
54288  *-------------------------------------------------------------------------------
54289   
54291   
54292  eqk_c_te
54293  eqq_cc_c_te
54294  eqq_fen_c_te
54295  eqq_y_c_te
54296   
54297  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
54300  *-------------------------------------------------------------------------------
54301  * Energy sector
54302  *-------------------------------------------------------------------------------
54303   
54305   
54306  eq_mkt_clearing_oil_c_te
54307  eqcost_pes_c_te
54308  eqcost_ses_c_te
54309  eqk_en_c_te
54310  eqq_ces_el_c_te
54311  eqq_ces_nelgas_c_te
54312  eqq_el2_c_te
54313  eqq_el_c_te
54314  eqq_elff_c_te
54315  eqq_en_c_te
54316  eqq_en_in_c_te
54317  eqq_en_mu_c_te
54318  eqq_en_tree_c_te
54319  eqq_nel_c_te
54320  eqq_nelog_c_te
54321  eqq_fuel_c_te
54322  eqq_elffren_c_te
54323   
54324  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
54327  *-------------------------------------------------------------------------------
54328  * Carbon Emissions
54329  * - Total CO2 emissions and CO2 Fossil fuel and Industry
54330  * - CO2 emission costs
54331  * - GHG permit market
54332  *-------------------------------------------------------------------------------
54333   
54335   
54336  eqq_emi_lim_c_te
54337  eqq_emi_tree_c_te
54338  eqq_emi_co2ffi_c_te
54339   
54340  eqcost_emi_co2_c_te
54341   
54342  eq_mkt_clearing_nip_c_te
54343   
54344  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
54347  *-------------------------------------------------------------------------------
54348  * Research & Development
54349  * Options:
54350  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
54351  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
54352  *-------------------------------------------------------------------------------
54353   
54355   
54356  eqk_rd_c_te
54357  eqspill_coop_c_te
54358  eqspill_lead_c_te
54359  eqspill_foll_c_te
54360  eqmcost_inv_back_c_te
54361  eqmcost_inv_back_lbd_c_te
54362   
54363  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
54366  *-------------------------------------------------------------------------------
54367  * Default Climate Policy Implementation
54368  *
54369  * Options:
54370  *    --policy={bau (default),ctax}
54371  *        Implement a climate policy setting
54372  *  [ --scen= ]
54373  *        Policy variant.
54374  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
54375  *          * XXX for a fixed percentage/yr (e.g. 5) growth
54376  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
54377  *  [ --ctax_year=2020 ]
54378  *        Starting year of the carbon tax
54379  *  [ --ctax_initial=30 ]
54380  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
54381  *
54382  *-------------------------------------------------------------------------------
54384   
54385  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
54387  *-------------------------------------------------------------------------------
54388  * Energy efficiency
54389  *-------------------------------------------------------------------------------
54390   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
54393  *-------------------------------------------------------------------------------
54394  * Hydro Power
54395  *-------------------------------------------------------------------------------
54396   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
54399  *-------------------------------------------------------------------------------
54400  * System Integration:
54401  * - Capacity constraint
54402  * - Flexibility constraint
54403  * - Grid Investment
54404  * - Capacity growth constraint
54405  *-------------------------------------------------------------------------------
54406   
54408   
54409  eqq_elintren_c_te
54410  eqflex_c_te
54411  eqk_en_grid_c_te
54412  eqk_en_grid_to_k_en_c_te
54413  eqfirm_capacity_c_te
54414  eqcap_growth_c_te
54415   
54416  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
54419  *-------------------------------------------------------------------------------
54420  * Nuclear power plants
54421  *-------------------------------------------------------------------------------
54422   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
54425  *-------------------------------------------------------------------------------
54426  * GHG module
54427  * - CH4 FFI + CH4 waste + CH4 open fires
54428  * - N2O FFI + N2O waste + N2O open fires
54429  *-------------------------------------------------------------------------------
54430   
54432   
54433  eqq_emi_waste_c_te
54434  eqq_emi_n2o_ffi_c_te
54435  eqq_emi_ch4_ffi_c_te
54436   
54437  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
54440  *-------------------------------------------------------------------------------
54441  * F-gases
54442  * - LLF
54443  * - SLF
54444  *-------------------------------------------------------------------------------
54445   
54447   
54448  eqq_emi_fgases_c_te
54449   
54450  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
54453  *-------------------------------------------------------------------------------
54454  * Landuse [simplified version of the land-use model]
54455  *-------------------------------------------------------------------------------
54456   
54458   
54459  eq_wbio_c_te
54460  eqcost_pes_wbio_c_te
54461   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
54464  *-------------------------------------------------------------------------------
54465  * Bioenergy power plant
54466  *-------------------------------------------------------------------------------
54467   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
54470  *-------------------------------------------------------------------------------
54471  * Traditional Biofuels
54472  * - Requires the precedence of mod_landuse
54473  *-------------------------------------------------------------------------------
54474   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
54477  *-------------------------------------------------------------------------------
54478  * Advanced biofuel
54479  * - Require the precedence of mod_landuse
54480  *-------------------------------------------------------------------------------
54481   
54483   
54484  eqq_en_lim_advbiofuel_c_te
54485  eqmcost_fuel_advbiofuel_c_te
54486   
54487  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
54490  *-------------------------------------------------------------------------------
54491  * Carbon Capture and Sequestration
54492  *-------------------------------------------------------------------------------
54493   
54495   
54496  eqq_emi_ccs_c_te
54497  eqcost_emi_sinks_c_te
54498  eq_stor_ccs_cum_c_te
54499  eq_emi_stor_ccs_c_te
54500  eq_emi_leak_ccs_c_te
54501   
54502  *-------------------------------------------------------------------------------
54504   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
54506  *-------------------------------------------------------------------------------
54507  * Coal for non-electric sectors
54508  * - Coke Plants
54509  * - Industrial and Commercial combined-heat-and-power (CHP)
54510  * - Others
54511  *-------------------------------------------------------------------------------
54512   
54514   
54515  eqcost_en_nelcoal_c_te
54516  eqq_ncoalabat_monotone_c_te
54517  eqq_en_nelcoalccs_max_c_te
54518   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
54521  *-------------------------------------------------------------------------------
54522  * Wind energy module
54523  * - onshore and offshore
54524  *-------------------------------------------------------------------------------
54525   
54527   
54528  eqq_en_mu_windon_c_te
54529  eqq_en_mu_windoff_c_te
54530  eqk_en_windon_c_te
54531  eqk_en_windoff_c_te
54532  eqq_en_windon_sum_c_te
54533  eqq_en_windoff_sum_c_te
54534  eqk_en_windon_sum_c_te
54535  eqk_en_windoff_sum_c_te
54536  eqi_en_windon_sum_c_te
54537  eqi_en_windoff_sum_c_te
54538   
54540   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
54542  *-------------------------------------------------------------------------------
54543  * Solar Powerplants (PV and CSP) to the electrical system
54544  *-------------------------------------------------------------------------------
54545   
54546  *-------------------------------------------------------------------------------
54548   
54549  eqq_en_mu_pv_c_te
54550  eqq_en_mu_csp_c_te
54551  eqk_en_pv_c_te
54552  eqk_en_csp_c_te
54553  eqq_en_pv_sum_c_te
54554  eqq_en_csp_sum_c_te
54555  eqk_en_pv_sum_c_te
54556  eqk_en_csp_sum_c_te
54557  eqi_en_pv_sum_c_te
54558  eqi_en_csp_sum_c_te
54559  eqk_en_solar_comp_c_te
54560   
54561  *-------------------------------------------------------------------------------
54563   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
54565  *-------------------------------------------------------------------------------
54566  * Technology development scenarios
54567  *-------------------------------------------------------------------------------
54568   
54570   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
54572  *-------------------------------------------------------------------------------
54573  * Oil Extraction
54574  * Options:
54575  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
54576  *-------------------------------------------------------------------------------
54577   
54579   
54580  eqoilcap_c_te
54581  eqoilprod_c_te
54582  eqq_out_oil_c_te
54583  eqcum_oil_c_te
54584  eqcost_oil_c_te
54585  eqi_oil_c_te
54586  eqi_out_oil_c_te
54587  eqq_emi_out_oil_c_te
54588   
54589  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
54592  *-------------------------------------------------------------------------------
54593  * Uranium Resources
54594  *-------------------------------------------------------------------------------
54595   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
54598  *-------------------------------------------------------------------------------
54599  * Gas Resources
54600  *-------------------------------------------------------------------------------
54601   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
54604  *-------------------------------------------------------------------------------
54605  * Coal Resources
54606  *-------------------------------------------------------------------------------
54607   
54609   
54610   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
54612  *-------------------------------------------------------------------------------
54613  * Climate
54614  *
54615  * Represents the climate
54616  * - based on the DICE model equations
54617  * - Radiative forcing for non CO2 ghgs
54618  * - parameters calibrated to reproduce MAGICC6.4 default response
54619  *
54620  *  Options:
54621  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
54622  * - $setglobal cooperate_on_climate {'YES','NO'}
54623  * - 'YES'(default): Countries within a coalition act in cooperation
54624  *   'NO': Countries within a coalition act individually
54625  *
54626  *-------------------------------------------------------------------------------
54627   
54629   
54631   
54632  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
54635  *-------------------------------------------------------------------------------
54636  * Long-run Damages from Climate Change
54637  * - Economic impacts
54638  * - Adaptation
54639  *-------------------------------------------------------------------------------
54640   
54642   
54644   
54645  *-------------------------------------------------------------------------------
54647   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
54649  *-------------------------------------------------------------------------------
54650  * Light-duty Vehicles for Personal Transport
54651  *-------------------------------------------------------------------------------
54652   
54654   
54655  eqnb_veh_c_te
54656  eqq_en_veh_c_te
54657  eqq_el_edv_c_te
54658  eqmcost_inv_hybrid_c_te
54659  eqmcost_inv_plghybrid_c_te
54660  eqmcost_inv_edv_c_te
54661  *** newcode
54662  eqq_inv_red_ban_c_te
54663  ***
54664  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
54667  *-------------------------------------------------------------------------------
54668  * Road Freight Transport
54669  *-------------------------------------------------------------------------------
54671   
54672  eqnb_frtveh_c_te
54673  eqq_en_frtveh_c_te
54674  eqq_el_frtedv_c_te
54675  eqmcost_inv_hbd_stfr_c_te
54676  eqmcost_inv_plghbd_stfr_c_te
54677  eqmcost_inv_edv_stfr_c_te
54678   
54679  *-------------------------------------------------------------------------------
54681   
54682   
54683   
54684   
54685   
54686   
54687  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
54689  *-------------------------------------------------------------------------------
54690  * Traditional Biomass
54691  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
54692  *  - require post_process to be launch before
54693  *-------------------------------------------------------------------------------
54694   
54696   
54697  * Optional modules
54698   
54699  * Policy modules
54700   
54701  * Calibration
54704   
54709   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
54711  *-------------------------------------------------------------------------------
54712  * Call modules by order
54713  *-------------------------------------------------------------------------------
54717   
54718  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
54720  *-------------------------------------------------------------------------------
54721  * Algorithm
54722  *-------------------------------------------------------------------------------
54723   
54725   
54726  eqobj_c_usa
54727   
54728  *-------------------------------------------------------------------------------
54730   
54731  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
54733  *-------------------------------------------------------------------------------
54734  * Time
54735  * - Temporal structure
54736  * - Fixed time periods
54737  * - States of the world
54738  *-------------------------------------------------------------------------------
54739   
54741   
54742  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
54744  *-------------------------------------------------------------------------------
54745  * Geographic dimension and mapping with countries
54746  *-------------------------------------------------------------------------------
54747   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
54750  *-------------------------------------------------------------------------------
54751  * Non-Cooperative Setup
54752  *
54753  * Each region is defined as an individual coalition.
54754  *
54755  *-------------------------------------------------------------------------------
54756   
54758   
54759  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
54761  *-------------------------------------------------------------------------------
54762  * Welfare
54763  *-------------------------------------------------------------------------------
54764   
54766   
54767  equtility_c_usa
54768   
54769  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
54772  *-------------------------------------------------------------------------------
54773  * Economy
54774  * - Production and Consumption definition
54775  * - Top-level of the production function
54776  * Options:
54777  * --original_ssp=1 : original SSP population and GDP data
54778  *-------------------------------------------------------------------------------
54779   
54781   
54782  eqk_c_usa
54783  eqq_cc_c_usa
54784  eqq_fen_c_usa
54785  eqq_y_c_usa
54786   
54787  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
54790  *-------------------------------------------------------------------------------
54791  * Energy sector
54792  *-------------------------------------------------------------------------------
54793   
54795   
54796  eq_mkt_clearing_oil_c_usa
54797  eqcost_pes_c_usa
54798  eqcost_ses_c_usa
54799  eqk_en_c_usa
54800  eqq_ces_el_c_usa
54801  eqq_ces_nelgas_c_usa
54802  eqq_el2_c_usa
54803  eqq_el_c_usa
54804  eqq_elff_c_usa
54805  eqq_en_c_usa
54806  eqq_en_in_c_usa
54807  eqq_en_mu_c_usa
54808  eqq_en_tree_c_usa
54809  eqq_nel_c_usa
54810  eqq_nelog_c_usa
54811  eqq_fuel_c_usa
54812  eqq_elffren_c_usa
54813   
54814  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
54817  *-------------------------------------------------------------------------------
54818  * Carbon Emissions
54819  * - Total CO2 emissions and CO2 Fossil fuel and Industry
54820  * - CO2 emission costs
54821  * - GHG permit market
54822  *-------------------------------------------------------------------------------
54823   
54825   
54826  eqq_emi_lim_c_usa
54827  eqq_emi_tree_c_usa
54828  eqq_emi_co2ffi_c_usa
54829   
54830  eqcost_emi_co2_c_usa
54831   
54832  eq_mkt_clearing_nip_c_usa
54833   
54834  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
54837  *-------------------------------------------------------------------------------
54838  * Research & Development
54839  * Options:
54840  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
54841  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
54842  *-------------------------------------------------------------------------------
54843   
54845   
54846  eqk_rd_c_usa
54847  eqspill_coop_c_usa
54848  eqspill_lead_c_usa
54849  eqspill_foll_c_usa
54850  eqmcost_inv_back_c_usa
54851  eqmcost_inv_back_lbd_c_usa
54852   
54853  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
54856  *-------------------------------------------------------------------------------
54857  * Default Climate Policy Implementation
54858  *
54859  * Options:
54860  *    --policy={bau (default),ctax}
54861  *        Implement a climate policy setting
54862  *  [ --scen= ]
54863  *        Policy variant.
54864  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
54865  *          * XXX for a fixed percentage/yr (e.g. 5) growth
54866  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
54867  *  [ --ctax_year=2020 ]
54868  *        Starting year of the carbon tax
54869  *  [ --ctax_initial=30 ]
54870  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
54871  *
54872  *-------------------------------------------------------------------------------
54874   
54875  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
54877  *-------------------------------------------------------------------------------
54878  * Energy efficiency
54879  *-------------------------------------------------------------------------------
54880   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
54883  *-------------------------------------------------------------------------------
54884  * Hydro Power
54885  *-------------------------------------------------------------------------------
54886   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
54889  *-------------------------------------------------------------------------------
54890  * System Integration:
54891  * - Capacity constraint
54892  * - Flexibility constraint
54893  * - Grid Investment
54894  * - Capacity growth constraint
54895  *-------------------------------------------------------------------------------
54896   
54898   
54899  eqq_elintren_c_usa
54900  eqflex_c_usa
54901  eqk_en_grid_c_usa
54902  eqk_en_grid_to_k_en_c_usa
54903  eqfirm_capacity_c_usa
54904  eqcap_growth_c_usa
54905   
54906  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
54909  *-------------------------------------------------------------------------------
54910  * Nuclear power plants
54911  *-------------------------------------------------------------------------------
54912   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
54915  *-------------------------------------------------------------------------------
54916  * GHG module
54917  * - CH4 FFI + CH4 waste + CH4 open fires
54918  * - N2O FFI + N2O waste + N2O open fires
54919  *-------------------------------------------------------------------------------
54920   
54922   
54923  eqq_emi_waste_c_usa
54924  eqq_emi_n2o_ffi_c_usa
54925  eqq_emi_ch4_ffi_c_usa
54926   
54927  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
54930  *-------------------------------------------------------------------------------
54931  * F-gases
54932  * - LLF
54933  * - SLF
54934  *-------------------------------------------------------------------------------
54935   
54937   
54938  eqq_emi_fgases_c_usa
54939   
54940  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
54943  *-------------------------------------------------------------------------------
54944  * Landuse [simplified version of the land-use model]
54945  *-------------------------------------------------------------------------------
54946   
54948   
54949  eq_wbio_c_usa
54950  eqcost_pes_wbio_c_usa
54951   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
54954  *-------------------------------------------------------------------------------
54955  * Bioenergy power plant
54956  *-------------------------------------------------------------------------------
54957   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
54960  *-------------------------------------------------------------------------------
54961  * Traditional Biofuels
54962  * - Requires the precedence of mod_landuse
54963  *-------------------------------------------------------------------------------
54964   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
54967  *-------------------------------------------------------------------------------
54968  * Advanced biofuel
54969  * - Require the precedence of mod_landuse
54970  *-------------------------------------------------------------------------------
54971   
54973   
54974  eqq_en_lim_advbiofuel_c_usa
54975  eqmcost_fuel_advbiofuel_c_usa
54976   
54977  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
54980  *-------------------------------------------------------------------------------
54981  * Carbon Capture and Sequestration
54982  *-------------------------------------------------------------------------------
54983   
54985   
54986  eqq_emi_ccs_c_usa
54987  eqcost_emi_sinks_c_usa
54988  eq_stor_ccs_cum_c_usa
54989  eq_emi_stor_ccs_c_usa
54990  eq_emi_leak_ccs_c_usa
54991   
54992  *-------------------------------------------------------------------------------
54994   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
54996  *-------------------------------------------------------------------------------
54997  * Coal for non-electric sectors
54998  * - Coke Plants
54999  * - Industrial and Commercial combined-heat-and-power (CHP)
55000  * - Others
55001  *-------------------------------------------------------------------------------
55002   
55004   
55005  eqcost_en_nelcoal_c_usa
55006  eqq_ncoalabat_monotone_c_usa
55007  eqq_en_nelcoalccs_max_c_usa
55008   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
55011  *-------------------------------------------------------------------------------
55012  * Wind energy module
55013  * - onshore and offshore
55014  *-------------------------------------------------------------------------------
55015   
55017   
55018  eqq_en_mu_windon_c_usa
55019  eqq_en_mu_windoff_c_usa
55020  eqk_en_windon_c_usa
55021  eqk_en_windoff_c_usa
55022  eqq_en_windon_sum_c_usa
55023  eqq_en_windoff_sum_c_usa
55024  eqk_en_windon_sum_c_usa
55025  eqk_en_windoff_sum_c_usa
55026  eqi_en_windon_sum_c_usa
55027  eqi_en_windoff_sum_c_usa
55028   
55030   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
55032  *-------------------------------------------------------------------------------
55033  * Solar Powerplants (PV and CSP) to the electrical system
55034  *-------------------------------------------------------------------------------
55035   
55036  *-------------------------------------------------------------------------------
55038   
55039  eqq_en_mu_pv_c_usa
55040  eqq_en_mu_csp_c_usa
55041  eqk_en_pv_c_usa
55042  eqk_en_csp_c_usa
55043  eqq_en_pv_sum_c_usa
55044  eqq_en_csp_sum_c_usa
55045  eqk_en_pv_sum_c_usa
55046  eqk_en_csp_sum_c_usa
55047  eqi_en_pv_sum_c_usa
55048  eqi_en_csp_sum_c_usa
55049  eqk_en_solar_comp_c_usa
55050   
55051  *-------------------------------------------------------------------------------
55053   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
55055  *-------------------------------------------------------------------------------
55056  * Technology development scenarios
55057  *-------------------------------------------------------------------------------
55058   
55060   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
55062  *-------------------------------------------------------------------------------
55063  * Oil Extraction
55064  * Options:
55065  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
55066  *-------------------------------------------------------------------------------
55067   
55069   
55070  eqoilcap_c_usa
55071  eqoilprod_c_usa
55072  eqq_out_oil_c_usa
55073  eqcum_oil_c_usa
55074  eqcost_oil_c_usa
55075  eqi_oil_c_usa
55076  eqi_out_oil_c_usa
55077  eqq_emi_out_oil_c_usa
55078   
55079  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
55082  *-------------------------------------------------------------------------------
55083  * Uranium Resources
55084  *-------------------------------------------------------------------------------
55085   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
55088  *-------------------------------------------------------------------------------
55089  * Gas Resources
55090  *-------------------------------------------------------------------------------
55091   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
55094  *-------------------------------------------------------------------------------
55095  * Coal Resources
55096  *-------------------------------------------------------------------------------
55097   
55099   
55100   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
55102  *-------------------------------------------------------------------------------
55103  * Climate
55104  *
55105  * Represents the climate
55106  * - based on the DICE model equations
55107  * - Radiative forcing for non CO2 ghgs
55108  * - parameters calibrated to reproduce MAGICC6.4 default response
55109  *
55110  *  Options:
55111  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
55112  * - $setglobal cooperate_on_climate {'YES','NO'}
55113  * - 'YES'(default): Countries within a coalition act in cooperation
55114  *   'NO': Countries within a coalition act individually
55115  *
55116  *-------------------------------------------------------------------------------
55117   
55119   
55121   
55122  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
55125  *-------------------------------------------------------------------------------
55126  * Long-run Damages from Climate Change
55127  * - Economic impacts
55128  * - Adaptation
55129  *-------------------------------------------------------------------------------
55130   
55132   
55134   
55135  *-------------------------------------------------------------------------------
55137   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
55139  *-------------------------------------------------------------------------------
55140  * Light-duty Vehicles for Personal Transport
55141  *-------------------------------------------------------------------------------
55142   
55144   
55145  eqnb_veh_c_usa
55146  eqq_en_veh_c_usa
55147  eqq_el_edv_c_usa
55148  eqmcost_inv_hybrid_c_usa
55149  eqmcost_inv_plghybrid_c_usa
55150  eqmcost_inv_edv_c_usa
55151  *** newcode
55152  eqq_inv_red_ban_c_usa
55153  ***
55154  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
55157  *-------------------------------------------------------------------------------
55158  * Road Freight Transport
55159  *-------------------------------------------------------------------------------
55161   
55162  eqnb_frtveh_c_usa
55163  eqq_en_frtveh_c_usa
55164  eqq_el_frtedv_c_usa
55165  eqmcost_inv_hbd_stfr_c_usa
55166  eqmcost_inv_plghbd_stfr_c_usa
55167  eqmcost_inv_edv_stfr_c_usa
55168   
55169  *-------------------------------------------------------------------------------
55171   
55172   
55173   
55174   
55175   
55176   
55177  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
55179  *-------------------------------------------------------------------------------
55180  * Traditional Biomass
55181  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
55182  *  - require post_process to be launch before
55183  *-------------------------------------------------------------------------------
55184   
55186   
55187  * Optional modules
55188   
55189  * Policy modules
55190   
55191  * Calibration
55194   
55199   
55200  * declared items
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
55202  *-------------------------------------------------------------------------------
55203  * Call modules by order
55204  *-------------------------------------------------------------------------------
55208   
55209  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
55211  *-------------------------------------------------------------------------------
55212  * Algorithm
55213  *-------------------------------------------------------------------------------
55214   
55216   
55217  * Sets
55218  ierr
55219  siter
55220  conf
55221   
55222  * Parameters
55223  errtol
55224  stop_nash
55225  stop_run
55226   
55228   
55229  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
55231  *-------------------------------------------------------------------------------
55232  * Time
55233  * - Temporal structure
55234  * - Fixed time periods
55235  * - States of the world
55236  *-------------------------------------------------------------------------------
55237   
55239   
55240  t
55241  tfix
55242  tlen
55243  tfirst
55244  tlast
55245  tperiod
55246  year
55247  yeoh
55248  pre
55249   
55251   
55252  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
55254  *-------------------------------------------------------------------------------
55255  * Geographic dimension and mapping with countries
55256  *-------------------------------------------------------------------------------
55257   
55259   
55260  * Sets
55261  n
55262  oecd
55263  non_oecd
55264   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
55267  *-------------------------------------------------------------------------------
55268  * Non-Cooperative Setup
55269  *
55270  * Each region is defined as an individual coalition.
55271  *
55272  *-------------------------------------------------------------------------------
55273   
55275   
55276  * Sets
55277  clt
55278  map_clt_n
55279   
55281   
55282  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
55284  *-------------------------------------------------------------------------------
55285  * Welfare
55286  *-------------------------------------------------------------------------------
55287   
55289   
55290  * Sets
55291  negishi_coop
55292   
55293  * Parameters
55294  eta
55295  gamma
55296  srtp
55297  stpf
55298  utility_cebge_global
55299  utility_cebge_pc_global
55300  utility_cebge_pc_regional
55301  utility_cebge_regional
55302  w_negishi
55303   
55304  * Variables
55305  UTILITY
55306  PROB
55307   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
55310  *-------------------------------------------------------------------------------
55311  * Economy
55312  * - Production and Consumption definition
55313  * - Top-level of the production function
55314  * Options:
55315  * --original_ssp=1 : original SSP population and GDP data
55316  *-------------------------------------------------------------------------------
55317   
55319   
55320  * Sets
55321  g
55322  iq
55323   
55324  * Parameters
55325  alpha
55326  delta
55327  delta0
55328  l
55329  mer2ppp
55330  m_eqq_y
55331  ppp2mer
55332  q0
55333  rho
55334  tfpn
55335  tfpy
55336  ykali
55337  gdppc_kali
55338   
55339  * Variables
55340  I
55341  K
55342  Q
55343  BAU_Q
55344  COST_Y
55345   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
55348  *-------------------------------------------------------------------------------
55349  * Energy sector
55350  *-------------------------------------------------------------------------------
55351   
55353   
55354  * Sets
55355  extract
55356  fuel
55357  f
55358  s
55359  f_mkt
55360  ices_el
55361  j
55362  j_to_scale
55363  jel
55364  jel_own_mu
55365  jel_ren
55366  jfed
55367  jinv
55368  jinv_own_k
55369  jinv_to_scale
55370  jmcost_inv
55371  jnel
55372  jnel_ren
55373  jold
55374  jpenalty
55375  jreal
55376  jreal_to_scale
55377  map_ices_el
55378  map_j
55379   
55380  * Parameters
55381  cexs
55382  csi
55383  csi0
55384  cum_prodpp
55385  delta_en
55386  delta_en0
55387  delta_lcost
55388  lifetime
55389  k_en0
55390  localpll
55391  mcost_inv0
55392  mu
55393  mu0
55394  oem
55395  oem0
55396  p_mkup
55397  p_mkup0
55398  prodpp
55399  twh2ej
55400  wcum
55401  tpes
55402  noeloil
55403   
55404  * Variables
55405  COST_EN
55406  COST_FUEL
55407  FPRICE
55408  I_EN
55409  K_EN
55410  MCOST_FUEL
55411  MCOST_INV
55412  QEL_OUT
55413  QNEL_OUT
55414  Q_EN
55415  Q_FUEL
55416  Q_IN
55417   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
55420  *-------------------------------------------------------------------------------
55421  * Carbon Emissions
55422  * - Total CO2 emissions and CO2 Fossil fuel and Industry
55423  * - CO2 emission costs
55424  * - GHG permit market
55425  *-------------------------------------------------------------------------------
55426   
55428   
55429  * Sets
55430  cce
55431  e
55432  ghg
55433  sink
55434  c_mkt
55435  map_e
55436   
55437  * Parameters
55438  c2co2
55439  carbonprice
55440  emi_bio_harv
55441  emi_cap
55442  emi_st
55443   
55444  * Variables
55445  BAU_Q_EMI
55446  COST_EMI
55447  CPRICE
55448  Q_EMI
55449   
55450  * Summary parameters
55451  m_eqq_emi_lim
55452  m_eqq_emi_tree
55453   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
55456  *-------------------------------------------------------------------------------
55457  * Research & Development
55458  * Options:
55459  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
55460  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
55461  *-------------------------------------------------------------------------------
55462   
55464   
55465  * Sets
55466  jrd
55467  jrd_lbd
55468  leadrd
55469  rd
55470  rd_cooperation
55471  rd_tgap
55472   
55473  * Parameters
55474  rd_coef
55475  rd_delta
55476  krd0
55477  rd_crowd_out
55478  krd_lead
55479  krd_oth_lead_krd
55480  wkrd0
55481  wlspill_k_rd
55482   
55483  * Variables
55484  I_RD
55485  K_RD
55486  SPILL
55487   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
55490  *-------------------------------------------------------------------------------
55491  * Default Climate Policy Implementation
55492  *
55493  * Options:
55494  *    --policy={bau (default),ctax}
55495  *        Implement a climate policy setting
55496  *  [ --scen= ]
55497  *        Policy variant.
55498  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
55499  *          * XXX for a fixed percentage/yr (e.g. 5) growth
55500  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
55501  *  [ --ctax_year=2020 ]
55502  *        Starting year of the carbon tax
55503  *  [ --ctax_initial=30 ]
55504  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
55505  *
55506  *-------------------------------------------------------------------------------
55508   
55509  run
55510  to_run
55511   
55512  internal
55513  internal_clt
55514  trading_t
55515  t_cap
55516   
55517  ctax
55518   
55520   
55521  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
55523  *-------------------------------------------------------------------------------
55524  * Energy efficiency
55525  *-------------------------------------------------------------------------------
55526   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
55529  *-------------------------------------------------------------------------------
55530  * Hydro Power
55531  *-------------------------------------------------------------------------------
55532   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
55535  *-------------------------------------------------------------------------------
55536  * System Integration:
55537  * - Capacity constraint
55538  * - Flexibility constraint
55539  * - Grid Investment
55540  * - Capacity growth constraint
55541  *-------------------------------------------------------------------------------
55542   
55544   
55545  * Sets
55546  jel_firm
55547  jel_stdgrid
55548  jintren
55549  jtn_incompatible_with_mkt_growth_cap
55550   
55551  * Parameters
55552  cv_coeff
55553  cv_exp
55554  el_free_cap
55555  flex_coeff
55556  grid_coeff
55557  grid_cost
55558  grid_delta
55559  peak_load_fraction
55560  mkt_growth_rate
55561   
55562  * Variables
55563  Q_EL_FLEX
55564  K_EN_GRID
55565  I_EN_GRID
55566   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
55569  *-------------------------------------------------------------------------------
55570  * Nuclear power plants
55571  *-------------------------------------------------------------------------------
55572   
55574   
55575  * Parameters
55576  cwaste
55577  cwaste_reg
55578  wastemgm
55579  twh2tonU
55580   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
55583  *-------------------------------------------------------------------------------
55584  * GHG module
55585  * - CH4 FFI + CH4 waste + CH4 open fires
55586  * - N2O FFI + N2O waste + N2O open fires
55587  *-------------------------------------------------------------------------------
55588   
55590   
55591  waste_emi_alpha
55592  waste_emi_beta
55593  emi_fac
55594  emi_ffac
55595   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
55598  *-------------------------------------------------------------------------------
55599  * F-gases
55600  * - LLF
55601  * - SLF
55602  *-------------------------------------------------------------------------------
55603   
55605   
55606  fgases
55607  fgases_baseline
55608   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
55611  *-------------------------------------------------------------------------------
55612  * Landuse [simplified version of the land-use model]
55613  *-------------------------------------------------------------------------------
55614   
55616   
55617  * Sets
55618  t_lu
55619   
55620  * Parameters
55621  cluprice
55622  q_emi_valid_lu
55623   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
55626  *-------------------------------------------------------------------------------
55627  * Bioenergy power plant
55628  *-------------------------------------------------------------------------------
55629   
55631   
55632  * Parameters
55633  elpb_capacity
55634   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
55637  *-------------------------------------------------------------------------------
55638  * Traditional Biofuels
55639  * - Requires the precedence of mod_landuse
55640  *-------------------------------------------------------------------------------
55641   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
55644  *-------------------------------------------------------------------------------
55645  * Advanced biofuel
55646  * - Require the precedence of mod_landuse
55647  *-------------------------------------------------------------------------------
55648   
55650   
55651  * Parameters
55652  alp_nelback
55653  q_en0_back
55654   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
55657  *-------------------------------------------------------------------------------
55658  * Carbon Capture and Sequestration
55659  *-------------------------------------------------------------------------------
55660   
55662   
55663  * Sets
55664  jccs
55665  jlccs
55666   
55667  * Parameters
55668  ccs_capture_eff
55669  ccs_emi_capt
55670  ccs_leak_rate
55671  ccs_learn
55672  ccs_stor_cap_max
55673  ccs_stor_cap_og_onoff
55674  ccs_stor_cost
55675  ccs_stor_dist_avg
55676  ccs_wcum0
55677  ccs_wcum_spill
55678   
55679  * Variables
55680  CUM_Q_CCS
55681  MCOST_EMI
55682  Q_CCS
55683   
55685   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
55687  *-------------------------------------------------------------------------------
55688  * Coal for non-electric sectors
55689  * - Coke Plants
55690  * - Industrial and Commercial combined-heat-and-power (CHP)
55691  * - Others
55692  *-------------------------------------------------------------------------------
55693   
55695   
55696  * Parameters
55697  nelcoal_cmac
55698  nelcoal_share_ccs
55699  nelcoal_max_abat
55700   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
55703  *-------------------------------------------------------------------------------
55704  * Wind energy module
55705  * - onshore and offshore
55706  *-------------------------------------------------------------------------------
55707   
55709   
55710  * Sets
55711  jel_wind
55712  jinv_wind
55713  jreal_wind
55714  wind_class
55715  wind_depth
55716  wind_dist
55717  wind_type
55718   
55719  * Parameters
55720  k_en0_windon
55721  k_en_wind_norm_sum
55722  k_en_windoff_norm
55723  k_en_windon_norm
55724  wind_mu
55725  wind_mu_marginal
55726  oem_wind
55727  cap_factor
55728  wind_spill_wcum
55729  yearly_hours
55730  windoff_pot
55731  windon_pot
55732   
55733  * Variables
55734  I_EN_WINDOFF
55735  I_EN_WINDON
55736  K_EN_WINDOFF
55737  K_EN_WINDON
55738  MCOST_INV_WINDOFF
55739  Q_EN_WINDOFF
55740  Q_EN_WINDON
55741   
55743   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
55745  *-------------------------------------------------------------------------------
55746  * Solar Powerplants (PV and CSP) to the electrical system
55747  *-------------------------------------------------------------------------------
55748   
55749  *-------------------------------------------------------------------------------
55751   
55752  * Sets
55753  jel_solar
55754  jinv_solar
55755  jreal_solar
55756  solar_dist
55757  solar_class
55758   
55759  * Parameters
55760  pv_pot
55761  csp_pot
55762  solar_mu
55763  inst_area
55764  inst_density
55765  k_en0_pv
55766  k_en0_csp
55767  oem_pv
55768  oem_csp
55769   
55770  * Variables
55771  I_EN_PV
55772  I_EN_CSP
55773  K_EN_PV
55774  K_EN_CSP
55775  Q_EN_PV
55776  Q_EN_CSP
55777   
55779   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
55781  *-------------------------------------------------------------------------------
55782  * Technology development scenarios
55783  *-------------------------------------------------------------------------------
55784   
55786   
55787  * Parameters
55788  tech_scen
55789  tech_cost_var
55790   
55792   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
55794  *-------------------------------------------------------------------------------
55795  * Oil Extraction
55796  * Options:
55797  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
55798  *-------------------------------------------------------------------------------
55799   
55801   
55802  * Sets
55803  map_oilgrade
55804  oilg
55805  valid_oilg
55806   
55807  * Parameters
55808  delta_oilg
55809  oil_emi_st
55810  oil_esp_capacity
55811  oem_ex
55812  oil_capacity
55813  oil_cost
55814  oil_cost_grade
55815  oil_cum
55816  oil_cum_grade
55817  oil_emi_st_grade
55818  oil_reserve
55819   
55820  * Variables
55821  ADDOILCAP
55822  COST_OIL
55823  CUM_OIL
55824  I_OIL
55825  I_OUT
55826  OILCAP
55827  OILPROD
55828  Q_EMI_OUT
55829  Q_OUT
55830   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
55833  *-------------------------------------------------------------------------------
55834  * Uranium Resources
55835  *-------------------------------------------------------------------------------
55836   
55838   
55839  resgr
55840  res
55841   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
55844  *-------------------------------------------------------------------------------
55845  * Gas Resources
55846  *-------------------------------------------------------------------------------
55847   
55849   
55850  trade_poly_gas
55851  trade_scale_gas
55852   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
55855  *-------------------------------------------------------------------------------
55856  * Coal Resources
55857  *-------------------------------------------------------------------------------
55858   
55860   
55861  trade_poly_coal
55862  trade_scale_coal
55863   
55865   
55866   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
55868  *-------------------------------------------------------------------------------
55869  * Climate
55870  *
55871  * Represents the climate
55872  * - based on the DICE model equations
55873  * - Radiative forcing for non CO2 ghgs
55874  * - parameters calibrated to reproduce MAGICC6.4 default response
55875  *
55876  *  Options:
55877  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
55878  * - $setglobal cooperate_on_climate {'YES','NO'}
55879  * - 'YES'(default): Countries within a coalition act in cooperation
55880  *   'NO': Countries within a coalition act individually
55881  *
55882  *-------------------------------------------------------------------------------
55883   
55885   
55886  * Sets
55887  m
55888  oghg
55889   
55890  * Parameters
55891  cmdec1
55892  cmdec2
55893  cmphi
55894  emi_gwp
55895  emi_preind
55896  rfaerosols
55897  rfc
55898  temp0
55899  tempc
55900  wcum_emi0
55901  wcum_emi_eq
55902  wemi
55903  wemi2qemi
55904   
55905  * Variables
55906  RF
55907  TEMP
55908  TRF
55909  W_EMI
55910  WCUM_EMI
55911   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
55914  *-------------------------------------------------------------------------------
55915  * Long-run Damages from Climate Change
55916  * - Economic impacts
55917  * - Adaptation
55918  *-------------------------------------------------------------------------------
55919   
55921   
55922  * Parameters
55923  ces_ada
55924  comega_neg
55925  comega_pos
55926  k_edu0
55927  k_h0
55928  owa
55929   
55930  * Variables
55931  OMEGA
55932   
55933  * Report parameters
55934  resdam
55935  grossdam
55936  dam_rep
55937   
55939   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
55941  *-------------------------------------------------------------------------------
55942  * Light-duty Vehicles for Personal Transport
55943  *-------------------------------------------------------------------------------
55944   
55946   
55947  * Sets
55948  jveh
55949  jveh_inv
55950  jveh_invfix
55951   
55952  * Parameters
55953  *** newcode
55954  battery_cost_new
55955   
55956  ai
55957  battery_cost
55958  biofuel_2005_2010
55959  biofuel_2013
55960  coeff_ldv
55961  disutility_costs_ldv
55962  elec_plg
55963  elec_plg_2005
55964  fuel_cons
55965  fuel_cons_2005
55966  fueleff_rate
55967  gdppc
55968  growth_func_ldv
55969  inv_constraint_ldv
55970  inv_cost_veh
55971  k_veh_2005_2015
55972  km_demand_ldv
55973  km_demand_pv_deviation_ldv
55974  km_demand_pv_ldv
55975  krd_lo_coeff
55976  ldv_pthc
55977  ldv_total
55978  load_factor_ldv
55979  max_biofuel_feed_share
55980  oem_veh
55981  oge
55982  reg_discount_veh
55983  service_demand_ldv
55984  size_battery
55985  trad_biofuel_lim
55986  transp_ldv_biofuel_feed_share
55987  transp_ldv_ice_feeding
55988  transp_world_ldv_fleet
55989  transp_world_ldv_ice_feeding
55990  travel_intensity
55991  travel_intensity_2005
55992  co2_transport
55993  size_ice
55994  size_elmotor
55995  ice_cost
55996  tank_cost
55997  charger_cost
55998  glider_manufacture_cost
55999   
56000  ELMOTOR_COST
56001   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
56004  *-------------------------------------------------------------------------------
56005  * Road Freight Transport
56006  *-------------------------------------------------------------------------------
56008   
56009  * Sets
56010  jfrt
56011  jfrt_inv
56012   
56013  * Parameters
56014  disutility_costs_stfr
56015  elec_plg_stfr
56016  elec_plghbd_stfr_2005
56017  fuel_cons_stfr
56018  fuel_cons_stfr_2005
56019  fueleff_rate_stfr
56020  growth_func_stfr
56021  inv_cost_frt
56022  km_demand_pv_stfr
56023  km_demand_stfr
56024  load_factor_stfr
56025  oem_frt
56026  service_demand_stfr
56027  size_battery_freight
56028  stfr_total
56029   
56031   
56032   
56033   
56034   
56035   
56036   
56037  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
56039  *-------------------------------------------------------------------------------
56040  * Traditional Biomass
56041  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
56042  *  - require post_process to be launch before
56043  *-------------------------------------------------------------------------------
56044   
56046   
56047  * Parameters
56048  trbio_ctr
56049  trbio_gdp_fun
56050  neltrbiomass0
56051  scale_trbiomass
56052   
56054   
56055  * Optional modules
56056   
56057  * Policy modules
56058   
56059  * Calibration
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
56063  *-------------------------------------------------------------------------------
56064  * Call modules by order
56065  *-------------------------------------------------------------------------------
56069   
56070  * Algorithm
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
56072  *-------------------------------------------------------------------------------
56073  * Algorithm
56074  *-------------------------------------------------------------------------------
56075   
56077   
56078  * Time structure
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
56080  *-------------------------------------------------------------------------------
56081  * Time
56082  * - Temporal structure
56083  * - Fixed time periods
56084  * - States of the world
56085  *-------------------------------------------------------------------------------
56086   
56088   
56089  * Regions + Coalitions
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
56091  *-------------------------------------------------------------------------------
56092  * Geographic dimension and mapping with countries
56093  *-------------------------------------------------------------------------------
56094   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
56097  *-------------------------------------------------------------------------------
56098  * Non-Cooperative Setup
56099  *
56100  * Each region is defined as an individual coalition.
56101  *
56102  *-------------------------------------------------------------------------------
56103   
56105   
56106  * Core model
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
56108  *-------------------------------------------------------------------------------
56109  * Welfare
56110  *-------------------------------------------------------------------------------
56111   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
56114  *-------------------------------------------------------------------------------
56115  * Economy
56116  * - Production and Consumption definition
56117  * - Top-level of the production function
56118  * Options:
56119  * --original_ssp=1 : original SSP population and GDP data
56120  *-------------------------------------------------------------------------------
56121   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
56124  *-------------------------------------------------------------------------------
56125  * Energy sector
56126  *-------------------------------------------------------------------------------
56127   
56129   
56130  mu
56131  csi
56132   
56133  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
56136  *-------------------------------------------------------------------------------
56137  * Carbon Emissions
56138  * - Total CO2 emissions and CO2 Fossil fuel and Industry
56139  * - CO2 emission costs
56140  * - GHG permit market
56141  *-------------------------------------------------------------------------------
56142   
56144   
56145  emi_sys
56146   
56147  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
56150  *-------------------------------------------------------------------------------
56151  * Research & Development
56152  * Options:
56153  *  - $setglobal rd_myopic_iter: Reset knowledge variables for the first 3 Nash iterations
56154  *  - $setglobal cooperate_on_rd: Regions cooperation within coalitions on R&D
56155  *-------------------------------------------------------------------------------
56156   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
56159  *-------------------------------------------------------------------------------
56160  * Default Climate Policy Implementation
56161  *
56162  * Options:
56163  *    --policy={bau (default),ctax}
56164  *        Implement a climate policy setting
56165  *  [ --scen= ]
56166  *        Policy variant.
56167  *        For ctax, it can be {ramsey,spa,XXX}, defining the growh rate of tax:
56168  *          * XXX for a fixed percentage/yr (e.g. 5) growth
56169  *          * 'ramsey' (default) for world average Ramsey consumption discount rate
56170  *  [ --ctax_year=2020 ]
56171  *        Starting year of the carbon tax
56172  *  [ --ctax_initial=30 ]
56173  *        Initial level of tax [USD2005/tCO2eq] (if %policy%==ctax)
56174  *
56175  *-------------------------------------------------------------------------------
56177   
56178  * Modules
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
56180  *-------------------------------------------------------------------------------
56181  * Energy efficiency
56182  *-------------------------------------------------------------------------------
56183   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
56186  *-------------------------------------------------------------------------------
56187  * Hydro Power
56188  *-------------------------------------------------------------------------------
56189   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
56192  *-------------------------------------------------------------------------------
56193  * System Integration:
56194  * - Capacity constraint
56195  * - Flexibility constraint
56196  * - Grid Investment
56197  * - Capacity growth constraint
56198  *-------------------------------------------------------------------------------
56199   
56201   
56202  firm_coeff
56203   
56204  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
56207  *-------------------------------------------------------------------------------
56208  * Nuclear power plants
56209  *-------------------------------------------------------------------------------
56210   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
56213  *-------------------------------------------------------------------------------
56214  * GHG module
56215  * - CH4 FFI + CH4 waste + CH4 open fires
56216  * - N2O FFI + N2O waste + N2O open fires
56217  *-------------------------------------------------------------------------------
56218   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
56221  *-------------------------------------------------------------------------------
56222  * F-gases
56223  * - LLF
56224  * - SLF
56225  *-------------------------------------------------------------------------------
56226   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
56229  *-------------------------------------------------------------------------------
56230  * Landuse [simplified version of the land-use model]
56231  *-------------------------------------------------------------------------------
56232   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
56235  *-------------------------------------------------------------------------------
56236  * Bioenergy power plant
56237  *-------------------------------------------------------------------------------
56238   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
56241  *-------------------------------------------------------------------------------
56242  * Traditional Biofuels
56243  * - Requires the precedence of mod_landuse
56244  *-------------------------------------------------------------------------------
56245   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
56248  *-------------------------------------------------------------------------------
56249  * Advanced biofuel
56250  * - Require the precedence of mod_landuse
56251  *-------------------------------------------------------------------------------
56252   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
56255  *-------------------------------------------------------------------------------
56256  * Carbon Capture and Sequestration
56257  *-------------------------------------------------------------------------------
56258   
56260   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
56262  *-------------------------------------------------------------------------------
56263  * Coal for non-electric sectors
56264  * - Coke Plants
56265  * - Industrial and Commercial combined-heat-and-power (CHP)
56266  * - Others
56267  *-------------------------------------------------------------------------------
56268   
56270   
56271  nelcoal_baseline
56272   
56273  *-------------------------------------------------------------------------------
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
56276  *-------------------------------------------------------------------------------
56277  * Wind energy module
56278  * - onshore and offshore
56279  *-------------------------------------------------------------------------------
56280   
56282   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
56284  *-------------------------------------------------------------------------------
56285  * Solar Powerplants (PV and CSP) to the electrical system
56286  *-------------------------------------------------------------------------------
56287   
56288  *-------------------------------------------------------------------------------
56290   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
56292  *-------------------------------------------------------------------------------
56293  * Technology development scenarios
56294  *-------------------------------------------------------------------------------
56295   
56297   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
56299  *-------------------------------------------------------------------------------
56300  * Oil Extraction
56301  * Options:
56302  * - Oil Extraction sector with reduced oil grades ($setglobal mod_oilextr_simplified)
56303  *-------------------------------------------------------------------------------
56304   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
56307  *-------------------------------------------------------------------------------
56308  * Uranium Resources
56309  *-------------------------------------------------------------------------------
56310   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
56313  *-------------------------------------------------------------------------------
56314  * Gas Resources
56315  *-------------------------------------------------------------------------------
56316   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
56319  *-------------------------------------------------------------------------------
56320  * Coal Resources
56321  *-------------------------------------------------------------------------------
56322   
56324   
56325   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
56327  *-------------------------------------------------------------------------------
56328  * Climate
56329  *
56330  * Represents the climate
56331  * - based on the DICE model equations
56332  * - Radiative forcing for non CO2 ghgs
56333  * - parameters calibrated to reproduce MAGICC6.4 default response
56334  *
56335  *  Options:
56336  * - Climate is post-processed (default) or solved by the solver ($setglobal solve_climate)
56337  * - $setglobal cooperate_on_climate {'YES','NO'}
56338  * - 'YES'(default): Countries within a coalition act in cooperation
56339  *   'NO': Countries within a coalition act individually
56340  *
56341  *-------------------------------------------------------------------------------
56342   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
56345  *-------------------------------------------------------------------------------
56346  * Long-run Damages from Climate Change
56347  * - Economic impacts
56348  * - Adaptation
56349  *-------------------------------------------------------------------------------
56350   
56352   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
56354  *-------------------------------------------------------------------------------
56355  * Light-duty Vehicles for Personal Transport
56356  *-------------------------------------------------------------------------------
56357   
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
56360  *-------------------------------------------------------------------------------
56361  * Road Freight Transport
56362  *-------------------------------------------------------------------------------
56364   
56365   
56366   
56367   
56368   
56369   
56370  * Modules requiring post-processing
BATINCLUDE C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
56372  *-------------------------------------------------------------------------------
56373  * Traditional Biomass
56374  *  - driven by GDP (default) or exogenous ($setglobal mod_trbiomass_exo)
56375  *  - require post_process to be launch before
56376  *-------------------------------------------------------------------------------
56377   
56379   
56380  * Optional modules
56381   
56382  * Policy modules
56383   
56384  * Calibration
56387   
56388  ;
56389   
56391   
---- Begin of Active File List
Level Type         Line  Filename
---------------------------------
    0 INPUT         147  C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\run_witch.gms
---- End of Active File List

---- Begin of Compile-time Variable List
Level SetVal                          Type       Text
-----------------------------------------------------
    0 nameout                         SCOPED     emicap_usa_1e-3_500notusa
    0 verbose                         SCOPED     1
    0 n                               GLOBAL     witch17
    0 datapathext                     GLOBAL     witch17
    0 datapath                        GLOBAL     data_witch17/
    0 baseline                        GLOBAL     ssp2
    0 policy                          GLOBAL     bau
    0 cooperation                     GLOBAL     noncoop
    0 startgdx                        GLOBAL     data_witch17/results_ssp2_calib
    0 baugdx                          GLOBAL     data_witch17/results_ssp2_calib
    0 nameout                         GLOBAL     ssp2_bau
    0 outgdx                          GLOBAL     results_emicap_usa_1e-3_500notusa
    0 calibgdx                        GLOBAL     data_witch17/data_calib
    0 tfpgdx                          GLOBAL     data_witch17/data_tfp_ssp2
    0 resdir                          GLOBAL     C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\
    0 algo                            GLOBAL     admm
    0 converged_if_all                GLOBAL     optimal
    0 max_iter                        GLOBAL     999
    0 min_iter                        GLOBAL     1
    0 sleep_factor                    GLOBAL     0.1
    0 max_soltime                     GLOBAL     1e7
    0 max_soliter                     GLOBAL     1e8
    0 pb_type                         GLOBAL     nlp
    0 pb_obj                          GLOBAL     OBJADMM
    0 admm_rho_oil                    GLOBAL     3e-9
    0 admm_rho_nip                    GLOBAL     2e0
    0 nmapping                        GLOBAL     witch17
    0 coalitions                      GLOBAL     c_brazil c_canada c_china c_europe c_india c_indonesia c_jpnkor c_laca c_mena c_mexico c_oceania c_sasia c_seasia c_southafrica c_ssa c_te c_usa
    0 cooperate_on_climate            GLOBAL     YES
    0 parallel                        GLOBAL     true
    0 utilitarian                     GLOBAL     
    0 gamma                           GLOBAL     0
    0 eta                             GLOBAL     0.66
    0 srtp                            GLOBAL     1
    0 capacity_constraint             GLOBAL     low
    0 ghgbaseline                     GLOBAL     ssp2
    0 fgasesbaseline                  GLOBAL     ssp2
    0 lubaseline                      GLOBAL     ssp2
    0 leak_input                      GLOBAL     0
    0 ccs_stor_cost                   GLOBAL     best
    0 ccs_stor_cap_max                GLOBAL     best
    0 nelcoal_basegr                  GLOBAL     (-1)
    0 solar_classes                   GLOBAL     full
    0 fossil_oil                      GLOBAL     M
    0 fossil_gas                      GLOBAL     M
    0 fossil_coal                     GLOBAL     M
    0 adap_efficiency                 GLOBAL     ssp2
    0 damcost                         GLOBAL     climcost
    0 tra_baseline                    GLOBAL     ssp2
    0 welfare_order                   GLOBAL     tn
    0 slow_iter                       GLOBAL     50
    0 slow_criteria                   GLOBAL     0.0009
    0 max_retry                       GLOBAL     10
    0 holdfixed                       GLOBAL     1
    0 solvergrid                      GLOBAL     file
    0 solvelink                       GLOBAL     3
    0 solver                          GLOBAL     conopt
    0 conopt_tolerance                GLOBAL     12
    0 admm_mu                         GLOBAL     5
    0 admm_tau                        GLOBAL     2
    0 admm_tau_max                    GLOBAL     10
    0 admm_csi_exp_oil                GLOBAL     0
    0 admm_csi_exp_nip                GLOBAL     0
    0 rerun                           GLOBAL     2
OS environment GDXCOMPRESS=1
---- End of Compile-time Variable List

---- Begin of Macro List
$macro valuein(takeyear,expr)  (smax(tt$(year(tt) eq &takeyear), &expr))
$macro poly(x,coeff)  sum(polydeg$(coeff), (coeff)*(x)**(ord(polydeg)-1))
$macro cast(expression,ss,sd)  sum(&ss$(sameas(&ss,&sd)), &expression)
$macro xiny(small,big)  sum(&big$sameas(&big,&small),1)
$macro sumjchild(x,jset,anode)  sum(j$map_j(&anode,j), cast(&x,&jset,j))
$macro savereport(reg)  solrep('&reg','objval')=witch_&reg.objval;solrep('&reg','solvestat')=witch_&reg.solvestat;solrep('&reg','modelstat')=witch_&reg.modelstat;solrep('&reg','iterusd')=witch_&reg.iterusd;solrep('&reg','resusd')=witch_&reg.resusd;solrep('&reg','numvar')=witch_&reg.numvar;solrep('&reg','numequ')=witch_&reg.numequ;solrep('&reg','numnz')=witch_&reg.numnz;solrep('&reg','numvarproj')=witch_&reg.numvarproj;solrep('&reg','numinfes')=witch_&reg.numinfes;solrep('&reg','numnopt')=witch_&reg.numnopt;solrep('&reg','domusd')=witch_&reg.domusd;
$macro last_iter(numiter)  ((ord(ssiter) le ord(siter)) and (ord(ssiter) ge (ord(siter) - (&numiter - 1))))
$macro loadvar(var,setdep,default)   prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', &var; if(execerror gt prevexecerrors, &var.l&&setdep = &default; execerror = prevexecerrors; last_load_went_wrong=1)
$macro loadvarbnd(var,setdep,default,bndlo,bndup)   loadvar(var,setdep,default); &var.lo&&setdep = &bndlo; &var.up&&setdep = &bndup; &var.l&&setdep$(&var.l&&setdep<&bndlo) = &bndlo; &var.l&&setdep$(&var.l&&setdep>&bndup) = &bndup;
$macro loadvarbndcond(var,setdep,cond,default,bndlo,bndup)   loadvar(var,'&&setdep$(&&cond)',default); &var.lo&&setdep$(&&cond) = &bndlo; &var.up&&setdep$(&&cond) = &bndup; &var.l&&setdep$((&&cond) and (&var.l&&setdep<&bndlo)) = &bndlo; &var.l&&setdep$((&&cond) and (&var.l&&setdep>&bndup)) = &bndup;
$macro load_from_ssp(par,idx,ssp,suxfile)   parameter ssp_&par(*,&&idx); execute_loaddc 'data_witch17/data_&suxfile' ssp_&par; &par(&&idx) = ssp_&par('&ssp',&&idx);
$macro putlog(msg)   put output; put_utility 'log' / &msg; putclose output;
$macro loadpar(par,setdep,default)   prevexecerrors = execerror; last_load_went_wrong=0; execute_load 'data_witch17/results_ssp2_calib', &par; if(execerror gt prevexecerrors, &par&&setdep = &default; execerror = prevexecerrors; last_load_went_wrong=1)
$macro mapn(clt)  map_clt_n(&clt,n)
$macro mapnn(clt)  map_clt_n(&clt,nn)
$macro mapn_th(clt)  (map_clt_n(&clt,n) and (not tfix(t)) and (year(t) le yeoh))
$macro mapn_th1(clt)  (map_clt_n(&clt,n) and (not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh))
$macro mapn_th2(clt)  (map_clt_n(&clt,n) and (not tfix(tp2)) and pre(t,tp1) and pre(tp1,tp2) and (year(t) lt yeoh))
$macro mapn_th1_last(clt)  (map_clt_n(&clt,n) and (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1))))
$macro time_th1_last  (((not tfix(tp1)) and pre(t,tp1) and (year(t) lt yeoh)) or (year(t) eq yeoh and sameas(t,tp1)))
$macro cooprd  (sum(clt$(map_clt_n(clt,n) and rd_cooperation(rd,clt)),1) eq 1)
$macro nocooprd  (sum(clt$(map_clt_n(clt,n) and rd_cooperation(rd,clt)),1) ne 1)
$macro depreciation_rate(tech)  1 - exp( 1 / ( - lifetime(&tech,n) + (0.01/2) * lifetime(&tech,n)**2) )
$macro cobb(out,fac1id,fac1exp,fac2id,fac2exp)   q0(&out,n)*( (&fac1exp/q0(&fac1id,n))**(alpha(&fac1id,n))* (&fac2exp/q0(&fac2id,n))**(alpha(&fac2id,n)) )
$macro ces(out,fac1id,fac1exp,fac2id,fac2exp)   q0(&out,n)*( alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))**rho(&out,t)+ alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n))**rho(&out,t) )**(1/rho(&out,t))
$macro ces3(out,fac1id,fac1exp,fac2id,fac2exp,fac3id,fac3exp)   q0(&out,n)*( alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))**rho(&out,t)+ alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n))**rho(&out,t)+ alpha(&fac3id,n)*(&fac3exp/q0(&fac3id,n))**rho(&out,t) )**(1/rho(&out,t))
$macro lin(out,fac1id,fac1exp,fac2id,fac2exp)   q0(&out,n)*( alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))+ alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n)) )
$macro lin3(out,fac1id,fac1exp,fac2id,fac2exp,fac3id,fac3exp)   q0(&out,n)*( alpha(&fac1id,n)*(&fac1exp/q0(&fac1id,n))+ alpha(&fac2id,n)*(&fac2exp/q0(&fac2id,n))+ alpha(&fac3id,n)*(&fac3exp/q0(&fac3id,n)) )
$macro savereport_with_loadhandle(clt)   witch_&clt.handle = remh('&clt'); execute_loadhandle witch_&clt; savereport(&clt)
$macro checkforproblems(clt)   if((solrep(&clt,'solvestat') ne 1) or (solrep(&clt,'modelstat') ne 2), cproblem(&clt) = yes; else cproblem(&clt) = no;)
$macro freezevar(name,idx)   &name.fx&&idx = &name.l&&idx;
$macro nullvar(name,idx)   &name.fx&&idx = 0;
$macro loadfix(name,idx,type)   &type FIX&name&&idx; execute_load '%fixgdx%.gdx',FIX&name=&name;
$macro tfixvar(name,idx)   loadfix(name,idx,variable) &name.fx&&idx$tfix(t) = FIX&name.l&&idx; &name.l&&idx$tfix(t) = FIX&name.l&&idx;
$macro tfix1var(name,idx)   loadfix(name,idx,variable) loop((t,tfix(tp1))$pre(t,tp1), &name.fx&&idx = FIX&name.l&&idx; &name.l&&idx = FIX&name.l&&idx; );
$macro tfixpar(name,idx)   loadfix(name,idx,parameter) &name&&idx$tfix(t) = FIX&name&&idx;
$macro sum_oilg(expr)  (sum(oilgg$map_oilgrade(oilg,oilgg), &expr))
$macro trbio_ratio(t)   min(1,trbio_ctr('beta',n)*log(mer2ppp(&t,n)*1e6*Q.l('y',&t,n)/l(&t,n))+trbio_ctr('alpha',n))
$macro forsameclt(action,clt)   if(sameas(&clt,'c_brazil'), &action(c_brazil)); if(sameas(&clt,'c_canada'), &action(c_canada)); if(sameas(&clt,'c_china'), &action(c_china)); if(sameas(&clt,'c_europe'), &action(c_europe)); if(sameas(&clt,'c_india'), &action(c_india)); if(sameas(&clt,'c_indonesia'), &action(c_indonesia)); if(sameas(&clt,'c_jpnkor'), &action(c_jpnkor)); if(sameas(&clt,'c_laca'), &action(c_laca)); if(sameas(&clt,'c_mena'), &action(c_mena)); if(sameas(&clt,'c_mexico'), &action(c_mexico)); if(sameas(&clt,'c_oceania'), &action(c_oceania)); if(sameas(&clt,'c_sasia'), &action(c_sasia)); if(sameas(&clt,'c_seasia'), &action(c_seasia)); if(sameas(&clt,'c_southafrica'), &action(c_southafrica)); if(sameas(&clt,'c_ssa'), &action(c_ssa)); if(sameas(&clt,'c_te'), &action(c_te)); if(sameas(&clt,'c_usa'), &action(c_usa)); ;
$macro launchsolve(clt)   solve witch_&clt maximizing OBJADMM using nlp; if((witch_&clt.solvelink eq 6) or (witch_&clt.solvelink eq 3), remh('&clt') = witch_&clt.handle; else savereport(&clt); checkforproblems('&clt'));
$macro seqsolve(clt)   witch_&clt.solvelink = 0; launchsolve(&clt); witch_&clt.solvelink = 3;
---- End of Macro List
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 2
WITCH 5.2.0
Include File Summary


   SEQ   GLOBAL TYPE      PARENT   LOCAL  FILENAME

     1        1 INPUT          0       0  C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\run_witch.gms
     2       28 IF EXIST       1      28  C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\n.inc
     3       77 IF EXIST       1      94  C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_calib.gdx
     4      106 BATINCLUDE     1     127  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
     5      115 BATINCLUDE     4       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
     6      167 BATINCLUDE     4      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
     7      194 BATINCLUDE     4      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
     8      201 INCLUDE        7       7  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\regions.conf
     9      206 BATINCLUDE     4      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
    10      217 INCLUDE        9      11  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\noncoop.conf
    11      230 BATINCLUDE     4      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
    12      246 BATINCLUDE     4      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
    13      256 BATINCLUDE     4      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
    14      262 BATINCLUDE     4      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
    15      271 BATINCLUDE     4      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
    16      280 BATINCLUDE     4      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
    17      307 BATINCLUDE     4      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
    18      313 BATINCLUDE     4      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
    19      319 BATINCLUDE     4      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
    20      336 BATINCLUDE     4      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
    21      342 BATINCLUDE     4      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
    22      360 BATINCLUDE     4      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
    23      377 BATINCLUDE     4      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
    24      392 BATINCLUDE     4      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
    25      398 BATINCLUDE     4      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
    26      405 BATINCLUDE     4      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
    27      412 BATINCLUDE     4      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
    28      430 BATINCLUDE     4      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
    29      448 BATINCLUDE     4      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
    30      456 BATINCLUDE     4      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
    31      470 BATINCLUDE     4      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
    32      477 BATINCLUDE     4      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
    33      495 BATINCLUDE     4      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
    34      504 BATINCLUDE     4      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
    35      521 BATINCLUDE     4      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
    36      541 BATINCLUDE     4      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
    37      564 BATINCLUDE     4      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
    38      590 BATINCLUDE     4      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
    39      602 BATINCLUDE     4      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
    40      614 BATINCLUDE     4      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
    41      630 INCLUDE        1     128  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\macros.gms
    42      809 BATINCLUDE     1     129  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
    43      818 BATINCLUDE    42       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
    44      854 BATINCLUDE    42      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
    45      884 INCLUDE       44      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\time.inc
    46     1552 BATINCLUDE    42      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
    47     1560 INCLUDE       46      13  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\n.inc
    48     1580 INCLUDE       46      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\regions.inc
    49     2100 BATINCLUDE    42      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
    50     2110 INCLUDE       49      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\noncoop.inc
    51     2158 BATINCLUDE    42      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
    52     2172 BATINCLUDE    42      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
    53     2215 BATINCLUDE    42      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
    54     2352 BATINCLUDE    42      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
    55     2399 BATINCLUDE    42      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
    56     2424 BATINCLUDE    42      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
    57     2468 BATINCLUDE    42      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
    58     2482 BATINCLUDE    42      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
    59     2515 BATINCLUDE    42      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
    60     2545 BATINCLUDE    42      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
    61     2607 BATINCLUDE    42      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
    62     2647 BATINCLUDE    42      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
    63     2713 BATINCLUDE    42      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
    64     2752 BATINCLUDE    42      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
    65     2823 BATINCLUDE    42      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
    66     2847 BATINCLUDE    42      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
    67     2879 BATINCLUDE    42      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
    68     2989 BATINCLUDE    42      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
    69     3015 BATINCLUDE    42      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
    70     3063 BATINCLUDE    42      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
    71     3122 BATINCLUDE    42      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
    72     3147 BATINCLUDE    42      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
    73     3185 BATINCLUDE    42      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
    74     3191 BATINCLUDE    42      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
    75     3206 BATINCLUDE    42      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
    76     3223 BATINCLUDE    42      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
    77     3275 BATINCLUDE    42      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
    78     3298 BATINCLUDE    42      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
    79     3357 BATINCLUDE    42      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
    80     3413 BATINCLUDE    42      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
    81     3449 BATINCLUDE     1     130  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
    82     3458 BATINCLUDE    81       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
    83     3489 BATINCLUDE    81      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
    84     3506 BATINCLUDE    81      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
    85     3512 BATINCLUDE    81      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
    86     3523 BATINCLUDE    81      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
    87     3542 BATINCLUDE    81      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
    88     3560 GDXIN         87      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_calib.gdx
    89     3578 GDXIN         87      69  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
    90     3606 GDXIN         87      97  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_baseline.gdx
    91     3618 GDXIN         87     109  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_tfp_ssp2.gdx
    92     3627 BATINCLUDE    81      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
    93     3648 GDXIN         92     152  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_calib.gdx
    94     3653 GDXIN         92     157  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
    95     3660 GDXIN         92     164  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_core_energy.gdx
    96     3713 BATINCLUDE    81      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
    97     3723 GDXIN         96      48  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_core_emissions.gdx
    98     3732 GDXIN         96      57  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
    99     3750 BATINCLUDE    81      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   100     3790 BATINCLUDE    81      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   101     3816 BATINCLUDE    81      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   102     3831 BATINCLUDE    81      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   103     3838 GDXIN        102      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_hydropower.gdx
   104     3845 BATINCLUDE    81      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   105     3927 GDXIN        104     109  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_systint.gdx
   106     3958 BATINCLUDE    81      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   107     3965 GDXIN        106      63  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_nuclear.gdx
   108     3982 BATINCLUDE    81      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   109     3991 GDXIN        108      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
   110     3999 GDXIN        108      59  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_ghg.gdx
   111     4032 BATINCLUDE    81      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   112     4053 BATINCLUDE    81      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   113     4060 GDXIN        112      49  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_landuse.gdx
   114     4070 GDXIN        112      59  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
   115     4088 BATINCLUDE    81      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   116     4095 GDXIN        115      72  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_elbio.gdx
   117     4102 BATINCLUDE    81      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   118     4110 GDXIN        117      25  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_trbiofuel.gdx
   119     4121 BATINCLUDE    81      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   120     4150 BATINCLUDE    81      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   121     4157 GDXIN        120     121  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_ccs.gdx
   122     4230 BATINCLUDE    81      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   123     4245 GDXIN        122      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_nelcoal.gdx
   124     4258 BATINCLUDE    81      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   125     4271 GDXIN        124      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_wind.gdx
   126     4296 GDXIN        124      78  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
   127     4334 BATINCLUDE    81      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   128     4342 GDXIN        127      71  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_solar.gdx
   129     4387 GDXIN        127     116  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
   130     4409 BATINCLUDE    81      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   131     4429 BATINCLUDE    81      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   132     4438 GDXIN        131      60  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_oil.gdx
   133     4463 GDXIN        131      85  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_validation.gdx
   134     4472 BATINCLUDE    81      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   135     4478 BATINCLUDE    81      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   136     4485 GDXIN        135      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_gas.gdx
   137     4500 BATINCLUDE    81      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   138     4507 GDXIN        137      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_coal.gdx
   139     4527 BATINCLUDE    81      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   140     4546 GDXIN        139      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_climate.gdx
   141     4589 BATINCLUDE    81      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   142     4599 GDXIN        141      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_damage.gdx
   143     4635 BATINCLUDE    81      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   144     4642 GDXIN        143      66  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_transport.gdx
   145     4814 GDXIN        143     283  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_battery.gdx
   146     4822 BATINCLUDE    81      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   147     4828 GDXIN        146      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_transport_freight.gdx
   148     4899 BATINCLUDE    81      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   149     4908 GDXIN        148      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_mod_trbiomass.gdx
   150     4936 BATINCLUDE     1     131  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   151     4945 BATINCLUDE   150       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   152     4953 BATINCLUDE   150      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   153     4964 BATINCLUDE   150      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   154     4970 BATINCLUDE   150      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   155     4981 BATINCLUDE   150      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   156     4987 BATINCLUDE   150      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   157     4997 BATINCLUDE   150      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   158     5007 GDXIN        157     221  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_tfp_ssp2.gdx
   159     5023 GDXIN        157     237  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\data_witch17\data_tfp_ssp2.gdx
   160     5037 BATINCLUDE   150      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   161     5051 BATINCLUDE   150      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   162     5060 BATINCLUDE   150      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   163     5081 BATINCLUDE   150      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   164     5087 BATINCLUDE   150      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   165     5093 BATINCLUDE   150      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   166     5108 BATINCLUDE   150      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   167     5114 BATINCLUDE   150      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   168     5122 BATINCLUDE   150      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   169     5130 BATINCLUDE   150      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   170     5136 BATINCLUDE   150      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   171     5142 BATINCLUDE   150      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   172     5149 BATINCLUDE   150      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   173     5156 BATINCLUDE   150      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   174     5163 BATINCLUDE   150      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   175     5177 BATINCLUDE   150      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   176     5185 BATINCLUDE   150      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   177     5193 BATINCLUDE   150      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   178     5200 BATINCLUDE   150      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   179     5208 BATINCLUDE   150      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   180     5214 BATINCLUDE   150      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   181     5220 BATINCLUDE   150      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   182     5228 BATINCLUDE   150      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   183     5246 BATINCLUDE   150      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   184     5255 BATINCLUDE   150      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   185     5261 BATINCLUDE   150      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   186     5273 BATINCLUDE   150      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   187     5289 BATINCLUDE     1     132  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   188     5298 BATINCLUDE   187       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   189     5312 BATINCLUDE   187      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   190     5323 BATINCLUDE   187      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   191     5329 BATINCLUDE   187      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   192     5340 BATINCLUDE   187      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   193     5358 BATINCLUDE   187      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   194     5374 BATINCLUDE   187      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   195     5403 BATINCLUDE   187      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   196     5412 BATINCLUDE   187      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   197     5440 BATINCLUDE   187      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   198     5461 BATINCLUDE   187      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   199     5471 BATINCLUDE   187      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   200     5477 BATINCLUDE   187      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   201     5487 BATINCLUDE   187      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   202     5493 BATINCLUDE   187      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   203     5507 BATINCLUDE   187      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   204     5515 BATINCLUDE   187      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   205     5521 BATINCLUDE   187      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   206     5527 BATINCLUDE   187      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   207     5534 BATINCLUDE   187      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   208     5541 BATINCLUDE   187      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   209     5576 BATINCLUDE   187      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   210     5595 BATINCLUDE   187      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   211     5621 BATINCLUDE   187      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   212     5646 BATINCLUDE   187      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   213     5706 BATINCLUDE   187      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   214     5736 BATINCLUDE   187      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   215     5755 BATINCLUDE   187      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   216     5761 BATINCLUDE   187      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   217     5776 BATINCLUDE   187      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   218     5800 BATINCLUDE   187      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   219     5816 BATINCLUDE   187      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   220     5885 BATINCLUDE   187      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   221     5924 BATINCLUDE   187      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   222     5946 BATINCLUDE     1     133  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   223     5955 BATINCLUDE   222       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   224     5968 BATINCLUDE   222      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   225     5986 BATINCLUDE   222      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   226     5992 BATINCLUDE   222      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   227     6003 BATINCLUDE   222      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   228     6014 BATINCLUDE   222      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   229     6050 BATINCLUDE   222      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   230     6148 BATINCLUDE   222      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   231     6187 BATINCLUDE   222      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   232     6218 BATINCLUDE   222      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   233     6239 BATINCLUDE   222      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   234     6245 BATINCLUDE   222      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   235     6272 BATINCLUDE   222      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   236     6296 BATINCLUDE   222      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   237     6317 BATINCLUDE   222      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   238     6341 BATINCLUDE   222      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   239     6358 BATINCLUDE   222      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   240     6387 BATINCLUDE   222      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   241     6404 BATINCLUDE   222      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   242     6420 BATINCLUDE   222      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   243     6448 BATINCLUDE   222      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   244     6478 BATINCLUDE   222      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   245     6515 BATINCLUDE   222      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   246     6570 BATINCLUDE   222      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   247     6627 BATINCLUDE   222      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   248     6634 BATINCLUDE   222      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   249     6689 BATINCLUDE   222      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   250     6695 BATINCLUDE   222      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   251     6707 BATINCLUDE   222      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   252     6721 BATINCLUDE   222      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   253     6760 BATINCLUDE   222      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   254     6784 BATINCLUDE   222      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   255     6862 BATINCLUDE   222      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   256     6894 BATINCLUDE   222      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   257     6915 BATINCLUDE     1     134  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   258     6924 BATINCLUDE   257       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   259     6937 BATINCLUDE   257      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   260     6948 BATINCLUDE   257      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   261     6954 BATINCLUDE   257      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   262     6965 BATINCLUDE   257      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   263     6971 BATINCLUDE   257      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   264     6981 BATINCLUDE   257      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   265     6987 BATINCLUDE   257      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   266     6996 BATINCLUDE   257      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   267     7005 BATINCLUDE   257      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   268     7053 BATINCLUDE   257      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   269     7059 BATINCLUDE   257      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   270     7065 BATINCLUDE   257      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   271     7075 BATINCLUDE   257      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   272     7081 BATINCLUDE   257      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   273     7089 BATINCLUDE   257      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   274     7097 BATINCLUDE   257      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   275     7108 BATINCLUDE   257      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   276     7114 BATINCLUDE   257      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   277     7121 BATINCLUDE   257      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   278     7128 BATINCLUDE   257      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   279     7135 BATINCLUDE   257      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   280     7144 BATINCLUDE   257      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   281     7152 BATINCLUDE   257      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   282     7160 BATINCLUDE   257      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   283     7167 BATINCLUDE   257      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   284     7175 BATINCLUDE   257      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   285     7181 BATINCLUDE   257      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   286     7187 BATINCLUDE   257      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   287     7195 BATINCLUDE   257      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   288     7213 BATINCLUDE   257      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   289     7222 BATINCLUDE   257      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   290     7228 BATINCLUDE   257      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   291     7246 BATINCLUDE   257      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   292     7266 INCLUDE        1     139  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algorithm.gms
   293     7275 BATINCLUDE   292       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\solve.gms
   294     7339 BATINCLUDE   292      11  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
   295     7424 BATINCLUDE   294     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
   296     7469 BATINCLUDE   292      13  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
   297     7542 BATINCLUDE   292      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\model.gms
   298     7551 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   299     7560 BATINCLUDE   298       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   300     7573 BATINCLUDE   298      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   301     7584 BATINCLUDE   298      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   302     7590 BATINCLUDE   298      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   303     7601 BATINCLUDE   298      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   304     7612 BATINCLUDE   298      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   305     7630 BATINCLUDE   298      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   306     7657 BATINCLUDE   298      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   307     7677 BATINCLUDE   298      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   308     7696 BATINCLUDE   298      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   309     7717 BATINCLUDE   298      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   310     7723 BATINCLUDE   298      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   311     7729 BATINCLUDE   298      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   312     7749 BATINCLUDE   298      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   313     7755 BATINCLUDE   298      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   314     7770 BATINCLUDE   298      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   315     7783 BATINCLUDE   298      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   316     7794 BATINCLUDE   298      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   317     7800 BATINCLUDE   298      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   318     7807 BATINCLUDE   298      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   319     7820 BATINCLUDE   298      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   320     7836 BATINCLUDE   298      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   321     7851 BATINCLUDE   298      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   322     7872 BATINCLUDE   298      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   323     7895 BATINCLUDE   298      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   324     7902 BATINCLUDE   298      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   325     7922 BATINCLUDE   298      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   326     7928 BATINCLUDE   298      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   327     7934 BATINCLUDE   298      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   328     7942 BATINCLUDE   298      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   329     7965 BATINCLUDE   298      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   330     7979 BATINCLUDE   298      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   331     7997 BATINCLUDE   298      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   332     8019 BATINCLUDE   298      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   333     8037 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   334     8046 BATINCLUDE   333       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   335     8082 BATINCLUDE   333      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   336     8093 BATINCLUDE   333      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   337     8099 BATINCLUDE   333      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   338     8110 BATINCLUDE   333      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   339     8149 BATINCLUDE   333      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   340     8207 BATINCLUDE   333      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   341     8311 BATINCLUDE   333      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   342     8351 BATINCLUDE   333      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   343     8401 BATINCLUDE   333      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   344     8422 BATINCLUDE   333      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   345     8428 BATINCLUDE   333      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   346     8434 BATINCLUDE   333      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   347     8505 BATINCLUDE   333      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   348     8511 BATINCLUDE   333      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   349     8576 BATINCLUDE   333      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   350     8590 BATINCLUDE   333      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   351     8609 BATINCLUDE   333      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   352     8615 BATINCLUDE   333      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   353     8622 BATINCLUDE   333      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   354     8641 BATINCLUDE   333      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   355     8674 BATINCLUDE   333      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   356     8708 BATINCLUDE   333      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   357     8761 BATINCLUDE   333      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   358     8822 BATINCLUDE   333      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   359     8829 BATINCLUDE   333      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   360     8873 BATINCLUDE   333      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   361     8879 BATINCLUDE   333      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   362     8885 BATINCLUDE   333      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   363     8893 BATINCLUDE   333      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   364     8916 BATINCLUDE   333      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   365     8930 BATINCLUDE   333      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   366     8968 BATINCLUDE   333      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   367     9007 BATINCLUDE   333      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   368     9026 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   369     9035 BATINCLUDE   368       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   370     9048 BATINCLUDE   368      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   371     9059 BATINCLUDE   368      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   372     9065 BATINCLUDE   368      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   373     9076 BATINCLUDE   368      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   374     9087 BATINCLUDE   368      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   375     9105 BATINCLUDE   368      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   376     9132 BATINCLUDE   368      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   377     9152 BATINCLUDE   368      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   378     9171 BATINCLUDE   368      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   379     9192 BATINCLUDE   368      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   380     9198 BATINCLUDE   368      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   381     9204 BATINCLUDE   368      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   382     9224 BATINCLUDE   368      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   383     9230 BATINCLUDE   368      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   384     9245 BATINCLUDE   368      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   385     9258 BATINCLUDE   368      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   386     9269 BATINCLUDE   368      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   387     9275 BATINCLUDE   368      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   388     9282 BATINCLUDE   368      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   389     9295 BATINCLUDE   368      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   390     9311 BATINCLUDE   368      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   391     9326 BATINCLUDE   368      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   392     9347 BATINCLUDE   368      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   393     9370 BATINCLUDE   368      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   394     9377 BATINCLUDE   368      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   395     9397 BATINCLUDE   368      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   396     9403 BATINCLUDE   368      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   397     9409 BATINCLUDE   368      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   398     9417 BATINCLUDE   368      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   399     9440 BATINCLUDE   368      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   400     9454 BATINCLUDE   368      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   401     9472 BATINCLUDE   368      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   402     9494 BATINCLUDE   368      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   403     9523 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   404     9532 BATINCLUDE   403       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   405     9545 BATINCLUDE   403      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   406     9556 BATINCLUDE   403      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   407     9562 BATINCLUDE   403      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   408     9573 BATINCLUDE   403      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   409     9584 BATINCLUDE   403      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   410     9602 BATINCLUDE   403      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   411     9629 BATINCLUDE   403      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   412     9649 BATINCLUDE   403      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   413     9668 BATINCLUDE   403      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   414     9689 BATINCLUDE   403      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   415     9695 BATINCLUDE   403      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   416     9701 BATINCLUDE   403      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   417     9721 BATINCLUDE   403      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   418     9727 BATINCLUDE   403      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   419     9742 BATINCLUDE   403      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   420     9755 BATINCLUDE   403      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   421     9766 BATINCLUDE   403      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   422     9772 BATINCLUDE   403      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   423     9779 BATINCLUDE   403      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   424     9792 BATINCLUDE   403      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   425     9808 BATINCLUDE   403      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   426     9823 BATINCLUDE   403      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   427     9844 BATINCLUDE   403      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   428     9867 BATINCLUDE   403      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   429     9874 BATINCLUDE   403      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   430     9894 BATINCLUDE   403      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   431     9900 BATINCLUDE   403      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   432     9906 BATINCLUDE   403      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   433     9914 BATINCLUDE   403      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   434     9937 BATINCLUDE   403      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   435     9951 BATINCLUDE   403      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   436     9969 BATINCLUDE   403      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   437     9991 BATINCLUDE   403      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   438    10009 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   439    10018 BATINCLUDE   438       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   440    10054 BATINCLUDE   438      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   441    10065 BATINCLUDE   438      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   442    10071 BATINCLUDE   438      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   443    10082 BATINCLUDE   438      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   444    10121 BATINCLUDE   438      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   445    10179 BATINCLUDE   438      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   446    10283 BATINCLUDE   438      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   447    10323 BATINCLUDE   438      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   448    10373 BATINCLUDE   438      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   449    10394 BATINCLUDE   438      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   450    10400 BATINCLUDE   438      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   451    10406 BATINCLUDE   438      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   452    10477 BATINCLUDE   438      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   453    10483 BATINCLUDE   438      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   454    10548 BATINCLUDE   438      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   455    10562 BATINCLUDE   438      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   456    10581 BATINCLUDE   438      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   457    10587 BATINCLUDE   438      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   458    10594 BATINCLUDE   438      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   459    10613 BATINCLUDE   438      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   460    10646 BATINCLUDE   438      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   461    10680 BATINCLUDE   438      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   462    10733 BATINCLUDE   438      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   463    10794 BATINCLUDE   438      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   464    10801 BATINCLUDE   438      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   465    10845 BATINCLUDE   438      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   466    10851 BATINCLUDE   438      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   467    10857 BATINCLUDE   438      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   468    10865 BATINCLUDE   438      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   469    10888 BATINCLUDE   438      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   470    10902 BATINCLUDE   438      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   471    10940 BATINCLUDE   438      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   472    10979 BATINCLUDE   438      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   473    10998 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   474    11007 BATINCLUDE   473       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   475    11020 BATINCLUDE   473      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   476    11031 BATINCLUDE   473      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   477    11037 BATINCLUDE   473      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   478    11048 BATINCLUDE   473      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   479    11059 BATINCLUDE   473      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   480    11077 BATINCLUDE   473      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   481    11104 BATINCLUDE   473      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   482    11124 BATINCLUDE   473      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   483    11143 BATINCLUDE   473      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   484    11164 BATINCLUDE   473      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   485    11170 BATINCLUDE   473      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   486    11176 BATINCLUDE   473      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   487    11196 BATINCLUDE   473      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   488    11202 BATINCLUDE   473      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   489    11217 BATINCLUDE   473      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   490    11230 BATINCLUDE   473      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   491    11241 BATINCLUDE   473      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   492    11247 BATINCLUDE   473      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   493    11254 BATINCLUDE   473      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   494    11267 BATINCLUDE   473      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   495    11283 BATINCLUDE   473      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   496    11298 BATINCLUDE   473      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   497    11319 BATINCLUDE   473      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   498    11342 BATINCLUDE   473      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   499    11349 BATINCLUDE   473      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   500    11369 BATINCLUDE   473      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   501    11375 BATINCLUDE   473      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   502    11381 BATINCLUDE   473      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   503    11389 BATINCLUDE   473      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   504    11412 BATINCLUDE   473      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   505    11426 BATINCLUDE   473      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   506    11444 BATINCLUDE   473      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   507    11466 BATINCLUDE   473      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   508    11495 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   509    11504 BATINCLUDE   508       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   510    11517 BATINCLUDE   508      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   511    11528 BATINCLUDE   508      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   512    11534 BATINCLUDE   508      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   513    11545 BATINCLUDE   508      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   514    11556 BATINCLUDE   508      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   515    11574 BATINCLUDE   508      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   516    11601 BATINCLUDE   508      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   517    11621 BATINCLUDE   508      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   518    11640 BATINCLUDE   508      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   519    11661 BATINCLUDE   508      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   520    11667 BATINCLUDE   508      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   521    11673 BATINCLUDE   508      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   522    11693 BATINCLUDE   508      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   523    11699 BATINCLUDE   508      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   524    11714 BATINCLUDE   508      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   525    11727 BATINCLUDE   508      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   526    11738 BATINCLUDE   508      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   527    11744 BATINCLUDE   508      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   528    11751 BATINCLUDE   508      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   529    11764 BATINCLUDE   508      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   530    11780 BATINCLUDE   508      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   531    11795 BATINCLUDE   508      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   532    11816 BATINCLUDE   508      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   533    11839 BATINCLUDE   508      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   534    11846 BATINCLUDE   508      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   535    11866 BATINCLUDE   508      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   536    11872 BATINCLUDE   508      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   537    11878 BATINCLUDE   508      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   538    11886 BATINCLUDE   508      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   539    11909 BATINCLUDE   508      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   540    11923 BATINCLUDE   508      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   541    11941 BATINCLUDE   508      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   542    11963 BATINCLUDE   508      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   543    11981 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   544    11990 BATINCLUDE   543       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   545    12026 BATINCLUDE   543      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   546    12037 BATINCLUDE   543      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   547    12043 BATINCLUDE   543      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   548    12054 BATINCLUDE   543      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   549    12093 BATINCLUDE   543      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   550    12151 BATINCLUDE   543      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   551    12255 BATINCLUDE   543      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   552    12295 BATINCLUDE   543      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   553    12345 BATINCLUDE   543      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   554    12366 BATINCLUDE   543      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   555    12372 BATINCLUDE   543      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   556    12378 BATINCLUDE   543      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   557    12449 BATINCLUDE   543      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   558    12455 BATINCLUDE   543      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   559    12520 BATINCLUDE   543      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   560    12534 BATINCLUDE   543      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   561    12553 BATINCLUDE   543      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   562    12559 BATINCLUDE   543      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   563    12566 BATINCLUDE   543      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   564    12585 BATINCLUDE   543      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   565    12618 BATINCLUDE   543      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   566    12652 BATINCLUDE   543      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   567    12705 BATINCLUDE   543      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   568    12766 BATINCLUDE   543      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   569    12773 BATINCLUDE   543      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   570    12817 BATINCLUDE   543      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   571    12823 BATINCLUDE   543      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   572    12829 BATINCLUDE   543      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   573    12837 BATINCLUDE   543      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   574    12860 BATINCLUDE   543      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   575    12874 BATINCLUDE   543      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   576    12912 BATINCLUDE   543      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   577    12951 BATINCLUDE   543      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   578    12970 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   579    12979 BATINCLUDE   578       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   580    12992 BATINCLUDE   578      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   581    13003 BATINCLUDE   578      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   582    13009 BATINCLUDE   578      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   583    13020 BATINCLUDE   578      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   584    13031 BATINCLUDE   578      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   585    13049 BATINCLUDE   578      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   586    13076 BATINCLUDE   578      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   587    13096 BATINCLUDE   578      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   588    13115 BATINCLUDE   578      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   589    13136 BATINCLUDE   578      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   590    13142 BATINCLUDE   578      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   591    13148 BATINCLUDE   578      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   592    13168 BATINCLUDE   578      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   593    13174 BATINCLUDE   578      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   594    13189 BATINCLUDE   578      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   595    13202 BATINCLUDE   578      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   596    13213 BATINCLUDE   578      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   597    13219 BATINCLUDE   578      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   598    13226 BATINCLUDE   578      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   599    13239 BATINCLUDE   578      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   600    13255 BATINCLUDE   578      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   601    13270 BATINCLUDE   578      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   602    13291 BATINCLUDE   578      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   603    13314 BATINCLUDE   578      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   604    13321 BATINCLUDE   578      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   605    13341 BATINCLUDE   578      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   606    13347 BATINCLUDE   578      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   607    13353 BATINCLUDE   578      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   608    13361 BATINCLUDE   578      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   609    13384 BATINCLUDE   578      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   610    13398 BATINCLUDE   578      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   611    13416 BATINCLUDE   578      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   612    13438 BATINCLUDE   578      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   613    13467 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   614    13476 BATINCLUDE   613       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   615    13489 BATINCLUDE   613      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   616    13500 BATINCLUDE   613      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   617    13506 BATINCLUDE   613      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   618    13517 BATINCLUDE   613      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   619    13528 BATINCLUDE   613      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   620    13546 BATINCLUDE   613      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   621    13573 BATINCLUDE   613      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   622    13593 BATINCLUDE   613      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   623    13612 BATINCLUDE   613      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   624    13633 BATINCLUDE   613      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   625    13639 BATINCLUDE   613      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   626    13645 BATINCLUDE   613      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   627    13665 BATINCLUDE   613      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   628    13671 BATINCLUDE   613      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   629    13686 BATINCLUDE   613      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   630    13699 BATINCLUDE   613      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   631    13710 BATINCLUDE   613      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   632    13716 BATINCLUDE   613      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   633    13723 BATINCLUDE   613      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   634    13736 BATINCLUDE   613      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   635    13752 BATINCLUDE   613      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   636    13767 BATINCLUDE   613      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   637    13788 BATINCLUDE   613      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   638    13811 BATINCLUDE   613      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   639    13818 BATINCLUDE   613      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   640    13838 BATINCLUDE   613      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   641    13844 BATINCLUDE   613      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   642    13850 BATINCLUDE   613      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   643    13858 BATINCLUDE   613      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   644    13881 BATINCLUDE   613      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   645    13895 BATINCLUDE   613      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   646    13913 BATINCLUDE   613      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   647    13935 BATINCLUDE   613      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   648    13953 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   649    13962 BATINCLUDE   648       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   650    13998 BATINCLUDE   648      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   651    14009 BATINCLUDE   648      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   652    14015 BATINCLUDE   648      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   653    14026 BATINCLUDE   648      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   654    14065 BATINCLUDE   648      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   655    14123 BATINCLUDE   648      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   656    14227 BATINCLUDE   648      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   657    14267 BATINCLUDE   648      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   658    14317 BATINCLUDE   648      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   659    14338 BATINCLUDE   648      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   660    14344 BATINCLUDE   648      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   661    14350 BATINCLUDE   648      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   662    14421 BATINCLUDE   648      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   663    14427 BATINCLUDE   648      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   664    14492 BATINCLUDE   648      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   665    14506 BATINCLUDE   648      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   666    14525 BATINCLUDE   648      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   667    14531 BATINCLUDE   648      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   668    14538 BATINCLUDE   648      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   669    14557 BATINCLUDE   648      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   670    14590 BATINCLUDE   648      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   671    14624 BATINCLUDE   648      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   672    14677 BATINCLUDE   648      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   673    14738 BATINCLUDE   648      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   674    14745 BATINCLUDE   648      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   675    14789 BATINCLUDE   648      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   676    14795 BATINCLUDE   648      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   677    14801 BATINCLUDE   648      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   678    14809 BATINCLUDE   648      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   679    14832 BATINCLUDE   648      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   680    14846 BATINCLUDE   648      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   681    14884 BATINCLUDE   648      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   682    14923 BATINCLUDE   648      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   683    14942 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   684    14951 BATINCLUDE   683       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   685    14964 BATINCLUDE   683      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   686    14975 BATINCLUDE   683      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   687    14981 BATINCLUDE   683      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   688    14992 BATINCLUDE   683      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   689    15003 BATINCLUDE   683      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   690    15021 BATINCLUDE   683      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   691    15048 BATINCLUDE   683      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   692    15068 BATINCLUDE   683      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   693    15087 BATINCLUDE   683      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   694    15108 BATINCLUDE   683      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   695    15114 BATINCLUDE   683      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   696    15120 BATINCLUDE   683      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   697    15140 BATINCLUDE   683      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   698    15146 BATINCLUDE   683      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   699    15161 BATINCLUDE   683      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   700    15174 BATINCLUDE   683      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   701    15185 BATINCLUDE   683      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   702    15191 BATINCLUDE   683      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   703    15198 BATINCLUDE   683      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   704    15211 BATINCLUDE   683      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   705    15227 BATINCLUDE   683      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   706    15242 BATINCLUDE   683      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   707    15263 BATINCLUDE   683      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   708    15286 BATINCLUDE   683      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   709    15293 BATINCLUDE   683      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   710    15313 BATINCLUDE   683      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   711    15319 BATINCLUDE   683      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   712    15325 BATINCLUDE   683      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   713    15333 BATINCLUDE   683      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   714    15356 BATINCLUDE   683      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   715    15370 BATINCLUDE   683      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   716    15388 BATINCLUDE   683      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   717    15410 BATINCLUDE   683      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   718    15439 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   719    15448 BATINCLUDE   718       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   720    15461 BATINCLUDE   718      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   721    15472 BATINCLUDE   718      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   722    15478 BATINCLUDE   718      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   723    15489 BATINCLUDE   718      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   724    15500 BATINCLUDE   718      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   725    15518 BATINCLUDE   718      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   726    15545 BATINCLUDE   718      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   727    15565 BATINCLUDE   718      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   728    15584 BATINCLUDE   718      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   729    15605 BATINCLUDE   718      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   730    15611 BATINCLUDE   718      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   731    15617 BATINCLUDE   718      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   732    15637 BATINCLUDE   718      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   733    15643 BATINCLUDE   718      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   734    15658 BATINCLUDE   718      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   735    15671 BATINCLUDE   718      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   736    15682 BATINCLUDE   718      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   737    15688 BATINCLUDE   718      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   738    15695 BATINCLUDE   718      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   739    15708 BATINCLUDE   718      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   740    15724 BATINCLUDE   718      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   741    15739 BATINCLUDE   718      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   742    15760 BATINCLUDE   718      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   743    15783 BATINCLUDE   718      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   744    15790 BATINCLUDE   718      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   745    15810 BATINCLUDE   718      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   746    15816 BATINCLUDE   718      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   747    15822 BATINCLUDE   718      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   748    15830 BATINCLUDE   718      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   749    15853 BATINCLUDE   718      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   750    15867 BATINCLUDE   718      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   751    15885 BATINCLUDE   718      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   752    15907 BATINCLUDE   718      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   753    15925 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   754    15934 BATINCLUDE   753       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   755    15970 BATINCLUDE   753      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   756    15981 BATINCLUDE   753      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   757    15987 BATINCLUDE   753      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   758    15998 BATINCLUDE   753      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   759    16037 BATINCLUDE   753      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   760    16095 BATINCLUDE   753      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   761    16199 BATINCLUDE   753      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   762    16239 BATINCLUDE   753      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   763    16289 BATINCLUDE   753      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   764    16310 BATINCLUDE   753      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   765    16316 BATINCLUDE   753      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   766    16322 BATINCLUDE   753      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   767    16393 BATINCLUDE   753      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   768    16399 BATINCLUDE   753      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   769    16464 BATINCLUDE   753      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   770    16478 BATINCLUDE   753      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   771    16497 BATINCLUDE   753      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   772    16503 BATINCLUDE   753      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   773    16510 BATINCLUDE   753      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   774    16529 BATINCLUDE   753      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   775    16562 BATINCLUDE   753      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   776    16596 BATINCLUDE   753      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   777    16649 BATINCLUDE   753      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   778    16710 BATINCLUDE   753      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   779    16717 BATINCLUDE   753      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   780    16761 BATINCLUDE   753      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   781    16767 BATINCLUDE   753      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   782    16773 BATINCLUDE   753      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   783    16781 BATINCLUDE   753      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   784    16804 BATINCLUDE   753      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   785    16818 BATINCLUDE   753      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   786    16856 BATINCLUDE   753      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   787    16895 BATINCLUDE   753      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   788    16914 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   789    16923 BATINCLUDE   788       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   790    16936 BATINCLUDE   788      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   791    16947 BATINCLUDE   788      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   792    16953 BATINCLUDE   788      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   793    16964 BATINCLUDE   788      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   794    16975 BATINCLUDE   788      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   795    16993 BATINCLUDE   788      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   796    17020 BATINCLUDE   788      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   797    17040 BATINCLUDE   788      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   798    17059 BATINCLUDE   788      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   799    17080 BATINCLUDE   788      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   800    17086 BATINCLUDE   788      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   801    17092 BATINCLUDE   788      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   802    17112 BATINCLUDE   788      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   803    17118 BATINCLUDE   788      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   804    17133 BATINCLUDE   788      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   805    17146 BATINCLUDE   788      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   806    17157 BATINCLUDE   788      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   807    17163 BATINCLUDE   788      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   808    17170 BATINCLUDE   788      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   809    17183 BATINCLUDE   788      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   810    17199 BATINCLUDE   788      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   811    17214 BATINCLUDE   788      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   812    17235 BATINCLUDE   788      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   813    17258 BATINCLUDE   788      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   814    17265 BATINCLUDE   788      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   815    17285 BATINCLUDE   788      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   816    17291 BATINCLUDE   788      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   817    17297 BATINCLUDE   788      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   818    17305 BATINCLUDE   788      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   819    17328 BATINCLUDE   788      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   820    17342 BATINCLUDE   788      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   821    17360 BATINCLUDE   788      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   822    17382 BATINCLUDE   788      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   823    17411 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   824    17420 BATINCLUDE   823       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   825    17433 BATINCLUDE   823      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   826    17444 BATINCLUDE   823      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   827    17450 BATINCLUDE   823      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   828    17461 BATINCLUDE   823      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   829    17472 BATINCLUDE   823      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   830    17490 BATINCLUDE   823      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   831    17517 BATINCLUDE   823      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   832    17537 BATINCLUDE   823      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   833    17556 BATINCLUDE   823      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   834    17577 BATINCLUDE   823      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   835    17583 BATINCLUDE   823      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   836    17589 BATINCLUDE   823      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   837    17609 BATINCLUDE   823      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   838    17615 BATINCLUDE   823      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   839    17630 BATINCLUDE   823      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   840    17643 BATINCLUDE   823      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   841    17654 BATINCLUDE   823      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   842    17660 BATINCLUDE   823      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   843    17667 BATINCLUDE   823      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   844    17680 BATINCLUDE   823      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   845    17696 BATINCLUDE   823      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   846    17711 BATINCLUDE   823      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   847    17732 BATINCLUDE   823      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   848    17755 BATINCLUDE   823      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   849    17762 BATINCLUDE   823      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   850    17782 BATINCLUDE   823      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   851    17788 BATINCLUDE   823      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   852    17794 BATINCLUDE   823      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   853    17802 BATINCLUDE   823      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   854    17825 BATINCLUDE   823      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   855    17839 BATINCLUDE   823      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   856    17857 BATINCLUDE   823      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   857    17879 BATINCLUDE   823      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   858    17897 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   859    17906 BATINCLUDE   858       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   860    17942 BATINCLUDE   858      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   861    17953 BATINCLUDE   858      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   862    17959 BATINCLUDE   858      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   863    17970 BATINCLUDE   858      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   864    18009 BATINCLUDE   858      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   865    18067 BATINCLUDE   858      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   866    18171 BATINCLUDE   858      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   867    18211 BATINCLUDE   858      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   868    18261 BATINCLUDE   858      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   869    18282 BATINCLUDE   858      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   870    18288 BATINCLUDE   858      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   871    18294 BATINCLUDE   858      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   872    18365 BATINCLUDE   858      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   873    18371 BATINCLUDE   858      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   874    18436 BATINCLUDE   858      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   875    18450 BATINCLUDE   858      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   876    18469 BATINCLUDE   858      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   877    18475 BATINCLUDE   858      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   878    18482 BATINCLUDE   858      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   879    18501 BATINCLUDE   858      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   880    18534 BATINCLUDE   858      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   881    18568 BATINCLUDE   858      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   882    18621 BATINCLUDE   858      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   883    18682 BATINCLUDE   858      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   884    18689 BATINCLUDE   858      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   885    18733 BATINCLUDE   858      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   886    18739 BATINCLUDE   858      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   887    18745 BATINCLUDE   858      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   888    18753 BATINCLUDE   858      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   889    18776 BATINCLUDE   858      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   890    18790 BATINCLUDE   858      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   891    18828 BATINCLUDE   858      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   892    18867 BATINCLUDE   858      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   893    18886 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   894    18895 BATINCLUDE   893       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   895    18908 BATINCLUDE   893      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   896    18919 BATINCLUDE   893      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   897    18925 BATINCLUDE   893      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   898    18936 BATINCLUDE   893      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   899    18947 BATINCLUDE   893      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   900    18965 BATINCLUDE   893      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   901    18992 BATINCLUDE   893      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   902    19012 BATINCLUDE   893      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   903    19031 BATINCLUDE   893      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   904    19052 BATINCLUDE   893      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   905    19058 BATINCLUDE   893      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   906    19064 BATINCLUDE   893      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   907    19084 BATINCLUDE   893      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   908    19090 BATINCLUDE   893      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   909    19105 BATINCLUDE   893      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   910    19118 BATINCLUDE   893      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   911    19129 BATINCLUDE   893      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   912    19135 BATINCLUDE   893      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   913    19142 BATINCLUDE   893      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   914    19155 BATINCLUDE   893      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   915    19171 BATINCLUDE   893      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   916    19186 BATINCLUDE   893      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   917    19207 BATINCLUDE   893      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   918    19230 BATINCLUDE   893      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   919    19237 BATINCLUDE   893      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   920    19257 BATINCLUDE   893      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   921    19263 BATINCLUDE   893      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   922    19269 BATINCLUDE   893      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   923    19277 BATINCLUDE   893      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   924    19300 BATINCLUDE   893      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   925    19314 BATINCLUDE   893      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   926    19332 BATINCLUDE   893      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   927    19354 BATINCLUDE   893      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   928    19383 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   929    19392 BATINCLUDE   928       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   930    19405 BATINCLUDE   928      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   931    19416 BATINCLUDE   928      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   932    19422 BATINCLUDE   928      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   933    19433 BATINCLUDE   928      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   934    19444 BATINCLUDE   928      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   935    19462 BATINCLUDE   928      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   936    19489 BATINCLUDE   928      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   937    19509 BATINCLUDE   928      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   938    19528 BATINCLUDE   928      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   939    19549 BATINCLUDE   928      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   940    19555 BATINCLUDE   928      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   941    19561 BATINCLUDE   928      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   942    19581 BATINCLUDE   928      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   943    19587 BATINCLUDE   928      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   944    19602 BATINCLUDE   928      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   945    19615 BATINCLUDE   928      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   946    19626 BATINCLUDE   928      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   947    19632 BATINCLUDE   928      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   948    19639 BATINCLUDE   928      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   949    19652 BATINCLUDE   928      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   950    19668 BATINCLUDE   928      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   951    19683 BATINCLUDE   928      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   952    19704 BATINCLUDE   928      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   953    19727 BATINCLUDE   928      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   954    19734 BATINCLUDE   928      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   955    19754 BATINCLUDE   928      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   956    19760 BATINCLUDE   928      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   957    19766 BATINCLUDE   928      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   958    19774 BATINCLUDE   928      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   959    19797 BATINCLUDE   928      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   960    19811 BATINCLUDE   928      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   961    19829 BATINCLUDE   928      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   962    19851 BATINCLUDE   928      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   963    19869 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   964    19878 BATINCLUDE   963       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
   965    19914 BATINCLUDE   963      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
   966    19925 BATINCLUDE   963      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
   967    19931 BATINCLUDE   963      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
   968    19942 BATINCLUDE   963      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
   969    19981 BATINCLUDE   963      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
   970    20039 BATINCLUDE   963      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
   971    20143 BATINCLUDE   963      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
   972    20183 BATINCLUDE   963      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
   973    20233 BATINCLUDE   963      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
   974    20254 BATINCLUDE   963      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
   975    20260 BATINCLUDE   963      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
   976    20266 BATINCLUDE   963      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
   977    20337 BATINCLUDE   963      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
   978    20343 BATINCLUDE   963      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
   979    20408 BATINCLUDE   963      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
   980    20422 BATINCLUDE   963      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
   981    20441 BATINCLUDE   963      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
   982    20447 BATINCLUDE   963      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
   983    20454 BATINCLUDE   963      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
   984    20473 BATINCLUDE   963      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
   985    20506 BATINCLUDE   963      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
   986    20540 BATINCLUDE   963      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
   987    20593 BATINCLUDE   963      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
   988    20654 BATINCLUDE   963      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
   989    20661 BATINCLUDE   963      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
   990    20705 BATINCLUDE   963      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
   991    20711 BATINCLUDE   963      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
   992    20717 BATINCLUDE   963      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
   993    20725 BATINCLUDE   963      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
   994    20748 BATINCLUDE   963      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
   995    20762 BATINCLUDE   963      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
   996    20800 BATINCLUDE   963      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
   997    20839 BATINCLUDE   963      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
   998    20858 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
   999    20867 BATINCLUDE   998       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1000    20880 BATINCLUDE   998      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1001    20891 BATINCLUDE   998      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1002    20897 BATINCLUDE   998      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1003    20908 BATINCLUDE   998      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1004    20919 BATINCLUDE   998      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1005    20937 BATINCLUDE   998      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1006    20964 BATINCLUDE   998      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1007    20984 BATINCLUDE   998      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1008    21003 BATINCLUDE   998      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1009    21024 BATINCLUDE   998      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1010    21030 BATINCLUDE   998      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1011    21036 BATINCLUDE   998      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1012    21056 BATINCLUDE   998      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1013    21062 BATINCLUDE   998      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1014    21077 BATINCLUDE   998      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1015    21090 BATINCLUDE   998      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1016    21101 BATINCLUDE   998      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1017    21107 BATINCLUDE   998      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1018    21114 BATINCLUDE   998      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1019    21127 BATINCLUDE   998      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1020    21143 BATINCLUDE   998      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1021    21158 BATINCLUDE   998      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1022    21179 BATINCLUDE   998      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1023    21202 BATINCLUDE   998      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1024    21209 BATINCLUDE   998      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1025    21229 BATINCLUDE   998      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1026    21235 BATINCLUDE   998      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1027    21241 BATINCLUDE   998      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1028    21249 BATINCLUDE   998      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1029    21272 BATINCLUDE   998      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1030    21286 BATINCLUDE   998      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1031    21304 BATINCLUDE   998      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1032    21326 BATINCLUDE   998      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1033    21355 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1034    21364 BATINCLUDE  1033       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1035    21377 BATINCLUDE  1033      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1036    21388 BATINCLUDE  1033      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1037    21394 BATINCLUDE  1033      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1038    21405 BATINCLUDE  1033      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1039    21416 BATINCLUDE  1033      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1040    21434 BATINCLUDE  1033      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1041    21461 BATINCLUDE  1033      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1042    21481 BATINCLUDE  1033      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1043    21500 BATINCLUDE  1033      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1044    21521 BATINCLUDE  1033      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1045    21527 BATINCLUDE  1033      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1046    21533 BATINCLUDE  1033      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1047    21553 BATINCLUDE  1033      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1048    21559 BATINCLUDE  1033      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1049    21574 BATINCLUDE  1033      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1050    21587 BATINCLUDE  1033      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1051    21598 BATINCLUDE  1033      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1052    21604 BATINCLUDE  1033      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1053    21611 BATINCLUDE  1033      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1054    21624 BATINCLUDE  1033      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1055    21640 BATINCLUDE  1033      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1056    21655 BATINCLUDE  1033      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1057    21676 BATINCLUDE  1033      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1058    21699 BATINCLUDE  1033      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1059    21706 BATINCLUDE  1033      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1060    21726 BATINCLUDE  1033      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1061    21732 BATINCLUDE  1033      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1062    21738 BATINCLUDE  1033      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1063    21746 BATINCLUDE  1033      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1064    21769 BATINCLUDE  1033      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1065    21783 BATINCLUDE  1033      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1066    21801 BATINCLUDE  1033      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1067    21823 BATINCLUDE  1033      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1068    21841 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1069    21850 BATINCLUDE  1068       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1070    21886 BATINCLUDE  1068      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1071    21897 BATINCLUDE  1068      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1072    21903 BATINCLUDE  1068      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1073    21914 BATINCLUDE  1068      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1074    21953 BATINCLUDE  1068      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1075    22011 BATINCLUDE  1068      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1076    22115 BATINCLUDE  1068      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1077    22155 BATINCLUDE  1068      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1078    22205 BATINCLUDE  1068      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1079    22226 BATINCLUDE  1068      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1080    22232 BATINCLUDE  1068      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1081    22238 BATINCLUDE  1068      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1082    22309 BATINCLUDE  1068      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1083    22315 BATINCLUDE  1068      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1084    22380 BATINCLUDE  1068      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1085    22394 BATINCLUDE  1068      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1086    22413 BATINCLUDE  1068      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1087    22419 BATINCLUDE  1068      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1088    22426 BATINCLUDE  1068      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1089    22445 BATINCLUDE  1068      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1090    22478 BATINCLUDE  1068      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1091    22512 BATINCLUDE  1068      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1092    22565 BATINCLUDE  1068      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1093    22626 BATINCLUDE  1068      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1094    22633 BATINCLUDE  1068      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1095    22677 BATINCLUDE  1068      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1096    22683 BATINCLUDE  1068      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1097    22689 BATINCLUDE  1068      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1098    22697 BATINCLUDE  1068      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1099    22720 BATINCLUDE  1068      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1100    22734 BATINCLUDE  1068      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1101    22772 BATINCLUDE  1068      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1102    22811 BATINCLUDE  1068      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1103    22830 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1104    22839 BATINCLUDE  1103       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1105    22852 BATINCLUDE  1103      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1106    22863 BATINCLUDE  1103      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1107    22869 BATINCLUDE  1103      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1108    22880 BATINCLUDE  1103      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1109    22891 BATINCLUDE  1103      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1110    22909 BATINCLUDE  1103      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1111    22936 BATINCLUDE  1103      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1112    22956 BATINCLUDE  1103      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1113    22975 BATINCLUDE  1103      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1114    22996 BATINCLUDE  1103      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1115    23002 BATINCLUDE  1103      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1116    23008 BATINCLUDE  1103      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1117    23028 BATINCLUDE  1103      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1118    23034 BATINCLUDE  1103      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1119    23049 BATINCLUDE  1103      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1120    23062 BATINCLUDE  1103      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1121    23073 BATINCLUDE  1103      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1122    23079 BATINCLUDE  1103      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1123    23086 BATINCLUDE  1103      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1124    23099 BATINCLUDE  1103      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1125    23115 BATINCLUDE  1103      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1126    23130 BATINCLUDE  1103      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1127    23151 BATINCLUDE  1103      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1128    23174 BATINCLUDE  1103      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1129    23181 BATINCLUDE  1103      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1130    23201 BATINCLUDE  1103      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1131    23207 BATINCLUDE  1103      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1132    23213 BATINCLUDE  1103      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1133    23221 BATINCLUDE  1103      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1134    23244 BATINCLUDE  1103      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1135    23258 BATINCLUDE  1103      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1136    23276 BATINCLUDE  1103      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1137    23298 BATINCLUDE  1103      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1138    23327 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1139    23336 BATINCLUDE  1138       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1140    23349 BATINCLUDE  1138      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1141    23360 BATINCLUDE  1138      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1142    23366 BATINCLUDE  1138      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1143    23377 BATINCLUDE  1138      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1144    23388 BATINCLUDE  1138      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1145    23406 BATINCLUDE  1138      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1146    23433 BATINCLUDE  1138      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1147    23453 BATINCLUDE  1138      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1148    23472 BATINCLUDE  1138      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1149    23493 BATINCLUDE  1138      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1150    23499 BATINCLUDE  1138      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1151    23505 BATINCLUDE  1138      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1152    23525 BATINCLUDE  1138      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1153    23531 BATINCLUDE  1138      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1154    23546 BATINCLUDE  1138      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1155    23559 BATINCLUDE  1138      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1156    23570 BATINCLUDE  1138      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1157    23576 BATINCLUDE  1138      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1158    23583 BATINCLUDE  1138      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1159    23596 BATINCLUDE  1138      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1160    23612 BATINCLUDE  1138      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1161    23627 BATINCLUDE  1138      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1162    23648 BATINCLUDE  1138      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1163    23671 BATINCLUDE  1138      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1164    23678 BATINCLUDE  1138      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1165    23698 BATINCLUDE  1138      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1166    23704 BATINCLUDE  1138      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1167    23710 BATINCLUDE  1138      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1168    23718 BATINCLUDE  1138      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1169    23741 BATINCLUDE  1138      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1170    23755 BATINCLUDE  1138      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1171    23773 BATINCLUDE  1138      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1172    23795 BATINCLUDE  1138      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1173    23813 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1174    23822 BATINCLUDE  1173       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1175    23858 BATINCLUDE  1173      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1176    23869 BATINCLUDE  1173      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1177    23875 BATINCLUDE  1173      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1178    23886 BATINCLUDE  1173      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1179    23925 BATINCLUDE  1173      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1180    23983 BATINCLUDE  1173      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1181    24087 BATINCLUDE  1173      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1182    24127 BATINCLUDE  1173      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1183    24177 BATINCLUDE  1173      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1184    24198 BATINCLUDE  1173      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1185    24204 BATINCLUDE  1173      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1186    24210 BATINCLUDE  1173      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1187    24281 BATINCLUDE  1173      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1188    24287 BATINCLUDE  1173      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1189    24352 BATINCLUDE  1173      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1190    24366 BATINCLUDE  1173      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1191    24385 BATINCLUDE  1173      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1192    24391 BATINCLUDE  1173      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1193    24398 BATINCLUDE  1173      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1194    24417 BATINCLUDE  1173      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1195    24450 BATINCLUDE  1173      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1196    24484 BATINCLUDE  1173      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1197    24537 BATINCLUDE  1173      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1198    24598 BATINCLUDE  1173      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1199    24605 BATINCLUDE  1173      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1200    24649 BATINCLUDE  1173      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1201    24655 BATINCLUDE  1173      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1202    24661 BATINCLUDE  1173      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1203    24669 BATINCLUDE  1173      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1204    24692 BATINCLUDE  1173      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1205    24706 BATINCLUDE  1173      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1206    24744 BATINCLUDE  1173      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1207    24783 BATINCLUDE  1173      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1208    24802 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1209    24811 BATINCLUDE  1208       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1210    24824 BATINCLUDE  1208      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1211    24835 BATINCLUDE  1208      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1212    24841 BATINCLUDE  1208      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1213    24852 BATINCLUDE  1208      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1214    24863 BATINCLUDE  1208      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1215    24881 BATINCLUDE  1208      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1216    24908 BATINCLUDE  1208      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1217    24928 BATINCLUDE  1208      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1218    24947 BATINCLUDE  1208      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1219    24968 BATINCLUDE  1208      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1220    24974 BATINCLUDE  1208      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1221    24980 BATINCLUDE  1208      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1222    25000 BATINCLUDE  1208      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1223    25006 BATINCLUDE  1208      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1224    25021 BATINCLUDE  1208      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1225    25034 BATINCLUDE  1208      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1226    25045 BATINCLUDE  1208      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1227    25051 BATINCLUDE  1208      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1228    25058 BATINCLUDE  1208      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1229    25071 BATINCLUDE  1208      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1230    25087 BATINCLUDE  1208      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1231    25102 BATINCLUDE  1208      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1232    25123 BATINCLUDE  1208      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1233    25146 BATINCLUDE  1208      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1234    25153 BATINCLUDE  1208      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1235    25173 BATINCLUDE  1208      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1236    25179 BATINCLUDE  1208      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1237    25185 BATINCLUDE  1208      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1238    25193 BATINCLUDE  1208      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1239    25216 BATINCLUDE  1208      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1240    25230 BATINCLUDE  1208      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1241    25248 BATINCLUDE  1208      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1242    25270 BATINCLUDE  1208      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1243    25299 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1244    25308 BATINCLUDE  1243       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1245    25321 BATINCLUDE  1243      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1246    25332 BATINCLUDE  1243      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1247    25338 BATINCLUDE  1243      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1248    25349 BATINCLUDE  1243      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1249    25360 BATINCLUDE  1243      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1250    25378 BATINCLUDE  1243      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1251    25405 BATINCLUDE  1243      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1252    25425 BATINCLUDE  1243      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1253    25444 BATINCLUDE  1243      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1254    25465 BATINCLUDE  1243      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1255    25471 BATINCLUDE  1243      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1256    25477 BATINCLUDE  1243      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1257    25497 BATINCLUDE  1243      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1258    25503 BATINCLUDE  1243      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1259    25518 BATINCLUDE  1243      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1260    25531 BATINCLUDE  1243      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1261    25542 BATINCLUDE  1243      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1262    25548 BATINCLUDE  1243      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1263    25555 BATINCLUDE  1243      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1264    25568 BATINCLUDE  1243      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1265    25584 BATINCLUDE  1243      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1266    25599 BATINCLUDE  1243      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1267    25620 BATINCLUDE  1243      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1268    25643 BATINCLUDE  1243      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1269    25650 BATINCLUDE  1243      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1270    25670 BATINCLUDE  1243      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1271    25676 BATINCLUDE  1243      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1272    25682 BATINCLUDE  1243      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1273    25690 BATINCLUDE  1243      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1274    25713 BATINCLUDE  1243      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1275    25727 BATINCLUDE  1243      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1276    25745 BATINCLUDE  1243      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1277    25767 BATINCLUDE  1243      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1278    25785 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1279    25794 BATINCLUDE  1278       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1280    25830 BATINCLUDE  1278      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1281    25841 BATINCLUDE  1278      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1282    25847 BATINCLUDE  1278      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1283    25858 BATINCLUDE  1278      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1284    25897 BATINCLUDE  1278      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1285    25955 BATINCLUDE  1278      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1286    26059 BATINCLUDE  1278      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1287    26099 BATINCLUDE  1278      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1288    26149 BATINCLUDE  1278      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1289    26170 BATINCLUDE  1278      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1290    26176 BATINCLUDE  1278      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1291    26182 BATINCLUDE  1278      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1292    26253 BATINCLUDE  1278      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1293    26259 BATINCLUDE  1278      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1294    26324 BATINCLUDE  1278      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1295    26338 BATINCLUDE  1278      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1296    26357 BATINCLUDE  1278      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1297    26363 BATINCLUDE  1278      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1298    26370 BATINCLUDE  1278      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1299    26389 BATINCLUDE  1278      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1300    26422 BATINCLUDE  1278      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1301    26456 BATINCLUDE  1278      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1302    26509 BATINCLUDE  1278      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1303    26570 BATINCLUDE  1278      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1304    26577 BATINCLUDE  1278      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1305    26621 BATINCLUDE  1278      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1306    26627 BATINCLUDE  1278      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1307    26633 BATINCLUDE  1278      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1308    26641 BATINCLUDE  1278      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1309    26664 BATINCLUDE  1278      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1310    26678 BATINCLUDE  1278      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1311    26716 BATINCLUDE  1278      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1312    26755 BATINCLUDE  1278      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1313    26774 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1314    26783 BATINCLUDE  1313       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1315    26796 BATINCLUDE  1313      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1316    26807 BATINCLUDE  1313      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1317    26813 BATINCLUDE  1313      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1318    26824 BATINCLUDE  1313      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1319    26835 BATINCLUDE  1313      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1320    26853 BATINCLUDE  1313      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1321    26880 BATINCLUDE  1313      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1322    26900 BATINCLUDE  1313      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1323    26919 BATINCLUDE  1313      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1324    26940 BATINCLUDE  1313      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1325    26946 BATINCLUDE  1313      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1326    26952 BATINCLUDE  1313      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1327    26972 BATINCLUDE  1313      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1328    26978 BATINCLUDE  1313      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1329    26993 BATINCLUDE  1313      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1330    27006 BATINCLUDE  1313      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1331    27017 BATINCLUDE  1313      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1332    27023 BATINCLUDE  1313      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1333    27030 BATINCLUDE  1313      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1334    27043 BATINCLUDE  1313      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1335    27059 BATINCLUDE  1313      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1336    27074 BATINCLUDE  1313      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1337    27095 BATINCLUDE  1313      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1338    27118 BATINCLUDE  1313      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1339    27125 BATINCLUDE  1313      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1340    27145 BATINCLUDE  1313      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1341    27151 BATINCLUDE  1313      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1342    27157 BATINCLUDE  1313      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1343    27165 BATINCLUDE  1313      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1344    27188 BATINCLUDE  1313      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1345    27202 BATINCLUDE  1313      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1346    27220 BATINCLUDE  1313      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1347    27242 BATINCLUDE  1313      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1348    27271 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1349    27280 BATINCLUDE  1348       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1350    27293 BATINCLUDE  1348      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1351    27304 BATINCLUDE  1348      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1352    27310 BATINCLUDE  1348      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1353    27321 BATINCLUDE  1348      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1354    27332 BATINCLUDE  1348      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1355    27350 BATINCLUDE  1348      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1356    27377 BATINCLUDE  1348      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1357    27397 BATINCLUDE  1348      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1358    27416 BATINCLUDE  1348      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1359    27437 BATINCLUDE  1348      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1360    27443 BATINCLUDE  1348      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1361    27449 BATINCLUDE  1348      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1362    27469 BATINCLUDE  1348      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1363    27475 BATINCLUDE  1348      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1364    27490 BATINCLUDE  1348      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1365    27503 BATINCLUDE  1348      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1366    27514 BATINCLUDE  1348      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1367    27520 BATINCLUDE  1348      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1368    27527 BATINCLUDE  1348      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1369    27540 BATINCLUDE  1348      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1370    27556 BATINCLUDE  1348      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1371    27571 BATINCLUDE  1348      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1372    27592 BATINCLUDE  1348      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1373    27615 BATINCLUDE  1348      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1374    27622 BATINCLUDE  1348      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1375    27642 BATINCLUDE  1348      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1376    27648 BATINCLUDE  1348      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1377    27654 BATINCLUDE  1348      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1378    27662 BATINCLUDE  1348      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1379    27685 BATINCLUDE  1348      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1380    27699 BATINCLUDE  1348      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1381    27717 BATINCLUDE  1348      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1382    27739 BATINCLUDE  1348      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1383    27757 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1384    27766 BATINCLUDE  1383       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1385    27802 BATINCLUDE  1383      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1386    27813 BATINCLUDE  1383      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1387    27819 BATINCLUDE  1383      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1388    27830 BATINCLUDE  1383      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1389    27869 BATINCLUDE  1383      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1390    27927 BATINCLUDE  1383      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1391    28031 BATINCLUDE  1383      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1392    28071 BATINCLUDE  1383      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1393    28121 BATINCLUDE  1383      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1394    28142 BATINCLUDE  1383      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1395    28148 BATINCLUDE  1383      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1396    28154 BATINCLUDE  1383      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1397    28225 BATINCLUDE  1383      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1398    28231 BATINCLUDE  1383      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1399    28296 BATINCLUDE  1383      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1400    28310 BATINCLUDE  1383      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1401    28329 BATINCLUDE  1383      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1402    28335 BATINCLUDE  1383      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1403    28342 BATINCLUDE  1383      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1404    28361 BATINCLUDE  1383      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1405    28394 BATINCLUDE  1383      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1406    28428 BATINCLUDE  1383      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1407    28481 BATINCLUDE  1383      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1408    28542 BATINCLUDE  1383      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1409    28549 BATINCLUDE  1383      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1410    28593 BATINCLUDE  1383      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1411    28599 BATINCLUDE  1383      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1412    28605 BATINCLUDE  1383      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1413    28613 BATINCLUDE  1383      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1414    28636 BATINCLUDE  1383      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1415    28650 BATINCLUDE  1383      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1416    28688 BATINCLUDE  1383      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1417    28727 BATINCLUDE  1383      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1418    28746 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1419    28755 BATINCLUDE  1418       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1420    28768 BATINCLUDE  1418      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1421    28779 BATINCLUDE  1418      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1422    28785 BATINCLUDE  1418      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1423    28796 BATINCLUDE  1418      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1424    28807 BATINCLUDE  1418      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1425    28825 BATINCLUDE  1418      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1426    28852 BATINCLUDE  1418      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1427    28872 BATINCLUDE  1418      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1428    28891 BATINCLUDE  1418      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1429    28912 BATINCLUDE  1418      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1430    28918 BATINCLUDE  1418      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1431    28924 BATINCLUDE  1418      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1432    28944 BATINCLUDE  1418      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1433    28950 BATINCLUDE  1418      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1434    28965 BATINCLUDE  1418      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1435    28978 BATINCLUDE  1418      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1436    28989 BATINCLUDE  1418      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1437    28995 BATINCLUDE  1418      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1438    29002 BATINCLUDE  1418      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1439    29015 BATINCLUDE  1418      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1440    29031 BATINCLUDE  1418      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1441    29046 BATINCLUDE  1418      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1442    29067 BATINCLUDE  1418      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1443    29090 BATINCLUDE  1418      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1444    29097 BATINCLUDE  1418      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1445    29117 BATINCLUDE  1418      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1446    29123 BATINCLUDE  1418      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1447    29129 BATINCLUDE  1418      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1448    29137 BATINCLUDE  1418      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1449    29160 BATINCLUDE  1418      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1450    29174 BATINCLUDE  1418      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1451    29192 BATINCLUDE  1418      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1452    29214 BATINCLUDE  1418      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1453    29243 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1454    29252 BATINCLUDE  1453       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1455    29265 BATINCLUDE  1453      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1456    29276 BATINCLUDE  1453      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1457    29282 BATINCLUDE  1453      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1458    29293 BATINCLUDE  1453      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1459    29304 BATINCLUDE  1453      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1460    29322 BATINCLUDE  1453      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1461    29349 BATINCLUDE  1453      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1462    29369 BATINCLUDE  1453      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1463    29388 BATINCLUDE  1453      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1464    29409 BATINCLUDE  1453      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1465    29415 BATINCLUDE  1453      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1466    29421 BATINCLUDE  1453      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1467    29441 BATINCLUDE  1453      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1468    29447 BATINCLUDE  1453      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1469    29462 BATINCLUDE  1453      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1470    29475 BATINCLUDE  1453      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1471    29486 BATINCLUDE  1453      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1472    29492 BATINCLUDE  1453      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1473    29499 BATINCLUDE  1453      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1474    29512 BATINCLUDE  1453      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1475    29528 BATINCLUDE  1453      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1476    29543 BATINCLUDE  1453      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1477    29564 BATINCLUDE  1453      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1478    29587 BATINCLUDE  1453      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1479    29594 BATINCLUDE  1453      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1480    29614 BATINCLUDE  1453      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1481    29620 BATINCLUDE  1453      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1482    29626 BATINCLUDE  1453      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1483    29634 BATINCLUDE  1453      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1484    29657 BATINCLUDE  1453      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1485    29671 BATINCLUDE  1453      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1486    29689 BATINCLUDE  1453      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1487    29711 BATINCLUDE  1453      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1488    29729 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1489    29738 BATINCLUDE  1488       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1490    29774 BATINCLUDE  1488      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1491    29785 BATINCLUDE  1488      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1492    29791 BATINCLUDE  1488      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1493    29802 BATINCLUDE  1488      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1494    29841 BATINCLUDE  1488      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1495    29899 BATINCLUDE  1488      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1496    30003 BATINCLUDE  1488      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1497    30043 BATINCLUDE  1488      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1498    30093 BATINCLUDE  1488      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1499    30114 BATINCLUDE  1488      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1500    30120 BATINCLUDE  1488      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1501    30126 BATINCLUDE  1488      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1502    30197 BATINCLUDE  1488      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1503    30203 BATINCLUDE  1488      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1504    30268 BATINCLUDE  1488      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1505    30282 BATINCLUDE  1488      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1506    30301 BATINCLUDE  1488      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1507    30307 BATINCLUDE  1488      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1508    30314 BATINCLUDE  1488      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1509    30333 BATINCLUDE  1488      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1510    30366 BATINCLUDE  1488      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1511    30400 BATINCLUDE  1488      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1512    30453 BATINCLUDE  1488      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1513    30514 BATINCLUDE  1488      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1514    30521 BATINCLUDE  1488      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1515    30565 BATINCLUDE  1488      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1516    30571 BATINCLUDE  1488      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1517    30577 BATINCLUDE  1488      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1518    30585 BATINCLUDE  1488      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1519    30608 BATINCLUDE  1488      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1520    30622 BATINCLUDE  1488      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1521    30660 BATINCLUDE  1488      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1522    30699 BATINCLUDE  1488      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1523    30718 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1524    30727 BATINCLUDE  1523       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1525    30740 BATINCLUDE  1523      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1526    30751 BATINCLUDE  1523      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1527    30757 BATINCLUDE  1523      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1528    30768 BATINCLUDE  1523      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1529    30779 BATINCLUDE  1523      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1530    30797 BATINCLUDE  1523      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1531    30824 BATINCLUDE  1523      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1532    30844 BATINCLUDE  1523      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1533    30863 BATINCLUDE  1523      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1534    30884 BATINCLUDE  1523      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1535    30890 BATINCLUDE  1523      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1536    30896 BATINCLUDE  1523      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1537    30916 BATINCLUDE  1523      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1538    30922 BATINCLUDE  1523      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1539    30937 BATINCLUDE  1523      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1540    30950 BATINCLUDE  1523      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1541    30961 BATINCLUDE  1523      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1542    30967 BATINCLUDE  1523      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1543    30974 BATINCLUDE  1523      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1544    30987 BATINCLUDE  1523      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1545    31003 BATINCLUDE  1523      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1546    31018 BATINCLUDE  1523      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1547    31039 BATINCLUDE  1523      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1548    31062 BATINCLUDE  1523      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1549    31069 BATINCLUDE  1523      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1550    31089 BATINCLUDE  1523      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1551    31095 BATINCLUDE  1523      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1552    31101 BATINCLUDE  1523      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1553    31109 BATINCLUDE  1523      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1554    31132 BATINCLUDE  1523      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1555    31146 BATINCLUDE  1523      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1556    31164 BATINCLUDE  1523      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1557    31186 BATINCLUDE  1523      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1558    31215 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1559    31224 BATINCLUDE  1558       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1560    31237 BATINCLUDE  1558      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1561    31248 BATINCLUDE  1558      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1562    31254 BATINCLUDE  1558      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1563    31265 BATINCLUDE  1558      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1564    31276 BATINCLUDE  1558      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1565    31294 BATINCLUDE  1558      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1566    31321 BATINCLUDE  1558      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1567    31341 BATINCLUDE  1558      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1568    31360 BATINCLUDE  1558      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1569    31381 BATINCLUDE  1558      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1570    31387 BATINCLUDE  1558      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1571    31393 BATINCLUDE  1558      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1572    31413 BATINCLUDE  1558      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1573    31419 BATINCLUDE  1558      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1574    31434 BATINCLUDE  1558      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1575    31447 BATINCLUDE  1558      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1576    31458 BATINCLUDE  1558      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1577    31464 BATINCLUDE  1558      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1578    31471 BATINCLUDE  1558      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1579    31484 BATINCLUDE  1558      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1580    31500 BATINCLUDE  1558      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1581    31515 BATINCLUDE  1558      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1582    31536 BATINCLUDE  1558      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1583    31559 BATINCLUDE  1558      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1584    31566 BATINCLUDE  1558      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1585    31586 BATINCLUDE  1558      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1586    31592 BATINCLUDE  1558      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1587    31598 BATINCLUDE  1558      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1588    31606 BATINCLUDE  1558      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1589    31629 BATINCLUDE  1558      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1590    31643 BATINCLUDE  1558      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1591    31661 BATINCLUDE  1558      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1592    31683 BATINCLUDE  1558      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1593    31701 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1594    31710 BATINCLUDE  1593       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1595    31746 BATINCLUDE  1593      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1596    31757 BATINCLUDE  1593      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1597    31763 BATINCLUDE  1593      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1598    31774 BATINCLUDE  1593      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1599    31813 BATINCLUDE  1593      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1600    31871 BATINCLUDE  1593      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1601    31975 BATINCLUDE  1593      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1602    32015 BATINCLUDE  1593      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1603    32065 BATINCLUDE  1593      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1604    32086 BATINCLUDE  1593      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1605    32092 BATINCLUDE  1593      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1606    32098 BATINCLUDE  1593      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1607    32169 BATINCLUDE  1593      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1608    32175 BATINCLUDE  1593      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1609    32240 BATINCLUDE  1593      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1610    32254 BATINCLUDE  1593      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1611    32273 BATINCLUDE  1593      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1612    32279 BATINCLUDE  1593      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1613    32286 BATINCLUDE  1593      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1614    32305 BATINCLUDE  1593      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1615    32338 BATINCLUDE  1593      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1616    32372 BATINCLUDE  1593      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1617    32425 BATINCLUDE  1593      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1618    32486 BATINCLUDE  1593      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1619    32493 BATINCLUDE  1593      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1620    32537 BATINCLUDE  1593      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1621    32543 BATINCLUDE  1593      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1622    32549 BATINCLUDE  1593      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1623    32557 BATINCLUDE  1593      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1624    32580 BATINCLUDE  1593      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1625    32594 BATINCLUDE  1593      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1626    32632 BATINCLUDE  1593      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1627    32671 BATINCLUDE  1593      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1628    32690 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1629    32699 BATINCLUDE  1628       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1630    32712 BATINCLUDE  1628      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1631    32723 BATINCLUDE  1628      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1632    32729 BATINCLUDE  1628      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1633    32740 BATINCLUDE  1628      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1634    32751 BATINCLUDE  1628      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1635    32769 BATINCLUDE  1628      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1636    32796 BATINCLUDE  1628      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1637    32816 BATINCLUDE  1628      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1638    32835 BATINCLUDE  1628      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1639    32856 BATINCLUDE  1628      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1640    32862 BATINCLUDE  1628      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1641    32868 BATINCLUDE  1628      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1642    32888 BATINCLUDE  1628      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1643    32894 BATINCLUDE  1628      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1644    32909 BATINCLUDE  1628      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1645    32922 BATINCLUDE  1628      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1646    32933 BATINCLUDE  1628      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1647    32939 BATINCLUDE  1628      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1648    32946 BATINCLUDE  1628      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1649    32959 BATINCLUDE  1628      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1650    32975 BATINCLUDE  1628      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1651    32990 BATINCLUDE  1628      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1652    33011 BATINCLUDE  1628      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1653    33034 BATINCLUDE  1628      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1654    33041 BATINCLUDE  1628      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1655    33061 BATINCLUDE  1628      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1656    33067 BATINCLUDE  1628      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1657    33073 BATINCLUDE  1628      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1658    33081 BATINCLUDE  1628      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1659    33104 BATINCLUDE  1628      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1660    33118 BATINCLUDE  1628      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1661    33136 BATINCLUDE  1628      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1662    33158 BATINCLUDE  1628      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1663    33187 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1664    33196 BATINCLUDE  1663       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1665    33209 BATINCLUDE  1663      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1666    33220 BATINCLUDE  1663      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1667    33226 BATINCLUDE  1663      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1668    33237 BATINCLUDE  1663      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1669    33248 BATINCLUDE  1663      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1670    33266 BATINCLUDE  1663      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1671    33293 BATINCLUDE  1663      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1672    33313 BATINCLUDE  1663      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1673    33332 BATINCLUDE  1663      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1674    33353 BATINCLUDE  1663      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1675    33359 BATINCLUDE  1663      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1676    33365 BATINCLUDE  1663      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1677    33385 BATINCLUDE  1663      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1678    33391 BATINCLUDE  1663      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1679    33406 BATINCLUDE  1663      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1680    33419 BATINCLUDE  1663      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1681    33430 BATINCLUDE  1663      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1682    33436 BATINCLUDE  1663      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1683    33443 BATINCLUDE  1663      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1684    33456 BATINCLUDE  1663      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1685    33472 BATINCLUDE  1663      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1686    33487 BATINCLUDE  1663      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1687    33508 BATINCLUDE  1663      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1688    33531 BATINCLUDE  1663      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1689    33538 BATINCLUDE  1663      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1690    33558 BATINCLUDE  1663      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1691    33564 BATINCLUDE  1663      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1692    33570 BATINCLUDE  1663      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1693    33578 BATINCLUDE  1663      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1694    33601 BATINCLUDE  1663      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1695    33615 BATINCLUDE  1663      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1696    33633 BATINCLUDE  1663      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1697    33655 BATINCLUDE  1663      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1698    33673 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1699    33682 BATINCLUDE  1698       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1700    33718 BATINCLUDE  1698      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1701    33729 BATINCLUDE  1698      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1702    33735 BATINCLUDE  1698      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1703    33746 BATINCLUDE  1698      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1704    33785 BATINCLUDE  1698      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1705    33843 BATINCLUDE  1698      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1706    33947 BATINCLUDE  1698      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1707    33987 BATINCLUDE  1698      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1708    34037 BATINCLUDE  1698      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1709    34058 BATINCLUDE  1698      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1710    34064 BATINCLUDE  1698      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1711    34070 BATINCLUDE  1698      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1712    34141 BATINCLUDE  1698      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1713    34147 BATINCLUDE  1698      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1714    34212 BATINCLUDE  1698      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1715    34226 BATINCLUDE  1698      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1716    34245 BATINCLUDE  1698      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1717    34251 BATINCLUDE  1698      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1718    34258 BATINCLUDE  1698      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1719    34277 BATINCLUDE  1698      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1720    34310 BATINCLUDE  1698      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1721    34344 BATINCLUDE  1698      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1722    34397 BATINCLUDE  1698      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1723    34458 BATINCLUDE  1698      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1724    34465 BATINCLUDE  1698      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1725    34509 BATINCLUDE  1698      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1726    34515 BATINCLUDE  1698      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1727    34521 BATINCLUDE  1698      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1728    34529 BATINCLUDE  1698      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1729    34552 BATINCLUDE  1698      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1730    34566 BATINCLUDE  1698      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1731    34604 BATINCLUDE  1698      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1732    34643 BATINCLUDE  1698      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1733    34662 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1734    34671 BATINCLUDE  1733       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1735    34684 BATINCLUDE  1733      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1736    34695 BATINCLUDE  1733      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1737    34701 BATINCLUDE  1733      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1738    34712 BATINCLUDE  1733      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1739    34723 BATINCLUDE  1733      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1740    34741 BATINCLUDE  1733      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1741    34768 BATINCLUDE  1733      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1742    34788 BATINCLUDE  1733      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1743    34807 BATINCLUDE  1733      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1744    34828 BATINCLUDE  1733      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1745    34834 BATINCLUDE  1733      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1746    34840 BATINCLUDE  1733      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1747    34860 BATINCLUDE  1733      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1748    34866 BATINCLUDE  1733      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1749    34881 BATINCLUDE  1733      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1750    34894 BATINCLUDE  1733      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1751    34905 BATINCLUDE  1733      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1752    34911 BATINCLUDE  1733      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1753    34918 BATINCLUDE  1733      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1754    34931 BATINCLUDE  1733      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1755    34947 BATINCLUDE  1733      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1756    34962 BATINCLUDE  1733      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1757    34983 BATINCLUDE  1733      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1758    35006 BATINCLUDE  1733      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1759    35013 BATINCLUDE  1733      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1760    35033 BATINCLUDE  1733      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1761    35039 BATINCLUDE  1733      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1762    35045 BATINCLUDE  1733      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1763    35053 BATINCLUDE  1733      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1764    35076 BATINCLUDE  1733      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1765    35090 BATINCLUDE  1733      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1766    35108 BATINCLUDE  1733      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1767    35130 BATINCLUDE  1733      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1768    35159 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1769    35168 BATINCLUDE  1768       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1770    35181 BATINCLUDE  1768      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1771    35192 BATINCLUDE  1768      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1772    35198 BATINCLUDE  1768      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1773    35209 BATINCLUDE  1768      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1774    35220 BATINCLUDE  1768      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1775    35238 BATINCLUDE  1768      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1776    35265 BATINCLUDE  1768      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1777    35285 BATINCLUDE  1768      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1778    35304 BATINCLUDE  1768      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1779    35325 BATINCLUDE  1768      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1780    35331 BATINCLUDE  1768      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1781    35337 BATINCLUDE  1768      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1782    35357 BATINCLUDE  1768      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1783    35363 BATINCLUDE  1768      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1784    35378 BATINCLUDE  1768      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1785    35391 BATINCLUDE  1768      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1786    35402 BATINCLUDE  1768      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1787    35408 BATINCLUDE  1768      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1788    35415 BATINCLUDE  1768      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1789    35428 BATINCLUDE  1768      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1790    35444 BATINCLUDE  1768      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1791    35459 BATINCLUDE  1768      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1792    35480 BATINCLUDE  1768      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1793    35503 BATINCLUDE  1768      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1794    35510 BATINCLUDE  1768      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1795    35530 BATINCLUDE  1768      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1796    35536 BATINCLUDE  1768      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1797    35542 BATINCLUDE  1768      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1798    35550 BATINCLUDE  1768      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1799    35573 BATINCLUDE  1768      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1800    35587 BATINCLUDE  1768      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1801    35605 BATINCLUDE  1768      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1802    35627 BATINCLUDE  1768      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1803    35645 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1804    35654 BATINCLUDE  1803       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1805    35690 BATINCLUDE  1803      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1806    35701 BATINCLUDE  1803      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1807    35707 BATINCLUDE  1803      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1808    35718 BATINCLUDE  1803      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1809    35757 BATINCLUDE  1803      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1810    35815 BATINCLUDE  1803      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1811    35919 BATINCLUDE  1803      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1812    35959 BATINCLUDE  1803      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1813    36009 BATINCLUDE  1803      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1814    36030 BATINCLUDE  1803      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1815    36036 BATINCLUDE  1803      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1816    36042 BATINCLUDE  1803      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1817    36113 BATINCLUDE  1803      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1818    36119 BATINCLUDE  1803      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1819    36184 BATINCLUDE  1803      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1820    36198 BATINCLUDE  1803      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1821    36217 BATINCLUDE  1803      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1822    36223 BATINCLUDE  1803      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1823    36230 BATINCLUDE  1803      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1824    36249 BATINCLUDE  1803      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1825    36282 BATINCLUDE  1803      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1826    36316 BATINCLUDE  1803      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1827    36369 BATINCLUDE  1803      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1828    36430 BATINCLUDE  1803      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1829    36437 BATINCLUDE  1803      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1830    36481 BATINCLUDE  1803      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1831    36487 BATINCLUDE  1803      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1832    36493 BATINCLUDE  1803      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1833    36501 BATINCLUDE  1803      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1834    36524 BATINCLUDE  1803      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1835    36538 BATINCLUDE  1803      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1836    36576 BATINCLUDE  1803      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1837    36615 BATINCLUDE  1803      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1838    36634 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1839    36643 BATINCLUDE  1838       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1840    36656 BATINCLUDE  1838      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1841    36667 BATINCLUDE  1838      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1842    36673 BATINCLUDE  1838      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1843    36684 BATINCLUDE  1838      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1844    36695 BATINCLUDE  1838      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1845    36713 BATINCLUDE  1838      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1846    36740 BATINCLUDE  1838      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1847    36760 BATINCLUDE  1838      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1848    36779 BATINCLUDE  1838      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1849    36800 BATINCLUDE  1838      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1850    36806 BATINCLUDE  1838      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1851    36812 BATINCLUDE  1838      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1852    36832 BATINCLUDE  1838      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1853    36838 BATINCLUDE  1838      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1854    36853 BATINCLUDE  1838      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1855    36866 BATINCLUDE  1838      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1856    36877 BATINCLUDE  1838      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1857    36883 BATINCLUDE  1838      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1858    36890 BATINCLUDE  1838      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1859    36903 BATINCLUDE  1838      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1860    36919 BATINCLUDE  1838      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1861    36934 BATINCLUDE  1838      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1862    36955 BATINCLUDE  1838      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1863    36978 BATINCLUDE  1838      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1864    36985 BATINCLUDE  1838      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1865    37005 BATINCLUDE  1838      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1866    37011 BATINCLUDE  1838      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1867    37017 BATINCLUDE  1838      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1868    37025 BATINCLUDE  1838      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1869    37048 BATINCLUDE  1838      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1870    37062 BATINCLUDE  1838      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1871    37080 BATINCLUDE  1838      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1872    37102 BATINCLUDE  1838      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1873    37131 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1874    37140 BATINCLUDE  1873       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1875    37153 BATINCLUDE  1873      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1876    37164 BATINCLUDE  1873      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1877    37170 BATINCLUDE  1873      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1878    37181 BATINCLUDE  1873      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1879    37192 BATINCLUDE  1873      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1880    37210 BATINCLUDE  1873      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1881    37237 BATINCLUDE  1873      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1882    37257 BATINCLUDE  1873      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1883    37276 BATINCLUDE  1873      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1884    37297 BATINCLUDE  1873      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1885    37303 BATINCLUDE  1873      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1886    37309 BATINCLUDE  1873      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1887    37329 BATINCLUDE  1873      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1888    37335 BATINCLUDE  1873      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1889    37350 BATINCLUDE  1873      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1890    37363 BATINCLUDE  1873      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1891    37374 BATINCLUDE  1873      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1892    37380 BATINCLUDE  1873      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1893    37387 BATINCLUDE  1873      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1894    37400 BATINCLUDE  1873      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1895    37416 BATINCLUDE  1873      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1896    37431 BATINCLUDE  1873      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1897    37452 BATINCLUDE  1873      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1898    37475 BATINCLUDE  1873      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1899    37482 BATINCLUDE  1873      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1900    37502 BATINCLUDE  1873      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1901    37508 BATINCLUDE  1873      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1902    37514 BATINCLUDE  1873      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1903    37522 BATINCLUDE  1873      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1904    37545 BATINCLUDE  1873      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1905    37559 BATINCLUDE  1873      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1906    37577 BATINCLUDE  1873      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1907    37599 BATINCLUDE  1873      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1908    37617 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1909    37626 BATINCLUDE  1908       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1910    37662 BATINCLUDE  1908      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1911    37673 BATINCLUDE  1908      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1912    37679 BATINCLUDE  1908      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1913    37690 BATINCLUDE  1908      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1914    37729 BATINCLUDE  1908      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1915    37787 BATINCLUDE  1908      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1916    37891 BATINCLUDE  1908      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1917    37931 BATINCLUDE  1908      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1918    37981 BATINCLUDE  1908      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1919    38002 BATINCLUDE  1908      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1920    38008 BATINCLUDE  1908      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1921    38014 BATINCLUDE  1908      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1922    38085 BATINCLUDE  1908      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1923    38091 BATINCLUDE  1908      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1924    38156 BATINCLUDE  1908      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1925    38170 BATINCLUDE  1908      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1926    38189 BATINCLUDE  1908      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1927    38195 BATINCLUDE  1908      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1928    38202 BATINCLUDE  1908      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1929    38221 BATINCLUDE  1908      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1930    38254 BATINCLUDE  1908      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1931    38288 BATINCLUDE  1908      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1932    38341 BATINCLUDE  1908      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1933    38402 BATINCLUDE  1908      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1934    38409 BATINCLUDE  1908      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1935    38453 BATINCLUDE  1908      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1936    38459 BATINCLUDE  1908      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1937    38465 BATINCLUDE  1908      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1938    38473 BATINCLUDE  1908      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1939    38496 BATINCLUDE  1908      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1940    38510 BATINCLUDE  1908      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1941    38548 BATINCLUDE  1908      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1942    38587 BATINCLUDE  1908      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1943    38606 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1944    38615 BATINCLUDE  1943       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1945    38628 BATINCLUDE  1943      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1946    38639 BATINCLUDE  1943      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1947    38645 BATINCLUDE  1943      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1948    38656 BATINCLUDE  1943      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1949    38667 BATINCLUDE  1943      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1950    38685 BATINCLUDE  1943      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1951    38712 BATINCLUDE  1943      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1952    38732 BATINCLUDE  1943      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1953    38751 BATINCLUDE  1943      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1954    38772 BATINCLUDE  1943      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1955    38778 BATINCLUDE  1943      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1956    38784 BATINCLUDE  1943      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1957    38804 BATINCLUDE  1943      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1958    38810 BATINCLUDE  1943      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1959    38825 BATINCLUDE  1943      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1960    38838 BATINCLUDE  1943      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1961    38849 BATINCLUDE  1943      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1962    38855 BATINCLUDE  1943      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1963    38862 BATINCLUDE  1943      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1964    38875 BATINCLUDE  1943      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  1965    38891 BATINCLUDE  1943      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  1966    38906 BATINCLUDE  1943      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  1967    38927 BATINCLUDE  1943      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  1968    38950 BATINCLUDE  1943      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  1969    38957 BATINCLUDE  1943      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  1970    38977 BATINCLUDE  1943      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  1971    38983 BATINCLUDE  1943      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  1972    38989 BATINCLUDE  1943      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  1973    38997 BATINCLUDE  1943      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  1974    39020 BATINCLUDE  1943      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  1975    39034 BATINCLUDE  1943      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  1976    39052 BATINCLUDE  1943      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  1977    39074 BATINCLUDE  1943      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  1978    39103 BATINCLUDE   297       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  1979    39112 BATINCLUDE  1978       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  1980    39125 BATINCLUDE  1978      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  1981    39136 BATINCLUDE  1978      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  1982    39142 BATINCLUDE  1978      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  1983    39153 BATINCLUDE  1978      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  1984    39164 BATINCLUDE  1978      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  1985    39182 BATINCLUDE  1978      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  1986    39209 BATINCLUDE  1978      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  1987    39229 BATINCLUDE  1978      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  1988    39248 BATINCLUDE  1978      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  1989    39269 BATINCLUDE  1978      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  1990    39275 BATINCLUDE  1978      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  1991    39281 BATINCLUDE  1978      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  1992    39301 BATINCLUDE  1978      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  1993    39307 BATINCLUDE  1978      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  1994    39322 BATINCLUDE  1978      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  1995    39335 BATINCLUDE  1978      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  1996    39346 BATINCLUDE  1978      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  1997    39352 BATINCLUDE  1978      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  1998    39359 BATINCLUDE  1978      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  1999    39372 BATINCLUDE  1978      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2000    39388 BATINCLUDE  1978      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2001    39403 BATINCLUDE  1978      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2002    39424 BATINCLUDE  1978      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2003    39447 BATINCLUDE  1978      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2004    39454 BATINCLUDE  1978      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2005    39474 BATINCLUDE  1978      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2006    39480 BATINCLUDE  1978      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2007    39486 BATINCLUDE  1978      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2008    39494 BATINCLUDE  1978      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2009    39517 BATINCLUDE  1978      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2010    39531 BATINCLUDE  1978      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2011    39549 BATINCLUDE  1978      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2012    39571 BATINCLUDE  1978      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2013    39589 BATINCLUDE   297      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2014    39598 BATINCLUDE  2013       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2015    39634 BATINCLUDE  2013      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2016    39645 BATINCLUDE  2013      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2017    39651 BATINCLUDE  2013      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2018    39662 BATINCLUDE  2013      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2019    39701 BATINCLUDE  2013      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2020    39759 BATINCLUDE  2013      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2021    39863 BATINCLUDE  2013      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2022    39903 BATINCLUDE  2013      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2023    39953 BATINCLUDE  2013      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2024    39974 BATINCLUDE  2013      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2025    39980 BATINCLUDE  2013      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2026    39986 BATINCLUDE  2013      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2027    40057 BATINCLUDE  2013      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2028    40063 BATINCLUDE  2013      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2029    40128 BATINCLUDE  2013      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2030    40142 BATINCLUDE  2013      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2031    40161 BATINCLUDE  2013      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2032    40167 BATINCLUDE  2013      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2033    40174 BATINCLUDE  2013      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2034    40193 BATINCLUDE  2013      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2035    40226 BATINCLUDE  2013      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2036    40260 BATINCLUDE  2013      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2037    40313 BATINCLUDE  2013      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2038    40374 BATINCLUDE  2013      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2039    40381 BATINCLUDE  2013      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2040    40425 BATINCLUDE  2013      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2041    40431 BATINCLUDE  2013      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2042    40437 BATINCLUDE  2013      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2043    40445 BATINCLUDE  2013      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2044    40468 BATINCLUDE  2013      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2045    40482 BATINCLUDE  2013      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2046    40520 BATINCLUDE  2013      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2047    40559 BATINCLUDE  2013      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2048    40578 BATINCLUDE   297      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2049    40587 BATINCLUDE  2048       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2050    40600 BATINCLUDE  2048      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2051    40611 BATINCLUDE  2048      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2052    40617 BATINCLUDE  2048      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2053    40628 BATINCLUDE  2048      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2054    40639 BATINCLUDE  2048      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2055    40657 BATINCLUDE  2048      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2056    40684 BATINCLUDE  2048      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2057    40704 BATINCLUDE  2048      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2058    40723 BATINCLUDE  2048      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2059    40744 BATINCLUDE  2048      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2060    40750 BATINCLUDE  2048      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2061    40756 BATINCLUDE  2048      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2062    40776 BATINCLUDE  2048      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2063    40782 BATINCLUDE  2048      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2064    40797 BATINCLUDE  2048      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2065    40810 BATINCLUDE  2048      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2066    40821 BATINCLUDE  2048      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2067    40827 BATINCLUDE  2048      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2068    40834 BATINCLUDE  2048      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2069    40847 BATINCLUDE  2048      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2070    40863 BATINCLUDE  2048      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2071    40878 BATINCLUDE  2048      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2072    40899 BATINCLUDE  2048      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2073    40922 BATINCLUDE  2048      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2074    40929 BATINCLUDE  2048      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2075    40949 BATINCLUDE  2048      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2076    40955 BATINCLUDE  2048      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2077    40961 BATINCLUDE  2048      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2078    40969 BATINCLUDE  2048      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2079    40992 BATINCLUDE  2048      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2080    41006 BATINCLUDE  2048      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2081    41024 BATINCLUDE  2048      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2082    41046 BATINCLUDE  2048      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2083    41074 BATINCLUDE   292      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\forsameclt.gms
  2084    41173 BATINCLUDE   292      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2085    41197 BATINCLUDE   292      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2086    41206 BATINCLUDE  2085       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2087    41214 BATINCLUDE  2085      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2088    41225 BATINCLUDE  2085      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2089    41231 BATINCLUDE  2085      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2090    41242 BATINCLUDE  2085      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2091    41248 BATINCLUDE  2085      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2092    41258 BATINCLUDE  2085      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2093    41264 BATINCLUDE  2085      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2094    41280 BATINCLUDE  2085      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2095    41289 BATINCLUDE  2085      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2096    41322 BATINCLUDE  2085      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2097    41328 BATINCLUDE  2085      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2098    41334 BATINCLUDE  2085      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2099    41344 BATINCLUDE  2085      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2100    41350 BATINCLUDE  2085      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2101    41358 BATINCLUDE  2085      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2102    41366 BATINCLUDE  2085      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2103    41372 BATINCLUDE  2085      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2104    41378 BATINCLUDE  2085      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2105    41385 BATINCLUDE  2085      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2106    41392 BATINCLUDE  2085      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2107    41399 BATINCLUDE  2085      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2108    41408 BATINCLUDE  2085      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2109    41421 BATINCLUDE  2085      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2110    41434 BATINCLUDE  2085      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2111    41462 BATINCLUDE  2085      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2112    41470 BATINCLUDE  2085      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2113    41476 BATINCLUDE  2085      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2114    41482 BATINCLUDE  2085      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2115    41490 BATINCLUDE  2085      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2116    41508 BATINCLUDE  2085      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2117    41517 BATINCLUDE  2085      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2118    41523 BATINCLUDE  2085      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2119    41535 BATINCLUDE  2085      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2120    41559 BATINCLUDE   292      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2121    41568 BATINCLUDE  2120       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2122    41576 BATINCLUDE  2120      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2123    41587 BATINCLUDE  2120      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2124    41593 BATINCLUDE  2120      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2125    41604 BATINCLUDE  2120      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2126    41610 BATINCLUDE  2120      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2127    41620 BATINCLUDE  2120      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2128    41636 BATINCLUDE  2120      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2129    41663 BATINCLUDE  2120      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2130    41690 BATINCLUDE  2120      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2131    41711 BATINCLUDE  2120      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2132    41717 BATINCLUDE  2120      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2133    41723 BATINCLUDE  2120      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2134    41755 BATINCLUDE  2120      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2135    41771 BATINCLUDE  2120      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2136    41779 BATINCLUDE  2120      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2137    41787 BATINCLUDE  2120      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2138    41805 BATINCLUDE  2120      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2139    41811 BATINCLUDE  2120      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2140    41831 BATINCLUDE  2120      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2141    41847 BATINCLUDE  2120      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2142    41870 BATINCLUDE  2120      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2143    41879 BATINCLUDE  2120      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2144    41909 BATINCLUDE  2120      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2145    41931 BATINCLUDE  2120      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2146    41938 BATINCLUDE  2120      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2147    41951 BATINCLUDE  2120      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2148    41970 BATINCLUDE  2120      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2149    42007 BATINCLUDE  2120      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2150    42047 BATINCLUDE  2120      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2151    42070 BATINCLUDE  2120      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2152    42079 BATINCLUDE  2120      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2153    42101 BATINCLUDE  2120      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2154    42113 BATINCLUDE  2120      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2155    42156 BATINCLUDE   292      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
  2156    42165 BATINCLUDE  2155     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
  2157    42188 BATINCLUDE   292      48  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\solve.gms
  2158    42385 INCLUDE      292      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\compute_marginal.gms
  2159    42389 BATINCLUDE  2158       4  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2160    42571 BATINCLUDE  2158       5  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2161    42753 BATINCLUDE  2158       6  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2162    42935 BATINCLUDE  2158       7  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2163    43117 BATINCLUDE  2158       8  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2164    43300 BATINCLUDE   292      52  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
  2165    43313 BATINCLUDE  2164      89  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2166    43495 BATINCLUDE  2164      90  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2167    43685 BATINCLUDE  2164      99  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2168    43867 BATINCLUDE  2164     100  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\get_marginal.gms
  2169    44058 BATINCLUDE  2164     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
  2170    44067 BATINCLUDE   292      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
  2171    44088 BATINCLUDE  2170     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
  2172    44097 BATINCLUDE   292      56  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
  2173    44160 BATINCLUDE  2172     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
  2174    44180 BATINCLUDE   292      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
  2175    44205 BATINCLUDE  2174     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
  2176    44260 BATINCLUDE   292      60  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv.gms
  2177    44297 BATINCLUDE  2176     220  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\conv_admm.gms
  2178    44306 BATINCLUDE   292      62  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2179    44315 BATINCLUDE  2178       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2180    44323 BATINCLUDE  2178      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2181    44334 BATINCLUDE  2178      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2182    44340 BATINCLUDE  2178      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2183    44351 BATINCLUDE  2178      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2184    44392 BATINCLUDE  2178      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2185    44402 BATINCLUDE  2178      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2186    44408 BATINCLUDE  2178      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2187    44417 BATINCLUDE  2178      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2188    44426 BATINCLUDE  2178      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2189    44447 BATINCLUDE  2178      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2190    44453 BATINCLUDE  2178      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2191    44459 BATINCLUDE  2178      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2192    44469 BATINCLUDE  2178      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2193    44475 BATINCLUDE  2178      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2194    44483 BATINCLUDE  2178      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2195    44491 BATINCLUDE  2178      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2196    44497 BATINCLUDE  2178      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2197    44503 BATINCLUDE  2178      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2198    44510 BATINCLUDE  2178      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2199    44517 BATINCLUDE  2178      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2200    44524 BATINCLUDE  2178      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2201    44533 BATINCLUDE  2178      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2202    44541 BATINCLUDE  2178      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2203    44549 BATINCLUDE  2178      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2204    44556 BATINCLUDE  2178      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2205    44564 BATINCLUDE  2178      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2206    44570 BATINCLUDE  2178      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2207    44576 BATINCLUDE  2178      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2208    44584 BATINCLUDE  2178      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2209    44642 BATINCLUDE  2178      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2210    44651 BATINCLUDE  2178      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2211    44657 BATINCLUDE  2178      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2212    44669 BATINCLUDE  2178      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2213    44686 BATINCLUDE   292      64  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2214    44768 BATINCLUDE   292      66  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2215    44794 BATINCLUDE   292      77  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2216    44803 BATINCLUDE  2215       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2217    44811 BATINCLUDE  2215      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2218    44822 BATINCLUDE  2215      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2219    44828 BATINCLUDE  2215      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2220    44839 BATINCLUDE  2215      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2221    44845 BATINCLUDE  2215      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2222    44855 BATINCLUDE  2215      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2223    44871 BATINCLUDE  2215      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2224    44898 BATINCLUDE  2215      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2225    44925 BATINCLUDE  2215      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2226    44946 BATINCLUDE  2215      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2227    44952 BATINCLUDE  2215      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2228    44958 BATINCLUDE  2215      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2229    44990 BATINCLUDE  2215      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2230    45006 BATINCLUDE  2215      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2231    45014 BATINCLUDE  2215      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2232    45022 BATINCLUDE  2215      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2233    45040 BATINCLUDE  2215      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2234    45046 BATINCLUDE  2215      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2235    45066 BATINCLUDE  2215      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2236    45082 BATINCLUDE  2215      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2237    45105 BATINCLUDE  2215      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2238    45114 BATINCLUDE  2215      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2239    45144 BATINCLUDE  2215      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2240    45166 BATINCLUDE  2215      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2241    45173 BATINCLUDE  2215      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2242    45186 BATINCLUDE  2215      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2243    45205 BATINCLUDE  2215      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2244    45242 BATINCLUDE  2215      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2245    45282 BATINCLUDE  2215      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2246    45305 BATINCLUDE  2215      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2247    45314 BATINCLUDE  2215      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2248    45336 BATINCLUDE  2215      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2249    45348 BATINCLUDE  2215      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2250    45389 BATINCLUDE   292      79  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2251    45398 BATINCLUDE  2250       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2252    45406 BATINCLUDE  2250      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2253    45417 BATINCLUDE  2250      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2254    45423 BATINCLUDE  2250      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2255    45434 BATINCLUDE  2250      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2256    45475 BATINCLUDE  2250      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2257    45485 BATINCLUDE  2250      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2258    45491 BATINCLUDE  2250      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2259    45500 BATINCLUDE  2250      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2260    45509 BATINCLUDE  2250      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2261    45530 BATINCLUDE  2250      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2262    45536 BATINCLUDE  2250      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2263    45542 BATINCLUDE  2250      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2264    45552 BATINCLUDE  2250      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2265    45558 BATINCLUDE  2250      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2266    45566 BATINCLUDE  2250      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2267    45574 BATINCLUDE  2250      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2268    45580 BATINCLUDE  2250      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2269    45586 BATINCLUDE  2250      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2270    45593 BATINCLUDE  2250      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2271    45600 BATINCLUDE  2250      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2272    45607 BATINCLUDE  2250      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2273    45616 BATINCLUDE  2250      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2274    45624 BATINCLUDE  2250      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2275    45632 BATINCLUDE  2250      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2276    45639 BATINCLUDE  2250      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2277    45647 BATINCLUDE  2250      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2278    45653 BATINCLUDE  2250      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2279    45659 BATINCLUDE  2250      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2280    45667 BATINCLUDE  2250      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2281    45725 BATINCLUDE  2250      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2282    45734 BATINCLUDE  2250      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2283    45740 BATINCLUDE  2250      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2284    45752 BATINCLUDE  2250      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2285    45771 BATINCLUDE   292      83  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2286    45799 BATINCLUDE   292      87  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2287    45826 BATINCLUDE   292      90  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2288    45835 BATINCLUDE  2287       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2289    45843 BATINCLUDE  2287      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2290    45854 BATINCLUDE  2287      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2291    45860 BATINCLUDE  2287      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2292    45871 BATINCLUDE  2287      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2293    45877 BATINCLUDE  2287      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2294    45887 BATINCLUDE  2287      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2295    45893 BATINCLUDE  2287      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2296    45902 BATINCLUDE  2287      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2297    45911 BATINCLUDE  2287      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2298    45932 BATINCLUDE  2287      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2299    45938 BATINCLUDE  2287      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2300    45944 BATINCLUDE  2287      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2301    45954 BATINCLUDE  2287      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2302    45960 BATINCLUDE  2287      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2303    45968 BATINCLUDE  2287      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2304    45976 BATINCLUDE  2287      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2305    45982 BATINCLUDE  2287      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2306    45988 BATINCLUDE  2287      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2307    45995 BATINCLUDE  2287      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2308    46002 BATINCLUDE  2287      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2309    46009 BATINCLUDE  2287      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2310    46018 BATINCLUDE  2287      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2311    46026 BATINCLUDE  2287      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2312    46034 BATINCLUDE  2287      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2313    46041 BATINCLUDE  2287      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2314    46049 BATINCLUDE  2287      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2315    46055 BATINCLUDE  2287      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2316    46061 BATINCLUDE  2287      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2317    46069 BATINCLUDE  2287      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2318    46087 BATINCLUDE  2287      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2319    46100 BATINCLUDE  2287      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2320    46106 BATINCLUDE  2287      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2321    46118 BATINCLUDE  2287      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2322    46135 BATINCLUDE   292      92  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2323    46148 BATINCLUDE   292      98  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\report.gms
  2324    46172 BATINCLUDE     1     141  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2325    46181 BATINCLUDE  2324       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2326    46189 BATINCLUDE  2324      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2327    46200 BATINCLUDE  2324      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2328    46206 BATINCLUDE  2324      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2329    46217 BATINCLUDE  2324      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2330    46223 BATINCLUDE  2324      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2331    46233 BATINCLUDE  2324      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2332    46239 BATINCLUDE  2324      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2333    46248 BATINCLUDE  2324      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2334    46257 BATINCLUDE  2324      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2335    46278 BATINCLUDE  2324      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2336    46284 BATINCLUDE  2324      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2337    46290 BATINCLUDE  2324      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2338    46300 BATINCLUDE  2324      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2339    46306 BATINCLUDE  2324      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2340    46314 BATINCLUDE  2324      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2341    46322 BATINCLUDE  2324      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2342    46328 BATINCLUDE  2324      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2343    46334 BATINCLUDE  2324      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2344    46341 BATINCLUDE  2324      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2345    46348 BATINCLUDE  2324      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2346    46355 BATINCLUDE  2324      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2347    46364 BATINCLUDE  2324      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2348    46372 BATINCLUDE  2324      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2349    46380 BATINCLUDE  2324      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2350    46387 BATINCLUDE  2324      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2351    46395 BATINCLUDE  2324      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2352    46401 BATINCLUDE  2324      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2353    46407 BATINCLUDE  2324      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2354    46415 BATINCLUDE  2324      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2355    46433 BATINCLUDE  2324      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2356    46442 BATINCLUDE  2324      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2357    46448 BATINCLUDE  2324      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2358    46460 BATINCLUDE  2324      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2359    46477 BATINCLUDE     1     143  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2360    46486 BATINCLUDE  2359       9  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2361    46494 BATINCLUDE  2359      12  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2362    46505 BATINCLUDE  2359      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2363    46511 BATINCLUDE  2359      16  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2364    46522 BATINCLUDE  2359      19  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2365    46528 BATINCLUDE  2359      20  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2366    46538 BATINCLUDE  2359      21  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2367    46544 BATINCLUDE  2359      22  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2368    46553 BATINCLUDE  2359      23  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2369    46562 BATINCLUDE  2359      24  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2370    46583 BATINCLUDE  2359      27  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2371    46589 BATINCLUDE  2359      28  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2372    46595 BATINCLUDE  2359      29  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2373    46605 BATINCLUDE  2359      30  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2374    46611 BATINCLUDE  2359      31  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2375    46619 BATINCLUDE  2359      32  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2376    46627 BATINCLUDE  2359      33  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2377    46633 BATINCLUDE  2359      34  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2378    46639 BATINCLUDE  2359      35  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2379    46646 BATINCLUDE  2359      36  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2380    46653 BATINCLUDE  2359      37  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2381    46660 BATINCLUDE  2359      39  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2382    46669 BATINCLUDE  2359      40  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2383    46695 BATINCLUDE  2359      41  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2384    46703 BATINCLUDE  2359      42  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2385    46710 BATINCLUDE  2359      44  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2386    46718 BATINCLUDE  2359      45  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2387    46724 BATINCLUDE  2359      46  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2388    46730 BATINCLUDE  2359      47  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2389    46738 BATINCLUDE  2359      50  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2390    46756 BATINCLUDE  2359      51  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2391    46779 BATINCLUDE  2359      53  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2392    46800 BATINCLUDE  2359      54  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2393    46812 BATINCLUDE  2359      58  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2394    46829 INCLUDE        1     145  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\post\gdx.gms
  2395    46837 IF EXIST    2394       8  .C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\algoitemlist.txt
  2396    46837 INCLUDE     2394       8  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\algo\algoitemlist.txt
  2397    46860 BATINCLUDE  2394      11  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\post\gdx_eql.gms
  2398    46870 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2399    46879 BATINCLUDE  2398       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2400    46892 BATINCLUDE  2398      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2401    46903 BATINCLUDE  2398      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2402    46909 BATINCLUDE  2398      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2403    46920 BATINCLUDE  2398      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2404    46931 BATINCLUDE  2398      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2405    46949 BATINCLUDE  2398      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2406    46976 BATINCLUDE  2398      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2407    46996 BATINCLUDE  2398      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2408    47015 BATINCLUDE  2398      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2409    47036 BATINCLUDE  2398      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2410    47042 BATINCLUDE  2398      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2411    47048 BATINCLUDE  2398      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2412    47068 BATINCLUDE  2398      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2413    47074 BATINCLUDE  2398      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2414    47089 BATINCLUDE  2398      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2415    47102 BATINCLUDE  2398      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2416    47113 BATINCLUDE  2398      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2417    47119 BATINCLUDE  2398      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2418    47126 BATINCLUDE  2398      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2419    47139 BATINCLUDE  2398      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2420    47155 BATINCLUDE  2398      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2421    47170 BATINCLUDE  2398      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2422    47191 BATINCLUDE  2398      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2423    47214 BATINCLUDE  2398      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2424    47221 BATINCLUDE  2398      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2425    47241 BATINCLUDE  2398      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2426    47247 BATINCLUDE  2398      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2427    47253 BATINCLUDE  2398      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2428    47261 BATINCLUDE  2398      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2429    47284 BATINCLUDE  2398      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2430    47298 BATINCLUDE  2398      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2431    47316 BATINCLUDE  2398      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2432    47338 BATINCLUDE  2398      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2433    47360 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2434    47369 BATINCLUDE  2433       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2435    47382 BATINCLUDE  2433      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2436    47393 BATINCLUDE  2433      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2437    47399 BATINCLUDE  2433      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2438    47410 BATINCLUDE  2433      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2439    47421 BATINCLUDE  2433      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2440    47439 BATINCLUDE  2433      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2441    47466 BATINCLUDE  2433      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2442    47486 BATINCLUDE  2433      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2443    47505 BATINCLUDE  2433      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2444    47526 BATINCLUDE  2433      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2445    47532 BATINCLUDE  2433      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2446    47538 BATINCLUDE  2433      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2447    47558 BATINCLUDE  2433      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2448    47564 BATINCLUDE  2433      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2449    47579 BATINCLUDE  2433      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2450    47592 BATINCLUDE  2433      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2451    47603 BATINCLUDE  2433      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2452    47609 BATINCLUDE  2433      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2453    47616 BATINCLUDE  2433      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2454    47629 BATINCLUDE  2433      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2455    47645 BATINCLUDE  2433      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2456    47660 BATINCLUDE  2433      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2457    47681 BATINCLUDE  2433      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2458    47704 BATINCLUDE  2433      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2459    47711 BATINCLUDE  2433      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2460    47731 BATINCLUDE  2433      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2461    47737 BATINCLUDE  2433      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2462    47743 BATINCLUDE  2433      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2463    47751 BATINCLUDE  2433      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2464    47774 BATINCLUDE  2433      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2465    47788 BATINCLUDE  2433      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2466    47806 BATINCLUDE  2433      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2467    47828 BATINCLUDE  2433      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2468    47850 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2469    47859 BATINCLUDE  2468       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2470    47872 BATINCLUDE  2468      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2471    47883 BATINCLUDE  2468      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2472    47889 BATINCLUDE  2468      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2473    47900 BATINCLUDE  2468      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2474    47911 BATINCLUDE  2468      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2475    47929 BATINCLUDE  2468      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2476    47956 BATINCLUDE  2468      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2477    47976 BATINCLUDE  2468      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2478    47995 BATINCLUDE  2468      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2479    48016 BATINCLUDE  2468      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2480    48022 BATINCLUDE  2468      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2481    48028 BATINCLUDE  2468      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2482    48048 BATINCLUDE  2468      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2483    48054 BATINCLUDE  2468      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2484    48069 BATINCLUDE  2468      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2485    48082 BATINCLUDE  2468      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2486    48093 BATINCLUDE  2468      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2487    48099 BATINCLUDE  2468      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2488    48106 BATINCLUDE  2468      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2489    48119 BATINCLUDE  2468      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2490    48135 BATINCLUDE  2468      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2491    48150 BATINCLUDE  2468      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2492    48171 BATINCLUDE  2468      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2493    48194 BATINCLUDE  2468      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2494    48201 BATINCLUDE  2468      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2495    48221 BATINCLUDE  2468      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2496    48227 BATINCLUDE  2468      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2497    48233 BATINCLUDE  2468      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2498    48241 BATINCLUDE  2468      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2499    48264 BATINCLUDE  2468      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2500    48278 BATINCLUDE  2468      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2501    48296 BATINCLUDE  2468      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2502    48318 BATINCLUDE  2468      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2503    48340 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2504    48349 BATINCLUDE  2503       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2505    48362 BATINCLUDE  2503      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2506    48373 BATINCLUDE  2503      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2507    48379 BATINCLUDE  2503      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2508    48390 BATINCLUDE  2503      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2509    48401 BATINCLUDE  2503      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2510    48419 BATINCLUDE  2503      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2511    48446 BATINCLUDE  2503      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2512    48466 BATINCLUDE  2503      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2513    48485 BATINCLUDE  2503      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2514    48506 BATINCLUDE  2503      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2515    48512 BATINCLUDE  2503      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2516    48518 BATINCLUDE  2503      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2517    48538 BATINCLUDE  2503      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2518    48544 BATINCLUDE  2503      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2519    48559 BATINCLUDE  2503      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2520    48572 BATINCLUDE  2503      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2521    48583 BATINCLUDE  2503      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2522    48589 BATINCLUDE  2503      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2523    48596 BATINCLUDE  2503      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2524    48609 BATINCLUDE  2503      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2525    48625 BATINCLUDE  2503      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2526    48640 BATINCLUDE  2503      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2527    48661 BATINCLUDE  2503      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2528    48684 BATINCLUDE  2503      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2529    48691 BATINCLUDE  2503      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2530    48711 BATINCLUDE  2503      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2531    48717 BATINCLUDE  2503      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2532    48723 BATINCLUDE  2503      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2533    48731 BATINCLUDE  2503      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2534    48754 BATINCLUDE  2503      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2535    48768 BATINCLUDE  2503      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2536    48786 BATINCLUDE  2503      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2537    48808 BATINCLUDE  2503      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2538    48830 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2539    48839 BATINCLUDE  2538       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2540    48852 BATINCLUDE  2538      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2541    48863 BATINCLUDE  2538      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2542    48869 BATINCLUDE  2538      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2543    48880 BATINCLUDE  2538      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2544    48891 BATINCLUDE  2538      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2545    48909 BATINCLUDE  2538      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2546    48936 BATINCLUDE  2538      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2547    48956 BATINCLUDE  2538      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2548    48975 BATINCLUDE  2538      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2549    48996 BATINCLUDE  2538      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2550    49002 BATINCLUDE  2538      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2551    49008 BATINCLUDE  2538      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2552    49028 BATINCLUDE  2538      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2553    49034 BATINCLUDE  2538      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2554    49049 BATINCLUDE  2538      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2555    49062 BATINCLUDE  2538      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2556    49073 BATINCLUDE  2538      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2557    49079 BATINCLUDE  2538      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2558    49086 BATINCLUDE  2538      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2559    49099 BATINCLUDE  2538      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2560    49115 BATINCLUDE  2538      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2561    49130 BATINCLUDE  2538      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2562    49151 BATINCLUDE  2538      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2563    49174 BATINCLUDE  2538      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2564    49181 BATINCLUDE  2538      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2565    49201 BATINCLUDE  2538      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2566    49207 BATINCLUDE  2538      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2567    49213 BATINCLUDE  2538      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2568    49221 BATINCLUDE  2538      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2569    49244 BATINCLUDE  2538      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2570    49258 BATINCLUDE  2538      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2571    49276 BATINCLUDE  2538      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2572    49298 BATINCLUDE  2538      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2573    49320 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2574    49329 BATINCLUDE  2573       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2575    49342 BATINCLUDE  2573      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2576    49353 BATINCLUDE  2573      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2577    49359 BATINCLUDE  2573      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2578    49370 BATINCLUDE  2573      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2579    49381 BATINCLUDE  2573      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2580    49399 BATINCLUDE  2573      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2581    49426 BATINCLUDE  2573      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2582    49446 BATINCLUDE  2573      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2583    49465 BATINCLUDE  2573      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2584    49486 BATINCLUDE  2573      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2585    49492 BATINCLUDE  2573      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2586    49498 BATINCLUDE  2573      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2587    49518 BATINCLUDE  2573      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2588    49524 BATINCLUDE  2573      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2589    49539 BATINCLUDE  2573      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2590    49552 BATINCLUDE  2573      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2591    49563 BATINCLUDE  2573      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2592    49569 BATINCLUDE  2573      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2593    49576 BATINCLUDE  2573      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2594    49589 BATINCLUDE  2573      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2595    49605 BATINCLUDE  2573      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2596    49620 BATINCLUDE  2573      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2597    49641 BATINCLUDE  2573      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2598    49664 BATINCLUDE  2573      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2599    49671 BATINCLUDE  2573      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2600    49691 BATINCLUDE  2573      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2601    49697 BATINCLUDE  2573      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2602    49703 BATINCLUDE  2573      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2603    49711 BATINCLUDE  2573      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2604    49734 BATINCLUDE  2573      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2605    49748 BATINCLUDE  2573      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2606    49766 BATINCLUDE  2573      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2607    49788 BATINCLUDE  2573      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2608    49810 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2609    49819 BATINCLUDE  2608       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2610    49832 BATINCLUDE  2608      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2611    49843 BATINCLUDE  2608      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2612    49849 BATINCLUDE  2608      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2613    49860 BATINCLUDE  2608      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2614    49871 BATINCLUDE  2608      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2615    49889 BATINCLUDE  2608      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2616    49916 BATINCLUDE  2608      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2617    49936 BATINCLUDE  2608      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2618    49955 BATINCLUDE  2608      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2619    49976 BATINCLUDE  2608      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2620    49982 BATINCLUDE  2608      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2621    49988 BATINCLUDE  2608      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2622    50008 BATINCLUDE  2608      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2623    50014 BATINCLUDE  2608      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2624    50029 BATINCLUDE  2608      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2625    50042 BATINCLUDE  2608      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2626    50053 BATINCLUDE  2608      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2627    50059 BATINCLUDE  2608      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2628    50066 BATINCLUDE  2608      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2629    50079 BATINCLUDE  2608      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2630    50095 BATINCLUDE  2608      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2631    50110 BATINCLUDE  2608      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2632    50131 BATINCLUDE  2608      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2633    50154 BATINCLUDE  2608      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2634    50161 BATINCLUDE  2608      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2635    50181 BATINCLUDE  2608      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2636    50187 BATINCLUDE  2608      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2637    50193 BATINCLUDE  2608      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2638    50201 BATINCLUDE  2608      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2639    50224 BATINCLUDE  2608      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2640    50238 BATINCLUDE  2608      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2641    50256 BATINCLUDE  2608      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2642    50278 BATINCLUDE  2608      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2643    50300 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2644    50309 BATINCLUDE  2643       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2645    50322 BATINCLUDE  2643      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2646    50333 BATINCLUDE  2643      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2647    50339 BATINCLUDE  2643      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2648    50350 BATINCLUDE  2643      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2649    50361 BATINCLUDE  2643      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2650    50379 BATINCLUDE  2643      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2651    50406 BATINCLUDE  2643      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2652    50426 BATINCLUDE  2643      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2653    50445 BATINCLUDE  2643      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2654    50466 BATINCLUDE  2643      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2655    50472 BATINCLUDE  2643      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2656    50478 BATINCLUDE  2643      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2657    50498 BATINCLUDE  2643      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2658    50504 BATINCLUDE  2643      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2659    50519 BATINCLUDE  2643      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2660    50532 BATINCLUDE  2643      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2661    50543 BATINCLUDE  2643      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2662    50549 BATINCLUDE  2643      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2663    50556 BATINCLUDE  2643      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2664    50569 BATINCLUDE  2643      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2665    50585 BATINCLUDE  2643      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2666    50600 BATINCLUDE  2643      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2667    50621 BATINCLUDE  2643      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2668    50644 BATINCLUDE  2643      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2669    50651 BATINCLUDE  2643      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2670    50671 BATINCLUDE  2643      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2671    50677 BATINCLUDE  2643      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2672    50683 BATINCLUDE  2643      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2673    50691 BATINCLUDE  2643      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2674    50714 BATINCLUDE  2643      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2675    50728 BATINCLUDE  2643      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2676    50746 BATINCLUDE  2643      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2677    50768 BATINCLUDE  2643      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2678    50790 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2679    50799 BATINCLUDE  2678       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2680    50812 BATINCLUDE  2678      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2681    50823 BATINCLUDE  2678      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2682    50829 BATINCLUDE  2678      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2683    50840 BATINCLUDE  2678      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2684    50851 BATINCLUDE  2678      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2685    50869 BATINCLUDE  2678      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2686    50896 BATINCLUDE  2678      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2687    50916 BATINCLUDE  2678      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2688    50935 BATINCLUDE  2678      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2689    50956 BATINCLUDE  2678      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2690    50962 BATINCLUDE  2678      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2691    50968 BATINCLUDE  2678      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2692    50988 BATINCLUDE  2678      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2693    50994 BATINCLUDE  2678      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2694    51009 BATINCLUDE  2678      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2695    51022 BATINCLUDE  2678      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2696    51033 BATINCLUDE  2678      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2697    51039 BATINCLUDE  2678      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2698    51046 BATINCLUDE  2678      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2699    51059 BATINCLUDE  2678      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2700    51075 BATINCLUDE  2678      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2701    51090 BATINCLUDE  2678      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2702    51111 BATINCLUDE  2678      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2703    51134 BATINCLUDE  2678      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2704    51141 BATINCLUDE  2678      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2705    51161 BATINCLUDE  2678      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2706    51167 BATINCLUDE  2678      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2707    51173 BATINCLUDE  2678      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2708    51181 BATINCLUDE  2678      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2709    51204 BATINCLUDE  2678      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2710    51218 BATINCLUDE  2678      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2711    51236 BATINCLUDE  2678      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2712    51258 BATINCLUDE  2678      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2713    51280 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2714    51289 BATINCLUDE  2713       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2715    51302 BATINCLUDE  2713      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2716    51313 BATINCLUDE  2713      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2717    51319 BATINCLUDE  2713      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2718    51330 BATINCLUDE  2713      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2719    51341 BATINCLUDE  2713      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2720    51359 BATINCLUDE  2713      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2721    51386 BATINCLUDE  2713      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2722    51406 BATINCLUDE  2713      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2723    51425 BATINCLUDE  2713      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2724    51446 BATINCLUDE  2713      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2725    51452 BATINCLUDE  2713      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2726    51458 BATINCLUDE  2713      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2727    51478 BATINCLUDE  2713      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2728    51484 BATINCLUDE  2713      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2729    51499 BATINCLUDE  2713      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2730    51512 BATINCLUDE  2713      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2731    51523 BATINCLUDE  2713      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2732    51529 BATINCLUDE  2713      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2733    51536 BATINCLUDE  2713      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2734    51549 BATINCLUDE  2713      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2735    51565 BATINCLUDE  2713      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2736    51580 BATINCLUDE  2713      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2737    51601 BATINCLUDE  2713      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2738    51624 BATINCLUDE  2713      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2739    51631 BATINCLUDE  2713      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2740    51651 BATINCLUDE  2713      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2741    51657 BATINCLUDE  2713      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2742    51663 BATINCLUDE  2713      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2743    51671 BATINCLUDE  2713      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2744    51694 BATINCLUDE  2713      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2745    51708 BATINCLUDE  2713      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2746    51726 BATINCLUDE  2713      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2747    51748 BATINCLUDE  2713      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2748    51770 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2749    51779 BATINCLUDE  2748       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2750    51792 BATINCLUDE  2748      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2751    51803 BATINCLUDE  2748      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2752    51809 BATINCLUDE  2748      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2753    51820 BATINCLUDE  2748      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2754    51831 BATINCLUDE  2748      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2755    51849 BATINCLUDE  2748      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2756    51876 BATINCLUDE  2748      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2757    51896 BATINCLUDE  2748      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2758    51915 BATINCLUDE  2748      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2759    51936 BATINCLUDE  2748      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2760    51942 BATINCLUDE  2748      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2761    51948 BATINCLUDE  2748      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2762    51968 BATINCLUDE  2748      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2763    51974 BATINCLUDE  2748      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2764    51989 BATINCLUDE  2748      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2765    52002 BATINCLUDE  2748      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2766    52013 BATINCLUDE  2748      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2767    52019 BATINCLUDE  2748      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2768    52026 BATINCLUDE  2748      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2769    52039 BATINCLUDE  2748      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2770    52055 BATINCLUDE  2748      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2771    52070 BATINCLUDE  2748      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2772    52091 BATINCLUDE  2748      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2773    52114 BATINCLUDE  2748      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2774    52121 BATINCLUDE  2748      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2775    52141 BATINCLUDE  2748      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2776    52147 BATINCLUDE  2748      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2777    52153 BATINCLUDE  2748      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2778    52161 BATINCLUDE  2748      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2779    52184 BATINCLUDE  2748      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2780    52198 BATINCLUDE  2748      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2781    52216 BATINCLUDE  2748      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2782    52238 BATINCLUDE  2748      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2783    52260 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2784    52269 BATINCLUDE  2783       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2785    52282 BATINCLUDE  2783      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2786    52293 BATINCLUDE  2783      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2787    52299 BATINCLUDE  2783      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2788    52310 BATINCLUDE  2783      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2789    52321 BATINCLUDE  2783      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2790    52339 BATINCLUDE  2783      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2791    52366 BATINCLUDE  2783      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2792    52386 BATINCLUDE  2783      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2793    52405 BATINCLUDE  2783      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2794    52426 BATINCLUDE  2783      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2795    52432 BATINCLUDE  2783      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2796    52438 BATINCLUDE  2783      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2797    52458 BATINCLUDE  2783      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2798    52464 BATINCLUDE  2783      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2799    52479 BATINCLUDE  2783      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2800    52492 BATINCLUDE  2783      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2801    52503 BATINCLUDE  2783      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2802    52509 BATINCLUDE  2783      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2803    52516 BATINCLUDE  2783      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2804    52529 BATINCLUDE  2783      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2805    52545 BATINCLUDE  2783      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2806    52560 BATINCLUDE  2783      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2807    52581 BATINCLUDE  2783      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2808    52604 BATINCLUDE  2783      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2809    52611 BATINCLUDE  2783      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2810    52631 BATINCLUDE  2783      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2811    52637 BATINCLUDE  2783      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2812    52643 BATINCLUDE  2783      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2813    52651 BATINCLUDE  2783      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2814    52674 BATINCLUDE  2783      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2815    52688 BATINCLUDE  2783      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2816    52706 BATINCLUDE  2783      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2817    52728 BATINCLUDE  2783      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2818    52750 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2819    52759 BATINCLUDE  2818       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2820    52772 BATINCLUDE  2818      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2821    52783 BATINCLUDE  2818      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2822    52789 BATINCLUDE  2818      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2823    52800 BATINCLUDE  2818      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2824    52811 BATINCLUDE  2818      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2825    52829 BATINCLUDE  2818      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2826    52856 BATINCLUDE  2818      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2827    52876 BATINCLUDE  2818      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2828    52895 BATINCLUDE  2818      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2829    52916 BATINCLUDE  2818      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2830    52922 BATINCLUDE  2818      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2831    52928 BATINCLUDE  2818      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2832    52948 BATINCLUDE  2818      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2833    52954 BATINCLUDE  2818      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2834    52969 BATINCLUDE  2818      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2835    52982 BATINCLUDE  2818      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2836    52993 BATINCLUDE  2818      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2837    52999 BATINCLUDE  2818      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2838    53006 BATINCLUDE  2818      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2839    53019 BATINCLUDE  2818      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2840    53035 BATINCLUDE  2818      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2841    53050 BATINCLUDE  2818      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2842    53071 BATINCLUDE  2818      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2843    53094 BATINCLUDE  2818      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2844    53101 BATINCLUDE  2818      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2845    53121 BATINCLUDE  2818      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2846    53127 BATINCLUDE  2818      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2847    53133 BATINCLUDE  2818      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2848    53141 BATINCLUDE  2818      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2849    53164 BATINCLUDE  2818      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2850    53178 BATINCLUDE  2818      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2851    53196 BATINCLUDE  2818      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2852    53218 BATINCLUDE  2818      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2853    53240 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2854    53249 BATINCLUDE  2853       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2855    53262 BATINCLUDE  2853      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2856    53273 BATINCLUDE  2853      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2857    53279 BATINCLUDE  2853      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2858    53290 BATINCLUDE  2853      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2859    53301 BATINCLUDE  2853      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2860    53319 BATINCLUDE  2853      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2861    53346 BATINCLUDE  2853      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2862    53366 BATINCLUDE  2853      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2863    53385 BATINCLUDE  2853      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2864    53406 BATINCLUDE  2853      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2865    53412 BATINCLUDE  2853      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2866    53418 BATINCLUDE  2853      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2867    53438 BATINCLUDE  2853      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2868    53444 BATINCLUDE  2853      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2869    53459 BATINCLUDE  2853      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2870    53472 BATINCLUDE  2853      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2871    53483 BATINCLUDE  2853      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2872    53489 BATINCLUDE  2853      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2873    53496 BATINCLUDE  2853      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2874    53509 BATINCLUDE  2853      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2875    53525 BATINCLUDE  2853      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2876    53540 BATINCLUDE  2853      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2877    53561 BATINCLUDE  2853      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2878    53584 BATINCLUDE  2853      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2879    53591 BATINCLUDE  2853      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2880    53611 BATINCLUDE  2853      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2881    53617 BATINCLUDE  2853      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2882    53623 BATINCLUDE  2853      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2883    53631 BATINCLUDE  2853      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2884    53654 BATINCLUDE  2853      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2885    53668 BATINCLUDE  2853      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2886    53686 BATINCLUDE  2853      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2887    53708 BATINCLUDE  2853      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2888    53730 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2889    53739 BATINCLUDE  2888       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2890    53752 BATINCLUDE  2888      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2891    53763 BATINCLUDE  2888      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2892    53769 BATINCLUDE  2888      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2893    53780 BATINCLUDE  2888      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2894    53791 BATINCLUDE  2888      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2895    53809 BATINCLUDE  2888      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2896    53836 BATINCLUDE  2888      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2897    53856 BATINCLUDE  2888      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2898    53875 BATINCLUDE  2888      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2899    53896 BATINCLUDE  2888      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2900    53902 BATINCLUDE  2888      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2901    53908 BATINCLUDE  2888      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2902    53928 BATINCLUDE  2888      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2903    53934 BATINCLUDE  2888      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2904    53949 BATINCLUDE  2888      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2905    53962 BATINCLUDE  2888      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2906    53973 BATINCLUDE  2888      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2907    53979 BATINCLUDE  2888      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2908    53986 BATINCLUDE  2888      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2909    53999 BATINCLUDE  2888      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2910    54015 BATINCLUDE  2888      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2911    54030 BATINCLUDE  2888      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2912    54051 BATINCLUDE  2888      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2913    54074 BATINCLUDE  2888      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2914    54081 BATINCLUDE  2888      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2915    54101 BATINCLUDE  2888      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2916    54107 BATINCLUDE  2888      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2917    54113 BATINCLUDE  2888      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2918    54121 BATINCLUDE  2888      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2919    54144 BATINCLUDE  2888      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2920    54158 BATINCLUDE  2888      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2921    54176 BATINCLUDE  2888      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2922    54198 BATINCLUDE  2888      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2923    54220 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2924    54229 BATINCLUDE  2923       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2925    54242 BATINCLUDE  2923      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2926    54253 BATINCLUDE  2923      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2927    54259 BATINCLUDE  2923      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2928    54270 BATINCLUDE  2923      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2929    54281 BATINCLUDE  2923      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2930    54299 BATINCLUDE  2923      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2931    54326 BATINCLUDE  2923      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2932    54346 BATINCLUDE  2923      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2933    54365 BATINCLUDE  2923      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2934    54386 BATINCLUDE  2923      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2935    54392 BATINCLUDE  2923      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2936    54398 BATINCLUDE  2923      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2937    54418 BATINCLUDE  2923      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2938    54424 BATINCLUDE  2923      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2939    54439 BATINCLUDE  2923      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2940    54452 BATINCLUDE  2923      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2941    54463 BATINCLUDE  2923      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2942    54469 BATINCLUDE  2923      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2943    54476 BATINCLUDE  2923      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2944    54489 BATINCLUDE  2923      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2945    54505 BATINCLUDE  2923      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2946    54520 BATINCLUDE  2923      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2947    54541 BATINCLUDE  2923      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2948    54564 BATINCLUDE  2923      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2949    54571 BATINCLUDE  2923      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2950    54591 BATINCLUDE  2923      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2951    54597 BATINCLUDE  2923      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2952    54603 BATINCLUDE  2923      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2953    54611 BATINCLUDE  2923      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2954    54634 BATINCLUDE  2923      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2955    54648 BATINCLUDE  2923      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2956    54666 BATINCLUDE  2923      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2957    54688 BATINCLUDE  2923      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2958    54710 BATINCLUDE  2397      10  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2959    54719 BATINCLUDE  2958       9  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2960    54732 BATINCLUDE  2958      12  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2961    54743 BATINCLUDE  2958      15  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2962    54749 BATINCLUDE  2958      16  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2963    54760 BATINCLUDE  2958      19  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2964    54771 BATINCLUDE  2958      20  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  2965    54789 BATINCLUDE  2958      21  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  2966    54816 BATINCLUDE  2958      22  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  2967    54836 BATINCLUDE  2958      23  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  2968    54855 BATINCLUDE  2958      24  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  2969    54876 BATINCLUDE  2958      27  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  2970    54882 BATINCLUDE  2958      28  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  2971    54888 BATINCLUDE  2958      29  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  2972    54908 BATINCLUDE  2958      30  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  2973    54914 BATINCLUDE  2958      31  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  2974    54929 BATINCLUDE  2958      32  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  2975    54942 BATINCLUDE  2958      33  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  2976    54953 BATINCLUDE  2958      34  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  2977    54959 BATINCLUDE  2958      35  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  2978    54966 BATINCLUDE  2958      36  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  2979    54979 BATINCLUDE  2958      37  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  2980    54995 BATINCLUDE  2958      39  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  2981    55010 BATINCLUDE  2958      40  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  2982    55031 BATINCLUDE  2958      41  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  2983    55054 BATINCLUDE  2958      42  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  2984    55061 BATINCLUDE  2958      44  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  2985    55081 BATINCLUDE  2958      45  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  2986    55087 BATINCLUDE  2958      46  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  2987    55093 BATINCLUDE  2958      47  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  2988    55101 BATINCLUDE  2958      50  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  2989    55124 BATINCLUDE  2958      51  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  2990    55138 BATINCLUDE  2958      53  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  2991    55156 BATINCLUDE  2958      54  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  2992    55178 BATINCLUDE  2958      58  ....C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  2993    55201 BATINCLUDE  2394      14  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  2994    55210 BATINCLUDE  2993       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  2995    55230 BATINCLUDE  2993      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  2996    55253 BATINCLUDE  2993      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  2997    55266 BATINCLUDE  2993      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  2998    55283 BATINCLUDE  2993      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  2999    55309 BATINCLUDE  2993      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  3000    55347 BATINCLUDE  2993      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  3001    55419 BATINCLUDE  2993      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  3002    55455 BATINCLUDE  2993      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  3003    55489 BATINCLUDE  2993      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  3004    55522 BATINCLUDE  2993      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  3005    55528 BATINCLUDE  2993      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  3006    55534 BATINCLUDE  2993      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  3007    55568 BATINCLUDE  2993      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  3008    55582 BATINCLUDE  2993      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  3009    55597 BATINCLUDE  2993      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  3010    55610 BATINCLUDE  2993      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  3011    55625 BATINCLUDE  2993      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  3012    55636 BATINCLUDE  2993      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  3013    55643 BATINCLUDE  2993      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  3014    55656 BATINCLUDE  2993      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  3015    55686 BATINCLUDE  2993      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  3016    55702 BATINCLUDE  2993      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  3017    55744 BATINCLUDE  2993      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  3018    55780 BATINCLUDE  2993      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  3019    55793 BATINCLUDE  2993      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  3020    55832 BATINCLUDE  2993      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  3021    55843 BATINCLUDE  2993      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  3022    55854 BATINCLUDE  2993      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  3023    55867 BATINCLUDE  2993      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  3024    55913 BATINCLUDE  2993      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  3025    55940 BATINCLUDE  2993      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  3026    56003 BATINCLUDE  2993      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  3027    56038 BATINCLUDE  2993      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms
  3028    56062 BATINCLUDE  2394      15  ..C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules.gms
  3029    56071 BATINCLUDE  3028       9  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_algorithm.gms
  3030    56079 BATINCLUDE  3028      12  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_time.gms
  3031    56090 BATINCLUDE  3028      15  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_regions.gms
  3032    56096 BATINCLUDE  3028      16  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\cooperation_noncoop.gms
  3033    56107 BATINCLUDE  3028      19  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_welfare.gms
  3034    56113 BATINCLUDE  3028      20  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_economy.gms
  3035    56123 BATINCLUDE  3028      21  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_energy.gms
  3036    56135 BATINCLUDE  3028      22  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_emissions.gms
  3037    56149 BATINCLUDE  3028      23  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_knowledge.gms
  3038    56158 BATINCLUDE  3028      24  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\core_policy.gms
  3039    56179 BATINCLUDE  3028      27  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_energy_efficiency.gms
  3040    56185 BATINCLUDE  3028      28  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_hydropower.gms
  3041    56191 BATINCLUDE  3028      29  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_systint.gms
  3042    56206 BATINCLUDE  3028      30  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nuclear.gms
  3043    56212 BATINCLUDE  3028      31  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ghg.gms
  3044    56220 BATINCLUDE  3028      32  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_fgases.gms
  3045    56228 BATINCLUDE  3028      33  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_landuse.gms
  3046    56234 BATINCLUDE  3028      34  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_elbio.gms
  3047    56240 BATINCLUDE  3028      35  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiofuel.gms
  3048    56247 BATINCLUDE  3028      36  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_advbiofuel.gms
  3049    56254 BATINCLUDE  3028      37  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_ccs.gms
  3050    56261 BATINCLUDE  3028      39  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_nelcoal.gms
  3051    56275 BATINCLUDE  3028      40  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_wind.gms
  3052    56283 BATINCLUDE  3028      41  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_solar.gms
  3053    56291 BATINCLUDE  3028      42  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\pol_techno_ssp.gms
  3054    56298 BATINCLUDE  3028      44  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_oil.gms
  3055    56306 BATINCLUDE  3028      45  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_uranium.gms
  3056    56312 BATINCLUDE  3028      46  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_gas.gms
  3057    56318 BATINCLUDE  3028      47  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_coal.gms
  3058    56326 BATINCLUDE  3028      50  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_climate.gms
  3059    56344 BATINCLUDE  3028      51  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_damage.gms
  3060    56353 BATINCLUDE  3028      53  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport.gms
  3061    56359 BATINCLUDE  3028      54  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_transport_freight.gms
  3062    56371 BATINCLUDE  3028      58  ...C:\Users\Nicholas\Documents\GitHub\ECC-Project\witchmodel\modules\mod_trbiomass.gms


COMPILATION TIME     =        5.438 SECONDS      8 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 3
WITCH 5.2.0
E x e c u t i o n


**** GDX ERROR AT LINE 6179 - Unknown GDX symbol Q_EMI_ABAT

**** EXECERROR AT LINE 6179 CLEARED (EXECERROR=0)
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 4
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_brazil Using NLP From line 42246


Warning: Asynchronous solve turns holdFixed off for model witch_c_brazil
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 5
WITCH 5.2.0
Range Statistics    SOLVE witch_c_brazil Using NLP From line 42246


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 7.685E-06, 1.507E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 6.217E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 6
WITCH 5.2.0
Model Statistics    SOLVE witch_c_brazil Using NLP From line 42246


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       17,194
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,631  88 projected
NON ZERO ELEMENTS        89,571     NON LINEAR N-Z         18,865
CODE LENGTH              66,526     CONSTANT POOL             855


GENERATION TIME      =        0.875 SECONDS     73 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 7
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_canada Using NLP From line 42251


Warning: Asynchronous solve turns holdFixed off for model witch_c_canada
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 8
WITCH 5.2.0
Range Statistics    SOLVE witch_c_canada Using NLP From line 42251


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 4.326E-06, 1.916E+04] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.278E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 9
WITCH 5.2.0
Model Statistics    SOLVE witch_c_canada Using NLP From line 42251


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       16,073
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,635  60 projected
NON ZERO ELEMENTS        86,227     NON LINEAR N-Z         17,763
CODE LENGTH              62,759     CONSTANT POOL             737


GENERATION TIME      =        0.703 SECONDS     73 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 10
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_china Using NLP From line 42256


Warning: Asynchronous solve turns holdFixed off for model witch_c_china
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 11
WITCH 5.2.0
Range Statistics    SOLVE witch_c_china Using NLP From line 42256


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 4.487E-05, 3.339E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.295E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 12
WITCH 5.2.0
Model Statistics    SOLVE witch_c_china Using NLP From line 42256


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       17,017
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,636  65 projected
NON ZERO ELEMENTS        89,043     NON LINEAR N-Z         18,691
CODE LENGTH              65,977     CONSTANT POOL             795


GENERATION TIME      =        0.734 SECONDS     73 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 13
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_europe Using NLP From line 42261


Warning: Asynchronous solve turns holdFixed off for model witch_c_europe
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 14
WITCH 5.2.0
Range Statistics    SOLVE witch_c_europe Using NLP From line 42261


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 3.276E-05, 2.053E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.245E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 15
WITCH 5.2.0
Model Statistics    SOLVE witch_c_europe Using NLP From line 42261


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       17,370
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,638  95 projected
NON ZERO ELEMENTS        90,095     NON LINEAR N-Z         19,035
CODE LENGTH              67,213     CONSTANT POOL             764


GENERATION TIME      =        0.797 SECONDS     74 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 16
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_india Using NLP From line 42266


Warning: Asynchronous solve turns holdFixed off for model witch_c_india
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 17
WITCH 5.2.0
Range Statistics    SOLVE witch_c_india Using NLP From line 42266


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 8.595E-06, 2.755E+04] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.788E-19, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 18
WITCH 5.2.0
Model Statistics    SOLVE witch_c_india Using NLP From line 42266


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       16,132
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,631  146 projected
NON ZERO ELEMENTS        86,403     NON LINEAR N-Z         17,821
CODE LENGTH              62,842     CONSTANT POOL             854


GENERATION TIME      =        0.969 SECONDS     74 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 19
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_indonesia Using NLP From line 42271


Warning: Asynchronous solve turns holdFixed off for model witch_c_indonesia
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 20
WITCH 5.2.0
Range Statistics    SOLVE witch_c_indonesia Using NLP From line 42271


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 1.878E-06, 8.154E+03] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.044E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 21
WITCH 5.2.0
Model Statistics    SOLVE witch_c_indonesia Using NLP From line 42271


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       15,483
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,626  90 projected
NON ZERO ELEMENTS        84,467     NON LINEAR N-Z         17,183
CODE LENGTH              60,609     CONSTANT POOL             827


GENERATION TIME      =        0.985 SECONDS     74 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 22
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_jpnkor Using NLP From line 42276


Warning: Asynchronous solve turns holdFixed off for model witch_c_jpnkor
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 23
WITCH 5.2.0
Range Statistics    SOLVE witch_c_jpnkor Using NLP From line 42276


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 9.629E-06, 1.812E+03] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 6.993E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 24
WITCH 5.2.0
Model Statistics    SOLVE witch_c_jpnkor Using NLP From line 42276


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       13,594
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,632  116 projected
NON ZERO ELEMENTS        78,831     NON LINEAR N-Z         15,323
CODE LENGTH              54,221     CONSTANT POOL             764


GENERATION TIME      =        1.000 SECONDS     74 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 25
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_laca Using NLP From line 42281


Warning: Asynchronous solve turns holdFixed off for model witch_c_laca
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 26
WITCH 5.2.0
Range Statistics    SOLVE witch_c_laca Using NLP From line 42281


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 9.995E-06, 1.831E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.305E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 27
WITCH 5.2.0
Model Statistics    SOLVE witch_c_laca Using NLP From line 42281


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       20,026
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,640  115 projected
NON ZERO ELEMENTS        98,019     NON LINEAR N-Z         21,649
CODE LENGTH              76,270     CONSTANT POOL             855


GENERATION TIME      =        1.109 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 28
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_mena Using NLP From line 42286


Warning: Asynchronous solve turns holdFixed off for model witch_c_mena
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 29
WITCH 5.2.0
Range Statistics    SOLVE witch_c_mena Using NLP From line 42286


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 1.663E-05, 6.305E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.607E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 30
WITCH 5.2.0
Model Statistics    SOLVE witch_c_mena Using NLP From line 42286


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       18,728
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,640  134 projected
NON ZERO ELEMENTS        94,147     NON LINEAR N-Z         20,373
CODE LENGTH              71,774     CONSTANT POOL             827


GENERATION TIME      =        1.062 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 31
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_mexico Using NLP From line 42291


Warning: Asynchronous solve turns holdFixed off for model witch_c_mexico
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 32
WITCH 5.2.0
Range Statistics    SOLVE witch_c_mexico Using NLP From line 42291


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 7.273E-06, 9.339E+04] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 2.228E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 33
WITCH 5.2.0
Model Statistics    SOLVE witch_c_mexico Using NLP From line 42291


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       16,486
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,635  88 projected
NON ZERO ELEMENTS        87,459     NON LINEAR N-Z         18,169
CODE LENGTH              64,150     CONSTANT POOL             795


GENERATION TIME      =        1.031 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 34
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_oceania Using NLP From line 42296


Warning: Asynchronous solve turns holdFixed off for model witch_c_oceania
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 35
WITCH 5.2.0
Range Statistics    SOLVE witch_c_oceania Using NLP From line 42296


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 4.023E-06, 1.256E+06] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.491E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 36
WITCH 5.2.0
Model Statistics    SOLVE witch_c_oceania Using NLP From line 42296


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       19,849
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,640  59 projected
NON ZERO ELEMENTS        97,491     NON LINEAR N-Z         21,475
CODE LENGTH              75,721     CONSTANT POOL             763


GENERATION TIME      =        1.203 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 37
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_sasia Using NLP From line 42301


Warning: Asynchronous solve turns holdFixed off for model witch_c_sasia
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 38
WITCH 5.2.0
Range Statistics    SOLVE witch_c_sasia Using NLP From line 42301


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 3.273E-06, 4.264E+04] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 4.061E-14, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 39
WITCH 5.2.0
Model Statistics    SOLVE witch_c_sasia Using NLP From line 42301


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       15,542
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,631  158 projected
NON ZERO ELEMENTS        84,643     NON LINEAR N-Z         17,241
CODE LENGTH              60,842     CONSTANT POOL             829


GENERATION TIME      =        1.079 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 40
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_seasia Using NLP From line 42306


Warning: Asynchronous solve turns holdFixed off for model witch_c_seasia
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 41
WITCH 5.2.0
Range Statistics    SOLVE witch_c_seasia Using NLP From line 42306


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 8.294E-06, 1.139E+04] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.744E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 42
WITCH 5.2.0
Model Statistics    SOLVE witch_c_seasia Using NLP From line 42306


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       17,017
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,638  87 projected
NON ZERO ELEMENTS        89,043     NON LINEAR N-Z         18,691
CODE LENGTH              65,887     CONSTANT POOL             854


GENERATION TIME      =        1.156 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 43
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_southafrica Using NLP From line 42311


Warning: Asynchronous solve turns holdFixed off for model witch_c_southafrica
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 44
WITCH 5.2.0
Range Statistics    SOLVE witch_c_southafrica Using NLP From line 42311


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 7.094E-06, 7.068E+04] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 2.058E-19, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 45
WITCH 5.2.0
Model Statistics    SOLVE witch_c_southafrica Using NLP From line 42311


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       15,070
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,625  88 projected
NON ZERO ELEMENTS        83,235     NON LINEAR N-Z         16,777
CODE LENGTH              59,218     CONSTANT POOL             828


GENERATION TIME      =        1.094 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 46
WITCH 5.2.0
Setup/Generation    SOLVE witch_c_ssa Using NLP From line 42316


Warning: Asynchronous solve turns holdFixed off for model witch_c_ssa
         Check option holdFixedAsync to change this
GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 47
WITCH 5.2.0
Range Statistics    SOLVE witch_c_ssa Using NLP From line 42316


RANGE STATISTICS (ABSOLUTE NON-ZERO FINITE VALUES)

RHS       [min, max] : [ 3.974E-06, 8.341E+05] - Zero values observed as well
Bound     [min, max] : [ 1.000E-12, 1.000E+07] - Zero values observed as well
Matrix    [min, max] : [ 1.030E-20, 5.455E+04] - Zero values observed as well

GAMS 42.2.0  ef14ea53 Feb 16, 2023          WEX-WEI x86 64bit/MS Windows - 05/12/23 14:36:32 Page 48
WITCH 5.2.0
Model Statistics    SOLVE witch_c_ssa Using NLP From line 42316


LOOPS                                  run   r1
                                     siter   i1


MODEL STATISTICS

BLOCKS OF EQUATIONS          98     SINGLE EQUATIONS       19,436
BLOCKS OF VARIABLES          52     SINGLE VARIABLES       30,640  17 projected
NON ZERO ELEMENTS        96,259     NON LINEAR N-Z         21,069
CODE LENGTH              74,210     CONSTANT POOL             827


GENERATION TIME      =        1.219 SECONDS     75 MB  42.2.0 ef14ea53 WEX-WEI
GA